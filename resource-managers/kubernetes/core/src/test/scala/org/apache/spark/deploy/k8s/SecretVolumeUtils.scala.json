[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "Since you're touching this, the style is always `.exists { foo => ... }`.",
    "commit": "5278ea760d0896616b275a1f1f0ac9a7b11ec616",
    "createdAt": "2018-01-04T18:57:50Z",
    "diffHunk": "@@ -14,23 +14,20 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.spark.deploy.k8s.submit\n+package org.apache.spark.deploy.k8s\n \n import scala.collection.JavaConverters._\n \n import io.fabric8.kubernetes.api.model.{Container, Pod}\n \n private[spark] object SecretVolumeUtils {\n \n-  def podHasVolume(driverPod: Pod, volumeName: String): Boolean = {\n-    driverPod.getSpec.getVolumes.asScala.exists(volume => volume.getName == volumeName)\n+  def podHasVolume(pod: Pod, volumeName: String): Boolean = {\n+    pod.getSpec.getVolumes.asScala.exists(volume => volume.getName == volumeName)"
  }, {
    "author": {
      "login": "liyinan926"
    },
    "body": "Done.",
    "commit": "5278ea760d0896616b275a1f1f0ac9a7b11ec616",
    "createdAt": "2018-01-04T19:01:00Z",
    "diffHunk": "@@ -14,23 +14,20 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.spark.deploy.k8s.submit\n+package org.apache.spark.deploy.k8s\n \n import scala.collection.JavaConverters._\n \n import io.fabric8.kubernetes.api.model.{Container, Pod}\n \n private[spark] object SecretVolumeUtils {\n \n-  def podHasVolume(driverPod: Pod, volumeName: String): Boolean = {\n-    driverPod.getSpec.getVolumes.asScala.exists(volume => volume.getName == volumeName)\n+  def podHasVolume(pod: Pod, volumeName: String): Boolean = {\n+    pod.getSpec.getVolumes.asScala.exists(volume => volume.getName == volumeName)"
  }],
  "prId": 20148
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "Same here.",
    "commit": "5278ea760d0896616b275a1f1f0ac9a7b11ec616",
    "createdAt": "2018-01-04T18:58:00Z",
    "diffHunk": "@@ -14,23 +14,20 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.spark.deploy.k8s.submit\n+package org.apache.spark.deploy.k8s\n \n import scala.collection.JavaConverters._\n \n import io.fabric8.kubernetes.api.model.{Container, Pod}\n \n private[spark] object SecretVolumeUtils {\n \n-  def podHasVolume(driverPod: Pod, volumeName: String): Boolean = {\n-    driverPod.getSpec.getVolumes.asScala.exists(volume => volume.getName == volumeName)\n+  def podHasVolume(pod: Pod, volumeName: String): Boolean = {\n+    pod.getSpec.getVolumes.asScala.exists(volume => volume.getName == volumeName)\n   }\n \n-  def containerHasVolume(\n-      driverContainer: Container,\n-      volumeName: String,\n-      mountPath: String): Boolean = {\n-    driverContainer.getVolumeMounts.asScala.exists(volumeMount =>\n+  def containerHasVolume(container: Container, volumeName: String, mountPath: String): Boolean = {\n+    container.getVolumeMounts.asScala.exists(volumeMount =>"
  }, {
    "author": {
      "login": "liyinan926"
    },
    "body": "Done.",
    "commit": "5278ea760d0896616b275a1f1f0ac9a7b11ec616",
    "createdAt": "2018-01-04T19:01:05Z",
    "diffHunk": "@@ -14,23 +14,20 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.spark.deploy.k8s.submit\n+package org.apache.spark.deploy.k8s\n \n import scala.collection.JavaConverters._\n \n import io.fabric8.kubernetes.api.model.{Container, Pod}\n \n private[spark] object SecretVolumeUtils {\n \n-  def podHasVolume(driverPod: Pod, volumeName: String): Boolean = {\n-    driverPod.getSpec.getVolumes.asScala.exists(volume => volume.getName == volumeName)\n+  def podHasVolume(pod: Pod, volumeName: String): Boolean = {\n+    pod.getSpec.getVolumes.asScala.exists(volume => volume.getName == volumeName)\n   }\n \n-  def containerHasVolume(\n-      driverContainer: Container,\n-      volumeName: String,\n-      mountPath: String): Boolean = {\n-    driverContainer.getVolumeMounts.asScala.exists(volumeMount =>\n+  def containerHasVolume(container: Container, volumeName: String, mountPath: String): Boolean = {\n+    container.getVolumeMounts.asScala.exists(volumeMount =>"
  }],
  "prId": 20148
}]