[{
  "comments": [{
    "author": {
      "login": "mccheah"
    },
    "body": "Nit: Don't see why this doesn't belong in `KubernetesFeaturesTestUtils`",
    "commit": "b55d3f0070cbac932f0410b1a42b45d84ea493ce",
    "createdAt": "2018-05-25T18:39:19Z",
    "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.k8s\n+\n+import scala.collection.JavaConverters._\n+\n+import io.fabric8.kubernetes.api.model.Container\n+\n+private[spark] object SecretEnvUtils {\n+\n+  def containerHasEnvVar(container: Container, envVarName: String): Boolean = {"
  }, {
    "author": {
      "login": "skonto"
    },
    "body": "Ok will fix. Guys (@foxish , @liyinan926 @mccheah ) I have one thing that worries me. Yaml allows to pass as characters even the reserved ones. So if the name for the secret or the key had a character like `:`, then we don't handle this right now.  In yaml that would be escaped or we could use double quotes. Here we dont have that logic correct? Is it ok not to have the same level of expressiveness? \r\nThese cases might seem weird but could appear.  At the end of the day yaml seems close to k8s and I was wondering why we dont just specify all properties for pods (driver & executor) in the yaml format read it and set everything via that method. Long term will need to improvise to map everything to something close to java properties. I face this with affinity and anti-affinity design as well, on which I am currently working on.",
    "commit": "b55d3f0070cbac932f0410b1a42b45d84ea493ce",
    "createdAt": "2018-05-28T00:25:24Z",
    "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.k8s\n+\n+import scala.collection.JavaConverters._\n+\n+import io.fabric8.kubernetes.api.model.Container\n+\n+private[spark] object SecretEnvUtils {\n+\n+  def containerHasEnvVar(container: Container, envVarName: String): Boolean = {"
  }, {
    "author": {
      "login": "skonto"
    },
    "body": "@mccheah  the reason I added that file is because I saw already one for volume secrets: SecretVolumeUtils, but I can move it in KubernetesFeaturesTestUtils.",
    "commit": "b55d3f0070cbac932f0410b1a42b45d84ea493ce",
    "createdAt": "2018-05-28T08:40:58Z",
    "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.k8s\n+\n+import scala.collection.JavaConverters._\n+\n+import io.fabric8.kubernetes.api.model.Container\n+\n+private[spark] object SecretEnvUtils {\n+\n+  def containerHasEnvVar(container: Container, envVarName: String): Boolean = {"
  }],
  "prId": 21317
}]