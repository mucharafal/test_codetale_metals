[{
  "comments": [{
    "author": {
      "login": "mccheah"
    },
    "body": "Better to be safer here and check the protocol and the target port numbers. You can just compare against a list of expected `ContainerPort` objects - Kubernetes objects in our Java API have been good about giving us sane `equals` implementations.",
    "commit": "66d1e6247a12691a5133d9ece724537d2b5ed76a",
    "createdAt": "2018-07-31T22:07:03Z",
    "diffHunk": "@@ -87,6 +87,10 @@ class BasicDriverFeatureStepSuite extends SparkFunSuite {\n     assert(configuredPod.container.getImage === \"spark-driver:latest\")\n     assert(configuredPod.container.getImagePullPolicy === CONTAINER_IMAGE_PULL_POLICY)\n \n+    val expectedPortNames = Set(DRIVER_PORT_NAME, BLOCK_MANAGER_PORT_NAME, UI_PORT_NAME)\n+    val foundPortNames = configuredPod.container.getPorts.asScala.map(port => port.getName).toSet"
  }],
  "prId": 21884
}, {
  "comments": [{
    "author": {
      "login": "liyinan926"
    },
    "body": "Looks like the indention here is incorrect.",
    "commit": "66d1e6247a12691a5133d9ece724537d2b5ed76a",
    "createdAt": "2018-08-01T16:32:15Z",
    "diffHunk": "@@ -203,4 +212,12 @@ class BasicDriverFeatureStepSuite extends SparkFunSuite {\n       \"spark.files\" -> \"https://localhost:9000/file1.txt,/opt/spark/file2.txt\")\n     assert(additionalProperties === expectedSparkConf)\n   }\n+\n+  def containerPort(name: String, portNumber: Int): ContainerPort = {\n+    val port = new ContainerPort()\n+    port.setName(name)"
  }, {
    "author": {
      "login": "adelbertc"
    },
    "body": "@liyinan926 Is it? It looks OK on my end I think unless I'm missing something",
    "commit": "66d1e6247a12691a5133d9ece724537d2b5ed76a",
    "createdAt": "2018-08-01T18:26:32Z",
    "diffHunk": "@@ -203,4 +212,12 @@ class BasicDriverFeatureStepSuite extends SparkFunSuite {\n       \"spark.files\" -> \"https://localhost:9000/file1.txt,/opt/spark/file2.txt\")\n     assert(additionalProperties === expectedSparkConf)\n   }\n+\n+  def containerPort(name: String, portNumber: Int): ContainerPort = {\n+    val port = new ContainerPort()\n+    port.setName(name)"
  }, {
    "author": {
      "login": "liyinan926"
    },
    "body": "Sorry my bad, I misread it as something like:\r\n```\r\nreturn new ContainerPort()\r\n  .setName(name)\r\n ...\r\n```",
    "commit": "66d1e6247a12691a5133d9ece724537d2b5ed76a",
    "createdAt": "2018-08-01T18:32:43Z",
    "diffHunk": "@@ -203,4 +212,12 @@ class BasicDriverFeatureStepSuite extends SparkFunSuite {\n       \"spark.files\" -> \"https://localhost:9000/file1.txt,/opt/spark/file2.txt\")\n     assert(additionalProperties === expectedSparkConf)\n   }\n+\n+  def containerPort(name: String, portNumber: Int): ContainerPort = {\n+    val port = new ContainerPort()\n+    port.setName(name)"
  }],
  "prId": 21884
}, {
  "comments": [{
    "author": {
      "login": "mccheah"
    },
    "body": "Use `ContainerPortBuilder`",
    "commit": "66d1e6247a12691a5133d9ece724537d2b5ed76a",
    "createdAt": "2018-08-01T19:13:13Z",
    "diffHunk": "@@ -203,4 +212,12 @@ class BasicDriverFeatureStepSuite extends SparkFunSuite {\n       \"spark.files\" -> \"https://localhost:9000/file1.txt,/opt/spark/file2.txt\")\n     assert(additionalProperties === expectedSparkConf)\n   }\n+\n+  def containerPort(name: String, portNumber: Int): ContainerPort = {\n+    val port = new ContainerPort()"
  }, {
    "author": {
      "login": "adelbertc"
    },
    "body": "Done",
    "commit": "66d1e6247a12691a5133d9ece724537d2b5ed76a",
    "createdAt": "2018-08-01T20:48:53Z",
    "diffHunk": "@@ -203,4 +212,12 @@ class BasicDriverFeatureStepSuite extends SparkFunSuite {\n       \"spark.files\" -> \"https://localhost:9000/file1.txt,/opt/spark/file2.txt\")\n     assert(additionalProperties === expectedSparkConf)\n   }\n+\n+  def containerPort(name: String, portNumber: Int): ContainerPort = {\n+    val port = new ContainerPort()"
  }],
  "prId": 21884
}]