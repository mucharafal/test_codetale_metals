[{
  "comments": [{
    "author": {
      "login": "ueshin"
    },
    "body": "nit: remove `s`.\r\nnit: move a space at the beginning of the string of the next line to the end of the string of this line.",
    "commit": "28343fb50310826bc9962e785f25d1af9b3c3f4a",
    "createdAt": "2017-12-18T10:18:37Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.rest.k8s\n+\n+import java.io.{File, FileInputStream}\n+import java.util.Properties\n+\n+import scala.collection.JavaConverters._\n+\n+import com.google.common.collect.Maps\n+\n+import org.apache.spark.SparkConf\n+import org.apache.spark.internal.config.{ConfigReader, SparkConfigProvider}\n+import org.apache.spark.util.Utils\n+\n+private[spark] object SparkConfPropertiesParser {\n+\n+  def getSparkConfFromPropertiesFile(propertiesFile: File): SparkConf = {\n+    val sparkConf = new SparkConf(true)\n+\n+    if (!propertiesFile.isFile) {\n+      throw new IllegalArgumentException(s\"Server properties file given at\" +"
  }],
  "prId": 19954
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "This could be in `ConfigurationUtils` instead of adding another object with a single method?\r\n\r\nI'd probably just rename that object to `KubernetesUtils` or something and also include the code from `InitContainerUtil` in there.",
    "commit": "28343fb50310826bc9962e785f25d1af9b3c3f4a",
    "createdAt": "2017-12-19T22:18:58Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.rest.k8s\n+\n+import java.io.{File, FileInputStream}\n+import java.util.Properties\n+\n+import scala.collection.JavaConverters._\n+\n+import com.google.common.collect.Maps\n+\n+import org.apache.spark.SparkConf\n+import org.apache.spark.internal.config.{ConfigReader, SparkConfigProvider}\n+import org.apache.spark.util.Utils\n+\n+private[spark] object SparkConfPropertiesParser {\n+\n+  def getSparkConfFromPropertiesFile(propertiesFile: File): SparkConf = {"
  }, {
    "author": {
      "login": "liyinan926"
    },
    "body": "Yes, done.",
    "commit": "28343fb50310826bc9962e785f25d1af9b3c3f4a",
    "createdAt": "2017-12-19T22:58:54Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.rest.k8s\n+\n+import java.io.{File, FileInputStream}\n+import java.util.Properties\n+\n+import scala.collection.JavaConverters._\n+\n+import com.google.common.collect.Maps\n+\n+import org.apache.spark.SparkConf\n+import org.apache.spark.internal.config.{ConfigReader, SparkConfigProvider}\n+import org.apache.spark.util.Utils\n+\n+private[spark] object SparkConfPropertiesParser {\n+\n+  def getSparkConfFromPropertiesFile(propertiesFile: File): SparkConf = {"
  }],
  "prId": 19954
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "There's probably already a method or a combination of calls in the `Utils` class that does what you want. e.g. `loadDefaultSparkProperties` or `getPropertiesFromFile` or some other.",
    "commit": "28343fb50310826bc9962e785f25d1af9b3c3f4a",
    "createdAt": "2017-12-19T22:20:37Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.rest.k8s\n+\n+import java.io.{File, FileInputStream}\n+import java.util.Properties\n+\n+import scala.collection.JavaConverters._\n+\n+import com.google.common.collect.Maps\n+\n+import org.apache.spark.SparkConf\n+import org.apache.spark.internal.config.{ConfigReader, SparkConfigProvider}\n+import org.apache.spark.util.Utils\n+\n+private[spark] object SparkConfPropertiesParser {\n+\n+  def getSparkConfFromPropertiesFile(propertiesFile: File): SparkConf = {\n+    val sparkConf = new SparkConf(true)\n+\n+    if (!propertiesFile.isFile) {\n+      throw new IllegalArgumentException(\"Server properties file given at \" +\n+        s\"${propertiesFile.getAbsoluteFile} does not exist or is not a file.\")\n+    }\n+\n+    val properties = new Properties"
  }, {
    "author": {
      "login": "liyinan926"
    },
    "body": "Yes, `Utils.loadDefaultSparkProperties` works.",
    "commit": "28343fb50310826bc9962e785f25d1af9b3c3f4a",
    "createdAt": "2017-12-20T00:11:38Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.rest.k8s\n+\n+import java.io.{File, FileInputStream}\n+import java.util.Properties\n+\n+import scala.collection.JavaConverters._\n+\n+import com.google.common.collect.Maps\n+\n+import org.apache.spark.SparkConf\n+import org.apache.spark.internal.config.{ConfigReader, SparkConfigProvider}\n+import org.apache.spark.util.Utils\n+\n+private[spark] object SparkConfPropertiesParser {\n+\n+  def getSparkConfFromPropertiesFile(propertiesFile: File): SparkConf = {\n+    val sparkConf = new SparkConf(true)\n+\n+    if (!propertiesFile.isFile) {\n+      throw new IllegalArgumentException(\"Server properties file given at \" +\n+        s\"${propertiesFile.getAbsoluteFile} does not exist or is not a file.\")\n+    }\n+\n+    val properties = new Properties"
  }],
  "prId": 19954
}]