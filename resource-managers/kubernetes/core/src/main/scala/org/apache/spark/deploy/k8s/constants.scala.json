[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "Not used. I'd double check all these are really needed.",
    "commit": "b85cfc4038c8de9340b78d10edf88ab76dd90ba3",
    "createdAt": "2017-10-17T20:54:42Z",
    "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.k8s\n+\n+package object constants {\n+  // Labels\n+  private[spark] val SPARK_APP_ID_LABEL = \"spark-app-selector\"\n+  private[spark] val SPARK_EXECUTOR_ID_LABEL = \"spark-exec-id\"\n+  private[spark] val SPARK_ROLE_LABEL = \"spark-role\"\n+  private[spark] val SPARK_POD_DRIVER_ROLE = \"driver\"\n+  private[spark] val SPARK_POD_EXECUTOR_ROLE = \"executor\"\n+\n+  // Credentials secrets\n+  private[spark] val DRIVER_CREDENTIALS_SECRETS_BASE_DIR =\n+    \"/mnt/secrets/spark-kubernetes-credentials\"\n+  private[spark] val DRIVER_CREDENTIALS_CA_CERT_SECRET_NAME = \"ca-cert\"\n+  private[spark] val DRIVER_CREDENTIALS_CA_CERT_PATH =\n+    s\"$DRIVER_CREDENTIALS_SECRETS_BASE_DIR/$DRIVER_CREDENTIALS_CA_CERT_SECRET_NAME\"\n+  private[spark] val DRIVER_CREDENTIALS_CLIENT_KEY_SECRET_NAME = \"client-key\"\n+  private[spark] val DRIVER_CREDENTIALS_CLIENT_KEY_PATH =\n+    s\"$DRIVER_CREDENTIALS_SECRETS_BASE_DIR/$DRIVER_CREDENTIALS_CLIENT_KEY_SECRET_NAME\"\n+  private[spark] val DRIVER_CREDENTIALS_CLIENT_CERT_SECRET_NAME = \"client-cert\"\n+  private[spark] val DRIVER_CREDENTIALS_CLIENT_CERT_PATH =\n+    s\"$DRIVER_CREDENTIALS_SECRETS_BASE_DIR/$DRIVER_CREDENTIALS_CLIENT_CERT_SECRET_NAME\"\n+  private[spark] val DRIVER_CREDENTIALS_OAUTH_TOKEN_SECRET_NAME = \"oauth-token\"\n+  private[spark] val DRIVER_CREDENTIALS_OAUTH_TOKEN_PATH =\n+    s\"$DRIVER_CREDENTIALS_SECRETS_BASE_DIR/$DRIVER_CREDENTIALS_OAUTH_TOKEN_SECRET_NAME\"\n+  private[spark] val DRIVER_CREDENTIALS_SECRET_VOLUME_NAME = \"kubernetes-credentials\"\n+\n+  // Default and fixed ports\n+  private[spark] val DEFAULT_DRIVER_PORT = 7078\n+  private[spark] val DEFAULT_BLOCKMANAGER_PORT = 7079\n+  private[spark] val DEFAULT_UI_PORT = 4040\n+  private[spark] val BLOCK_MANAGER_PORT_NAME = \"blockmanager\"\n+  private[spark] val DRIVER_PORT_NAME = \"driver-rpc-port\"\n+  private[spark] val EXECUTOR_PORT_NAME = \"executor\"\n+\n+  // Environment Variables\n+  private[spark] val ENV_EXECUTOR_PORT = \"SPARK_EXECUTOR_PORT\"\n+  private[spark] val ENV_DRIVER_URL = \"SPARK_DRIVER_URL\"\n+  private[spark] val ENV_EXECUTOR_CORES = \"SPARK_EXECUTOR_CORES\"\n+  private[spark] val ENV_EXECUTOR_MEMORY = \"SPARK_EXECUTOR_MEMORY\"\n+  private[spark] val ENV_APPLICATION_ID = \"SPARK_APPLICATION_ID\"\n+  private[spark] val ENV_EXECUTOR_ID = \"SPARK_EXECUTOR_ID\"\n+  private[spark] val ENV_EXECUTOR_POD_IP = \"SPARK_EXECUTOR_POD_IP\"\n+  private[spark] val ENV_DRIVER_MEMORY = \"SPARK_DRIVER_MEMORY\"\n+  private[spark] val ENV_SUBMIT_EXTRA_CLASSPATH = \"SPARK_SUBMIT_EXTRA_CLASSPATH\""
  }],
  "prId": 19468
}, {
  "comments": [{
    "author": {
      "login": "ueshin"
    },
    "body": "nit: How about making this object `private[spark]` and remove it of each value?",
    "commit": "b85cfc4038c8de9340b78d10edf88ab76dd90ba3",
    "createdAt": "2017-11-21T08:26:58Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.k8s\n+\n+package object constants {"
  }, {
    "author": {
      "login": "liyinan926"
    },
    "body": "Done.",
    "commit": "b85cfc4038c8de9340b78d10edf88ab76dd90ba3",
    "createdAt": "2017-11-21T19:15:41Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.k8s\n+\n+package object constants {"
  }],
  "prId": 19468
}]