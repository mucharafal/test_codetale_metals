[{
  "comments": [{
    "author": {
      "login": "skonto"
    },
    "body": "`requireNandDefined` is spelling ok? Also that function is not used, should be removed or will be used later when PR will be updated?",
    "commit": "dd95fcab754e71e9465f4e46818c3cef09e86c8b",
    "createdAt": "2018-07-03T20:09:59Z",
    "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.k8s.features\n+\n+private[spark] object OptionRequirements {\n+\n+  def requireBothOrNeitherDefined(\n+      opt1: Option[_],\n+      opt2: Option[_],\n+      errMessageWhenFirstIsMissing: String,\n+      errMessageWhenSecondIsMissing: String): Unit = {\n+    requireSecondIfFirstIsDefined(opt1, opt2, errMessageWhenSecondIsMissing)\n+    requireSecondIfFirstIsDefined(opt2, opt1, errMessageWhenFirstIsMissing)\n+  }\n+\n+  def requireSecondIfFirstIsDefined(\n+      opt1: Option[_], opt2: Option[_], errMessageWhenSecondIsMissing: String): Unit = {\n+    opt1.foreach { _ =>\n+      require(opt2.isDefined, errMessageWhenSecondIsMissing)\n+    }\n+  }\n+\n+  def requireNandDefined(opt1: Option[_], opt2: Option[_], errMessage: String): Unit = {"
  }],
  "prId": 21669
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "These methods seem to fit just fine in `KubernetesUtils`, instead of adding a new object for them.",
    "commit": "dd95fcab754e71e9465f4e46818c3cef09e86c8b",
    "createdAt": "2018-09-05T21:27:40Z",
    "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.k8s.features\n+\n+private[spark] object OptionRequirements {"
  }],
  "prId": 21669
}]