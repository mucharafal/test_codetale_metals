[{
  "comments": [{
    "author": {
      "login": "jiangxb1987"
    },
    "body": "This function is never used.",
    "commit": "cbcd30ea0a5eb75ed831f50707bc97035c0a3371",
    "createdAt": "2017-11-27T14:49:00Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.k8s\n+\n+import org.apache.spark.SparkConf\n+\n+private[spark] object ConfigurationUtils {\n+\n+  /**\n+   * Extract and parse Spark configuration properties with a given name prefix and\n+   * return the result as a Map. Keys must not have more than one value.\n+   *\n+   * @param sparkConf Spark configuration\n+   * @param prefix the given property name prefix\n+   * @return a Map storing the configuration property keys and values\n+   */\n+  def parsePrefixedKeyValuePairs(\n+      sparkConf: SparkConf,\n+      prefix: String): Map[String, String] = {\n+    sparkConf.getAllWithPrefix(prefix).toMap\n+  }\n+\n+  def requireSecondIfFirstIsDefined("
  }, {
    "author": {
      "login": "liyinan926"
    },
    "body": "Removed.",
    "commit": "cbcd30ea0a5eb75ed831f50707bc97035c0a3371",
    "createdAt": "2017-11-28T00:46:27Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.k8s\n+\n+import org.apache.spark.SparkConf\n+\n+private[spark] object ConfigurationUtils {\n+\n+  /**\n+   * Extract and parse Spark configuration properties with a given name prefix and\n+   * return the result as a Map. Keys must not have more than one value.\n+   *\n+   * @param sparkConf Spark configuration\n+   * @param prefix the given property name prefix\n+   * @return a Map storing the configuration property keys and values\n+   */\n+  def parsePrefixedKeyValuePairs(\n+      sparkConf: SparkConf,\n+      prefix: String): Map[String, String] = {\n+    sparkConf.getAllWithPrefix(prefix).toMap\n+  }\n+\n+  def requireSecondIfFirstIsDefined("
  }],
  "prId": 19717
}]