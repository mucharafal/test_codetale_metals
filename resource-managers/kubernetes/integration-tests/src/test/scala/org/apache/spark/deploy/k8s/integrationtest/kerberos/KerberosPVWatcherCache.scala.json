[{
  "comments": [{
    "author": {
      "login": "liyinan926"
    },
    "body": "With `StatefulSet`s, you probably don't need this.",
    "commit": "0de8c87f971d9dccb681678faffe92231a1f0c38",
    "createdAt": "2018-10-30T23:38:58Z",
    "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.k8s.integrationtest.kerberos\n+\n+import io.fabric8.kubernetes.api.model.{PersistentVolume, PersistentVolumeClaim}\n+import io.fabric8.kubernetes.client.{KubernetesClientException, Watch, Watcher}\n+import io.fabric8.kubernetes.client.Watcher.Action\n+import org.scalatest.Matchers\n+import org.scalatest.concurrent.Eventually\n+import scala.collection.JavaConverters._\n+\n+import org.apache.spark.deploy.k8s.integrationtest.KubernetesSuite.{INTERVAL, TIMEOUT}\n+import org.apache.spark.internal.Logging\n+\n+/**\n+ * This class is responsible for ensuring that the persistent volume claims are bounded\n+ * to the correct persistent volume and that they are both created before launching the",
    "line": 32
  }, {
    "author": {
      "login": "mccheah"
    },
    "body": "+1",
    "commit": "0de8c87f971d9dccb681678faffe92231a1f0c38",
    "createdAt": "2018-11-01T16:37:10Z",
    "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.k8s.integrationtest.kerberos\n+\n+import io.fabric8.kubernetes.api.model.{PersistentVolume, PersistentVolumeClaim}\n+import io.fabric8.kubernetes.client.{KubernetesClientException, Watch, Watcher}\n+import io.fabric8.kubernetes.client.Watcher.Action\n+import org.scalatest.Matchers\n+import org.scalatest.concurrent.Eventually\n+import scala.collection.JavaConverters._\n+\n+import org.apache.spark.deploy.k8s.integrationtest.KubernetesSuite.{INTERVAL, TIMEOUT}\n+import org.apache.spark.internal.Logging\n+\n+/**\n+ * This class is responsible for ensuring that the persistent volume claims are bounded\n+ * to the correct persistent volume and that they are both created before launching the",
    "line": 32
  }],
  "prId": 22608
}]