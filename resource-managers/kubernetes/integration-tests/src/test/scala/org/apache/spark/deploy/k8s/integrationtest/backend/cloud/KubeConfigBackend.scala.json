[{
  "comments": [{
    "author": {
      "login": "mccheah"
    },
    "body": "Just use a default value for `context` instead of checking for null below.",
    "commit": "cf7ef362352365c7aab4c927db3ea8240fcfaf21",
    "createdAt": "2018-10-25T18:10:31Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.k8s.integrationtest.backend.cloud\n+\n+import java.nio.file.Paths\n+\n+import io.fabric8.kubernetes.client.{Config, DefaultKubernetesClient}\n+import org.apache.spark.deploy.k8s.integrationtest.TestConstants\n+import org.apache.spark.deploy.k8s.integrationtest.backend.IntegrationTestBackend\n+import org.apache.spark.internal.Logging\n+\n+private[spark] class KubeConfigBackend(var context: String)",
    "line": 29
  }, {
    "author": {
      "login": "rvesse"
    },
    "body": "Refactored to avoid this",
    "commit": "cf7ef362352365c7aab4c927db3ea8240fcfaf21",
    "createdAt": "2018-10-26T09:46:52Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.k8s.integrationtest.backend.cloud\n+\n+import java.nio.file.Paths\n+\n+import io.fabric8.kubernetes.client.{Config, DefaultKubernetesClient}\n+import org.apache.spark.deploy.k8s.integrationtest.TestConstants\n+import org.apache.spark.deploy.k8s.integrationtest.backend.IntegrationTestBackend\n+import org.apache.spark.internal.Logging\n+\n+private[spark] class KubeConfigBackend(var context: String)",
    "line": 29
  }],
  "prId": 22805
}, {
  "comments": [{
    "author": {
      "login": "mccheah"
    },
    "body": "Setting system properties is a little worrisome, for example what if something else sets this system property as well? Would much prefer to treat system properties as immutable after the JVM starts.",
    "commit": "cf7ef362352365c7aab4c927db3ea8240fcfaf21",
    "createdAt": "2018-10-25T18:12:13Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.k8s.integrationtest.backend.cloud\n+\n+import java.nio.file.Paths\n+\n+import io.fabric8.kubernetes.client.{Config, DefaultKubernetesClient}\n+import org.apache.spark.deploy.k8s.integrationtest.TestConstants\n+import org.apache.spark.deploy.k8s.integrationtest.backend.IntegrationTestBackend\n+import org.apache.spark.internal.Logging\n+\n+private[spark] class KubeConfigBackend(var context: String)\n+  extends IntegrationTestBackend with Logging {\n+  // If no context supplied see if one was specified in the system properties supplied\n+  // to the tests\n+  if (context == null) {\n+    context = System.getProperty(TestConstants.CONFIG_KEY_KUBE_CONFIG_CONTEXT)\n+  }\n+  logInfo(s\"K8S Integration tests will run against \" +\n+    s\"${if (context != null) s\"context ${context}\" else \"default context\"} \" +\n+    s\" from users K8S config file\")\n+\n+  private var defaultClient: DefaultKubernetesClient = _\n+\n+  override def initialize(): Unit = {\n+    // Auto-configure K8S client from K8S config file\n+    System.setProperty(Config.KUBERNETES_AUTH_TRYKUBECONFIG_SYSTEM_PROPERTY, \"true\");"
  }, {
    "author": {
      "login": "rvesse"
    },
    "body": "Looked over what Fabric 8 client was doing behind the scenes and realised the values I was setting explicitly are the defaults anyway so removed this unnecessary manipulation",
    "commit": "cf7ef362352365c7aab4c927db3ea8240fcfaf21",
    "createdAt": "2018-10-26T09:46:40Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.k8s.integrationtest.backend.cloud\n+\n+import java.nio.file.Paths\n+\n+import io.fabric8.kubernetes.client.{Config, DefaultKubernetesClient}\n+import org.apache.spark.deploy.k8s.integrationtest.TestConstants\n+import org.apache.spark.deploy.k8s.integrationtest.backend.IntegrationTestBackend\n+import org.apache.spark.internal.Logging\n+\n+private[spark] class KubeConfigBackend(var context: String)\n+  extends IntegrationTestBackend with Logging {\n+  // If no context supplied see if one was specified in the system properties supplied\n+  // to the tests\n+  if (context == null) {\n+    context = System.getProperty(TestConstants.CONFIG_KEY_KUBE_CONFIG_CONTEXT)\n+  }\n+  logInfo(s\"K8S Integration tests will run against \" +\n+    s\"${if (context != null) s\"context ${context}\" else \"default context\"} \" +\n+    s\" from users K8S config file\")\n+\n+  private var defaultClient: DefaultKubernetesClient = _\n+\n+  override def initialize(): Unit = {\n+    // Auto-configure K8S client from K8S config file\n+    System.setProperty(Config.KUBERNETES_AUTH_TRYKUBECONFIG_SYSTEM_PROPERTY, \"true\");"
  }],
  "prId": 22805
}, {
  "comments": [{
    "author": {
      "login": "liyinan926"
    },
    "body": "What if the input `context` is null, e.g., if `CONFIG_KEY_KUBE_CONFIG_CONTEXT` is not defined?",
    "commit": "cf7ef362352365c7aab4c927db3ea8240fcfaf21",
    "createdAt": "2018-10-30T15:52:07Z",
    "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.deploy.k8s.integrationtest.backend.cloud\n+\n+import java.nio.file.Paths\n+\n+import io.fabric8.kubernetes.client.utils.Utils\n+import io.fabric8.kubernetes.client.{Config, DefaultKubernetesClient}\n+import org.apache.commons.lang3.StringUtils\n+import org.apache.spark.deploy.k8s.integrationtest.TestConstants\n+import org.apache.spark.deploy.k8s.integrationtest.backend.IntegrationTestBackend\n+import org.apache.spark.internal.Logging\n+import org.apache.spark.util.Utils.checkAndGetK8sMasterUrl\n+\n+private[spark] class KubeConfigBackend(var context: String)",
    "line": 29
  }],
  "prId": 22805
}]