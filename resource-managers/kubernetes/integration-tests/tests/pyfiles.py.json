[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "shall we stick to `driver_version` name? `getSysVer` -> `get_sys_ver` too",
    "commit": "bbc2e708844fbcb18eacbfc404d75f67f17818d3",
    "createdAt": "2019-08-12T02:11:20Z",
    "diffHunk": "@@ -35,4 +36,11 @@\n     # Begin of Python container checks\n     version_check(sys.argv[1], 2 if sys.argv[1] == \"python\" else 3)\n \n+    # Check python executable at executors\n+    spark.catalog.registerFunction(\"getSysVer\",\n+                                   lambda: \"%d.%d\" % sys.version_info[:2], StringType())\n+    [row] = spark.sql(\"SELECT getSysVer()\").collect()\n+    driverVersion = \"%d.%d\" % sys.version_info[:2]"
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "Yes.",
    "commit": "bbc2e708844fbcb18eacbfc404d75f67f17818d3",
    "createdAt": "2019-08-12T04:39:14Z",
    "diffHunk": "@@ -35,4 +36,11 @@\n     # Begin of Python container checks\n     version_check(sys.argv[1], 2 if sys.argv[1] == \"python\" else 3)\n \n+    # Check python executable at executors\n+    spark.catalog.registerFunction(\"getSysVer\",\n+                                   lambda: \"%d.%d\" % sys.version_info[:2], StringType())\n+    [row] = spark.sql(\"SELECT getSysVer()\").collect()\n+    driverVersion = \"%d.%d\" % sys.version_info[:2]"
  }],
  "prId": 25411
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Let's use `spark.udf.register`. `spark.catalog.registerFunction` is deprecated as of SPARK-23122",
    "commit": "bbc2e708844fbcb18eacbfc404d75f67f17818d3",
    "createdAt": "2019-08-12T02:13:52Z",
    "diffHunk": "@@ -35,4 +36,11 @@\n     # Begin of Python container checks\n     version_check(sys.argv[1], 2 if sys.argv[1] == \"python\" else 3)\n \n+    # Check python executable at executors\n+    spark.catalog.registerFunction(\"getSysVer\","
  }],
  "prId": 25411
}]