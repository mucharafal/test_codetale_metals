[{
  "comments": [{
    "author": {
      "login": "ueshin"
    },
    "body": "nit: could you add a line break at the end of the file?",
    "commit": "cbcd30ea0a5eb75ed831f50707bc97035c0a3371",
    "createdAt": "2017-11-28T07:46:21Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+FROM spark-base\n+\n+# If this docker file is being used in the context of building your images from a Spark distribution, the docker build\n+# command should be invoked from the top level directory of the Spark distribution. E.g.:\n+# docker build -t spark-driver:latest -f dockerfiles/driver/Dockerfile .\n+\n+COPY examples /opt/spark/examples\n+\n+CMD SPARK_CLASSPATH=\"${SPARK_HOME}/jars/*\" && \\\n+    env | grep SPARK_JAVA_OPT_ | sed 's/[^=]*=\\(.*\\)/\\1/g' > /tmp/java_opts.txt && \\\n+    readarray -t SPARK_DRIVER_JAVA_OPTS < /tmp/java_opts.txt && \\\n+    if ! [ -z ${SPARK_MOUNTED_CLASSPATH+x} ]; then SPARK_CLASSPATH=\"$SPARK_MOUNTED_CLASSPATH:$SPARK_CLASSPATH\"; fi && \\\n+    if ! [ -z ${SPARK_SUBMIT_EXTRA_CLASSPATH+x} ]; then SPARK_CLASSPATH=\"$SPARK_SUBMIT_EXTRA_CLASSPATH:$SPARK_CLASSPATH\"; fi && \\\n+    ${JAVA_HOME}/bin/java \"${SPARK_DRIVER_JAVA_OPTS[@]}\" -cp \"$SPARK_CLASSPATH\" -Xms$SPARK_DRIVER_MEMORY -Xmx$SPARK_DRIVER_MEMORY -Dspark.driver.bindAddress=$SPARK_DRIVER_BIND_ADDRESS $SPARK_DRIVER_CLASS $SPARK_DRIVER_ARGS",
    "line": 34
  }, {
    "author": {
      "login": "liyinan926"
    },
    "body": "Done.",
    "commit": "cbcd30ea0a5eb75ed831f50707bc97035c0a3371",
    "createdAt": "2017-11-28T16:34:53Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+FROM spark-base\n+\n+# If this docker file is being used in the context of building your images from a Spark distribution, the docker build\n+# command should be invoked from the top level directory of the Spark distribution. E.g.:\n+# docker build -t spark-driver:latest -f dockerfiles/driver/Dockerfile .\n+\n+COPY examples /opt/spark/examples\n+\n+CMD SPARK_CLASSPATH=\"${SPARK_HOME}/jars/*\" && \\\n+    env | grep SPARK_JAVA_OPT_ | sed 's/[^=]*=\\(.*\\)/\\1/g' > /tmp/java_opts.txt && \\\n+    readarray -t SPARK_DRIVER_JAVA_OPTS < /tmp/java_opts.txt && \\\n+    if ! [ -z ${SPARK_MOUNTED_CLASSPATH+x} ]; then SPARK_CLASSPATH=\"$SPARK_MOUNTED_CLASSPATH:$SPARK_CLASSPATH\"; fi && \\\n+    if ! [ -z ${SPARK_SUBMIT_EXTRA_CLASSPATH+x} ]; then SPARK_CLASSPATH=\"$SPARK_SUBMIT_EXTRA_CLASSPATH:$SPARK_CLASSPATH\"; fi && \\\n+    ${JAVA_HOME}/bin/java \"${SPARK_DRIVER_JAVA_OPTS[@]}\" -cp \"$SPARK_CLASSPATH\" -Xms$SPARK_DRIVER_MEMORY -Xmx$SPARK_DRIVER_MEMORY -Dspark.driver.bindAddress=$SPARK_DRIVER_BIND_ADDRESS $SPARK_DRIVER_CLASS $SPARK_DRIVER_ARGS",
    "line": 34
  }],
  "prId": 19717
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "what are the core differences in driver vs executor image, other than the `SPARK_DRIVER*` env and other config?\r\nwe could consider switching in a docker-entrypoint.sh script like in https://github.com/apache/flink/blob/master/flink-contrib/docker-flink/docker-entrypoint.sh and have one image instead.\r\n",
    "commit": "cbcd30ea0a5eb75ed831f50707bc97035c0a3371",
    "createdAt": "2017-12-02T18:45:07Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+FROM spark-base\n+\n+# If this docker file is being used in the context of building your images from a Spark distribution, the docker build\n+# command should be invoked from the top level directory of the Spark distribution. E.g.:\n+# docker build -t spark-driver:latest -f dockerfiles/driver/Dockerfile .\n+\n+COPY examples /opt/spark/examples\n+\n+CMD SPARK_CLASSPATH=\"${SPARK_HOME}/jars/*\" && \\\n+    env | grep SPARK_JAVA_OPT_ | sed 's/[^=]*=\\(.*\\)/\\1/g' > /tmp/java_opts.txt && \\\n+    readarray -t SPARK_DRIVER_JAVA_OPTS < /tmp/java_opts.txt && \\\n+    if ! [ -z ${SPARK_MOUNTED_CLASSPATH+x} ]; then SPARK_CLASSPATH=\"$SPARK_MOUNTED_CLASSPATH:$SPARK_CLASSPATH\"; fi && \\\n+    if ! [ -z ${SPARK_SUBMIT_EXTRA_CLASSPATH+x} ]; then SPARK_CLASSPATH=\"$SPARK_SUBMIT_EXTRA_CLASSPATH:$SPARK_CLASSPATH\"; fi && \\\n+    ${JAVA_HOME}/bin/java \"${SPARK_DRIVER_JAVA_OPTS[@]}\" -cp \"$SPARK_CLASSPATH\" -Xms$SPARK_DRIVER_MEMORY -Xmx$SPARK_DRIVER_MEMORY -Dspark.driver.bindAddress=$SPARK_DRIVER_BIND_ADDRESS $SPARK_DRIVER_CLASS $SPARK_DRIVER_ARGS",
    "line": 34
  }, {
    "author": {
      "login": "liyinan926"
    },
    "body": "I think this is debatable. They have some env variables with similar purposes, but they also have role-specific arguments/properties that probably make sense to warrant separate images.",
    "commit": "cbcd30ea0a5eb75ed831f50707bc97035c0a3371",
    "createdAt": "2017-12-04T06:31:54Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+FROM spark-base\n+\n+# If this docker file is being used in the context of building your images from a Spark distribution, the docker build\n+# command should be invoked from the top level directory of the Spark distribution. E.g.:\n+# docker build -t spark-driver:latest -f dockerfiles/driver/Dockerfile .\n+\n+COPY examples /opt/spark/examples\n+\n+CMD SPARK_CLASSPATH=\"${SPARK_HOME}/jars/*\" && \\\n+    env | grep SPARK_JAVA_OPT_ | sed 's/[^=]*=\\(.*\\)/\\1/g' > /tmp/java_opts.txt && \\\n+    readarray -t SPARK_DRIVER_JAVA_OPTS < /tmp/java_opts.txt && \\\n+    if ! [ -z ${SPARK_MOUNTED_CLASSPATH+x} ]; then SPARK_CLASSPATH=\"$SPARK_MOUNTED_CLASSPATH:$SPARK_CLASSPATH\"; fi && \\\n+    if ! [ -z ${SPARK_SUBMIT_EXTRA_CLASSPATH+x} ]; then SPARK_CLASSPATH=\"$SPARK_SUBMIT_EXTRA_CLASSPATH:$SPARK_CLASSPATH\"; fi && \\\n+    ${JAVA_HOME}/bin/java \"${SPARK_DRIVER_JAVA_OPTS[@]}\" -cp \"$SPARK_CLASSPATH\" -Xms$SPARK_DRIVER_MEMORY -Xmx$SPARK_DRIVER_MEMORY -Dspark.driver.bindAddress=$SPARK_DRIVER_BIND_ADDRESS $SPARK_DRIVER_CLASS $SPARK_DRIVER_ARGS",
    "line": 34
  }],
  "prId": 19717
}]