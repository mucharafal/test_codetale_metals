[{
  "comments": [{
    "author": {
      "login": "jerryshao"
    },
    "body": "In case this is the metrics output:\r\n\r\n```\r\n-- Gauges ----------------------------------------------------------------------\r\napplicationMaster.numContainersPendingAllocate\r\n             value = 0\r\napplicationMaster.numExecutorsFailed\r\n             value = 3\r\napplicationMaster.numExecutorsRunning\r\n             value = 9\r\napplicationMaster.numLocalityAwareTasks\r\n             value = 0\r\napplicationMaster.numReleasedContainers\r\n             value = 0\r\n...\r\n```\r\n\r\nI would suggest to add application id as a prefix to differentiate between different apps.",
    "commit": "0b86788e7ec7b367c779cb5517f9dd294f99dd4b",
    "createdAt": "2018-07-17T03:43:12Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.yarn\n+\n+import com.codahale.metrics.{Gauge, MetricRegistry}\n+\n+import org.apache.spark.metrics.source.Source\n+\n+private[spark] class ApplicationMasterSource(yarnAllocator: YarnAllocator) extends Source {\n+\n+  override val sourceName: String = \"applicationMaster\""
  }, {
    "author": {
      "login": "tgravescs"
    },
    "body": "Ah good catch, I was thinking it automatically added the namespace but it looks like that is only on executor and driver instances.  Perhaps we should just add it as system that will append in the spark.metrics.namespace setting.  for yarn I see the applicationmaster metrics the same as the dag scheduler source, executor allocation manager, etc..  Allowing user to control this makes sense to me.  thoughts?",
    "commit": "0b86788e7ec7b367c779cb5517f9dd294f99dd4b",
    "createdAt": "2018-07-17T14:01:05Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.yarn\n+\n+import com.codahale.metrics.{Gauge, MetricRegistry}\n+\n+import org.apache.spark.metrics.source.Source\n+\n+private[spark] class ApplicationMasterSource(yarnAllocator: YarnAllocator) extends Source {\n+\n+  override val sourceName: String = \"applicationMaster\""
  }, {
    "author": {
      "login": "jerryshao"
    },
    "body": "@tgravescs Would you please explain more, are you going to add a new configuration \"spark.metrics.namespace\", also how do you use this configuration?",
    "commit": "0b86788e7ec7b367c779cb5517f9dd294f99dd4b",
    "createdAt": "2018-07-18T01:27:38Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.yarn\n+\n+import com.codahale.metrics.{Gauge, MetricRegistry}\n+\n+import org.apache.spark.metrics.source.Source\n+\n+private[spark] class ApplicationMasterSource(yarnAllocator: YarnAllocator) extends Source {\n+\n+  override val sourceName: String = \"applicationMaster\""
  }, {
    "author": {
      "login": "tgravescs"
    },
    "body": "the config spark.metrics.namespace already exists.  see the metrics section in http://spark.apache.org/docs/latest/monitoring.html.  But if you look at the code https://github.com/apache/spark/blob/master/core/src/main/scala/org/apache/spark/metrics/MetricsSystem.scala#L129 its only applied for executor and driver metrics.  I think we should have it apply to the yarn metrics as well.",
    "commit": "0b86788e7ec7b367c779cb5517f9dd294f99dd4b",
    "createdAt": "2018-07-18T19:06:27Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.yarn\n+\n+import com.codahale.metrics.{Gauge, MetricRegistry}\n+\n+import org.apache.spark.metrics.source.Source\n+\n+private[spark] class ApplicationMasterSource(yarnAllocator: YarnAllocator) extends Source {\n+\n+  override val sourceName: String = \"applicationMaster\""
  }, {
    "author": {
      "login": "jerryshao"
    },
    "body": "I see. But I think we may not get \"spark.app.id\" in AM side, instead I think we can get yarn application id, so either we can set this configuration with application id, or directly prepend to the source name.",
    "commit": "0b86788e7ec7b367c779cb5517f9dd294f99dd4b",
    "createdAt": "2018-07-19T01:36:53Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.yarn\n+\n+import com.codahale.metrics.{Gauge, MetricRegistry}\n+\n+import org.apache.spark.metrics.source.Source\n+\n+private[spark] class ApplicationMasterSource(yarnAllocator: YarnAllocator) extends Source {\n+\n+  override val sourceName: String = \"applicationMaster\""
  }, {
    "author": {
      "login": "attilapiros"
    },
    "body": "I like the idea to make the metric names more app specific. So I will prepend the app ID to the sourcename. And rerun my test.",
    "commit": "0b86788e7ec7b367c779cb5517f9dd294f99dd4b",
    "createdAt": "2018-07-19T03:53:04Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.yarn\n+\n+import com.codahale.metrics.{Gauge, MetricRegistry}\n+\n+import org.apache.spark.metrics.source.Source\n+\n+private[spark] class ApplicationMasterSource(yarnAllocator: YarnAllocator) extends Source {\n+\n+  override val sourceName: String = \"applicationMaster\""
  }, {
    "author": {
      "login": "tgravescs"
    },
    "body": "Ah for the client mode yes there is an order issue with spark.app.id. I'm fine with using the yarn app id since that is essentially what the driver executor use anyway, but I think we should also make it configurable.  I like to see these stay consistent.  If the user can set the driver/executor metrics with spark.metrics.namespace we should allow them to set the yarn ones so that they all could have similar prefix.  Perhaps we add a spark.yarn.metrics.namespace?\r\n\r\napplication_1530654167152_24008.driver.LiveListenerBus.listenerProcessingTime.org.apache.spark.ExecutorAllocationManager$ExecutorAllocationListener\r\napplication_1530654167152_25538.2.executor.recordsRead",
    "commit": "0b86788e7ec7b367c779cb5517f9dd294f99dd4b",
    "createdAt": "2018-07-19T14:19:12Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.yarn\n+\n+import com.codahale.metrics.{Gauge, MetricRegistry}\n+\n+import org.apache.spark.metrics.source.Source\n+\n+private[spark] class ApplicationMasterSource(yarnAllocator: YarnAllocator) extends Source {\n+\n+  override val sourceName: String = \"applicationMaster\""
  }],
  "prId": 21635
}]