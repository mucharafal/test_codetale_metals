[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "nit. Shall we remove `s` from `s\"`?",
    "commit": "86757d350a592686c64f5197037f2b7326e987a3",
    "createdAt": "2019-06-05T23:25:01Z",
    "diffHunk": "@@ -390,7 +390,7 @@ class ClientSuite extends SparkFunSuite with Matchers {\n     }\n   }\n \n-  test(s\"custom resource request yarn config and spark config fails\") {\n+  test(s\"custom driver resource request yarn config and spark config fails\") {"
  }, {
    "author": {
      "login": "tgravescs"
    },
    "body": "updated",
    "commit": "86757d350a592686c64f5197037f2b7326e987a3",
    "createdAt": "2019-06-06T13:39:07Z",
    "diffHunk": "@@ -390,7 +390,7 @@ class ClientSuite extends SparkFunSuite with Matchers {\n     }\n   }\n \n-  test(s\"custom resource request yarn config and spark config fails\") {\n+  test(s\"custom driver resource request yarn config and spark config fails\") {"
  }],
  "prId": 24810
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "ditto.",
    "commit": "86757d350a592686c64f5197037f2b7326e987a3",
    "createdAt": "2019-06-05T23:25:12Z",
    "diffHunk": "@@ -400,19 +400,43 @@ class ClientSuite extends SparkFunSuite with Matchers {\n       conf.set(s\"${YARN_DRIVER_RESOURCE_TYPES_PREFIX}${yarnName}\", \"2\")\n     }\n     resources.values.foreach { rName =>\n-      conf.set(s\"${SPARK_DRIVER_RESOURCE_PREFIX}${rName}${SPARK_RESOURCE_COUNT_SUFFIX}\", \"3\")\n+      conf.set(s\"${SPARK_DRIVER_RESOURCE_PREFIX}${rName}${SPARK_RESOURCE_AMOUNT_SUFFIX}\", \"3\")\n     }\n \n     val error = intercept[SparkException] {\n       ResourceRequestHelper.validateResources(conf)\n     }.getMessage()\n \n     assert(error.contains(\"Do not use spark.yarn.driver.resource.yarn.io/fpga,\" +\n-      \" please use spark.driver.resource.fpga\"))\n+      \" please use spark.driver.resource.fpga.amount\"))\n     assert(error.contains(\"Do not use spark.yarn.driver.resource.yarn.io/gpu,\" +\n-      \" please use spark.driver.resource.gpu\"))\n+      \" please use spark.driver.resource.gpu.amount\"))\n   }\n \n+  test(s\"custom executor resource request yarn config and spark config fails\") {"
  }, {
    "author": {
      "login": "tgravescs"
    },
    "body": "updated",
    "commit": "86757d350a592686c64f5197037f2b7326e987a3",
    "createdAt": "2019-06-06T13:39:00Z",
    "diffHunk": "@@ -400,19 +400,43 @@ class ClientSuite extends SparkFunSuite with Matchers {\n       conf.set(s\"${YARN_DRIVER_RESOURCE_TYPES_PREFIX}${yarnName}\", \"2\")\n     }\n     resources.values.foreach { rName =>\n-      conf.set(s\"${SPARK_DRIVER_RESOURCE_PREFIX}${rName}${SPARK_RESOURCE_COUNT_SUFFIX}\", \"3\")\n+      conf.set(s\"${SPARK_DRIVER_RESOURCE_PREFIX}${rName}${SPARK_RESOURCE_AMOUNT_SUFFIX}\", \"3\")\n     }\n \n     val error = intercept[SparkException] {\n       ResourceRequestHelper.validateResources(conf)\n     }.getMessage()\n \n     assert(error.contains(\"Do not use spark.yarn.driver.resource.yarn.io/fpga,\" +\n-      \" please use spark.driver.resource.fpga\"))\n+      \" please use spark.driver.resource.fpga.amount\"))\n     assert(error.contains(\"Do not use spark.yarn.driver.resource.yarn.io/gpu,\" +\n-      \" please use spark.driver.resource.gpu\"))\n+      \" please use spark.driver.resource.gpu.amount\"))\n   }\n \n+  test(s\"custom executor resource request yarn config and spark config fails\") {"
  }],
  "prId": 24810
}]