[{
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "I was really confused by this test at first -- I didn't know that `thenReturn` lets you specify multiple values for consecutive calls.  For any one else as clueless as me, it would be helpful to drop in a comment here to draw attention to this, eg. \"First request has cookies with a user name, second request does not\".",
    "commit": "e0df6a5bbaff4843d6d824e4403d4ff34bc5482f",
    "createdAt": "2017-02-22T18:42:24Z",
    "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.yarn\n+\n+import java.io.{PrintWriter, StringWriter}\n+import javax.servlet.FilterChain\n+import javax.servlet.http.{Cookie, HttpServletRequest, HttpServletResponse}\n+\n+import org.mockito.Mockito._\n+\n+import org.apache.spark.SparkFunSuite\n+\n+class YarnProxyRedirectFilterSuite extends SparkFunSuite {\n+\n+  test(\"redirect proxied requests, pass-through others\") {\n+    val requestURL = \"http://example.com:1234/foo?\"\n+    val filter = new YarnProxyRedirectFilter()\n+    val cookies = Array(new Cookie(YarnProxyRedirectFilter.COOKIE_NAME, \"dr.who\"))\n+\n+    val req = mock(classOf[HttpServletRequest])\n+    when(req.getCookies()).thenReturn(cookies, null)"
  }],
  "prId": 16946
}]