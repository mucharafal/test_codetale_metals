[{
  "comments": [{
    "author": {
      "login": "rdblue"
    },
    "body": "These changes aren't required for the Python memory setting, but without them the `YarnClusterSuite` produces no helpful information for debugging what went wrong in the tests. I think it is helpful to add this as part of this PR so that the errors will be shown in future test runs.",
    "commit": "0b275cfea7d83cdf61802da30c4a7604be8900e4",
    "createdAt": "2018-08-13T21:51:30Z",
    "diffHunk": "@@ -179,17 +185,23 @@ abstract class BaseYarnClusterSuite\n    * the tests enforce that something is written to a file after everything is ok to indicate\n    * that the job succeeded.\n    */\n-  protected def checkResult(finalState: SparkAppHandle.State, result: File): Unit = {\n-    checkResult(finalState, result, \"success\")\n-  }\n-\n   protected def checkResult(\n       finalState: SparkAppHandle.State,\n       result: File,\n-      expected: String): Unit = {\n+      expected: String = \"success\",\n+      outFile: Option[File] = None): Unit = {\n     finalState should be (SparkAppHandle.State.FINISHED)\n     val resultString = Files.toString(result, StandardCharsets.UTF_8)\n-    resultString should be (expected)\n+\n+    // the context message is passed to assert as Any instead of a function. to lazily load the\n+    // output from the file, this passes an anonymous object that loads it in toString when building\n+    // an error message\n+    val output = new Object() {\n+      override def toString: String = outFile\n+          .map(Files.toString(_, StandardCharsets.UTF_8))\n+          .getOrElse(\"(stdout/stderr was not captured)\")\n+    }\n+    assert(resultString === expected, output)"
  }],
  "prId": 21977
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "`outFile.foreach`?",
    "commit": "0b275cfea7d83cdf61802da30c4a7604be8900e4",
    "createdAt": "2018-08-21T20:29:03Z",
    "diffHunk": "@@ -161,6 +162,11 @@ abstract class BaseYarnClusterSuite\n     }\n     extraJars.foreach(launcher.addJar)\n \n+    if (outFile.isDefined) {",
    "line": 14
  }, {
    "author": {
      "login": "rdblue"
    },
    "body": "I think that `foreach` on an option is unclear (looks like a loop) and should be avoided unless it really simplifies the logic, which it doesn't do here.",
    "commit": "0b275cfea7d83cdf61802da30c4a7604be8900e4",
    "createdAt": "2018-08-21T21:19:04Z",
    "diffHunk": "@@ -161,6 +162,11 @@ abstract class BaseYarnClusterSuite\n     }\n     extraJars.foreach(launcher.addJar)\n \n+    if (outFile.isDefined) {",
    "line": 14
  }, {
    "author": {
      "login": "holdenk"
    },
    "body": "If you do a foreach then the `.get` goes away and the code could be a little cleaner, but it's pretty minor.",
    "commit": "0b275cfea7d83cdf61802da30c4a7604be8900e4",
    "createdAt": "2018-08-24T21:30:17Z",
    "diffHunk": "@@ -161,6 +162,11 @@ abstract class BaseYarnClusterSuite\n     }\n     extraJars.foreach(launcher.addJar)\n \n+    if (outFile.isDefined) {",
    "line": 14
  }, {
    "author": {
      "login": "rdblue"
    },
    "body": "Like I said, I think `foreach` is a bad practice with options, so I'd rather not change to use it. I'd be happy to change this to a pattern match if you think it is really desirable to get rid of the `.get`.",
    "commit": "0b275cfea7d83cdf61802da30c4a7604be8900e4",
    "createdAt": "2018-08-25T01:00:16Z",
    "diffHunk": "@@ -161,6 +162,11 @@ abstract class BaseYarnClusterSuite\n     }\n     extraJars.foreach(launcher.addJar)\n \n+    if (outFile.isDefined) {",
    "line": 14
  }, {
    "author": {
      "login": "holdenk"
    },
    "body": "I think the pattern match would be better than the get.",
    "commit": "0b275cfea7d83cdf61802da30c4a7604be8900e4",
    "createdAt": "2018-08-28T05:20:54Z",
    "diffHunk": "@@ -161,6 +162,11 @@ abstract class BaseYarnClusterSuite\n     }\n     extraJars.foreach(launcher.addJar)\n \n+    if (outFile.isDefined) {",
    "line": 14
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "To me, either way is fine.",
    "commit": "0b275cfea7d83cdf61802da30c4a7604be8900e4",
    "createdAt": "2018-08-28T06:02:02Z",
    "diffHunk": "@@ -161,6 +162,11 @@ abstract class BaseYarnClusterSuite\n     }\n     extraJars.foreach(launcher.addJar)\n \n+    if (outFile.isDefined) {",
    "line": 14
  }],
  "prId": 21977
}]