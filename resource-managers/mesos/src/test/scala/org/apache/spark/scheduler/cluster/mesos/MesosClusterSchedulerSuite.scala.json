[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Please add SPARK-26082 at the test case name.",
    "commit": "56d6a4cf4a52b815a9f22603a00ad2302c865bb3",
    "createdAt": "2019-02-10T00:34:05Z",
    "diffHunk": "@@ -254,6 +254,54 @@ class MesosClusterSchedulerSuite extends SparkFunSuite with LocalSparkContext wi\n     assert(networkInfos.get(0).getLabels.getLabels(1).getValue == \"val2\")\n   }\n \n+  test(\"supports setting fetcher cache\") {"
  }],
  "prId": 23753
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Please add SPARK-26082 at the test case name.",
    "commit": "56d6a4cf4a52b815a9f22603a00ad2302c865bb3",
    "createdAt": "2019-02-10T00:34:11Z",
    "diffHunk": "@@ -254,6 +254,54 @@ class MesosClusterSchedulerSuite extends SparkFunSuite with LocalSparkContext wi\n     assert(networkInfos.get(0).getLabels.getLabels(1).getValue == \"val2\")\n   }\n \n+  test(\"supports setting fetcher cache\") {\n+    setScheduler(Map(\"spark.mesos.fetcherCache.enable\" -> \"true\"))\n+\n+    val mem = 1000\n+    val cpu = 1\n+\n+    val response = scheduler.submitDriver(\n+      new MesosDriverDescription(\"d1\", \"jar\", mem, cpu, true,\n+        command,\n+        Map(\"spark.mesos.executor.home\" -> \"test\",\n+          \"spark.app.name\" -> \"test\"),\n+        \"s1\",\n+        new Date()))\n+\n+    assert(response.success)\n+\n+    val offer = Utils.createOffer(\"o1\", \"s1\", mem, cpu)\n+    scheduler.resourceOffers(driver, List(offer).asJava)\n+\n+    val launchedTasks = Utils.verifyTaskLaunched(driver, \"o1\")\n+    val uris = launchedTasks.head.getCommand.getUrisList\n+    assert(uris.asScala.forall(_.getCache))\n+  }\n+\n+  test(\"supports disabling fetcher cache\") {"
  }],
  "prId": 23753
}]