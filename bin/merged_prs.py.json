[
  {
    "id" : "40290603-e6f5-4b3e-a7ac-96a4d66c0682",
    "prId" : 1915,
    "comments" : [
      {
        "id" : "72284861-6025-4ec3-b9a6-4d334260c9e6",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "This now searches for an exact PR that the commit was added in. It should help in case the PR didn't produce a merge commit.",
        "createdAt" : "2020-07-14T18:24:06Z",
        "updatedAt" : "2020-07-15T11:08:55Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f42127e312fa4b6319ec9dfe593c9e7f2839cc1f",
    "line" : null,
    "diffHunk" : "@@ -7,29 +7,24 @@\n gh = Github()\n \n # Needed data\n-first_tag = \"v0.9.0\"\n-last_tag = \"v0.9.1\"\n-\n-# Running\n-org = gh.get_organization('scalameta')\n-repo = org.get_repo('metals')\n+first_tag = \"v0.9.1\"\n+last_tag = \"v0.9.2\"\n \n tag_range = \"%s..%s\" % (first_tag, last_tag)\n-command = ['git', 'log', tag_range, \"--first-parent\", \"main\", \"--pretty=format:\\\"%s\\\"\"]\n+command = ['git', 'log', tag_range, \"--first-parent\", \"main\", \"--pretty=format:%H\"]\n process = subprocess.Popen(command, stdout=PIPE, stderr=PIPE)\n stdoutput, stderroutput = process.communicate()\n \n-all_prs = []\n-for line in stdoutput.split(\"\\n\"):\n-    pr_num = re.findall(\"#\\d+\", line)\n-    if len(pr_num) > 0:\n-      all_prs.append(int(pr_num[0][1:]))\n-\n-for pr in all_prs:\n-    try:\n-        pull = repo.get_pull(pr)\n-        print (\"- %s\" % pull.title)\n-        print (\"[\\#%s](%s)\" % (pull.number, pull.html_url))\n-        print (\"([%s](https://github.com/%s))\" % (pull.user.login, pull.user.login))\n-    except Exception:\n-        print (\"Cannot read PR %s\" % pr)\n+found_prs = []\n+for sha in stdoutput.split(\"\\n\"):\n+    main = stdoutput[0]\n+    query = \"repo:scalameta/metals type:pr SHA %s\" % sha\n+    for issue in gh.search_issues(query):"
  }
]