[
  {
    "id" : "1f1e7ed5-1b93-4b91-8f66-8b0cdd57d94b",
    "prId" : 775,
    "comments" : [
      {
        "id" : "7a01b1d6-de45-4247-9a55-3d4855df2734",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "This change means that we were previously returning the symbol itself, whereas now we don't return any symbol. I'm wondering whether we should always fall back to the symbol itself if there are no references.\r\n\r\nI'm not feeling strongly about this, just wanted to discuss it, since it's a minor change from the previous behavior.",
        "createdAt" : "2019-06-18T10:30:42Z",
        "updatedAt" : "2019-06-18T17:58:25Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4cfc3a51daeb457a8f1e26bea4196104de517380",
    "line" : null,
    "diffHunk" : "@@ -84,9 +84,9 @@ object DefinitionSlowSuite extends BaseSlowSuite(\"definition\") {\n            |import java.util.concurrent.Future/*Future.java*/ // unused\n            |import scala.util.Failure/*Try.scala*/ // unused\n            |import org.scalatest.FunSuite/*FunSuite.scala*/\n-           |object MainSuite/*L4*/ extends FunSuite/*FunSuite.scala*/ {\n+           |object MainSuite/*<no symbol>*/ extends FunSuite/*FunSuite.scala*/ {"
  },
  {
    "id" : "1bf46db2-cf1d-4bd8-a9eb-1efb95f0bf1b",
    "prId" : 775,
    "comments" : [
      {
        "id" : "e85bd33b-95c3-4e97-884b-8749aa0c6897",
        "parentId" : null,
        "author" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "body" : "Now, the symbol that represents a definition shows the locations of its references, instead of their locations themselves.\r\nIn this case, `MainSuite` shows `<no symbol>` because `MainSuite` represents a definition, and no one refers to `MainSuite`.",
        "createdAt" : "2019-06-18T10:35:20Z",
        "updatedAt" : "2019-06-18T17:58:25Z",
        "lastEditedBy" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cafed4e3-6911-4e57-8031-daede6463289",
        "parentId" : "e85bd33b-95c3-4e97-884b-8749aa0c6897",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I am inclined to fall back to the original behaviour in this case and return the definition result. The reason is to avoid confusing messages like \"No definition found for MainSuite\"\r\n\r\n![Screenshot 2019-06-18 at 15 00 59](https://user-images.githubusercontent.com/1408093/59684243-e6f11200-91d9-11e9-9684-46697b894b33.png)\r\n",
        "createdAt" : "2019-06-18T13:01:24Z",
        "updatedAt" : "2019-06-18T17:58:25Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ce2c9904-de7c-4fed-80cb-0432fb3eb135",
        "parentId" : "e85bd33b-95c3-4e97-884b-8749aa0c6897",
        "author" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "body" : "Sounds reasonable! done https://github.com/scalameta/metals/pull/775/files#diff-f8c05eebbf12c9c21a7d568f09b500eaR1457",
        "createdAt" : "2019-06-18T18:29:39Z",
        "updatedAt" : "2019-06-18T18:29:40Z",
        "lastEditedBy" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4cfc3a51daeb457a8f1e26bea4196104de517380",
    "line" : null,
    "diffHunk" : "@@ -84,9 +84,9 @@ object DefinitionSlowSuite extends BaseSlowSuite(\"definition\") {\n            |import java.util.concurrent.Future/*Future.java*/ // unused\n            |import scala.util.Failure/*Try.scala*/ // unused\n            |import org.scalatest.FunSuite/*FunSuite.scala*/\n-           |object MainSuite/*L4*/ extends FunSuite/*FunSuite.scala*/ {\n+           |object MainSuite/*<no symbol>*/ extends FunSuite/*FunSuite.scala*/ {"
  },
  {
    "id" : "04452e96-a02c-490f-af8b-b10a3c1dc8df",
    "prId" : 775,
    "comments" : [
      {
        "id" : "15388b28-8f1d-4004-89a8-808d08c672f8",
        "parentId" : null,
        "author" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "body" : "I tweaked this test case for fixing some that are related to the change, but this test case is still failing (even in `master` branch)...\r\n\r\n```\r\n...\r\n=======\r\n=> Diff\r\n=======\r\n---∙\r\n+++∙\r\n@@ -2,3 +2,3 @@\r\n package a\r\n-import java.util.concurrent.Future/*<no symbol>*/ // unused\r\n+import java.util.concurrent.Future/*Future.java*/ // unused\r\n import scala.util.Failure/*Try.scala*/ // unused\r\n@@ -6,3 +6,3 @@\r\n   val message/*L4*/ = Message/*Message.java:1*/.message/*Message.java:2*/\r\n-  new java.io.PrintStream/*<no symbol>*/(new java.io.ByteArrayOutputStream/*<no symbol>*/())\r\n+  new java.io.PrintStream/*PrintStream.java*/(new java.io.ByteArrayOutputStream/*ByteArrayOutputStream.java*/())\r\n   println/*Predef.scala*/(message/*L4*/)\r\n@@ -11,3 +11,3 @@\r\n package a\r\n-import java.util.concurrent.Future/*<no symbol>*/ // unused\r\n+import java.util.concurrent.Future/*Future.java*/ // unused\r\n import scala.util.Failure/*Try.scala*/ // unused\r\n@@ -16,3 +16,3 @@\r\n   test/*FunSuiteLike.scala*/(\"a\") {\r\n-    val condition/*L6*/ = Main/*Main.scala:3*/.message/*Main.scala:4*/.contains/*<no symbol>*/(\"Hello\")\r\n+    val condition/*L6*/ = Main/*Main.scala:3*/.message/*Main.scala:4*/.contains/*String.java*/(\"Hello\")\r\n     assert/*Assertions.scala*/(condition/*L6*/)\r\n  tests.DiffAssertions$.colored(DiffAssertions.scala:103)\r\n  tests.BaseSuite.assertNoDiff(BaseSuite.scala:102)\r\n  tests.DefinitionSlowSuite$.$anonfun$new$5(DefinitionSlowSuite.scala:71)\r\n  scala.util.Success.$anonfun$map$1(Try.scala:255)\r\n  scala.util.Success.map(Try.scala:213)\r\n  scala.concurrent.Future.$anonfun$map$1(Future.scala:292)\r\n  scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:33)\r\n  scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:33)\r\n  scala.concurrent.impl.CallbackRunnable.run(Promise.scala:64)\r\n  java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n  java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n  java.lang.Thread.run(Thread.java:748)\r\n...\r\n```\r\n\r\nI'm not sure why we cannot resolve the location of java resources :thinking:\r\n",
        "createdAt" : "2019-06-18T10:40:19Z",
        "updatedAt" : "2019-06-18T17:58:25Z",
        "lastEditedBy" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0759c492-6e33-41b1-b82f-c403d2a1a6bd",
        "parentId" : "15388b28-8f1d-4004-89a8-808d08c672f8",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "The test is passing on CI, it might not be detecting the JDK sources on your local computer. What is the output for `JdkSources()` on your computer? It's supposed to be something like\r\n```\r\n$ echo $JAVA_HOME/src.zip\r\n/Library/Java/JavaVirtualMachines/jdk1.8.0_192.jdk/Contents/Home/src.zip\r\n```",
        "createdAt" : "2019-06-18T12:59:46Z",
        "updatedAt" : "2019-06-18T17:58:25Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8df09423-611e-44f5-b2ff-778fd57f968d",
        "parentId" : "15388b28-8f1d-4004-89a8-808d08c672f8",
        "author" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "body" : "Ah, this was just the problem on my local computer, `sudo apt install openjdk-8-source` fixed this :)",
        "createdAt" : "2019-06-18T15:59:05Z",
        "updatedAt" : "2019-06-18T17:58:25Z",
        "lastEditedBy" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "143d607c-5d57-400c-b861-8a5098a5d036",
        "parentId" : "15388b28-8f1d-4004-89a8-808d08c672f8",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Our docs should probably mention this for ubuntu users 🤔 ",
        "createdAt" : "2019-06-19T08:16:03Z",
        "updatedAt" : "2019-06-19T08:16:03Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4cfc3a51daeb457a8f1e26bea4196104de517380",
    "line" : 37,
    "diffHunk" : "@@ -123,9 +123,9 @@ object DefinitionSlowSuite extends BaseSlowSuite(\"definition\") {\n            |import java.util.concurrent.Future/*Future.java*/ // unused\n            |import scala.util.Failure/*Try.scala*/ // unused\n            |import org.scalatest.FunSuite/*FunSuite.scala*/\n-           |object MainSuite/*L6*/ extends FunSuite/*FunSuite.scala*/ {\n+           |object MainSuite/*<no symbol>*/ extends FunSuite/*FunSuite.scala*/ {\n            |  test/*FunSuiteLike.scala*/(testName/*<no symbol>*/) {\n-           |    val condition/*L8*/ = Main/*Main.scala:5*/.message/*<no symbol>*/.contains/*String.java*/(\"Hello\")\n+           |    val condition/*L9*/ = Main/*Main.scala:5*/.message/*<no symbol>*/.contains/*String.java*/(\"Hello\")\n            |    assert/*Assertions.scala*/(condition/*L8*/)\n            |  }\n            |}"
  },
  {
    "id" : "43c81a09-f3c1-4ced-bf0f-94c33ebd950d",
    "prId" : 775,
    "comments" : [
      {
        "id" : "98ec7cf9-8afd-44b5-9a12-bb5bca97a8b2",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This line is failing because the order of results seems indeterministic https://dev.azure.com/olafurpg/Metals/_build/results?buildId=547&view=logs&jobId=0da5d1d9-276d-5173-c4c4-9d4d4ed14fdb&taskId=5494183b-801e-5084-3b4b-5451c6a14ee1&lineStart=5119&lineEnd=5120&colStart=1&colEnd=38\r\n\r\n```diff\r\n-  val name/*;L4;B.scala:3*/ = \"John\"\r\n+  val name/*;B.scala:3;L4*/ = \"John\"\r\n```\r\n\r\nWe should sort the location results in the tests to ensure stable output.",
        "createdAt" : "2019-06-18T12:58:13Z",
        "updatedAt" : "2019-06-18T17:58:25Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "93137e4a-5b91-4d64-b711-c18bc7a75496",
        "parentId" : "98ec7cf9-8afd-44b5-9a12-bb5bca97a8b2",
        "author" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "body" : "sorted https://github.com/scalameta/metals/pull/775/files#diff-7b39581a6c581b96e5939753620ed527R604",
        "createdAt" : "2019-06-18T18:28:15Z",
        "updatedAt" : "2019-06-18T18:28:15Z",
        "lastEditedBy" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4cfc3a51daeb457a8f1e26bea4196104de517380",
    "line" : 82,
    "diffHunk" : "@@ -134,6 +134,63 @@ object DefinitionSlowSuite extends BaseSlowSuite(\"definition\") {\n     } yield ()\n   }\n \n+  // This test makes sure that textDocument/definition returns reference locations\n+  // instead of definition location if the symbol at the given text document position\n+  // represents a definition itself.\n+  // https://github.com/scalameta/metals/issues/755\n+  testAsync(\"definition-fallback-to-show-usages\") {\n+    for {\n+      _ <- server.initialize(\n+        \"\"\"\n+          |/metals.json\n+          |{\n+          |  \"a\": {},\n+          |  \"b\": {\n+          |    \"dependsOn\": [ \"a\" ]\n+          |  }\n+          |}\n+          |/a/src/main/scala/a/A.scala\n+          |package a\n+          |object A {\n+          |  val name = \"John\"\n+          |  def main() = {\n+          |    println(name)\n+          |  }\n+          |}\n+          |/b/src/main/scala/a/B.scala\n+          |package a\n+          |object B {\n+          |  def main() = {\n+          |    println(A.name)\n+          |  }\n+          |}\n+          |\"\"\".stripMargin\n+      )\n+      _ <- server.didOpen(\"a/src/main/scala/a/A.scala\")\n+      _ <- server.didOpen(\"b/src/main/scala/a/B.scala\")\n+      _ = assertNoDiff(client.workspaceDiagnostics, \"\")\n+      _ = assertNoDiff(\n+        server.workspaceDefinitions,\n+        \"\"\"|/a/src/main/scala/a/A.scala\n+           |package a\n+           |object A/*B.scala:3*/ {\n+           |  val name/*;B.scala:3;L4*/ = \"John\""
  },
  {
    "id" : "4df94c3d-4bc5-4412-81e8-c8ecc1dbe86d",
    "prId" : 775,
    "comments" : [
      {
        "id" : "5f0e4f6d-a500-476e-8c4b-aa949e7c2602",
        "parentId" : null,
        "author" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "body" : "Hmm, I'm not sure why this change effects like this ...",
        "createdAt" : "2019-06-18T18:39:50Z",
        "updatedAt" : "2019-06-18T18:39:51Z",
        "lastEditedBy" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3ce43daa-fb37-42e7-9380-9b54ab31c5df",
        "parentId" : "5f0e4f6d-a500-476e-8c4b-aa949e7c2602",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Hmm, I'm not sure either. The only thing I can think of is that we're not calling this line here in some cases https://github.com/scalameta/metals/blob/4cfc3a51daeb457a8f1e26bea4196104de517380/metals/src/main/scala/scala/meta/internal/metals/MetalsLanguageServer.scala#L1501\r\n\r\nEither way, the change looks benign so let's keep the diff.",
        "createdAt" : "2019-06-19T08:34:18Z",
        "updatedAt" : "2019-06-19T08:38:58Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4cfc3a51daeb457a8f1e26bea4196104de517380",
    "line" : 125,
    "diffHunk" : "@@ -217,6 +274,9 @@ object DefinitionSlowSuite extends BaseSlowSuite(\"definition\") {\n            |.metals/readonly/cats/Contravariant.scala:10:45: information: <error> takes no type parameters, expected: one\n            |  def compose[G[_]: Contravariant]: Functor[λ[α => F[G[α]]]] =\n            |                                            ^\n+           |.metals/readonly/cats/Contravariant.scala:13:15: information: not found: value Contravariant\n+           |      val G = Contravariant[G]\n+           |              ^^^^^^^^^^^^^"
  }
]