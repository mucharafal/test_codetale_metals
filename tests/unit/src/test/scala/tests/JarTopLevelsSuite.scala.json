[
  {
    "id" : "648e2a68-6e5a-4ab0-aac5-3b41bea87078",
    "prId" : 534,
    "comments" : [
      {
        "id" : "4a146022-9e64-4909-98b7-e7aa42df20ee",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Instead of slow tests, can we have unit tests for `JarTopLevels`? The tests below below duplicate a lot from `DefinitionSlowSuite`, since this feature is enabled by default it is tested anyways in all existing slow suites.",
        "createdAt" : "2019-02-22T10:42:18Z",
        "updatedAt" : "2019-02-24T16:00:43Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bd88ca25-4bb7-4f9f-88ed-7fac4b0bc176",
        "parentId" : "4a146022-9e64-4909-98b7-e7aa42df20ee",
        "author" : {
          "login" : "mudsam",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/10428653?v=4"
        },
        "body" : "Ok, I'll move it and convert into unit tests. You're right it was a lazy way of doing the tests.",
        "createdAt" : "2019-02-22T13:02:04Z",
        "updatedAt" : "2019-02-24T16:00:43Z",
        "lastEditedBy" : {
          "login" : "mudsam",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/10428653?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b2919373-f064-4d51-acd3-70ed9a0a3d78",
        "parentId" : "4a146022-9e64-4909-98b7-e7aa42df20ee",
        "author" : {
          "login" : "mudsam",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/10428653?v=4"
        },
        "body" : "Unit tests added, no more slow tests.",
        "createdAt" : "2019-02-23T20:11:41Z",
        "updatedAt" : "2019-02-24T16:00:43Z",
        "lastEditedBy" : {
          "login" : "mudsam",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/10428653?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "68a865709d6bc7d432ff4ffaa2fe1eac07d7409a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,227 @@\n+package tests\n+\n+object JarTopLevelsSuite extends BaseSlowSuite(\"JarTopLevelsSuite\") {"
  },
  {
    "id" : "10288bf4-f716-4403-9464-45789f37bc43",
    "prId" : 534,
    "comments" : [
      {
        "id" : "761a48e7-9dfe-40e2-b759-906e00a4b868",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "What are the contents of these zip files? Can we generate them programmatically instead of committing them into the repo?\r\n\r\nAlternatively, in #527 we add a utility to download sources from GitHub https://github.com/scalameta/metals/blob/5077bdaefbf7cb1219b538fb130e60d27cb5d163/tests/unit/src/main/scala/bench/Corpus.scala",
        "createdAt" : "2019-02-24T13:13:03Z",
        "updatedAt" : "2019-02-24T16:00:43Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fbb0dbf6-8af8-45b3-99ef-0dd320877faa",
        "parentId" : "761a48e7-9dfe-40e2-b759-906e00a4b868",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Example code to create zip file using our IO utils\r\n\r\n```scala\r\nimport java.nio.charset.StandardCharsets\r\nimport java.nio.file.Files\r\nimport scala.meta.internal.io.FileIO\r\nimport scala.meta.io.AbsolutePath\r\n    val tmp =\r\n      AbsolutePath(Files.createTempDirectory(\"metals\")).resolve(\"sources.zip\")\r\n    FileIO.withJarFileSystem(tmp, create = true, close = true) { root =>\r\n      FileLayout.fromString(\r\n        \"\"\"|/foo.scala\r\n           |object Hello {\r\n           |}\"\"\".stripMargin,\r\n        root\r\n      )\r\n    }\r\n```",
        "createdAt" : "2019-02-24T13:18:36Z",
        "updatedAt" : "2019-02-24T16:00:43Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f509da1b-dc26-4cd1-9b75-fbab1fa4dde9",
        "parentId" : "761a48e7-9dfe-40e2-b759-906e00a4b868",
        "author" : {
          "login" : "mudsam",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/10428653?v=4"
        },
        "body" : "Done, generating test zip files, removed the static zip files from test resources.",
        "createdAt" : "2019-02-24T16:02:19Z",
        "updatedAt" : "2019-02-24T16:02:19Z",
        "lastEditedBy" : {
          "login" : "mudsam",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/10428653?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "68a865709d6bc7d432ff4ffaa2fe1eac07d7409a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,50 @@\n+package tests\n+\n+import scala.collection.concurrent.TrieMap\n+import java.nio.file.Paths\n+\n+import scala.meta.io.AbsolutePath\n+import scala.meta.internal.metals.JarTopLevels\n+import scala.meta.internal.io.PlatformFileIO\n+\n+object JarTopLevelsSuite extends BaseTablesSuite {\n+  def jarSymbols: JarTopLevels = tables.jarSymbols\n+  def getAbsolutePath(resource: String): AbsolutePath = {\n+    AbsolutePath(Paths.get(getClass.getResource(resource).toURI))\n+  }\n+  val jar1 = getAbsolutePath(\"/jar-symbols/jar1.zip\")"
  },
  {
    "id" : "bf3a27d9-16d9-4ea4-976d-50adfbe3c39c",
    "prId" : 534,
    "comments" : [
      {
        "id" : "050819ef-9bce-4107-8b48-34eddb733bca",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Nice, good to test this case 👍 ",
        "createdAt" : "2019-02-24T13:32:55Z",
        "updatedAt" : "2019-02-24T16:00:43Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "68a865709d6bc7d432ff4ffaa2fe1eac07d7409a",
    "line" : 44,
    "diffHunk" : "@@ -0,0 +1,50 @@\n+package tests\n+\n+import scala.collection.concurrent.TrieMap\n+import java.nio.file.Paths\n+\n+import scala.meta.io.AbsolutePath\n+import scala.meta.internal.metals.JarTopLevels\n+import scala.meta.internal.io.PlatformFileIO\n+\n+object JarTopLevelsSuite extends BaseTablesSuite {\n+  def jarSymbols: JarTopLevels = tables.jarSymbols\n+  def getAbsolutePath(resource: String): AbsolutePath = {\n+    AbsolutePath(Paths.get(getClass.getResource(resource).toURI))\n+  }\n+  val jar1 = getAbsolutePath(\"/jar-symbols/jar1.zip\")\n+  val jar2 = getAbsolutePath(\"/jar-symbols/jar2.zip\")\n+\n+  test(\"cachedSymbols\") {\n+    val fs = PlatformFileIO.newJarFileSystem(jar1, create = false)\n+    val filePath = AbsolutePath(fs.getPath(\"/foo.scala\"))\n+    val map = TrieMap[String, AbsolutePath](\"foo\" -> filePath)\n+    jarSymbols.putTopLevels(jar1, map)\n+    val resultOption = jarSymbols.getTopLevels(jar1)\n+    assert(resultOption.isDefined)\n+    val result = resultOption.get\n+    assert(map(\"foo\") == result(\"foo\"))\n+    assert(result.get(\"bar\").isEmpty)\n+    val noOption = jarSymbols.getTopLevels(jar2)\n+    assert(noOption.isEmpty)\n+  }\n+\n+  test(\"deleteNotUsed\") {"
  }
]