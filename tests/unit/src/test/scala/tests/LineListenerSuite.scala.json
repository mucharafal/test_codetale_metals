[
  {
    "id" : "3d6bc51b-6e71-4c1a-b284-124a7f3bc248",
    "prId" : 727,
    "comments" : [
      {
        "id" : "932f2e5b-2c1e-48e8-a6b0-6b3010984b53",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "Couldn't hurt to check how it behaves with unicode now, when we operate on bytes.",
        "createdAt" : "2019-05-23T16:04:27Z",
        "updatedAt" : "2019-05-24T09:56:49Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3ae32ac0-ec50-4c06-9be9-d977f99cb980",
        "parentId" : "932f2e5b-2c1e-48e8-a6b0-6b3010984b53",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "The state machine operates on characters and does not nothing until it hits the first character with int value 27. I've added a new test case to demonstrate that unicode characters are unaffected.",
        "createdAt" : "2019-05-23T18:34:39Z",
        "updatedAt" : "2019-05-24T09:56:49Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ec9c0395fa83c2e41f0331e8f4bddea0b2709085",
    "line" : 6,
    "diffHunk" : "@@ -0,0 +1,63 @@\n+package tests\n+\n+import scala.meta.internal.metals.LineListener\n+import scala.collection.mutable\n+\n+object LineListenerSuite extends BaseSuite {"
  },
  {
    "id" : "611c5245-eef3-4c17-95bc-5fe645ea860b",
    "prId" : 727,
    "comments" : [
      {
        "id" : "b53948ac-d62a-467e-888d-056a83e77c0a",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "+1",
        "createdAt" : "2019-05-23T19:10:21Z",
        "updatedAt" : "2019-05-24T09:56:49Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ec9c0395fa83c2e41f0331e8f4bddea0b2709085",
    "line" : 66,
    "diffHunk" : "@@ -0,0 +1,70 @@\n+package tests\n+\n+import scala.meta.internal.ansi.LineListener\n+import scala.collection.mutable\n+\n+object LineListenerSuite extends BaseSuite {\n+  def check(\n+      name: String,\n+      act: LineListener => Unit,\n+      expected: List[String]\n+  ): Unit = {\n+    test(name) {\n+      var buf = mutable.ListBuffer.empty[String]\n+      val output = new LineListener(line => buf += line)\n+      act(output)\n+      output.flushIfNonEmpty()\n+      assertEquals(buf.toList, expected)\n+    }\n+  }\n+\n+  check(\n+    \"flush\", { out =>\n+      out.appendString(\"a\")\n+      out.appendString(\"b\")\n+    },\n+    List(\"ab\")\n+  )\n+\n+  check(\n+    \"loop\", { out =>\n+      out.appendString(\"a\\nb\"),\n+    },\n+    List(\"a\", \"b\")\n+  )\n+\n+  check(\n+    \"eol\", { out =>\n+      out.appendString(\"a\\n\")\n+    },\n+    List(\"a\")\n+  )\n+\n+  check(\n+    \"eol2\", { out =>\n+      out.appendString(\"a\\n\\n\")\n+    },\n+    List(\"a\", \"\")\n+  )\n+\n+  check(\n+    \"ansi\", { out =>\n+      out.appendString(fansi.Color.Blue(\"blue\").toString()),\n+    },\n+    List(\"blue\")\n+  )\n+\n+  check(\n+    \"windows\", { out =>\n+      out.appendString(\"a\\r\\nb\")\n+    },\n+    List(\"a\", \"b\")\n+  )\n+\n+  check(\n+    \"emoji\", { out =>\n+      out.appendString(\"ğŸ‡®ğŸ‡¸ğŸ‡µğŸ‡±\")"
  }
]