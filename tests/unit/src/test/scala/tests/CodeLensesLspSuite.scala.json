[
  {
    "id" : "0f8d7e48-03ff-46af-8a36-5f1adcf7b984",
    "prId" : 994,
    "comments" : [
      {
        "id" : "ab186933-028a-4f67-b45d-d2ee06dbf3bf",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Do I understand correctly that the code lens is removed due to the compile error?\r\n\r\nI'm not sure this is desirable behavior. I would expect the code lens to stay stable until a successful compilation invalidates the main/test class.",
        "createdAt" : "2019-10-16T09:01:09Z",
        "updatedAt" : "2019-10-18T19:07:35Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8b97f88b-ebc0-48df-a4dd-c23fc6e6313a",
        "parentId" : "ab186933-028a-4f67-b45d-d2ee06dbf3bf",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Reasoning: I would like the \"run\" and \"test\" code lenses to be as stable as possible to avoid jittery code lenses. If the user requests to run a main or test on broken code then we could do a `window/showMessage` or something like that to explain that it's not possible to run the code because it's not compiling.",
        "createdAt" : "2019-10-16T09:03:19Z",
        "updatedAt" : "2019-10-18T19:07:35Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d00b99bd-8512-482d-8ccc-3e62af818507",
        "parentId" : "ab186933-028a-4f67-b45d-d2ee06dbf3bf",
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "I can see a value in that and it is consistent with the approach \"if it doesn't compile, first - make it compile\"",
        "createdAt" : "2019-10-16T10:07:36Z",
        "updatedAt" : "2019-10-18T19:07:35Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "aaf364fe67cd256af8a8f743e5008246635310ce",
    "line" : null,
    "diffHunk" : "@@ -159,6 +159,38 @@ object CodeLensesLspSuite extends BaseLspSuite(\"codeLenses\") {\n     } yield ()\n   }\n \n+  testAsync(\"refresh-after-error\") {\n+    for {\n+      _ <- server.initialize(\n+        \"\"\"|/metals.json\n+           |{ \"a\": { } }\n+           |\n+           |/a/src/main/scala/Main.scala\n+           |object Main {\n+           |  def main(args: Array[String]): Unit = ???\n+           |}\"\"\".stripMargin\n+      )\n+      _ <- assertCodeLenses(\n+        \"a/src/main/scala/Main.scala\",\n+        \"\"\"<<run>>\n+          |object Main {\n+          |  def main(args: Array[String]): Unit = ???\n+          |}\n+          |\"\"\".stripMargin\n+      )\n+      _ <- server.didSave(\"a/src/main/scala/Main.scala\")(\n+        text => text.replace(\"}\", \"\")\n+      )\n+      _ <- assertCodeLenses(\n+        \"a/src/main/scala/Main.scala\",\n+        \"\"\"object Main {"
  },
  {
    "id" : "fe2f378d-3762-47ed-973c-0beb35e2831e",
    "prId" : 1000,
    "comments" : [
      {
        "id" : "4af27ca6-8daf-477a-95be-a3cc1a2a2d6a",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Working on fixing that separately",
        "createdAt" : "2019-10-17T17:28:32Z",
        "updatedAt" : "2019-10-18T11:53:52Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d528dd471866def16a78d66b95b8895f65017a9d",
    "line" : null,
    "diffHunk" : "@@ -35,23 +35,24 @@ object CodeLensesLspSuite extends BaseLspSuite(\"codeLenses\") {\n       |\"\"\".stripMargin\n   )\n \n-  check(\"test-suite-class\", library = \"org.scalatest::scalatest:3.0.5\")(\n-    \"\"\"|package foo.bar\n-       |<<test>>\n-       |class Foo extends org.scalatest.FunSuite {\n-       |  test(\"foo\") {}\n-       |}\n-       |\"\"\".stripMargin\n-  )\n-\n-  check(\"test-suite-object\", library = \"com.lihaoyi::utest:0.7.1\")(\n-    \"\"\"|package foo.bar\n-       |<<test>>\n-       |object Foo extends utest.TestSuite {\n-       |  val tests = utest.Tests {}\n-       |}\n-       |\"\"\".stripMargin\n-  )\n+  // broken when being run on a fresh Bloop instance"
  },
  {
    "id" : "6aee305c-5520-424b-b9f6-80212d87723c",
    "prId" : 1020,
    "comments" : [
      {
        "id" : "dfc465bd-4cf6-4eef-b28e-2493ad948907",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "This broke on windows due to \"\\n\\r\"",
        "createdAt" : "2019-10-27T19:14:40Z",
        "updatedAt" : "2019-10-28T15:54:32Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "bf83d588297229d15d4ae4ac49c6d318dae867af",
    "line" : 63,
    "diffHunk" : "@@ -188,7 +188,7 @@ object CodeLensesLspSuite extends BaseLspSuite(\"codeLenses\") {\n   def check(name: String, library: String = \"\")(expected: String): Unit = {\n     testAsync(name) {\n       cleanWorkspace()\n-      val original = expected.replaceAll(\"<<.*>>\\\\W\", \"\")\n+      val original = expected.replaceAll(\"<<.*>>\\\\W+\", \"\")"
  },
  {
    "id" : "1cd1b349-2c8a-43e4-b761-d26c6baecc7a",
    "prId" : 1487,
    "comments" : [
      {
        "id" : "0c77672c-74a0-4934-a84e-621cb8c88790",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Any chance we can have it properly formatted?",
        "createdAt" : "2020-03-12T11:42:53Z",
        "updatedAt" : "2020-03-24T16:45:28Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "55838e6c9f4127bc8d06a8d31a6df496a0b729a8",
    "line" : 16,
    "diffHunk" : "@@ -49,7 +50,8 @@ class CodeLensesLspSuite extends BaseLspSuite(\"codeLenses\") {\n     \"\"\"|package foo.bar\n        |<<test>><<debug test>>\n        |object Foo extends utest.TestSuite {\n-       |  val tests = utest.Tests {}\n+       |<< tests>>"
  },
  {
    "id" : "21705d04-6f93-46d0-b8f8-2498d5ef585f",
    "prId" : 1487,
    "comments" : [
      {
        "id" : "85e385f7-cda3-4d56-b0f3-2626128d2481",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Let's add case with multiple overrides?",
        "createdAt" : "2020-03-12T11:44:02Z",
        "updatedAt" : "2020-03-24T16:45:28Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5fa89b30-f538-4c40-a9da-03fbea6ea114",
        "parentId" : "85e385f7-cda3-4d56-b0f3-2626128d2481",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "can you provide example what you mean?",
        "createdAt" : "2020-03-13T15:12:20Z",
        "updatedAt" : "2020-03-24T16:45:28Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "826ba415-588c-4660-92d6-335b368f53ae",
        "parentId" : "85e385f7-cda3-4d56-b0f3-2626128d2481",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Something like\r\n```\r\ntrait A{\r\n  def abc : String\r\n  def xyz: Int\r\n}\r\n\r\nclass B extends A{\r\n  def abc : String = \"\"\r\n  def xyz: Int = 0\r\n}\r\n\r\n```",
        "createdAt" : "2020-03-13T15:14:59Z",
        "updatedAt" : "2020-03-24T16:45:28Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "55838e6c9f4127bc8d06a8d31a6df496a0b729a8",
    "line" : 26,
    "diffHunk" : "@@ -186,7 +188,61 @@ class CodeLensesLspSuite extends BaseLspSuite(\"codeLenses\") {\n     } yield ()\n   }\n \n-  def check(name: String, library: String = \"\")(\n+  check(\"go-to-super-method-lenses\")("
  },
  {
    "id" : "7fd271c3-fcb2-415d-a11b-116be81afe49",
    "prId" : 1487,
    "comments" : [
      {
        "id" : "818b750a-7aee-4ed5-94f7-caa21953acc4",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Is it possible to fix the formatting here?",
        "createdAt" : "2020-03-17T19:05:28Z",
        "updatedAt" : "2020-03-24T16:45:28Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ff4bc0a4-b380-4ee0-a4ab-73684d3fa7cf",
        "parentId" : "818b750a-7aee-4ed5-94f7-caa21953acc4",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "As answered previously, I pasted in previous answer which regex needs to be modified and what rules it must confront to. I could not quickly make it work and and don't want to spend hours working on regex(or parse this manually) that could only improve formatting in tests a little.\r\nIf you have can give me regex that will work I will add it and update tests.",
        "createdAt" : "2020-03-18T08:41:27Z",
        "updatedAt" : "2020-03-24T16:45:28Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f22dc142-72f8-4512-a87d-f7e4c4a60c05",
        "parentId" : "818b750a-7aee-4ed5-94f7-caa21953acc4",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Ok, let's leave it for now. Sorry for missing the previous answer!",
        "createdAt" : "2020-03-19T10:17:10Z",
        "updatedAt" : "2020-03-24T16:45:28Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "55838e6c9f4127bc8d06a8d31a6df496a0b729a8",
    "line" : 57,
    "diffHunk" : "@@ -188,7 +190,63 @@ class CodeLensesLspSuite extends BaseLspSuite(\"codeLenses\") {\n     } yield ()\n   }\n \n-  def check(name: String, library: String = \"\")(\n+  check(\"go-to-super-method-lenses\")(\n+    \"\"\"package gameofthrones\n+      |\n+      |abstract class Lannister {\n+      |  def payTheirDebts: Boolean\n+      |  def trueLannister = payTheirDebts\n+      |}\n+      |\n+      |trait Tywin extends Lannister{\n+      |<< payTheirDebts>>\n+      |override def payTheirDebts = true\n+      |}\n+      |\n+      |trait Jamie extends Tywin {\n+      |<< payTheirDebts>>\n+      |override def payTheirDebts = true\n+      |}\n+      |\n+      |trait Tyrion extends Tywin {\n+      |<< payTheirDebts>>\n+      |override def payTheirDebts = true\n+      |}\n+      |\n+      |trait Cersei extends Tywin {\n+      |<< payTheirDebts>>\n+      |override def payTheirDebts = false\n+      |<< trueLannister>>\n+      |override def trueLannister = false\n+      |}\n+      |\n+      |class Joffrey extends Lannister with Jamie with Cersei {\n+      |<< payTheirDebts>>"
  }
]