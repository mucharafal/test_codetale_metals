[
  {
    "id" : "377d6a66-596d-4585-a6bd-a2fd266de9ec",
    "prId" : 429,
    "comments" : [
      {
        "id" : "4b0f444f-c96b-4f5b-b01d-7beaa5e4feba",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Missing test for `.sbt` files, we can add a file `project/plugins.sbt` to avoid the slow sbt build import. It's handled automatically by the Scalafm210 class, but good to test it in case we change the impl later.",
        "createdAt" : "2018-12-20T08:44:32Z",
        "updatedAt" : "2018-12-22T11:11:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b84ad7c9-45c5-4841-9faf-f8d4831facb6",
        "parentId" : "4b0f444f-c96b-4f5b-b01d-7beaa5e4feba",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Also missing test to ensure that `project.excludeFilters` is respected. This is not handled by the `Scalafmt210` class so I suspect we need to replicate the Scalafmt logic here. With \"format on save\", you don't want to format excluded files.",
        "createdAt" : "2018-12-20T08:55:54Z",
        "updatedAt" : "2018-12-22T11:11:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bc41a48b-a82f-4646-816c-94e6564c6db3",
        "parentId" : "4b0f444f-c96b-4f5b-b01d-7beaa5e4feba",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Also missing test for `.sc` files, I think `Scala210` doesn't handle that case actually (it's an old API). I'm fine actually not supporting `.sc` files for now.",
        "createdAt" : "2018-12-20T08:56:24Z",
        "updatedAt" : "2018-12-22T11:11:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "abb4df3c-081f-441f-9314-dde4d04b09e2",
        "parentId" : "4b0f444f-c96b-4f5b-b01d-7beaa5e4feba",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Added tests for `.sbt` and `.sc` files. They both seeem to work fine.",
        "createdAt" : "2018-12-21T11:03:08Z",
        "updatedAt" : "2018-12-22T11:11:14Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "284e4aea-aac5-4af6-bae1-d28741d94030",
        "parentId" : "4b0f444f-c96b-4f5b-b01d-7beaa5e4feba",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Ah no, `.sc` do not parse. I'll rever that commit. We can add .sc support if there's demand for it.",
        "createdAt" : "2018-12-21T11:05:18Z",
        "updatedAt" : "2018-12-22T11:11:14Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ec1161fecfaec6824cba1eb2a21806f972c8f67f",
    "line" : 8,
    "diffHunk" : "@@ -0,0 +1,120 @@\n+package tests\n+\n+import com.google.gson.JsonObject\n+import com.google.gson.JsonPrimitive\n+\n+object FormattingSlowSuite extends BaseSlowSuite(\"formatting\") {"
  },
  {
    "id" : "612e8429-ee3f-40b7-82c5-684056ce872a",
    "prId" : 429,
    "comments" : [
      {
        "id" : "d4d3af87-878c-44a2-aba0-e365cfba052c",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "It's possible to initialize without a build by passing in `expectError = true`",
        "createdAt" : "2018-12-20T08:45:19Z",
        "updatedAt" : "2018-12-22T11:11:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ec1161fecfaec6824cba1eb2a21806f972c8f67f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,120 @@\n+package tests\n+\n+import com.google.gson.JsonObject\n+import com.google.gson.JsonPrimitive\n+\n+object FormattingSlowSuite extends BaseSlowSuite(\"formatting\") {\n+\n+  testAsync(\"basic\") {\n+    for {\n+      _ <- server.initialize(\n+        \"\"\"|\n+           |/metals.json"
  },
  {
    "id" : "171ff5c4-27cd-4147-bb2e-02d4403e2268",
    "prId" : 458,
    "comments" : [
      {
        "id" : "c410d1d8-1b1a-4c33-909a-755fe0aac7d6",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Two things:\r\n\r\n- I don't understand (reading the test), where is the interaction that adds the version\r\n- I would also test against the content of `.scalafmt.conf`, which should now contain the version",
        "createdAt" : "2019-01-11T13:52:25Z",
        "updatedAt" : "2019-01-11T17:47:46Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ebb73fe9-60aa-446f-80b2-146e73887ff4",
        "parentId" : "c410d1d8-1b1a-4c33-909a-755fe0aac7d6",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Good points, will update.",
        "createdAt" : "2019-01-11T14:03:32Z",
        "updatedAt" : "2019-01-11T17:47:46Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "73c2b571e90b9cb65c43c52aca8f3b008aa998c8",
    "line" : null,
    "diffHunk" : "@@ -225,4 +226,40 @@ object FormattingSlowSuite extends BaseSlowSuite(\"formatting\") {\n     } yield ()\n   }\n \n+  testAsync(\"missing-version\") {\n+    cleanWorkspace()\n+    for {\n+      _ <- server.initialize(\n+        \"\"\"|/.scalafmt.conf\n+           |maxColumn=40\n+           |/Main.scala\n+           |object   Main\n+           |\"\"\".stripMargin,\n+        expectError = true\n+      )\n+      _ <- server.didOpen(\"Main.scala\")\n+      _ <- server.formatting(\"Main.scala\")\n+      _ = assertNoDiff(\n+        client.workspaceMessageRequests,\n+        MissingScalafmtVersion.messageRequestMessage\n+      )\n+      _ = assertNoDiff(\n+        client.workspaceShowMessages,\n+        MissingScalafmtVersion.fixedVersion.getMessage\n+      )\n+      _ = assertNoDiff(client.workspaceDiagnostics, \"\")\n+      // check file was not formatted because version was missing.\n+      _ = assertNoDiff(\n+        server.bufferContent(\"Main.scala\"),\n+        \"object   Main\"\n+      )\n+      _ <- server.formatting(\"Main.scala\")\n+      // check file was formatted now that version has been added."
  },
  {
    "id" : "d3a02ebe-00a3-46bc-acf1-5c34bb64fab7",
    "prId" : 458,
    "comments" : [
      {
        "id" : "4684c0b6-fa19-485a-90fc-45979eeba123",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "To explain the problem, this future here returned before we were able to fix `.scalafmt.conf`. Now the `formatting` future includes waiting for the \"update .scalafmt.conf?\" dialogue.",
        "createdAt" : "2019-01-11T17:54:18Z",
        "updatedAt" : "2019-01-11T17:54:18Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "73c2b571e90b9cb65c43c52aca8f3b008aa998c8",
    "line" : 35,
    "diffHunk" : "@@ -225,4 +229,99 @@ object FormattingSlowSuite extends BaseSlowSuite(\"formatting\") {\n     } yield ()\n   }\n \n+  testAsync(\"missing-version\") {\n+    cleanWorkspace()\n+    client.showMessageRequestHandler = { params =>\n+      if (MissingScalafmtVersion.isMissingScalafmtVersion(params)) {\n+        params.getActions.asScala\n+          .find(_ == MissingScalafmtVersion.changeVersion)\n+      } else {\n+        None\n+      }\n+    }\n+    for {\n+      _ <- server.initialize(\n+        \"\"\"|/.scalafmt.conf\n+           |maxColumn=40\n+           |/Main.scala\n+           |object   Main\n+           |\"\"\".stripMargin,\n+        expectError = true\n+      )\n+      _ <- server.didOpen(\"Main.scala\")\n+      _ <- server.formatting(\"Main.scala\")"
  }
]