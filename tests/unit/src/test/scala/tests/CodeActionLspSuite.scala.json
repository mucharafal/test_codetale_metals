[
  {
    "id" : "3d2306fb-99c5-4167-8f7c-2d184748db86",
    "prId" : 1065,
    "comments" : [
      {
        "id" : "65fc8514-6513-42cb-8f03-6dd560667850",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "@tgodzik this is my proposal. You have three main elements:\r\n\r\n- the input text (using `@@` as the cursor position)\r\n- the expected list of code actions (I'm checking the `title` property of code actions)\r\n- the expected text after applying one of the code actions (I'm selecting the first one by default, but it's configurable)\r\n\r\nThis can be expanded to support other common test cases, but I think it's a decent start",
        "createdAt" : "2019-12-11T14:36:22Z",
        "updatedAt" : "2019-12-11T15:30:45Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "91b56db3-1e93-4549-9bcc-79ba835dacf9",
        "parentId" : "65fc8514-6513-42cb-8f03-6dd560667850",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "That's exactly what I was thinking about. Looks awesome!",
        "createdAt" : "2019-12-11T15:04:01Z",
        "updatedAt" : "2019-12-11T15:30:45Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1e046b2b878d476d389f19bdcaa73ae4b7c121c9",
    "line" : 27,
    "diffHunk" : "@@ -0,0 +1,57 @@\n+package tests\n+\n+import scala.meta.internal.metals.QuickFix.ImportMissingSymbol\n+import scala.meta.internal.metals.MetalsEnrichments._\n+\n+object CodeActionLspSuite extends BaseLspSuite(\"codeAction\") {\n+\n+  check(\n+    \"auto-import\",\n+    \"\"\"|package a\n+       |\n+       |object A {\n+       |  val f = Fut@@ure.successful(2)\n+       |}\n+       |\"\"\".stripMargin,\n+    s\"\"\"|${ImportMissingSymbol.label(\"Future\", \"scala.concurrent\")}\n+        |${ImportMissingSymbol.label(\"Future\", \"java.util.concurrent\")}\n+        |\"\"\".stripMargin,\n+    \"\"\"|package a\n+       |\n+       |import scala.concurrent.Future\n+       |\n+       |object A {\n+       |  val f = Future.successful(2)\n+       |}\n+       |\"\"\".stripMargin\n+  )"
  },
  {
    "id" : "068b8686-f640-4534-b81d-d40eeb56ff23",
    "prId" : 1079,
    "comments" : [
      {
        "id" : "08d0962c-81a0-44b1-b35f-3150d6c7f0ea",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "since these tests are going to grow for each code action, maybe we can split these into:\r\n\r\n- `BaseCodeActionLspSuite` (which simply defines the `check` method)\r\n- `ImportMissingSymbolLspSuite`\r\n- `UseNamedArgumentsLspSuite`\r\n\r\nThis should have the benefits of:\r\n- keeping the file length manageable\r\n- keeping the suite more focused (you can run the entire suite when iterating on the specific action)\r\n- removing the prefix from the test name (`basic`, instead of `use-named-arguments-basic`)",
        "createdAt" : "2019-12-23T10:04:53Z",
        "updatedAt" : "2019-12-31T17:11:21Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3e04f5d9-4f27-4f2a-81d4-278486092dd5",
        "parentId" : "08d0962c-81a0-44b1-b35f-3150d6c7f0ea",
        "author" : {
          "login" : "cb372",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/106760?v=4"
        },
        "body" : "Yes, I was thinking that as well.",
        "createdAt" : "2019-12-23T12:49:18Z",
        "updatedAt" : "2019-12-31T17:11:21Z",
        "lastEditedBy" : {
          "login" : "cb372",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/106760?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "89aca41816462ba01562e42601693aeb33124189",
    "line" : null,
    "diffHunk" : "@@ -26,6 +27,279 @@ object CodeActionLspSuite extends BaseLspSuite(\"codeAction\") {\n        |\"\"\".stripMargin\n   )\n \n+  check(\n+    \"use-named-arguments-basic\","
  }
]