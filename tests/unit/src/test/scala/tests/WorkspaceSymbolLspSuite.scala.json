[
  {
    "id" : "c870836d-d9d8-4eb0-8871-33d84840d53f",
    "prId" : 1388,
    "comments" : [
      {
        "id" : "1d7e1cbe-22e7-40ce-8f8a-2894627b609a",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "doesn't references return future?",
        "createdAt" : "2020-02-06T10:22:05Z",
        "updatedAt" : "2020-02-24T14:38:50Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8dffea19-2dbf-4823-8bac-603198d91087",
        "parentId" : "1d7e1cbe-22e7-40ce-8f8a-2894627b609a",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "Before my changes it called `references` on MetalsLanguageServer and returned Future. But this method only wrapped `referencesSync` in `CancelTokens` to introduce cancelability. \r\nWe don't need cancelability here so I changed it to use directly `referencesSync` and not jump into async world not necessarily. \r\nBut it is just cosmetic thing, I can revert that to Future if you want.",
        "createdAt" : "2020-02-06T11:56:16Z",
        "updatedAt" : "2020-02-24T14:38:50Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "dc21706d9256807977910c1e5c5cb2280a9755ef",
    "line" : 5,
    "diffHunk" : "@@ -142,12 +142,15 @@ class WorkspaceSymbolLspSuite extends BaseLspSuite(\"workspace-symbol\") {\n       _ = server.workspaceSymbol(\"scala.None\")\n       option = \".metals/readonly/scala/Option.scala\"\n       _ <- server.didOpen(option)\n-      references <- server.references(option, \"object None\")\n+      references = server.references(option, \"object None\")"
  },
  {
    "id" : "5894462e-702f-4528-8d3e-a5b9973b0382",
    "prId" : 1388,
    "comments" : [
      {
        "id" : "1e2f272c-5517-41e4-b4c1-176fb552a378",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I think this change is a regression. It seems we do include declaration by default now? ",
        "createdAt" : "2020-02-10T12:16:10Z",
        "updatedAt" : "2020-02-24T14:38:50Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "530f192a-4113-43bb-9c11-e5adf5459efd",
        "parentId" : "1e2f272c-5517-41e4-b4c1-176fb552a378",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "As described in PR:\r\n\r\n> Here (https://github.com/scalameta/metals/pull/1388/files#diff-2c60d9818336621db1490d63594edff5R151) I had to add declaration to expected results, because in tests server.references(...) creates underneath new ReferenceContext(true) (where true is for includeDeclaration) which indicates declaration should be added to results.",
        "createdAt" : "2020-02-11T08:23:55Z",
        "updatedAt" : "2020-02-24T14:38:50Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "dc21706d9256807977910c1e5c5cb2280a9755ef",
    "line" : 9,
    "diffHunk" : "@@ -142,10 +142,13 @@ class WorkspaceSymbolLspSuite extends BaseLspSuite(\"workspace-symbol\") {\n       _ = server.workspaceSymbol(\"scala.None\")\n       option = \".metals/readonly/scala/Option.scala\"\n       _ <- server.didOpen(option)\n-      references <- server.references(option, \"object None\")\n+      references = server.references(option, \"object None\")\n       _ = assertNoDiff(\n         references,\n-        \"\"\"|a/src/main/scala/a/A.scala:4:24: info: reference\n+        \"\"\"|.metals/readonly/scala/Option.scala:527:13: info: reference"
  },
  {
    "id" : "6c6e57df-77b2-4d51-8821-ad6297552f5f",
    "prId" : 2012,
    "comments" : [
      {
        "id" : "d21249d8-a5f3-4996-92e1-d38c3e40f99e",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "user will type probably `java.util` without '/'",
        "createdAt" : "2020-09-01T07:05:04Z",
        "updatedAt" : "2020-09-01T08:04:55Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "49306528-36cc-4126-8b02-8139f07bbb5d",
        "parentId" : "d21249d8-a5f3-4996-92e1-d38c3e40f99e",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Same as above, I'll remove the `/`.",
        "createdAt" : "2020-09-01T07:40:38Z",
        "updatedAt" : "2020-09-01T08:04:55Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "742d615938b7ae27e2a94fdcb0daa3d765c5a4ba",
    "line" : null,
    "diffHunk" : "@@ -234,4 +234,54 @@ class WorkspaceSymbolLspSuite extends BaseLspSuite(\"workspace-symbol\") {\n       )\n     } yield ()\n   }\n+\n+  test(\"excluded\") {\n+    cleanWorkspace()\n+    for {\n+      _ <- server.initialize(\n+        \"\"\"\n+          |/metals.json\n+          |{\"a\": {}}\n+          |/a/src/main/scala/a/Before.scala\n+          |package a\n+          |object MyObjectSymbol\n+          |\"\"\".stripMargin\n+      )\n+      _ <- server.didOpen(\"a/src/main/scala/a/Before.scala\")\n+      _ = assertNoDiff(\n+        server.workspaceSymbol(\"Future\"),\n+        \"\"\"|scala.concurrent.Future\n+           |scala.concurrent.Future\n+           |java.util.concurrent.Future\n+           |scala.sys.process.ProcessImpl#Future\n+           |java.util.concurrent.FutureTask\n+           |scala.collection.parallel.FutureTasks\n+           |java.io.ObjectStreamClass#EntryFuture\n+           |java.util.concurrent.RunnableFuture\n+           |java.util.concurrent.ExecutorCompletionService#QueueingFuture\n+           |java.util.concurrent.ScheduledFuture\n+           |java.util.concurrent.CompletableFuture\n+           |java.util.concurrent.ScheduledThreadPoolExecutor#ScheduledFutureTask\n+           |scala.collection.parallel.FutureThreadPoolTasks\n+           |java.util.concurrent.RunnableScheduledFuture\"\"\".stripMargin\n+      )\n+      _ <- server.didChangeConfiguration(\n+        \"\"\"|{\n+           |  \"excluded-packages\": [\n+           |     \"java.util/\""
  }
]