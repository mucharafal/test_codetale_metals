[
  {
    "id" : "84b81073-a666-40e1-a4e6-771fbc116a2e",
    "prId" : 1447,
    "comments" : [
      {
        "id" : "a5fb91d7-0d53-42f9-925f-0d280aa729c1",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Maybe a utility closure:\r\n```\r\ndef createMessageRequestHander(name : String) : MessageRequestParams => Option[MessageRequestResult] =\r\n{ params =>\r\n      if (NewScalaFile.isSelectTheKindOfFile(params)) {\r\n        params.getActions().asScala.find(_.getTitle() == name)\r\n      } else {\r\n        None\r\n      }\r\n    }\r\n```\r\n\r\nthen you can just use:\r\n`client.showMessageRequestHandler = createMessageRequestHander(\"worksheet\") `",
        "createdAt" : "2020-02-19T18:14:20Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9289625f-b165-4c91-a0fe-a0cd655f156b",
        "parentId" : "a5fb91d7-0d53-42f9-925f-0d280aa729c1",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Or even better create a check method:\r\n```\r\ndef check(picked : String, expectedOutput : String, name : String = \"Foo\", shouldCheckForName : Boolean)\r\n```\r\nthen you can just have:\r\n```\r\ncheck(\r\n  \"object\",\r\n \"\"\"| object Foo {\r\n     |}\r\n     |\"\"\".stripMargin\r\n```\r\n\r\ncreateMessageRequestHande might not be needed then.",
        "createdAt" : "2020-02-19T18:19:28Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0f9341e5-2b19-4e47-92da-fd2e3b6727f0",
        "parentId" : "a5fb91d7-0d53-42f9-925f-0d280aa729c1",
        "author" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "body" : "not sure, if I got you correctly, but I've done something there - please, check.",
        "createdAt" : "2020-02-20T15:38:10Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "948961c16a2b407e9b6be832f69458537ee4bc93",
    "line" : null,
    "diffHunk" : "@@ -2,17 +2,36 @@ package tests\n \n import java.nio.file.Files\n import scala.meta.internal.metals.ServerCommands\n-import scala.meta.internal.metals.MetalsNewScalaFileParams\n import scala.meta.internal.metals.MetalsEnrichments._\n import scala.meta.internal.metals.RecursivelyDelete\n+import scala.meta.internal.metals.MetalsServerConfig\n+import scala.meta.internal.metals.Messages.NewScalaFile\n+import scala.meta.internal.metals.MetalsInputBoxResult\n \n class NewFilesLspSuite extends BaseLspSuite(\"new-files\") {\n+  override def serverConfig: MetalsServerConfig =\n+    super.serverConfig.copy(isInputBoxEnabled = true)\n+\n   test(\"new-worksheet\") {\n     cleanCompileCache(\"a\")\n     RecursivelyDelete(workspace.resolve(\"a\"))\n     Files.createDirectories(\n       workspace.resolve(\"a/src/main/scala/\").toNIO\n     )\n+    client.showMessageRequestHandler = { params =>"
  },
  {
    "id" : "603aae3b-1de8-4fc8-9005-20166509d66d",
    "prId" : 1447,
    "comments" : [
      {
        "id" : "e7b4adee-9d06-4ba2-a3b2-bb399a44dad8",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I like the direction, but I thought of something similar to RenameLspSuite and other, where we would even invoke `test` from here.",
        "createdAt" : "2020-02-21T13:12:59Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dbc2486a-41aa-40d5-ba0f-224fc4cd037b",
        "parentId" : "e7b4adee-9d06-4ba2-a3b2-bb399a44dad8",
        "author" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "body" : "done",
        "createdAt" : "2020-02-21T16:41:22Z",
        "updatedAt" : "2020-02-21T16:41:22Z",
        "lastEditedBy" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "948961c16a2b407e9b6be832f69458537ee4bc93",
    "line" : null,
    "diffHunk" : "@@ -155,26 +132,64 @@ class NewFilesLspSuite extends BaseLspSuite(\"new-files\") {\n                                 |  \"a\": { }\n                                 |}\n                                 |\"\"\".stripMargin)\n-      _ <- server.executeCommand(\n-        ServerCommands.NewScalaFile.id,\n-        MetalsNewScalaFileParams(\n-          workspace.resolve(\"a/src/main/scala/foo\").toURI.toString,\n-          \"\",\n-          \"package-object\"\n-        )\n-      )\n-      _ = assert(\n-        workspace.resolve(\"a/src/main/scala/foo/package.scala\").exists\n-      )\n-      _ <- server.didSave(\"a/src/main/scala/foo/package.scala\")(identity)\n-      _ = assertNoDiff(\n-        workspace.resolve(\"a/src/main/scala/foo/package.scala\").readText,\n+      _ <- check(\n+        workspace.resolve(\"a/src/main/scala/foo\").toURI.toString(),\n+        \"package-object\",\n+        name = None,\n+        workspace.resolve(\"a/src/main/scala/foo/package.scala\"),\n         \"\"\"|package object foo {\n            |  \n            |}\n            |\"\"\".stripMargin\n       )\n+    } yield ()\n+  }\n \n+  private def check("
  },
  {
    "id" : "fe521399-84f7-4a71-9e7c-4a24f021f704",
    "prId" : 1624,
    "comments" : [
      {
        "id" : "e5a14d33-9c4a-4e51-9002-43dda0fb8b2f",
        "parentId" : null,
        "author" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "body" : "just out of curiosity:\r\n1) why?\r\n2) Is there implicit conversion happening? I see, there is `TestOptionsConversions` at munit, but it does not look imported and available...",
        "createdAt" : "2020-04-15T16:39:38Z",
        "updatedAt" : "2020-04-16T17:50:50Z",
        "lastEditedBy" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8d1c7125-9381-4aa5-80c6-1b66ad4651fa",
        "parentId" : "e5a14d33-9c4a-4e51-9002-43dda0fb8b2f",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I can revert, but this enables adding tags and ignoring.",
        "createdAt" : "2020-04-15T17:30:04Z",
        "updatedAt" : "2020-04-16T17:50:50Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3cf74c93-d325-4670-b8eb-ece3656ed72a",
        "parentId" : "e5a14d33-9c4a-4e51-9002-43dda0fb8b2f",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "We also do this in other places, so we probably don't have to revert.",
        "createdAt" : "2020-04-15T18:41:54Z",
        "updatedAt" : "2020-04-16T17:50:50Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2f5c5c4a8d2e63df9475195ca1d0c4346071ba7e",
    "line" : 37,
    "diffHunk" : "@@ -102,7 +103,7 @@ class NewFilesLspSuite extends BaseLspSuite(\"new-files\") {\n \n   private def indent = \"  \"\n \n-  private def check(testName: String)(\n+  private def check(testName: TestOptions)("
  },
  {
    "id" : "2555d506-ae83-4f5a-9414-804075e0c897",
    "prId" : 1624,
    "comments" : [
      {
        "id" : "b3dc8339-8765-4322-8c3f-b45e2b9908c9",
        "parentId" : null,
        "author" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "body" : "these two declarations look a bit out here, among `check`s. I would put it somewhere down with appropriate names (fixture style), or remove a new line between them and the check below, to express they are related.",
        "createdAt" : "2020-04-16T16:51:02Z",
        "updatedAt" : "2020-04-16T17:50:50Z",
        "lastEditedBy" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6fb6075f-8dc1-46dc-9259-c68edb76458b",
        "parentId" : "b3dc8339-8765-4322-8c3f-b45e2b9908c9",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I moved them into the check, I think it's fine to have it duplicated there and looks more like the other test cases.",
        "createdAt" : "2020-04-16T17:51:57Z",
        "updatedAt" : "2020-04-16T17:51:58Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2f5c5c4a8d2e63df9475195ca1d0c4346071ba7e",
    "line" : null,
    "diffHunk" : "@@ -100,15 +101,36 @@ class NewFilesLspSuite extends BaseLspSuite(\"new-files\") {\n                        |\"\"\".stripMargin\n   )\n \n+  val filePath = \"a/src/main/scala/foo/Other.scala\"\n+  val existingFileContents =\n+    \"\"\"|package foo\n+       |\n+       |class Other {\n+       | val withContent = true\n+       |}\n+       |\"\"\".stripMargin"
  },
  {
    "id" : "3535f09b-861f-47e1-944e-76a3b363912a",
    "prId" : 1674,
    "comments" : [
      {
        "id" : "9da4c1eb-0d25-49e8-92b5-af561c2e84ff",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "`new ClientExperimentalCapabilities(inputBoxProvider = true)` ?",
        "createdAt" : "2020-05-01T15:39:00Z",
        "updatedAt" : "2020-05-01T16:10:33Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2d61baa4f3f23f311fc6754cf97d955a84d0ac9b",
    "line" : 16,
    "diffHunk" : "@@ -6,17 +6,16 @@ import scala.meta.internal.metals.MetalsEnrichments._\n import scala.meta.internal.metals.RecursivelyDelete\n import scala.meta.internal.metals.Messages.NewScalaFile\n import scala.meta.internal.metals.MetalsInputBoxResult\n-import scala.meta.internal.metals.ClientExperimentalCapabilities\n import scala.meta.internal.metals.MetalsInputBoxParams\n import org.eclipse.lsp4j.ShowMessageRequestParams\n import munit.TestOptions\n import java.nio.file.FileAlreadyExistsException\n+import scala.meta.internal.metals.ClientExperimentalCapabilities\n \n class NewFilesLspSuite extends BaseLspSuite(\"new-files\") {\n   override def experimentalCapabilities\n       : Option[ClientExperimentalCapabilities] =\n-    Some(ClientExperimentalCapabilities(inputBoxProvider = true))\n-\n+    Some(ClientExperimentalCapabilities.Default.copy(inputBoxProvider = true))"
  }
]