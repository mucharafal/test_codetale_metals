[
  {
    "id" : "af8f4a33-ab35-487e-a4d2-4d943fb2860b",
    "prId" : 621,
    "comments" : [
      {
        "id" : "133e6a55-2e19-4302-85d5-5662b53cc427",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "remove comment",
        "createdAt" : "2019-04-02T14:01:42Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0b7d318d-0c12-4809-8fe3-8d989fb7182e",
        "parentId" : "133e6a55-2e19-4302-85d5-5662b53cc427",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2019-04-02T14:07:39Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6f03d2264f9c4e8e28d2e258ca99d24915c82e17",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,142 @@\n+package tests\n+\n+import scala.concurrent.Future\n+import scala.concurrent.duration.Duration\n+\n+object DocumentHighlightSlowSuite extends BaseSlowSuite(\"documentHighlight\") {\n+\n+  fileNamedTestAsync(\"singleHighlight\") { fileName =>\n+    for {\n+      _ <- server.initialize(\n+        s\"\"\"/metals.json\n+           |{\"a\":{}}\n+           |/$fileName\n+           |object Main {\n+           |  Option(1).head\n+           |}\n+        \"\"\".stripMargin\n+      )\n+      _ <- server.didOpen(fileName)\n+      _ <- server.assertHighlight(\n+        fileName,\n+        \"\"\"\n+          |object Main {\n+          |  Option(1).he@@ad\n+          |}\"\"\".stripMargin,\n+        \"\"\"\n+          |object Main {\n+          |  Option(1).<<head>>\n+          |}\"\"\".stripMargin\n+      )\n+    } yield ()\n+  }\n+\n+  fileNamedTestAsync(\"multipleHighlight\") { fileName =>\n+    for {\n+      _ <- server.initialize(\n+        s\"\"\"/metals.json\n+           |{\"a\":{}}\n+           |/$fileName\n+           |object Main {\n+           |  val abc = 123\n+           |  abc.toInt\n+           |  println(abc)\n+           |}\n+        \"\"\".stripMargin\n+      )\n+      _ <- server.didOpen(fileName)\n+      _ <- server.assertHighlight(\n+        fileName,\n+        \"\"\"\n+          |object Main {\n+          |  val abc = 123\n+          |  abc.toInt\n+          |  println(ab@@c)\n+          |}\"\"\".stripMargin,\n+        \"\"\"\n+          |object Main {\n+          |  val <<abc>> = 123\n+          |  <<abc>>.toInt\n+          |  println(<<abc>>)\n+          |}\"\"\".stripMargin\n+      )\n+    } yield ()\n+  }\n+\n+  fileNamedTestAsync(\"multipleDifferentSymbolsHighlight\") { fileName =>\n+    for {\n+      _ <- server.initialize(\n+        s\"\"\"/metals.json\n+           |{\"a\":{}}\n+           |/$fileName\n+           |object Main {\n+           |  val abc = 123\n+           |  abc.toInt\n+           |  134l.toInt\n+           |}\n+        \"\"\".stripMargin\n+      )\n+      _ <- server.didOpen(fileName)\n+      _ <- server.assertHighlight(\n+        fileName,\n+        \"\"\"\n+          |object Main {\n+          |  val abc = 123\n+          |  abc.toInt@@\n+          |  134l.toInt\n+          |}\"\"\".stripMargin,\n+        \"\"\"\n+          |object Main {\n+          |  val abc = 123\n+          |  abc.<<toInt>>\n+          |  134l.toInt\n+          |}\"\"\".stripMargin\n+      )\n+    } yield ()\n+  }\n+\n+  fileNamedTestAsync(\"multipleHighlightWithEdit\") { fileName =>\n+    val additionalWhitespace = \" \" * 3\n+    for {\n+      _ <- server.initialize(\n+        s\"\"\"/metals.json\n+           |{\"a\":{}}\n+           |/$fileName\n+           |object Main {\n+           |  val abc = 123\n+           |  abc.toInt\n+           |  println(abc)\n+           |}\n+        \"\"\".stripMargin\n+      )\n+      _ <- server.didOpen(fileName)\n+      // _ <- replaceInFile(fileName, \"val\", additionalWhitespace)"
  },
  {
    "id" : "10107543-6436-4a62-ae0f-3a20ec020bcc",
    "prId" : 621,
    "comments" : [
      {
        "id" : "12c6344b-a05f-45df-b1de-fad2d395e6c2",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Can we replace this method with the code below?\r\n\r\n```\r\nval filename = \"a/src/main/scala/a/Main.scala\"\r\n```\r\n\r\nWe can use the same filename in all tests, each test case has its own workspace directory.",
        "createdAt" : "2019-04-02T14:30:37Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e06dca7a-b7bf-49c6-86fa-d17cdf2e523c",
        "parentId" : "12c6344b-a05f-45df-b1de-fad2d395e6c2",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Alternatively, copy-paste `a/src/main/scala/a/Main.scala` wherever you need it. I've found that can help make the tests more readable and the filenames rarely change anyways in the lifetime of the test.",
        "createdAt" : "2019-04-02T14:52:56Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1c7c8ed9-d4aa-4ffb-b72f-eb5ae4647719",
        "parentId" : "12c6344b-a05f-45df-b1de-fad2d395e6c2",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Alternatively, one pattern that I like a lot is to implement a `check` method like this\r\n\r\n```scala\r\n  def check(name: String, base: String, edit: String, expected: String): Unit =\r\n    testAsync(name) {\r\n      for {\r\n        _ <- server.initialize(\r\n          s\"\"\"/metals.json\r\n             |{\"a\":{}}\r\n             |/a/src/main/scala/a/Main.scala\r\n             |$base\r\n      \"\"\".stripMargin\r\n        )\r\n        _ <- server.didOpen(\"a/src/main/scala/a/Main.scala\")\r\n        _ <- server.assertHighlight(\r\n          \"a/src/main/scala/a/Main.scala\",\r\n          edit,\r\n          expected\r\n        )\r\n      } yield ()\r\n    }\r\n\r\n  val additionalWhitespace = \" \" * 3\r\n  check(\r\n    \"edit\",\r\n    s\"\"\"\r\n       |object Main {\r\n       |  val abc = 123\r\n       |  abc.toInt\r\n       |  println(abc)\r\n       |}\r\n        \"\"\".stripMargin,\r\n    s\"\"\"\r\n       |object Main {\r\n       |  val$additionalWhitespace abc = 123\r\n       |  abc.toInt\r\n       |  println(ab@@c)\r\n       |}\"\"\".stripMargin,\r\n    s\"\"\"\r\n       |object Main {\r\n       |  val$additionalWhitespace <<abc>> = 123\r\n       |  <<abc>>.toInt\r\n       |  println(<<abc>>)\r\n       |}\"\"\".stripMargin\r\n  )\r\n```\r\n\r\nIdeally, ff we combine the original and the expected output then this can become as small as\r\n\r\n```scala\r\ncheck(\r\n  \"name\",\r\n   s\"\"\"|object Main {\r\n       |  val <<abc>> = 123\r\n       |  <<a@@bc>>.toInt\r\n       |  println(<<abc>>)\r\n       |}\"\"\".stripMargin\r\n  )\r\n)\r\n```\r\nWe could automatically run the same test with an edit that prepends a newline to the file contents.",
        "createdAt" : "2019-04-02T15:20:10Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "07748e48-cbcd-468f-9813-c8e9db36b164",
        "parentId" : "12c6344b-a05f-45df-b1de-fad2d395e6c2",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I added the check method and a couple more cases.",
        "createdAt" : "2019-04-04T14:03:18Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6f03d2264f9c4e8e28d2e258ca99d24915c82e17",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,141 @@\n+package tests\n+\n+import scala.concurrent.Future\n+import scala.concurrent.duration.Duration\n+\n+object DocumentHighlightSlowSuite extends BaseSlowSuite(\"documentHighlight\") {\n+\n+  fileNamedTestAsync(\"singleHighlight\") { fileName =>\n+    for {\n+      _ <- server.initialize(\n+        s\"\"\"/metals.json\n+           |{\"a\":{}}\n+           |/$fileName\n+           |object Main {\n+           |  Option(1).head\n+           |}\n+        \"\"\".stripMargin\n+      )\n+      _ <- server.didOpen(fileName)\n+      _ <- server.assertHighlight(\n+        fileName,\n+        \"\"\"\n+          |object Main {\n+          |  Option(1).he@@ad\n+          |}\"\"\".stripMargin,\n+        \"\"\"\n+          |object Main {\n+          |  Option(1).<<head>>\n+          |}\"\"\".stripMargin\n+      )\n+    } yield ()\n+  }\n+\n+  fileNamedTestAsync(\"multipleHighlight\") { fileName =>\n+    for {\n+      _ <- server.initialize(\n+        s\"\"\"/metals.json\n+           |{\"a\":{}}\n+           |/$fileName\n+           |object Main {\n+           |  val abc = 123\n+           |  abc.toInt\n+           |  println(abc)\n+           |}\n+        \"\"\".stripMargin\n+      )\n+      _ <- server.didOpen(fileName)\n+      _ <- server.assertHighlight(\n+        fileName,\n+        \"\"\"\n+          |object Main {\n+          |  val abc = 123\n+          |  abc.toInt\n+          |  println(ab@@c)\n+          |}\"\"\".stripMargin,\n+        \"\"\"\n+          |object Main {\n+          |  val <<abc>> = 123\n+          |  <<abc>>.toInt\n+          |  println(<<abc>>)\n+          |}\"\"\".stripMargin\n+      )\n+    } yield ()\n+  }\n+\n+  fileNamedTestAsync(\"multipleDifferentSymbolsHighlight\") { fileName =>\n+    for {\n+      _ <- server.initialize(\n+        s\"\"\"/metals.json\n+           |{\"a\":{}}\n+           |/$fileName\n+           |object Main {\n+           |  val abc = 123\n+           |  abc.toInt\n+           |  134l.toInt\n+           |}\n+        \"\"\".stripMargin\n+      )\n+      _ <- server.didOpen(fileName)\n+      _ <- server.assertHighlight(\n+        fileName,\n+        \"\"\"\n+          |object Main {\n+          |  val abc = 123\n+          |  abc.toInt@@\n+          |  134l.toInt\n+          |}\"\"\".stripMargin,\n+        \"\"\"\n+          |object Main {\n+          |  val abc = 123\n+          |  abc.<<toInt>>\n+          |  134l.toInt\n+          |}\"\"\".stripMargin\n+      )\n+    } yield ()\n+  }\n+\n+  fileNamedTestAsync(\"multipleHighlightWithEdit\") { fileName =>\n+    val additionalWhitespace = \" \" * 3\n+    for {\n+      _ <- server.initialize(\n+        s\"\"\"/metals.json\n+           |{\"a\":{}}\n+           |/$fileName\n+           |object Main {\n+           |  val abc = 123\n+           |  abc.toInt\n+           |  println(abc)\n+           |}\n+        \"\"\".stripMargin\n+      )\n+      _ <- server.didOpen(fileName)\n+      _ <- server.assertHighlight(\n+        fileName,\n+        s\"\"\"\n+           |object Main {\n+           |  val$additionalWhitespace abc = 123\n+           |  abc.toInt\n+           |  println(ab@@c)\n+           |}\"\"\".stripMargin,\n+        s\"\"\"\n+           |object Main {\n+           |  val$additionalWhitespace <<abc>> = 123\n+           |  <<abc>>.toInt\n+           |  println(<<abc>>)\n+           |}\"\"\".stripMargin\n+      )\n+    } yield ()\n+  }\n+\n+  private def fileNamedTestAsync("
  },
  {
    "id" : "1ec75a4c-1417-43c3-852c-d7125c7e1c69",
    "prId" : 621,
    "comments" : [
      {
        "id" : "5b26897e-4169-4767-9973-d363198669aa",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "For consistency with the rest of the codebase, test names use kebab case and try to use short names like `single` instead of `single-highlight`. To explain a test case in more detail you can add a comment. This convention is to make it easy to run a single test with `unit/testOnly -- tests.DocumentHighlightSlowSuite.single`",
        "createdAt" : "2019-04-02T14:46:13Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "33a8be56-01a8-4d6f-8959-083c8951c526",
        "parentId" : "5b26897e-4169-4767-9973-d363198669aa",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Shortened them, hope they are short enough now?",
        "createdAt" : "2019-04-04T14:04:30Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "506cf0af-aa01-49c2-8232-d6fa236d57dd",
        "parentId" : "5b26897e-4169-4767-9973-d363198669aa",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "The names are appropriately short now, thanks.",
        "createdAt" : "2019-04-05T07:47:41Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6f03d2264f9c4e8e28d2e258ca99d24915c82e17",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,141 @@\n+package tests\n+\n+import scala.concurrent.Future\n+import scala.concurrent.duration.Duration\n+\n+object DocumentHighlightSlowSuite extends BaseSlowSuite(\"documentHighlight\") {\n+\n+  fileNamedTestAsync(\"singleHighlight\") { fileName =>"
  },
  {
    "id" : "51dd45e3-373d-40ec-b154-6a61f1351a53",
    "prId" : 621,
    "comments" : [
      {
        "id" : "f6c5f6ac-20a2-4910-8833-b72de6c1da0f",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Cool tests! 😍 \r\nIt would be interesting to also have something along the lines of\r\n\r\n```\r\nobject Main {\r\n  val <<a>> = 123\r\n  val f = (a: Int) => a + 1\r\n  println(<<a>>)\r\n}\r\n```",
        "createdAt" : "2019-04-03T07:49:46Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "37f35b98-9848-474b-84b5-46b0c45caffa",
        "parentId" : "f6c5f6ac-20a2-4910-8833-b72de6c1da0f",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Added the test case - also simplified it a bit, so should be easy to spot",
        "createdAt" : "2019-04-04T14:06:30Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6f03d2264f9c4e8e28d2e258ca99d24915c82e17",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,141 @@\n+package tests\n+\n+import scala.concurrent.Future\n+import scala.concurrent.duration.Duration\n+\n+object DocumentHighlightSlowSuite extends BaseSlowSuite(\"documentHighlight\") {\n+\n+  fileNamedTestAsync(\"singleHighlight\") { fileName =>\n+    for {\n+      _ <- server.initialize(\n+        s\"\"\"/metals.json\n+           |{\"a\":{}}\n+           |/$fileName\n+           |object Main {\n+           |  Option(1).head\n+           |}\n+        \"\"\".stripMargin\n+      )\n+      _ <- server.didOpen(fileName)\n+      _ <- server.assertHighlight(\n+        fileName,\n+        \"\"\"\n+          |object Main {\n+          |  Option(1).he@@ad\n+          |}\"\"\".stripMargin,\n+        \"\"\"\n+          |object Main {\n+          |  Option(1).<<head>>\n+          |}\"\"\".stripMargin\n+      )\n+    } yield ()\n+  }\n+\n+  fileNamedTestAsync(\"multipleHighlight\") { fileName =>\n+    for {\n+      _ <- server.initialize(\n+        s\"\"\"/metals.json\n+           |{\"a\":{}}\n+           |/$fileName\n+           |object Main {\n+           |  val abc = 123\n+           |  abc.toInt\n+           |  println(abc)\n+           |}\n+        \"\"\".stripMargin\n+      )\n+      _ <- server.didOpen(fileName)\n+      _ <- server.assertHighlight(\n+        fileName,\n+        \"\"\"\n+          |object Main {\n+          |  val abc = 123\n+          |  abc.toInt\n+          |  println(ab@@c)\n+          |}\"\"\".stripMargin,\n+        \"\"\"\n+          |object Main {\n+          |  val <<abc>> = 123\n+          |  <<abc>>.toInt\n+          |  println(<<abc>>)\n+          |}\"\"\".stripMargin"
  },
  {
    "id" : "ddc7c35d-c7ed-424b-b7ce-3396808b6046",
    "prId" : 621,
    "comments" : [
      {
        "id" : "6e952b82-c05f-4c15-ba1d-114a83c32963",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Great job with the test suite 👏 \r\n",
        "createdAt" : "2019-04-05T07:32:49Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6f03d2264f9c4e8e28d2e258ca99d24915c82e17",
    "line" : 3,
    "diffHunk" : "@@ -0,0 +1,113 @@\n+package tests\n+\n+object DocumentHighlightSlowSuite extends BaseSlowSuite(\"documentHighlight\") {"
  },
  {
    "id" : "67124f49-b10e-4ac8-9976-6285306d488a",
    "prId" : 621,
    "comments" : [
      {
        "id" : "0fc527cc-d12f-49aa-b16b-54e091eec36d",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Impressive 😍 ",
        "createdAt" : "2019-04-05T07:33:31Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6f03d2264f9c4e8e28d2e258ca99d24915c82e17",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,113 @@\n+package tests\n+\n+object DocumentHighlightSlowSuite extends BaseSlowSuite(\"documentHighlight\") {\n+\n+  check(\n+    \"single\",\n+    \"\"\"\n+      |object Main {\n+      |  Option(1).<<he@@ad>>\n+      |}\"\"\".stripMargin\n+  )\n+\n+  check(\n+    \"multiple\",\n+    \"\"\"\n+      |object Main {\n+      |  val <<abc>> = 123\n+      |  <<abc>>.toInt\n+      |  println(<<ab@@c>>)\n+      |}\"\"\".stripMargin\n+  )\n+\n+  check(\n+    \"differentSymbols\",\n+    \"\"\"\n+      |object Main {\n+      |  val abc = 123\n+      |  abc.<<toInt@@>>\n+      |  134l.toInt\n+      |}\"\"\".stripMargin\n+  )\n+\n+  check(\n+    \"scopes\",\n+    \"\"\"\n+      |object Main {\n+      |  val <<@@a>> = 123\n+      |  val f = (a: Int) => a + 1\n+      |  println(<<a>>)\n+      |}\"\"\".stripMargin\n+  )\n+\n+  check(\n+    \"params\",\n+    \"\"\"\n+      |case class User(<<name>>: String)\n+      |object Main {\n+      |  val user = User(<<na@@me>> = \"Susan\")\n+      |  println(user.<<name>>)\n+      |  user.copy(<<name>> = \"John\")\n+      |}\"\"\".stripMargin\n+  )\n+\n+  check(\n+    \"object\",\n+    \"\"\"\n+      |case class <<User>>(name: String)\n+      |object <<User>>\n+      |object Main {\n+      |  val user = <<U@@ser>>(name = \"Susan\")\n+      |  println(user.name)\n+      |  user.copy(name = \"John\")\n+      |}\"\"\".stripMargin\n+  )\n+\n+  check(\n+    \"caseClassVar\",\n+    \"\"\"\n+      |case class User(var <<name>>: String)\n+      |object Main {\n+      |  val user = User(<<na@@me>> = \"Susan\")\n+      |  println(user.<<name>>)\n+      |  user.<<name>> = \"\"\n+      |  user.copy(<<name>> = \"John\")\n+      |}\"\"\".stripMargin\n+  )\n+\n+  check(\n+    \"var\",\n+    \"\"\"\n+      |case class User(var name: String)"
  },
  {
    "id" : "2f1ada5a-7555-4bab-8794-a1dd923c9833",
    "prId" : 621,
    "comments" : [
      {
        "id" : "6c34846d-5f0f-432d-86ca-733692779af9",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "nit: for better or worse, I use kebab case for test names so this should be `different-symbols` for consistency\r\n\r\n",
        "createdAt" : "2019-04-05T07:46:53Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "57535de7-c852-400e-8022-ad0c7f7043de",
        "parentId" : "6c34846d-5f0f-432d-86ca-733692779af9",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2019-04-05T09:09:45Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "6f03d2264f9c4e8e28d2e258ca99d24915c82e17",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,113 @@\n+package tests\n+\n+object DocumentHighlightSlowSuite extends BaseSlowSuite(\"documentHighlight\") {\n+\n+  check(\n+    \"single\",\n+    \"\"\"\n+      |object Main {\n+      |  Option(1).<<he@@ad>>\n+      |}\"\"\".stripMargin\n+  )\n+\n+  check(\n+    \"multiple\",\n+    \"\"\"\n+      |object Main {\n+      |  val <<abc>> = 123\n+      |  <<abc>>.toInt\n+      |  println(<<ab@@c>>)\n+      |}\"\"\".stripMargin\n+  )\n+\n+  check(\n+    \"differentSymbols\","
  }
]