[
  {
    "id" : "c6b5050c-7bce-4951-9187-b0d1cd4bf541",
    "prId" : 424,
    "comments" : [
      {
        "id" : "bfa511d3-ec42-464a-b71c-b9906c58dcbb",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "No ranges, yet.\r\n\r\n@olafurpg The issue I have is that I don't have meaningful end positions in the `Semanticdbs.printTextDocument` method.\r\n\r\nWhen I convert from `DocumentSymbol` to `SymbolOccurrence` I discard the end positions in order to make `printTextDocument` work.\r\n\r\nIdeally, I would like to print the true end position of a document symbol. It's a meaningful test because ranges are used by editors to determine whether the cursor is \"inside\" a symbol and highlight the corresponding outline entry",
        "createdAt" : "2018-12-18T10:43:39Z",
        "updatedAt" : "2018-12-19T13:35:23Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f9c46544-4481-452c-aced-4cdad0207cf3",
        "parentId" : "bfa511d3-ec42-464a-b71c-b9906c58dcbb",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "What if the symbol text inside the comment has the format `$KIND:$END_LINE`?\r\n\r\n```scala\r\n/*Namespace:20*/package example\r\n /*Class:10*/class AnonymousClasses {} \r\n```",
        "createdAt" : "2018-12-18T11:04:41Z",
        "updatedAt" : "2018-12-19T13:35:23Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "046c0bc8-8937-4cc8-a897-3c89614df215",
        "parentId" : "bfa511d3-ec42-464a-b71c-b9906c58dcbb",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Same issue, the end line is equal to the start line in the `SymbolOccurrence` (or it would mess up with offset computation in `printTextDocument`)",
        "createdAt" : "2018-12-18T11:08:00Z",
        "updatedAt" : "2018-12-19T13:35:23Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fcefa2a3-66f1-4d8b-bfff-4d5ddae69820",
        "parentId" : "bfa511d3-ec42-464a-b71c-b9906c58dcbb",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Can you elaborate? The end offset for `SymbolOccurrence.range` is not important, it can be the same as the start offset.",
        "createdAt" : "2018-12-18T11:12:25Z",
        "updatedAt" : "2018-12-19T13:35:23Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e5c3575e-7eef-4d00-ab67-78e4af92206b",
        "parentId" : "bfa511d3-ec42-464a-b71c-b9906c58dcbb",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Suppose I have a `DocumentSymbol` which spans until the end of the file (e.g. the symbol for a class definition).\r\n\r\nWhen converting this symbol to a `SymbolOccurence`, I have to make the end position (line/char) identical to the end position, or the offset calculation will go wrong. Specifically, the issue is with these lines:\r\n\r\nhttps://github.com/scalameta/metals/blob/d4199aa5f5a714e0b748e8e7e019e3049b97f21d/mtags/src/main/scala/scala/meta/internal/mtags/Semanticdbs.scala#L87-L94\r\n\r\nIf I pass in a `SymbolOccurrence` using the \"correct\" end position, the `.substring` call goes out of range.",
        "createdAt" : "2018-12-18T11:16:55Z",
        "updatedAt" : "2018-12-19T13:35:23Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a0b2b4e0-ad07-436f-acee-d0f94c348fd6",
        "parentId" : "bfa511d3-ec42-464a-b71c-b9906c58dcbb",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I left a comment for how to print the end line in `SymbolOccurrence.symbol`",
        "createdAt" : "2018-12-18T11:47:35Z",
        "updatedAt" : "2018-12-19T13:35:23Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "eade48fd8ffbc5572cad7092e373fee0027e4f0f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,3 @@\n+/*example*/package example\n+\n+/*AnonymousClasses*/class AnonymousClasses {}"
  }
]