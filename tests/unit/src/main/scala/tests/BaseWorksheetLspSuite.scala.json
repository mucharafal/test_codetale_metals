[
  {
    "id" : "d67130f6-3078-4a8a-8e6a-84249637eb54",
    "prId" : 1096,
    "comments" : [
      {
        "id" : "00c7f36c-82c9-4068-8cfd-383e527c0564",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I think it's because the filesystem might be slower on Windows - it seems like a race. I will need to do another \"Windows session\" and try to fix the rest of the test.",
        "createdAt" : "2019-12-02T11:11:41Z",
        "updatedAt" : "2019-12-02T12:02:05Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "421192cd5655164bd9e3fd2dbcc3d9f1c5ce1350",
    "line" : 25,
    "diffHunk" : "@@ -297,26 +297,31 @@ abstract class BaseWorksheetLspSuite(scalaVersion: String)\n     } yield ()\n   }\n \n-  testAsync(\"definition\") {\n-    for {\n-      _ <- server.initialize(\n-        s\"\"\"\n-           |/metals.json\n-           |{\"a\": {\"scalaVersion\": \"$scalaVersion\"}}\n-           |/a/src/main/scala/Main.worksheet.sc\n-           |val message = \"Hello World!\"\n-           |println(message)\n-           |\"\"\".stripMargin\n-      )\n-      _ <- server.didOpen(\"a/src/main/scala/Main.worksheet.sc\")\n-      _ = assertNoDiff(\n-        server.workspaceDefinitions,\n-        \"\"\"|/a/src/main/scala/Main.worksheet.sc\n-           |val message/*L0*/ = \"Hello World!\"\n-           |println/*Predef.scala*/(message/*L0*/)\n-           |\"\"\".stripMargin\n-      )\n-    } yield ()\n-  }\n+  // NOTE(olafur) this test fails unpredicatly on Windows with"
  },
  {
    "id" : "01d972a8-b09e-4dc7-8c53-cb5e7f0de925",
    "prId" : 1171,
    "comments" : [
      {
        "id" : "74843c92-e6b6-4f2e-a3a3-dee7c14c25d1",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Can we keep the logic simpler here? It‚Äôs possible to override ‚ÄútestAsync‚Äù and skip tests based on a condition. I‚Äôm not a fan of nesting tests this deep",
        "createdAt" : "2019-12-13T23:25:42Z",
        "updatedAt" : "2019-12-16T16:29:10Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c5b340cc-ebc2-422f-8eed-a7c82b471c94",
        "parentId" : "74843c92-e6b6-4f2e-a3a3-dee7c14c25d1",
        "author" : {
          "login" : "isomarcte",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/6734045?u=7d31a74744a3bf20f443ec7b7e84b95bb4ceb397&v=4"
        },
        "body" : "Certainly.",
        "createdAt" : "2019-12-14T15:32:39Z",
        "updatedAt" : "2019-12-16T16:29:10Z",
        "lastEditedBy" : {
          "login" : "isomarcte",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/6734045?u=7d31a74744a3bf20f443ec7b7e84b95bb4ceb397&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9e846caa6fa993ed1b3cd404be6e07dc74d46b64",
    "line" : null,
    "diffHunk" : "@@ -5,323 +5,335 @@ import scala.meta.internal.metals.UserConfiguration\n import scala.meta.internal.metals.MetalsSlowTaskResult\n import scala.concurrent.Promise\n \n-abstract class BaseWorksheetLspSuite(scalaVersion: String)\n+abstract class BaseWorksheetLspSuite(scalaVersions: Set[String])\n     extends BaseLspSuite(\"worksheet\") {\n   override def experimentalCapabilities\n       : Option[ClientExperimentalCapabilities] =\n     Some(ClientExperimentalCapabilities(decorationProvider = true))\n   override def userConfig: UserConfiguration =\n     super.userConfig.copy(worksheetScreenWidth = 40, worksheetCancelTimeout = 1)\n-  if (!isWindows)\n-    testAsync(\"completion\") {\n-      for {\n-        _ <- server.initialize(\n-          s\"\"\"\n-             |/metals.json\n-             |{\n-             |  \"a\": {\n-             |    \"scalaVersion\": \"$scalaVersion\",\n-             |    \"libraryDependencies\": [\"com.lihaoyi::sourcecode:0.1.8\"]\n-             |  }\n-             |}\n-             |/a/src/main/scala/foo/Main.worksheet.sc\n-             |identity(42)\n-             |val name = sourcecode.Name.generate.value\n-             |\"\"\".stripMargin\n-        )\n-        _ <- server.didOpen(\"a/src/main/scala/foo/Main.worksheet.sc\")\n-        _ <- server.didSave(\"a/src/main/scala/foo/Main.worksheet.sc\")(identity)\n-        identity <- server.completion(\n-          \"a/src/main/scala/foo/Main.worksheet.sc\",\n-          \"identity@@\"\n-        )\n-        _ = assertNoDiff(identity, \"identity[A](x: A): A\")\n-        generate <- server.completion(\n-          \"a/src/main/scala/foo/Main.worksheet.sc\",\n-          \"generate@@\"\n-        )\n-        _ = assertNoDiff(generate, \"generate: Name\")\n-        _ = assertNoDiagnostics()\n-        _ = assertNoDiff(\n-          client.workspaceDecorations,\n-          \"\"\"|identity(42) // 42\n-             |val name = sourcecode.Name.generate.value // \"name\"\n-             |\"\"\".stripMargin\n-        )\n-      } yield ()\n-    }\n \n-  testAsync(\"render\") {\n-    for {\n-      _ <- server.initialize(\n-        s\"\"\"\n-           |/metals.json\n-           |{\"a\": {\"scalaVersion\": \"$scalaVersion\"}}\n-           |/a/src/main/scala/Main.worksheet.sc\n-           |import java.nio.file.Files\n-           |val name = \"Susan\"\n-           |val greeting = s\"Hello $$name\"\n-           |println(greeting + \"\\\\nHow are you?\")\n-           |1.to(10).toVector\n-           |val List(a, b) = List(42, 10)\n-           |\"\"\".stripMargin\n-      )\n-      _ <- server.didOpen(\"a/src/main/scala/Main.worksheet.sc\")\n-      _ = assertNoDiagnostics()\n-      _ = assertNoDiff(\n-        client.workspaceDecorations,\n-        \"\"\"|\n-           |import java.nio.file.Files\n-           |val name = \"Susan\" // \"Susan\"\n-           |val greeting = s\"Hello $name\" // \"Hello Susan\"\n-           |println(greeting + \"\\nHow are you?\") // Hello Susan\n-           |1.to(10).toVector // Vector(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n-           |val List(a, b) = List(42, 10) // a=42, b=10\n-           |\"\"\".stripMargin\n-      )\n-      _ = assertNoDiff(\n-        client.workspaceDecorationHoverMessage,\n-        \"\"\"|import java.nio.file.Files\n-           |val name = \"Susan\"\n-           |name: String = \"Susan\"\n-           |val greeting = s\"Hello $name\"\n-           |greeting: String = \"Hello Susan\"\n-           |println(greeting + \"\\nHow are you?\")\n-           |// Hello Susan\n-           |// How are you?\n-           |1.to(10).toVector\n-           |res1: Vector[Int] = Vector(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n-           |val List(a, b) = List(42, 10)\n-           |a: Int = 42\n-           |b: Int = 10\n-           |\"\"\".stripMargin\n-      )\n-    } yield ()\n-  }\n+  scalaVersions.foreach((scalaVersion: String) =>"
  },
  {
    "id" : "248d8d5c-6bbf-4cba-9874-0b2e4def19ed",
    "prId" : 1171,
    "comments" : [
      {
        "id" : "ccf1e370-19e6-4834-aeaa-ffec6f0a0991",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Would be nice to avoid adding a custom ‚ÄúScalaVersion‚Äù class with its own parsing logic just for this condition. Could we solve this problem instead with a hardcoded set of Scala version strings that don‚Äôt work in Java 11? ü§î",
        "createdAt" : "2019-12-13T23:31:38Z",
        "updatedAt" : "2019-12-16T16:29:10Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1a53ed64-ea7c-4267-925d-07c3b59c88a8",
        "parentId" : "ccf1e370-19e6-4834-aeaa-ffec6f0a0991",
        "author" : {
          "login" : "isomarcte",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/6734045?u=7d31a74744a3bf20f443ec7b7e84b95bb4ceb397&v=4"
        },
        "body" : "We can do what you suggest, or we can use more simple parsing logic without `ScalaVersion` which just relies on a raw regex. It is my opinion both are a bit more brittle and difficult to debug in the case of typos in the input. \r\n\r\nI'll throw up two other branches so we can discuss, but I'll defer to what ever you'd like.",
        "createdAt" : "2019-12-14T15:32:23Z",
        "updatedAt" : "2019-12-16T16:29:10Z",
        "lastEditedBy" : {
          "login" : "isomarcte",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/6734045?u=7d31a74744a3bf20f443ec7b7e84b95bb4ceb397&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9e846caa6fa993ed1b3cd404be6e07dc74d46b64",
    "line" : null,
    "diffHunk" : "@@ -5,323 +5,335 @@ import scala.meta.internal.metals.UserConfiguration\n import scala.meta.internal.metals.MetalsSlowTaskResult\n import scala.concurrent.Promise\n \n-abstract class BaseWorksheetLspSuite(scalaVersion: String)\n+abstract class BaseWorksheetLspSuite(scalaVersions: Set[String])\n     extends BaseLspSuite(\"worksheet\") {\n   override def experimentalCapabilities\n       : Option[ClientExperimentalCapabilities] =\n     Some(ClientExperimentalCapabilities(decorationProvider = true))\n   override def userConfig: UserConfiguration =\n     super.userConfig.copy(worksheetScreenWidth = 40, worksheetCancelTimeout = 1)\n-  if (!isWindows)\n-    testAsync(\"completion\") {\n-      for {\n-        _ <- server.initialize(\n-          s\"\"\"\n-             |/metals.json\n-             |{\n-             |  \"a\": {\n-             |    \"scalaVersion\": \"$scalaVersion\",\n-             |    \"libraryDependencies\": [\"com.lihaoyi::sourcecode:0.1.8\"]\n-             |  }\n-             |}\n-             |/a/src/main/scala/foo/Main.worksheet.sc\n-             |identity(42)\n-             |val name = sourcecode.Name.generate.value\n-             |\"\"\".stripMargin\n-        )\n-        _ <- server.didOpen(\"a/src/main/scala/foo/Main.worksheet.sc\")\n-        _ <- server.didSave(\"a/src/main/scala/foo/Main.worksheet.sc\")(identity)\n-        identity <- server.completion(\n-          \"a/src/main/scala/foo/Main.worksheet.sc\",\n-          \"identity@@\"\n-        )\n-        _ = assertNoDiff(identity, \"identity[A](x: A): A\")\n-        generate <- server.completion(\n-          \"a/src/main/scala/foo/Main.worksheet.sc\",\n-          \"generate@@\"\n-        )\n-        _ = assertNoDiff(generate, \"generate: Name\")\n-        _ = assertNoDiagnostics()\n-        _ = assertNoDiff(\n-          client.workspaceDecorations,\n-          \"\"\"|identity(42) // 42\n-             |val name = sourcecode.Name.generate.value // \"name\"\n-             |\"\"\".stripMargin\n-        )\n-      } yield ()\n-    }\n \n-  testAsync(\"render\") {\n-    for {\n-      _ <- server.initialize(\n-        s\"\"\"\n-           |/metals.json\n-           |{\"a\": {\"scalaVersion\": \"$scalaVersion\"}}\n-           |/a/src/main/scala/Main.worksheet.sc\n-           |import java.nio.file.Files\n-           |val name = \"Susan\"\n-           |val greeting = s\"Hello $$name\"\n-           |println(greeting + \"\\\\nHow are you?\")\n-           |1.to(10).toVector\n-           |val List(a, b) = List(42, 10)\n-           |\"\"\".stripMargin\n-      )\n-      _ <- server.didOpen(\"a/src/main/scala/Main.worksheet.sc\")\n-      _ = assertNoDiagnostics()\n-      _ = assertNoDiff(\n-        client.workspaceDecorations,\n-        \"\"\"|\n-           |import java.nio.file.Files\n-           |val name = \"Susan\" // \"Susan\"\n-           |val greeting = s\"Hello $name\" // \"Hello Susan\"\n-           |println(greeting + \"\\nHow are you?\") // Hello Susan\n-           |1.to(10).toVector // Vector(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n-           |val List(a, b) = List(42, 10) // a=42, b=10\n-           |\"\"\".stripMargin\n-      )\n-      _ = assertNoDiff(\n-        client.workspaceDecorationHoverMessage,\n-        \"\"\"|import java.nio.file.Files\n-           |val name = \"Susan\"\n-           |name: String = \"Susan\"\n-           |val greeting = s\"Hello $name\"\n-           |greeting: String = \"Hello Susan\"\n-           |println(greeting + \"\\nHow are you?\")\n-           |// Hello Susan\n-           |// How are you?\n-           |1.to(10).toVector\n-           |res1: Vector[Int] = Vector(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n-           |val List(a, b) = List(42, 10)\n-           |a: Int = 42\n-           |b: Int = 10\n-           |\"\"\".stripMargin\n-      )\n-    } yield ()\n-  }\n+  scalaVersions.foreach((scalaVersion: String) =>\n+    ScalaVersion\n+      .fromString(scalaVersion)\n+      .fold(\n+        (e: ScalaVersion.ScalaVersionParseError) => fail(e.errorMessage), {\n+          (sv: ScalaVersion) =>\n+            if (ScalaVersion.validScalaVersionForCurrentJDK(sv)) {"
  },
  {
    "id" : "20f5675d-fea3-4684-918f-df37cdbf8cae",
    "prId" : 1171,
    "comments" : [
      {
        "id" : "c67420fc-e052-486c-a12b-4f9a212d488c",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "For consistency with the rest of the codebase, I would prefer to keep the old signature and duplicate instead subclasses.",
        "createdAt" : "2019-12-13T23:33:28Z",
        "updatedAt" : "2019-12-16T16:29:10Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9b312b54-f7a7-4047-a6a0-ce765907fa82",
        "parentId" : "c67420fc-e052-486c-a12b-4f9a212d488c",
        "author" : {
          "login" : "isomarcte",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/6734045?u=7d31a74744a3bf20f443ec7b7e84b95bb4ceb397&v=4"
        },
        "body" : "I'll revert that.",
        "createdAt" : "2019-12-14T15:31:14Z",
        "updatedAt" : "2019-12-16T16:29:10Z",
        "lastEditedBy" : {
          "login" : "isomarcte",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/6734045?u=7d31a74744a3bf20f443ec7b7e84b95bb4ceb397&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9e846caa6fa993ed1b3cd404be6e07dc74d46b64",
    "line" : null,
    "diffHunk" : "@@ -5,323 +5,335 @@ import scala.meta.internal.metals.UserConfiguration\n import scala.meta.internal.metals.MetalsSlowTaskResult\n import scala.concurrent.Promise\n \n-abstract class BaseWorksheetLspSuite(scalaVersion: String)\n+abstract class BaseWorksheetLspSuite(scalaVersions: Set[String])"
  },
  {
    "id" : "a8124963-614e-42a0-aaec-1090fc0fb5ed",
    "prId" : 1277,
    "comments" : [
      {
        "id" : "6fd94b16-1844-464b-b37f-aab12bede3b6",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "`assume` saves us from indentation",
        "createdAt" : "2020-01-09T12:05:41Z",
        "updatedAt" : "2020-01-26T10:34:42Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "49287d98409399c613ea481aeb08529f827e5982",
    "line" : 49,
    "diffHunk" : "@@ -13,49 +13,46 @@ abstract class BaseWorksheetLspSuite(scalaVersion: String)\n   override def userConfig: UserConfiguration =\n     super.userConfig.copy(worksheetScreenWidth = 40, worksheetCancelTimeout = 1)\n \n-  override final def test(options: TestOptions)(fun: => Any): Unit =\n-    if (super.isValidScalaVersionForEnv(this.scalaVersion)) {\n-      super.test(options)(fun)\n-    }\n+  override def skipSuite: Boolean = isValidScalaVersionForEnv(scalaVersion)\n \n-  if (!isWindows)\n-    testAsync(\"completion\") {\n-      for {\n-        _ <- server.initialize(\n-          s\"\"\"\n-             |/metals.json\n-             |{\n-             |  \"a\": {\n-             |    \"scalaVersion\": \"$scalaVersion\",\n-             |    \"libraryDependencies\": [\"com.lihaoyi::sourcecode:0.1.8\"]\n-             |  }\n-             |}\n-             |/a/src/main/scala/foo/Main.worksheet.sc\n-             |identity(42)\n-             |val name = sourcecode.Name.generate.value\n-             |\"\"\".stripMargin\n-        )\n-        _ <- server.didOpen(\"a/src/main/scala/foo/Main.worksheet.sc\")\n-        _ <- server.didSave(\"a/src/main/scala/foo/Main.worksheet.sc\")(identity)\n-        identity <- server.completion(\n-          \"a/src/main/scala/foo/Main.worksheet.sc\",\n-          \"identity@@\"\n-        )\n-        _ = assertNoDiff(identity, \"identity[A](x: A): A\")\n-        generate <- server.completion(\n-          \"a/src/main/scala/foo/Main.worksheet.sc\",\n-          \"generate@@\"\n-        )\n-        _ = assertNoDiff(generate, \"generate: Name\")\n-        _ = assertNoDiagnostics()\n-        _ = assertNoDiff(\n-          client.workspaceDecorations,\n-          \"\"\"|identity(42) // 42\n-             |val name = sourcecode.Name.generate.value // \"name\"\n-             |\"\"\".stripMargin\n-        )\n-      } yield ()\n-    }\n+  testAsync(\"completion\") {\n+    assume(!isWindows, \"This test is flaky on Windows\")"
  },
  {
    "id" : "9b8bcc04-84d6-4212-93d9-092e42258c31",
    "prId" : 1576,
    "comments" : [
      {
        "id" : "20aeeb51-b0a9-41bf-b7c1-1aa57d647592",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "So this is debatable whether or not this is good. On one side, I really like it. It shows that there is something more than you're seeing, causing the user to hover on it and indeed see that it goes 2 lines. Even though this is a short line, without it, the user might not do the hover. I'd be curious of your thoughts on it.",
        "createdAt" : "2020-04-01T20:02:03Z",
        "updatedAt" : "2020-04-02T10:22:01Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "276180f7-0eb0-427f-874d-25c71e9f8e28",
        "parentId" : "20aeeb51-b0a9-41bf-b7c1-1aa57d647592",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "what is an argument against `// Hello Susan...`? appending 3 chars to the first line without dropping anything?\r\nCan lengthening a line causing any troubles here?",
        "createdAt" : "2020-04-01T22:17:53Z",
        "updatedAt" : "2020-04-02T10:22:01Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b3874806-d5ed-44c4-b7a3-718d5b48d9e9",
        "parentId" : "20aeeb51-b0a9-41bf-b7c1-1aa57d647592",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "So in this exact situation, there is no trouble that can happen by appending it. However, the reason I went for that in general is so that when we hit the cutoff of how many line we display (for very long evaluations), then it won't make them _even_ longer. So the idea would be that even if it's cutoff, the `...` won't go past the limit that we've set.\r\n\r\nHowever, by doing that, I didn't special case it for situations like the test case where we are manually breaking the line. Tbh, I've actually never personally did this in a worksheet, but have came across the long lines version of it many times. So I didn't even think about this situation until my test failed. ",
        "createdAt" : "2020-04-02T05:54:14Z",
        "updatedAt" : "2020-04-02T10:22:01Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2b86587b-1a3a-4e76-995d-72a708229e8e",
        "parentId" : "20aeeb51-b0a9-41bf-b7c1-1aa57d647592",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "aaaa ok we manually assume screenWidth  `settings.screenWidth` and we already have truncated line here during processing :D\r\n\r\n![2020-04-02-085304_1116x107_scrot](https://user-images.githubusercontent.com/10478402/78219267-7b093d00-74bf-11ea-849f-ea55b4c4961f.png)\r\n\r\nAbout those dots I thought we could in second case append `...` after end if it won't exceed `screenWidth` what do you think?\r\n\r\nI think this could be small improvement but if it is not something quick to do just ignore it :+1:",
        "createdAt" : "2020-04-02T07:08:28Z",
        "updatedAt" : "2020-04-02T10:22:01Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "719231a6-0e53-44e2-87c4-1a8dd7bf859c",
        "parentId" : "20aeeb51-b0a9-41bf-b7c1-1aa57d647592",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Yea that does make sense. Let me see if I can change that. One thing I'm hitting right away is that is that I'm not actually seeing `screenWidth` make any difference. At first I thought that it was due to `coc-metals`, but even in intelliJ whether I have vs code small or full screen, it makes no difference and cuts at the same place. Am I missing something with that setting?\r\n\r\n<img width=\"768\" alt=\"Screenshot 2020-04-02 at 10 21 31\" src=\"https://user-images.githubusercontent.com/13974112/78226259-be69a880-74cb-11ea-87e9-80f352fc33ac.png\">\r\n\r\nFor example in the image, is that suppose to be cutting it off before the end?",
        "createdAt" : "2020-04-02T08:22:01Z",
        "updatedAt" : "2020-04-02T10:22:01Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f494d187-07c5-4859-8fba-feb11443b73b",
        "parentId" : "20aeeb51-b0a9-41bf-b7c1-1aa57d647592",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Ahhh yea, it looks like we don't pass in any screen information.\r\n\r\nhttps://github.com/scalameta/metals/blob/37f4c238c0cc7d83f3362f7269cf63b2c7a4175d/metals/src/main/scala/scala/meta/internal/worksheets/WorksheetProvider.scala#L270-L275",
        "createdAt" : "2020-04-02T08:35:39Z",
        "updatedAt" : "2020-04-02T10:22:01Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8c7efc8f-8095-4f4b-b8f9-8c1dc78fddfe",
        "parentId" : "20aeeb51-b0a9-41bf-b7c1-1aa57d647592",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "We could add a `withScreenWidth`, and `withScreenHeight` here.",
        "createdAt" : "2020-04-02T08:36:06Z",
        "updatedAt" : "2020-04-02T10:22:01Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "25da8703-969e-4101-9c69-3f901ec2cba4",
        "parentId" : "20aeeb51-b0a9-41bf-b7c1-1aa57d647592",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "I don't think vscode uses any truncation mechanisms here, all truncation is done in mdoc according to this:\r\nhttps://github.com/scalameta/mdoc/blob/master/mdoc/src/main/scala/mdoc/internal/cli/Settings.scala#L136\r\n\r\n`screenWidth` I think is a constant and it is not real width of vscode/vim screen.\r\n\r\ncheck this method in mdoc:\r\n`private def renderDecoration(statement: Statement): EvaluatedWorksheetStatement = {`\r\n\r\nmaybe this truncation should actually happend in mdoc? :question: ",
        "createdAt" : "2020-04-02T08:41:55Z",
        "updatedAt" : "2020-04-02T10:22:01Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "99d91496-c152-4d4f-a3b1-d87f1d1f6cc2",
        "parentId" : "20aeeb51-b0a9-41bf-b7c1-1aa57d647592",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "@olafurpg made a good point about how clients may display truncation differently, so it's probably best for clients to handle it, which makes sense. \r\n\r\nLooking more into this, our test never hit this in the past because before when doing worksheets in vscode, we never added `...` like we did in the editors that didn't support virtual text. So if we simply add that, those tests will fail, since the only check we are doing is to see if the evaluation is complete. I also think this is the only check we can sensibly do as well without getting a whole bunch more information.\r\n\r\nThat said, the more I think about it, the more I think this is probably valid behavior.",
        "createdAt" : "2020-04-02T08:47:13Z",
        "updatedAt" : "2020-04-02T10:22:01Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "058e5a35-d11c-42b0-bc3e-fbbd3eb1915a",
        "parentId" : "20aeeb51-b0a9-41bf-b7c1-1aa57d647592",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "Yeah you are right truncation should not be done in `mdoc` \r\nUser will see an output is truncated and that's what is important.\r\n\r\n---\r\nAs my after thought we could also do(one day :P):\r\nadding `margin: Int` to `EvaluatedWorksheetStatement` and in `truncatify`:\r\n```scala\r\n      if (statement.summary().length +3 < statement.margin) statement.summary() + \"...\"\r\n      else statement.summary().dropRight(3) + \"...\"\r\n```\r\nBut this is a change in mdoc and it makes it more complicated than it should be.",
        "createdAt" : "2020-04-02T09:03:12Z",
        "updatedAt" : "2020-04-02T10:22:01Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e29557aa7c71280b41f9af8a52d9483b2fa4a443",
    "line" : null,
    "diffHunk" : "@@ -77,7 +77,7 @@ abstract class BaseWorksheetLspSuite(scalaVersion: String)\n            |import java.nio.file.Files\n            |val name = \"Susan\" // \"Susan\"\n            |val greeting = s\"Hello $name\" // \"Hello Susan\"\n-           |println(greeting + \"\\nHow are you?\") // Hello Susan\n+           |println(greeting + \"\\nHow are you?\") // Hello Su..."
  },
  {
    "id" : "43745f05-5371-4840-8fa5-c8bc3bd7a4b4",
    "prId" : 1674,
    "comments" : [
      {
        "id" : "783a0b81-4a16-4a39-9128-9307c485123e",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "`new ClientExperimentalCapabilities(decorationProvider = true) ` ?",
        "createdAt" : "2020-05-01T15:38:19Z",
        "updatedAt" : "2020-05-01T16:10:33Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a92d8ce7-b4a7-40bd-937f-00dfc17b781f",
        "parentId" : "783a0b81-4a16-4a39-9128-9307c485123e",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Yea, this won't work anymore because of the type of constructor we have.",
        "createdAt" : "2020-05-01T15:56:21Z",
        "updatedAt" : "2020-05-01T16:10:33Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4addbb03-8526-49f3-b19d-02d42767ca53",
        "parentId" : "783a0b81-4a16-4a39-9128-9307c485123e",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Ach, yeah. You are right!",
        "createdAt" : "2020-05-01T16:01:49Z",
        "updatedAt" : "2020-05-01T16:10:33Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2d61baa4f3f23f311fc6754cf97d955a84d0ac9b",
    "line" : 15,
    "diffHunk" : "@@ -1,15 +1,15 @@\n package tests\n \n-import scala.meta.internal.metals.ClientExperimentalCapabilities\n import scala.meta.internal.metals.UserConfiguration\n-import scala.meta.internal.metals.MetalsSlowTaskResult\n import scala.concurrent.Promise\n+import scala.meta.internal.metals.MetalsSlowTaskResult\n+import scala.meta.internal.metals.ClientExperimentalCapabilities\n \n abstract class BaseWorksheetLspSuite(scalaVersion: String)\n     extends BaseLspSuite(\"worksheet\") {\n   override def experimentalCapabilities\n       : Option[ClientExperimentalCapabilities] =\n-    Some(ClientExperimentalCapabilities(decorationProvider = true))\n+    Some(ClientExperimentalCapabilities.Default.copy(decorationProvider = true))"
  },
  {
    "id" : "201492c6-0534-445a-a993-2504f72e4bf9",
    "prId" : 1856,
    "comments" : [
      {
        "id" : "f981af54-02e4-42e1-bb11-26c8f1582742",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "just curious, why double $$, when in PR description you use $dep?\r\nIs it related to some replacements happening in tests?",
        "createdAt" : "2020-06-25T22:18:11Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5abd7041-1b58-44f6-b976-f85c53fd7368",
        "parentId" : "f981af54-02e4-42e1-bb11-26c8f1582742",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "$$ is just so that we have $ in a string interpolation, since $ is a special character.",
        "createdAt" : "2020-06-26T06:19:17Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1f17edfb786b6f5af2def3bdb1d0b49714512fb2",
    "line" : 13,
    "diffHunk" : "@@ -55,6 +55,52 @@ abstract class BaseWorksheetLspSuite(scalaVersion: String)\n     } yield ()\n   }\n \n+  test(\"completion-imports\") {\n+    for {\n+      _ <- server.initialize(\n+        s\"\"\"\n+           |/metals.json\n+           |{\n+           |  \"a\": {}\n+           |}\n+           |/a/src/main/scala/foo/Main.worksheet.sc\n+           |import $$dep.`com.lihaoyi::scalatags:0.9.0`"
  }
]