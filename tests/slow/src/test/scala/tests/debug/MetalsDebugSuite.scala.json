[
  {
    "id" : "6467beb1-4935-440c-be1c-4cf1d838ecc6",
    "prId" : 721,
    "comments" : [
      {
        "id" : "766e4215-5e4b-4b5b-8dcd-010faab904ad",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "`DebugSuite`",
        "createdAt" : "2019-05-20T10:33:45Z",
        "updatedAt" : "2019-05-22T07:33:25Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3c999e9b79f7d0d6a4c95756d12ec54f6abbc90",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,45 @@\n+package tests.debug\n+\n+import java.net.URI\n+\n+object MetalsDebugSuite extends MetalsBaseDebugSuite {"
  },
  {
    "id" : "5a18ab4c-950a-4fa7-a5a3-b4c054795e24",
    "prId" : 721,
    "comments" : [
      {
        "id" : "5cb78aac-338f-4b75-a108-e4586952bc51",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Nit, I try to keep the last line empty \r\n```diff\r\n-           |}\"\"\".stripMargin,\r\n+           |\r\n+           |}\"\"\".stripMargin,\r\n```",
        "createdAt" : "2019-05-20T10:49:06Z",
        "updatedAt" : "2019-05-22T07:33:25Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cbb9114e-d62a-4189-90e6-c2320bbce681",
        "parentId" : "5cb78aac-338f-4b75-a108-e4586952bc51",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I may violate this myself in some cases ðŸ˜… at least for `assertNoDiff` calls it helps a lot since it makes copy-pasting the new output easier.",
        "createdAt" : "2019-05-20T10:50:08Z",
        "updatedAt" : "2019-05-22T07:33:25Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3c999e9b79f7d0d6a4c95756d12ec54f6abbc90",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,45 @@\n+package tests.debug\n+\n+import java.net.URI\n+\n+object MetalsDebugSuite extends MetalsBaseDebugSuite {\n+  testDebug(\"launch\")(\n+    layout = s\"\"\"/metals.json\n+                |{ \"a\": {} }\n+                |/a/src/main/scala/PrintHelloWorld.scala\n+                |object PrintHelloWorld {\n+                |  def main(args: Array[String]): Unit = {\n+                |    println(\"Hello, World!\")\n+                |  }\n+                |}\"\"\".stripMargin,\n+    act = server => {\n+      server.launch(\"a/src/main/scala/PrintHelloWorld.scala\")\n+    },\n+    assert = client => {\n+      assertEquals(client.output.stderr, \"\")\n+      assertEquals(client.output.stdout, \"Hello, World!\")\n+    }\n+  )\n+\n+  testDebug(\"working-dir\")(\n+    layout = s\"\"\"|/metals.json\n+                 |{ \"a\": {} }\n+                 |\n+                 |/a/src/main/scala/CreateFileInWorkingDir.scala\n+                 |import java.nio.file.Paths\n+                 |\n+                 |object CreateFileInWorkingDir {\n+                 |  def main(args: Array[String]): Unit = {\n+                 |    val workspace = Paths.get(\"\").toAbsolutePath\n+                 |    println(workspace.toUri)\n+                 |  }\n+                 |}\"\"\".stripMargin,"
  },
  {
    "id" : "08d1b07e-c937-4c1a-b499-fb205f5f28da",
    "prId" : 721,
    "comments" : [
      {
        "id" : "a6484340-604e-4acc-9335-782fdb25e16d",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Missing newline `\\n` in the output\r\n\r\n<img width=\"832\" alt=\"Screenshot 2019-05-20 at 12 53 53\" src=\"https://user-images.githubusercontent.com/1408093/58016609-57831100-7afe-11e9-8204-8681730e9569.png\">\r\n",
        "createdAt" : "2019-05-20T10:54:04Z",
        "updatedAt" : "2019-05-22T07:33:25Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3c999e9b79f7d0d6a4c95756d12ec54f6abbc90",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,45 @@\n+package tests.debug\n+\n+import java.net.URI\n+\n+object MetalsDebugSuite extends MetalsBaseDebugSuite {\n+  testDebug(\"launch\")(\n+    layout = s\"\"\"/metals.json\n+                |{ \"a\": {} }\n+                |/a/src/main/scala/PrintHelloWorld.scala\n+                |object PrintHelloWorld {\n+                |  def main(args: Array[String]): Unit = {\n+                |    println(\"Hello, World!\")\n+                |  }\n+                |}\"\"\".stripMargin,\n+    act = server => {\n+      server.launch(\"a/src/main/scala/PrintHelloWorld.scala\")\n+    },\n+    assert = client => {\n+      assertEquals(client.output.stderr, \"\")\n+      assertEquals(client.output.stdout, \"Hello, World!\")"
  },
  {
    "id" : "b4c7ba69-262f-4dbe-a9f0-cdf12b42fc54",
    "prId" : 721,
    "comments" : [
      {
        "id" : "065bc60e-a945-465d-bcc7-dd00706b35b8",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Can we add a test case for the situation when the project has a compile error? It should be clear to the user that running doesn't work because there's a compile error. Currently, an internal exception is thrown\r\n\r\n<img width=\"447\" alt=\"Screenshot 2019-05-20 at 17 19 35\" src=\"https://user-images.githubusercontent.com/1408093/58032710-7b0c8280-7b23-11e9-8acd-6a5962f8e0eb.png\">\r\n",
        "createdAt" : "2019-05-20T15:20:01Z",
        "updatedAt" : "2019-05-22T07:33:25Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3a687b9b-7381-4cd3-b16b-a75d1e3f789e",
        "parentId" : "065bc60e-a945-465d-bcc7-dd00706b35b8",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I think we could ask the user what to do via `window/showMessageRequest`\r\n\r\n> This project can't be run because it has compile errors: Run anyways | Show errors | Cancel\r\n\r\nSelecting `Run anyways` can use the old classpath and `Show errors` can trigger the `\"metals-diagnostics-focus\"` client command.",
        "createdAt" : "2019-05-20T15:23:47Z",
        "updatedAt" : "2019-05-22T07:33:25Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3c999e9b79f7d0d6a4c95756d12ec54f6abbc90",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,45 @@\n+package tests.debug\n+\n+import java.net.URI\n+\n+object MetalsDebugSuite extends MetalsBaseDebugSuite {\n+  testDebug(\"launch\")(\n+    layout = s\"\"\"/metals.json\n+                |{ \"a\": {} }\n+                |/a/src/main/scala/PrintHelloWorld.scala\n+                |object PrintHelloWorld {\n+                |  def main(args: Array[String]): Unit = {\n+                |    println(\"Hello, World!\")\n+                |  }\n+                |}\"\"\".stripMargin,\n+    act = server => {\n+      server.launch(\"a/src/main/scala/PrintHelloWorld.scala\")\n+    },\n+    assert = client => {\n+      assertEquals(client.output.stderr, \"\")\n+      assertEquals(client.output.stdout, \"Hello, World!\")\n+    }\n+  )\n+\n+  testDebug(\"working-dir\")("
  }
]