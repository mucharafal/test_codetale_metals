[
  {
    "id" : "0f5dab35-f468-43f3-b7d7-6a15300ec1ab",
    "prId" : 737,
    "comments" : [
      {
        "id" : "1957d1e7-e91e-4d1d-87bc-71212924639c",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This test can be removed since we don't modify the build settings, it's failing right now.",
        "createdAt" : "2019-06-05T13:33:14Z",
        "updatedAt" : "2019-06-05T15:06:18Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3b0b2cfc5be483b031004060e57b22729000de09",
    "line" : 208,
    "diffHunk" : "@@ -0,0 +1,239 @@\n+package tests\n+import scala.meta.io.AbsolutePath\n+import scala.meta.internal.builds.MillDigest\n+import scala.meta.internal.metals.Messages._\n+import scala.meta.internal.metals.ServerCommands\n+import java.util.concurrent.TimeUnit\n+import scala.meta.internal.metals.MetalsSlowTaskResult\n+\n+object MillSlowSuite extends BaseImportSuite(\"mill-import\") {\n+\n+  override def currentDigest(\n+      workspace: AbsolutePath\n+  ): Option[String] = MillDigest.current(workspace)\n+\n+  testAsync(\"basic\") {\n+    cleanWorkspace()\n+    for {\n+      _ <- server.initialize(\n+        \"\"\"\n+          |/build.sc\n+          |import mill._, scalalib._\n+          |object foo extends ScalaModule {\n+          |  def scalaVersion = \"2.12.8\"\n+          |}\n+        \"\"\".stripMargin\n+      )\n+      _ = assertNoDiff(\n+        client.workspaceMessageRequests,\n+        List(\n+          // Project has no .bloop directory so user is asked to \"import via bloop\"\n+          ImportBuild.params(\"mill\").getMessage,\n+          bloopInstallProgress(\"mill\").message\n+        ).mkString(\"\\n\")\n+      )\n+      _ = client.messageRequests.clear() // restart\n+      _ = assertStatus(_.isInstalled)\n+      _ <- server.didChange(\"build.sc\")(_ + \"\\n// comment\")\n+      _ = assertNoDiff(client.workspaceMessageRequests, \"\")\n+      _ <- server.didSave(\"build.sc\")(identity)\n+      // Comment changes do not trigger \"re-import project\" request\n+      _ = assertNoDiff(client.workspaceMessageRequests, \"\")\n+      _ <- server.didChange(\"build.sc\") { text =>\n+        text + \"\"\"\n+          |object bar extends ScalaModule {\n+          |  def scalaVersion = \"2.12.8\"\n+         |}\n+        \"\"\"\n+      }\n+      _ = assertNoDiff(client.workspaceMessageRequests, \"\")\n+      _ <- server.didSave(\"build.sc\")(identity)\n+    } yield {\n+      assertNoDiff(\n+        client.workspaceMessageRequests,\n+        List(\n+          // Project has .bloop directory so user is asked to \"re-import project\"\n+          ImportBuildChanges.params(\"mill\").getMessage,\n+          bloopInstallProgress(\"mill\").message\n+        ).mkString(\"\\n\")\n+      )\n+    }\n+  }\n+\n+  testAsync(\"force-command\") {\n+    cleanWorkspace()\n+    for {\n+      _ <- server.initialize(\n+        \"\"\"\n+          |/build.sc\n+          |import mill._, scalalib._\n+          |object foo extends ScalaModule {\n+          |  def scalaVersion = \"2.12.8\"\n+          |}\n+        \"\"\".stripMargin\n+      )\n+      _ = assertNoDiff(\n+        client.workspaceMessageRequests,\n+        List(\n+          // Project has no .bloop directory so user is asked to \"import via bloop\"\n+          ImportBuild.params(\"mill\").getMessage,\n+          bloopInstallProgress(\"mill\").message\n+        ).mkString(\"\\n\")\n+      )\n+      _ = client.messageRequests.clear() // restart\n+      _ <- server.executeCommand(ServerCommands.ImportBuild.id)\n+      _ = assertNoDiff(\n+        client.workspaceMessageRequests,\n+        List(\n+          bloopInstallProgress(\"mill\").message\n+        ).mkString(\"\\n\")\n+      )\n+    } yield ()\n+  }\n+\n+  testAsync(\"new-dependency\") {\n+    cleanWorkspace()\n+    for {\n+      _ <- server.initialize(\n+        \"\"\"\n+          |/build.sc\n+          |import mill._, scalalib._\n+          |object foo extends ScalaModule {\n+          |  def scalaVersion = \"2.12.8\"\n+          |  def compileIvyDeps = Agg(\n+          |    ivy\"org.scala-lang:scala-reflect:${scalaVersion()}\"\n+          |  )\n+          |  /*DEPS*/\n+          |}\n+          |/foo/src/reload/Main.scala\n+          |package reload\n+          |object Main extends App {\n+          |  println(\"sourcecode.Line(42)\")\n+          |}\n+          |\"\"\".stripMargin\n+      )\n+      _ <- server.didOpen(\"foo/src/reload/Main.scala\")\n+      _ = assertNoDiff(client.workspaceDiagnostics, \"\")\n+      _ <- server.didSave(\"build.sc\") { text =>\n+        text.replace(\n+          \"/*DEPS*/\",\n+          \"def ivyDeps = Agg(ivy\\\"com.lihaoyi::sourcecode::0.1.4\\\")\"\n+        )\n+      }\n+      _ <- server\n+        .didSave(\"foo/src/reload/Main.scala\") { text =>\n+          text.replaceAll(\"\\\"\", \"\")\n+        }\n+        .recover { case e => scribe.error(\"compile\", e) }\n+      _ = assertNoDiff(client.workspaceDiagnostics, \"\")\n+    } yield ()\n+  }\n+\n+  testAsync(\"cancel\") {\n+    client.slowTaskHandler = params => {\n+      if (params == bloopInstallProgress(\"mill\")) {\n+        Thread.sleep(TimeUnit.SECONDS.toMillis(2))\n+        Some(MetalsSlowTaskResult(cancel = true))\n+      } else {\n+        None\n+      }\n+    }\n+    cleanWorkspace()\n+    for {\n+      _ <- server.initialize(\n+        \"\"\"\n+          |/build.sc\n+          |import mill._, scalalib._\n+          |object foo extends ScalaModule {\n+          |  def scalaVersion = \"2.12.8\"\n+          |  /*DIFF*/\n+          |}\n+        \"\"\".stripMargin,\n+        expectError = true\n+      )\n+      _ = assertStatus(!_.isInstalled)\n+      _ = client.slowTaskHandler = _ => None\n+      _ <- server.didSave(\"build.sc\")(_ + \"\\n// comment \\n\")\n+      _ = assertNoDiff(client.workspaceShowMessages, \"\")\n+      _ = assertStatus(!_.isInstalled)\n+      _ <- server.didSave(\"build.sc\") { text =>\n+        val a = text.replace(\"/*DIFF*/\", \"def test = 123\"); println(a); a\n+      }\n+      _ = assertNoDiff(client.workspaceShowMessages, \"\")\n+      _ = assertStatus(_.isInstalled)\n+    } yield ()\n+  }\n+\n+  testAsync(\"error\") {\n+    cleanWorkspace()\n+    for {\n+      _ <- server.initialize(\n+        \"\"\"|/build.sc\n+           |, syntax error\n+           |\"\"\".stripMargin,\n+        expectError = true\n+      )\n+      _ = assertNoDiff(\n+        client.workspaceMessageRequests,\n+        List(\n+          ImportBuild.params(\"mill\").getMessage,\n+          bloopInstallProgress(\"mill\").message\n+        ).mkString(\"\\n\")\n+      )\n+      _ = assertNoDiff(\n+        client.workspaceShowMessages,\n+        ImportProjectFailed.getMessage\n+      )\n+      _ = assertStatus(!_.isInstalled)\n+      _ = client.messageRequests.clear()\n+      _ <- server.didSave(\"build.sc\") { _ =>\n+        \"\"\"\n+          |import mill._, scalalib._\n+          |object foo extends ScalaModule {\n+          |  def scalaVersion = \"2.12.8\"\n+          |}\n+        \"\"\".stripMargin,\n+      }\n+      _ = assertNoDiff(\n+        client.workspaceMessageRequests,\n+        List(\n+          ImportBuild.params(\"mill\").getMessage,\n+          bloopInstallProgress(\"mill\").message\n+        ).mkString(\"\\n\")\n+      )\n+      _ = assertStatus(_.isInstalled)\n+    } yield ()\n+  }\n+\n+  testAsync(\"fatal-warnings\") {"
  }
]