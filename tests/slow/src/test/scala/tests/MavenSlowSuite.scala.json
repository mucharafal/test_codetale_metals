[
  {
    "id" : "da5d4e11-f66a-4ee4-ac46-8c78bdb9ad43",
    "prId" : 722,
    "comments" : [
      {
        "id" : "57b53864-107b-4782-95a5-25480f82b385",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "Extract to variable, so it is more readable ",
        "createdAt" : "2019-05-16T19:12:48Z",
        "updatedAt" : "2019-06-04T19:19:04Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "11fe128c6413d1e06c71678633c5f9d8649864ce",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,201 @@\n+package tests\n+\n+import scala.meta.internal.metals.Messages._\n+import scala.meta.io.AbsolutePath\n+import scala.meta.internal.builds.MavenDigest\n+import java.nio.file.Files\n+import java.nio.file.Paths\n+import scala.collection.JavaConverters._\n+import scala.meta.internal.metals.ServerCommands\n+\n+object MavenSlowSuite extends BaseImportSuite(\"maven-import\") {\n+\n+  val defaultPom = Files\n+    .readAllLines(\n+      Paths.get(\n+        this.getClass().getClassLoader().getResource(\"test-pom.xml\").toURI()"
  },
  {
    "id" : "89403d6f-1379-44da-b6da-73d94d845775",
    "prId" : 722,
    "comments" : [
      {
        "id" : "1afa17e9-0d77-4fa1-86d2-24d367cb00a6",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "FYI, we have a `AbsolutePath.readText` helper to read paths into strings. In this particular case, the idiomatic way to read the file from resources is\r\n\r\nhttps://github.com/scalameta/metals/blob/f28c35ac855ed58bd5bf30fcea70e8497c49e697/metals-bench/src/main/scala/bench/SourceCompletion.scala#L44-L50\r\n\r\nNo need for `getResource(\"...\").toURI().toPath.readText`",
        "createdAt" : "2019-05-20T15:37:37Z",
        "updatedAt" : "2019-06-04T19:19:04Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5d6f887b-fc19-4d75-8082-918a9279f718",
        "parentId" : "1afa17e9-0d77-4fa1-86d2-24d367cb00a6",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Fixed",
        "createdAt" : "2019-05-21T10:23:07Z",
        "updatedAt" : "2019-06-04T19:19:04Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "11fe128c6413d1e06c71678633c5f9d8649864ce",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,200 @@\n+package tests\n+\n+import scala.meta.internal.metals.Messages._\n+import scala.meta.io.AbsolutePath\n+import scala.meta.internal.builds.MavenDigest\n+import java.nio.file.Files\n+import java.nio.file.Paths\n+import scala.collection.JavaConverters._\n+import scala.meta.internal.metals.ServerCommands\n+\n+object MavenSlowSuite extends BaseImportSuite(\"maven-import\") {\n+\n+  val defaultPomPath = Paths.get(\n+    this.getClass().getClassLoader().getResource(\"test-pom.xml\").toURI()\n+  )\n+  val defaultPom = Files"
  },
  {
    "id" : "b673ea06-a5ca-4407-b620-803976dd483b",
    "prId" : 722,
    "comments" : [
      {
        "id" : "1eeee3c0-b180-452e-929b-101cfae79f82",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "üëç Hopefully this will be automatically handled by Bloop in the future",
        "createdAt" : "2019-05-20T15:38:50Z",
        "updatedAt" : "2019-06-04T19:19:04Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "11fe128c6413d1e06c71678633c5f9d8649864ce",
    "line" : 82,
    "diffHunk" : "@@ -0,0 +1,200 @@\n+package tests\n+\n+import scala.meta.internal.metals.Messages._\n+import scala.meta.io.AbsolutePath\n+import scala.meta.internal.builds.MavenDigest\n+import java.nio.file.Files\n+import java.nio.file.Paths\n+import scala.collection.JavaConverters._\n+import scala.meta.internal.metals.ServerCommands\n+\n+object MavenSlowSuite extends BaseImportSuite(\"maven-import\") {\n+\n+  val defaultPomPath = Paths.get(\n+    this.getClass().getClassLoader().getResource(\"test-pom.xml\").toURI()\n+  )\n+  val defaultPom = Files\n+    .readAllLines(defaultPomPath)\n+    .asScala\n+    .mkString(\"\\n\")\n+\n+  override def currentDigest(\n+      workspace: AbsolutePath\n+  ): Option[String] = MavenDigest.current(workspace)\n+\n+  testAsync(\"basic\") {\n+    cleanWorkspace()\n+    for {\n+      _ <- server.initialize(\n+        s\"\"\"|/pom.xml\n+            |$defaultPom\n+            |\"\"\".stripMargin\n+      )\n+      _ = assertNoDiff(\n+        client.workspaceMessageRequests,\n+        List(\n+          ImportBuild.params(\"maven\").getMessage,\n+          bloopInstallProgress(\"maven\").message,\n+          // we don't have semanticDB plugin yet\n+          CheckDoctor.allProjectsMisconfigured\n+        ).mkString(\"\\n\")\n+      )\n+      _ = client.messageRequests.clear() // restart\n+      _ = assertStatus(_.isInstalled)\n+      _ <- server.didChange(\"pom.xml\")(\n+        _ =>\n+          defaultPom\n+            .replace(\"<!--URL-->\", \"<!--Your comment--><!--MARKER-->\")\n+      )\n+      _ = assertNoDiff(client.workspaceMessageRequests, \"\")\n+      _ <- server.didSave(\"pom.xml\")(identity)\n+      // Comment changes do not trigger \"re-import project\" request\n+      _ = assertNoDiff(client.workspaceMessageRequests, \"\")\n+      _ <- server.didChange(\"pom.xml\") { _ =>\n+        defaultPom.replace(\"<!--URL-->\", \"http://www.example.com\")\n+      }\n+      _ = assertNoDiff(client.workspaceMessageRequests, \"\")\n+      _ <- server.didSave(\"pom.xml\")(identity)\n+    } yield {\n+      assertNoDiff(\n+        client.workspaceMessageRequests,\n+        List(\n+          // Project has .bloop directory so user is asked to \"re-import project\"\n+          ImportBuildChanges.params(\"maven\").getMessage,\n+          bloopInstallProgress(\"maven\").message\n+        ).mkString(\"\\n\")\n+      )\n+    }\n+  }\n+\n+  testAsync(\"force-command\") {\n+    cleanWorkspace()\n+    for {\n+      _ <- server.initialize(\n+        s\"\"\"|/pom.xml\n+            |$defaultPom\n+            |\"\"\".stripMargin\n+      )\n+      _ = assertNoDiff(\n+        client.workspaceMessageRequests,\n+        List(\n+          ImportBuild.params(\"maven\").getMessage,\n+          bloopInstallProgress(\"maven\").message,\n+          // we don't have semanticDB plugin yet\n+          CheckDoctor.allProjectsMisconfigured"
  }
]