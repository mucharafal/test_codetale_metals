[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "I find having so many triplet fields confusing. @jegonzal do we really need this?\n",
    "commit": "f5b65d0695594781324c3ddb9c41ec53a476ac95",
    "createdAt": "2014-11-12T07:46:09Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.graphx;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * Represents a subset of the fields of an [[EdgeTriplet]] or [[EdgeContext]]. This allows the\n+ * system to populate only those fields for efficiency.\n+ */\n+public class TripletFields implements Serializable {\n+  public final boolean useSrc;\n+  public final boolean useDst;\n+  public final boolean useEdge;\n+\n+  public TripletFields() {\n+    this(true, true, true);\n+  }\n+\n+  public TripletFields(boolean useSrc, boolean useDst, boolean useEdge) {\n+    this.useSrc = useSrc;\n+    this.useDst = useDst;\n+    this.useEdge = useEdge;\n+  }\n+\n+  public static final TripletFields None = new TripletFields(false, false, false);",
    "line": 41
  }, {
    "author": {
      "login": "jegonzal"
    },
    "body": "Hmm, I agree though I used many of them in the `GraphOps` code and decided maybe it would make sense to go ahead and be exhaustive.  I think we could cut a few.\n",
    "commit": "f5b65d0695594781324c3ddb9c41ec53a476ac95",
    "createdAt": "2014-11-12T19:27:41Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.graphx;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * Represents a subset of the fields of an [[EdgeTriplet]] or [[EdgeContext]]. This allows the\n+ * system to populate only those fields for efficiency.\n+ */\n+public class TripletFields implements Serializable {\n+  public final boolean useSrc;\n+  public final boolean useDst;\n+  public final boolean useEdge;\n+\n+  public TripletFields() {\n+    this(true, true, true);\n+  }\n+\n+  public TripletFields(boolean useSrc, boolean useDst, boolean useEdge) {\n+    this.useSrc = useSrc;\n+    this.useDst = useDst;\n+    this.useEdge = useEdge;\n+  }\n+\n+  public static final TripletFields None = new TripletFields(false, false, false);",
    "line": 41
  }, {
    "author": {
      "login": "jegonzal"
    },
    "body": "How about we just keep:\n\n```\nEdgeOnly, SrcAndEdge, DstAndEdge, All\n```\n",
    "commit": "f5b65d0695594781324c3ddb9c41ec53a476ac95",
    "createdAt": "2014-11-12T22:35:29Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.graphx;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * Represents a subset of the fields of an [[EdgeTriplet]] or [[EdgeContext]]. This allows the\n+ * system to populate only those fields for efficiency.\n+ */\n+public class TripletFields implements Serializable {\n+  public final boolean useSrc;\n+  public final boolean useDst;\n+  public final boolean useEdge;\n+\n+  public TripletFields() {\n+    this(true, true, true);\n+  }\n+\n+  public TripletFields(boolean useSrc, boolean useDst, boolean useEdge) {\n+    this.useSrc = useSrc;\n+    this.useDst = useDst;\n+    this.useEdge = useEdge;\n+  }\n+\n+  public static final TripletFields None = new TripletFields(false, false, false);",
    "line": 41
  }],
  "prId": 3100
}]