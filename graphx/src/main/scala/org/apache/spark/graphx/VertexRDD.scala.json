[{
  "comments": [{
    "author": {
      "login": "ankurdave"
    },
    "body": "It would be good to add a version that takes a VertexRDD, similar to the other methods below. That way we could avoid calling createUsingIndex when we already have two VertexRDDs that share the same index.\n",
    "commit": "248d5c8dc63f98706450be5342cc98be083987bf",
    "createdAt": "2015-03-25T03:29:49Z",
    "diffHunk": "@@ -122,6 +122,14 @@ abstract class VertexRDD[VD](\n   def mapValues[VD2: ClassTag](f: (VertexId, VD) => VD2): VertexRDD[VD2]\n \n   /**\n+   * For each VertexId present in both `this` and `other`, minus will act as a set difference\n+   * operation returning only those unique VertexId's present in `this`.\n+   *\n+   * @param other an RDD to run the set operation against\n+   */\n+  def minus(other: RDD[(VertexId, VD)]): VertexRDD[VD]",
    "line": 9
  }],
  "prId": 5175
}]