[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "we should do the same thing here too to avoid breaking apis.\n",
    "commit": "774f0fcc9bcb2d5c468a7d56c4144453d31258a5",
    "createdAt": "2016-02-20T04:54:23Z",
    "diffHunk": "@@ -29,13 +29,14 @@ object ConnectedComponents {\n    *\n    * @tparam VD the vertex attribute type (discarded in the computation)\n    * @tparam ED the edge attribute type (preserved in the computation)\n-   *\n    * @param graph the graph for which to compute the connected components\n-   *\n+   * @param numIter the maximum number of iterations to run for\n    * @return a graph with vertex attributes containing the smallest vertex in each\n    *         connected component\n    */\n-  def run[VD: ClassTag, ED: ClassTag](graph: Graph[VD, ED]): Graph[VertexId, ED] = {\n+  def run[VD: ClassTag, ED: ClassTag](graph: Graph[VD, ED],\n+                                      numIter: Int = Int.MaxValue): Graph[VertexId, ED] = {"
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "and call it maxIterations\n",
    "commit": "774f0fcc9bcb2d5c468a7d56c4144453d31258a5",
    "createdAt": "2016-02-20T04:54:31Z",
    "diffHunk": "@@ -29,13 +29,14 @@ object ConnectedComponents {\n    *\n    * @tparam VD the vertex attribute type (discarded in the computation)\n    * @tparam ED the edge attribute type (preserved in the computation)\n-   *\n    * @param graph the graph for which to compute the connected components\n-   *\n+   * @param numIter the maximum number of iterations to run for\n    * @return a graph with vertex attributes containing the smallest vertex in each\n    *         connected component\n    */\n-  def run[VD: ClassTag, ED: ClassTag](graph: Graph[VD, ED]): Graph[VertexId, ED] = {\n+  def run[VD: ClassTag, ED: ClassTag](graph: Graph[VD, ED],\n+                                      numIter: Int = Int.MaxValue): Graph[VertexId, ED] = {"
  }, {
    "author": {
      "login": "zhengruifeng"
    },
    "body": "ok, all those options are renamed\n",
    "commit": "774f0fcc9bcb2d5c468a7d56c4144453d31258a5",
    "createdAt": "2016-02-20T05:22:12Z",
    "diffHunk": "@@ -29,13 +29,14 @@ object ConnectedComponents {\n    *\n    * @tparam VD the vertex attribute type (discarded in the computation)\n    * @tparam ED the edge attribute type (preserved in the computation)\n-   *\n    * @param graph the graph for which to compute the connected components\n-   *\n+   * @param numIter the maximum number of iterations to run for\n    * @return a graph with vertex attributes containing the smallest vertex in each\n    *         connected component\n    */\n-  def run[VD: ClassTag, ED: ClassTag](graph: Graph[VD, ED]): Graph[VertexId, ED] = {\n+  def run[VD: ClassTag, ED: ClassTag](graph: Graph[VD, ED],\n+                                      numIter: Int = Int.MaxValue): Graph[VertexId, ED] = {"
  }],
  "prId": 11268
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "for this one, we should also just overload it so we don't break binary compatibility. \n",
    "commit": "774f0fcc9bcb2d5c468a7d56c4144453d31258a5",
    "createdAt": "2016-02-20T05:24:51Z",
    "diffHunk": "@@ -29,13 +29,14 @@ object ConnectedComponents {\n    *\n    * @tparam VD the vertex attribute type (discarded in the computation)\n    * @tparam ED the edge attribute type (preserved in the computation)\n-   *\n    * @param graph the graph for which to compute the connected components\n-   *\n+   * @param maxIterations the maximum number of iterations to run for\n    * @return a graph with vertex attributes containing the smallest vertex in each\n    *         connected component\n    */\n-  def run[VD: ClassTag, ED: ClassTag](graph: Graph[VD, ED]): Graph[VertexId, ED] = {\n+  def run[VD: ClassTag, ED: ClassTag](graph: Graph[VD, ED],\n+                                      maxIterations: Int = Int.MaxValue): Graph[VertexId, ED] = {"
  }, {
    "author": {
      "login": "zhengruifeng"
    },
    "body": "ok, another run api without maxIterations options is added\n",
    "commit": "774f0fcc9bcb2d5c468a7d56c4144453d31258a5",
    "createdAt": "2016-02-20T12:38:33Z",
    "diffHunk": "@@ -29,13 +29,14 @@ object ConnectedComponents {\n    *\n    * @tparam VD the vertex attribute type (discarded in the computation)\n    * @tparam ED the edge attribute type (preserved in the computation)\n-   *\n    * @param graph the graph for which to compute the connected components\n-   *\n+   * @param maxIterations the maximum number of iterations to run for\n    * @return a graph with vertex attributes containing the smallest vertex in each\n    *         connected component\n    */\n-  def run[VD: ClassTag, ED: ClassTag](graph: Graph[VD, ED]): Graph[VertexId, ED] = {\n+  def run[VD: ClassTag, ED: ClassTag](graph: Graph[VD, ED],\n+                                      maxIterations: Int = Int.MaxValue): Graph[VertexId, ED] = {"
  }],
  "prId": 11268
}]