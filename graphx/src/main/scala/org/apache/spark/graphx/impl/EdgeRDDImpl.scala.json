[{
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "The code below has the same problem in case of an empty edge?\r\nhttps://github.com/apache/spark/blob/ae5b2a6a92be4986ef5b8062d7fb59318cff6430/graphx/src/main/scala/org/apache/spark/graphx/lib/SVDPlusPlus.scala#L75",
    "commit": "de47631a0db84d285e4daafb5fdfffcace96a7c2",
    "createdAt": "2019-01-31T00:58:45Z",
    "diffHunk": "@@ -87,7 +87,7 @@ class EdgeRDDImpl[ED: ClassTag, VD: ClassTag] private[graphx] (\n \n   /** The number of edges in the RDD. */\n   override def count(): Long = {\n-    partitionsRDD.map(_._2.size.toLong).reduce(_ + _)\n+    partitionsRDD.map(_._2.size.toLong).fold(0)(_ + _)",
    "line": 5
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Oh nice catch, yeah. I searched for other \"reduce\" calls but didn't hit this one.",
    "commit": "de47631a0db84d285e4daafb5fdfffcace96a7c2",
    "createdAt": "2019-01-31T02:30:59Z",
    "diffHunk": "@@ -87,7 +87,7 @@ class EdgeRDDImpl[ED: ClassTag, VD: ClassTag] private[graphx] (\n \n   /** The number of edges in the RDD. */\n   override def count(): Long = {\n-    partitionsRDD.map(_._2.size.toLong).reduce(_ + _)\n+    partitionsRDD.map(_._2.size.toLong).fold(0)(_ + _)",
    "line": 5
  }, {
    "author": {
      "login": "huonw"
    },
    "body": "Indeed it does. I've switched that to `fold` too.",
    "commit": "de47631a0db84d285e4daafb5fdfffcace96a7c2",
    "createdAt": "2019-01-31T02:45:39Z",
    "diffHunk": "@@ -87,7 +87,7 @@ class EdgeRDDImpl[ED: ClassTag, VD: ClassTag] private[graphx] (\n \n   /** The number of edges in the RDD. */\n   override def count(): Long = {\n-    partitionsRDD.map(_._2.size.toLong).reduce(_ + _)\n+    partitionsRDD.map(_._2.size.toLong).fold(0)(_ + _)",
    "line": 5
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "Great, thanks!",
    "commit": "de47631a0db84d285e4daafb5fdfffcace96a7c2",
    "createdAt": "2019-01-31T03:28:45Z",
    "diffHunk": "@@ -87,7 +87,7 @@ class EdgeRDDImpl[ED: ClassTag, VD: ClassTag] private[graphx] (\n \n   /** The number of edges in the RDD. */\n   override def count(): Long = {\n-    partitionsRDD.map(_._2.size.toLong).reduce(_ + _)\n+    partitionsRDD.map(_._2.size.toLong).fold(0)(_ + _)",
    "line": 5
  }],
  "prId": 23681
}]