[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "So this just happened to work because `VertexId` happens to be an alias for `Long`?\n",
    "commit": "02132eb5244559c766279e6c132a00b9b54a64c3",
    "createdAt": "2015-08-14T08:33:54Z",
    "diffHunk": "@@ -43,7 +43,7 @@ object LabelPropagation {\n    */\n   def run[VD, ED: ClassTag](graph: Graph[VD, ED], maxSteps: Int): Graph[VertexId, ED] = {\n     val lpaGraph = graph.mapVertices { case (vid, _) => vid }\n-    def sendMessage(e: EdgeTriplet[VertexId, ED]): Iterator[(VertexId, Map[VertexId, VertexId])] = {\n+    def sendMessage(e: EdgeTriplet[VertexId, ED]): Iterator[(VertexId, Map[VertexId, Long])] = {",
    "line": 5
  }, {
    "author": {
      "login": "blindFS"
    },
    "body": "I think so\n",
    "commit": "02132eb5244559c766279e6c132a00b9b54a64c3",
    "createdAt": "2015-08-14T08:36:34Z",
    "diffHunk": "@@ -43,7 +43,7 @@ object LabelPropagation {\n    */\n   def run[VD, ED: ClassTag](graph: Graph[VD, ED], maxSteps: Int): Graph[VertexId, ED] = {\n     val lpaGraph = graph.mapVertices { case (vid, _) => vid }\n-    def sendMessage(e: EdgeTriplet[VertexId, ED]): Iterator[(VertexId, Map[VertexId, VertexId])] = {\n+    def sendMessage(e: EdgeTriplet[VertexId, ED]): Iterator[(VertexId, Map[VertexId, Long])] = {",
    "line": 5
  }],
  "prId": 8188
}]