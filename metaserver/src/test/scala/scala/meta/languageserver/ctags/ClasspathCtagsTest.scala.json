[
  {
    "id" : "a53ad23b-80de-4ef4-900e-0f2b30a8fbf1",
    "prId" : 23,
    "comments" : [
      {
        "id" : "7edc1943-e4a4-4a45-920e-e5eb15c4735b",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "should we group this under a `ci-slow` target to run separately (like we do in Scalafix?)",
        "createdAt" : "2017-11-14T09:25:46Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8f4de308-b993-47a8-a870-83cadbe5ceab",
        "parentId" : "7edc1943-e4a4-4a45-920e-e5eb15c4735b",
        "author" : {
          "login" : "ShaneDelmore",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "body" : "I like the idea of a CI slow category as well. ",
        "createdAt" : "2017-11-14T13:39:29Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "ShaneDelmore",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5e9272f240feb4f00bdea5ee50e2808699cd0d0e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,268 @@\n+package scala.meta.languageserver.ctags\n+\n+import java.nio.file.Paths\n+import scala.meta.languageserver.Jars\n+import scala.meta.testkit.DiffAssertions\n+import org.scalatest.FunSuite\n+\n+class ClasspathCtagsTest extends FunSuite with DiffAssertions {\n+\n+  // NOTE(olafur) this test is a bit slow since it downloads jars from the internet.\n+  test(\"index classpath\") {"
  },
  {
    "id" : "ad9a905f-7bae-4d5a-88ed-3ede3e38efed",
    "prId" : 23,
    "comments" : [
      {
        "id" : "5784e988-66a8-47b6-9e8f-d7df73b27853",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Now I see what you mean. Yes, we really miss https://facebook.github.io/jest/docs/en/snapshot-testing.html in Scala",
        "createdAt" : "2017-11-14T09:26:46Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "737ed708-c900-4455-8929-6f6b64e45718",
        "parentId" : "5784e988-66a8-47b6-9e8f-d7df73b27853",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "YES I WANT DIS IN SCALA 🙏 ",
        "createdAt" : "2017-11-14T19:40:52Z",
        "updatedAt" : "2017-11-14T20:08:40Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5e9272f240feb4f00bdea5ee50e2808699cd0d0e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,268 @@\n+package scala.meta.languageserver.ctags\n+\n+import java.nio.file.Paths\n+import scala.meta.languageserver.Jars\n+import scala.meta.testkit.DiffAssertions\n+import org.scalatest.FunSuite\n+\n+class ClasspathCtagsTest extends FunSuite with DiffAssertions {\n+\n+  // NOTE(olafur) this test is a bit slow since it downloads jars from the internet.\n+  test(\"index classpath\") {\n+    val classpath = Jars.fetch(\n+      \"com.lihaoyi\",\n+      \"sourcecode_2.12\",\n+      \"0.1.4\",\n+      System.out,\n+      sources = true\n+    )\n+    val Compat = Paths.get(\"sourcecode\").resolve(\"Compat.scala\")\n+    val SourceContext = Paths.get(\"sourcecode\").resolve(\"SourceContext.scala\")\n+    val Predef = Paths.get(\"scala\").resolve(\"io\").resolve(\"AnsiColor.scala\")\n+    val CharRef = Paths.get(\"scala\").resolve(\"runtime\").resolve(\"CharRef.java\")\n+    val docs = List.newBuilder[String]\n+    Ctags.index(\n+      classpath,\n+      shouldIndex = { path =>\n+        path.toNIO.endsWith(CharRef) ||\n+        path.toNIO.endsWith(Compat) ||\n+        path.toNIO.endsWith(SourceContext) ||\n+        path.toNIO.endsWith(Predef)\n+      }\n+    ) { doc =>\n+      val path = Paths.get(doc.input.syntax).getFileName.toString\n+      val underline = \"-\" * path.length\n+      docs +=\n+        s\"\"\"$path\n+           |$underline\n+           |\n+           |$doc\"\"\".stripMargin\n+    }\n+    val obtained = docs.result().sorted.mkString(\"\\n\\n\")\n+    println(obtained)\n+    val expected =\n+      \"\"\"\n+         |AnsiColor.scala\n+         |---------------\n+         |\n+         |Language:\n+         |Scala212\n+         |\n+         |Names:\n+         |[3580..3589): AnsiColor <= _root_.scala.io.AnsiColor#\n+         |[3674..3679): BLACK <= _root_.scala.io.AnsiColor#BLACK.\n+         |[3778..3781): RED <= _root_.scala.io.AnsiColor#RED.\n+         |[3886..3891): GREEN <= _root_.scala.io.AnsiColor#GREEN.\n+         |[3996..4002): YELLOW <= _root_.scala.io.AnsiColor#YELLOW.\n+         |[4102..4106): BLUE <= _root_.scala.io.AnsiColor#BLUE.\n+         |[4214..4221): MAGENTA <= _root_.scala.io.AnsiColor#MAGENTA.\n+         |[4320..4324): CYAN <= _root_.scala.io.AnsiColor#CYAN.\n+         |[4428..4433): WHITE <= _root_.scala.io.AnsiColor#WHITE.\n+         |[4537..4544): BLACK_B <= _root_.scala.io.AnsiColor#BLACK_B.\n+         |[4641..4646): RED_B <= _root_.scala.io.AnsiColor#RED_B.\n+         |[4749..4756): GREEN_B <= _root_.scala.io.AnsiColor#GREEN_B.\n+         |[4859..4867): YELLOW_B <= _root_.scala.io.AnsiColor#YELLOW_B.\n+         |[4965..4971): BLUE_B <= _root_.scala.io.AnsiColor#BLUE_B.\n+         |[5077..5086): MAGENTA_B <= _root_.scala.io.AnsiColor#MAGENTA_B.\n+         |[5183..5189): CYAN_B <= _root_.scala.io.AnsiColor#CYAN_B.\n+         |[5291..5298): WHITE_B <= _root_.scala.io.AnsiColor#WHITE_B.\n+         |[5388..5393): RESET <= _root_.scala.io.AnsiColor#RESET.\n+         |[5475..5479): BOLD <= _root_.scala.io.AnsiColor#BOLD.\n+         |[5568..5578): UNDERLINED <= _root_.scala.io.AnsiColor#UNDERLINED.\n+         |[5656..5661): BLINK <= _root_.scala.io.AnsiColor#BLINK.\n+         |[5747..5755): REVERSED <= _root_.scala.io.AnsiColor#REVERSED.\n+         |[5839..5848): INVISIBLE <= _root_.scala.io.AnsiColor#INVISIBLE.\n+         |[5874..5883): AnsiColor <= _root_.scala.io.AnsiColor.\n+         |\n+         |Symbols:\n+         |_root_.scala.io.AnsiColor# => trait AnsiColor\n+         |_root_.scala.io.AnsiColor#BLACK. => def BLACK\n+         |_root_.scala.io.AnsiColor#BLACK_B. => def BLACK_B\n+         |_root_.scala.io.AnsiColor#BLINK. => def BLINK\n+         |_root_.scala.io.AnsiColor#BLUE. => def BLUE\n+         |_root_.scala.io.AnsiColor#BLUE_B. => def BLUE_B\n+         |_root_.scala.io.AnsiColor#BOLD. => def BOLD\n+         |_root_.scala.io.AnsiColor#CYAN. => def CYAN\n+         |_root_.scala.io.AnsiColor#CYAN_B. => def CYAN_B\n+         |_root_.scala.io.AnsiColor#GREEN. => def GREEN\n+         |_root_.scala.io.AnsiColor#GREEN_B. => def GREEN_B\n+         |_root_.scala.io.AnsiColor#INVISIBLE. => def INVISIBLE\n+         |_root_.scala.io.AnsiColor#MAGENTA. => def MAGENTA\n+         |_root_.scala.io.AnsiColor#MAGENTA_B. => def MAGENTA_B\n+         |_root_.scala.io.AnsiColor#RED. => def RED\n+         |_root_.scala.io.AnsiColor#RED_B. => def RED_B\n+         |_root_.scala.io.AnsiColor#RESET. => def RESET\n+         |_root_.scala.io.AnsiColor#REVERSED. => def REVERSED\n+         |_root_.scala.io.AnsiColor#UNDERLINED. => def UNDERLINED\n+         |_root_.scala.io.AnsiColor#WHITE. => def WHITE\n+         |_root_.scala.io.AnsiColor#WHITE_B. => def WHITE_B\n+         |_root_.scala.io.AnsiColor#YELLOW. => def YELLOW\n+         |_root_.scala.io.AnsiColor#YELLOW_B. => def YELLOW_B\n+         |_root_.scala.io.AnsiColor. => object AnsiColor\n+         |\n+         |\n+         |CharRef.java\n+         |------------\n+         |\n+         |Language:\n+         |Java\n+         |\n+         |Names:\n+         |[267..272): scala => _root_.scala.\n+         |[542..549): runtime => _root_.scala.runtime.\n+         |[566..573): CharRef <= _root_.scala.runtime.CharRef.\n+         |[566..573): CharRef <= _root_.scala.runtime.CharRef#\n+         |[638..654): serialVersionUID <= _root_.scala.runtime.CharRef.serialVersionUID.\n+         |[696..700): elem <= _root_.scala.runtime.CharRef#elem.\n+         |[772..780): toString <= _root_.scala.runtime.CharRef#toString.\n+         |[857..863): create <= _root_.scala.runtime.CharRef.create.\n+         |[925..929): zero <= _root_.scala.runtime.CharRef.zero.\n+         |\n+         |Symbols:\n+         |_root_.scala. => package scala\n+         |_root_.scala.runtime. => package runtime\n+         |_root_.scala.runtime.CharRef# => class CharRef\n+         |_root_.scala.runtime.CharRef#elem. => var elem\n+         |_root_.scala.runtime.CharRef#toString. => def toString\n+         |_root_.scala.runtime.CharRef. => object CharRef\n+         |_root_.scala.runtime.CharRef.create. => def create\n+         |_root_.scala.runtime.CharRef.serialVersionUID. => val serialVersionUID\n+         |_root_.scala.runtime.CharRef.zero. => def zero\n+         |\n+         |\n+         |Compat.scala\n+         |------------\n+         |\n+         |Language:\n+         |Scala212\n+         |\n+         |Names:\n+         |[27..33): Compat <= _root_.sourcecode.Compat.\n+         |[96..110): enclosingOwner <= _root_.sourcecode.Compat.enclosingOwner.\n+         |[158..176): enclosingParamList <= _root_.sourcecode.Compat.enclosingParamList.\n+         |\n+         |Symbols:\n+         |_root_.sourcecode.Compat. => object Compat\n+         |_root_.sourcecode.Compat.enclosingOwner. => def enclosingOwner\n+         |_root_.sourcecode.Compat.enclosingParamList. => def enclosingParamList\n+         |\n+         |\n+         |SourceContext.scala\n+         |-------------------\n+         |\n+         |Language:\n+         |Scala212\n+         |\n+         |Names:\n+         |[65..69): Util <= _root_.sourcecode.Util.\n+         |[77..88): isSynthetic <= _root_.sourcecode.Util.isSynthetic.\n+         |[160..175): isSyntheticName <= _root_.sourcecode.Util.isSyntheticName.\n+         |[279..286): getName <= _root_.sourcecode.Util.getName.\n+         |[367..378): SourceValue <= _root_.sourcecode.SourceValue#\n+         |[415..430): SourceCompanion <= _root_.sourcecode.SourceCompanion#\n+         |[477..482): apply <= _root_.sourcecode.SourceCompanion#apply.\n+         |[528..532): wrap <= _root_.sourcecode.SourceCompanion#wrap.\n+         |[566..570): Name <= _root_.sourcecode.Name#\n+         |[621..625): Name <= _root_.sourcecode.Name.\n+         |[728..732): impl <= _root_.sourcecode.Name.impl.\n+         |[1015..1022): Machine <= _root_.sourcecode.Name.Machine#\n+         |[1075..1082): Machine <= _root_.sourcecode.Name.Machine.\n+         |[1197..1201): impl <= _root_.sourcecode.Name.Machine.impl.\n+         |[1435..1443): FullName <= _root_.sourcecode.FullName#\n+         |[1494..1502): FullName <= _root_.sourcecode.FullName.\n+         |[1617..1621): impl <= _root_.sourcecode.FullName.impl.\n+         |[1952..1959): Machine <= _root_.sourcecode.FullName.Machine#\n+         |[2012..2019): Machine <= _root_.sourcecode.FullName.Machine.\n+         |[2135..2139): impl <= _root_.sourcecode.FullName.Machine.impl.\n+         |[2366..2370): File <= _root_.sourcecode.File#\n+         |[2421..2425): File <= _root_.sourcecode.File.\n+         |[2539..2543): impl <= _root_.sourcecode.File.impl.\n+         |[2735..2739): Line <= _root_.sourcecode.Line#\n+         |[2784..2788): Line <= _root_.sourcecode.Line.\n+         |[2898..2902): impl <= _root_.sourcecode.Line.impl.\n+         |[3087..3096): Enclosing <= _root_.sourcecode.Enclosing#\n+         |[3148..3157): Enclosing <= _root_.sourcecode.Enclosing.\n+         |[3274..3278): impl <= _root_.sourcecode.Enclosing.impl.\n+         |[3395..3402): Machine <= _root_.sourcecode.Enclosing.Machine#\n+         |[3455..3462): Machine <= _root_.sourcecode.Enclosing.Machine.\n+         |[3577..3581): impl <= _root_.sourcecode.Enclosing.Machine.impl.\n+         |[3678..3681): Pkg <= _root_.sourcecode.Pkg#\n+         |[3732..3735): Pkg <= _root_.sourcecode.Pkg.\n+         |[3834..3838): impl <= _root_.sourcecode.Pkg.impl.\n+         |[3924..3928): Text <= _root_.sourcecode.Text#\n+         |[3965..3969): Text <= _root_.sourcecode.Text.\n+         |[4102..4106): Args <= _root_.sourcecode.Args#\n+         |[4179..4183): Args <= _root_.sourcecode.Args.\n+         |[4297..4301): impl <= _root_.sourcecode.Args.impl.\n+         |[4627..4632): Impls <= _root_.sourcecode.Impls.\n+         |[4640..4644): text <= _root_.sourcecode.Impls.text.\n+         |[5312..5317): Chunk <= _root_.sourcecode.Impls.Chunk#\n+         |[5327..5332): Chunk <= _root_.sourcecode.Impls.Chunk.\n+         |[5349..5352): Pkg <= _root_.sourcecode.Impls.Chunk.Pkg#\n+         |[5396..5399): Obj <= _root_.sourcecode.Impls.Chunk.Obj#\n+         |[5443..5446): Cls <= _root_.sourcecode.Impls.Chunk.Cls#\n+         |[5490..5493): Trt <= _root_.sourcecode.Impls.Chunk.Trt#\n+         |[5537..5540): Val <= _root_.sourcecode.Impls.Chunk.Val#\n+         |[5584..5587): Var <= _root_.sourcecode.Impls.Chunk.Var#\n+         |[5631..5634): Lzy <= _root_.sourcecode.Impls.Chunk.Lzy#\n+         |[5678..5681): Def <= _root_.sourcecode.Impls.Chunk.Def#\n+         |[5722..5731): enclosing <= _root_.sourcecode.Impls.enclosing.\n+         |\n+         |Symbols:\n+         |_root_.sourcecode.Args# => class Args\n+         |_root_.sourcecode.Args. => object Args\n+         |_root_.sourcecode.Args.impl. => def impl\n+         |_root_.sourcecode.Enclosing# => class Enclosing\n+         |_root_.sourcecode.Enclosing. => object Enclosing\n+         |_root_.sourcecode.Enclosing.Machine# => class Machine\n+         |_root_.sourcecode.Enclosing.Machine. => object Machine\n+         |_root_.sourcecode.Enclosing.Machine.impl. => def impl\n+         |_root_.sourcecode.Enclosing.impl. => def impl\n+         |_root_.sourcecode.File# => class File\n+         |_root_.sourcecode.File. => object File\n+         |_root_.sourcecode.File.impl. => def impl\n+         |_root_.sourcecode.FullName# => class FullName\n+         |_root_.sourcecode.FullName. => object FullName\n+         |_root_.sourcecode.FullName.Machine# => class Machine\n+         |_root_.sourcecode.FullName.Machine. => object Machine\n+         |_root_.sourcecode.FullName.Machine.impl. => def impl\n+         |_root_.sourcecode.FullName.impl. => def impl\n+         |_root_.sourcecode.Impls. => object Impls\n+         |_root_.sourcecode.Impls.Chunk# => trait Chunk\n+         |_root_.sourcecode.Impls.Chunk. => object Chunk\n+         |_root_.sourcecode.Impls.Chunk.Cls# => class Cls\n+         |_root_.sourcecode.Impls.Chunk.Def# => class Def\n+         |_root_.sourcecode.Impls.Chunk.Lzy# => class Lzy\n+         |_root_.sourcecode.Impls.Chunk.Obj# => class Obj\n+         |_root_.sourcecode.Impls.Chunk.Pkg# => class Pkg\n+         |_root_.sourcecode.Impls.Chunk.Trt# => class Trt\n+         |_root_.sourcecode.Impls.Chunk.Val# => class Val\n+         |_root_.sourcecode.Impls.Chunk.Var# => class Var\n+         |_root_.sourcecode.Impls.enclosing. => def enclosing\n+         |_root_.sourcecode.Impls.text. => def text\n+         |_root_.sourcecode.Line# => class Line\n+         |_root_.sourcecode.Line. => object Line\n+         |_root_.sourcecode.Line.impl. => def impl\n+         |_root_.sourcecode.Name# => class Name\n+         |_root_.sourcecode.Name. => object Name\n+         |_root_.sourcecode.Name.Machine# => class Machine\n+         |_root_.sourcecode.Name.Machine. => object Machine\n+         |_root_.sourcecode.Name.Machine.impl. => def impl\n+         |_root_.sourcecode.Name.impl. => def impl\n+         |_root_.sourcecode.Pkg# => class Pkg\n+         |_root_.sourcecode.Pkg. => object Pkg\n+         |_root_.sourcecode.Pkg.impl. => def impl\n+         |_root_.sourcecode.SourceCompanion# => class SourceCompanion\n+         |_root_.sourcecode.SourceCompanion#apply. => def apply\n+         |_root_.sourcecode.SourceCompanion#wrap. => def wrap\n+         |_root_.sourcecode.SourceValue# => class SourceValue\n+         |_root_.sourcecode.Text# => class Text\n+         |_root_.sourcecode.Text. => object Text\n+         |_root_.sourcecode.Util. => object Util\n+         |_root_.sourcecode.Util.getName. => def getName\n+         |_root_.sourcecode.Util.isSynthetic. => def isSynthetic\n+         |_root_.sourcecode.Util.isSyntheticName. => def isSyntheticName\n+      \"\"\".stripMargin"
  }
]