[
  {
    "id" : "9c6781ee-f5f1-4129-8f01-b48bbed1d23a",
    "prId" : 100,
    "comments" : [
      {
        "id" : "28868f69-b53b-44b2-b94b-e7f42e2d05bb",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Not sure about the difference between `schema.Database` and `semanticdb.Database`, but since `InteractiveSemanticdb.toDocument` returns a `semanticdb.Document` it seemed natural to return directly a `semanticdb.Database`.\r\n\r\n@olafurpg Is there a reason why `loadFromFile` returns a `schema.Database` instead?",
        "createdAt" : "2017-12-08T12:04:58Z",
        "updatedAt" : "2017-12-09T10:50:59Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "87351c33-b99e-41f8-889f-6df3aa2d825b",
        "parentId" : "28868f69-b53b-44b2-b94b-e7f42e2d05bb",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "semanticdb.Database is really slow to load while schema.Database is much faster. We are slowly moving to schema.Database, scalafix currently depends on semanticdb.Database but we can make it do the conversion from schema.Database to semanticdb.Database lazily instead.",
        "createdAt" : "2017-12-08T22:14:01Z",
        "updatedAt" : "2017-12-09T10:50:59Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f3a386ee-5b07-4ddb-977b-a12e8da83df7",
        "parentId" : "28868f69-b53b-44b2-b94b-e7f42e2d05bb",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Is there a way to build a `schema.Database` given a `semanticdb.Document`?",
        "createdAt" : "2017-12-09T09:59:37Z",
        "updatedAt" : "2017-12-09T10:50:59Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c9452b18-909f-401b-98ca-b427a1a057e5",
        "parentId" : "28868f69-b53b-44b2-b94b-e7f42e2d05bb",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "There is a `.toSchema` extension method on `semanticdb.Database`, you may need an import but I'm not sure, see https://github.com/scalameta/scalameta/blob/dc33d1f66bea57424d0734628c38d12d76344887/langmeta/shared/src/main/scala/org/langmeta/semanticdb/Database.scala#L18",
        "createdAt" : "2017-12-09T10:30:40Z",
        "updatedAt" : "2017-12-09T10:50:59Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c31555716bcfd52dabfb0b643423e255d5a5badd",
    "line" : null,
    "diffHunk" : "@@ -4,8 +4,25 @@ import java.nio.file.Files\n import com.typesafe.scalalogging.LazyLogging\n import org.langmeta.internal.semanticdb.schema.Database\n import org.langmeta.io.AbsolutePath\n+import scala.meta.interactive.InteractiveSemanticdb\n+import scala.meta.parsers.ParseException\n+import scala.tools.nsc.interactive.Global\n+import langserver.types.VersionedTextDocumentIdentifier\n+import ScalametaEnrichments._\n \n object Semanticdbs extends LazyLogging {\n+  def loadFromTextDocument(\n+    compiler: Global,\n+    td: VersionedTextDocumentIdentifier,\n+    content: String\n+  ): scala.meta.semanticdb.Database = {"
  },
  {
    "id" : "db4c8cc7-d3ab-41da-8fa7-77a7145df6e9",
    "prId" : 100,
    "comments" : [
      {
        "id" : "66d249bb-e6f6-40cf-98c5-8950ff086d0d",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "this filename \"dance\" seems necessary because from my early tests `file:///User/...` crashes the PC, while `file:/User/...` doesn't :O \r\nThis may need further investigation.",
        "createdAt" : "2017-12-08T12:05:52Z",
        "updatedAt" : "2017-12-09T10:50:59Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f260f3f1-bed5-4292-ad20-e16209b55ece",
        "parentId" : "66d249bb-e6f6-40cf-98c5-8950ff086d0d",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I'm still not really happy with how we organize URI/AbsolutePath, it seems sometimes we want URI/AbsolutePath/String/... and we do conversions back and forth all over the place.",
        "createdAt" : "2017-12-08T22:14:58Z",
        "updatedAt" : "2017-12-09T10:50:59Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c31555716bcfd52dabfb0b643423e255d5a5badd",
    "line" : null,
    "diffHunk" : "@@ -4,8 +4,25 @@ import java.nio.file.Files\n import com.typesafe.scalalogging.LazyLogging\n import org.langmeta.internal.semanticdb.schema.Database\n import org.langmeta.io.AbsolutePath\n+import scala.meta.interactive.InteractiveSemanticdb\n+import scala.meta.parsers.ParseException\n+import scala.tools.nsc.interactive.Global\n+import langserver.types.VersionedTextDocumentIdentifier\n+import ScalametaEnrichments._\n \n object Semanticdbs extends LazyLogging {\n+  def loadFromTextDocument(\n+    compiler: Global,\n+    td: VersionedTextDocumentIdentifier,\n+    content: String\n+  ): scala.meta.semanticdb.Database = {\n+    val documents = try {\n+      List(InteractiveSemanticdb.toDocument(compiler, content, Uri.toPath(td.uri).get.toLanguageServerUri, 10000))"
  },
  {
    "id" : "41b9a0fc-a4e0-4c5a-8165-bb346b106587",
    "prId" : 100,
    "comments" : [
      {
        "id" : "024dc2fc-14fc-49c5-91ac-8447712fc23c",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Hmm, I'm not really sure we should do `.toSchema` here since we do `.toDatabase` to feed this back to scalafix later. I propose we call `.toSchema` right before feeding this to the indexer.",
        "createdAt" : "2017-12-09T10:54:00Z",
        "updatedAt" : "2017-12-09T10:57:50Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "752b4156-cb19-49f2-af6c-70a0d4ba8c46",
        "parentId" : "024dc2fc-14fc-49c5-91ac-8447712fc23c",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "As discussed offline, I will update this later today!",
        "createdAt" : "2017-12-09T10:58:23Z",
        "updatedAt" : "2017-12-09T10:58:23Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c31555716bcfd52dabfb0b643423e255d5a5badd",
    "line" : null,
    "diffHunk" : "@@ -14,14 +16,15 @@ object Semanticdbs extends LazyLogging {\n   def loadFromTextDocument(\n     compiler: Global,\n     td: VersionedTextDocumentIdentifier,\n-    content: String\n-  ): scala.meta.semanticdb.Database = {\n+    content: String,\n+    cwd: AbsolutePath\n+  ): Database = {\n     val documents = try {\n       List(InteractiveSemanticdb.toDocument(compiler, content, Uri.toPath(td.uri).get.toLanguageServerUri, 10000))\n     } catch {\n       case e: ParseException => Nil\n     }\n-    scala.meta.semanticdb.Database(documents)\n+    semanticdb.Database(documents).toSchema(cwd)"
  },
  {
    "id" : "c2087eb9-a1c7-4537-b328-aeca95b5dcfc",
    "prId" : 116,
    "comments" : [
      {
        "id" : "02330c47-8583-4f36-b840-0c48d5ccc3c9",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "what's the default language of `document` here? `\"Scala211\"`?",
        "createdAt" : "2017-12-12T15:50:25Z",
        "updatedAt" : "2017-12-14T16:33:49Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e86d84d2-2a5d-4569-8c27-2163a4089b57",
        "parentId" : "02330c47-8583-4f36-b840-0c48d5ccc3c9",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I think it may be empty string actually because it was failing to parse, it doesn't really matter what we put here though",
        "createdAt" : "2017-12-12T15:56:23Z",
        "updatedAt" : "2017-12-14T16:33:49Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2ad41c2943b988f4013b1b0d29478092b349360a",
    "line" : null,
    "diffHunk" : "@@ -1,12 +1,39 @@\n package scala.meta.languageserver\n \n import java.nio.file.Files\n+import scala.meta.interactive.InteractiveSemanticdb\n+import scala.meta.languageserver.compiler.ScalacProvider\n+import scala.meta.parsers.ParseException\n import com.typesafe.scalalogging.LazyLogging\n import org.langmeta.internal.semanticdb.schema.Database\n import org.langmeta.io.AbsolutePath\n import scala.meta.semanticdb\n+import scala.util.Try\n+import org.langmeta.inputs.Input\n \n object Semanticdbs extends LazyLogging {\n+  def toSemanticdb(\n+      input: Input.VirtualFile,\n+      scalac: ScalacProvider\n+  ): Option[semanticdb.Database] =\n+    for {\n+      path <- Uri.unapply(input.path)\n+      compiler <- scalac.getCompiler(path)\n+      document <- Try {\n+        InteractiveSemanticdb.toDocument(\n+          compiler = compiler,\n+          code = input.value,\n+          filename = input.path,\n+          timeout = 10000\n+        )\n+      }.fold({\n+        case _: ParseException => None // expected\n+        case err =>\n+          logger.error(s\"Failed to emit semanticdb for $path\", err)\n+          None\n+      }, Option.apply)\n+    } yield semanticdb.Database(document.copy(language = \"Scala212\") :: Nil)"
  }
]