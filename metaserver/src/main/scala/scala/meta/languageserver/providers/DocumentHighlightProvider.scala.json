[
  {
    "id" : "352e0a51-31ae-4bfc-8df8-463ea762faf0",
    "prId" : 97,
    "comments" : [
      {
        "id" : "40f59e2d-9390-4256-9148-b6a3b743563a",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "debug?",
        "createdAt" : "2017-12-05T20:14:01Z",
        "updatedAt" : "2017-12-05T20:14:12Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9aff62c5-c958-4090-9618-a480820f0461",
        "parentId" : "40f59e2d-9390-4256-9148-b6a3b743563a",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I'd leave it `info` for now, it's only once per call (note that `Found highlight` is `debug`). Tell me if you still want me to change it, I don't mind.",
        "createdAt" : "2017-12-05T21:35:47Z",
        "updatedAt" : "2017-12-05T21:35:47Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2736afe574d51ebc7327dafc65baab5067a25f37",
    "line" : 24,
    "diffHunk" : "@@ -0,0 +1,33 @@\n+package scala.meta.languageserver.providers\n+\n+import com.typesafe.scalalogging.LazyLogging\n+import org.langmeta.io.AbsolutePath\n+import langserver.{types => l}\n+import langserver.messages.DocumentHighlightResult\n+import scala.meta.languageserver.Uri\n+import scala.meta.languageserver.search.SymbolIndex\n+import scala.meta.languageserver.ScalametaEnrichments._\n+\n+object DocumentHighlightProvider extends LazyLogging {\n+\n+  def highlight(\n+      symbolIndex: SymbolIndex,\n+      path: AbsolutePath,\n+      position: l.Position\n+  ): DocumentHighlightResult = {\n+    logger.info(s\"Document highlight in ${path}\")\n+    val locations = for {\n+      name <- symbolIndex\n+        .resolveName(path, position.line, position.character)\n+        .toList\n+      data <- symbolIndex.symbolIndexer.get(name.symbol).toList\n+      _ = logger.info(s\"Highlighting symbol `${data.name}: ${data.signature}`\")"
  },
  {
    "id" : "7a109ae0-b7de-44bc-b6b6-c53d509d1b59",
    "prId" : 132,
    "comments" : [
      {
        "id" : "ff6966c5-c970-4043-87c6-0420eb572e0c",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I think this should be `.referencesData`, because they have different fallback options",
        "createdAt" : "2017-12-16T00:05:21Z",
        "updatedAt" : "2017-12-17T08:08:35Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a47ca825-b581-4b55-9b58-e65ca6336b54",
        "parentId" : "ff6966c5-c970-4043-87c6-0420eb572e0c",
        "author" : {
          "login" : "xeno-by",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "Done.",
        "createdAt" : "2017-12-17T02:30:06Z",
        "updatedAt" : "2017-12-17T08:08:35Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a1110f2f43ba9c63cdfb6ee4e3a2d756c6f2b37b",
    "line" : null,
    "diffHunk" : "@@ -17,10 +17,10 @@ object DocumentHighlightProvider extends LazyLogging {\n   ): DocumentHighlightResult = {\n     logger.info(s\"Document highlight in ${path}\")\n     val locations = for {\n-      name <- symbolIndex\n-        .resolveName(path, position.line, position.character)\n+      symbol <- symbolIndex\n+        .findSymbol(path, position.line, position.character)\n         .toList\n-      data <- symbolIndex.symbolIndexer.get(name.symbol).toList\n+      data <- symbolIndex.definitionData(symbol).toList"
  }
]