[
  {
    "id" : "47f58cdb-b90a-46f2-9962-e1ab215689f9",
    "prId" : 100,
    "comments" : [
      {
        "id" : "c3bb1e0a-80a3-4915-9679-f6d3dc426902",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "we can't ignore parse errors anymore, since this can be invoked while the user is typing.",
        "createdAt" : "2017-12-08T12:03:23Z",
        "updatedAt" : "2017-12-09T10:50:59Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c31555716bcfd52dabfb0b643423e255d5a5badd",
    "line" : null,
    "diffHunk" : "@@ -71,27 +71,22 @@ class Linter(\n       val configDecoder = ScalafixReflect.fromLazySemanticdbIndex(lazyIndex)\n       val (rule, config) =\n         ScalafixConfig.fromInput(configInput, lazyIndex)(configDecoder).get\n-      val results: Seq[PublishDiagnostics] = index.database.documents.map { d =>\n-        val tree = Parser.parse(d).get\n-        val ctx = RuleCtx.applyInternal(tree, config)\n-        val patches = rule.fixWithNameInternal(ctx)\n-        val diagnostics =\n-          Patch.lintMessagesInternal(patches, ctx).map(toDiagnostic)\n-        val uri = d.input.syntax\n-        PublishDiagnostics(uri, diagnostics)\n+      val results: Seq[PublishDiagnostics] = index.database.documents.flatMap { d =>\n+        Parser.parse(d).toOption.map { tree =>"
  }
]