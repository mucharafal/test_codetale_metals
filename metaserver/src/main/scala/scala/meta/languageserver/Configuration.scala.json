[
  {
    "id" : "3b6f6ad7-6293-4da9-9836-c50e0f2ca212",
    "prId" : 158,
    "comments" : [
      {
        "id" : "6bb652ff-ca1a-4ca3-9e2c-745fe342055d",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "`s/indexing/search/`? With fields `indexJDK/indexClasspath`. Other fields that come to mind here are parameters for fuzzy search etc.",
        "createdAt" : "2017-12-23T22:09:58Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "affa2ea127de9483cd4eeda3dfcfcb3bb80a4322",
    "line" : null,
    "diffHunk" : "@@ -1,12 +1,73 @@\n package scala.meta.languageserver\n \n import play.api.libs.json._\n+import play.api.libs.functional.syntax._\n+\n+import org.langmeta.AbsolutePath\n+import org.langmeta.RelativePath\n+import java.nio.file.Paths\n+\n+import Configuration._\n+import play.api.libs.json.OFormat\n+import scala.meta.languageserver.Configuration\n+import scala.meta.languageserver.Configuration.{ Completions, Experimental, Hover, Indexing, Rename, Scalafix, Scalafmt }\n \n case class Configuration(\n-    scalafmtConfPath: String,\n-    scalafixConfPath: String,\n-    enableCompletions: Boolean,\n+  scalafmt: Scalafmt = Scalafmt(),\n+  scalafix: Scalafix = Scalafix(),\n+  indexing: Indexing = Indexing(),"
  },
  {
    "id" : "d34a4830-67ee-466a-99bd-66e494c85f51",
    "prId" : 158,
    "comments" : [
      {
        "id" : "246ca8ed-bf67-4734-b40e-a717ad9b54d3",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I think we can move hover and rename out of Experimental since both are built on semanticdb, esp. with edit distance we have quite a good story to reduce bogus results. The only part I'm not convinced about enabling by default is building semanticbs on the fly with the presentation compiler and completions.",
        "createdAt" : "2017-12-23T22:11:30Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "affa2ea127de9483cd4eeda3dfcfcb3bb80a4322",
    "line" : null,
    "diffHunk" : "@@ -1,12 +1,73 @@\n package scala.meta.languageserver\n \n import play.api.libs.json._\n+import play.api.libs.functional.syntax._\n+\n+import org.langmeta.AbsolutePath\n+import org.langmeta.RelativePath\n+import java.nio.file.Paths\n+\n+import Configuration._\n+import play.api.libs.json.OFormat\n+import scala.meta.languageserver.Configuration\n+import scala.meta.languageserver.Configuration.{ Completions, Experimental, Hover, Indexing, Rename, Scalafix, Scalafmt }\n \n case class Configuration(\n-    scalafmtConfPath: String,\n-    scalafixConfPath: String,\n-    enableCompletions: Boolean,\n+  scalafmt: Scalafmt = Scalafmt(),\n+  scalafix: Scalafix = Scalafix(),\n+  indexing: Indexing = Indexing(),\n+  experimental: Experimental = Experimental()\n )\n+\n object Configuration {\n+\n+  case class Experimental(\n+      completions: Completions = Completions(),\n+      hover: Hover = Hover(),"
  },
  {
    "id" : "06cd902d-5713-4022-be80-b284050bff85",
    "prId" : 158,
    "comments" : [
      {
        "id" : "7b343e05-9744-4721-a3ee-40de2deb3a3d",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "`s/completions/scalac/`? Feels consistent with scalafmt/scalafix, and if we decide to add other fields like sbt/scalariform/scalastyle",
        "createdAt" : "2017-12-23T22:12:33Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "affa2ea127de9483cd4eeda3dfcfcb3bb80a4322",
    "line" : null,
    "diffHunk" : "@@ -1,12 +1,73 @@\n package scala.meta.languageserver\n \n import play.api.libs.json._\n+import play.api.libs.functional.syntax._\n+\n+import org.langmeta.AbsolutePath\n+import org.langmeta.RelativePath\n+import java.nio.file.Paths\n+\n+import Configuration._\n+import play.api.libs.json.OFormat\n+import scala.meta.languageserver.Configuration\n+import scala.meta.languageserver.Configuration.{ Completions, Experimental, Hover, Indexing, Rename, Scalafix, Scalafmt }\n \n case class Configuration(\n-    scalafmtConfPath: String,\n-    scalafixConfPath: String,\n-    enableCompletions: Boolean,\n+  scalafmt: Scalafmt = Scalafmt(),\n+  scalafix: Scalafix = Scalafix(),\n+  indexing: Indexing = Indexing(),\n+  experimental: Experimental = Experimental()\n )\n+\n object Configuration {\n+\n+  case class Experimental(\n+      completions: Completions = Completions(),"
  },
  {
    "id" : "30fb0444-29ac-4b3e-b3b7-17adf1c71eb8",
    "prId" : 158,
    "comments" : [
      {
        "id" : "222d3305-c337-4e7c-9dbe-0f86e78a448d",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "`config.completions.enable` reads like an action, would it be more appropriate to call it `enabled`?",
        "createdAt" : "2017-12-26T02:20:55Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6585114f-3d08-4284-b5ef-d284b1097b85",
        "parentId" : "222d3305-c337-4e7c-9dbe-0f86e78a448d",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "makes sense, done!",
        "createdAt" : "2017-12-29T15:35:35Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "affa2ea127de9483cd4eeda3dfcfcb3bb80a4322",
    "line" : null,
    "diffHunk" : "@@ -1,12 +1,73 @@\n package scala.meta.languageserver\n \n import play.api.libs.json._\n+import play.api.libs.functional.syntax._\n+\n+import org.langmeta.AbsolutePath\n+import org.langmeta.RelativePath\n+import java.nio.file.Paths\n+\n+import Configuration._\n+import play.api.libs.json.OFormat\n+import scala.meta.languageserver.Configuration\n+import scala.meta.languageserver.Configuration.{ Completions, Experimental, Hover, Indexing, Rename, Scalafix, Scalafmt }\n \n case class Configuration(\n-    scalafmtConfPath: String,\n-    scalafixConfPath: String,\n-    enableCompletions: Boolean,\n+  scalafmt: Scalafmt = Scalafmt(),\n+  scalafix: Scalafix = Scalafix(),\n+  indexing: Indexing = Indexing(),\n+  experimental: Experimental = Experimental()\n )\n+\n object Configuration {\n+\n+  case class Experimental(\n+      completions: Completions = Completions(),\n+      hover: Hover = Hover(),\n+      rename: Rename = Rename()\n+  )\n+  case class Completions(enable: Boolean = false)"
  },
  {
    "id" : "41369d0a-eec7-4f5f-a024-7ea98e2ef76b",
    "prId" : 158,
    "comments" : [
      {
        "id" : "124b5128-f207-4609-8485-6ff2e1742d8a",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Open issues to implement these settings?",
        "createdAt" : "2017-12-30T12:59:09Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f885793c-a245-4996-aa7c-4918b7ff646d",
        "parentId" : "124b5128-f207-4609-8485-6ff2e1742d8a",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "#161 ",
        "createdAt" : "2017-12-30T22:37:44Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "affa2ea127de9483cd4eeda3dfcfcb3bb80a4322",
    "line" : null,
    "diffHunk" : "@@ -1,12 +1,85 @@\n package scala.meta.languageserver\n \n import play.api.libs.json._\n+import play.api.libs.functional.syntax._\n+\n+import org.langmeta.AbsolutePath\n+import org.langmeta.RelativePath\n+import java.nio.file.Paths\n+\n+import Configuration._\n+import play.api.libs.json.OFormat\n \n case class Configuration(\n-    scalafmtConfPath: String,\n-    scalafixConfPath: String,\n-    enableCompletions: Boolean,\n+    scalafmt: Scalafmt = Scalafmt(),\n+    scalafix: Scalafix = Scalafix(),\n+    search: Search = Search(),\n+    experimental: Experimental = Experimental(),\n+    hover: Hover = Hover(),"
  },
  {
    "id" : "027625b5-c120-44d2-a601-8324de27db17",
    "prId" : 158,
    "comments" : [
      {
        "id" : "8563fdeb-235a-4fc0-a785-8a3f15c503ad",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "It's quite ironic that we complain about boilerplate invoking macros that relieve us from so much more boilerplate!",
        "createdAt" : "2017-12-30T13:04:46Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "affa2ea127de9483cd4eeda3dfcfcb3bb80a4322",
    "line" : 57,
    "diffHunk" : "@@ -1,12 +1,85 @@\n package scala.meta.languageserver\n \n import play.api.libs.json._\n+import play.api.libs.functional.syntax._\n+\n+import org.langmeta.AbsolutePath\n+import org.langmeta.RelativePath\n+import java.nio.file.Paths\n+\n+import Configuration._\n+import play.api.libs.json.OFormat\n \n case class Configuration(\n-    scalafmtConfPath: String,\n-    scalafixConfPath: String,\n-    enableCompletions: Boolean,\n+    scalafmt: Scalafmt = Scalafmt(),\n+    scalafix: Scalafix = Scalafix(),\n+    search: Search = Search(),\n+    experimental: Experimental = Experimental(),\n+    hover: Hover = Hover(),\n+    rename: Rename = Rename(),\n )\n+\n object Configuration {\n-  implicit val format: OFormat[Configuration] = Json.format[Configuration]\n+\n+  case class Experimental(\n+      scalac: Scalac = Scalac(),\n+  )\n+  case class Scalac(enableCompletions: Boolean = false)\n+  case class Hover(enabled: Boolean = false)\n+  case class Rename(enabled: Boolean = false)\n+\n+  case class Scalafmt(\n+      enabled: Boolean = true,\n+      confPath: RelativePath = RelativePath(\".scalafmt.conf\")\n+  )\n+  case class Scalafix(\n+      enabled: Boolean = true,\n+      confPath: RelativePath = RelativePath(\".scalafix.conf\")\n+  )\n+  // TODO(olafur): re-enable indexJDK after https://github.com/scalameta/language-server/issues/43 is fixed\n+  case class Search(indexJDK: Boolean = false, indexClasspath: Boolean = true)\n+\n+  implicit val absolutePathReads: Reads[AbsolutePath] =\n+    Reads.StringReads\n+      .filter(s => Paths.get(s).isAbsolute)\n+      .map(AbsolutePath(_))\n+  implicit val absolutePathWrites: Writes[AbsolutePath] =\n+    Writes.StringWrites.contramap(_.toString)\n+  implicit val relativePathReads: Reads[RelativePath] =\n+    Reads.StringReads.map(RelativePath(_))\n+  implicit val relativePathWrites: Writes[RelativePath] =\n+    Writes.StringWrites.contramap(_.toString)\n+\n+  // TODO(gabro): Json.format[A] is tedious to write.\n+  // We should use an annotation macro to cut the boilerplate\n+  object Scalac {"
  },
  {
    "id" : "c2a389e2-2985-4977-89b4-b4f3cd9d7d58",
    "prId" : 158,
    "comments" : [
      {
        "id" : "695ebc6a-0518-4365-bd6a-1c6ea296caf1",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I would leave `enabled` in, even if unused, in preparation for #163 ",
        "createdAt" : "2018-01-02T13:55:37Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "affa2ea127de9483cd4eeda3dfcfcb3bb80a4322",
    "line" : null,
    "diffHunk" : "@@ -29,8 +29,8 @@ object Configuration {\n   case class Rename(enabled: Boolean = false)\n \n   case class Scalafmt(\n-      enabled: Boolean = true,"
  },
  {
    "id" : "e4437f89-395c-4f3f-a4f4-84a6b62246b1",
    "prId" : 158,
    "comments" : [
      {
        "id" : "c1b403b7-e471-4a78-967e-0f1ac82e34c1",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "let's change this also in the vscode extension, by omitting the `defaultValue`.",
        "createdAt" : "2018-01-02T13:56:44Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "affa2ea127de9483cd4eeda3dfcfcb3bb80a4322",
    "line" : null,
    "diffHunk" : "@@ -29,8 +29,8 @@ object Configuration {\n   case class Rename(enabled: Boolean = false)\n \n   case class Scalafmt(\n-      enabled: Boolean = true,\n-      confPath: RelativePath = RelativePath(\".scalafmt.conf\")\n+      version: String = \"1.3.0\",\n+      confPath: Option[RelativePath] = None"
  },
  {
    "id" : "18fde16d-f28d-436a-badf-1e800325a613",
    "prId" : 158,
    "comments" : [
      {
        "id" : "b61f1a8c-8996-46e5-bcfc-bf1f6d4735c5",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "`DefaultConf` => `defaultConfPath`?",
        "createdAt" : "2018-01-02T13:57:10Z",
        "updatedAt" : "2018-01-02T19:54:18Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "affa2ea127de9483cd4eeda3dfcfcb3bb80a4322",
    "line" : null,
    "diffHunk" : "@@ -69,6 +69,7 @@ object Configuration {\n       Json.using[Json.WithDefaultValues].format[Experimental]\n   }\n   object Scalafmt {\n+    lazy val DefaultConf = RelativePath(\".scalafmt.conf\")"
  }
]