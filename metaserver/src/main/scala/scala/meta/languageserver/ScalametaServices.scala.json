[
  {
    "id" : "703bbfbe-93df-445d-a85e-26da6a5835b9",
    "prId" : 195,
    "comments" : [
      {
        "id" : "64439061-cec2-4cca-baba-52e4e2aee0ff",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I'm not sure I'm doing it right. Probably it should be just `.request`? Why does `documentFormattingProvider.format` return response errors explicitly?",
        "createdAt" : "2018-02-10T16:37:19Z",
        "updatedAt" : "2018-02-11T19:15:09Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4075c69b-7000-4259-9f69-67e702d30a33",
        "parentId" : "64439061-cec2-4cca-baba-52e4e2aee0ff",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I have a branch somewhere locally where I refactored the lsp4s API for requests to return `T` instead of `Either[Response.Error, T]`. Errors can instead be thrown as exception. I think this refactoring cleaned up a lot of code.\r\n\r\nThe reason it's `requestAsync` is simply because we don't have a combinator for synchronous explicit error handling.",
        "createdAt" : "2018-02-11T15:54:03Z",
        "updatedAt" : "2018-02-11T19:15:09Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e890f07f-ea03-44e0-9dec-02a1507c8324",
        "parentId" : "64439061-cec2-4cca-baba-52e4e2aee0ff",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "OK, I see",
        "createdAt" : "2018-02-11T19:17:28Z",
        "updatedAt" : "2018-02-11T19:17:28Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "02e90c3a-7803-4610-adfa-796a7216dafb",
        "parentId" : "64439061-cec2-4cca-baba-52e4e2aee0ff",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Btw, did you mean this branch: https://github.com/olafurpg/language-server/tree/refactoring? You mentioned it in #174.",
        "createdAt" : "2018-02-11T19:26:17Z",
        "updatedAt" : "2018-02-11T19:26:26Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0c70e678-765a-48d9-a396-0e4b382b3689",
        "parentId" : "64439061-cec2-4cca-baba-52e4e2aee0ff",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "correct, I never polished it into a PR because there is too much happening in that PR. The relevant commit is https://github.com/olafurpg/language-server/commit/3a8c1a7a797a8fdea80cd913aa8f068de3624621",
        "createdAt" : "2018-02-12T11:22:25Z",
        "updatedAt" : "2018-02-12T11:22:26Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "37ef516caf63a83cb2af533a23f0de32c02ba087",
    "line" : 27,
    "diffHunk" : "@@ -246,6 +259,19 @@ class ScalametaServices(\n       sourceChangeSubscriber.onNext(input)\n       ()\n     }\n+    .notification(td.willSave) { _ =>\n+      ()\n+    }\n+    .requestAsync(td.willSaveWaitUntil) { params =>"
  }
]