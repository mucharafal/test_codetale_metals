[
  {
    "id" : "4b9de3ec-cb75-4476-8a7a-01763dc6f2cf",
    "prId" : 168,
    "comments" : [
      {
        "id" : "b5eb0ed6-3663-4761-bb5a-72a89eac9f82",
        "parentId" : null,
        "author" : {
          "login" : "ShaneDelmore",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "body" : "We currently only handle the default json protocol and never used the headers param so I removed it for now",
        "createdAt" : "2018-01-05T21:12:19Z",
        "updatedAt" : "2018-01-05T21:33:37Z",
        "lastEditedBy" : {
          "login" : "ShaneDelmore",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/4604933?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "124921fcf277c29c127cac14307de64d019f50b2",
    "line" : null,
    "diffHunk" : "@@ -21,31 +25,29 @@ import io.circe.syntax._\n  * @note The header part is defined to be ASCII encoded, while the content part is UTF8.\n  */\n class MessageWriter(out: OutputStream) extends LazyLogging {\n-  private val ContentLen = \"Content-Length\"\n-\n   /** Lock protecting the output stream, so multiple writes don't mix message chunks. */\n   private val lock = new Object\n \n   /**\n    * Write a message to the output stream. This method can be called from multiple threads,\n    * but it may block waiting for other threads to finish writing.\n    */\n-  def write[T: Encoder](msg: T, h: Map[String, String] = Map.empty): Unit ="
  }
]