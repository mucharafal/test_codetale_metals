[{
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "add `private` modifier like in `LassoRegression`?\n",
    "commit": "eb6e79321548fc6e806105d731b12d87ac01e3de",
    "createdAt": "2014-03-27T08:46:58Z",
    "diffHunk": "@@ -67,44 +70,50 @@ class RidgeRegressionWithSGD private (\n     .setMiniBatchFraction(miniBatchFraction)\n \n   // We don't want to penalize the intercept in RidgeRegression, so set this to false.\n-  setIntercept(false)\n+  super.setIntercept(false)\n \n   var yMean = 0.0\n-  var xColMean: DoubleMatrix = _\n-  var xColSd: DoubleMatrix = _\n+  var xColMean: BV[Double] = _\n+  var xColSd: BV[Double] = _"
  }, {
    "author": {
      "login": "mengxr"
    },
    "body": "yes\n",
    "commit": "eb6e79321548fc6e806105d731b12d87ac01e3de",
    "createdAt": "2014-03-27T08:58:13Z",
    "diffHunk": "@@ -67,44 +70,50 @@ class RidgeRegressionWithSGD private (\n     .setMiniBatchFraction(miniBatchFraction)\n \n   // We don't want to penalize the intercept in RidgeRegression, so set this to false.\n-  setIntercept(false)\n+  super.setIntercept(false)\n \n   var yMean = 0.0\n-  var xColMean: DoubleMatrix = _\n-  var xColSd: DoubleMatrix = _\n+  var xColMean: BV[Double] = _\n+  var xColSd: BV[Double] = _"
  }],
  "prId": 245
}]