[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "organize imports\n",
    "commit": "59db2f599915ab957e05478d81d1d73b78e50918",
    "createdAt": "2015-07-14T19:01:43Z",
    "diffHunk": "@@ -22,6 +22,8 @@ import org.apache.spark.annotation.Experimental\n import org.apache.spark.rdd.RDD\n import org.apache.spark.storage.StorageLevel\n \n+import scala.collection.mutable.ArrayBuffer"
  }],
  "prId": 7360
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "call `toArray.reverse` here\n",
    "commit": "59db2f599915ab957e05478d81d1d73b78e50918",
    "createdAt": "2015-07-14T19:01:46Z",
    "diffHunk": "@@ -150,8 +152,8 @@ class PrefixSpan private (\n   private def getPatternsInLocal(\n       minCount: Long,\n       data: RDD[(Array[Int], Array[Array[Int]])]): RDD[(Array[Int], Long)] = {\n-    data.flatMap { x =>\n-      LocalPrefixSpan.run(minCount, maxPatternLength, x._1, x._2)\n+    data.flatMap { case (prefix, projDB) =>\n+      LocalPrefixSpan.run(minCount, maxPatternLength, prefix.toList, projDB)",
    "line": 7
  }],
  "prId": 7360
}]