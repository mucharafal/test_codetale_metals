[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "`compute` could return a sparse vector but you force it to be a dense vector.\n",
    "commit": "b2595d334c0d6246fe904b8c00ca3d51dc88f71a",
    "createdAt": "2014-06-26T02:40:36Z",
    "diffHunk": "@@ -37,7 +37,11 @@ abstract class Gradient extends Serializable {\n    *\n    * @return (gradient: Vector, loss: Double)\n    */\n-  def compute(data: Vector, label: Double, weights: Vector): (Vector, Double)\n+  def compute(data: Vector, label: Double, weights: Vector): (Vector, Double) = {\n+    val gradient = Vectors.fromBreeze(BDV.zeros[Double](weights.toBreeze.length))",
    "line": 15
  }],
  "prId": 1215
}]