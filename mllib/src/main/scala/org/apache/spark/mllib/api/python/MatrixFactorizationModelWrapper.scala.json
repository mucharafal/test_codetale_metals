[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "move `)` to the line above\n",
    "commit": "56d33214d324fc158b29ff3b08f7c409f19433a1",
    "createdAt": "2015-09-15T19:20:07Z",
    "diffHunk": "@@ -42,4 +42,15 @@ private[python] class MatrixFactorizationModelWrapper(model: MatrixFactorization\n       case (product, feature) => (product, Vectors.dense(feature))\n     }.asInstanceOf[RDD[(Any, Any)]])\n   }\n+\n+  def wrappedRecommendProductsForUsers(num: Int): RDD[Array[Any]] = {\n+    SerDe.fromTuple2RDD(recommendProductsForUsers(num).asInstanceOf[RDD[(Any, Any)]])\n+  }\n+\n+  def wrappedRecommendUsersForProducts(num: Int): RDD[Array[Any]] = {\n+    SerDe.fromTuple2RDD(recommendUsersForProducts(num).asInstanceOf[RDD[(Any, Any)]]\n+    )"
  }],
  "prId": 8700
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "remove extra blank lines\n",
    "commit": "56d33214d324fc158b29ff3b08f7c409f19433a1",
    "createdAt": "2015-09-15T19:20:16Z",
    "diffHunk": "@@ -42,4 +42,15 @@ private[python] class MatrixFactorizationModelWrapper(model: MatrixFactorization\n       case (product, feature) => (product, Vectors.dense(feature))\n     }.asInstanceOf[RDD[(Any, Any)]])\n   }\n+\n+  def wrappedRecommendProductsForUsers(num: Int): RDD[Array[Any]] = {\n+    SerDe.fromTuple2RDD(recommendProductsForUsers(num).asInstanceOf[RDD[(Any, Any)]])\n+  }\n+\n+  def wrappedRecommendUsersForProducts(num: Int): RDD[Array[Any]] = {\n+    SerDe.fromTuple2RDD(recommendUsersForProducts(num).asInstanceOf[RDD[(Any, Any)]]\n+    )\n+  }\n+\n+"
  }],
  "prId": 8700
}]