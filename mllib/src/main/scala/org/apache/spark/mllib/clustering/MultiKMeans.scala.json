[{
  "comments": [{
    "author": {
      "login": "derrickburns"
    },
    "body": "pointOps abstracts the distance function.  Notice how it is used herein.\n",
    "commit": "d6f7c66dae95a0b6967637d1132bb7327ab41d8c",
    "createdAt": "2014-09-17T00:54:25Z",
    "diffHunk": "@@ -0,0 +1,129 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.clustering\n+\n+import org.apache.spark.SparkContext._\n+import org.apache.spark.mllib.base.{Centroid, FP, PointOps, Zero}\n+import org.apache.spark.rdd.RDD\n+\n+import scala.collection.mutable.ArrayBuffer\n+import scala.reflect.ClassTag\n+\n+\n+/**\n+ * A K-Means clustering implementation that performs multiple K-means clusterings simultaneously,\n+ * returning the one with the lowest cost.\n+ *\n+ */\n+\n+private[mllib] class MultiKMeans[P <: FP: ClassTag, C <: FP : ClassTag](\n+  pointOps: PointOps[P,C], maxIterations: Int) extends MultiKMeansClusterer[P,C] {"
  }],
  "prId": 2419
}]