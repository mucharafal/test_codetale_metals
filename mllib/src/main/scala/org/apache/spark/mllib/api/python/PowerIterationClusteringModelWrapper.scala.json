[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "`getAssignments` is only called by Python. So the return type should be `RDD[Array[Any]]`. This might work:\n\n``` scala\ndef getAssignments: RDD[Array[Any]] = {\n  model.assignments.map(x => Array(x.id, x.cluster))\n}\n```\n",
    "commit": "6b03d826c5ba1bf24145ff1a689bad906a92ab2c",
    "createdAt": "2015-06-26T17:56:12Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.api.python\n+\n+import org.apache.spark.rdd.RDD\n+import org.apache.spark.mllib.clustering.PowerIterationClusteringModel\n+\n+/**\n+ * A Wrapper of PowerIterationClusteringModel to provide helper method for Python\n+ */\n+private[python] class PowerIterationClusteringModelWrapper(model: PowerIterationClusteringModel)\n+  extends PowerIterationClusteringModel(model.k, model.assignments) {\n+\n+  def getAssignments: RDD[(Long, Int)] = {"
  }],
  "prId": 6992
}]