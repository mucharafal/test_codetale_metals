[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "add `Serializable`?\n",
    "commit": "78c15d3eb9a6003180a08cb53688455ff82d4463",
    "createdAt": "2014-08-03T06:31:39Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.feature\n+\n+import org.apache.spark.annotation.DeveloperApi\n+import org.apache.spark.mllib.linalg.Vector\n+import org.apache.spark.rdd.RDD\n+\n+/**\n+ * :: DeveloperApi ::\n+ * Trait for transformation of a vector\n+ */\n+@DeveloperApi\n+trait VectorTransformer {"
  }],
  "prId": 1207
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Note: to transform an RDD, we should broadcast the data we need instead of serialize it into the task closure. (This may become unnecessary because we broadcast RDD objects in Spark v1.1.)\n",
    "commit": "78c15d3eb9a6003180a08cb53688455ff82d4463",
    "createdAt": "2014-08-03T06:31:48Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.feature\n+\n+import org.apache.spark.annotation.DeveloperApi\n+import org.apache.spark.mllib.linalg.Vector\n+import org.apache.spark.rdd.RDD\n+\n+/**\n+ * :: DeveloperApi ::\n+ * Trait for transformation of a vector\n+ */\n+@DeveloperApi\n+trait VectorTransformer {\n+\n+  /**\n+   * Applies transformation on a vector.\n+   *\n+   * @param vector vector to be transformed.\n+   * @return transformed vector.\n+   */\n+  def transform(vector: Vector): Vector\n+\n+  /**\n+   * Applies transformation on a RDD[Vector].\n+   *\n+   * @param data RDD[Vector] to be transformed.\n+   * @return transformed RDD[Vector].\n+   */\n+  def transform(data: RDD[Vector]): RDD[Vector] = data.map(x => this.transform(x))"
  }, {
    "author": {
      "login": "dbtsai"
    },
    "body": "Can you elaborate this?  \n",
    "commit": "78c15d3eb9a6003180a08cb53688455ff82d4463",
    "createdAt": "2014-08-03T06:51:49Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.feature\n+\n+import org.apache.spark.annotation.DeveloperApi\n+import org.apache.spark.mllib.linalg.Vector\n+import org.apache.spark.rdd.RDD\n+\n+/**\n+ * :: DeveloperApi ::\n+ * Trait for transformation of a vector\n+ */\n+@DeveloperApi\n+trait VectorTransformer {\n+\n+  /**\n+   * Applies transformation on a vector.\n+   *\n+   * @param vector vector to be transformed.\n+   * @return transformed vector.\n+   */\n+  def transform(vector: Vector): Vector\n+\n+  /**\n+   * Applies transformation on a RDD[Vector].\n+   *\n+   * @param data RDD[Vector] to be transformed.\n+   * @return transformed RDD[Vector].\n+   */\n+  def transform(data: RDD[Vector]): RDD[Vector] = data.map(x => this.transform(x))"
  }, {
    "author": {
      "login": "mengxr"
    },
    "body": "I updated the way we send weights to executors in https://github.com/apache/spark/pull/1427 to avoid having very big serialized tasks. But later in https://github.com/apache/spark/pull/1498 , all RDD objects are sent via broadcasting instead of akka. So it should be no longer necessary to explicitly broadcast weights. Just want to leave a note so we are all aware of these changes.\n",
    "commit": "78c15d3eb9a6003180a08cb53688455ff82d4463",
    "createdAt": "2014-08-03T07:02:45Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.feature\n+\n+import org.apache.spark.annotation.DeveloperApi\n+import org.apache.spark.mllib.linalg.Vector\n+import org.apache.spark.rdd.RDD\n+\n+/**\n+ * :: DeveloperApi ::\n+ * Trait for transformation of a vector\n+ */\n+@DeveloperApi\n+trait VectorTransformer {\n+\n+  /**\n+   * Applies transformation on a vector.\n+   *\n+   * @param vector vector to be transformed.\n+   * @return transformed vector.\n+   */\n+  def transform(vector: Vector): Vector\n+\n+  /**\n+   * Applies transformation on a RDD[Vector].\n+   *\n+   * @param data RDD[Vector] to be transformed.\n+   * @return transformed RDD[Vector].\n+   */\n+  def transform(data: RDD[Vector]): RDD[Vector] = data.map(x => this.transform(x))"
  }],
  "prId": 1207
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "`a` -> `an`\n",
    "commit": "78c15d3eb9a6003180a08cb53688455ff82d4463",
    "createdAt": "2014-08-04T02:43:50Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.feature\n+\n+import org.apache.spark.annotation.DeveloperApi\n+import org.apache.spark.mllib.linalg.Vector\n+import org.apache.spark.rdd.RDD\n+\n+/**\n+ * :: DeveloperApi ::\n+ * Trait for transformation of a vector\n+ */\n+@DeveloperApi\n+trait VectorTransformer extends Serializable {\n+\n+  /**\n+   * Applies transformation on a vector.\n+   *\n+   * @param vector vector to be transformed.\n+   * @return transformed vector.\n+   */\n+  def transform(vector: Vector): Vector\n+\n+  /**\n+   * Applies transformation on a RDD[Vector]."
  }],
  "prId": 1207
}]