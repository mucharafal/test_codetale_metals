[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "4-space indentation\n",
    "commit": "35da8e9e188e669460000d5799d061ecc3ca150f",
    "createdAt": "2014-10-06T21:49:16Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.clustering\n+\n+import org.apache.spark.SparkContext._\n+import org.apache.spark.api.java.JavaRDD\n+import org.apache.spark.mllib.base.{PointOps, FP}\n+import org.apache.spark.mllib.linalg.Vector\n+import org.apache.spark.rdd.RDD\n+\n+/**\n+ * A clustering model for K-means. Each point belongs to the cluster with the closest center.\n+ */\n+private[mllib] class GeneralizedKMeansModel[P<:FP, C<:FP](\n+  val pointOps: PointOps[P, C],"
  }],
  "prId": 2634
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "merge this line to 31\n",
    "commit": "35da8e9e188e669460000d5799d061ecc3ca150f",
    "createdAt": "2014-10-06T21:49:18Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.clustering\n+\n+import org.apache.spark.SparkContext._\n+import org.apache.spark.api.java.JavaRDD\n+import org.apache.spark.mllib.base.{PointOps, FP}\n+import org.apache.spark.mllib.linalg.Vector\n+import org.apache.spark.rdd.RDD\n+\n+/**\n+ * A clustering model for K-means. Each point belongs to the cluster with the closest center.\n+ */\n+private[mllib] class GeneralizedKMeansModel[P<:FP, C<:FP](\n+  val pointOps: PointOps[P, C],\n+  val centers: Array[C])\n+  extends Serializable {"
  }],
  "prId": 2634
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "use `.map(c => ...)`\n",
    "commit": "35da8e9e188e669460000d5799d061ecc3ca150f",
    "createdAt": "2014-10-06T21:49:20Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.clustering\n+\n+import org.apache.spark.SparkContext._\n+import org.apache.spark.api.java.JavaRDD\n+import org.apache.spark.mllib.base.{PointOps, FP}\n+import org.apache.spark.mllib.linalg.Vector\n+import org.apache.spark.rdd.RDD\n+\n+/**\n+ * A clustering model for K-means. Each point belongs to the cluster with the closest center.\n+ */\n+private[mllib] class GeneralizedKMeansModel[P<:FP, C<:FP](\n+  val pointOps: PointOps[P, C],\n+  val centers: Array[C])\n+  extends Serializable {\n+\n+  val k: Int = clusterCenters.length\n+\n+  def clusterCenters : Array[Vector] = centers.map{ c => pointOps.centerToVector(c) }"
  }],
  "prId": 2634
}]