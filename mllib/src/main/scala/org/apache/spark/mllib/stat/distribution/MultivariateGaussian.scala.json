[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "sort import alphabetically\n",
    "commit": "2b1558727af2a28c7c3aa675fbdb040cd17fee01",
    "createdAt": "2015-01-10T02:05:10Z",
    "diffHunk": "@@ -15,11 +15,13 @@\n  * limitations under the License.\n  */\n \n-package org.apache.spark.mllib.stat.impl\n+package org.apache.spark.mllib.stat.distribution\n \n import breeze.linalg.{DenseVector => DBV, DenseMatrix => DBM, diag, max, eigSym}\n \n+import org.apache.spark.mllib.linalg.{Vectors, Vector, Matrices, Matrix}\n import org.apache.spark.mllib.util.MLUtils\n+import org.apache.spark.annotation.DeveloperApi;"
  }],
  "prId": 3923
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Please add `:: DeveloperApi ::` before `This class ...`. We need it to generate the doc correctly. You can check other `@DeveloperApi` usage as examples.\n",
    "commit": "2b1558727af2a28c7c3aa675fbdb040cd17fee01",
    "createdAt": "2015-01-10T02:05:12Z",
    "diffHunk": "@@ -15,11 +15,13 @@\n  * limitations under the License.\n  */\n \n-package org.apache.spark.mllib.stat.impl\n+package org.apache.spark.mllib.stat.distribution\n \n import breeze.linalg.{DenseVector => DBV, DenseMatrix => DBM, diag, max, eigSym}\n \n+import org.apache.spark.mllib.linalg.{Vectors, Vector, Matrices, Matrix}\n import org.apache.spark.mllib.util.MLUtils\n+import org.apache.spark.annotation.DeveloperApi;\n \n /**\n  * This class provides basic functionality for a Multivariate Gaussian (Normal) Distribution. In"
  }],
  "prId": 3923
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Instead of having `mu`/`sigma` private and add getters, could we make them MLlib vector/matrix types and add private members of breeze types? Then we can make this constructor public and remove getters. The overhead is little because we don't copy the data arrays.\n",
    "commit": "2b1558727af2a28c7c3aa675fbdb040cd17fee01",
    "createdAt": "2015-01-10T02:05:14Z",
    "diffHunk": "@@ -30,33 +32,68 @@ import org.apache.spark.mllib.util.MLUtils\n  * @param mu The mean vector of the distribution\n  * @param sigma The covariance matrix of the distribution\n  */\n-private[mllib] class MultivariateGaussian(\n-    val mu: DBV[Double], \n-    val sigma: DBM[Double]) extends Serializable {\n+@DeveloperApi\n+class MultivariateGaussian private[mllib] (\n+    private[mllib] val mu: DBV[Double], "
  }],
  "prId": 3923
}]