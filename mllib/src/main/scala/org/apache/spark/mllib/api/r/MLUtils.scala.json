[{
  "comments": [{
    "author": {
      "login": "davies"
    },
    "body": "Is this R style? :)\n",
    "commit": "3dfac0c2a306a901e34287adc03678dcc08ec677",
    "createdAt": "2015-07-18T07:14:17Z",
    "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.api.r\n+\n+import org.apache.spark.ml.feature.RFormula\n+import org.apache.spark.ml.classification.LogisticRegression\n+import org.apache.spark.ml.regression.LinearRegression\n+import org.apache.spark.ml.{Pipeline, PipelineModel}\n+import org.apache.spark.sql.DataFrame\n+\n+private[r] object MLUtils {\n+  def fitRModelFormula(\n+      value: String,\n+      df: DataFrame,\n+      family: String,\n+      lambda: Double,\n+      alpha: Double): PipelineModel = {\n+    val formula = new RFormula().setFormula(value)\n+    val estimator = family match {\n+      case \"gaussian\" => new LinearRegression().setRegParam(lambda).setElasticNetParam(alpha)\n+      case \"binomial\" => new LogisticRegression().setRegParam(lambda).setElasticNetParam(alpha)\n+    }\n+    val pipeline = new Pipeline().setStages(Array(formula, estimator))\n+    val model = pipeline.fit(df)\n+    return(model)"
  }, {
    "author": {
      "login": "mengxr"
    },
    "body": ":D\n",
    "commit": "3dfac0c2a306a901e34287adc03678dcc08ec677",
    "createdAt": "2015-07-18T17:23:59Z",
    "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.api.r\n+\n+import org.apache.spark.ml.feature.RFormula\n+import org.apache.spark.ml.classification.LogisticRegression\n+import org.apache.spark.ml.regression.LinearRegression\n+import org.apache.spark.ml.{Pipeline, PipelineModel}\n+import org.apache.spark.sql.DataFrame\n+\n+private[r] object MLUtils {\n+  def fitRModelFormula(\n+      value: String,\n+      df: DataFrame,\n+      family: String,\n+      lambda: Double,\n+      alpha: Double): PipelineModel = {\n+    val formula = new RFormula().setFormula(value)\n+    val estimator = family match {\n+      case \"gaussian\" => new LinearRegression().setRegParam(lambda).setElasticNetParam(alpha)\n+      case \"binomial\" => new LogisticRegression().setRegParam(lambda).setElasticNetParam(alpha)\n+    }\n+    val pipeline = new Pipeline().setStages(Array(formula, estimator))\n+    val model = pipeline.fit(df)\n+    return(model)"
  }, {
    "author": {
      "login": "ericl"
    },
    "body": "Done\n",
    "commit": "3dfac0c2a306a901e34287adc03678dcc08ec677",
    "createdAt": "2015-07-20T19:11:29Z",
    "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.api.r\n+\n+import org.apache.spark.ml.feature.RFormula\n+import org.apache.spark.ml.classification.LogisticRegression\n+import org.apache.spark.ml.regression.LinearRegression\n+import org.apache.spark.ml.{Pipeline, PipelineModel}\n+import org.apache.spark.sql.DataFrame\n+\n+private[r] object MLUtils {\n+  def fitRModelFormula(\n+      value: String,\n+      df: DataFrame,\n+      family: String,\n+      lambda: Double,\n+      alpha: Double): PipelineModel = {\n+    val formula = new RFormula().setFormula(value)\n+    val estimator = family match {\n+      case \"gaussian\" => new LinearRegression().setRegParam(lambda).setElasticNetParam(alpha)\n+      case \"binomial\" => new LogisticRegression().setRegParam(lambda).setElasticNetParam(alpha)\n+    }\n+    val pipeline = new Pipeline().setStages(Array(formula, estimator))\n+    val model = pipeline.fit(df)\n+    return(model)"
  }],
  "prId": 7483
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "The integration is based on DataFrame and pipeline API. So we should move this to `spark.ml.api.r`.\n",
    "commit": "3dfac0c2a306a901e34287adc03678dcc08ec677",
    "createdAt": "2015-07-18T17:23:45Z",
    "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.api.r"
  }, {
    "author": {
      "login": "ericl"
    },
    "body": "Done\n",
    "commit": "3dfac0c2a306a901e34287adc03678dcc08ec677",
    "createdAt": "2015-07-20T19:11:38Z",
    "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.api.r"
  }],
  "prId": 7483
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "`MLUtils` -> `SparkRWrappers`?\n",
    "commit": "3dfac0c2a306a901e34287adc03678dcc08ec677",
    "createdAt": "2015-07-18T17:23:47Z",
    "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.api.r\n+\n+import org.apache.spark.ml.feature.RFormula\n+import org.apache.spark.ml.classification.LogisticRegression\n+import org.apache.spark.ml.regression.LinearRegression\n+import org.apache.spark.ml.{Pipeline, PipelineModel}\n+import org.apache.spark.sql.DataFrame\n+\n+private[r] object MLUtils {"
  }, {
    "author": {
      "login": "ericl"
    },
    "body": "Done\n",
    "commit": "3dfac0c2a306a901e34287adc03678dcc08ec677",
    "createdAt": "2015-07-20T19:11:40Z",
    "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.api.r\n+\n+import org.apache.spark.ml.feature.RFormula\n+import org.apache.spark.ml.classification.LogisticRegression\n+import org.apache.spark.ml.regression.LinearRegression\n+import org.apache.spark.ml.{Pipeline, PipelineModel}\n+import org.apache.spark.sql.DataFrame\n+\n+private[r] object MLUtils {"
  }],
  "prId": 7483
}]