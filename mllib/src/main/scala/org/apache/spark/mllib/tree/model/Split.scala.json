[{
  "comments": [{
    "author": {
      "login": "hirakendu"
    },
    "body": "The functionality of `Split` can be simplified by a modification. If I understand correctly, `Split` represents the left or right (low or high) branch of the parent node. Instead, it suffices to store the branching condition for each node as a splitting condition. This can be appropriately named as `SplitPredicate` or `SplittingCondition` or branching condition and consist of feature id, feature type (continuous or categorical), threshold, left branch categories and right branch categories.\n\nI think depending on the choice here, we require `Filter`, but nonetheless I think it's redundant and we should exploit the recursive/linked structure of tree, which we are doing anyway.\n",
    "commit": "1e8c70483984d86a204e0377b2b043cc17c854ac",
    "createdAt": "2014-04-02T21:34:42Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.tree.model\n+\n+import org.apache.spark.mllib.tree.configuration.FeatureType.FeatureType\n+\n+/**\n+ * Split applied to a feature\n+ * @param feature feature index\n+ * @param threshold threshold for continuous feature\n+ * @param featureType type of feature -- categorical or continuous\n+ * @param categories accepted values for categorical variables\n+ */\n+case class Split(",
    "line": 29
  }],
  "prId": 79
}]