[{
  "comments": [{
    "author": {
      "login": "hirakendu"
    },
    "body": "`Filter` class is a nice abstraction of branching conditions leading to current node. There are already references to left and right child nodes, so I think this is redundant. If need be, a reference to a parent node as an `Option[Node]` suffices and is more useful. The functionality should be covered across `Node` and `Split` classes.\n",
    "commit": "1e8c70483984d86a204e0377b2b043cc17c854ac",
    "createdAt": "2014-04-02T21:33:08Z",
    "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.tree.model\n+\n+/**\n+ * Filter specifying a split and type of comparison to be applied on features\n+ * @param split split specifying the feature index, type and threshold\n+ * @param comparison integer specifying <,=,>\n+ */\n+case class Filter(split: Split, comparison: Int) {",
    "line": 25
  }],
  "prId": 79
}]