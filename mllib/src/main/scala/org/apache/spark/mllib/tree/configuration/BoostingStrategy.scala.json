[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Can we update the `defaultParams(algoStr: String)` to use the implementation here instead of maintaining two copies.\n",
    "commit": "87bab1c427f917a757a30af56288f010d16a4107",
    "createdAt": "2015-01-21T00:57:24Z",
    "diffHunk": "@@ -88,4 +88,25 @@ object BoostingStrategy {\n         throw new IllegalArgumentException(s\"$algo is not supported by boosting.\")\n     }\n   }\n+\n+  /**\n+   * Returns default configuration for the boosting algorithm\n+   * @param algo Learning goal.  Supported:\n+   *             [[org.apache.spark.mllib.tree.configuration.Algo.Classification]],\n+   *             [[org.apache.spark.mllib.tree.configuration.Algo.Regression]]\n+   * @return Configuration for boosting algorithm\n+   */\n+  def defaultParams(algo: Algo): BoostingStrategy = {"
  }, {
    "author": {
      "login": "Peishen-Jia"
    },
    "body": "So you mean that remove the defaultParams(algoStr: String) and with the defaultParams(algo: Algo) instead?\n",
    "commit": "87bab1c427f917a757a30af56288f010d16a4107",
    "createdAt": "2015-01-21T02:21:01Z",
    "diffHunk": "@@ -88,4 +88,25 @@ object BoostingStrategy {\n         throw new IllegalArgumentException(s\"$algo is not supported by boosting.\")\n     }\n   }\n+\n+  /**\n+   * Returns default configuration for the boosting algorithm\n+   * @param algo Learning goal.  Supported:\n+   *             [[org.apache.spark.mllib.tree.configuration.Algo.Classification]],\n+   *             [[org.apache.spark.mllib.tree.configuration.Algo.Regression]]\n+   * @return Configuration for boosting algorithm\n+   */\n+  def defaultParams(algo: Algo): BoostingStrategy = {"
  }, {
    "author": {
      "login": "Peishen-Jia"
    },
    "body": "Or change the defaultParams(algo: String) to defaultParams(algoStr: String)?\n",
    "commit": "87bab1c427f917a757a30af56288f010d16a4107",
    "createdAt": "2015-01-21T02:46:05Z",
    "diffHunk": "@@ -88,4 +88,25 @@ object BoostingStrategy {\n         throw new IllegalArgumentException(s\"$algo is not supported by boosting.\")\n     }\n   }\n+\n+  /**\n+   * Returns default configuration for the boosting algorithm\n+   * @param algo Learning goal.  Supported:\n+   *             [[org.apache.spark.mllib.tree.configuration.Algo.Classification]],\n+   *             [[org.apache.spark.mllib.tree.configuration.Algo.Regression]]\n+   * @return Configuration for boosting algorithm\n+   */\n+  def defaultParams(algo: Algo): BoostingStrategy = {"
  }, {
    "author": {
      "login": "mengxr"
    },
    "body": "Sorry, I thought the param name is `algoStr` instead of `algo`. We don't need to rename the param. I was suggesting that we can keep `defaultParams(algo: String)` but inside it call `defaultParams(algo: Algo)` so we don't need to maintain two copies of the implementation.\n",
    "commit": "87bab1c427f917a757a30af56288f010d16a4107",
    "createdAt": "2015-01-21T17:50:15Z",
    "diffHunk": "@@ -88,4 +88,25 @@ object BoostingStrategy {\n         throw new IllegalArgumentException(s\"$algo is not supported by boosting.\")\n     }\n   }\n+\n+  /**\n+   * Returns default configuration for the boosting algorithm\n+   * @param algo Learning goal.  Supported:\n+   *             [[org.apache.spark.mllib.tree.configuration.Algo.Classification]],\n+   *             [[org.apache.spark.mllib.tree.configuration.Algo.Regression]]\n+   * @return Configuration for boosting algorithm\n+   */\n+  def defaultParams(algo: Algo): BoostingStrategy = {"
  }, {
    "author": {
      "login": "Peishen-Jia"
    },
    "body": "Got it. Please check the new commits. Thanks.\n",
    "commit": "87bab1c427f917a757a30af56288f010d16a4107",
    "createdAt": "2015-01-22T00:12:20Z",
    "diffHunk": "@@ -88,4 +88,25 @@ object BoostingStrategy {\n         throw new IllegalArgumentException(s\"$algo is not supported by boosting.\")\n     }\n   }\n+\n+  /**\n+   * Returns default configuration for the boosting algorithm\n+   * @param algo Learning goal.  Supported:\n+   *             [[org.apache.spark.mllib.tree.configuration.Algo.Classification]],\n+   *             [[org.apache.spark.mllib.tree.configuration.Algo.Regression]]\n+   * @return Configuration for boosting algorithm\n+   */\n+  def defaultParams(algo: Algo): BoostingStrategy = {"
  }],
  "prId": 4103
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "This is my bad. In Scala, the parameter name is part of the API. So let's not rename `algo` to `algoStr`.\n",
    "commit": "87bab1c427f917a757a30af56288f010d16a4107",
    "createdAt": "2015-01-22T01:30:06Z",
    "diffHunk": "@@ -70,20 +70,31 @@ object BoostingStrategy {\n \n   /**\n    * Returns default configuration for the boosting algorithm\n+   * @param algoStr Learning goal.  Supported:"
  }],
  "prId": 4103
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "It is clearer if we say `\"Classification\" and \"Regression\"` instead of list classes for `algo: String`.\n",
    "commit": "87bab1c427f917a757a30af56288f010d16a4107",
    "createdAt": "2015-01-22T01:30:07Z",
    "diffHunk": "@@ -70,20 +70,31 @@ object BoostingStrategy {\n \n   /**\n    * Returns default configuration for the boosting algorithm\n+   * @param algoStr Learning goal.  Supported:\n+   *             [[org.apache.spark.mllib.tree.configuration.Algo.Classification]],"
  }],
  "prId": 4103
}]