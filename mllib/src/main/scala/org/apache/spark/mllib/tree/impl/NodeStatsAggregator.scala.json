[{
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "Would it be OK with you to keep the same name DTStatsAggregator?  That makes the 2 files easier to compare on Github, and it is not clear that the file needs to be renamed.\n",
    "commit": "db0d24a244f967e040df043b696079a48d8ae3ca",
    "createdAt": "2014-10-01T03:41:38Z",
    "diffHunk": "@@ -0,0 +1,180 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.tree.impl\n+\n+import org.apache.spark.mllib.tree.impurity._\n+\n+\n+\n+/**\n+ * DecisionTree statistics aggregator for a node.\n+ * This holds a flat array of statistics for a set of (features, bins)\n+ * and helps with indexing.\n+ * This class is abstract to support learning with and without feature subsampling.\n+ */\n+private[tree] class NodeStatsAggregator("
  }, {
    "author": {
      "login": "chouqin"
    },
    "body": "I rename it because now every node has its own NodeStatsAggregator, It is OK to keep the original name.\n",
    "commit": "db0d24a244f967e040df043b696079a48d8ae3ca",
    "createdAt": "2014-10-01T04:45:27Z",
    "diffHunk": "@@ -0,0 +1,180 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.tree.impl\n+\n+import org.apache.spark.mllib.tree.impurity._\n+\n+\n+\n+/**\n+ * DecisionTree statistics aggregator for a node.\n+ * This holds a flat array of statistics for a set of (features, bins)\n+ * and helps with indexing.\n+ * This class is abstract to support learning with and without feature subsampling.\n+ */\n+private[tree] class NodeStatsAggregator("
  }, {
    "author": {
      "login": "jkbradley"
    },
    "body": "OK, thanks.  (The comparison was easier.)  Renaming it to NodeStatsAggregator is fine with me if you feel it is clearer.\n",
    "commit": "db0d24a244f967e040df043b696079a48d8ae3ca",
    "createdAt": "2014-10-01T18:16:42Z",
    "diffHunk": "@@ -0,0 +1,180 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.tree.impl\n+\n+import org.apache.spark.mllib.tree.impurity._\n+\n+\n+\n+/**\n+ * DecisionTree statistics aggregator for a node.\n+ * This holds a flat array of statistics for a set of (features, bins)\n+ * and helps with indexing.\n+ * This class is abstract to support learning with and without feature subsampling.\n+ */\n+private[tree] class NodeStatsAggregator("
  }],
  "prId": 2595
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "Note: There is now a copy of DecisionTreeMetadata for each node.  This probably is a small expense (a few Int values per feature, as opposed to the many Double values in the statistics array).  I think this is fine for now, but later on, it could be optimized for RandomForest when feature subsets are being used.\n",
    "commit": "db0d24a244f967e040df043b696079a48d8ae3ca",
    "createdAt": "2014-10-01T03:41:39Z",
    "diffHunk": "@@ -0,0 +1,180 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.tree.impl\n+\n+import org.apache.spark.mllib.tree.impurity._\n+\n+\n+\n+/**\n+ * DecisionTree statistics aggregator for a node.\n+ * This holds a flat array of statistics for a set of (features, bins)\n+ * and helps with indexing.\n+ * This class is abstract to support learning with and without feature subsampling.\n+ */\n+private[tree] class NodeStatsAggregator(\n+    val metadata: DecisionTreeMetadata,"
  }, {
    "author": {
      "login": "chouqin"
    },
    "body": "I think each node just has a reference to metadata, which is broadcast to each executor. This is just  a pointer type, it should occupy not much space.\n",
    "commit": "db0d24a244f967e040df043b696079a48d8ae3ca",
    "createdAt": "2014-10-01T04:54:14Z",
    "diffHunk": "@@ -0,0 +1,180 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.tree.impl\n+\n+import org.apache.spark.mllib.tree.impurity._\n+\n+\n+\n+/**\n+ * DecisionTree statistics aggregator for a node.\n+ * This holds a flat array of statistics for a set of (features, bins)\n+ * and helps with indexing.\n+ * This class is abstract to support learning with and without feature subsampling.\n+ */\n+private[tree] class NodeStatsAggregator(\n+    val metadata: DecisionTreeMetadata,"
  }, {
    "author": {
      "login": "jkbradley"
    },
    "body": "You're correct about it being broadcast in the construction of \"val nodeStatsAggregators\" but separate copies may be created in the reduce.  However, I don't think you need to change anything since DecisionTreeMetadata is a small object compared to DTStatsAggregator in general.\n",
    "commit": "db0d24a244f967e040df043b696079a48d8ae3ca",
    "createdAt": "2014-10-01T18:20:25Z",
    "diffHunk": "@@ -0,0 +1,180 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.tree.impl\n+\n+import org.apache.spark.mllib.tree.impurity._\n+\n+\n+\n+/**\n+ * DecisionTree statistics aggregator for a node.\n+ * This holds a flat array of statistics for a set of (features, bins)\n+ * and helps with indexing.\n+ * This class is abstract to support learning with and without feature subsampling.\n+ */\n+private[tree] class NodeStatsAggregator(\n+    val metadata: DecisionTreeMetadata,"
  }],
  "prId": 2595
}]