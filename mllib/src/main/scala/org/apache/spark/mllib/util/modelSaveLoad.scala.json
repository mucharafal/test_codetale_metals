[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Could it be a private API?\n",
    "commit": "87c4eb8e2e030cf033418901fd7c0533efb090f3",
    "createdAt": "2015-02-04T18:23:55Z",
    "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.util\n+\n+import scala.reflect.runtime.universe.TypeTag\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.annotation.DeveloperApi\n+import org.apache.spark.sql.{DataFrame, Row, SQLContext}\n+import org.apache.spark.sql.catalyst.ScalaReflection\n+import org.apache.spark.sql.types.{DataType, StructType, StructField}\n+\n+\n+/**\n+ * :: DeveloperApi ::\n+ *\n+ * Trait for models and transformers which may be saved as files.\n+ * This should be inherited by the class which implements model instances.\n+ */\n+@DeveloperApi",
    "line": 37
  }, {
    "author": {
      "login": "jkbradley"
    },
    "body": "True, though it should be public if we want Spark packages to follow this pattern\n",
    "commit": "87c4eb8e2e030cf033418901fd7c0533efb090f3",
    "createdAt": "2015-02-04T19:38:33Z",
    "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.util\n+\n+import scala.reflect.runtime.universe.TypeTag\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.annotation.DeveloperApi\n+import org.apache.spark.sql.{DataFrame, Row, SQLContext}\n+import org.apache.spark.sql.catalyst.ScalaReflection\n+import org.apache.spark.sql.types.{DataType, StructType, StructField}\n+\n+\n+/**\n+ * :: DeveloperApi ::\n+ *\n+ * Trait for models and transformers which may be saved as files.\n+ * This should be inherited by the class which implements model instances.\n+ */\n+@DeveloperApi",
    "line": 37
  }],
  "prId": 4233
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Same here.\n",
    "commit": "87c4eb8e2e030cf033418901fd7c0533efb090f3",
    "createdAt": "2015-02-04T18:23:57Z",
    "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.util\n+\n+import scala.reflect.runtime.universe.TypeTag\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.annotation.DeveloperApi\n+import org.apache.spark.sql.{DataFrame, Row, SQLContext}\n+import org.apache.spark.sql.catalyst.ScalaReflection\n+import org.apache.spark.sql.types.{DataType, StructType, StructField}\n+\n+\n+/**\n+ * :: DeveloperApi ::\n+ *\n+ * Trait for models and transformers which may be saved as files.\n+ * This should be inherited by the class which implements model instances.\n+ */\n+@DeveloperApi\n+trait Saveable {\n+\n+  /**\n+   * Save this model to the given path.\n+   *\n+   * This saves:\n+   *  - human-readable (JSON) model metadata to path/metadata/\n+   *  - Parquet formatted data to path/data/\n+   *\n+   * The model may be loaded using [[Loader.load]].\n+   *\n+   * @param sc  Spark context used to save model data.\n+   * @param path  Path specifying the directory in which to save this model.\n+   *              This directory and any intermediate directory will be created if needed.\n+   */\n+  def save(sc: SparkContext, path: String): Unit\n+\n+  /** Current version of model save/load format. */\n+  protected def formatVersion: String\n+\n+}\n+\n+/**\n+ * :: DeveloperApi ::\n+ *\n+ * Trait for classes which can load models and transformers from files.\n+ * This should be inherited by an object paired with the model class.\n+ */\n+@DeveloperApi",
    "line": 66
  }],
  "prId": 4233
}]