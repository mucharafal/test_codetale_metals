[{
  "comments": [{
    "author": {
      "login": "imatiach-msft"
    },
    "body": "it looks like the constant can be shared between the two GMM classes - I would recommend using the mllib one for now.",
    "commit": "5672d1345f661665f521fd1dd4410313ef3ab554",
    "createdAt": "2017-01-23T16:13:44Z",
    "diffHunk": "@@ -272,6 +277,10 @@ class GaussianMixture private (\n }\n \n private[clustering] object GaussianMixture {\n+\n+  /** Limit number of features such that numFeatures^2^ < Integer.MaxValue */\n+  private[clustering] val MAX_NUM_FEATURES = 46000"
  }, {
    "author": {
      "login": "sethah"
    },
    "body": "I can see benefits either way, but I think leaving ML GMM to be completely independent of MLlib is slightly preferable. ",
    "commit": "5672d1345f661665f521fd1dd4410313ef3ab554",
    "createdAt": "2017-01-23T22:08:37Z",
    "diffHunk": "@@ -272,6 +277,10 @@ class GaussianMixture private (\n }\n \n private[clustering] object GaussianMixture {\n+\n+  /** Limit number of features such that numFeatures^2^ < Integer.MaxValue */\n+  private[clustering] val MAX_NUM_FEATURES = 46000"
  }, {
    "author": {
      "login": "imatiach-msft"
    },
    "body": "ok",
    "commit": "5672d1345f661665f521fd1dd4410313ef3ab554",
    "createdAt": "2017-01-23T22:39:51Z",
    "diffHunk": "@@ -272,6 +277,10 @@ class GaussianMixture private (\n }\n \n private[clustering] object GaussianMixture {\n+\n+  /** Limit number of features such that numFeatures^2^ < Integer.MaxValue */\n+  private[clustering] val MAX_NUM_FEATURES = 46000"
  }, {
    "author": {
      "login": "MLnick"
    },
    "body": "ultimately *long-term* the plan is to deprecate `mllib` so keeping it separate is preferable",
    "commit": "5672d1345f661665f521fd1dd4410313ef3ab554",
    "createdAt": "2017-01-24T09:00:18Z",
    "diffHunk": "@@ -272,6 +277,10 @@ class GaussianMixture private (\n }\n \n private[clustering] object GaussianMixture {\n+\n+  /** Limit number of features such that numFeatures^2^ < Integer.MaxValue */\n+  private[clustering] val MAX_NUM_FEATURES = 46000"
  }],
  "prId": 16661
}, {
  "comments": [{
    "author": {
      "login": "zhengruifeng"
    },
    "body": "The number is not equal to that used in `computeCovariance()` in `mllib.linalg.distributed.RowMatrix`.\r\nhttps://github.com/apache/spark/blob/master/mllib/src/main/scala/org/apache/spark/mllib/linalg/distributed/RowMatrix.scala#L327\r\nDo the limits in `mllib.linalg.distributed.RowMatrix` need to be updated to this one?",
    "commit": "5672d1345f661665f521fd1dd4410313ef3ab554",
    "createdAt": "2017-01-25T02:51:18Z",
    "diffHunk": "@@ -272,6 +277,10 @@ class GaussianMixture private (\n }\n \n private[clustering] object GaussianMixture {\n+\n+  /** Limit number of features such that numFeatures^2^ < Int.MaxValue */\n+  private[clustering] val MAX_NUM_FEATURES = math.sqrt(Int.MaxValue).toInt",
    "line": 38
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "I believe the limiting factor here is that we can't have an array of elements somewhere that has more than 2^31 - 1 elements. For a dense representation of a normal n x n matrix, that limits n to 46340. Here, however, the matrix is a symmetric Gramian matrix that needs n(n+1)/2 elements of storage, so 65535 works.",
    "commit": "5672d1345f661665f521fd1dd4410313ef3ab554",
    "createdAt": "2017-01-25T12:09:41Z",
    "diffHunk": "@@ -272,6 +277,10 @@ class GaussianMixture private (\n }\n \n private[clustering] object GaussianMixture {\n+\n+  /** Limit number of features such that numFeatures^2^ < Int.MaxValue */\n+  private[clustering] val MAX_NUM_FEATURES = math.sqrt(Int.MaxValue).toInt",
    "line": 38
  }],
  "prId": 16661
}]