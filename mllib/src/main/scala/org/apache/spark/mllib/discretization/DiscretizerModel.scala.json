[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Need doc for public traits.\n",
    "commit": "70b63e42d81f9ca9f9c48bf8435f9620c6800b75",
    "createdAt": "2014-03-24T18:05:01Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements. See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License. You may obtain a copy of the License at\n+*\n+* http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+\n+package org.apache.spark.mllib.discretization\n+\n+import org.apache.spark.rdd.RDD\n+\n+trait DiscretizerModel extends Serializable {"
  }],
  "prId": 216
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "This method is not clear to me. It takes no argument and returns an RDD of undefined type. A `DiscretizerModel` may be trained on one RDD but applied to another RDD.\n",
    "commit": "70b63e42d81f9ca9f9c48bf8435f9620c6800b75",
    "createdAt": "2014-03-25T17:13:19Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.discretization\n+\n+import org.apache.spark.rdd.RDD\n+\n+/**\n+ * DiscretizerModel provides a template with the basic methods for future discretizers.\n+ */\n+trait DiscretizerModel extends Serializable {\n+  /**\n+   * Return the thresholds used to discretized the given feature\n+   *\n+   * @param feature The number of the feature to discretize\n+   */\n+  def getThresholdsForFeature(feature: Int): Seq[Double]\n+\n+  /**\n+   * Return the thresholds used to discretized the given features\n+   *\n+   * @param features The number of the feature to discretize\n+   */\n+  def getThresholdsForFeature(features: Seq[Int]): Map[Int, Seq[Double]]\n+\n+  /**\n+   * Return the thresholds used to discretized the continuous features\n+   */\n+  def getThresholdsForContinuousFeatures: Map[Int, Seq[Double]]\n+\n+  /**\n+   * Discretizes an RDD\n+   */\n+  def discretize: RDD[_]"
  }],
  "prId": 216
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Better change to argument name to `featureIndex`.\n",
    "commit": "70b63e42d81f9ca9f9c48bf8435f9620c6800b75",
    "createdAt": "2014-03-25T18:53:34Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.discretization\n+\n+import org.apache.spark.rdd.RDD\n+\n+/**\n+ * DiscretizerModel provides a template with the basic methods for future discretizers.\n+ */\n+trait DiscretizerModel extends Serializable {\n+  /**\n+   * Return the thresholds used to discretized the given feature\n+   *\n+   * @param feature The number of the feature to discretize\n+   */\n+  def getThresholdsForFeature(feature: Int): Seq[Double]"
  }],
  "prId": 216
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Saying `the number of the feature` is not common. Should change to \"the index of the feature\" and also change the argument name below.\n",
    "commit": "70b63e42d81f9ca9f9c48bf8435f9620c6800b75",
    "createdAt": "2014-03-25T18:54:41Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.discretization\n+\n+import org.apache.spark.rdd.RDD\n+\n+/**\n+ * DiscretizerModel provides a template with the basic methods for future discretizers.\n+ */\n+trait DiscretizerModel extends Serializable {\n+  /**\n+   * Return the thresholds used to discretized the given feature\n+   *\n+   * @param feature The number of the feature to discretize"
  }],
  "prId": 216
}]