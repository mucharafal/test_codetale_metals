[{
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "Did you mean to use this in CrossValidator as well?  There is still a copy in CrossValidator.scala.\n\nAlso, this method and its helper should probably live in `ml/util/ReadWrite.scala` since they apply to tuning, Pipeline, and classification (OneVsRest)\n",
    "commit": "f9172d16f63312fff5ac10fc4e63ec1d291b42ad",
    "createdAt": "2016-03-24T00:37:58Z",
    "diffHunk": "@@ -0,0 +1,156 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.tuning\n+\n+import org.apache.hadoop.fs.Path\n+import org.json4s.{DefaultFormats, JObject}\n+import org.json4s.jackson.JsonMethods._\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.ml._\n+import org.apache.spark.ml.classification.OneVsRestParams\n+import org.apache.spark.ml.evaluation.Evaluator\n+import org.apache.spark.ml.feature.RFormulaModel\n+import org.apache.spark.ml.param._\n+import org.apache.spark.ml.util._\n+import org.apache.spark.ml.util.DefaultParamsReader.Metadata\n+\n+private trait SharedReadWrite {\n+  /**\n+   * Examine the given estimator (which may be a compound estimator) and extract a mapping\n+   * from UIDs to corresponding [[Params]] instances.\n+   */\n+  def getUidMap(instance: Params): Map[String, Params] = {"
  }, {
    "author": {
      "login": "yinxusen"
    },
    "body": "sorry, it's an error imported by merging with master. I'll fix it soon.\n",
    "commit": "f9172d16f63312fff5ac10fc4e63ec1d291b42ad",
    "createdAt": "2016-03-24T18:59:42Z",
    "diffHunk": "@@ -0,0 +1,156 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.tuning\n+\n+import org.apache.hadoop.fs.Path\n+import org.json4s.{DefaultFormats, JObject}\n+import org.json4s.jackson.JsonMethods._\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.ml._\n+import org.apache.spark.ml.classification.OneVsRestParams\n+import org.apache.spark.ml.evaluation.Evaluator\n+import org.apache.spark.ml.feature.RFormulaModel\n+import org.apache.spark.ml.param._\n+import org.apache.spark.ml.util._\n+import org.apache.spark.ml.util.DefaultParamsReader.Metadata\n+\n+private trait SharedReadWrite {\n+  /**\n+   * Examine the given estimator (which may be a compound estimator) and extract a mapping\n+   * from UIDs to corresponding [[Params]] instances.\n+   */\n+  def getUidMap(instance: Params): Map[String, Params] = {"
  }],
  "prId": 9971
}]