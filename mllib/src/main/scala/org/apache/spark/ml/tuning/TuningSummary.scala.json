[{
  "comments": [{
    "author": {
      "login": "MLnick"
    },
    "body": "\"metrics\" is a bit generic. Perhaps it's better (and more user-friendly) to make this be something like `metric_name metric` so that it's obvious what metric was being optimized for? such as `ROC metric` or `AUC metric` or `MSE metric`? etc",
    "commit": "4aef3aa498ba24163429cc106244d15e6e28fb35",
    "createdAt": "2017-08-03T12:59:15Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.ml.tuning\n+\n+import org.apache.spark.annotation.{Experimental, Since}\n+import org.apache.spark.ml.param.ParamMap\n+import org.apache.spark.sql.{DataFrame, Row, SparkSession}\n+import org.apache.spark.sql.types.{StringType, StructField, StructType}\n+\n+/**\n+ * :: Experimental ::\n+ * Summary for the grid search tuning.\n+ *\n+ * @param params  ParamMaps for the Estimator\n+ * @param metrics  corresponding evaluation metrics for the params\n+ * @param bestIndex  index in params for the ParamMap of the best model.\n+ */\n+@Since(\"2.3.0\")\n+@Experimental\n+private[tuning] class TuningSummary private[tuning](\n+    private[tuning] val params: Array[ParamMap],\n+    private[tuning] val metrics: Array[Double],\n+    private[tuning] val bestIndex: Int) {\n+\n+  /**\n+   * Summary of grid search tuning in the format of DataFrame. Each row contains one candidate\n+   * paramMap and its corresponding metric.\n+   */\n+  def trainingMetrics: DataFrame = {\n+    require(params.nonEmpty, \"estimator param maps should not be empty\")\n+    require(params.length == metrics.length, \"estimator param maps number should match metrics\")\n+    val spark = SparkSession.builder().getOrCreate()\n+    val sqlContext = spark.sqlContext\n+    val sc = spark.sparkContext\n+    val fields = params(0).toSeq.sortBy(_.param.name).map(_.param.name) ++ Seq(\"metrics\")"
  }],
  "prId": 16158
}, {
  "comments": [{
    "author": {
      "login": "MLnick"
    },
    "body": "It appears `bestIndex` is never used?",
    "commit": "4aef3aa498ba24163429cc106244d15e6e28fb35",
    "createdAt": "2017-08-03T13:00:58Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.ml.tuning\n+\n+import org.apache.spark.annotation.{Experimental, Since}\n+import org.apache.spark.ml.param.ParamMap\n+import org.apache.spark.sql.{DataFrame, Row, SparkSession}\n+import org.apache.spark.sql.types.{StringType, StructField, StructType}\n+\n+/**\n+ * :: Experimental ::\n+ * Summary for the grid search tuning.\n+ *\n+ * @param params  ParamMaps for the Estimator\n+ * @param metrics  corresponding evaluation metrics for the params\n+ * @param bestIndex  index in params for the ParamMap of the best model.\n+ */\n+@Since(\"2.3.0\")\n+@Experimental\n+private[tuning] class TuningSummary private[tuning](\n+    private[tuning] val params: Array[ParamMap],\n+    private[tuning] val metrics: Array[Double],\n+    private[tuning] val bestIndex: Int) {"
  }],
  "prId": 16158
}]