[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "What does `TF` mean here?\n",
    "commit": "fac12ad29b6a640b6567e66e57a8176deb621dc8",
    "createdAt": "2015-02-13T18:38:53Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature\n+\n+import org.apache.spark.annotation.AlphaComponent\n+import org.apache.spark.ml.UnaryTransformer\n+import org.apache.spark.ml.param.{Param, ParamMap}\n+import org.apache.spark.mllib.feature.ElementwiseProduct\n+import org.apache.spark.mllib.linalg.{Vector, VectorUDT}\n+import org.apache.spark.sql.types.DataType\n+\n+/**\n+ * :: AlphaComponent\n+ * Maps a vector to the hadamard product of it and a reference vector.\n+ */\n+@AlphaComponent\n+class ElementwiseProductTF extends UnaryTransformer[Vector, Vector, ElementwiseProductTF] {"
  }, {
    "author": {
      "login": "ogeagla"
    },
    "body": "Ah, just realized the `TF` in `HashingTF` stands for 'term frequencies', not 'transformer'. Will remove.  Thanks for pointing out.\n",
    "commit": "fac12ad29b6a640b6567e66e57a8176deb621dc8",
    "createdAt": "2015-02-13T18:41:43Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature\n+\n+import org.apache.spark.annotation.AlphaComponent\n+import org.apache.spark.ml.UnaryTransformer\n+import org.apache.spark.ml.param.{Param, ParamMap}\n+import org.apache.spark.mllib.feature.ElementwiseProduct\n+import org.apache.spark.mllib.linalg.{Vector, VectorUDT}\n+import org.apache.spark.sql.types.DataType\n+\n+/**\n+ * :: AlphaComponent\n+ * Maps a vector to the hadamard product of it and a reference vector.\n+ */\n+@AlphaComponent\n+class ElementwiseProductTF extends UnaryTransformer[Vector, Vector, ElementwiseProductTF] {"
  }],
  "prId": 4580
}]