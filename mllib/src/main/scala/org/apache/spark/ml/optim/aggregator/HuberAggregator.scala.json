[{
  "comments": [{
    "author": {
      "login": "mgaido91"
    },
    "body": "I don't think this change makes sense. It is just getting the broadcast, not a big overhead...",
    "commit": "cdb49c06ed2b6e008486fc1af294c583e83fafbd",
    "createdAt": "2019-06-18T07:06:05Z",
    "diffHunk": "@@ -81,6 +81,9 @@ private[ml] class HuberAggregator(\n   } else {\n     0.0\n   }\n+  // make transient so we do not serialize between aggregation stages\n+  @transient private lazy val featuresStd = bcFeaturesStd.value"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Yes, this one isn't necessary. `coefficients` looks good. But it doesn't need to be lazy.",
    "commit": "cdb49c06ed2b6e008486fc1af294c583e83fafbd",
    "createdAt": "2019-06-18T14:18:34Z",
    "diffHunk": "@@ -81,6 +81,9 @@ private[ml] class HuberAggregator(\n   } else {\n     0.0\n   }\n+  // make transient so we do not serialize between aggregation stages\n+  @transient private lazy val featuresStd = bcFeaturesStd.value"
  }, {
    "author": {
      "login": "Andrew-Crosby"
    },
    "body": "Thanks for the feedback. I've removed the unnecessary change to featuresStd.\r\n\r\n@srowen I tried removing the lazy modifier, but that causes both the unit tests and my test case to fail with the following NPE. I don't understand why.\r\n\r\n```\r\norg.apache.spark.SparkException: Job aborted due to stage failure: Task 2 in stage 3.0 failed 1 times, most recent failure: Lost task 2.0 in stage 3.0 (TID 11, localhost, executor driver): java.lang.NullPointerException\r\n        at org.apache.spark.ml.optim.aggregator.HuberAggregator.$anonfun$add$3(HuberAggregator.scala:109)\r\n        at org.apache.spark.ml.linalg.SparseVector.foreachActive(Vectors.scala:613)\r\n        at org.apache.spark.ml.optim.aggregator.HuberAggregator.add(HuberAggregator.scala:107)\r\n```",
    "commit": "cdb49c06ed2b6e008486fc1af294c583e83fafbd",
    "createdAt": "2019-06-18T19:15:16Z",
    "diffHunk": "@@ -81,6 +81,9 @@ private[ml] class HuberAggregator(\n   } else {\n     0.0\n   }\n+  // make transient so we do not serialize between aggregation stages\n+  @transient private lazy val featuresStd = bcFeaturesStd.value"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Oh I get it. You wouldn't want to eagerly evaluate the broadcast as it might eval on the driver. OK I think this is a reasonable solution.",
    "commit": "cdb49c06ed2b6e008486fc1af294c583e83fafbd",
    "createdAt": "2019-06-18T19:27:37Z",
    "diffHunk": "@@ -81,6 +81,9 @@ private[ml] class HuberAggregator(\n   } else {\n     0.0\n   }\n+  // make transient so we do not serialize between aggregation stages\n+  @transient private lazy val featuresStd = bcFeaturesStd.value"
  }],
  "prId": 24880
}]