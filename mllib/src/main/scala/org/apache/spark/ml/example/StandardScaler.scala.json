[{
  "comments": [{
    "author": {
      "login": "tomerk"
    },
    "body": "This bit of boilerplate that appears in every transform and fit implementation should probably be moved into the interface somehow\n",
    "commit": "2cc93fd7104b76a7cfb6428b3b3deade76e91590",
    "createdAt": "2014-11-07T20:15:07Z",
    "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.example\n+\n+import org.apache.spark.ml._\n+import org.apache.spark.ml.param._\n+import org.apache.spark.mllib.feature\n+import org.apache.spark.mllib.linalg.Vector\n+import org.apache.spark.sql.SchemaRDD\n+import org.apache.spark.sql.catalyst.analysis.Star\n+import org.apache.spark.sql.catalyst.dsl._\n+import org.apache.spark.sql.catalyst.expressions.Row\n+\n+class StandardScaler extends Estimator[StandardScalerModel] with HasInputCol {\n+\n+  def setInputCol(value: String): this.type = { set(inputCol, value); this }\n+\n+  override val modelParams: StandardScalerModelParams = new StandardScalerModelParams {}\n+\n+  override def fit(dataset: SchemaRDD, paramMap: ParamMap): StandardScalerModel = {\n+    import dataset.sqlContext._\n+    val map = this.paramMap ++ paramMap"
  }],
  "prId": 3099
}]