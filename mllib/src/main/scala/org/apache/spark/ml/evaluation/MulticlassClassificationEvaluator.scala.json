[{
  "comments": [{
    "author": {
      "login": "WeichenXu123"
    },
    "body": "`@Since(\"2.4.0\")`",
    "commit": "50864497d013ba7f8a160d5142b0cfdd41f00f8d",
    "createdAt": "2018-04-17T09:04:58Z",
    "diffHunk": "@@ -67,6 +68,10 @@ class MulticlassClassificationEvaluator @Since(\"1.5.0\") (@Since(\"1.5.0\") overrid\n   @Since(\"1.5.0\")\n   def setLabelCol(value: String): this.type = set(labelCol, value)\n \n+  /** @group setParam */\n+  @Since(\"2.2.0\")"
  }, {
    "author": {
      "login": "imatiach-msft"
    },
    "body": "done",
    "commit": "50864497d013ba7f8a160d5142b0cfdd41f00f8d",
    "createdAt": "2018-04-18T03:31:43Z",
    "diffHunk": "@@ -67,6 +68,10 @@ class MulticlassClassificationEvaluator @Since(\"1.5.0\") (@Since(\"1.5.0\") overrid\n   @Since(\"1.5.0\")\n   def setLabelCol(value: String): this.type = set(labelCol, value)\n \n+  /** @group setParam */\n+  @Since(\"2.2.0\")"
  }],
  "prId": 17086
}, {
  "comments": [{
    "author": {
      "login": "WeichenXu123"
    },
    "body": "This line seems useless ? `dataset.select(pred, label)...values.countByValues()`",
    "commit": "50864497d013ba7f8a160d5142b0cfdd41f00f8d",
    "createdAt": "2018-04-17T09:10:03Z",
    "diffHunk": "@@ -75,11 +80,16 @@ class MulticlassClassificationEvaluator @Since(\"1.5.0\") (@Since(\"1.5.0\") overrid\n     SchemaUtils.checkColumnType(schema, $(predictionCol), DoubleType)\n     SchemaUtils.checkNumericType(schema, $(labelCol))\n \n-    val predictionAndLabels =\n-      dataset.select(col($(predictionCol)), col($(labelCol)).cast(DoubleType)).rdd.map {\n-        case Row(prediction: Double, label: Double) => (prediction, label)\n+    val predictionAndLabelsWithWeights =\n+      dataset.select(col($(predictionCol)), col($(labelCol)).cast(DoubleType),\n+        if (!isDefined(weightCol) || $(weightCol).isEmpty) lit(1.0) else col($(weightCol)))\n+        .rdd.map {\n+        case Row(prediction: Double, label: Double, weight: Double) => (prediction, label, weight)\n       }\n-    val metrics = new MulticlassMetrics(predictionAndLabels)\n+    dataset.select(col($(predictionCol)), col($(labelCol)).cast(DoubleType)).rdd.map {\n+      case Row(prediction: Double, label: Double) => (prediction, label)\n+    }.values.countByValue()"
  }, {
    "author": {
      "login": "imatiach-msft"
    },
    "body": "good catch -- hmm that shouldn't be there, not sure why I added it, removed",
    "commit": "50864497d013ba7f8a160d5142b0cfdd41f00f8d",
    "createdAt": "2018-04-18T03:37:51Z",
    "diffHunk": "@@ -75,11 +80,16 @@ class MulticlassClassificationEvaluator @Since(\"1.5.0\") (@Since(\"1.5.0\") overrid\n     SchemaUtils.checkColumnType(schema, $(predictionCol), DoubleType)\n     SchemaUtils.checkNumericType(schema, $(labelCol))\n \n-    val predictionAndLabels =\n-      dataset.select(col($(predictionCol)), col($(labelCol)).cast(DoubleType)).rdd.map {\n-        case Row(prediction: Double, label: Double) => (prediction, label)\n+    val predictionAndLabelsWithWeights =\n+      dataset.select(col($(predictionCol)), col($(labelCol)).cast(DoubleType),\n+        if (!isDefined(weightCol) || $(weightCol).isEmpty) lit(1.0) else col($(weightCol)))\n+        .rdd.map {\n+        case Row(prediction: Double, label: Double, weight: Double) => (prediction, label, weight)\n       }\n-    val metrics = new MulticlassMetrics(predictionAndLabels)\n+    dataset.select(col($(predictionCol)), col($(labelCol)).cast(DoubleType)).rdd.map {\n+      case Row(prediction: Double, label: Double) => (prediction, label)\n+    }.values.countByValue()"
  }],
  "prId": 17086
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Will need to be 3.0.0",
    "commit": "50864497d013ba7f8a160d5142b0cfdd41f00f8d",
    "createdAt": "2018-11-05T23:14:08Z",
    "diffHunk": "@@ -67,6 +68,10 @@ class MulticlassClassificationEvaluator @Since(\"1.5.0\") (@Since(\"1.5.0\") overrid\n   @Since(\"1.5.0\")\n   def setLabelCol(value: String): this.type = set(labelCol, value)\n \n+  /** @group setParam */\n+  @Since(\"2.4.0\")"
  }, {
    "author": {
      "login": "imatiach-msft"
    },
    "body": "done!",
    "commit": "50864497d013ba7f8a160d5142b0cfdd41f00f8d",
    "createdAt": "2018-11-06T03:53:13Z",
    "diffHunk": "@@ -67,6 +68,10 @@ class MulticlassClassificationEvaluator @Since(\"1.5.0\") (@Since(\"1.5.0\") overrid\n   @Since(\"1.5.0\")\n   def setLabelCol(value: String): this.type = set(labelCol, value)\n \n+  /** @group setParam */\n+  @Since(\"2.4.0\")"
  }],
  "prId": 17086
}]