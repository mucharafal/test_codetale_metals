[{
  "comments": [{
    "author": {
      "login": "dbtsai"
    },
    "body": "For this, I will use BitSet with Int.\n",
    "commit": "fb63e1f93f9a5f39f8b7e9d800c17d9da9ec1008",
    "createdAt": "2015-11-23T22:20:45Z",
    "diffHunk": "@@ -85,7 +85,7 @@ final class CategoricalSplit private[ml] (\n   /**\n    * If true, then \"categories\" is the set of categories for splitting to the left, and vice versa.\n    */\n-  private val isLeft: Boolean = _leftCategories.length <= numCategories / 2\n+  private[ml] val isLeft: Boolean = _leftCategories.length <= numCategories / 2\n \n   /** Set of categories determining the splitting rule, along with [[isLeft]]. */\n   private val categories: Set[Double] = {"
  }, {
    "author": {
      "login": "holdenk"
    },
    "body": "Should we maybe do this in a second change? It seems like if there aren't that many categories for one direction then this would maybe not be a great change. What are your thoughts?\n",
    "commit": "fb63e1f93f9a5f39f8b7e9d800c17d9da9ec1008",
    "createdAt": "2015-11-24T19:20:22Z",
    "diffHunk": "@@ -85,7 +85,7 @@ final class CategoricalSplit private[ml] (\n   /**\n    * If true, then \"categories\" is the set of categories for splitting to the left, and vice versa.\n    */\n-  private val isLeft: Boolean = _leftCategories.length <= numCategories / 2\n+  private[ml] val isLeft: Boolean = _leftCategories.length <= numCategories / 2\n \n   /** Set of categories determining the splitting rule, along with [[isLeft]]. */\n   private val categories: Set[Double] = {"
  }, {
    "author": {
      "login": "dbtsai"
    },
    "body": "We use `BitSet` in our system. I know `BitSet` takes fast constant time, while `HashSet` takes effectively longer constant time depending on the length of elements. Also, `HashSet` will box the element, and `BitSet` stores as primitive elements. But I don't benchmark myself. Agree, this can be a separate PR. \n",
    "commit": "fb63e1f93f9a5f39f8b7e9d800c17d9da9ec1008",
    "createdAt": "2015-11-24T22:42:36Z",
    "diffHunk": "@@ -85,7 +85,7 @@ final class CategoricalSplit private[ml] (\n   /**\n    * If true, then \"categories\" is the set of categories for splitting to the left, and vice versa.\n    */\n-  private val isLeft: Boolean = _leftCategories.length <= numCategories / 2\n+  private[ml] val isLeft: Boolean = _leftCategories.length <= numCategories / 2\n \n   /** Set of categories determining the splitting rule, along with [[isLeft]]. */\n   private val categories: Set[Double] = {"
  }],
  "prId": 9524
}]