[{
  "comments": [{
    "author": {
      "login": "dbtsai"
    },
    "body": "One question. Why `Evaluator` returns type `Double`? For example, confusion matrix can be an evaluator as well, and it can not be represented by type `Double`. Also, in our use-case, we often evaluate the models by the histogram of recommended popular titles, so it will be `Array[Long]`. Why don't we have type `T` here, and we specify the type in the implementation? \n",
    "commit": "7bef88d5bdaf40b80e3925522b352f8b86a07c94",
    "createdAt": "2015-05-04T02:25:30Z",
    "diffHunk": "@@ -36,5 +35,18 @@ abstract class Evaluator extends Identifiable {\n    * @param paramMap parameter map that specifies the input columns and output metrics\n    * @return metric\n    */\n-  def evaluate(dataset: DataFrame, paramMap: ParamMap): Double\n+  def evaluate(dataset: DataFrame, paramMap: ParamMap): Double = {\n+    this.copy(paramMap).evaluate(dataset)\n+  }\n+",
    "line": 27
  }, {
    "author": {
      "login": "mengxr"
    },
    "body": "`Evaluator` is used for tuning model, where we need a scalar metric to select the best model. We can try returning a comparable `T`, but this is not part of this PR.\n",
    "commit": "7bef88d5bdaf40b80e3925522b352f8b86a07c94",
    "createdAt": "2015-05-04T06:24:00Z",
    "diffHunk": "@@ -36,5 +35,18 @@ abstract class Evaluator extends Identifiable {\n    * @param paramMap parameter map that specifies the input columns and output metrics\n    * @return metric\n    */\n-  def evaluate(dataset: DataFrame, paramMap: ParamMap): Double\n+  def evaluate(dataset: DataFrame, paramMap: ParamMap): Double = {\n+    this.copy(paramMap).evaluate(dataset)\n+  }\n+",
    "line": 27
  }],
  "prId": 5820
}]