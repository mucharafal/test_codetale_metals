[{
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "is it possible to include the featurecol name in logging?\n",
    "commit": "8bb370ec0408ae10fe0c1c359b0f1b68066cbf87",
    "createdAt": "2016-08-31T07:56:25Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.r\n+\n+import org.apache.spark.internal.Logging\n+import org.apache.spark.ml.feature.RFormula\n+import org.apache.spark.sql.Dataset\n+\n+object RWrapperUtils extends Logging {\n+\n+  /**\n+   * DataFrame column check.\n+   * When loading data, default columns \"features\" and \"label\" will be added. And these two names\n+   * would conflict with RFormula default feature and label column names.\n+   * Here is to change the column name to avoid \"column already exists\" error.\n+   *\n+   * @param rFormula RFormula instance\n+   * @param data Input dataset\n+   * @return Unit\n+   */\n+  def checkDataColumns(rFormula: RFormula, data: Dataset[_]): Unit = {\n+    if (data.schema.fieldNames.contains(rFormula.getLabelCol)) {\n+      logWarning(\"data containing 'label' column, so change its name to avoid conflict\")"
  }],
  "prId": 13584
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "what if `something_output` is also already in the DataFrame?\nshould we check for it?\nI thought the [earlier suggestion](https://github.com/apache/spark/pull/13584#issuecomment-242579064) calls for appending a sequence number, like `something_output1` and incrementing util it is not already there?\n",
    "commit": "8bb370ec0408ae10fe0c1c359b0f1b68066cbf87",
    "createdAt": "2016-08-31T07:58:22Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.r\n+\n+import org.apache.spark.internal.Logging\n+import org.apache.spark.ml.feature.RFormula\n+import org.apache.spark.sql.Dataset\n+\n+object RWrapperUtils extends Logging {\n+\n+  /**\n+   * DataFrame column check.\n+   * When loading data, default columns \"features\" and \"label\" will be added. And these two names\n+   * would conflict with RFormula default feature and label column names.\n+   * Here is to change the column name to avoid \"column already exists\" error.\n+   *\n+   * @param rFormula RFormula instance\n+   * @param data Input dataset\n+   * @return Unit\n+   */\n+  def checkDataColumns(rFormula: RFormula, data: Dataset[_]): Unit = {\n+    if (data.schema.fieldNames.contains(rFormula.getLabelCol)) {\n+      logWarning(\"data containing 'label' column, so change its name to avoid conflict\")\n+      rFormula.setLabelCol(rFormula.getLabelCol + \"_output\")"
  }, {
    "author": {
      "login": "keypointt"
    },
    "body": "sure I'll add this logic, incrementing until no conflict\n",
    "commit": "8bb370ec0408ae10fe0c1c359b0f1b68066cbf87",
    "createdAt": "2016-09-01T00:48:24Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.r\n+\n+import org.apache.spark.internal.Logging\n+import org.apache.spark.ml.feature.RFormula\n+import org.apache.spark.sql.Dataset\n+\n+object RWrapperUtils extends Logging {\n+\n+  /**\n+   * DataFrame column check.\n+   * When loading data, default columns \"features\" and \"label\" will be added. And these two names\n+   * would conflict with RFormula default feature and label column names.\n+   * Here is to change the column name to avoid \"column already exists\" error.\n+   *\n+   * @param rFormula RFormula instance\n+   * @param data Input dataset\n+   * @return Unit\n+   */\n+  def checkDataColumns(rFormula: RFormula, data: Dataset[_]): Unit = {\n+    if (data.schema.fieldNames.contains(rFormula.getLabelCol)) {\n+      logWarning(\"data containing 'label' column, so change its name to avoid conflict\")\n+      rFormula.setLabelCol(rFormula.getLabelCol + \"_output\")"
  }],
  "prId": 13584
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "this sounds a bit like we are renaming the existing `label` column?\nperhaps just change to `s\"data containing ${rFormula.getLabelCol} column, using new name to $newLabelName instead\"`?\n",
    "commit": "8bb370ec0408ae10fe0c1c359b0f1b68066cbf87",
    "createdAt": "2016-09-01T23:21:36Z",
    "diffHunk": "@@ -35,13 +35,37 @@ object RWrapperUtils extends Logging {\n    */\n   def checkDataColumns(rFormula: RFormula, data: Dataset[_]): Unit = {\n     if (data.schema.fieldNames.contains(rFormula.getLabelCol)) {\n-      logWarning(\"data containing 'label' column, so change its name to avoid conflict\")\n-      rFormula.setLabelCol(rFormula.getLabelCol + \"_output\")\n+      val newLabelName = convertToUniqueName(rFormula.getLabelCol, data.schema.fieldNames)\n+      logWarning(\n+        s\"data containing ${rFormula.getLabelCol} column, changing its name to $newLabelName\")"
  }, {
    "author": {
      "login": "keypointt"
    },
    "body": "sure, I'll change it\n",
    "commit": "8bb370ec0408ae10fe0c1c359b0f1b68066cbf87",
    "createdAt": "2016-09-01T23:24:35Z",
    "diffHunk": "@@ -35,13 +35,37 @@ object RWrapperUtils extends Logging {\n    */\n   def checkDataColumns(rFormula: RFormula, data: Dataset[_]): Unit = {\n     if (data.schema.fieldNames.contains(rFormula.getLabelCol)) {\n-      logWarning(\"data containing 'label' column, so change its name to avoid conflict\")\n-      rFormula.setLabelCol(rFormula.getLabelCol + \"_output\")\n+      val newLabelName = convertToUniqueName(rFormula.getLabelCol, data.schema.fieldNames)\n+      logWarning(\n+        s\"data containing ${rFormula.getLabelCol} column, changing its name to $newLabelName\")"
  }],
  "prId": 13584
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "same here?\n",
    "commit": "8bb370ec0408ae10fe0c1c359b0f1b68066cbf87",
    "createdAt": "2016-09-01T23:30:03Z",
    "diffHunk": "@@ -35,13 +35,37 @@ object RWrapperUtils extends Logging {\n    */\n   def checkDataColumns(rFormula: RFormula, data: Dataset[_]): Unit = {\n     if (data.schema.fieldNames.contains(rFormula.getLabelCol)) {\n-      logWarning(\"data containing 'label' column, so change its name to avoid conflict\")\n-      rFormula.setLabelCol(rFormula.getLabelCol + \"_output\")\n+      val newLabelName = convertToUniqueName(rFormula.getLabelCol, data.schema.fieldNames)\n+      logWarning(\n+        s\"data containing ${rFormula.getLabelCol} column, changing its name to $newLabelName\")\n+      rFormula.setLabelCol(newLabelName)\n     }\n \n     if (data.schema.fieldNames.contains(rFormula.getFeaturesCol)) {\n-      logWarning(\"data containing 'features' column, so change its name to avoid conflict\")\n-      rFormula.setFeaturesCol(rFormula.getFeaturesCol + \"_output\")\n+      val newFeaturesName = convertToUniqueName(rFormula.getFeaturesCol, data.schema.fieldNames)\n+      logWarning(\n+        s\"data containing ${rFormula.getFeaturesCol} column, changing its name to $newFeaturesName\")"
  }],
  "prId": 13584
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "nit: i think we end up checking for `label_output` twice, once in `if (data.schema.fieldNames.contains(rFormula.getFeaturesCol))` and second time within `convertToUniqueName`? Perhaps we merge them?\n",
    "commit": "8bb370ec0408ae10fe0c1c359b0f1b68066cbf87",
    "createdAt": "2016-09-01T23:31:17Z",
    "diffHunk": "@@ -35,13 +35,37 @@ object RWrapperUtils extends Logging {\n    */\n   def checkDataColumns(rFormula: RFormula, data: Dataset[_]): Unit = {\n     if (data.schema.fieldNames.contains(rFormula.getLabelCol)) {\n-      logWarning(\"data containing 'label' column, so change its name to avoid conflict\")\n-      rFormula.setLabelCol(rFormula.getLabelCol + \"_output\")\n+      val newLabelName = convertToUniqueName(rFormula.getLabelCol, data.schema.fieldNames)"
  }, {
    "author": {
      "login": "keypointt"
    },
    "body": "I think in `if (data.schema.fieldNames.contains(rFormula.getFeaturesCol))`, it's checking `label` only\n\nand in `convertToUniqueName ()`,  `_output` will be appended resulting in `label_output`: `var newName = originalName + \"_output\"`, and then `label_output` is checked at `while (fieldNames.contains(newName))`\n\nam I missing something? @felix \n",
    "commit": "8bb370ec0408ae10fe0c1c359b0f1b68066cbf87",
    "createdAt": "2016-09-01T23:42:12Z",
    "diffHunk": "@@ -35,13 +35,37 @@ object RWrapperUtils extends Logging {\n    */\n   def checkDataColumns(rFormula: RFormula, data: Dataset[_]): Unit = {\n     if (data.schema.fieldNames.contains(rFormula.getLabelCol)) {\n-      logWarning(\"data containing 'label' column, so change its name to avoid conflict\")\n-      rFormula.setLabelCol(rFormula.getLabelCol + \"_output\")\n+      val newLabelName = convertToUniqueName(rFormula.getLabelCol, data.schema.fieldNames)"
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "fair enough. that makes sense, thanks\n",
    "commit": "8bb370ec0408ae10fe0c1c359b0f1b68066cbf87",
    "createdAt": "2016-09-02T04:11:28Z",
    "diffHunk": "@@ -35,13 +35,37 @@ object RWrapperUtils extends Logging {\n    */\n   def checkDataColumns(rFormula: RFormula, data: Dataset[_]): Unit = {\n     if (data.schema.fieldNames.contains(rFormula.getLabelCol)) {\n-      logWarning(\"data containing 'label' column, so change its name to avoid conflict\")\n-      rFormula.setLabelCol(rFormula.getLabelCol + \"_output\")\n+      val newLabelName = convertToUniqueName(rFormula.getLabelCol, data.schema.fieldNames)"
  }],
  "prId": 13584
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "let's make this consistent with the message above in L40?\n",
    "commit": "8bb370ec0408ae10fe0c1c359b0f1b68066cbf87",
    "createdAt": "2016-09-01T23:32:39Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.r\n+\n+import org.apache.spark.internal.Logging\n+import org.apache.spark.ml.feature.RFormula\n+import org.apache.spark.sql.Dataset\n+\n+object RWrapperUtils extends Logging {\n+\n+  /**\n+   * DataFrame column check.\n+   * When loading data, default columns \"features\" and \"label\" will be added. And these two names\n+   * would conflict with RFormula default feature and label column names.\n+   * Here is to change the column name to avoid \"column already exists\" error.\n+   *\n+   * @param rFormula RFormula instance\n+   * @param data Input dataset\n+   * @return Unit\n+   */\n+  def checkDataColumns(rFormula: RFormula, data: Dataset[_]): Unit = {\n+    if (data.schema.fieldNames.contains(rFormula.getLabelCol)) {\n+      val newLabelName = convertToUniqueName(rFormula.getLabelCol, data.schema.fieldNames)\n+      logWarning(\n+        s\"data containing ${rFormula.getLabelCol} column, using new name $newLabelName instead\")\n+      rFormula.setLabelCol(newLabelName)\n+    }\n+\n+    if (data.schema.fieldNames.contains(rFormula.getFeaturesCol)) {\n+      val newFeaturesName = convertToUniqueName(rFormula.getFeaturesCol, data.schema.fieldNames)\n+      logWarning(\n+        s\"data containing ${rFormula.getFeaturesCol} column, using new name $newFeaturesName\")"
  }],
  "prId": 13584
}]