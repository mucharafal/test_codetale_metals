[{
  "comments": [{
    "author": {
      "login": "yanboliang"
    },
    "body": "We will not support dot operator currently, because dot will be expanded to all column names including the `censorCol` which is unexpected. \nAlthough, if terms of survreg formula only include `.`, we can replace it by all feature column names at here. But if the formula contains operators like `.:.` or `.:x`, we can not handle it at here. So I choose to not support any kind of dot in term currently.\n",
    "commit": "900c85fb6a45d6bccca421fdfd436ced7988581d",
    "createdAt": "2016-03-01T14:49:01Z",
    "diffHunk": "@@ -52,6 +53,43 @@ private[r] object SparkRWrappers {\n     pipeline.fit(df)\n   }\n \n+  def fitAFTSurvivalRegression(\n+      value: String,\n+      df: DataFrame): PipelineModel = {\n+\n+    def formulaRewrite(value: String): (String, String) = {\n+      var rewrited: String = null\n+      var censorCol: String = null\n+\n+      val regex = \"^Surv\\\\(([^,]*),([^,]*)\\\\)\\\\s*\\\\~\\\\s*(.*)\".r\n+      try {\n+        val regex(label, censor, features) = value\n+        // TODO: Support dot operator.\n+        if (features.contains(\".\")) {\n+          throw new UnsupportedOperationException(\n+            \"Terms of survreg formula can not support dot operator.\")",
    "line": 33
  }],
  "prId": 11447
}, {
  "comments": [{
    "author": {
      "login": "yanboliang"
    },
    "body": "Rewrite `Surv(futime, fustat) ~ ecog.ps + rx` to a tuple of string `(futime ~ ecog.ps + rx, fustat)`.\n",
    "commit": "900c85fb6a45d6bccca421fdfd436ced7988581d",
    "createdAt": "2016-03-01T14:54:10Z",
    "diffHunk": "@@ -52,6 +53,43 @@ private[r] object SparkRWrappers {\n     pipeline.fit(df)\n   }\n \n+  def fitAFTSurvivalRegression(\n+      value: String,\n+      df: DataFrame): PipelineModel = {\n+\n+    def formulaRewrite(value: String): (String, String) = {",
    "line": 23
  }, {
    "author": {
      "login": "mengxr"
    },
    "body": "Shall we move it out as a private method?\n",
    "commit": "900c85fb6a45d6bccca421fdfd436ced7988581d",
    "createdAt": "2016-03-22T18:40:59Z",
    "diffHunk": "@@ -52,6 +53,43 @@ private[r] object SparkRWrappers {\n     pipeline.fit(df)\n   }\n \n+  def fitAFTSurvivalRegression(\n+      value: String,\n+      df: DataFrame): PipelineModel = {\n+\n+    def formulaRewrite(value: String): (String, String) = {",
    "line": 23
  }],
  "prId": 11447
}, {
  "comments": [{
    "author": {
      "login": "hhbyyh"
    },
    "body": "met MatchError during test with \" Surv ( futime, fustat ) ~ ecog.ps + tx - rx\". Maybe we should write the regex to the comment.\n",
    "commit": "900c85fb6a45d6bccca421fdfd436ced7988581d",
    "createdAt": "2016-03-05T07:16:30Z",
    "diffHunk": "@@ -52,6 +53,43 @@ private[r] object SparkRWrappers {\n     pipeline.fit(df)\n   }\n \n+  def fitAFTSurvivalRegression(\n+      value: String,\n+      df: DataFrame): PipelineModel = {\n+\n+    def formulaRewrite(value: String): (String, String) = {\n+      var rewrited: String = null\n+      var censorCol: String = null\n+\n+      val regex = \"^Surv\\\\(([^,]+),([^,]+)\\\\)\\\\s*\\\\~\\\\s*(.+)\".r\n+      try {"
  }],
  "prId": 11447
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Use triple quotes to avoid escaping `\\`. This should work: `\"\"\"Surv\\((\\S+), (\\S+)\\) ~ (\\S+)\"\"\".r`. I think the formula passed in from R wouldn't have extra spaces.\n",
    "commit": "900c85fb6a45d6bccca421fdfd436ced7988581d",
    "createdAt": "2016-03-22T18:38:06Z",
    "diffHunk": "@@ -52,6 +53,43 @@ private[r] object SparkRWrappers {\n     pipeline.fit(df)\n   }\n \n+  def fitAFTSurvivalRegression(\n+      value: String,\n+      df: DataFrame): PipelineModel = {\n+\n+    def formulaRewrite(value: String): (String, String) = {\n+      var rewrited: String = null\n+      var censorCol: String = null\n+\n+      val regex = \"^Surv\\\\s*\\\\(([^,]+),([^,]+)\\\\)\\\\s*\\\\~\\\\s*(.+)\".r",
    "line": 27
  }],
  "prId": 11447
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "change `value` to `formula`\n",
    "commit": "900c85fb6a45d6bccca421fdfd436ced7988581d",
    "createdAt": "2016-03-22T18:40:01Z",
    "diffHunk": "@@ -52,6 +53,43 @@ private[r] object SparkRWrappers {\n     pipeline.fit(df)\n   }\n \n+  def fitAFTSurvivalRegression(\n+      value: String,",
    "line": 20
  }],
  "prId": 11447
}]