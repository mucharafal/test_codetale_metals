[{
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "How user-facing is this?  Should we provide more info/promises about how it is used, or should we wait until that is clearer to us?\n",
    "commit": "c4c81204e5db8c97004bf1efb6b279b438cf99c3",
    "createdAt": "2015-05-13T18:35:36Z",
    "diffHunk": "@@ -19,15 +19,24 @@ package org.apache.spark.ml.util\n \n import java.util.UUID\n \n+\n /**\n- * Object with a unique id.\n+ * Trait for an object with an immutable unique ID that identifies itself and its derivatives.\n  */\n-private[ml] trait Identifiable extends Serializable {\n+trait Identifiable {\n+\n+  /**\n+   * An immutable unique ID for the object and its derivatives.",
    "line": 13
  }, {
    "author": {
      "login": "mengxr"
    },
    "body": "Good question! I don't think the `Identifiable` interface is user facing, not developer facing either. The only useful function to developers is the `randomUID` under `object Identifiable`.\n",
    "commit": "c4c81204e5db8c97004bf1efb6b279b438cf99c3",
    "createdAt": "2015-05-14T06:05:40Z",
    "diffHunk": "@@ -19,15 +19,24 @@ package org.apache.spark.ml.util\n \n import java.util.UUID\n \n+\n /**\n- * Object with a unique id.\n+ * Trait for an object with an immutable unique ID that identifies itself and its derivatives.\n  */\n-private[ml] trait Identifiable extends Serializable {\n+trait Identifiable {\n+\n+  /**\n+   * An immutable unique ID for the object and its derivatives.",
    "line": 13
  }],
  "prId": 6019
}]