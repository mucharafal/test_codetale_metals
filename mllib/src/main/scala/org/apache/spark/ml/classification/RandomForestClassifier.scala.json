[{
  "comments": [{
    "author": {
      "login": "yanboliang"
    },
    "body": "Redundant blank line\n",
    "commit": "72a167a6a4781ce43badd5c26e462a712f34df64",
    "createdAt": "2015-08-03T03:37:32Z",
    "diffHunk": "@@ -32,7 +29,7 @@ import org.apache.spark.mllib.tree.model.{RandomForestModel => OldRandomForestMo\n import org.apache.spark.rdd.RDD\n import org.apache.spark.sql.DataFrame\n import org.apache.spark.sql.functions._\n-import org.apache.spark.sql.types.DoubleType\n+\n "
  }],
  "prId": 7838
}, {
  "comments": [{
    "author": {
      "login": "yanboliang"
    },
    "body": "I think further we need to get numFeatures (and other parameters) from the DataFrame column Attribute and make some validity check, but it's OK for now.\n",
    "commit": "72a167a6a4781ce43badd5c26e462a712f34df64",
    "createdAt": "2015-08-03T04:05:53Z",
    "diffHunk": "@@ -98,7 +95,8 @@ final class RandomForestClassifier(override val uid: String)\n     val trees =\n       RandomForest.run(oldDataset, strategy, getNumTrees, getFeatureSubsetStrategy, getSeed)\n         .map(_.asInstanceOf[DecisionTreeClassificationModel])\n-    new RandomForestClassificationModel(trees, numClasses)\n+    val numFeatures = oldDataset.first().features.size",
    "line": 5
  }, {
    "author": {
      "login": "jkbradley"
    },
    "body": "True, we do need to check vs. attributes.  I'll note that in a JIRA.\n",
    "commit": "72a167a6a4781ce43badd5c26e462a712f34df64",
    "createdAt": "2015-08-03T16:59:08Z",
    "diffHunk": "@@ -98,7 +95,8 @@ final class RandomForestClassifier(override val uid: String)\n     val trees =\n       RandomForest.run(oldDataset, strategy, getNumTrees, getFeatureSubsetStrategy, getSeed)\n         .map(_.asInstanceOf[DecisionTreeClassificationModel])\n-    new RandomForestClassificationModel(trees, numClasses)\n+    val numFeatures = oldDataset.first().features.size",
    "line": 5
  }],
  "prId": 7838
}]