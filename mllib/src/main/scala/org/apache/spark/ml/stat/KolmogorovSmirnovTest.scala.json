[{
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "nit: It's nicer to keep single back quotes ``` `DataFrame` ``` to make these show up as code in docs for clarity.  No need to get rid of that.",
    "commit": "8f9088a2356d5c08e08690f8c520298622086af5",
    "createdAt": "2018-04-06T17:27:44Z",
    "diffHunk": "@@ -59,7 +59,7 @@ object KolmogorovSmirnovTest {\n    * distribution of the sample data and the theoretical distribution we can provide a test for the\n    * the null hypothesis that the sample data comes from that theoretical distribution.\n    *\n-   * @param dataset a `DataFrame` containing the sample of data to test\n+   * @param dataset A dataset or a dataframe containing the sample of data to test"
  }],
  "prId": 20904
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "nit: This doesn't fit scala style; please get familiar with the style we use for multi-line function headers!  Just check out other parts of MLlib for examples.",
    "commit": "8f9088a2356d5c08e08690f8c520298622086af5",
    "createdAt": "2018-04-06T17:29:03Z",
    "diffHunk": "@@ -102,10 +102,11 @@ object KolmogorovSmirnovTest {\n    */\n   @Since(\"2.4.0\")\n   @varargs\n-  def test(dataset: DataFrame, sampleCol: String, distName: String, params: Double*): DataFrame = {\n+  def test(dataset: Dataset[_], sampleCol: String, distName: String, params: Double*)"
  }],
  "prId": 20904
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "I guess I missed this before.  Would you mind fixing the scala style here too?",
    "commit": "8f9088a2356d5c08e08690f8c520298622086af5",
    "createdAt": "2018-04-06T17:59:40Z",
    "diffHunk": "@@ -81,7 +81,7 @@ object KolmogorovSmirnovTest {\n    * Java-friendly version of `test(dataset: DataFrame, sampleCol: String, cdf: Double => Double)`\n    */\n   @Since(\"2.4.0\")\n-  def test(dataset: DataFrame, sampleCol: String,\n+  def test(dataset: Dataset[_], sampleCol: String,\n     cdf: Function[java.lang.Double, java.lang.Double]): DataFrame = {"
  }],
  "prId": 20904
}, {
  "comments": [{
    "author": {
      "login": "ueshin"
    },
    "body": "Seems like this broke Scala 2.12 build again. Can you fix it or shall I? Thanks!",
    "commit": "8f9088a2356d5c08e08690f8c520298622086af5",
    "createdAt": "2018-04-12T08:45:40Z",
    "diffHunk": "@@ -81,32 +81,37 @@ object KolmogorovSmirnovTest {\n    * Java-friendly version of `test(dataset: DataFrame, sampleCol: String, cdf: Double => Double)`\n    */\n   @Since(\"2.4.0\")\n-  def test(dataset: DataFrame, sampleCol: String,\n-    cdf: Function[java.lang.Double, java.lang.Double]): DataFrame = {\n-    val f: Double => Double = x => cdf.call(x)\n-    test(dataset, sampleCol, f)\n+  def test(\n+      dataset: Dataset[_],\n+      sampleCol: String,\n+      cdf: Function[java.lang.Double, java.lang.Double]): DataFrame = {\n+    test(dataset, sampleCol, (x: Double) => cdf.call(x))",
    "line": 43
  }, {
    "author": {
      "login": "WeichenXu123"
    },
    "body": "ah.... it's my fault. Sorry!",
    "commit": "8f9088a2356d5c08e08690f8c520298622086af5",
    "createdAt": "2018-04-12T09:16:05Z",
    "diffHunk": "@@ -81,32 +81,37 @@ object KolmogorovSmirnovTest {\n    * Java-friendly version of `test(dataset: DataFrame, sampleCol: String, cdf: Double => Double)`\n    */\n   @Since(\"2.4.0\")\n-  def test(dataset: DataFrame, sampleCol: String,\n-    cdf: Function[java.lang.Double, java.lang.Double]): DataFrame = {\n-    val f: Double => Double = x => cdf.call(x)\n-    test(dataset, sampleCol, f)\n+  def test(\n+      dataset: Dataset[_],\n+      sampleCol: String,\n+      cdf: Function[java.lang.Double, java.lang.Double]): DataFrame = {\n+    test(dataset, sampleCol, (x: Double) => cdf.call(x))",
    "line": 43
  }, {
    "author": {
      "login": "WeichenXu123"
    },
    "body": "https://github.com/apache/spark/pull/21051",
    "commit": "8f9088a2356d5c08e08690f8c520298622086af5",
    "createdAt": "2018-04-12T09:25:32Z",
    "diffHunk": "@@ -81,32 +81,37 @@ object KolmogorovSmirnovTest {\n    * Java-friendly version of `test(dataset: DataFrame, sampleCol: String, cdf: Double => Double)`\n    */\n   @Since(\"2.4.0\")\n-  def test(dataset: DataFrame, sampleCol: String,\n-    cdf: Function[java.lang.Double, java.lang.Double]): DataFrame = {\n-    val f: Double => Double = x => cdf.call(x)\n-    test(dataset, sampleCol, f)\n+  def test(\n+      dataset: Dataset[_],\n+      sampleCol: String,\n+      cdf: Function[java.lang.Double, java.lang.Double]): DataFrame = {\n+    test(dataset, sampleCol, (x: Double) => cdf.call(x))",
    "line": 43
  }, {
    "author": {
      "login": "jkbradley"
    },
    "body": "This is the 2nd time I've merged something which broke the Scala 2.12 build.  If we care about Scala 2.12, do you know if there are any efforts to add PR builder tests for 2.12?",
    "commit": "8f9088a2356d5c08e08690f8c520298622086af5",
    "createdAt": "2018-04-12T21:45:04Z",
    "diffHunk": "@@ -81,32 +81,37 @@ object KolmogorovSmirnovTest {\n    * Java-friendly version of `test(dataset: DataFrame, sampleCol: String, cdf: Double => Double)`\n    */\n   @Since(\"2.4.0\")\n-  def test(dataset: DataFrame, sampleCol: String,\n-    cdf: Function[java.lang.Double, java.lang.Double]): DataFrame = {\n-    val f: Double => Double = x => cdf.call(x)\n-    test(dataset, sampleCol, f)\n+  def test(\n+      dataset: Dataset[_],\n+      sampleCol: String,\n+      cdf: Function[java.lang.Double, java.lang.Double]): DataFrame = {\n+    test(dataset, sampleCol, (x: Double) => cdf.call(x))",
    "line": 43
  }, {
    "author": {
      "login": "WeichenXu123"
    },
    "body": "I can build locally against scala-2.12 to check it. :)",
    "commit": "8f9088a2356d5c08e08690f8c520298622086af5",
    "createdAt": "2018-04-13T02:09:38Z",
    "diffHunk": "@@ -81,32 +81,37 @@ object KolmogorovSmirnovTest {\n    * Java-friendly version of `test(dataset: DataFrame, sampleCol: String, cdf: Double => Double)`\n    */\n   @Since(\"2.4.0\")\n-  def test(dataset: DataFrame, sampleCol: String,\n-    cdf: Function[java.lang.Double, java.lang.Double]): DataFrame = {\n-    val f: Double => Double = x => cdf.call(x)\n-    test(dataset, sampleCol, f)\n+  def test(\n+      dataset: Dataset[_],\n+      sampleCol: String,\n+      cdf: Function[java.lang.Double, java.lang.Double]): DataFrame = {\n+    test(dataset, sampleCol, (x: Double) => cdf.call(x))",
    "line": 43
  }, {
    "author": {
      "login": "jkbradley"
    },
    "body": "That's not a very scalable fix...",
    "commit": "8f9088a2356d5c08e08690f8c520298622086af5",
    "createdAt": "2018-04-16T13:22:29Z",
    "diffHunk": "@@ -81,32 +81,37 @@ object KolmogorovSmirnovTest {\n    * Java-friendly version of `test(dataset: DataFrame, sampleCol: String, cdf: Double => Double)`\n    */\n   @Since(\"2.4.0\")\n-  def test(dataset: DataFrame, sampleCol: String,\n-    cdf: Function[java.lang.Double, java.lang.Double]): DataFrame = {\n-    val f: Double => Double = x => cdf.call(x)\n-    test(dataset, sampleCol, f)\n+  def test(\n+      dataset: Dataset[_],\n+      sampleCol: String,\n+      cdf: Function[java.lang.Double, java.lang.Double]): DataFrame = {\n+    test(dataset, sampleCol, (x: Double) => cdf.call(x))",
    "line": 43
  }],
  "prId": 20904
}]