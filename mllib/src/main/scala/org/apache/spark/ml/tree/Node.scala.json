[{
  "comments": [{
    "author": {
      "login": "zsxwing"
    },
    "body": "`leftChild` and `rightChild` are `Option[LearningNode]`\n",
    "commit": "6861fddbff272c65c51367b0d80226c213989ec1",
    "createdAt": "2015-12-22T21:55:42Z",
    "diffHunk": "@@ -386,9 +386,9 @@ private[tree] object LearningNode {\n     var levelsToGo = indexToLevel(nodeIndex)\n     while (levelsToGo > 0) {\n       if ((nodeIndex & (1 << levelsToGo - 1)) == 0) {\n-        tmpNode = tmpNode.leftChild.asInstanceOf[LearningNode]\n+        tmpNode = tmpNode.leftChild.get",
    "line": 5
  }, {
    "author": {
      "login": "andrewor14"
    },
    "body": "@jkbradley was this code never run before?\n",
    "commit": "6861fddbff272c65c51367b0d80226c213989ec1",
    "createdAt": "2015-12-28T22:37:10Z",
    "diffHunk": "@@ -386,9 +386,9 @@ private[tree] object LearningNode {\n     var levelsToGo = indexToLevel(nodeIndex)\n     while (levelsToGo > 0) {\n       if ((nodeIndex & (1 << levelsToGo - 1)) == 0) {\n-        tmpNode = tmpNode.leftChild.asInstanceOf[LearningNode]\n+        tmpNode = tmpNode.leftChild.get",
    "line": 5
  }],
  "prId": 10440
}]