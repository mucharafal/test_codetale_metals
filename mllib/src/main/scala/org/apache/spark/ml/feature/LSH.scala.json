[{
  "comments": [{
    "author": {
      "login": "sethah"
    },
    "body": "a column \"distCol\"",
    "commit": "36fd9bc6366d58541c8306803d8742649be69098",
    "createdAt": "2017-02-14T07:08:02Z",
    "diffHunk": "@@ -222,17 +222,18 @@ private[ml] abstract class LSHModel[T <: LSHModel[T]]\n   }\n \n   /**\n-   * Join two dataset to approximately find all pairs of rows whose distance are smaller than\n+   * Join two datasets to approximately find all pairs of rows whose distance are smaller than\n    * the threshold. If the [[outputCol]] is missing, the method will transform the data; if the\n    * [[outputCol]] exists, it will use the [[outputCol]]. This allows caching of the transformed\n    * data when necessary.\n    *\n    * @param datasetA One of the datasets to join.\n    * @param datasetB Another dataset to join.\n    * @param threshold The threshold for the distance of row pairs.\n-   * @param distCol Output column for storing the distance between each result row and the key.\n+   * @param distCol Output column for storing the distance between each pair of rows.\n    * @return A joined dataset containing pairs of rows. The original rows are in columns\n-   *         \"datasetA\" and \"datasetB\", and a distCol is added to show the distance of each pair.\n+   *         \"datasetA\" and \"datasetB\", and a distCol is added to show the distance between each"
  }, {
    "author": {
      "login": "Yunni"
    },
    "body": "Done.",
    "commit": "36fd9bc6366d58541c8306803d8742649be69098",
    "createdAt": "2017-02-14T17:14:17Z",
    "diffHunk": "@@ -222,17 +222,18 @@ private[ml] abstract class LSHModel[T <: LSHModel[T]]\n   }\n \n   /**\n-   * Join two dataset to approximately find all pairs of rows whose distance are smaller than\n+   * Join two datasets to approximately find all pairs of rows whose distance are smaller than\n    * the threshold. If the [[outputCol]] is missing, the method will transform the data; if the\n    * [[outputCol]] exists, it will use the [[outputCol]]. This allows caching of the transformed\n    * data when necessary.\n    *\n    * @param datasetA One of the datasets to join.\n    * @param datasetB Another dataset to join.\n    * @param threshold The threshold for the distance of row pairs.\n-   * @param distCol Output column for storing the distance between each result row and the key.\n+   * @param distCol Output column for storing the distance between each pair of rows.\n    * @return A joined dataset containing pairs of rows. The original rows are in columns\n-   *         \"datasetA\" and \"datasetB\", and a distCol is added to show the distance of each pair.\n+   *         \"datasetA\" and \"datasetB\", and a distCol is added to show the distance between each"
  }],
  "prId": 16715
}]