[{
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "How about adding a default arg to the previous appendColumn method?  It's private, so it does not need to be Java-compatible.\n",
    "commit": "449f824fa633ea5b742af8cc8a078cd1561178f5",
    "createdAt": "2016-04-28T18:04:42Z",
    "diffHunk": "@@ -94,6 +94,28 @@ private[spark] object SchemaUtils {\n   /**\n    * Appends a new column to the input schema. This fails if the given output column already exists.\n    * @param schema input schema\n+   * @param colName new column name. If this column name is an empty string \"\", this method returns\n+   *                the input schema unchanged. This allows users to disable output columns.\n+   * @param dataType new column data type\n+   * @param nullable Indicates if values of this field can be `null` values.\n+   * @param metadata The metadata of this field. The metadata should be preserved during\n+   *                 transformation if the content of the column is not modified.\n+   * @return new schema with the input column appended\n+   */\n+  def appendColumn("
  }],
  "prId": 12066
}]