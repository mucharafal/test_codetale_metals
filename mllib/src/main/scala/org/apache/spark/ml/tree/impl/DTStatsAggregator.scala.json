[{
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "It should, but it should not have a getAggregator() method which returns a class from spark.mllib.  getAggregator should be put inside Impurity after spark.ml has the necessary class---but that need should be documented here.\n\nCan you please create a JIRA to fix this and modify your comment here to link to the new JIRA?  I'd also note in the JIRA that we should consider not having Aggregator classes in spark.ml at all since that functionality could live inside Impurity classes.\n",
    "commit": "4e20a709e9278e18302835070a148f891e42a3c1",
    "createdAt": "2016-08-19T17:50:31Z",
    "diffHunk": "@@ -33,11 +34,13 @@ private[spark] class DTStatsAggregator(\n \n   /**\n    * [[ImpurityAggregator]] instance specifying the impurity type.\n-   */\n-  val impurityAggregator: ImpurityAggregator = metadata.impurity match {\n+  */\n+  private val impurityAggregator: ImpurityAggregator = metadata.impurity match {\n+    // TODO(vlad17): this is a ridiculous coupling. Impurity should have a getAggregator() method"
  }, {
    "author": {
      "login": "vlad17"
    },
    "body": "Updated https://issues.apache.org/jira/browse/SPARK-16728\ndone\n",
    "commit": "4e20a709e9278e18302835070a148f891e42a3c1",
    "createdAt": "2016-09-13T01:24:08Z",
    "diffHunk": "@@ -33,11 +34,13 @@ private[spark] class DTStatsAggregator(\n \n   /**\n    * [[ImpurityAggregator]] instance specifying the impurity type.\n-   */\n-  val impurityAggregator: ImpurityAggregator = metadata.impurity match {\n+  */\n+  private val impurityAggregator: ImpurityAggregator = metadata.impurity match {\n+    // TODO(vlad17): this is a ridiculous coupling. Impurity should have a getAggregator() method"
  }],
  "prId": 14547
}]