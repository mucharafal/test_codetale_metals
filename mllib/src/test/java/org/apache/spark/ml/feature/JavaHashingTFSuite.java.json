[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "`take(3)` -> `collect()`?\n",
    "commit": "cd47f4b2fb770a8d9a43fc321cec73b72ac886a4",
    "createdAt": "2015-05-22T00:57:12Z",
    "diffHunk": "@@ -63,17 +63,22 @@ public void hashingTF() {\n       new StructField(\"label\", DataTypes.DoubleType, false, Metadata.empty()),\n       new StructField(\"sentence\", DataTypes.StringType, false, Metadata.empty())\n     });\n-    DataFrame sentenceDataFrame = jsql.createDataFrame(jrdd, schema);\n \n-    Tokenizer tokenizer = new Tokenizer().setInputCol(\"sentence\").setOutputCol(\"words\");\n-    DataFrame wordsDataFrame = tokenizer.transform(sentenceDataFrame);\n+    DataFrame sentenceData = jsql.createDataFrame(jrdd, schema);\n+    Tokenizer tokenizer = new Tokenizer()\n+      .setInputCol(\"sentence\")\n+      .setOutputCol(\"words\");\n+    DataFrame wordsData = tokenizer.transform(sentenceData);\n     int numFeatures = 20;\n     HashingTF hashingTF = new HashingTF()\n       .setInputCol(\"words\")\n-      .setOutputCol(\"features\")\n+      .setOutputCol(\"rawFeatures\")\n       .setNumFeatures(numFeatures);\n-    DataFrame featurized = hashingTF.transform(wordsDataFrame);\n-    for (Row r : featurized.select(\"features\", \"words\", \"label\").take(3)) {\n+    DataFrame featurizedData = hashingTF.transform(wordsData);\n+    IDF idf = new IDF().setInputCol(\"rawFeatures\").setOutputCol(\"features\");\n+    IDFModel idfModel = idf.fit(featurizedData);\n+    DataFrame rescaledData = idfModel.transform(featurizedData);\n+    for (Row r : rescaledData.select(\"features\", \"label\").take(3)) {",
    "line": 25
  }],
  "prId": 6127
}]