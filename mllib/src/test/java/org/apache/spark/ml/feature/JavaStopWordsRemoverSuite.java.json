[{
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "style: space between bracket and brace: `[] {`  (Xiangrui tells me to do this.)\n",
    "commit": "24eba0448fe20efcdbc98ea6ec2bea1820fa0055",
    "createdAt": "2015-08-25T23:33:19Z",
    "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature;\n+\n+import java.util.Arrays;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.sql.DataFrame;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.SQLContext;\n+import org.apache.spark.sql.types.DataTypes;\n+import org.apache.spark.sql.types.Metadata;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+\n+\n+public class JavaStopWordsRemoverSuite {\n+\n+  private transient JavaSparkContext jsc;\n+  private transient SQLContext jsql;\n+\n+  @Before\n+  public void setUp() {\n+    jsc = new JavaSparkContext(\"local\", \"JavaStopWordsRemoverSuite\");\n+    jsql = new SQLContext(jsc);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    jsc.stop();\n+    jsc = null;\n+  }\n+\n+  @Test\n+  public void javaCompatibilityTest() {\n+    StopWordsRemover remover = new StopWordsRemover()\n+      .setInputCol(\"raw\")\n+      .setOutputCol(\"filtered\");\n+\n+    JavaRDD<Row> rdd = jsc.parallelize(Arrays.asList(\n+      RowFactory.create(Arrays.asList(\"I\", \"saw\", \"the\", \"red\", \"baloon\")),\n+      RowFactory.create(Arrays.asList(\"Mary\", \"had\", \"a\", \"little\", \"lamb\"))\n+    ));\n+    StructType schema = new StructType(new StructField[]{"
  }, {
    "author": {
      "login": "feynmanliang"
    },
    "body": "OK\n",
    "commit": "24eba0448fe20efcdbc98ea6ec2bea1820fa0055",
    "createdAt": "2015-08-26T05:11:36Z",
    "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature;\n+\n+import java.util.Arrays;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.sql.DataFrame;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.SQLContext;\n+import org.apache.spark.sql.types.DataTypes;\n+import org.apache.spark.sql.types.Metadata;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+\n+\n+public class JavaStopWordsRemoverSuite {\n+\n+  private transient JavaSparkContext jsc;\n+  private transient SQLContext jsql;\n+\n+  @Before\n+  public void setUp() {\n+    jsc = new JavaSparkContext(\"local\", \"JavaStopWordsRemoverSuite\");\n+    jsql = new SQLContext(jsc);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    jsc.stop();\n+    jsc = null;\n+  }\n+\n+  @Test\n+  public void javaCompatibilityTest() {\n+    StopWordsRemover remover = new StopWordsRemover()\n+      .setInputCol(\"raw\")\n+      .setOutputCol(\"filtered\");\n+\n+    JavaRDD<Row> rdd = jsc.parallelize(Arrays.asList(\n+      RowFactory.create(Arrays.asList(\"I\", \"saw\", \"the\", \"red\", \"baloon\")),\n+      RowFactory.create(Arrays.asList(\"Mary\", \"had\", \"a\", \"little\", \"lamb\"))\n+    ));\n+    StructType schema = new StructType(new StructField[]{"
  }],
  "prId": 8436
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "remover.fit?\n",
    "commit": "24eba0448fe20efcdbc98ea6ec2bea1820fa0055",
    "createdAt": "2015-08-25T23:33:20Z",
    "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature;\n+\n+import java.util.Arrays;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.sql.DataFrame;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.SQLContext;\n+import org.apache.spark.sql.types.DataTypes;\n+import org.apache.spark.sql.types.Metadata;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+\n+\n+public class JavaStopWordsRemoverSuite {\n+\n+  private transient JavaSparkContext jsc;\n+  private transient SQLContext jsql;\n+\n+  @Before\n+  public void setUp() {\n+    jsc = new JavaSparkContext(\"local\", \"JavaStopWordsRemoverSuite\");\n+    jsql = new SQLContext(jsc);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    jsc.stop();\n+    jsc = null;\n+  }\n+\n+  @Test\n+  public void javaCompatibilityTest() {\n+    StopWordsRemover remover = new StopWordsRemover()\n+      .setInputCol(\"raw\")\n+      .setOutputCol(\"filtered\");\n+\n+    JavaRDD<Row> rdd = jsc.parallelize(Arrays.asList(\n+      RowFactory.create(Arrays.asList(\"I\", \"saw\", \"the\", \"red\", \"baloon\")),\n+      RowFactory.create(Arrays.asList(\"Mary\", \"had\", \"a\", \"little\", \"lamb\"))\n+    ));\n+    StructType schema = new StructType(new StructField[]{\n+      new StructField(\"raw\", DataTypes.createArrayType(DataTypes.StringType), false, Metadata.empty())\n+    });\n+    DataFrame dataset = jsql.createDataFrame(rdd, schema);\n+  }"
  }],
  "prId": 8436
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "This doesn't trigger any action. We can call `.collect()`.\n",
    "commit": "24eba0448fe20efcdbc98ea6ec2bea1820fa0055",
    "createdAt": "2015-08-27T21:11:36Z",
    "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature;\n+\n+import java.util.Arrays;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.sql.DataFrame;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.SQLContext;\n+import org.apache.spark.sql.types.DataTypes;\n+import org.apache.spark.sql.types.Metadata;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+\n+\n+public class JavaStopWordsRemoverSuite {\n+\n+  private transient JavaSparkContext jsc;\n+  private transient SQLContext jsql;\n+\n+  @Before\n+  public void setUp() {\n+    jsc = new JavaSparkContext(\"local\", \"JavaStopWordsRemoverSuite\");\n+    jsql = new SQLContext(jsc);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    jsc.stop();\n+    jsc = null;\n+  }\n+\n+  @Test\n+  public void javaCompatibilityTest() {\n+    StopWordsRemover remover = new StopWordsRemover()\n+      .setInputCol(\"raw\")\n+      .setOutputCol(\"filtered\");\n+\n+    JavaRDD<Row> rdd = jsc.parallelize(Arrays.asList(\n+      RowFactory.create(Arrays.asList(\"I\", \"saw\", \"the\", \"red\", \"baloon\")),\n+      RowFactory.create(Arrays.asList(\"Mary\", \"had\", \"a\", \"little\", \"lamb\"))\n+    ));\n+    StructType schema = new StructType(new StructField[] {\n+      new StructField(\"raw\", DataTypes.createArrayType(DataTypes.StringType), false, Metadata.empty())\n+    });\n+    DataFrame dataset = jsql.createDataFrame(rdd, schema);\n+\n+    remover.transform(dataset);"
  }, {
    "author": {
      "login": "feynmanliang"
    },
    "body": "OK\n",
    "commit": "24eba0448fe20efcdbc98ea6ec2bea1820fa0055",
    "createdAt": "2015-08-27T21:35:54Z",
    "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature;\n+\n+import java.util.Arrays;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.sql.DataFrame;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.SQLContext;\n+import org.apache.spark.sql.types.DataTypes;\n+import org.apache.spark.sql.types.Metadata;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+\n+\n+public class JavaStopWordsRemoverSuite {\n+\n+  private transient JavaSparkContext jsc;\n+  private transient SQLContext jsql;\n+\n+  @Before\n+  public void setUp() {\n+    jsc = new JavaSparkContext(\"local\", \"JavaStopWordsRemoverSuite\");\n+    jsql = new SQLContext(jsc);\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    jsc.stop();\n+    jsc = null;\n+  }\n+\n+  @Test\n+  public void javaCompatibilityTest() {\n+    StopWordsRemover remover = new StopWordsRemover()\n+      .setInputCol(\"raw\")\n+      .setOutputCol(\"filtered\");\n+\n+    JavaRDD<Row> rdd = jsc.parallelize(Arrays.asList(\n+      RowFactory.create(Arrays.asList(\"I\", \"saw\", \"the\", \"red\", \"baloon\")),\n+      RowFactory.create(Arrays.asList(\"Mary\", \"had\", \"a\", \"little\", \"lamb\"))\n+    ));\n+    StructType schema = new StructType(new StructField[] {\n+      new StructField(\"raw\", DataTypes.createArrayType(DataTypes.StringType), false, Metadata.empty())\n+    });\n+    DataFrame dataset = jsql.createDataFrame(rdd, schema);\n+\n+    remover.transform(dataset);"
  }],
  "prId": 8436
}]