[{
  "comments": [{
    "author": {
      "login": "sethah"
    },
    "body": "It would be nice to see a test that checks behavior of threshold while we're here. e.g. positive infinity predicts only class 0, negative infinity predicts only class 1. ",
    "commit": "58301861500fe1c6134d4dc8cf3e789d7b1cabc3",
    "createdAt": "2017-05-31T05:52:26Z",
    "diffHunk": "@@ -127,6 +127,14 @@ class LinearSVCSuite extends SparkFunSuite with MLlibTestSparkContext with Defau\n     MLTestingUtils.checkCopyAndUids(lsvc, model)\n   }\n \n+  test(\"LinearSVC threshold can be any real value\") {"
  }],
  "prId": 18151
}, {
  "comments": [{
    "author": {
      "login": "sethah"
    },
    "body": "It might be a good idea to additionally test the other code path, by calling `lsvc.set(lsvc.rawPrediction, \"\")`. The way it is, we don't know if `predict` works correctly (this is done in the logistic regression suite).",
    "commit": "58301861500fe1c6134d4dc8cf3e789d7b1cabc3",
    "createdAt": "2017-05-31T20:59:16Z",
    "diffHunk": "@@ -127,6 +127,27 @@ class LinearSVCSuite extends SparkFunSuite with MLlibTestSparkContext with Defau\n     MLTestingUtils.checkCopyAndUids(lsvc, model)\n   }\n \n+  test(\"LinearSVC threshold acts on rawPrediction\") {\n+    val lsvc =\n+      new LinearSVCModel(uid = \"myLSVCM\", coefficients = Vectors.dense(1.0), intercept = 0.0)\n+    val df = spark.createDataFrame(Seq(\n+      (1, Vectors.dense(1e-7)),\n+      (0, Vectors.dense(0.0)),\n+      (-1, Vectors.dense(-1e-7)))).toDF(\"id\", \"features\")\n+\n+    def checkResults(threshold: Double, expected: Set[(Int, Double)]): Unit = {\n+      lsvc.setThreshold(threshold)\n+      val results = lsvc.transform(df).select(\"id\", \"prediction\").collect()\n+        .map(r => (r.getInt(0), r.getDouble(1)))\n+        .toSet\n+      assert(results === expected, s\"Failed for threshold = $threshold\")\n+    }\n+\n+    checkResults(0.0, Set((1, 1.0), (0, 0.0), (-1, 0.0)))"
  }],
  "prId": 18151
}]