[{
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "d1,d2 -> dist1,dist2\n",
    "commit": "35708458a0ee156c097ca604efeafaa37d3c8a6d",
    "createdAt": "2016-10-07T18:35:22Z",
    "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature\n+\n+import org.apache.spark.ml.linalg.Vector\n+import org.apache.spark.sql.Dataset\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.types.DataTypes\n+\n+private[ml] object LSHTest {\n+  /**\n+   * For any locality sensitive function h in a metric space, we meed to verify whether\n+   * the following property is satisfied.\n+   *\n+   * There exist d1, d2, p1, p2, so that for any two elements e1 and e2,"
  }, {
    "author": {
      "login": "Yunni"
    },
    "body": "Done.\n",
    "commit": "35708458a0ee156c097ca604efeafaa37d3c8a6d",
    "createdAt": "2016-10-10T16:17:50Z",
    "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature\n+\n+import org.apache.spark.ml.linalg.Vector\n+import org.apache.spark.sql.Dataset\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.types.DataTypes\n+\n+private[ml] object LSHTest {\n+  /**\n+   * For any locality sensitive function h in a metric space, we meed to verify whether\n+   * the following property is satisfied.\n+   *\n+   * There exist d1, d2, p1, p2, so that for any two elements e1 and e2,"
  }],
  "prId": 15148
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "\">=\" should be \"<=\"\n",
    "commit": "35708458a0ee156c097ca604efeafaa37d3c8a6d",
    "createdAt": "2016-10-07T18:35:23Z",
    "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature\n+\n+import org.apache.spark.ml.linalg.Vector\n+import org.apache.spark.sql.Dataset\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.types.DataTypes\n+\n+private[ml] object LSHTest {\n+  /**\n+   * For any locality sensitive function h in a metric space, we meed to verify whether\n+   * the following property is satisfied.\n+   *\n+   * There exist d1, d2, p1, p2, so that for any two elements e1 and e2,\n+   * If dist(e1, e2) >= dist1, then Pr{h(x) == h(y)} >= p1"
  }, {
    "author": {
      "login": "Yunni"
    },
    "body": "Done.\n",
    "commit": "35708458a0ee156c097ca604efeafaa37d3c8a6d",
    "createdAt": "2016-10-10T16:17:47Z",
    "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature\n+\n+import org.apache.spark.ml.linalg.Vector\n+import org.apache.spark.sql.Dataset\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.types.DataTypes\n+\n+private[ml] object LSHTest {\n+  /**\n+   * For any locality sensitive function h in a metric space, we meed to verify whether\n+   * the following property is satisfied.\n+   *\n+   * There exist d1, d2, p1, p2, so that for any two elements e1 and e2,\n+   * If dist(e1, e2) >= dist1, then Pr{h(x) == h(y)} >= p1"
  }],
  "prId": 15148
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "should be: \"If dist(e1, e2) >= dist2, then Pr{h(x) == h(y)} <= p2\"\n",
    "commit": "35708458a0ee156c097ca604efeafaa37d3c8a6d",
    "createdAt": "2016-10-07T18:35:25Z",
    "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature\n+\n+import org.apache.spark.ml.linalg.Vector\n+import org.apache.spark.sql.Dataset\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.types.DataTypes\n+\n+private[ml] object LSHTest {\n+  /**\n+   * For any locality sensitive function h in a metric space, we meed to verify whether\n+   * the following property is satisfied.\n+   *\n+   * There exist d1, d2, p1, p2, so that for any two elements e1 and e2,\n+   * If dist(e1, e2) >= dist1, then Pr{h(x) == h(y)} >= p1\n+   * If dist(e1, e2) <= dist2, then Pr{h(x) != h(y)} <= p2"
  }, {
    "author": {
      "login": "Yunni"
    },
    "body": "Fixed.\n",
    "commit": "35708458a0ee156c097ca604efeafaa37d3c8a6d",
    "createdAt": "2016-10-10T16:17:44Z",
    "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature\n+\n+import org.apache.spark.ml.linalg.Vector\n+import org.apache.spark.sql.Dataset\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.types.DataTypes\n+\n+private[ml] object LSHTest {\n+  /**\n+   * For any locality sensitive function h in a metric space, we meed to verify whether\n+   * the following property is satisfied.\n+   *\n+   * There exist d1, d2, p1, p2, so that for any two elements e1 and e2,\n+   * If dist(e1, e2) >= dist1, then Pr{h(x) == h(y)} >= p1\n+   * If dist(e1, e2) <= dist2, then Pr{h(x) != h(y)} <= p2"
  }],
  "prId": 15148
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "Rename dist1,dist2 to distFP, distFN\n",
    "commit": "35708458a0ee156c097ca604efeafaa37d3c8a6d",
    "createdAt": "2016-10-07T18:35:26Z",
    "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature\n+\n+import org.apache.spark.ml.linalg.Vector\n+import org.apache.spark.sql.Dataset\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.types.DataTypes\n+\n+private[ml] object LSHTest {\n+  /**\n+   * For any locality sensitive function h in a metric space, we meed to verify whether\n+   * the following property is satisfied.\n+   *\n+   * There exist d1, d2, p1, p2, so that for any two elements e1 and e2,\n+   * If dist(e1, e2) >= dist1, then Pr{h(x) == h(y)} >= p1\n+   * If dist(e1, e2) <= dist2, then Pr{h(x) != h(y)} <= p2\n+   *\n+   * This is called locality sensitive property. This method checks the property on an\n+   * existing dataset and calculate the probabilities.\n+   * (https://en.wikipedia.org/wiki/Locality-sensitive_hashing#Definition)\n+   *\n+   * @param dataset The dataset to verify the locality sensitive hashing property.\n+   * @param lsh The lsh instance to perform the hashing\n+   * @param dist1 Distance threshold for false positive"
  }, {
    "author": {
      "login": "Yunni"
    },
    "body": "Done.\n",
    "commit": "35708458a0ee156c097ca604efeafaa37d3c8a6d",
    "createdAt": "2016-10-10T16:17:41Z",
    "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature\n+\n+import org.apache.spark.ml.linalg.Vector\n+import org.apache.spark.sql.Dataset\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.types.DataTypes\n+\n+private[ml] object LSHTest {\n+  /**\n+   * For any locality sensitive function h in a metric space, we meed to verify whether\n+   * the following property is satisfied.\n+   *\n+   * There exist d1, d2, p1, p2, so that for any two elements e1 and e2,\n+   * If dist(e1, e2) >= dist1, then Pr{h(x) == h(y)} >= p1\n+   * If dist(e1, e2) <= dist2, then Pr{h(x) != h(y)} <= p2\n+   *\n+   * This is called locality sensitive property. This method checks the property on an\n+   * existing dataset and calculate the probabilities.\n+   * (https://en.wikipedia.org/wiki/Locality-sensitive_hashing#Definition)\n+   *\n+   * @param dataset The dataset to verify the locality sensitive hashing property.\n+   * @param lsh The lsh instance to perform the hashing\n+   * @param dist1 Distance threshold for false positive"
  }],
  "prId": 15148
}]