[{
  "comments": [{
    "author": {
      "login": "WeichenXu123"
    },
    "body": "Why the \"value\" column use `java.lang.Double` type ?",
    "commit": "592670c90975d904605864f3168eff00c2befa5d",
    "createdAt": "2018-04-03T10:26:25Z",
    "diffHunk": "@@ -76,6 +75,28 @@ class ImputerSuite extends SparkFunSuite with MLlibTestSparkContext with Default\n     ImputerSuite.iterateStrategyTest(imputer, df)\n   }\n \n+  test(\"Imputer should work with Structured Streaming\") {\n+    val localSpark = spark\n+    import localSpark.implicits._\n+    val df = Seq[(java.lang.Double, Double)](\n+      (4.0, 4.0),\n+      (10.0, 10.0),\n+      (10.0, 10.0),\n+      (Double.NaN, 8.0),\n+      (null, 8.0)\n+    ).toDF(\"value\", \"expected_mean_value\")",
    "line": 30
  }, {
    "author": {
      "login": "jkbradley"
    },
    "body": "since it's nullable",
    "commit": "592670c90975d904605864f3168eff00c2befa5d",
    "createdAt": "2018-04-03T17:09:01Z",
    "diffHunk": "@@ -76,6 +75,28 @@ class ImputerSuite extends SparkFunSuite with MLlibTestSparkContext with Default\n     ImputerSuite.iterateStrategyTest(imputer, df)\n   }\n \n+  test(\"Imputer should work with Structured Streaming\") {\n+    val localSpark = spark\n+    import localSpark.implicits._\n+    val df = Seq[(java.lang.Double, Double)](\n+      (4.0, 4.0),\n+      (10.0, 10.0),\n+      (10.0, 10.0),\n+      (Double.NaN, 8.0),\n+      (null, 8.0)\n+    ).toDF(\"value\", \"expected_mean_value\")",
    "line": 30
  }],
  "prId": 20964
}]