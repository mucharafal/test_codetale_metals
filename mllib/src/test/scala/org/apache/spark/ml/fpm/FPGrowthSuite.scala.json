[{
  "comments": [{
    "author": {
      "login": "hhbyyh"
    },
    "body": "\"prediction\"",
    "commit": "d2928962d63f5489325effbbbe7fac626210f206",
    "createdAt": "2017-03-13T23:37:37Z",
    "diffHunk": "@@ -103,6 +103,22 @@ class FPGrowthSuite extends SparkFunSuite with MLlibTestSparkContext with Defaul\n       FPGrowthSuite.allParamSettings, checkModelData)\n   }\n \n+  test(\"FPGrowth predict should skip duplicates\") {\n+    // This should generate the same rules for t and s\n+    val dataset = spark.createDataFrame(Seq(\n+      \"z y x w v u t s\",\n+      \"x z y m t s q e\"\n+    ).map(s => Tuple1(s.split(\"\\\\s+\")))).toDF(\"features\")\n+    val model = new FPGrowth().fit(dataset)\n+\n+    val predictions = model.transform(\n+      spark.createDataFrame(Seq((1, Array(\"t\", \"s\")))).toDF(\"id\", \"features\")\n+    )\n+\n+    val prediction = predictions.first().getAs[Seq[String]](\"predictions\")"
  }],
  "prId": 17283
}, {
  "comments": [{
    "author": {
      "login": "hhbyyh"
    },
    "body": "Maybe \"FPGrowth prediction should not contain duplicates\"",
    "commit": "d2928962d63f5489325effbbbe7fac626210f206",
    "createdAt": "2017-03-13T23:38:56Z",
    "diffHunk": "@@ -103,6 +103,22 @@ class FPGrowthSuite extends SparkFunSuite with MLlibTestSparkContext with Defaul\n       FPGrowthSuite.allParamSettings, checkModelData)\n   }\n \n+  test(\"FPGrowth predict should skip duplicates\") {"
  }],
  "prId": 17283
}, {
  "comments": [{
    "author": {
      "login": "hhbyyh"
    },
    "body": "we can merge this line to the last statement.\r\n```\r\nmodel.transform(\r\n    ...\r\n    ).first().getAs[Seq[String]](\"prediction\")\r\n```",
    "commit": "d2928962d63f5489325effbbbe7fac626210f206",
    "createdAt": "2017-03-14T02:00:53Z",
    "diffHunk": "@@ -103,6 +103,22 @@ class FPGrowthSuite extends SparkFunSuite with MLlibTestSparkContext with Defaul\n       FPGrowthSuite.allParamSettings, checkModelData)\n   }\n \n+  test(\"SPARK-19940 - FPGrowth prediction should not contain duplicates\") {\n+    // This should generate the same rules for t and s\n+    val dataset = spark.createDataFrame(Seq(\n+      Array(\"1\", \"3\"),\n+      Array(\"2\", \"3\")\n+    ).map(Tuple1(_))).toDF(\"features\")\n+    val model = new FPGrowth().fit(dataset)\n+\n+    val predictions = model.transform(\n+      spark.createDataFrame(Seq(Tuple1(Array(\"1\", \"2\")))).toDF(\"features\")\n+    )\n+\n+    val prediction = predictions.first().getAs[Seq[String]](\"prediction\")"
  }],
  "prId": 17283
}, {
  "comments": [{
    "author": {
      "login": "hhbyyh"
    },
    "body": "This may be a violation of style. Not sure if we need the jira id here as this is self-explanatory.",
    "commit": "d2928962d63f5489325effbbbe7fac626210f206",
    "createdAt": "2017-03-14T02:02:41Z",
    "diffHunk": "@@ -103,6 +103,22 @@ class FPGrowthSuite extends SparkFunSuite with MLlibTestSparkContext with Defaul\n       FPGrowthSuite.allParamSettings, checkModelData)\n   }\n \n+  test(\"SPARK-19940 - FPGrowth prediction should not contain duplicates\") {"
  }],
  "prId": 17283
}, {
  "comments": [{
    "author": {
      "login": "hhbyyh"
    },
    "body": "nit: assert(prediction.size === Seq(\"3\")) may be more clear.",
    "commit": "d2928962d63f5489325effbbbe7fac626210f206",
    "createdAt": "2017-03-14T02:03:46Z",
    "diffHunk": "@@ -103,6 +103,22 @@ class FPGrowthSuite extends SparkFunSuite with MLlibTestSparkContext with Defaul\n       FPGrowthSuite.allParamSettings, checkModelData)\n   }\n \n+  test(\"SPARK-19940 - FPGrowth prediction should not contain duplicates\") {\n+    // This should generate the same rules for t and s\n+    val dataset = spark.createDataFrame(Seq(\n+      Array(\"1\", \"3\"),\n+      Array(\"2\", \"3\")\n+    ).map(Tuple1(_))).toDF(\"features\")\n+    val model = new FPGrowth().fit(dataset)\n+\n+    val predictions = model.transform(\n+      spark.createDataFrame(Seq(Tuple1(Array(\"1\", \"2\")))).toDF(\"features\")\n+    )\n+\n+    val prediction = predictions.first().getAs[Seq[String]](\"prediction\")\n+    assert(prediction.size === 1)"
  }],
  "prId": 17283
}]