[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "Why do we need this test? Does it provide more test coverage than the one in `UserDefinedTypeSuite`?",
    "commit": "5759be3abea554b325d7696961ebf1e2d4385f8c",
    "createdAt": "2019-11-21T03:44:54Z",
    "diffHunk": "@@ -44,4 +47,11 @@ class VectorUDTSuite extends SparkFunSuite {\n     assert(dataType.asInstanceOf[StructType].fields.map(_.dataType)\n       === Seq(new VectorUDT, DoubleType))\n   }\n+\n+  test(\"typeof Vector\") {",
    "line": 23
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Yeah, seems we can remove this one.",
    "commit": "5759be3abea554b325d7696961ebf1e2d4385f8c",
    "createdAt": "2019-11-21T03:46:55Z",
    "diffHunk": "@@ -44,4 +47,11 @@ class VectorUDTSuite extends SparkFunSuite {\n     assert(dataType.asInstanceOf[StructType].fields.map(_.dataType)\n       === Seq(new VectorUDT, DoubleType))\n   }\n+\n+  test(\"typeof Vector\") {",
    "line": 23
  }, {
    "author": {
      "login": "yaooqinn"
    },
    "body": "just add this for this comments https://github.com/apache/spark/pull/26599#issuecomment-555929149, it does no more than `UserDefinedTypeSuite`",
    "commit": "5759be3abea554b325d7696961ebf1e2d4385f8c",
    "createdAt": "2019-11-21T03:48:27Z",
    "diffHunk": "@@ -44,4 +47,11 @@ class VectorUDTSuite extends SparkFunSuite {\n     assert(dataType.asInstanceOf[StructType].fields.map(_.dataType)\n       === Seq(new VectorUDT, DoubleType))\n   }\n+\n+  test(\"typeof Vector\") {",
    "line": 23
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "I didn't mean so and I just said: https://github.com/apache/spark/pull/26599#issuecomment-555804633",
    "commit": "5759be3abea554b325d7696961ebf1e2d4385f8c",
    "createdAt": "2019-11-21T03:56:47Z",
    "diffHunk": "@@ -44,4 +47,11 @@ class VectorUDTSuite extends SparkFunSuite {\n     assert(dataType.asInstanceOf[StructType].fields.map(_.dataType)\n       === Seq(new VectorUDT, DoubleType))\n   }\n+\n+  test(\"typeof Vector\") {",
    "line": 23
  }, {
    "author": {
      "login": "yaooqinn"
    },
    "body": "I am sorry for the misunderstanding, my fault",
    "commit": "5759be3abea554b325d7696961ebf1e2d4385f8c",
    "createdAt": "2019-11-21T03:58:02Z",
    "diffHunk": "@@ -44,4 +47,11 @@ class VectorUDTSuite extends SparkFunSuite {\n     assert(dataType.asInstanceOf[StructType].fields.map(_.dataType)\n       === Seq(new VectorUDT, DoubleType))\n   }\n+\n+  test(\"typeof Vector\") {",
    "line": 23
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "can we remove it in a followup?",
    "commit": "5759be3abea554b325d7696961ebf1e2d4385f8c",
    "createdAt": "2019-11-21T04:20:11Z",
    "diffHunk": "@@ -44,4 +47,11 @@ class VectorUDTSuite extends SparkFunSuite {\n     assert(dataType.asInstanceOf[StructType].fields.map(_.dataType)\n       === Seq(new VectorUDT, DoubleType))\n   }\n+\n+  test(\"typeof Vector\") {",
    "line": 23
  }, {
    "author": {
      "login": "yaooqinn"
    },
    "body": "yea, raised and merged",
    "commit": "5759be3abea554b325d7696961ebf1e2d4385f8c",
    "createdAt": "2019-11-21T05:17:50Z",
    "diffHunk": "@@ -44,4 +47,11 @@ class VectorUDTSuite extends SparkFunSuite {\n     assert(dataType.asInstanceOf[StructType].fields.map(_.dataType)\n       === Seq(new VectorUDT, DoubleType))\n   }\n+\n+  test(\"typeof Vector\") {",
    "line": 23
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "https://github.com/apache/spark/pull/26620",
    "commit": "5759be3abea554b325d7696961ebf1e2d4385f8c",
    "createdAt": "2019-11-21T05:21:55Z",
    "diffHunk": "@@ -44,4 +47,11 @@ class VectorUDTSuite extends SparkFunSuite {\n     assert(dataType.asInstanceOf[StructType].fields.map(_.dataType)\n       === Seq(new VectorUDT, DoubleType))\n   }\n+\n+  test(\"typeof Vector\") {",
    "line": 23
  }],
  "prId": 26599
}]