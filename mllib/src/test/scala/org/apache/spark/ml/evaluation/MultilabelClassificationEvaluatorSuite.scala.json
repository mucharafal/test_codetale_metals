[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Maybe copy/paste a simple test from another evaluator test just to verify basic operation. I don't think all the metrics need to be evaluated.",
    "commit": "89d2c3598248d1e445933c024e3f977e4d5a5b2a",
    "createdAt": "2019-06-03T12:52:58Z",
    "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+\n+package org.apache.spark.ml.evaluation\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.ml.param.ParamsSuite\n+import org.apache.spark.ml.util.DefaultReadWriteTest\n+import org.apache.spark.mllib.util.MLlibTestSparkContext\n+\n+class MultilabelClassificationEvaluatorSuite\n+  extends SparkFunSuite with MLlibTestSparkContext with DefaultReadWriteTest {\n+\n+  test(\"params\") {\n+    ParamsSuite.checkParams(new MultilabelClassificationEvaluator)\n+  }\n+\n+  test(\"read/write\") {\n+    val evaluator = new MultilabelClassificationEvaluator()\n+      .setPredictionCol(\"myPrediction\")\n+      .setLabelCol(\"myLabel\")\n+      .setLabel(1.0)\n+      .setMetricName(\"precisionByLabel\")\n+    testDefaultReadWrite(evaluator)\n+  }",
    "line": 61
  }],
  "prId": 24777
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "You can use ~== or relTol here like other tests",
    "commit": "89d2c3598248d1e445933c024e3f977e4d5a5b2a",
    "createdAt": "2019-06-06T14:26:45Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+\n+package org.apache.spark.ml.evaluation\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.ml.param.ParamsSuite\n+import org.apache.spark.ml.util.DefaultReadWriteTest\n+import org.apache.spark.mllib.util.MLlibTestSparkContext\n+\n+class MultilabelClassificationEvaluatorSuite\n+  extends SparkFunSuite with MLlibTestSparkContext with DefaultReadWriteTest {\n+\n+  import testImplicits._\n+\n+  test(\"params\") {\n+    ParamsSuite.checkParams(new MultilabelClassificationEvaluator)\n+  }\n+\n+  test(\"evaluation metrics\") {\n+    val scoreAndLabels = Seq((Array(0.0, 1.0), Array(0.0, 2.0)),\n+      (Array(0.0, 2.0), Array(0.0, 1.0)),\n+      (Array.empty[Double], Array(0.0)),\n+      (Array(2.0), Array(2.0)),\n+      (Array(2.0, 0.0), Array(2.0, 0.0)),\n+      (Array(0.0, 1.0, 2.0), Array(0.0, 1.0)),\n+      (Array(1.0), Array(1.0, 2.0))).toDF(\"prediction\", \"label\")\n+\n+    val evaluator = new MultilabelClassificationEvaluator()\n+      .setMetricName(\"subsetAccuracy\")\n+    assert(math.abs(evaluator.evaluate(scoreAndLabels) - 2.0 / 7) < 0.00001)"
  }],
  "prId": 24777
}]