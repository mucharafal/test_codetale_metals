[{
  "comments": [{
    "author": {
      "login": "holdenk"
    },
    "body": "Would be good to make sure read/write makes sense even when maxN isn't set perhaps?",
    "commit": "43534b2d5daa8cfdbd9aefcad00956851de040b3",
    "createdAt": "2017-11-07T19:34:20Z",
    "diffHunk": "@@ -76,11 +76,32 @@ class NGramSuite extends SparkFunSuite with MLlibTestSparkContext with DefaultRe\n     testNGram(nGram, dataset)\n   }\n \n+  test(\"NGramLength in [2, 4] yields length 2, 3, 4 n-grams\") {\n+    val nGram = new NGram()\n+      .setInputCol(\"inputTokens\")\n+      .setOutputCol(\"nGrams\")\n+      .setN(2)\n+      .setMaxN(4)\n+    val dataset = Seq(NGramTestData(\n+      Array(\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"),\n+      Array(\n+        \"a b\", \"a b c\", \"a b c d\",\n+        \"b c\", \"b c d\", \"b c d e\",\n+        \"c d\", \"c d e\", \"c d e f\",\n+        \"d e\", \"d e f\", \"d e f g\",\n+        \"e f\", \"e f g\",\n+        \"f g\"\n+      )\n+    )).toDF()\n+    testNGram(nGram, dataset)\n+  }\n+\n   test(\"read/write\") {\n     val t = new NGram()\n       .setInputCol(\"myInputCol\")\n       .setOutputCol(\"myOutputCol\")\n       .setN(3)\n+      .setMaxN(5)\n     testDefaultReadWrite(t)"
  }],
  "prId": 19659
}]