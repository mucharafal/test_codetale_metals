[{
  "comments": [{
    "author": {
      "login": "feynmanliang"
    },
    "body": "Why are we using `QueryTest` here instead of `assert`s?\n",
    "commit": "3d8244d4e4bdb6f0af4ce8cb2f6cf579168d4173",
    "createdAt": "2015-08-31T23:09:35Z",
    "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.tuning\n+\n+import org.apache.spark.SparkFunSuite\n+\n+import org.apache.spark.ml.{Estimator, Model}\n+import org.apache.spark.ml.classification.LogisticRegression\n+import org.apache.spark.ml.evaluation.{BinaryClassificationEvaluator, Evaluator}\n+import org.apache.spark.mllib.classification.LogisticRegressionSuite.generateLogisticInput\n+import org.apache.spark.mllib.util.MLlibTestSparkContext\n+import org.apache.spark.sql.{DataFrame, QueryTest, Row, SQLContext}\n+import org.apache.spark.sql.types.StructType\n+import org.scalatest.Matchers._\n+\n+class SlidingWindowCrossValidatorSuite\n+  extends SparkFunSuite with MLlibTestSparkContext {\n+\n+  test(\"sliding window split\") {\n+    val dataset = sqlContext\n+      .createDataFrame(Array[(Int, Long)](\n+        (1, 1L), (2, 3L), (3, 3L), (4, 4L), (5, 5L), (6, 10L), (7, 6L), (8, 5L)))\n+      .toDF(\"data\", \"index\")\n+\n+    val splits = SlidingWindowCrossValidator.split(\n+      dataset, firstCutoffIndex = 2, windowSize = 2, numFolds = 6, indexCol = \"index\")\n+\n+    assert(splits.size == 6)\n+\n+    val training0 = Row(1, 1L) :: Nil\n+    val validation0 = Row(2, 3L) :: Row(3, 3L) :: Nil\n+    QueryTest.checkAnswer(splits(0)._1, training0) shouldBe None",
    "line": 47
  }],
  "prId": 6757
}]