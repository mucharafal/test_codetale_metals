[{
  "comments": [{
    "author": {
      "login": "jaceklaskowski"
    },
    "body": "It's just a column name, but for consistency...`features` (not `feature`) (unless there's a reason for this)\n",
    "commit": "b60c95279c809c59cd08ed1e1b239b3688f50b12",
    "createdAt": "2016-07-03T12:04:02Z",
    "diffHunk": "@@ -57,8 +58,7 @@ class MinMaxScalerSuite extends SparkFunSuite with MLlibTestSparkContext with De\n \n   test(\"MinMaxScaler arguments max must be larger than min\") {\n     withClue(\"arguments max must be larger than min\") {\n-      val dummyDF = spark.createDataFrame(Seq(\n-        (1, Vectors.dense(1.0, 2.0)))).toDF(\"id\", \"feature\")\n+      val dummyDF = Seq((1, Vectors.dense(1.0, 2.0))).toDF(\"id\", \"feature\")"
  }, {
    "author": {
      "login": "yanboliang"
    },
    "body": "+1 @jaceklaskowski \n",
    "commit": "b60c95279c809c59cd08ed1e1b239b3688f50b12",
    "createdAt": "2016-09-25T08:26:12Z",
    "diffHunk": "@@ -57,8 +58,7 @@ class MinMaxScalerSuite extends SparkFunSuite with MLlibTestSparkContext with De\n \n   test(\"MinMaxScaler arguments max must be larger than min\") {\n     withClue(\"arguments max must be larger than min\") {\n-      val dummyDF = spark.createDataFrame(Seq(\n-        (1, Vectors.dense(1.0, 2.0)))).toDF(\"id\", \"feature\")\n+      val dummyDF = Seq((1, Vectors.dense(1.0, 2.0))).toDF(\"id\", \"feature\")"
  }],
  "prId": 14035
}]