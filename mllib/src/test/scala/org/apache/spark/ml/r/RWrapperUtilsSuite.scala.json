[{
  "comments": [{
    "author": {
      "login": "keypointt"
    },
    "body": "Here I used `\"../data/\"`, I'm not sure if there is a better way to do it, something like `$current_directory/data/mllib/sample_libsvm_data.txt`?\n\nAll I found is like this `val data = spark.read.format(\"libsvm\").load(\"data/mllib/sample_libsvm_data.txt\")` https://github.com/apache/spark/blob/master/examples/src/main/scala/org/apache/spark/examples/ml/NaiveBayesExample.scala#L36\n",
    "commit": "8bb370ec0408ae10fe0c1c359b0f1b68066cbf87",
    "createdAt": "2016-08-29T00:47:28Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.r\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.ml.feature.{RFormula, RFormulaModel}\n+import org.apache.spark.mllib.util.MLlibTestSparkContext\n+\n+class RWrapperUtilsSuite extends SparkFunSuite with MLlibTestSparkContext {\n+\n+  test(\"avoid column name conflicting\") {\n+    val rFormula = new RFormula().setFormula(\"label ~ features\")\n+    val data = spark.read.format(\"libsvm\").load(\"../data/mllib/sample_libsvm_data.txt\")"
  }],
  "prId": 13584
}]