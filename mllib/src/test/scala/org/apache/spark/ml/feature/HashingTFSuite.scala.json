[{
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "Use fewer to be faster?  The perfect hash assumption could be relaxed by storing the expected hash in a Map (and adding each hashed element).\n",
    "commit": "9bd2922691f4303bc28d5150fb43e5aa5e81ac9c",
    "createdAt": "2015-05-21T22:17:57Z",
    "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature\n+\n+import org.scalatest.FunSuite\n+\n+import org.apache.spark.ml.attribute.AttributeGroup\n+import org.apache.spark.ml.param.ParamsSuite\n+import org.apache.spark.mllib.linalg.{Vector, Vectors}\n+import org.apache.spark.mllib.util.MLlibTestSparkContext\n+import org.apache.spark.mllib.util.TestingUtils._\n+\n+class HashingTFSuite extends FunSuite with MLlibTestSparkContext {\n+\n+  test(\"params\") {\n+    val hashingTF = new HashingTF\n+    ParamsSuite.checkParams(hashingTF, 3)\n+  }\n+\n+  test(\"hashingTF\") {\n+    val df = sqlContext.createDataFrame(Seq(\n+      (0, \"a a b b c d\".split(\" \").toSeq)\n+    )).toDF(\"id\", \"words\")\n+    val hashingTF = new HashingTF()\n+      .setInputCol(\"words\")\n+      .setOutputCol(\"features\")\n+      .setNumFeatures(1000)"
  }, {
    "author": {
      "login": "mengxr"
    },
    "body": "updated, also fixed a bug\n",
    "commit": "9bd2922691f4303bc28d5150fb43e5aa5e81ac9c",
    "createdAt": "2015-05-21T22:57:19Z",
    "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ml.feature\n+\n+import org.scalatest.FunSuite\n+\n+import org.apache.spark.ml.attribute.AttributeGroup\n+import org.apache.spark.ml.param.ParamsSuite\n+import org.apache.spark.mllib.linalg.{Vector, Vectors}\n+import org.apache.spark.mllib.util.MLlibTestSparkContext\n+import org.apache.spark.mllib.util.TestingUtils._\n+\n+class HashingTFSuite extends FunSuite with MLlibTestSparkContext {\n+\n+  test(\"params\") {\n+    val hashingTF = new HashingTF\n+    ParamsSuite.checkParams(hashingTF, 3)\n+  }\n+\n+  test(\"hashingTF\") {\n+    val df = sqlContext.createDataFrame(Seq(\n+      (0, \"a a b b c d\".split(\" \").toSeq)\n+    )).toDF(\"id\", \"words\")\n+    val hashingTF = new HashingTF()\n+      .setInputCol(\"words\")\n+      .setOutputCol(\"features\")\n+      .setNumFeatures(1000)"
  }],
  "prId": 6308
}]