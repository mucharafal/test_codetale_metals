[{
  "comments": [{
    "author": {
      "login": "Ishiihara"
    },
    "body": "DoubleRDDFuctions is not needed\n",
    "commit": "4d90b46ca4515b93c46bc80f24bc63aa7d98810d",
    "createdAt": "2014-09-26T18:59:03Z",
    "diffHunk": "@@ -0,0 +1,44 @@\n+package org.apache.spark.mllib.regression\n+\n+import org.apache.spark.mllib.tree.configuration.Algo\n+import org.apache.spark.mllib.tree.impurity.Variance\n+import org.apache.spark.mllib.util.{LinearDataGenerator, LocalSparkContext}\n+import org.apache.spark.rdd.{RDD, DoubleRDDFunctions}",
    "line": 6
  }],
  "prId": 2394
}, {
  "comments": [{
    "author": {
      "login": "Ishiihara"
    },
    "body": "use mean() directly. \n",
    "commit": "4d90b46ca4515b93c46bc80f24bc63aa7d98810d",
    "createdAt": "2014-09-26T18:59:28Z",
    "diffHunk": "@@ -0,0 +1,44 @@\n+package org.apache.spark.mllib.regression\n+\n+import org.apache.spark.mllib.tree.configuration.Algo\n+import org.apache.spark.mllib.tree.impurity.Variance\n+import org.apache.spark.mllib.util.{LinearDataGenerator, LocalSparkContext}\n+import org.apache.spark.rdd.{RDD, DoubleRDDFunctions}\n+import org.apache.spark.util.Utils\n+import org.scalatest.FunSuite\n+\n+class StochasticGradientBoostingSuite extends FunSuite with LocalSparkContext {\n+\n+  /**\n+   * Test if we can correctly learn on random data\n+   */\n+  test(\"stochastic gradient boosting\") {\n+    val parsedData = randomLabeledPoints()\n+    val model = StochasticGradientBoosting.train(parsedData, Algo.Regression, Variance, 3)\n+    checkModel(parsedData, model)\n+  }\n+\n+  test(\"test serialization\") {\n+    val parsedData = randomLabeledPoints()\n+    val model = StochasticGradientBoosting.train(parsedData, Algo.Regression, Variance, 3)\n+    checkModel(parsedData, Utils.deserialize[StochasticGradientBoostingModel](Utils.serialize(model)))\n+  }\n+\n+  def checkModel(parsedData: RDD[LabeledPoint], model: RegressionModel) {\n+    val valuesAndPredictions = parsedData.map { point =>\n+      val prediction = model.predict(point.features)\n+      (point.label, prediction)\n+    }\n+    val actualValues = parsedData.map(l => l.label)\n+    val mean = new DoubleRDDFunctions(actualValues).mean()",
    "line": 33
  }],
  "prId": 2394
}, {
  "comments": [{
    "author": {
      "login": "Ishiihara"
    },
    "body": "same as above\n",
    "commit": "4d90b46ca4515b93c46bc80f24bc63aa7d98810d",
    "createdAt": "2014-09-26T19:00:55Z",
    "diffHunk": "@@ -0,0 +1,44 @@\n+package org.apache.spark.mllib.regression\n+\n+import org.apache.spark.mllib.tree.configuration.Algo\n+import org.apache.spark.mllib.tree.impurity.Variance\n+import org.apache.spark.mllib.util.{LinearDataGenerator, LocalSparkContext}\n+import org.apache.spark.rdd.{RDD, DoubleRDDFunctions}\n+import org.apache.spark.util.Utils\n+import org.scalatest.FunSuite\n+\n+class StochasticGradientBoostingSuite extends FunSuite with LocalSparkContext {\n+\n+  /**\n+   * Test if we can correctly learn on random data\n+   */\n+  test(\"stochastic gradient boosting\") {\n+    val parsedData = randomLabeledPoints()\n+    val model = StochasticGradientBoosting.train(parsedData, Algo.Regression, Variance, 3)\n+    checkModel(parsedData, model)\n+  }\n+\n+  test(\"test serialization\") {\n+    val parsedData = randomLabeledPoints()\n+    val model = StochasticGradientBoosting.train(parsedData, Algo.Regression, Variance, 3)\n+    checkModel(parsedData, Utils.deserialize[StochasticGradientBoostingModel](Utils.serialize(model)))\n+  }\n+\n+  def checkModel(parsedData: RDD[LabeledPoint], model: RegressionModel) {\n+    val valuesAndPredictions = parsedData.map { point =>\n+      val prediction = model.predict(point.features)\n+      (point.label, prediction)\n+    }\n+    val actualValues = parsedData.map(l => l.label)\n+    val mean = new DoubleRDDFunctions(actualValues).mean()\n+    val meanError = new DoubleRDDFunctions(actualValues.map(i => math.pow(i - mean, 2))).mean()\n+    val MSE = valuesAndPredictions.map { case (v, p) => math.pow(v - p, 2)}\n+    val error = new DoubleRDDFunctions(MSE).mean()",
    "line": 36
  }],
  "prId": 2394
}]