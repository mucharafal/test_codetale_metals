[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "organize imports into groups: https://cwiki.apache.org/confluence/display/SPARK/Spark+Code+Style+Guide#SparkCodeStyleGuide-Imports\n",
    "commit": "755d358cece5fa09b912416e60ebd7c16f9be05b",
    "createdAt": "2015-01-28T08:42:32Z",
    "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.feature\n+\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.mllib.regression.LabeledPoint\n+import org.apache.spark.mllib.util.MLlibTestSparkContext\n+import org.scalatest.FunSuite"
  }],
  "prId": 1484
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "This may be risky because `sc` is initialized in `beforeAll`. We can either move it to the test closure or initialize it in `beforeAll`\n",
    "commit": "755d358cece5fa09b912416e60ebd7c16f9be05b",
    "createdAt": "2015-01-28T08:42:34Z",
    "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.feature\n+\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.mllib.regression.LabeledPoint\n+import org.apache.spark.mllib.util.MLlibTestSparkContext\n+import org.scalatest.FunSuite\n+\n+class ChiSqSelectorSuite extends FunSuite with MLlibTestSparkContext {\n+\n+  lazy val labeledDiscreteData = sc.parallelize("
  }],
  "prId": 1484
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Remove space after `(`\n",
    "commit": "755d358cece5fa09b912416e60ebd7c16f9be05b",
    "createdAt": "2015-01-28T08:42:35Z",
    "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.feature\n+\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.mllib.regression.LabeledPoint\n+import org.apache.spark.mllib.util.MLlibTestSparkContext\n+import org.scalatest.FunSuite\n+\n+class ChiSqSelectorSuite extends FunSuite with MLlibTestSparkContext {\n+\n+  lazy val labeledDiscreteData = sc.parallelize(\n+    Seq( new LabeledPoint(0.0, Vectors.dense(Array(8.0, 7.0, 0.0))),"
  }],
  "prId": 1484
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Remove space after `(`.\n",
    "commit": "755d358cece5fa09b912416e60ebd7c16f9be05b",
    "createdAt": "2015-01-28T08:42:37Z",
    "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.feature\n+\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.mllib.regression.LabeledPoint\n+import org.apache.spark.mllib.util.MLlibTestSparkContext\n+import org.scalatest.FunSuite\n+\n+class ChiSqSelectorSuite extends FunSuite with MLlibTestSparkContext {\n+\n+  lazy val labeledDiscreteData = sc.parallelize(\n+    Seq( new LabeledPoint(0.0, Vectors.dense(Array(8.0, 7.0, 0.0))),\n+      new LabeledPoint(1.0, Vectors.dense(Array(0.0, 9.0, 6.0))),\n+      new LabeledPoint(1.0, Vectors.dense(Array(0.0, 9.0, 8.0))),\n+      new LabeledPoint(2.0, Vectors.dense(Array(8.0, 9.0, 5.0)))\n+    ), 2)\n+\n+  /*\n+   *  Contingency tables\n+   *  feature0 = {8.0, 0.0}\n+   *  class  0 1 2\n+   *    8.0||1|0|1|\n+   *    0.0||0|2|0|\n+   *\n+   *  feature1 = {7.0, 9.0}\n+   *  class  0 1 2\n+   *    7.0||1|0|0|\n+   *    9.0||0|2|1|\n+   *\n+   *  feature2 = {0.0, 6.0, 8.0, 5.0}\n+   *  class  0 1 2\n+   *    0.0||1|0|0|\n+   *    6.0||0|1|0|\n+   *    8.0||0|1|0|\n+   *    5.0||0|0|1|\n+   *\n+   *  Use chi-squared calculator from Internet\n+   */\n+\n+  test(\"ChiSqSelector transform test\") {\n+    val preFilteredData =\n+      Set( new LabeledPoint(0.0, Vectors.dense(Array(0.0))),"
  }],
  "prId": 1484
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "minor: If we cannot fit into a single line, it is common in Spark to use the following style:\n\n```\n    val filteredData = labeledDiscreteData.map { lp =>\n      new LabeledPoint(lp.label, model.transform(lp.features))\n    }.collect().toSet\n```\n",
    "commit": "755d358cece5fa09b912416e60ebd7c16f9be05b",
    "createdAt": "2015-01-28T08:42:40Z",
    "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.feature\n+\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.mllib.regression.LabeledPoint\n+import org.apache.spark.mllib.util.MLlibTestSparkContext\n+import org.scalatest.FunSuite\n+\n+class ChiSqSelectorSuite extends FunSuite with MLlibTestSparkContext {\n+\n+  lazy val labeledDiscreteData = sc.parallelize(\n+    Seq( new LabeledPoint(0.0, Vectors.dense(Array(8.0, 7.0, 0.0))),\n+      new LabeledPoint(1.0, Vectors.dense(Array(0.0, 9.0, 6.0))),\n+      new LabeledPoint(1.0, Vectors.dense(Array(0.0, 9.0, 8.0))),\n+      new LabeledPoint(2.0, Vectors.dense(Array(8.0, 9.0, 5.0)))\n+    ), 2)\n+\n+  /*\n+   *  Contingency tables\n+   *  feature0 = {8.0, 0.0}\n+   *  class  0 1 2\n+   *    8.0||1|0|1|\n+   *    0.0||0|2|0|\n+   *\n+   *  feature1 = {7.0, 9.0}\n+   *  class  0 1 2\n+   *    7.0||1|0|0|\n+   *    9.0||0|2|1|\n+   *\n+   *  feature2 = {0.0, 6.0, 8.0, 5.0}\n+   *  class  0 1 2\n+   *    0.0||1|0|0|\n+   *    6.0||0|1|0|\n+   *    8.0||0|1|0|\n+   *    5.0||0|0|1|\n+   *\n+   *  Use chi-squared calculator from Internet\n+   */\n+\n+  test(\"ChiSqSelector transform test\") {\n+    val preFilteredData =\n+      Set( new LabeledPoint(0.0, Vectors.dense(Array(0.0))),\n+        new LabeledPoint(1.0, Vectors.dense(Array(6.0))),\n+        new LabeledPoint(1.0, Vectors.dense(Array(8.0))),\n+        new LabeledPoint(2.0, Vectors.dense(Array(5.0)))\n+      )\n+    val model = ChiSqSelector.fit(labeledDiscreteData, 1)\n+    val filteredData = labeledDiscreteData.map(lp =>\n+      new LabeledPoint(lp.label, model.transform(lp.features))).collect().toSet"
  }],
  "prId": 1484
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Remove `new`. `LabeledPoint` is a case class.\n",
    "commit": "755d358cece5fa09b912416e60ebd7c16f9be05b",
    "createdAt": "2015-01-31T07:57:17Z",
    "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.feature\n+\n+import org.scalatest.FunSuite\n+\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.mllib.regression.LabeledPoint\n+import org.apache.spark.mllib.util.MLlibTestSparkContext\n+\n+class ChiSqSelectorSuite extends FunSuite with MLlibTestSparkContext {\n+\n+  /*\n+   *  Contingency tables\n+   *  feature0 = {8.0, 0.0}\n+   *  class  0 1 2\n+   *    8.0||1|0|1|\n+   *    0.0||0|2|0|\n+   *\n+   *  feature1 = {7.0, 9.0}\n+   *  class  0 1 2\n+   *    7.0||1|0|0|\n+   *    9.0||0|2|1|\n+   *\n+   *  feature2 = {0.0, 6.0, 8.0, 5.0}\n+   *  class  0 1 2\n+   *    0.0||1|0|0|\n+   *    6.0||0|1|0|\n+   *    8.0||0|1|0|\n+   *    5.0||0|0|1|\n+   *\n+   *  Use chi-squared calculator from Internet\n+   */\n+\n+  test(\"ChiSqSelector transform test (sparse & dense vector)\") {\n+    val labeledDiscreteData = sc.parallelize(\n+      Seq(new LabeledPoint(0.0, Vectors.sparse(3, Array((0, 8.0), (1, 7.0)))),"
  }],
  "prId": 1484
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "minor: In Spark, we don't make a new line for the ending `)`. \n",
    "commit": "755d358cece5fa09b912416e60ebd7c16f9be05b",
    "createdAt": "2015-01-31T07:57:19Z",
    "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.feature\n+\n+import org.scalatest.FunSuite\n+\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.mllib.regression.LabeledPoint\n+import org.apache.spark.mllib.util.MLlibTestSparkContext\n+\n+class ChiSqSelectorSuite extends FunSuite with MLlibTestSparkContext {\n+\n+  /*\n+   *  Contingency tables\n+   *  feature0 = {8.0, 0.0}\n+   *  class  0 1 2\n+   *    8.0||1|0|1|\n+   *    0.0||0|2|0|\n+   *\n+   *  feature1 = {7.0, 9.0}\n+   *  class  0 1 2\n+   *    7.0||1|0|0|\n+   *    9.0||0|2|1|\n+   *\n+   *  feature2 = {0.0, 6.0, 8.0, 5.0}\n+   *  class  0 1 2\n+   *    0.0||1|0|0|\n+   *    6.0||0|1|0|\n+   *    8.0||0|1|0|\n+   *    5.0||0|0|1|\n+   *\n+   *  Use chi-squared calculator from Internet\n+   */\n+\n+  test(\"ChiSqSelector transform test (sparse & dense vector)\") {\n+    val labeledDiscreteData = sc.parallelize(\n+      Seq(new LabeledPoint(0.0, Vectors.sparse(3, Array((0, 8.0), (1, 7.0)))),\n+        new LabeledPoint(1.0, Vectors.sparse(3, Array((1, 9.0), (2, 6.0)))),\n+        new LabeledPoint(1.0, Vectors.dense(Array(0.0, 9.0, 8.0))),\n+        new LabeledPoint(2.0, Vectors.dense(Array(8.0, 9.0, 5.0)))\n+      ), 2)\n+    val preFilteredData =\n+      Set(new LabeledPoint(0.0, Vectors.dense(Array(0.0))),\n+        new LabeledPoint(1.0, Vectors.dense(Array(6.0))),\n+        new LabeledPoint(1.0, Vectors.dense(Array(8.0))),\n+        new LabeledPoint(2.0, Vectors.dense(Array(5.0)))\n+      )"
  }],
  "prId": 1484
}]