[{
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "Can you please change this test to compare the full topicDistribution for the doc (with the distribution computed using the batch topicDistributions() call), rather than just the most important topic?\n",
    "commit": "0481c44ffef1755ffd471b594e39391a9995f197",
    "createdAt": "2015-11-06T00:50:19Z",
    "diffHunk": "@@ -374,9 +374,14 @@ class LDASuite extends SparkFunSuite with MLlibTestSparkContext {\n       .values\n       .collect()\n \n-    expectedPredictions.zip(actualPredictions).forall { case (expected, actual) =>\n-      expected._1 === actual._1 && (expected._2 ~== actual._2 relTol 1E-3D)\n+    expectedPredictions.zip(actualPredictions).foreach { case (expected, actual) =>\n+      assert(expected._1 === actual._1 && (expected._2 ~== actual._2 relTol 1E-3D))\n     }\n+\n+    val topicsBz = ldaModel.topicDistributions(docs.first())._2.toBreeze.toDenseVector\n+    val singlePrediction = (argmax(topicsBz), max(topicsBz))"
  }, {
    "author": {
      "login": "hhbyyh"
    },
    "body": "Good idea.\n",
    "commit": "0481c44ffef1755ffd471b594e39391a9995f197",
    "createdAt": "2015-11-06T02:54:45Z",
    "diffHunk": "@@ -374,9 +374,14 @@ class LDASuite extends SparkFunSuite with MLlibTestSparkContext {\n       .values\n       .collect()\n \n-    expectedPredictions.zip(actualPredictions).forall { case (expected, actual) =>\n-      expected._1 === actual._1 && (expected._2 ~== actual._2 relTol 1E-3D)\n+    expectedPredictions.zip(actualPredictions).foreach { case (expected, actual) =>\n+      assert(expected._1 === actual._1 && (expected._2 ~== actual._2 relTol 1E-3D))\n     }\n+\n+    val topicsBz = ldaModel.topicDistributions(docs.first())._2.toBreeze.toDenseVector\n+    val singlePrediction = (argmax(topicsBz), max(topicsBz))"
  }],
  "prId": 9484
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "fix indentation\n",
    "commit": "0481c44ffef1755ffd471b594e39391a9995f197",
    "createdAt": "2016-01-06T19:43:32Z",
    "diffHunk": "@@ -374,9 +375,17 @@ class LDASuite extends SparkFunSuite with MLlibTestSparkContext {\n       .values\n       .collect()\n \n-    expectedPredictions.zip(actualPredictions).forall { case (expected, actual) =>\n-      expected._1 === actual._1 && (expected._2 ~== actual._2 relTol 1E-3D)\n+    expectedPredictions.zip(maxTopics).foreach { case (expected, actual) =>\n+      assert(expected._1 === actual._1 && (expected._2 ~== actual._2 relTol 1E-3D))\n     }\n+\n+    docs.collect()\n+      .map(doc => ldaModel.topicDistributions(doc._2))\n+      .zip(actualPredictions.map(_._2).collect())\n+      .foreach { case (single, batch) =>\n+      assert(single ~== batch relTol 1E-3D)"
  }],
  "prId": 9484
}]