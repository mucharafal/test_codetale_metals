[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Use two partitions to test distributed storage.\n",
    "commit": "8e0efba08ab88306ac66706b7ac3b4f84f93d134",
    "createdAt": "2014-04-09T22:26:17Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.preprocessing\n+\n+import org.apache.spark.{SparkContext, SparkConf}\n+import org.apache.spark.mllib.util.LocalSparkContext\n+\n+import org.scalatest.FunSuite\n+import org.scalatest.matchers.ShouldMatchers\n+\n+class OneHotEncoderSuite extends FunSuite with LocalSparkContext with ShouldMatchers {\n+\n+  test(\"one hot encoder\") {\n+    val vecs = Array(\n+      Array(\"marcy playground\", 1.3, \"apple\", 2),\n+      Array(\"pearl jam\", 3.5, \"banana\", 4),\n+      Array(\"nirvana\", 6.7, \"apple\", 3)\n+    )\n+    val categoricalFields = Array(0, 2)\n+    val rdd = sc.parallelize(vecs, 1)"
  }],
  "prId": 304
}]