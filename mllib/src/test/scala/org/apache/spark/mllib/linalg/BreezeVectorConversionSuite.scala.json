[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "To ensure we can convert BSV to SparseVector correctly when there are used elements, we should use\n\nhttps://github.com/scalanlp/breeze/blob/master/math/src/main/scala/breeze/linalg/SparseVector.scala#L54\n\nwith `activeSize < index.length`.\n",
    "commit": "edb2b9de3a29d632a8634b49f14d10a4825a4983",
    "createdAt": "2014-05-07T17:14:43Z",
    "diffHunk": "@@ -55,4 +55,16 @@ class BreezeVectorConversionSuite extends FunSuite {\n     assert(vec.indices.eq(indices), \"should not copy data\")\n     assert(vec.values.eq(values), \"should not copy data\")\n   }\n+\n+  test(\"sparse breeze by vector builder to vector\") {"
  }, {
    "author": {
      "login": "funes"
    },
    "body": "@mengxr There always has <code>activeSize < index.length</code> in Breeze SparseVector. I don't see the problem. Do you mean we also check it in the test case? \nbtw, maybe we could keep a same <code>activeSize</code> in our SparseVector? That would avoid the data copying issue in conversion.\n",
    "commit": "edb2b9de3a29d632a8634b49f14d10a4825a4983",
    "createdAt": "2014-05-08T02:11:20Z",
    "diffHunk": "@@ -55,4 +55,16 @@ class BreezeVectorConversionSuite extends FunSuite {\n     assert(vec.indices.eq(indices), \"should not copy data\")\n     assert(vec.values.eq(values), \"should not copy data\")\n   }\n+\n+  test(\"sparse breeze by vector builder to vector\") {"
  }, {
    "author": {
      "login": "mengxr"
    },
    "body": "The test case tests whether `fromBreeze` can map a `BSV` created by the builder correctly. But the PR handles the case when `index.length > used`. To test it, you should create a `BSV` with `index.length > used` and verify that `fromBreeze` works correctly. Try to construct a `SparseArray` directly and use it to construct a `BSV`.\n",
    "commit": "edb2b9de3a29d632a8634b49f14d10a4825a4983",
    "createdAt": "2014-05-08T03:52:34Z",
    "diffHunk": "@@ -55,4 +55,16 @@ class BreezeVectorConversionSuite extends FunSuite {\n     assert(vec.indices.eq(indices), \"should not copy data\")\n     assert(vec.values.eq(values), \"should not copy data\")\n   }\n+\n+  test(\"sparse breeze by vector builder to vector\") {"
  }, {
    "author": {
      "login": "mengxr"
    },
    "body": "Btw, we don't carry unused data in MLlib because we need to serialize/deserialize the data.\n",
    "commit": "edb2b9de3a29d632a8634b49f14d10a4825a4983",
    "createdAt": "2014-05-08T03:55:03Z",
    "diffHunk": "@@ -55,4 +55,16 @@ class BreezeVectorConversionSuite extends FunSuite {\n     assert(vec.indices.eq(indices), \"should not copy data\")\n     assert(vec.values.eq(values), \"should not copy data\")\n   }\n+\n+  test(\"sparse breeze by vector builder to vector\") {"
  }],
  "prId": 661
}]