[{
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "Instead of testing newModel like this, can you just compare the model data with the original model?\n",
    "commit": "e308913423c4c6019b21bcb05630268bc381fa1a",
    "createdAt": "2015-06-01T18:34:31Z",
    "diffHunk": "@@ -38,6 +38,13 @@ class Word2VecSuite extends FunSuite with MLlibTestSparkContext {\n     assert(syms.length == 2)\n     assert(syms(0)._1 == \"b\")\n     assert(syms(1)._1 == \"c\")\n+\n+    val word2VecMap = model.getVectors\n+    val newModel = new Word2VecModel(word2VecMap)\n+    val newSyms = newModel.findSynonyms(\"a\", 2)"
  }],
  "prId": 5748
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "Could you change this to compare (word, vector) pairs, rather than just the vectors?\n(Also use triple equals `===`)\n",
    "commit": "e308913423c4c6019b21bcb05630268bc381fa1a",
    "createdAt": "2015-07-24T02:50:01Z",
    "diffHunk": "@@ -37,6 +37,12 @@ class Word2VecSuite extends SparkFunSuite with MLlibTestSparkContext {\n     assert(syms.length == 2)\n     assert(syms(0)._1 == \"b\")\n     assert(syms(1)._1 == \"c\")\n+\n+    // Test that model built using Word2Vec, i.e wordVectors and wordIndec\n+    // and a Word2VecMap give the same values.\n+    val word2VecMap = model.getVectors\n+    val newModel = new Word2VecModel(word2VecMap)\n+    assert(newModel.getVectors.mapValues(_.toSeq) == word2VecMap.mapValues(_.toSeq))"
  }, {
    "author": {
      "login": "MechCoder"
    },
    "body": "The (word, vector) pairs are compared actually, (the method getVectors returns a map of words to vectors) sorry if the method `getVectors` sounds misleading, but I did not write that either :p \n",
    "commit": "e308913423c4c6019b21bcb05630268bc381fa1a",
    "createdAt": "2015-07-24T16:34:12Z",
    "diffHunk": "@@ -37,6 +37,12 @@ class Word2VecSuite extends SparkFunSuite with MLlibTestSparkContext {\n     assert(syms.length == 2)\n     assert(syms(0)._1 == \"b\")\n     assert(syms(1)._1 == \"c\")\n+\n+    // Test that model built using Word2Vec, i.e wordVectors and wordIndec\n+    // and a Word2VecMap give the same values.\n+    val word2VecMap = model.getVectors\n+    val newModel = new Word2VecModel(word2VecMap)\n+    assert(newModel.getVectors.mapValues(_.toSeq) == word2VecMap.mapValues(_.toSeq))"
  }, {
    "author": {
      "login": "jkbradley"
    },
    "body": "Right you are\n",
    "commit": "e308913423c4c6019b21bcb05630268bc381fa1a",
    "createdAt": "2015-07-24T17:30:18Z",
    "diffHunk": "@@ -37,6 +37,12 @@ class Word2VecSuite extends SparkFunSuite with MLlibTestSparkContext {\n     assert(syms.length == 2)\n     assert(syms(0)._1 == \"b\")\n     assert(syms(1)._1 == \"c\")\n+\n+    // Test that model built using Word2Vec, i.e wordVectors and wordIndec\n+    // and a Word2VecMap give the same values.\n+    val word2VecMap = model.getVectors\n+    val newModel = new Word2VecModel(word2VecMap)\n+    assert(newModel.getVectors.mapValues(_.toSeq) == word2VecMap.mapValues(_.toSeq))"
  }],
  "prId": 5748
}]