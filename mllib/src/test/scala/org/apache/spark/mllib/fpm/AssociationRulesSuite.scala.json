[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "This seems to fail in Jenkins environment. Did it pass in your local environment, @eugen-prokhorenko ?\r\n```\r\nsbt.ForkMain$ForkError: org.scalatest.exceptions.TestFailedException: Expected 0.6 and 1.0 to be within 1.0E-6 using absolute tolerance.\r\n\tat org.apache.spark.mllib.util.TestingUtils$DoubleWithAlmostEquals.$tilde$eq$eq(TestingUtils.scala:80)\r\n\tat org.apache.spark.mllib.fpm.AssociationRulesSuite.$anonfun$new$4(AssociationRulesSuite.scala:88)\r\n\tat org.apache.spark.mllib.fpm.AssociationRulesSuite.$anonfun$new$4$adapted(AssociationRulesSuite.scala:88)\r\n```\r\n\r\nPlease make this PR pass the Jenkins.",
    "commit": "49a7efb1aca16491931a65e195ea403de290e280",
    "createdAt": "2019-07-18T19:20:49Z",
    "diffHunk": "@@ -84,7 +85,7 @@ class AssociationRulesSuite extends SparkFunSuite with MLlibTestSparkContext {\n        [1] 23\n      */\n     assert(results2.size === 30)\n-    assert(results2.count(rule => math.abs(rule.confidence - 1.0D) < 1e-6) == 23)\n+    assert(results2.count(rule => rule.confidence ~== 1.0D absTol 1e-6) == 23)"
  }, {
    "author": {
      "login": "eugen-prokhorenko"
    },
    "body": "I don't know how I missed it. For usage in place of a predicate there is a less strict version of the operator (`~=` returns `false` without throwing the exception). The patch is underway.",
    "commit": "49a7efb1aca16491931a65e195ea403de290e280",
    "createdAt": "2019-07-18T19:46:23Z",
    "diffHunk": "@@ -84,7 +85,7 @@ class AssociationRulesSuite extends SparkFunSuite with MLlibTestSparkContext {\n        [1] 23\n      */\n     assert(results2.size === 30)\n-    assert(results2.count(rule => math.abs(rule.confidence - 1.0D) < 1e-6) == 23)\n+    assert(results2.count(rule => rule.confidence ~== 1.0D absTol 1e-6) == 23)"
  }, {
    "author": {
      "login": "eugen-prokhorenko"
    },
    "body": "fixed",
    "commit": "49a7efb1aca16491931a65e195ea403de290e280",
    "createdAt": "2019-07-18T19:51:53Z",
    "diffHunk": "@@ -84,7 +85,7 @@ class AssociationRulesSuite extends SparkFunSuite with MLlibTestSparkContext {\n        [1] 23\n      */\n     assert(results2.size === 30)\n-    assert(results2.count(rule => math.abs(rule.confidence - 1.0D) < 1e-6) == 23)\n+    assert(results2.count(rule => rule.confidence ~== 1.0D absTol 1e-6) == 23)"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Thank you for the swift update!",
    "commit": "49a7efb1aca16491931a65e195ea403de290e280",
    "createdAt": "2019-07-18T20:19:47Z",
    "diffHunk": "@@ -84,7 +85,7 @@ class AssociationRulesSuite extends SparkFunSuite with MLlibTestSparkContext {\n        [1] 23\n      */\n     assert(results2.size === 30)\n-    assert(results2.count(rule => math.abs(rule.confidence - 1.0D) < 1e-6) == 23)\n+    assert(results2.count(rule => rule.confidence ~== 1.0D absTol 1e-6) == 23)"
  }],
  "prId": 25191
}]