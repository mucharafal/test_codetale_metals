[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Check out the `~==` operator used in other tests\n",
    "commit": "d88109767c1ffd853b2b03c33c8d722353fd39ce",
    "createdAt": "2014-10-06T09:24:44Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.evaluation\n+\n+import org.scalatest.FunSuite\n+\n+import org.apache.spark.mllib.util.LocalSparkContext\n+\n+class RankingMetricsSuite extends FunSuite with LocalSparkContext {\n+  test(\"Ranking metrics: map, ndcg\") {\n+    val predictionAndLabels = sc.parallelize(\n+      Seq(\n+        (Array[Double](1, 6, 2, 7, 8, 3, 9, 10, 4, 5), Array[Double](1, 2, 3, 4, 5)),\n+        (Array[Double](4, 1, 5, 6, 2, 7, 3, 8, 9, 10), Array[Double](1, 2, 3))\n+      ), 2)\n+    val eps: Double = 1e-5\n+\n+    val metrics = new RankingMetrics(predictionAndLabels)\n+    val precAtK = metrics.precAtK.collect()\n+    val avePrec = metrics.avePrec.collect()\n+    val map = metrics.meanAvePrec\n+    val ndcg = metrics.ndcg.collect()\n+    val aveNdcg = metrics.meanNdcg\n+\n+    assert(math.abs(precAtK(0)(4) - 0.4) < eps)"
  }],
  "prId": 2667
}]