[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Let's simplify the test.\n\n``` scala\nval kMeans = new StrreamingKMeans()\nassert(kMeans.decayFactor === 1.0)\nkMeans.setDecayFactor(2.0)\nassert(kMeans.decayFactor === 2.0)\n```\n\nIt is also useful to include the JIRA number in the test name, in case people wonder why we have this particular test.\n",
    "commit": "2fdd0a35fd38767f824b500de133d9b2b55724fa",
    "createdAt": "2015-05-29T16:31:16Z",
    "diffHunk": "@@ -133,6 +133,19 @@ class StreamingKMeansSuite extends FunSuite with TestSuiteBase {\n     assert(math.abs(c1) ~== 0.8 absTol 0.6)\n   }\n \n+  test(\"test setDecayFactor\") {\n+    val initCenters = Array(Vectors.dense(500.0), Vectors.dense(-500.0))\n+    val weights = Array(5.0, 5.0)\n+\n+    // create model with two clusters\n+    val kMeans = new StreamingKMeans()\n+      .setK(2)\n+      .setDecayFactor(1.0)\n+      .setInitialCenters(initCenters, weights)\n+    val decayFactor = kMeans.decayFactor\n+    assert(kMeans.setDecayFactor(0.0).decayFactor != decayFactor)"
  }],
  "prId": 6497
}]