[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Try to be specific if only few classes are really used.\n",
    "commit": "12d1d59ea8ef0b1c63124da5b0faec325d6268e0",
    "createdAt": "2015-01-26T21:43:20Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.tree\n+\n+import org.apache.spark.mllib.tree.impurity._"
  }],
  "prId": 3975
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "organize imports (https://cwiki.apache.org/confluence/display/SPARK/Spark+Code+Style+Guide#SparkCodeStyleGuide-Imports)\n",
    "commit": "12d1d59ea8ef0b1c63124da5b0faec325d6268e0",
    "createdAt": "2015-01-26T21:43:22Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.tree\n+\n+import org.apache.spark.mllib.tree.impurity._\n+import org.apache.spark.mllib.util.MLlibTestSparkContext\n+import org.scalatest.FunSuite"
  }],
  "prId": 3975
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "This is more common in the Spark codebase:\n\n```\nintercept[IllegalArgumentException] {\n  entropy.update(Array(0.0, 1.0, 2.0), 0, -1, 0.0)\n}\n```\n",
    "commit": "12d1d59ea8ef0b1c63124da5b0faec325d6268e0",
    "createdAt": "2015-01-26T21:43:23Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.mllib.tree\n+\n+import org.apache.spark.mllib.tree.impurity._\n+import org.apache.spark.mllib.util.MLlibTestSparkContext\n+import org.scalatest.FunSuite\n+\n+/**\n+ * Test suite for [[org.apache.spark.mllib.tree.impurity.Entropy]]\n+ */\n+class EntropySuite extends FunSuite with MLlibTestSparkContext{\n+  test(\"Gini impurity does not support negative labels\") {\n+    val entropy = new EntropyAggregator(2)\n+    try {"
  }],
  "prId": 3975
}]