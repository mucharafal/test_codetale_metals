[
  {
    "id" : "bfd407d2-d9c5-4dd6-a29b-a4a626769d68",
    "prId" : 1762,
    "comments" : [
      {
        "id" : "14997670-13b5-4f95-8730-66fbdec15c4f",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Do we need to do this? We are not doing overrides for any of those symbol types.",
        "createdAt" : "2020-05-18T17:00:57Z",
        "updatedAt" : "2020-05-19T13:33:30Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5cd023ad-a0c4-4531-a4b3-a1b8e2667578",
        "parentId" : "14997670-13b5-4f95-8730-66fbdec15c4f",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "```\r\nNot sure if this is a bug or intended behaviour but flagString generates modifiers like protected[package x.y.z] and they need to be stripped manually.\r\n```",
        "createdAt" : "2020-05-18T17:42:14Z",
        "updatedAt" : "2020-05-19T13:33:30Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "443fe4ec-78fa-4bcb-8de4-d1a27ebe8a46",
        "parentId" : "14997670-13b5-4f95-8730-66fbdec15c4f",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "What about `object`, `trait` or `class` ?",
        "createdAt" : "2020-05-18T18:22:31Z",
        "updatedAt" : "2020-05-19T13:33:30Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6c62f5e4-b548-4f46-bdfb-5cd713d37b09",
        "parentId" : "14997670-13b5-4f95-8730-66fbdec15c4f",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "handled already",
        "createdAt" : "2020-05-19T07:31:47Z",
        "updatedAt" : "2020-05-19T13:33:30Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ac0214c5-2893-40f7-bae6-56d1132bbcd8",
        "parentId" : "14997670-13b5-4f95-8730-66fbdec15c4f",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I meant, does those keywords can appear here even? You mentioned `protected[package x.y.z] `, but why would trait appear here?",
        "createdAt" : "2020-05-19T09:07:28Z",
        "updatedAt" : "2020-05-19T13:33:30Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "77edd6a2-c97c-41b1-8eac-a75e3bb627cb",
        "parentId" : "14997670-13b5-4f95-8730-66fbdec15c4f",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "```\r\nscala> trait A {\r\n     |   trait AB {\r\n     |     private[A] val x = 3\r\n     |   }\r\n     | }\r\ntrait A\r\n```",
        "createdAt" : "2020-05-19T11:06:46Z",
        "updatedAt" : "2020-05-19T13:33:30Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2b2ca1dc-b065-4fb7-aa6d-a4af87726efd",
        "parentId" : "14997670-13b5-4f95-8730-66fbdec15c4f",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "We could do:\r\n```\r\n      val _modifs =\r\n        sym.flagString.replace(\r\n          sym.privateWithin.toString(),\r\n          sym.privateWithin.name.toString()\r\n        )\r\n```",
        "createdAt" : "2020-05-19T13:04:09Z",
        "updatedAt" : "2020-05-19T13:33:30Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "154a1cb5e658d16597917aba8f7f326db0ade0f9",
    "line" : null,
    "diffHunk" : "@@ -213,6 +213,16 @@ trait OverrideCompletions { this: MetalsGlobal =>\n         if (sym.isLazy) \"lazy \"\n         else \"\"\n \n+      val _modifs = sym.flagString\n+        .replace(\"package \", \"\")"
  },
  {
    "id" : "47287178-5ad6-4a67-9430-e81487dc03f2",
    "prId" : 1762,
    "comments" : [
      {
        "id" : "a5ddae7a-11be-485f-8c47-8bacf60a5f78",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Will this work if we want to override lazy vals? They cannot be abstract but we can override them and this compilation is also used for non-abstract symbols.",
        "createdAt" : "2020-05-18T17:02:57Z",
        "updatedAt" : "2020-05-19T13:33:30Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "17bd55bb-489f-4591-bcdd-db75823d1b51",
        "parentId" : "a5ddae7a-11be-485f-8c47-8bacf60a5f78",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "lazy should be in modifs already, I wanted to just get rid of lzy and only use modifs but it is used to match against what user typed and matching against modifiers is probably not what user wants.\r\nGonna double check lazy is there :+1:",
        "createdAt" : "2020-05-18T17:45:39Z",
        "updatedAt" : "2020-05-19T13:33:30Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a263877a-23bc-479e-99f5-0c3b9c432338",
        "parentId" : "a5ddae7a-11be-485f-8c47-8bacf60a5f78",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Cool, let's add a test if there is none.",
        "createdAt" : "2020-05-18T18:23:17Z",
        "updatedAt" : "2020-05-19T13:33:30Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "937d8179-eed1-4a4d-ae5a-24a5e6986faa",
        "parentId" : "a5ddae7a-11be-485f-8c47-8bacf60a5f78",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "yes, there is already a test :+1:\r\n```\r\n  checkEditLine(\r\n    \"lazy\",\r\n    \"\"\"|package q\r\n       |abstract class Val {\r\n       |  lazy val hello: Int = 2\r\n       |}\r\n       |class Main extends Val {\r\n       |   ___\r\n       |}\r\n       |\"\"\".stripMargin,\r\n    \"override val hel@@\",\r\n    \"override lazy val hello: Int = ${0:???}\"\r\n  )\r\n```",
        "createdAt" : "2020-05-19T07:35:50Z",
        "updatedAt" : "2020-05-19T13:33:30Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "154a1cb5e658d16597917aba8f7f326db0ade0f9",
    "line" : 22,
    "diffHunk" : "@@ -233,6 +243,8 @@ trait OverrideCompletions { this: MetalsGlobal =>\n       val name: String = Identifier(sym.name)\n \n       val filterText: String = s\"${overrideKeyword}${lzy}${keyword}${name}\"\n+      val insertText: String =\n+        s\"${overrideKeyword}${modifs}${keyword}${name}$signature\""
  }
]