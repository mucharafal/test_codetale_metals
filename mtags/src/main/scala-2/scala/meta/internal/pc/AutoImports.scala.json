[
  {
    "id" : "8df7552f-1775-4d54-bbd0-c8ba1332edbd",
    "prId" : 1686,
    "comments" : [
      {
        "id" : "98355721-ca4b-4bcf-a637-a2464584cb8b",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I wonder if we can make it a bit more efficient than using reverse to avoid creating a new list :thinking: \r\n\r\nMaybe we could create an extension for list in MtagsEnrichments?\r\n\r\nSomething like:\r\n\r\n```scala\r\nimplicit class XtensionList[T](list: List[T]) {\r\n  def collectLast[R](fun: PartialFunction[T, R]): Option[R] = {\r\n    def loop(current: List[T]): Option[R] = {\r\n      current match {\r\n        case Nil => None\r\n        case head :: tl =>\r\n          loop(tl).orElse(fun.lift(head))\r\n      }\r\n    }\r\n    loop(list)\r\n  }\r\n}\r\n```",
        "createdAt" : "2020-05-04T11:07:01Z",
        "updatedAt" : "2020-05-04T12:23:14Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dee1d7ce-db8a-4bff-bd6c-6d70cc7d715a",
        "parentId" : "98355721-ca4b-4bcf-a637-a2464584cb8b",
        "author" : {
          "login" : "colineto",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/11595083?u=8ca622acabbe83799b21d524022c59e0b15cbb44&v=4"
        },
        "body" : "yes sure! could be useful and more readable",
        "createdAt" : "2020-05-04T11:30:56Z",
        "updatedAt" : "2020-05-04T12:23:14Z",
        "lastEditedBy" : {
          "login" : "colineto",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/11595083?u=8ca622acabbe83799b21d524022c59e0b15cbb44&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "9081fff881acb09d141ae7c32835bfdc70a49b87",
    "line" : null,
    "diffHunk" : "@@ -47,7 +47,7 @@ trait AutoImports { this: MetalsGlobal =>\n     findLastVisitedParentTree(pos) match {\n       case Some(_: Import) => None\n       case _ =>\n-        val enclosingPackage = lastVisitedParentTrees.collectFirst {\n+        val enclosingPackage = lastVisitedParentTrees.reverse.collectFirst {"
  }
]