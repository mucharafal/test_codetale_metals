[
  {
    "id" : "5172bca8-9603-433b-9534-947f2460d5cd",
    "prId" : 1656,
    "comments" : [
      {
        "id" : "1b08b9cb-cdcc-4e79-88ef-fa2daddf0897",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "We should still use `dialects.Sbt` for worksheets running in 2.12.x Scala version. You can use `\r\n  BuildInfo.scalaCompilerVersion` to check",
        "createdAt" : "2020-04-22T10:13:39Z",
        "updatedAt" : "2020-04-22T10:15:39Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4742e350-03d7-4318-88f4-85bdb116d614",
        "parentId" : "1b08b9cb-cdcc-4e79-88ef-fa2daddf0897",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I think it's OK to use the 2.13 dialect for all worksheets. The users will still get syntax errors when they save a file that uses 2.13-only syntax with a 2.12 classpath",
        "createdAt" : "2020-04-22T10:27:56Z",
        "updatedAt" : "2020-04-22T10:27:56Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ae43e065-6d9f-40b7-94d2-24eafac0374b",
        "parentId" : "1b08b9cb-cdcc-4e79-88ef-fa2daddf0897",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This dialect only affects the syntax errors that we display on keystroke. It's helpful for setting errors like \"unbalanced parentheses\" or \"missing closing quote\". It's not latency sensitive that the user gets a syntax errors when they for example use literal types (2.13-only syntax)",
        "createdAt" : "2020-04-22T10:29:47Z",
        "updatedAt" : "2020-04-22T10:29:47Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ec6c36c5-9952-4736-bdc6-fa580c39c04c",
        "parentId" : "1b08b9cb-cdcc-4e79-88ef-fa2daddf0897",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Yeah, you're actually right after thinking about it for a while.",
        "createdAt" : "2020-04-22T10:32:53Z",
        "updatedAt" : "2020-04-22T10:32:54Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c0ceaffc3cd4e8daf2b6ee831f6217e07628b0eb",
    "line" : 6,
    "diffHunk" : "@@ -67,7 +67,9 @@ final class Trees {\n     Option(PathIO.extension(Paths.get(fileUri))).collect {\n       case \"scala\" => dialects.Scala\n       case \"sbt\" => dialects.Sbt\n-      case \"sc\" => dialects.Sbt\n+      case \"sc\" =>\n+        dialects.Scala213"
  }
]