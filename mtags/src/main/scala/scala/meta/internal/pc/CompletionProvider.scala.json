[
  {
    "id" : "6ee5c538-55f9-42b2-b7d0-e1a6f404a77e",
    "prId" : 793,
    "comments" : [
      {
        "id" : "f07036dd-4500-4057-a650-eff219ed220c",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "@olafurpg do we want to replace it or just altogether remove?",
        "createdAt" : "2019-06-21T12:56:18Z",
        "updatedAt" : "2019-06-21T13:43:24Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "73a4eccc-7cc7-4d54-b943-80a7ddd7432b",
        "parentId" : "f07036dd-4500-4057-a650-eff219ed220c",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "altogether remove the commit character pattern match",
        "createdAt" : "2019-06-21T13:05:01Z",
        "updatedAt" : "2019-06-21T13:43:24Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3ff99d73-1e74-4736-b436-ef812803f343",
        "parentId" : "f07036dd-4500-4057-a650-eff219ed220c",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Alright, removed it.",
        "createdAt" : "2019-06-21T13:44:35Z",
        "updatedAt" : "2019-06-21T13:44:35Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3a73509dc1e752e8f1bb2fe4a580f9539c93418",
    "line" : null,
    "diffHunk" : "@@ -211,10 +211,8 @@ class CompletionProvider(\n               // The ideal solution would be to not use the `($0)` snippet when the commit character `(` is used,\n               // however language servers can't distinguish what commit character is used. It works as\n               // expected in IntelliJ.\n-            } else if (r.sym.isError) {\n-              () // No commit character\n             } else {\n-              item.setCommitCharacters(List(\".\").asJava)\n+              () // No commit character"
  },
  {
    "id" : "3e12764c-e7b8-4960-960d-73ede5173c7e",
    "prId" : 793,
    "comments" : [
      {
        "id" : "4f45f896-4b19-43c8-8c6a-a2dea972c45e",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "The whole pattern match can be removed, we can add a comment instead\r\n\r\n```scala\r\n// NOTE: We intentionally don't set the commit character because there are valid scenarios where\r\n// the user wants to type a dot '.' character without selecting a completion item.\r\n```",
        "createdAt" : "2019-06-21T12:57:28Z",
        "updatedAt" : "2019-06-21T13:43:24Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e3a73509dc1e752e8f1bb2fe4a580f9539c93418",
    "line" : 18,
    "diffHunk" : "@@ -211,10 +211,8 @@ class CompletionProvider(\n               // The ideal solution would be to not use the `($0)` snippet when the commit character `(` is used,\n               // however language servers can't distinguish what commit character is used. It works as\n               // expected in IntelliJ.\n-            } else if (r.sym.isError) {\n-              () // No commit character\n             } else {\n-              item.setCommitCharacters(List(\".\").asJava)"
  },
  {
    "id" : "a2f20585-c13c-46d9-b073-69ebb8956ff8",
    "prId" : 814,
    "comments" : [
      {
        "id" : "4d778edf-6b3c-4558-b06f-f31434a1116c",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "2 things:\r\n- can you link to the bug?\r\n- can you use the `NOTE(tgodizk): ` notation for consistency with the rest of the codebase?",
        "createdAt" : "2019-07-01T17:18:14Z",
        "updatedAt" : "2019-07-03T16:46:14Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "130ee3b9-2c52-462f-8395-e031cb332c1d",
        "parentId" : "4d778edf-6b3c-4558-b06f-f31434a1116c",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "No one reported the bug yet since ScalaIDE uses a different method for matching names and I don't think there is anybody else that uses PC as much. I plan to fix it though, so don't want to report it, just create a PR.\r\n\r\nI will add the `NOTE`",
        "createdAt" : "2019-07-02T09:55:50Z",
        "updatedAt" : "2019-07-03T16:46:14Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3a2af806-4aea-4317-b949-67399e228353",
        "parentId" : "4d778edf-6b3c-4558-b06f-f31434a1116c",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "This bug: https://github.com/scala/scala/pull/8193 uff...",
        "createdAt" : "2019-07-02T15:43:10Z",
        "updatedAt" : "2019-07-03T16:46:14Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "aa4e0e5c-e054-4e9d-bfca-0a309c66c668",
        "parentId" : "4d778edf-6b3c-4558-b06f-f31434a1116c",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Let us see if I manage to get this merged - then we can just fix when upgrading to `2.12.9` and `2.13.1`",
        "createdAt" : "2019-07-02T15:45:22Z",
        "updatedAt" : "2019-07-03T16:46:14Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ffd7f2556596281adb98a7508c3a50a45c656348",
    "line" : null,
    "diffHunk" : "@@ -369,9 +369,22 @@ class CompletionProvider(\n       val isTypeMember = kind == CompletionListKind.Type\n       params.checkCanceled()\n       val matchingResults = completions.matchingResults { entered => name =>\n-        if (isTypeMember) CompletionFuzzy.matchesSubCharacters(entered, name)\n-        else CompletionFuzzy.matches(entered, name)\n+        /** @tgodzik presentation compiler bug"
  },
  {
    "id" : "4fedda38-d4ee-498c-95ab-5ec27005532b",
    "prId" : 814,
    "comments" : [
      {
        "id" : "f600b18b-e804-4d21-a8b5-6e6ce0557d7b",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "Could you add comments to make those \"$div$div\" more readable? like:\r\n- `// start of a comment: \"//\"`\r\n- `// entire one-line comment`",
        "createdAt" : "2019-07-02T15:54:30Z",
        "updatedAt" : "2019-07-03T16:46:14Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ffd7f2556596281adb98a7508c3a50a45c656348",
    "line" : null,
    "diffHunk" : "@@ -369,9 +369,22 @@ class CompletionProvider(\n       val isTypeMember = kind == CompletionListKind.Type\n       params.checkCanceled()\n       val matchingResults = completions.matchingResults { entered => name =>\n-        if (isTypeMember) CompletionFuzzy.matchesSubCharacters(entered, name)\n-        else CompletionFuzzy.matches(entered, name)\n+        /** NOTE(tgodzik): presentation compiler bug\n+         *  in case we have a comment inline presentation compiler will see it as the name\n+         *  CompletionIssueSuite.issue-813 for more details\n+         */\n+        val enteredFixed = if (entered.startsWith(\"$div$div\")) {"
  },
  {
    "id" : "920221d8-492c-4c03-9d4d-73ddf1d6c456",
    "prId" : 1057,
    "comments" : [
      {
        "id" : "68ce2e68-fe24-4683-a6ca-830899883fbb",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "FYI, `compiler.metalsConfig` already has this info",
        "createdAt" : "2019-11-11T04:05:38Z",
        "updatedAt" : "2019-11-11T14:41:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "df503b6e-9fd7-4cb3-8db3-ea869b4896cb",
        "parentId" : "68ce2e68-fe24-4683-a6ca-830899883fbb",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "ah, makes sense! I even thought about it, but then I forgot 😄 I’ll fix it",
        "createdAt" : "2019-11-11T09:23:04Z",
        "updatedAt" : "2019-11-11T14:41:31Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "03c3f686dd1789f90cd4b4dd18b979160753abb7",
    "line" : null,
    "diffHunk" : "@@ -16,7 +16,8 @@ import org.eclipse.{lsp4j => l}\n \n class CompletionProvider(\n     val compiler: MetalsGlobal,\n-    params: OffsetParams\n+    params: OffsetParams,\n+    clientSupportsSnippets: Boolean"
  },
  {
    "id" : "9a8f2bab-bb52-44ae-abdc-58cb77d53b4e",
    "prId" : 1092,
    "comments" : [
      {
        "id" : "a36619f5-308a-4e10-9d1f-b32c35b0ed69",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "The only thing I wasn't 100% sure on is here do we need to also encode this again before we pass it into `matchesSubCharacters` or `matches` since the `entered.toString`?",
        "createdAt" : "2019-11-29T06:03:31Z",
        "updatedAt" : "2019-11-29T06:05:08Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "31134164-72ec-41af-8880-ce6761e5123e",
        "parentId" : "a36619f5-308a-4e10-9d1f-b32c35b0ed69",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Not sure either, but might be good to encode it again. Situations like: `weird_method@Name`",
        "createdAt" : "2019-11-29T10:26:13Z",
        "updatedAt" : "2019-11-29T10:26:13Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c3c9ade6-059c-4a83-9412-6ed94a4bcaee",
        "parentId" : "a36619f5-308a-4e10-9d1f-b32c35b0ed69",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "We always want to fuzzy match against the decoded name, it would be weird to include `::` if the user types `foo.$colon$col@@`",
        "createdAt" : "2019-11-29T11:34:00Z",
        "updatedAt" : "2019-11-29T11:34:08Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a8c3e9fd388b949abe04c1a0fa6eda1c14cfe9ab",
    "line" : 24,
    "diffHunk" : "@@ -378,18 +378,18 @@ class CompletionProvider(\n       val isTypeMember = kind == CompletionListKind.Type\n       params.checkCanceled()\n       val matchingResults = completions.matchingResults { entered => name =>\n+        val decoded = entered.decoded\n         /** NOTE(tgodzik): presentation compiler bug https://github.com/scala/scala/pull/8193\n          *  should be removed once we drop support for 2.12.8 and 2.13.0\n          *  in case we have a comment presentation compiler will see it as the name\n          *  CompletionIssueSuite.issue-813 for more details\n          */\n         val realEntered =\n-          if (entered.startsWith(\"$div$div\") ||\n-            entered.startsWith(\"$div$times\")) { // start of a comment: \"//\" or \"/*\"\n+          if (decoded.startsWith(\"//\") || decoded.startsWith(\"/*\")) { // start of a comment\n             // we reverse the situation and look for the word from start of complition to either '.' or ' '\n-            val reversedString = entered.toString().reverse\n-            val lastSpace = reversedString.indexOfSlice(\"0200u$\") // reversed $u0020 = ' '\n-            val lastDot = reversedString.indexOfSlice(\"E200u$\") // reversed $u002E = '.'\n+            val reversedString = decoded.reverse\n+            val lastSpace = reversedString.indexOfSlice(\" \")\n+            val lastDot = reversedString.indexOfSlice(\".\")\n             val startOfWord =\n               if (lastSpace < lastDot && lastSpace >= 0) lastSpace else lastDot\n             reversedString.slice(0, startOfWord).reverse"
  },
  {
    "id" : "65796706-d517-4bdc-9d37-b0c94463f068",
    "prId" : 1250,
    "comments" : [
      {
        "id" : "2e571e6f-ebb4-4e71-9ea4-4156a7ca8f54",
        "parentId" : null,
        "author" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "body" : "If we don't close the comment here, the whole code below the `/**` will be commented out, and we cannot traverse the AST (retrieved from a compilation unit) below the comment ",
        "createdAt" : "2020-01-04T12:24:53Z",
        "updatedAt" : "2020-01-13T13:44:04Z",
        "lastEditedBy" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cf8e6070092ac693251e01568b009a7f1bfce601",
    "line" : 8,
    "diffHunk" : "@@ -26,6 +26,12 @@ class CompletionProvider(\n       case '{' if params.text().charAt(i - 1) == '$' =>\n         // Insert potentially missing `}` to avoid \"unclosed literal\" error in String interpolator..\n         CURSOR + \"}\"\n+      case '*'\n+          if params\n+            .text()\n+            .charAt(i - 1) == '*' && params.text().charAt(i - 2) == '/' =>\n+        // Insert potentially missing `*/` to avoid comment out all codes after the \"/**\".\n+        CURSOR + \"*/\""
  },
  {
    "id" : "de7c8001-3d87-409d-897b-9709890bfaaf",
    "prId" : 1284,
    "comments" : [
      {
        "id" : "9ae98909-edd9-4d25-9773-8d8d8361de50",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I believe this is needed a bit further down to get the correct suffixes?",
        "createdAt" : "2020-01-11T07:41:56Z",
        "updatedAt" : "2020-02-06T21:01:53Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4dfaad77-a205-47f9-b570-8250aec6fe32",
        "parentId" : "9ae98909-edd9-4d25-9773-8d8d8361de50",
        "author" : {
          "login" : "kubukoz",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/894884?u=0540420b474e1a76cf318b145d2d0363f66946d0&v=4"
        },
        "body" : "We have access to it already from a val in a trait that's mixed in here (`Completions#clientSupportsSnippets`). I believe it's the same value...",
        "createdAt" : "2020-01-12T14:01:57Z",
        "updatedAt" : "2020-02-06T21:01:53Z",
        "lastEditedBy" : {
          "login" : "kubukoz",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/894884?u=0540420b474e1a76cf318b145d2d0363f66946d0&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7610b1bc-63f6-49aa-8251-cc154bc93a5f",
        "parentId" : "9ae98909-edd9-4d25-9773-8d8d8361de50",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Ahh, I didn't notice that. Cool!",
        "createdAt" : "2020-01-16T18:56:01Z",
        "updatedAt" : "2020-02-06T21:01:53Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a32baa16258c5f96735d5f821a9be075bba9709d",
    "line" : 7,
    "diffHunk" : "@@ -39,44 +39,49 @@ class CompletionProvider(\n       cursor = Some(params.offset),\n       cursorName = cursorName\n     )\n+\n     val pos = unit.position(params.offset)\n     val isSnippet = isSnippetEnabled(pos, params.text())\n-    val clientSupportsSnippets ="
  },
  {
    "id" : "81eaa3c6-01c6-44f3-b311-ee5a8ddc4b56",
    "prId" : 1284,
    "comments" : [
      {
        "id" : "89102079-940b-4f37-86b8-34b2526799d5",
        "parentId" : null,
        "author" : {
          "login" : "kubukoz",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/894884?u=0540420b474e1a76cf318b145d2d0363f66946d0&v=4"
        },
        "body" : "I'm not entirely sure this is accurately coupled with \"the current position is an import\"... could there be any other case in which importPosition is empty?",
        "createdAt" : "2020-01-12T14:04:48Z",
        "updatedAt" : "2020-02-06T21:01:53Z",
        "lastEditedBy" : {
          "login" : "kubukoz",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/894884?u=0540420b474e1a76cf318b145d2d0363f66946d0&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "023a6627-3ba1-48d5-855a-975090a535ef",
        "parentId" : "89102079-940b-4f37-86b8-34b2526799d5",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Judging by the implementation of `autoImportPosition` it only returns `None` for import expressions, but there's nothing in the contract of that method which prevents this implementation detail from changing in the future. It would be better do something custom instead which implements exactly what we want for this purpose https://gist.github.com/olafurpg/d15833f9b519ac286e36a5daad8f07a5",
        "createdAt" : "2020-01-17T00:16:29Z",
        "updatedAt" : "2020-02-06T21:01:53Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f0254c41-36e5-4338-989b-a828fa937fe3",
        "parentId" : "89102079-940b-4f37-86b8-34b2526799d5",
        "author" : {
          "login" : "kubukoz",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/894884?u=0540420b474e1a76cf318b145d2d0363f66946d0&v=4"
        },
        "body" : "I'll give this a try :)",
        "createdAt" : "2020-01-21T22:27:09Z",
        "updatedAt" : "2020-02-06T21:01:53Z",
        "lastEditedBy" : {
          "login" : "kubukoz",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/894884?u=0540420b474e1a76cf318b145d2d0363f66946d0&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a32baa16258c5f96735d5f821a9be075bba9709d",
    "line" : null,
    "diffHunk" : "@@ -144,10 +149,11 @@ class CompletionProvider(\n                 item.setAdditionalTextEdits(edits.asJava)\n                 item.setTextEdit(textEdit(short + suffix))\n             }\n-          case _ =>\n+          case _ if importPosition.isEmpty =>"
  },
  {
    "id" : "b7958291-79cf-4e53-a62e-491d8575b9d4",
    "prId" : 1522,
    "comments" : [
      {
        "id" : "dcd1a7c3-e572-4b0d-9b4b-de28a3c3de36",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "deprecated Use `tags` instead if supported. From LSP docs.\r\n\r\nhttps://microsoft.github.io/language-server-protocol/specifications/specification-current/#textDocument_completion",
        "createdAt" : "2020-03-21T17:57:40Z",
        "updatedAt" : "2020-03-22T12:53:13Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a1f157044a3d540463d614d0851071783f10aed1",
    "line" : 12,
    "diffHunk" : "@@ -216,7 +217,7 @@ class CompletionProvider(\n         item.setKind(completionItemKind(member))\n         item.setSortText(f\"${idx}%05d\")\n         if (member.sym.isDeprecated) {\n-          item.setDeprecated(true)"
  }
]