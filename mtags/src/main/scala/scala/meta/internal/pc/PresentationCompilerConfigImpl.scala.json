[
  {
    "id" : "b4fbc637-475f-4cff-90e9-3f8c477daf44",
    "prId" : 1865,
    "comments" : [
      {
        "id" : "56e53a37-ced9-4942-b8b4-5c026895741a",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "The newline can be remove, no need to have changes in this file.",
        "createdAt" : "2020-07-22T11:16:32Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1ecc085ce9f65d042e2055d19fd627c5d49e7918",
    "line" : null,
    "diffHunk" : "@@ -27,6 +27,7 @@ case class PresentationCompilerConfigImpl(\n     timeoutDelay: Long = 20,\n     timeoutUnit: TimeUnit = TimeUnit.SECONDS\n ) extends PresentationCompilerConfig {\n+"
  },
  {
    "id" : "97b22d51-56a9-41cc-8c49-b0f20df94003",
    "prId" : 1898,
    "comments" : [
      {
        "id" : "1b11e1e5-c812-4ab3-b793-e5f356df1548",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "```suggestion\r\n   * captures and set here. If not, we just resort back to the default that already\r\n```",
        "createdAt" : "2020-07-10T14:51:06Z",
        "updatedAt" : "2020-07-10T20:39:59Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1193b387-6964-4f08-b028-dac9a89d7a14",
        "parentId" : "1b11e1e5-c812-4ab3-b793-e5f356df1548",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Fixed.",
        "createdAt" : "2020-07-10T16:55:39Z",
        "updatedAt" : "2020-07-10T20:39:59Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a09c54df4983c2390e8b249633004d3433d16915",
    "line" : null,
    "diffHunk" : "@@ -34,20 +34,33 @@ case class PresentationCompilerConfigImpl(\n   override def completionCommand: Optional[String] =\n     Optional.ofNullable(_completionCommand.orNull)\n \n+  /**\n+   * Used to update the compiler config after we recieve the InitializationOptions.\n+   * If the user sets a value in the InitializationOptions, then the value will be\n+   * captures and set here. If not, we just resort back tot he default that already"
  },
  {
    "id" : "a1eaa79a-45d6-42e6-8205-07dcc5ea2b25",
    "prId" : 1898,
    "comments" : [
      {
        "id" : "66d42ebf-d3cc-40af-911b-0e4ed8853d1f",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "```suggestion\r\n        .getOrElse(this.isCompletionItemDetailEnabled),\r\n```\r\n?",
        "createdAt" : "2020-07-10T14:52:36Z",
        "updatedAt" : "2020-07-10T20:39:59Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c9721fea-df73-4dcc-89f3-bd5fb686865d",
        "parentId" : "66d42ebf-d3cc-40af-911b-0e4ed8853d1f",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Any reason fold is used in the class?",
        "createdAt" : "2020-07-10T14:52:48Z",
        "updatedAt" : "2020-07-10T20:39:59Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cd1d23f5-e661-4989-b711-a13b75f8ab99",
        "parentId" : "66d42ebf-d3cc-40af-911b-0e4ed8853d1f",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Nope, I actually had something different first that was more involved than this, and then simplified, and then didn't even realize that what I had was just a `getOrElse`. I'll update this.",
        "createdAt" : "2020-07-10T16:56:31Z",
        "updatedAt" : "2020-07-10T20:39:59Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a09c54df4983c2390e8b249633004d3433d16915",
    "line" : null,
    "diffHunk" : "@@ -34,20 +34,33 @@ case class PresentationCompilerConfigImpl(\n   override def completionCommand: Optional[String] =\n     Optional.ofNullable(_completionCommand.orNull)\n \n+  /**\n+   * Used to update the compiler config after we recieve the InitializationOptions.\n+   * If the user sets a value in the InitializationOptions, then the value will be\n+   * captures and set here. If not, we just resort back tot he default that already\n+   * exists.\n+   */\n   def update(\n       options: CompilerInitializationOptions\n   ): PresentationCompilerConfigImpl =\n     copy(\n-      isCompletionItemDetailEnabled =\n-        isCompletionItemDetailEnabled || options.isCompletionItemDetailEnabled,\n+      isCompletionItemDetailEnabled = options.isCompletionItemDetailEnabled\n+        .fold(this.isCompletionItemDetailEnabled)(identity),"
  }
]