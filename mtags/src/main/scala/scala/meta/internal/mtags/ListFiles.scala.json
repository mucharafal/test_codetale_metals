[
  {
    "id" : "f77203a7-b84e-4960-85b3-dc627e010df1",
    "prId" : 763,
    "comments" : [
      {
        "id" : "25d6aafa-2a7b-4fb1-9afb-bea6603a30b8",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "An iterator is not safe to use when walking file trees since we need to properly close the streams provided by NIO. It's better to return a `collection.Seq` like `ArrayBuffer`. It might be worth considering using Haoyi's geny here eventually ðŸ¤” ",
        "createdAt" : "2019-06-16T09:07:18Z",
        "updatedAt" : "2019-06-18T18:13:44Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8b8f8c663ffe7481455869fe747514f96e7e658b",
    "line" : null,
    "diffHunk" : "@@ -1,40 +1,15 @@\n package scala.meta.internal.mtags\n \n-import java.nio.file.FileVisitResult\n-import java.nio.file.Files\n-import java.nio.file.NoSuchFileException\n-import java.nio.file.Path\n-import java.nio.file.SimpleFileVisitor\n-import java.nio.file.attribute.BasicFileAttributes\n import scala.meta.io.AbsolutePath\n+import scala.collection.JavaConverters._\n \n object ListFiles {\n   def foreach(root: AbsolutePath)(fn: AbsolutePath => Unit): Unit = {\n     ListFiles(root).foreach(fn)\n   }\n-  def apply(root: AbsolutePath): Traversable[AbsolutePath] =\n-    new Traversable[AbsolutePath] {\n-      override def foreach[U](fn: AbsolutePath => U): Unit = {\n-        if (root.isFile) fn(root)\n-        else if (root.isDirectory) {\n-          try {\n-            Files.walkFileTree(\n-              root.toNIO,\n-              new SimpleFileVisitor[Path] {\n-                override def visitFile(\n-                    file: Path,\n-                    attrs: BasicFileAttributes\n-                ): FileVisitResult = {\n-                  fn(AbsolutePath(file))\n-                  super.visitFile(file, attrs)\n-                }\n-              }\n-            )\n-          } catch {\n-            case _: NoSuchFileException =>\n-              () // error is reported by the JDK\n-          }\n-        }\n-      }\n+  def apply(root: AbsolutePath): Iterable[AbsolutePath] =\n+    new Iterable[AbsolutePath] {\n+      override def iterator: Iterator[AbsolutePath] ="
  },
  {
    "id" : "337308d9-e930-4646-9ee7-e5a06e9ce370",
    "prId" : 889,
    "comments" : [
      {
        "id" : "3d7f64ea-fea2-4016-9f2b-71bf2502f1ae",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "this should be in an extension method for `AbsolutePath`, like `list` or `children`",
        "createdAt" : "2019-09-02T09:08:48Z",
        "updatedAt" : "2019-09-02T09:44:25Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1d94d47dda18e6abac0dc30392fcff0b3883fd5c",
    "line" : 16,
    "diffHunk" : "@@ -1,50 +1,21 @@\n package scala.meta.internal.mtags\n \n-import java.nio.file.FileVisitResult\n import java.nio.file.Files\n-import java.nio.file.NoSuchFileException\n-import java.nio.file.Path\n-import java.nio.file.SimpleFileVisitor\n-import java.nio.file.attribute.BasicFileAttributes\n import scala.meta.io.AbsolutePath\n-import scala.collection.mutable.ArrayBuffer\n+import scala.collection.mutable\n \n object ListFiles {\n-  def foreach(root: AbsolutePath)(fn: AbsolutePath => Unit): Unit = {\n-    ListFiles(root).foreach(fn)\n+  def apply(root: AbsolutePath): mutable.ArrayBuffer[AbsolutePath] = {"
  },
  {
    "id" : "69bc9a3a-3735-4599-b631-38cd5bd97e3a",
    "prId" : 889,
    "comments" : [
      {
        "id" : "8b604af5-b9a0-46ba-b3a8-9d214d1c0f4f",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "It would be useful to have the couple of methods to use like `map` or `forall` or `exist`. Shouldn't be difficult to do.",
        "createdAt" : "2019-09-02T09:15:44Z",
        "updatedAt" : "2019-09-02T09:22:18Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1d94d47dda18e6abac0dc30392fcff0b3883fd5c",
    "line" : 53,
    "diffHunk" : "@@ -1,50 +1,21 @@\n package scala.meta.internal.mtags\n \n-import java.nio.file.FileVisitResult\n import java.nio.file.Files\n-import java.nio.file.NoSuchFileException\n-import java.nio.file.Path\n-import java.nio.file.SimpleFileVisitor\n-import java.nio.file.attribute.BasicFileAttributes\n import scala.meta.io.AbsolutePath\n-import scala.collection.mutable.ArrayBuffer\n+import scala.collection.mutable\n \n object ListFiles {\n-  def foreach(root: AbsolutePath)(fn: AbsolutePath => Unit): Unit = {\n-    ListFiles(root).foreach(fn)\n+  def apply(root: AbsolutePath): mutable.ArrayBuffer[AbsolutePath] = {\n+    val buf = mutable.ArrayBuffer.empty[AbsolutePath]\n+    foreach(root)(file => buf += file)\n+    buf\n   }\n-\n-  def apply(root: AbsolutePath): ArrayBuffer[AbsolutePath] = {\n-\n-    def runForeach[U](fn: AbsolutePath => U): Unit = {\n-      if (root.isFile) fn(root)\n-      else if (root.isDirectory) {\n-        try {\n-          Files.walkFileTree(\n-            root.toNIO,\n-            new SimpleFileVisitor[Path] {\n-              override def visitFile(\n-                  file: Path,\n-                  attrs: BasicFileAttributes\n-              ): FileVisitResult = {\n-                fn(AbsolutePath(file))\n-                super.visitFile(file, attrs)\n-              }\n-            }\n-          )\n-        } catch {\n-          case _: NoSuchFileException =>\n-            () // error is reported by the JDK\n-        }\n-      }\n-    }\n-\n-    if (root.isFile) {\n-      ArrayBuffer(root)\n-    } else {\n-      val buf = ArrayBuffer.empty[AbsolutePath]\n-      runForeach(file => { buf += file })\n-      buf\n+  def foreach(root: AbsolutePath)(fn: AbsolutePath => Unit): Unit = {"
  },
  {
    "id" : "cb3886b0-7596-47fd-b31f-2829174bb1e6",
    "prId" : 889,
    "comments" : [
      {
        "id" : "87eea824-63e5-44d9-8838-160f2d0e3983",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "The name can be misleading, as it lists both files and directories",
        "createdAt" : "2019-09-02T09:15:58Z",
        "updatedAt" : "2019-09-02T09:44:26Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1d94d47dda18e6abac0dc30392fcff0b3883fd5c",
    "line" : 13,
    "diffHunk" : "@@ -1,50 +1,21 @@\n package scala.meta.internal.mtags\n \n-import java.nio.file.FileVisitResult\n import java.nio.file.Files\n-import java.nio.file.NoSuchFileException\n-import java.nio.file.Path\n-import java.nio.file.SimpleFileVisitor\n-import java.nio.file.attribute.BasicFileAttributes\n import scala.meta.io.AbsolutePath\n-import scala.collection.mutable.ArrayBuffer\n+import scala.collection.mutable\n \n object ListFiles {"
  }
]