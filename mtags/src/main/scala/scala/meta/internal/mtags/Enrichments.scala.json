[
  {
    "id" : "9cad8aa1-1458-475d-ac8f-e7328d231001",
    "prId" : 332,
    "comments" : [
      {
        "id" : "1048dc7d-87c9-40ac-bde6-2ff1bd060ecd",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "why `val`?",
        "createdAt" : "2018-10-13T12:28:11Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f6233f89-d173-493a-a5b2-9c7cab11b118",
        "parentId" : "1048dc7d-87c9-40ac-bde6-2ff1bd060ecd",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "It was `extends AnyVal` before, I removed the `val`",
        "createdAt" : "2018-10-13T13:15:00Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "744ae9f3-d860-4ef9-ab03-a5f3e53297e2",
        "parentId" : "1048dc7d-87c9-40ac-bde6-2ff1bd060ecd",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I have no evidence to support that non-`AnyVal` extension methods are any slower so let's keep the ceremony down instead for now.",
        "createdAt" : "2018-10-13T13:15:43Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "889b282a30a7ddd72b09da4b9328f7779b1cfae9",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,115 @@\n+package scala.meta.internal.mtags\n+\n+import java.nio.charset.StandardCharsets\n+import java.nio.file.Path\n+import scala.meta.inputs.Input\n+import scala.meta.inputs.Position\n+import scala.meta.internal.io.FileIO\n+import scala.meta.internal.semanticdb.Language\n+import scala.meta.internal.semanticdb.Scala.Descriptor\n+import scala.meta.io.AbsolutePath\n+import scala.meta.internal.semanticdb.Scala._\n+import scala.meta.internal.{semanticdb => s}\n+\n+object Enrichments {\n+  implicit class XtensionDescriptorMetals(desc: Descriptor) {\n+    def isCaseClassSynthetic: Boolean = {\n+      desc.isMethod && {\n+        desc.name.value match {\n+          case \"apply\" | \"copy\" => true\n+          case _ => false\n+        }\n+      }\n+    }\n+  }\n+\n+  implicit class XtensionSymbolMetals(symbol: String) {\n+\n+    def toplevel: String = {\n+      if (symbol.isNone) symbol\n+      else if (symbol.isPackage) symbol\n+      else {\n+        val owner = symbol.owner\n+        if (owner.isPackage) symbol\n+        else owner.toplevel\n+      }\n+    }\n+    def isToplevel: Boolean = {\n+      !symbol.isPackage &&\n+      symbol.owner.isPackage\n+    }\n+  }\n+  implicit class XtensionRange(val range: s.Range) {"
  },
  {
    "id" : "43b7c781-b438-49b5-abfa-66940f91ed29",
    "prId" : 332,
    "comments" : [
      {
        "id" : "08a28138-187c-4842-8373-39f3737798c8",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "`.sbt` files are out-of-scope for now, right?",
        "createdAt" : "2018-10-13T12:28:56Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b5faa30e-844c-4721-99a5-82ca7b85faec",
        "parentId" : "08a28138-187c-4842-8373-39f3737798c8",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Yes.",
        "createdAt" : "2018-10-13T13:16:02Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "889b282a30a7ddd72b09da4b9328f7779b1cfae9",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,115 @@\n+package scala.meta.internal.mtags\n+\n+import java.nio.charset.StandardCharsets\n+import java.nio.file.Path\n+import scala.meta.inputs.Input\n+import scala.meta.inputs.Position\n+import scala.meta.internal.io.FileIO\n+import scala.meta.internal.semanticdb.Language\n+import scala.meta.internal.semanticdb.Scala.Descriptor\n+import scala.meta.io.AbsolutePath\n+import scala.meta.internal.semanticdb.Scala._\n+import scala.meta.internal.{semanticdb => s}\n+\n+object Enrichments {\n+  implicit class XtensionDescriptorMetals(desc: Descriptor) {\n+    def isCaseClassSynthetic: Boolean = {\n+      desc.isMethod && {\n+        desc.name.value match {\n+          case \"apply\" | \"copy\" => true\n+          case _ => false\n+        }\n+      }\n+    }\n+  }\n+\n+  implicit class XtensionSymbolMetals(symbol: String) {\n+\n+    def toplevel: String = {\n+      if (symbol.isNone) symbol\n+      else if (symbol.isPackage) symbol\n+      else {\n+        val owner = symbol.owner\n+        if (owner.isPackage) symbol\n+        else owner.toplevel\n+      }\n+    }\n+    def isToplevel: Boolean = {\n+      !symbol.isPackage &&\n+      symbol.owner.isPackage\n+    }\n+  }\n+  implicit class XtensionRange(val range: s.Range) {\n+    def encloses(other: s.Range): Boolean = {\n+      range.startLine <= other.startLine &&\n+      range.endLine >= other.startLine &&\n+      range.startCharacter <= other.startCharacter &&\n+      range.endCharacter > other.startCharacter // end character is non-inclusive\n+    }\n+  }\n+  implicit class XtensionPathMetals(file: Path) {\n+    def toLanguage: Language = {\n+      val filename = file.getFileName.toString\n+      if (filename.endsWith(\".java\")) Language.JAVA\n+      else if (filename.endsWith(\".scala\")) Language.SCALA"
  },
  {
    "id" : "582f5e47-a8f9-4e95-83ef-9b4a2707a538",
    "prId" : 332,
    "comments" : [
      {
        "id" : "e1cc4e7f-b468-4352-af3e-82fc9bdcd306",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Can you re-use the logic from above with `path.toNIO.toLanguage`?",
        "createdAt" : "2018-10-13T12:29:47Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "23964ecc-2f20-4a1f-839c-b789b5fa9d4e",
        "parentId" : "e1cc4e7f-b468-4352-af3e-82fc9bdcd306",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Good idea, yes we can!",
        "createdAt" : "2018-10-13T13:17:05Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "889b282a30a7ddd72b09da4b9328f7779b1cfae9",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,115 @@\n+package scala.meta.internal.mtags\n+\n+import java.nio.charset.StandardCharsets\n+import java.nio.file.Path\n+import scala.meta.inputs.Input\n+import scala.meta.inputs.Position\n+import scala.meta.internal.io.FileIO\n+import scala.meta.internal.semanticdb.Language\n+import scala.meta.internal.semanticdb.Scala.Descriptor\n+import scala.meta.io.AbsolutePath\n+import scala.meta.internal.semanticdb.Scala._\n+import scala.meta.internal.{semanticdb => s}\n+\n+object Enrichments {\n+  implicit class XtensionDescriptorMetals(desc: Descriptor) {\n+    def isCaseClassSynthetic: Boolean = {\n+      desc.isMethod && {\n+        desc.name.value match {\n+          case \"apply\" | \"copy\" => true\n+          case _ => false\n+        }\n+      }\n+    }\n+  }\n+\n+  implicit class XtensionSymbolMetals(symbol: String) {\n+\n+    def toplevel: String = {\n+      if (symbol.isNone) symbol\n+      else if (symbol.isPackage) symbol\n+      else {\n+        val owner = symbol.owner\n+        if (owner.isPackage) symbol\n+        else owner.toplevel\n+      }\n+    }\n+    def isToplevel: Boolean = {\n+      !symbol.isPackage &&\n+      symbol.owner.isPackage\n+    }\n+  }\n+  implicit class XtensionRange(val range: s.Range) {\n+    def encloses(other: s.Range): Boolean = {\n+      range.startLine <= other.startLine &&\n+      range.endLine >= other.startLine &&\n+      range.startCharacter <= other.startCharacter &&\n+      range.endCharacter > other.startCharacter // end character is non-inclusive\n+    }\n+  }\n+  implicit class XtensionPathMetals(file: Path) {\n+    def toLanguage: Language = {\n+      val filename = file.getFileName.toString\n+      if (filename.endsWith(\".java\")) Language.JAVA\n+      else if (filename.endsWith(\".scala\")) Language.SCALA\n+      else Language.UNKNOWN_LANGUAGE\n+    }\n+  }\n+  implicit class XtensionAbsolutePathMetals(file: AbsolutePath) {\n+    def toLanguage: Language = {\n+      file.toNIO.toLanguage\n+    }\n+    def toInput: Input.VirtualFile = {\n+      val text = FileIO.slurp(file, StandardCharsets.UTF_8)\n+      val path = file.toString()\n+      val input = Input.VirtualFile(path, text)\n+      input\n+    }\n+  }\n+\n+  implicit class XtensionInputOffset(input: Input) {\n+    def toLanguage: Language = input match {\n+      case Input.VirtualFile(path, _) =>\n+        if (path.endsWith(\".java\")) Language.JAVA\n+        else if (path.endsWith(\".scala\")) Language.SCALA\n+        else Language.UNKNOWN_LANGUAGE"
  }
]