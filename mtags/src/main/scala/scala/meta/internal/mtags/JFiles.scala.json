[
  {
    "id" : "555ff683-8f4f-4bdf-92a8-4e9bf9bbfe31",
    "prId" : 891,
    "comments" : [
      {
        "id" : "107b37dc-cb93-4bf7-a717-497b3da45876",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "why not use `Files.walk`?\r\n```scala\r\nval stream = Files.walk(path.toNIO)\r\nGenerator.selfClosing(stream.iterator.asScala, () => stream.close())\r\n```",
        "createdAt" : "2019-09-02T12:07:51Z",
        "updatedAt" : "2019-09-02T12:13:33Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ebbc8c05-ec06-4220-8631-e134794fb3ca",
        "parentId" : "107b37dc-cb93-4bf7-a717-497b3da45876",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Wow, this would be much nicer.",
        "createdAt" : "2019-09-02T12:18:44Z",
        "updatedAt" : "2019-09-02T12:18:44Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "85f43840af61b092c74f09c36a0aac523af60fe2",
    "line" : 13,
    "diffHunk" : "@@ -0,0 +1,63 @@\n+package scala.meta.internal.mtags\n+\n+import geny.Generator\n+import scala.meta.io.AbsolutePath\n+import java.nio.file.Files\n+import java.nio.file.SimpleFileVisitor\n+import java.nio.file.Path\n+import java.nio.file.FileVisitResult\n+import java.nio.file.attribute.BasicFileAttributes\n+\n+object JFiles {\n+  def walk(path: AbsolutePath): Generator[AbsolutePath] =\n+    new Generator[AbsolutePath] {"
  },
  {
    "id" : "dfe4903a-a460-43ac-a492-0fb698692f2e",
    "prId" : 891,
    "comments" : [
      {
        "id" : "3fa74b6a-9ba2-405a-857b-e9c671916355",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "Why a custom generator?\r\n```scala\r\nval stream = Files.newDirectoryStream(path.toNIO)\r\nGenerator.selfClosing(stream.iterator.asScala, () => stream.close())\r\n```",
        "createdAt" : "2019-09-02T12:07:55Z",
        "updatedAt" : "2019-09-02T12:13:33Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "85f43840af61b092c74f09c36a0aac523af60fe2",
    "line" : 50,
    "diffHunk" : "@@ -0,0 +1,63 @@\n+package scala.meta.internal.mtags\n+\n+import geny.Generator\n+import scala.meta.io.AbsolutePath\n+import java.nio.file.Files\n+import java.nio.file.SimpleFileVisitor\n+import java.nio.file.Path\n+import java.nio.file.FileVisitResult\n+import java.nio.file.attribute.BasicFileAttributes\n+\n+object JFiles {\n+  def walk(path: AbsolutePath): Generator[AbsolutePath] =\n+    new Generator[AbsolutePath] {\n+      def generate(\n+          handleItem: AbsolutePath => Generator.Action\n+      ): Generator.Action = {\n+        var result: Generator.Action = Generator.Continue\n+        def toResult(action: Generator.Action): FileVisitResult = action match {\n+          case Generator.Continue => FileVisitResult.CONTINUE\n+          case Generator.End =>\n+            result = Generator.End\n+            FileVisitResult.TERMINATE\n+        }\n+        Files.walkFileTree(\n+          path.toNIO,\n+          new SimpleFileVisitor[Path] {\n+            override def preVisitDirectory(\n+                dir: Path,\n+                attrs: BasicFileAttributes\n+            ): FileVisitResult = {\n+              toResult(handleItem(AbsolutePath(dir)))\n+            }\n+            override def visitFile(\n+                file: Path,\n+                attrs: BasicFileAttributes\n+            ): FileVisitResult = {\n+              toResult(handleItem(AbsolutePath(file)))\n+            }\n+          }\n+        )\n+        result\n+      }\n+    }\n+\n+  def list(path: AbsolutePath): Generator[AbsolutePath] =\n+    new Generator[AbsolutePath] {\n+      def generate(\n+          handleItem: AbsolutePath => Generator.Action\n+      ): Generator.Action = {\n+        val ds = Files.newDirectoryStream(path.toNIO)"
  }
]