[
  {
    "id" : "d1371e7e-6a26-4baa-9c03-19cdb89311a3",
    "prId" : 621,
    "comments" : [
      {
        "id" : "0747f916-9337-4db5-a3da-261f58b7aaad",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Can we introduce an overload instead `enclosesIncludingLastCharacter`?",
        "createdAt" : "2019-04-02T14:26:39Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c7c00063-6d61-4b00-a6a9-9a0ba15f75a8",
        "parentId" : "0747f916-9337-4db5-a3da-261f58b7aaad",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "The problem is that that flag is introduced in a couple of methods on the way and not used directly in HighlightingProvider, so an additional metod doesn't help I think.",
        "createdAt" : "2019-04-04T11:06:57Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0e2db309-cb74-4971-8958-fbf728e643b1",
        "parentId" : "0747f916-9337-4db5-a3da-261f58b7aaad",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Sounds good 👍 ",
        "createdAt" : "2019-04-05T07:39:09Z",
        "updatedAt" : "2019-04-05T09:13:03Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6f03d2264f9c4e8e28d2e258ca99d24915c82e17",
    "line" : 5,
    "diffHunk" : "@@ -202,11 +202,16 @@ trait MtagsEnrichments {\n       val end = new l.Position(range.endLine, range.endCharacter)\n       new l.Range(start, end)\n     }\n-    def encloses(other: l.Position): Boolean = {\n+    def encloses("
  },
  {
    "id" : "b226eccc-d5e9-45cf-8fb6-ba1776dc0089",
    "prId" : 632,
    "comments" : [
      {
        "id" : "7d062f95-50c5-495f-8745-786d92c16420",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "👍 ",
        "createdAt" : "2019-04-04T10:14:37Z",
        "updatedAt" : "2019-04-10T09:48:54Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "79793f51fa23f5e83e6e9dc8e633ae708eeb17a1",
    "line" : null,
    "diffHunk" : "@@ -286,5 +287,13 @@ trait MtagsEnrichments {\n         new l.Position(pos.endLine, pos.endColumn)\n       )\n     }\n+\n+    def toLSP(kind: String): FoldingRange = {"
  },
  {
    "id" : "6a32c77b-1d9e-43cd-949a-d5db68c09b89",
    "prId" : 632,
    "comments" : [
      {
        "id" : "882dae01-504c-4cc5-8f7b-80b80e341443",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Let's inline this since it's only used in one place",
        "createdAt" : "2019-04-10T08:54:48Z",
        "updatedAt" : "2019-04-10T09:48:55Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "79793f51fa23f5e83e6e9dc8e633ae708eeb17a1",
    "line" : null,
    "diffHunk" : "@@ -291,5 +292,12 @@ trait MtagsEnrichments {\n         new l.Position(pos.endLine, pos.endColumn)\n       )\n     }\n+\n+    def toLSPFoldingRange: FoldingRange = {"
  },
  {
    "id" : "a5104aac-058b-4875-b051-16ca13ef0954",
    "prId" : 862,
    "comments" : [
      {
        "id" : "86903fbc-6518-4dea-bb41-d9bfba358028",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "`toLanguage == Language.SCALA`",
        "createdAt" : "2019-08-12T16:26:58Z",
        "updatedAt" : "2019-08-13T18:51:32Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "909e79755bb7dc96fad63232599fe13092152914",
    "line" : null,
    "diffHunk" : "@@ -91,6 +91,12 @@ trait MtagsEnrichments {\n         case _ => false\n       }\n     }\n+    def isScala: Boolean = {\n+      toLanguage match {"
  },
  {
    "id" : "62efb608-731f-4909-9a3f-15a12d5a23d7",
    "prId" : 938,
    "comments" : [
      {
        "id" : "b0e51355-212d-4e74-a5c9-0960dbe25c70",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Looks like there's an implicit conversion going on here and the stream won't be closed. I would use the `Geny.selfClosing` constructor to ensure that it's properly closed.",
        "createdAt" : "2019-09-23T09:03:28Z",
        "updatedAt" : "2019-09-23T11:40:58Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fb7be4aa-9a6c-4fb5-9887-53c9cee7f4a3",
        "parentId" : "b0e51355-212d-4e74-a5c9-0960dbe25c70",
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "streams don't have an implicit conversion with `asScala` - that is [my own addition](https://github.com/scalameta/metals/pull/938/files#diff-ef3c89457c7ae83653bcdf6c20438e96R369). \r\nIt tries to mimick the scala conversion to avoid any surprises on the callee site (like: \"what was the name of that special method for streams?\") - I want it to be as seamless as possible.",
        "createdAt" : "2019-09-23T09:46:29Z",
        "updatedAt" : "2019-09-23T11:40:58Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "afc4f4f6-8f1f-4230-8b16-7e7f3290e813",
        "parentId" : "b0e51355-212d-4e74-a5c9-0960dbe25c70",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Aha, I'm sorry I didn't see that one. Looks great 👍 ",
        "createdAt" : "2019-09-23T12:24:03Z",
        "updatedAt" : "2019-09-23T12:24:03Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "78875e99b5881f6265a23071e7aeb492cae03fa5",
    "line" : null,
    "diffHunk" : "@@ -359,4 +363,31 @@ trait MtagsEnrichments {\n     def isVar: Boolean = (properties & p.VAR.value) != 0\n     def isVal: Boolean = (properties & p.VAL.value) != 0\n   }\n+\n+  implicit class XtensionStream[A](stream: java.util.stream.Stream[A]) {\n+    import scala.collection.JavaConverters._\n+    def asScala: Generator[A] = {\n+      Generator.selfClosing((stream.iterator.asScala, () => stream.close()))\n+    }\n+  }\n+\n+  implicit class XtensionAbsolutePath(path: AbsolutePath) {\n+    def parent: AbsolutePath = {\n+      AbsolutePath(path.toNIO.getParent)\n+    }\n+\n+    def exists: Boolean = {\n+      Files.exists(path.toNIO)\n+    }\n+\n+    def walk: Generator[AbsolutePath] = {\n+      if (exists) Files.walk(path.toNIO).asScala.map(AbsolutePath(_))"
  },
  {
    "id" : "1bd8343e-e5dd-47c9-b6f8-1d31a046b8f0",
    "prId" : 938,
    "comments" : [
      {
        "id" : "7ef3eef5-7277-4390-bd8f-4d0ecac35984",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "I am not sure about the name. While `walk` is sometimes used in this context, I feel it does not carry the information of what is actually done. I was thinking about something with the `hierarchy` in the name, like `traverseHierarchy`, `toTree`, maybe even the closest-to-original `walkTree` ? What do you think?",
        "createdAt" : "2019-09-23T09:55:04Z",
        "updatedAt" : "2019-09-23T11:40:58Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "81168954-d611-4f13-bd6c-e1b3c97a988f",
        "parentId" : "7ef3eef5-7277-4390-bd8f-4d0ecac35984",
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "Hmm, how about `list` and `listRecursive`? ",
        "createdAt" : "2019-09-23T10:16:42Z",
        "updatedAt" : "2019-09-23T11:40:58Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "78875e99b5881f6265a23071e7aeb492cae03fa5",
    "line" : null,
    "diffHunk" : "@@ -359,4 +363,32 @@ trait MtagsEnrichments {\n     def isVar: Boolean = (properties & p.VAR.value) != 0\n     def isVal: Boolean = (properties & p.VAL.value) != 0\n   }\n+\n+  implicit class XtensionStream[A](stream: java.util.stream.Stream[A]) {\n+    import scala.collection.JavaConverters._\n+    def asScala: Generator[A] = {\n+      Generator.selfClosing((stream.iterator.asScala, () => stream.close()))\n+    }\n+  }\n+\n+  implicit class XtensionAbsolutePath(path: AbsolutePath) {\n+    def parent: AbsolutePath = {\n+      AbsolutePath(path.toNIO.getParent)\n+    }\n+\n+    def exists: Boolean = {\n+      Files.exists(path.toNIO)\n+    }\n+\n+    def iterate: Generator[AbsolutePath] = {"
  },
  {
    "id" : "bf8166bd-095b-4f0a-9bb8-0d15bc28f2a4",
    "prId" : 1041,
    "comments" : [
      {
        "id" : "319e0ca2-3fc9-4f9b-ba97-daa81cb56f34",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I'm a bit confused in general on whether this feature supports `.sc` or `.worksheet.sc`.",
        "createdAt" : "2019-11-04T12:09:30Z",
        "updatedAt" : "2019-11-09T20:01:12Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "56a9774e-6cc2-46af-b062-6dc55db2d652",
        "parentId" : "319e0ca2-3fc9-4f9b-ba97-daa81cb56f34",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Completions work in `*.sc` files even if they are not `*.worksheet.sc`. The \"eval on file save and display decorations\" feature only works for `*.worksheet.sc`",
        "createdAt" : "2019-11-06T06:34:47Z",
        "updatedAt" : "2019-11-09T20:01:12Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ab1194d4-49ef-4323-8100-9237051983b8",
        "parentId" : "319e0ca2-3fc9-4f9b-ba97-daa81cb56f34",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "The new `isScalaFilename` method name could make it clearer\r\n\r\n* \"scala filename\": completions/hover/... work\r\n* \"scala worksheet\": eval with mdoc and display decorations",
        "createdAt" : "2019-11-06T06:35:29Z",
        "updatedAt" : "2019-11-09T20:01:12Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a2902a65a77773398f8ac710483906215a06bcf8",
    "line" : 9,
    "diffHunk" : "@@ -98,6 +98,15 @@ trait MtagsEnrichments {\n         case _ => false\n       }\n     }\n+    def isWorksheet: Boolean = {\n+      filename.endsWith(\".worksheet.sc\")\n+    }\n+    def isScalaOrScalaScript: Boolean = {\n+      extension match {\n+        case \"scala\" | \"sc\" => true"
  },
  {
    "id" : "392c9633-c699-4ee4-b891-cb82a03c9c62",
    "prId" : 1079,
    "comments" : [
      {
        "id" : "6e5f3f96-e245-444c-8ac2-cd63d04689b2",
        "parentId" : null,
        "author" : {
          "login" : "cb372",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/106760?v=4"
        },
        "body" : "Unless I'm misunderstanding how ranges work, I think this logic was incorrect for multi-line ranges (e.g. a range from char 10 of line 10 to char 20 of line 12 should enclose the position at char 5 of line 11) so I rewrote it. \r\n\r\nI noticed the same mistake in a few other `encloses` methods in this file and in `MetalsEnrichment.scala`. I can fix those too, but probably better to do that in a separate PR.",
        "createdAt" : "2019-12-29T21:33:44Z",
        "updatedAt" : "2019-12-31T17:11:21Z",
        "lastEditedBy" : {
          "login" : "cb372",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/106760?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "89aca41816462ba01562e42601693aeb33124189",
    "line" : 3,
    "diffHunk" : "@@ -311,11 +311,18 @@ trait MtagsEnrichments {\n         range.getEnd.getCharacter\n       )\n     def encloses(position: l.Position): Boolean = {"
  },
  {
    "id" : "e9dfb1f2-24a8-4b78-8bf2-24e2c56a5834",
    "prId" : 1145,
    "comments" : [
      {
        "id" : "54392a6c-69a3-4fa4-963b-95e2f9567fdb",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "so `foo-scala` would be a source directory but `scala-2.10` wouldn't?",
        "createdAt" : "2019-12-05T08:32:22Z",
        "updatedAt" : "2019-12-05T11:14:30Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c8d74299-7266-484e-b5ca-21d40c2c7267",
        "parentId" : "54392a6c-69a3-4fa4-963b-95e2f9567fdb",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Removed this method.",
        "createdAt" : "2019-12-05T10:31:26Z",
        "updatedAt" : "2019-12-05T11:14:30Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c032fa899f1747d53cf2025b6e1cf03227b19980",
    "line" : null,
    "diffHunk" : "@@ -57,6 +57,17 @@ trait MtagsEnrichments {\n     else Language.UNKNOWN_LANGUAGE\n   }\n   implicit class XtensionPathMetals(file: Path) {\n+    def enclosingSourceDirectory: Option[Path] = {\n+      def loop(p: Path): Option[Path] =\n+        if (p.endsWith(\"java\") || p.endsWith(\"scala\")) Some(p)"
  },
  {
    "id" : "6370abc8-4909-4b0c-ba5a-1ab39c36f4ed",
    "prId" : 1145,
    "comments" : [
      {
        "id" : "f281317b-a85c-4f1e-8a63-00fe6d1bda02",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "Could be `Option(p.getParent()).flatMap(loop)`",
        "createdAt" : "2019-12-05T08:33:43Z",
        "updatedAt" : "2019-12-05T11:14:30Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f4648ff7-4d60-422c-9ddf-2087fd1281d5",
        "parentId" : "f281317b-a85c-4f1e-8a63-00fe6d1bda02",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I'm guessing it's a pattern match to make it tail recursive so it runs like a normal while loop.\r\n\r\nEither way, this method is removed. ",
        "createdAt" : "2019-12-05T10:33:09Z",
        "updatedAt" : "2019-12-05T11:14:30Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c032fa899f1747d53cf2025b6e1cf03227b19980",
    "line" : null,
    "diffHunk" : "@@ -57,6 +57,17 @@ trait MtagsEnrichments {\n     else Language.UNKNOWN_LANGUAGE\n   }\n   implicit class XtensionPathMetals(file: Path) {\n+    def enclosingSourceDirectory: Option[Path] = {\n+      def loop(p: Path): Option[Path] =\n+        if (p.endsWith(\"java\") || p.endsWith(\"scala\")) Some(p)\n+        else {\n+          Option(p.getParent()) match {\n+            case None => None\n+            case Some(parent) => loop(parent)\n+          }"
  },
  {
    "id" : "bf1fc7b2-520d-45da-97b2-c83b8d64debe",
    "prId" : 1145,
    "comments" : [
      {
        "id" : "3e7f2992-954f-49bd-adc0-f6b35485f0fd",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "should it be `endsWith`? The [documentation](https://www.pantsbuild.org/build_files.html#build-files_1) calls them `BUILD.*` and says:\r\n> they can also be named BUILD.ext, with any extension\r\n\r\nFor examle, https://github.com/pantsbuild/pants contains `BUILD` and `BUILD.tools`, https://github.com/pantsbuild/intellij-pants-plugin contains `BUILD.tools` and https://github.com/foursquare/fsqio contains `BUILD.opensource` and `BUILD.tools`",
        "createdAt" : "2019-12-05T08:39:56Z",
        "updatedAt" : "2019-12-05T11:14:30Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c25bd81f-d8a7-4a64-bebe-c02c82e54c90",
        "parentId" : "3e7f2992-954f-49bd-adc0-f6b35485f0fd",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Good catch, changed to `filename.startsWith(\"BUILD\")`. ",
        "createdAt" : "2019-12-05T10:53:50Z",
        "updatedAt" : "2019-12-05T11:14:30Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c032fa899f1747d53cf2025b6e1cf03227b19980",
    "line" : null,
    "diffHunk" : "@@ -99,12 +110,17 @@ trait MtagsEnrichments {\n         case None =>\n           file.toURI.toString\n       }\n+    def isBuild: Boolean =\n+      file.toNIO.endsWith(\"BUILD\")"
  },
  {
    "id" : "7238e702-659f-4765-aaa3-6f36258f07c4",
    "prId" : 1145,
    "comments" : [
      {
        "id" : "7b0757e8-1f97-4e6d-8b00-db82198930c3",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "`== BUILD` ?",
        "createdAt" : "2019-12-05T10:47:48Z",
        "updatedAt" : "2019-12-05T11:14:30Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d4ad71bb-df26-4a3a-b26d-674b763db15c",
        "parentId" : "7b0757e8-1f97-4e6d-8b00-db82198930c3",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Nevermind, found Marek's comment :sweat_smile: ",
        "createdAt" : "2019-12-05T10:55:33Z",
        "updatedAt" : "2019-12-05T11:14:30Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c032fa899f1747d53cf2025b6e1cf03227b19980",
    "line" : 5,
    "diffHunk" : "@@ -99,12 +99,17 @@ trait MtagsEnrichments {\n         case None =>\n           file.toURI.toString\n       }\n+    def isBuild: Boolean =\n+      file.filename.startsWith(\"BUILD\")"
  }
]