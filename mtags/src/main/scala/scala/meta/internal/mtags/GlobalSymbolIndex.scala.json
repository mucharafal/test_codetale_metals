[
  {
    "id" : "9639b5e8-bf36-44c8-b371-9e63a50ec565",
    "prId" : 332,
    "comments" : [
      {
        "id" : "8ae9f2d5-4113-42d9-810e-1630ac93e229",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "what do you mean by `client` here?",
        "createdAt" : "2018-10-13T12:30:45Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5bd5833d-8698-4649-a5a9-ee781651b892",
        "parentId" : "8ae9f2d5-4113-42d9-810e-1630ac93e229",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "clarified with \r\n\r\n>  the exact position of the definition. Computing the range position of the\r\n>    definition is not handled by this method, it is left for the user and can\r\n>    be done using the mtags module.",
        "createdAt" : "2018-10-13T13:34:48Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "889b282a30a7ddd72b09da4b9328f7779b1cfae9",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,84 @@\n+package scala.meta.internal.mtags\n+\n+import scala.meta.io.AbsolutePath\n+\n+/**\n+ * An index to lookup the definition of global symbols.\n+ *\n+ * Only indexes plain Scala and Java source files, no compilation needed.\n+ */\n+trait GlobalSymbolIndex {\n+\n+  /**\n+   * Lookup the definition of a global symbol.\n+   *\n+   * Returns the path of the file that defines the symbol but does not include\n+   * the exact position of the definition. Computing the range position of the\n+   * definition is left for the client and can be done using the mtags module."
  },
  {
    "id" : "b5c73dbb-d5fe-46f6-8a5a-2bea19b12bc3",
    "prId" : 332,
    "comments" : [
      {
        "id" : "643d1630-bae4-4b89-9a0c-e1b8a131fd91",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "This signature means the method swallows errors. Could it be useful to report them back to the caller in case something goes wrong (e.g., the file doesn't exist, or it's not a Scala/Java file?). The caller can decide to discard it anyway.",
        "createdAt" : "2018-10-13T12:33:03Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8ef0c465-009d-4455-a09b-92eb984a164c",
        "parentId" : "643d1630-bae4-4b89-9a0c-e1b8a131fd91",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Currently this throws an exception for errors like tokenization failures. I'm not sure yet what the best error handling method so I'd prefer to refine it down the road once we have a clearer picture of how it will be used in the language server. Maybe the underlying implementation can accept a `Reporter` ðŸ¤” ",
        "createdAt" : "2018-10-13T13:37:23Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "767ff740-8b6c-4b32-87ba-99686b7c3f1c",
        "parentId" : "643d1630-bae4-4b89-9a0c-e1b8a131fd91",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Ok, let's wait and see. I was thinking of something like \"Either\" or \"Try\" here, nothing fancy but still better than Unit.",
        "createdAt" : "2018-10-13T15:13:25Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "889b282a30a7ddd72b09da4b9328f7779b1cfae9",
    "line" : 53,
    "diffHunk" : "@@ -0,0 +1,84 @@\n+package scala.meta.internal.mtags\n+\n+import scala.meta.io.AbsolutePath\n+\n+/**\n+ * An index to lookup the definition of global symbols.\n+ *\n+ * Only indexes plain Scala and Java source files, no compilation needed.\n+ */\n+trait GlobalSymbolIndex {\n+\n+  /**\n+   * Lookup the definition of a global symbol.\n+   *\n+   * Returns the path of the file that defines the symbol but does not include\n+   * the exact position of the definition. Computing the range position of the\n+   * definition is left for the client and can be done using the mtags module.\n+   *\n+   * @param symbol a global SemanticDB symbol. For comprehensive documentation\n+   *               of how a symbol is formatted consule the specification:\n+   *               https://scalameta.org/docs/semanticdb/specification.html#symbol\n+   *\n+   *  Examples: {{{\n+   *    \"scala/Option#\"                 // Option class\n+   *    \"scala/Option.\"                 // Option companion object\n+   *    \"scala/Option#.get().\"          // `get` method for Option\n+   *    \"scala/Predef.String#\"          // String type alias in Predef\n+   *    \"java/lang/String#format(+1).\"  // Static `format` method for strings\n+   *    \"java/util/Map#Entry#\"          // Static inner interface.\n+   *  }}}\n+   * @return the definition of the symbol, if any.\n+   */\n+  def definition(symbol: String): Option[SymbolDefinition]\n+\n+  /**\n+   * Add an individual Java or Scala source file to the index.\n+   *\n+   * @param file the absolute path to the source file, can be a path\n+   *            on disk or inside of a jar/zip file.\n+   * @param sourceDirectory the enclosing project source directory if\n+   *                        file is on disk, used to relativize `file`.\n+   *                        Can be None if file is inside a zip file\n+   *                        assuming the file path is already relativized\n+   *                        by that point.\n+   */\n+  def addSourceFile(\n+      file: AbsolutePath,\n+      sourceDirectory: Option[AbsolutePath]\n+  ): Unit"
  },
  {
    "id" : "4093dac5-d043-4c22-afea-fe082c9fb5e9",
    "prId" : 332,
    "comments" : [
      {
        "id" : "e18a3fc4-e8ad-48d5-92cc-11f7440ce360",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Much <3 for the comments in this file",
        "createdAt" : "2018-10-13T12:33:26Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "889b282a30a7ddd72b09da4b9328f7779b1cfae9",
    "line" : 10,
    "diffHunk" : "@@ -0,0 +1,84 @@\n+package scala.meta.internal.mtags\n+\n+import scala.meta.io.AbsolutePath\n+\n+/**\n+ * An index to lookup the definition of global symbols.\n+ *\n+ * Only indexes plain Scala and Java source files, no compilation needed.\n+ */\n+trait GlobalSymbolIndex {"
  },
  {
    "id" : "fd3cd04a-fd45-4ecd-960c-a1c6a5469915",
    "prId" : 332,
    "comments" : [
      {
        "id" : "a23c7f36-2d67-47cc-b3b0-4badcf02de2e",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Same comment as above about returning `Unit` vs a more expressive error-aware type",
        "createdAt" : "2018-10-13T12:34:12Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4974bcb6-efd0-4eec-b455-d4a2c315e05b",
        "parentId" : "a23c7f36-2d67-47cc-b3b0-4badcf02de2e",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "It's a good question but I'm still not sure what the best solution  is",
        "createdAt" : "2018-10-13T13:37:43Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "889b282a30a7ddd72b09da4b9328f7779b1cfae9",
    "line" : 83,
    "diffHunk" : "@@ -0,0 +1,84 @@\n+package scala.meta.internal.mtags\n+\n+import scala.meta.io.AbsolutePath\n+\n+/**\n+ * An index to lookup the definition of global symbols.\n+ *\n+ * Only indexes plain Scala and Java source files, no compilation needed.\n+ */\n+trait GlobalSymbolIndex {\n+\n+  /**\n+   * Lookup the definition of a global symbol.\n+   *\n+   * Returns the path of the file that defines the symbol but does not include\n+   * the exact position of the definition. Computing the range position of the\n+   * definition is left for the client and can be done using the mtags module.\n+   *\n+   * @param symbol a global SemanticDB symbol. For comprehensive documentation\n+   *               of how a symbol is formatted consule the specification:\n+   *               https://scalameta.org/docs/semanticdb/specification.html#symbol\n+   *\n+   *  Examples: {{{\n+   *    \"scala/Option#\"                 // Option class\n+   *    \"scala/Option.\"                 // Option companion object\n+   *    \"scala/Option#.get().\"          // `get` method for Option\n+   *    \"scala/Predef.String#\"          // String type alias in Predef\n+   *    \"java/lang/String#format(+1).\"  // Static `format` method for strings\n+   *    \"java/util/Map#Entry#\"          // Static inner interface.\n+   *  }}}\n+   * @return the definition of the symbol, if any.\n+   */\n+  def definition(symbol: String): Option[SymbolDefinition]\n+\n+  /**\n+   * Add an individual Java or Scala source file to the index.\n+   *\n+   * @param file the absolute path to the source file, can be a path\n+   *            on disk or inside of a jar/zip file.\n+   * @param sourceDirectory the enclosing project source directory if\n+   *                        file is on disk, used to relativize `file`.\n+   *                        Can be None if file is inside a zip file\n+   *                        assuming the file path is already relativized\n+   *                        by that point.\n+   */\n+  def addSourceFile(\n+      file: AbsolutePath,\n+      sourceDirectory: Option[AbsolutePath]\n+  ): Unit\n+\n+  /**\n+   * Index a jar or zip file containing Scala and Java source files.\n+   *\n+   * Published artifacts typically have accompanying sources.jar files that\n+   * include the project sources.\n+   *\n+   * Sources of a published library can be fetched from the command-line with\n+   * coursier using the --sources flag:\n+   * {{{\n+   *   $ coursier fetch com.thoughtworks.qdox:qdox:2.0-M9 --sources\n+   *   $HOME/.coursier/cache/v1/https/repo1.maven.org/maven2/com/thoughtworks/qdox/qdox/2.0-M9/qdox-2.0-M9-sources.jar.coursier/cache/v1/https/repo1.maven.org/maven2/com/thoughtworks/qdox/qdox/2.0-M9/qdox-2.0-M9-sources.jar\n+   * }}}\n+   *\n+   * Sources can be fetched from an sbt build through the `updateClassifiers` task:\n+   * {{{\n+   *   val sourceJars = for {\n+   *     configurationReport <- updateClassifiers.in(input).value.configurations\n+   *     moduleReport <- configurationReport.modules\n+   *     (artifact, file) <- moduleReport.artifacts\n+   *     if artifact.classifier.contains(\"sources\")\n+   *   } yield file\n+   * }}}\n+   *\n+   * @param jar the path to a single jar or zip file.\n+   */\n+  def addSourceJar(jar: AbsolutePath): Unit"
  },
  {
    "id" : "5072aed7-abf3-46d7-ac2b-12c2b17d0188",
    "prId" : 332,
    "comments" : [
      {
        "id" : "38f233b0-9771-453a-a312-c619b146e447",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Maybe `SymbolDefinitionPath` or `SymbolDefinitionFile`?",
        "createdAt" : "2018-10-13T12:35:17Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "33e2967d-9a57-479b-a038-9ce6c677be1f",
        "parentId" : "38f233b0-9771-453a-a312-c619b146e447",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Ending with `Path` makes the `querySymbol/definitionSymbol` fields a bit confusing IMO",
        "createdAt" : "2018-10-13T13:38:53Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "647d25c1-ec87-4631-8531-8111aeddd1bf",
        "parentId" : "38f233b0-9771-453a-a312-c619b146e447",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "At the same time, this is not really a symbol definition. It's the file where the symbol is defined, so that was confusing at a first read",
        "createdAt" : "2018-10-13T15:14:19Z",
        "updatedAt" : "2018-10-17T09:17:09Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "889b282a30a7ddd72b09da4b9328f7779b1cfae9",
    "line" : 87,
    "diffHunk" : "@@ -0,0 +1,84 @@\n+package scala.meta.internal.mtags\n+\n+import scala.meta.io.AbsolutePath\n+\n+/**\n+ * An index to lookup the definition of global symbols.\n+ *\n+ * Only indexes plain Scala and Java source files, no compilation needed.\n+ */\n+trait GlobalSymbolIndex {\n+\n+  /**\n+   * Lookup the definition of a global symbol.\n+   *\n+   * Returns the path of the file that defines the symbol but does not include\n+   * the exact position of the definition. Computing the range position of the\n+   * definition is left for the client and can be done using the mtags module.\n+   *\n+   * @param symbol a global SemanticDB symbol. For comprehensive documentation\n+   *               of how a symbol is formatted consule the specification:\n+   *               https://scalameta.org/docs/semanticdb/specification.html#symbol\n+   *\n+   *  Examples: {{{\n+   *    \"scala/Option#\"                 // Option class\n+   *    \"scala/Option.\"                 // Option companion object\n+   *    \"scala/Option#.get().\"          // `get` method for Option\n+   *    \"scala/Predef.String#\"          // String type alias in Predef\n+   *    \"java/lang/String#format(+1).\"  // Static `format` method for strings\n+   *    \"java/util/Map#Entry#\"          // Static inner interface.\n+   *  }}}\n+   * @return the definition of the symbol, if any.\n+   */\n+  def definition(symbol: String): Option[SymbolDefinition]\n+\n+  /**\n+   * Add an individual Java or Scala source file to the index.\n+   *\n+   * @param file the absolute path to the source file, can be a path\n+   *            on disk or inside of a jar/zip file.\n+   * @param sourceDirectory the enclosing project source directory if\n+   *                        file is on disk, used to relativize `file`.\n+   *                        Can be None if file is inside a zip file\n+   *                        assuming the file path is already relativized\n+   *                        by that point.\n+   */\n+  def addSourceFile(\n+      file: AbsolutePath,\n+      sourceDirectory: Option[AbsolutePath]\n+  ): Unit\n+\n+  /**\n+   * Index a jar or zip file containing Scala and Java source files.\n+   *\n+   * Published artifacts typically have accompanying sources.jar files that\n+   * include the project sources.\n+   *\n+   * Sources of a published library can be fetched from the command-line with\n+   * coursier using the --sources flag:\n+   * {{{\n+   *   $ coursier fetch com.thoughtworks.qdox:qdox:2.0-M9 --sources\n+   *   $HOME/.coursier/cache/v1/https/repo1.maven.org/maven2/com/thoughtworks/qdox/qdox/2.0-M9/qdox-2.0-M9-sources.jar.coursier/cache/v1/https/repo1.maven.org/maven2/com/thoughtworks/qdox/qdox/2.0-M9/qdox-2.0-M9-sources.jar\n+   * }}}\n+   *\n+   * Sources can be fetched from an sbt build through the `updateClassifiers` task:\n+   * {{{\n+   *   val sourceJars = for {\n+   *     configurationReport <- updateClassifiers.in(input).value.configurations\n+   *     moduleReport <- configurationReport.modules\n+   *     (artifact, file) <- moduleReport.artifacts\n+   *     if artifact.classifier.contains(\"sources\")\n+   *   } yield file\n+   * }}}\n+   *\n+   * @param jar the path to a single jar or zip file.\n+   */\n+  def addSourceJar(jar: AbsolutePath): Unit\n+\n+}\n+\n+case class SymbolDefinition("
  }
]