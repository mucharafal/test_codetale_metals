[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "is this even an improvement?\n",
    "commit": "2e794dcbf69af5e6d399e3d07cec002bbd573bc9",
    "createdAt": "2016-05-27T05:42:02Z",
    "diffHunk": "@@ -31,9 +31,8 @@ private[spark] class YarnScheduler(sc: SparkContext) extends TaskSchedulerImpl(s\n     Logger.getLogger(classOf[RackResolver]).setLevel(Level.WARN)\n   }\n \n-  // By default, rack is unknown\n   override def getRackForHost(hostPort: String): Option[String] = {\n-    val host = Utils.parseHostPort(hostPort)._1\n+    val (host, _) = Utils.parseHostPort(hostPort)",
    "line": 7
  }, {
    "author": {
      "login": "jaceklaskowski"
    },
    "body": "It is when you agree that you could easily (?) miss `_1` at the very end. I do agree and I did miss it few times while reviewing that piece of code. Opinions may vary and I can happily revert this change if requested (I need your advice to learn your coding style).\n",
    "commit": "2e794dcbf69af5e6d399e3d07cec002bbd573bc9",
    "createdAt": "2016-05-27T12:59:11Z",
    "diffHunk": "@@ -31,9 +31,8 @@ private[spark] class YarnScheduler(sc: SparkContext) extends TaskSchedulerImpl(s\n     Logger.getLogger(classOf[RackResolver]).setLevel(Level.WARN)\n   }\n \n-  // By default, rack is unknown\n   override def getRackForHost(hostPort: String): Option[String] = {\n-    val host = Utils.parseHostPort(hostPort)._1\n+    val (host, _) = Utils.parseHostPort(hostPort)",
    "line": 7
  }],
  "prId": 13329
}]