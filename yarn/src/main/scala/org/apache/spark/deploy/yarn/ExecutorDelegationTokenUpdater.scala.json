[{
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "can you explain this, why do we get exception if it runs immediately?\n",
    "commit": "00fd0bc4cd2d6b31ba197629fbe1e9e07a2497bc",
    "createdAt": "2015-09-23T13:15:37Z",
    "diffHunk": "@@ -76,7 +76,10 @@ private[spark] class ExecutorDelegationTokenUpdater(\n         SparkHadoopUtil.get.getTimeFromNowToRenewal(\n           sparkConf, 0.8, UserGroupInformation.getCurrentUser.getCredentials)\n       if (timeFromNowToRenewal <= 0) {\n-        executorUpdaterRunnable.run()\n+        // If the `timeFromNowToRenewal` equals 0, it's better to wait 1 minutes to schedule for\n+        // avoid cycle calling and cause StackOverflow Exception.",
    "line": 6
  }, {
    "author": {
      "login": "tgravescs"
    },
    "body": "can you explain?\n",
    "commit": "00fd0bc4cd2d6b31ba197629fbe1e9e07a2497bc",
    "createdAt": "2015-09-29T14:42:03Z",
    "diffHunk": "@@ -76,7 +76,10 @@ private[spark] class ExecutorDelegationTokenUpdater(\n         SparkHadoopUtil.get.getTimeFromNowToRenewal(\n           sparkConf, 0.8, UserGroupInformation.getCurrentUser.getCredentials)\n       if (timeFromNowToRenewal <= 0) {\n-        executorUpdaterRunnable.run()\n+        // If the `timeFromNowToRenewal` equals 0, it's better to wait 1 minutes to schedule for\n+        // avoid cycle calling and cause StackOverflow Exception.",
    "line": 6
  }, {
    "author": {
      "login": "harishreedharan"
    },
    "body": "We end up scheduling the next run of the `executorUpdaterRunnable` from within this class. If the executor renewal interval is set to 0, we end up calling it again from within the same thread (indefinitely). But I am not sure why it would be 0 here though (since this is started only if the login is from keytab). \n",
    "commit": "00fd0bc4cd2d6b31ba197629fbe1e9e07a2497bc",
    "createdAt": "2015-09-29T18:02:33Z",
    "diffHunk": "@@ -76,7 +76,10 @@ private[spark] class ExecutorDelegationTokenUpdater(\n         SparkHadoopUtil.get.getTimeFromNowToRenewal(\n           sparkConf, 0.8, UserGroupInformation.getCurrentUser.getCredentials)\n       if (timeFromNowToRenewal <= 0) {\n-        executorUpdaterRunnable.run()\n+        // If the `timeFromNowToRenewal` equals 0, it's better to wait 1 minutes to schedule for\n+        // avoid cycle calling and cause StackOverflow Exception.",
    "line": 6
  }, {
    "author": {
      "login": "tgravescs"
    },
    "body": "Oh I see, I assume someone manually changed the renew time for testing purposes?  I think perhaps the comment should be clarified saying if the renewal time is very small wait 1 minute to avoid calling over and over very quickly.  Or alternatively where we set spark.yarn.token.renewal.interval we could just do a min of 1 minute.\n",
    "commit": "00fd0bc4cd2d6b31ba197629fbe1e9e07a2497bc",
    "createdAt": "2015-09-29T18:36:55Z",
    "diffHunk": "@@ -76,7 +76,10 @@ private[spark] class ExecutorDelegationTokenUpdater(\n         SparkHadoopUtil.get.getTimeFromNowToRenewal(\n           sparkConf, 0.8, UserGroupInformation.getCurrentUser.getCredentials)\n       if (timeFromNowToRenewal <= 0) {\n-        executorUpdaterRunnable.run()\n+        // If the `timeFromNowToRenewal` equals 0, it's better to wait 1 minutes to schedule for\n+        // avoid cycle calling and cause StackOverflow Exception.",
    "line": 6
  }],
  "prId": 8867
}]