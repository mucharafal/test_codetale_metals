[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "This parameter is not used.\n",
    "commit": "3787e7f5d15bf858d9ee9c0e0732453b5dafcdab",
    "createdAt": "2015-10-24T00:31:03Z",
    "diffHunk": "@@ -179,4 +197,30 @@ private[yarn] class LocalityPreferredContainerPlacementStrategy(\n       (host, math.max(0, (expectedCount - existedCount).ceil.toInt))\n     }\n   }\n+\n+  /**\n+   * Calculate the host to possible number of containers for pending allocation containers.\n+   * @param hostToLocalTaskCount a map to store the preferred hostname and possible task\n+   *                             numbers running on it, used as hints for container allocation\n+   * @param localityMatchedPendingAllocations A sequence of pending container request which\n+   *                                          matches the localities of current required tasks.\n+   * @return a Map with hostname as key and possible number of containers on this host as value\n+   */\n+  private def pendingAllocationHostToContainerCount(\n+      hostToLocalTaskCount: Map[String, Int],"
  }],
  "prId": 8100
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "This confused me a little bit; the \"possible number of containers\" would be just the raw count stored in `localityMatchedPendingAllocations`, no? Instead, the method is returning some kind of ratio. It would be nice to clarify that here.\n",
    "commit": "3787e7f5d15bf858d9ee9c0e0732453b5dafcdab",
    "createdAt": "2015-11-01T01:20:00Z",
    "diffHunk": "@@ -179,4 +196,26 @@ private[yarn] class LocalityPreferredContainerPlacementStrategy(\n       (host, math.max(0, (expectedCount - existedCount).ceil.toInt))\n     }\n   }\n+\n+  /**\n+   * Calculate the host to possible number of containers for pending allocated containers.\n+   * @param localityMatchedPendingAllocations A sequence of pending container request which\n+   *                                          matches the localities of current required tasks.\n+   * @return a Map with hostname as key and possible number of containers on this host as value"
  }, {
    "author": {
      "login": "jerryshao"
    },
    "body": "I think it is the number of containers that will possibly be on the specific host, not the ratio. I will add more comments on it.\n",
    "commit": "3787e7f5d15bf858d9ee9c0e0732453b5dafcdab",
    "createdAt": "2015-11-02T00:57:33Z",
    "diffHunk": "@@ -179,4 +196,26 @@ private[yarn] class LocalityPreferredContainerPlacementStrategy(\n       (host, math.max(0, (expectedCount - existedCount).ceil.toInt))\n     }\n   }\n+\n+  /**\n+   * Calculate the host to possible number of containers for pending allocated containers.\n+   * @param localityMatchedPendingAllocations A sequence of pending container request which\n+   *                                          matches the localities of current required tasks.\n+   * @return a Map with hostname as key and possible number of containers on this host as value"
  }],
  "prId": 8100
}]