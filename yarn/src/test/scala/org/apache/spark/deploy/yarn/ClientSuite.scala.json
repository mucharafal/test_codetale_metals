[{
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "not used anywhere\n",
    "commit": "51eefa50faeb26c6c1fd9d689b8450358291d569",
    "createdAt": "2016-11-01T15:14:21Z",
    "diffHunk": "@@ -282,6 +282,37 @@ class ClientSuite extends SparkFunSuite with Matchers with BeforeAndAfterAll\n     }\n   }\n \n+  test(\"distribute archive multiple times\") {\n+    val libs = Utils.createTempDir()\n+    val jarsDir = new File(libs, \"jars\")\n+    assert(jarsDir.mkdir())\n+    new FileOutputStream(new File(libs, \"RELEASE\")).close()\n+    val userLib1 = Utils.createTempDir()\n+    val userLib2 = Utils.createTempDir()\n+\n+    val jar1 = TestUtils.createJarWithFiles(Map(), jarsDir)"
  }],
  "prId": 15627
}, {
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "I don't see jarsDir being used anywhere either\n",
    "commit": "51eefa50faeb26c6c1fd9d689b8450358291d569",
    "createdAt": "2016-11-01T15:15:46Z",
    "diffHunk": "@@ -282,6 +282,37 @@ class ClientSuite extends SparkFunSuite with Matchers with BeforeAndAfterAll\n     }\n   }\n \n+  test(\"distribute archive multiple times\") {\n+    val libs = Utils.createTempDir()\n+    val jarsDir = new File(libs, \"jars\")\n+    assert(jarsDir.mkdir())"
  }],
  "prId": 15627
}, {
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "If we can cleanup the variables names above I think it would help a lot, the test is confusing.  I know you just copy and pasted but would be nice to clean up.\nAlso can we have 3 tests or 3 asserts,  \n- one for same file in --files\n- one for same file in --archives\n- one for same file in --files and --archives\n",
    "commit": "51eefa50faeb26c6c1fd9d689b8450358291d569",
    "createdAt": "2016-11-01T15:25:54Z",
    "diffHunk": "@@ -282,6 +282,37 @@ class ClientSuite extends SparkFunSuite with Matchers with BeforeAndAfterAll\n     }\n   }\n \n+  test(\"distribute archive multiple times\") {\n+    val libs = Utils.createTempDir()\n+    val jarsDir = new File(libs, \"jars\")\n+    assert(jarsDir.mkdir())\n+    new FileOutputStream(new File(libs, \"RELEASE\")).close()\n+    val userLib1 = Utils.createTempDir()\n+    val userLib2 = Utils.createTempDir()\n+\n+    val jar1 = TestUtils.createJarWithFiles(Map(), jarsDir)\n+    val jar2 = TestUtils.createJarWithFiles(Map(), userLib1)\n+    // Copy jar2 to jar3 with same name\n+    val jar3 = {\n+      val target = new File(userLib2, new File(jar2.toURI).getName)\n+      val input = new FileInputStream(jar2.getPath)\n+      val output = new FileOutputStream(target)\n+      Utils.copyStream(input, output, closeStreams = true)\n+      target.toURI.toURL\n+    }"
  }],
  "prId": 15627
}]