[{
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "I would make this `logWarning`\n",
    "commit": "cc84b89f1f35462d7f8f06826815214e079499b8",
    "createdAt": "2014-08-06T03:38:05Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.yarn\n+\n+import java.io.{File, IOException}\n+\n+import com.google.common.io.{ByteStreams, Files}\n+import org.scalatest.{FunSuite, Matchers}\n+\n+import org.apache.spark.Logging\n+\n+class YarnSparkHadoopUtilSuite extends FunSuite with Matchers with Logging {\n+\n+  val hasBash =\n+    try {\n+      val exitCode = Runtime.getRuntime().exec(Array(\"bash\", \"--version\")).waitFor()\n+      exitCode == 0\n+    } catch {\n+      case e: IOException =>\n+        false\n+    }\n+\n+  if (!hasBash) {\n+    logInfo(\"Cannot execute bash, skipping all tests.\")"
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "The test already shows up as ignored in that case, that pretty much tells you the test couldn't run bash in your machine. :-)\n",
    "commit": "cc84b89f1f35462d7f8f06826815214e079499b8",
    "createdAt": "2014-08-06T17:35:45Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.yarn\n+\n+import java.io.{File, IOException}\n+\n+import com.google.common.io.{ByteStreams, Files}\n+import org.scalatest.{FunSuite, Matchers}\n+\n+import org.apache.spark.Logging\n+\n+class YarnSparkHadoopUtilSuite extends FunSuite with Matchers with Logging {\n+\n+  val hasBash =\n+    try {\n+      val exitCode = Runtime.getRuntime().exec(Array(\"bash\", \"--version\")).waitFor()\n+      exitCode == 0\n+    } catch {\n+      case e: IOException =>\n+        false\n+    }\n+\n+  if (!hasBash) {\n+    logInfo(\"Cannot execute bash, skipping all tests.\")"
  }],
  "prId": 1724
}]