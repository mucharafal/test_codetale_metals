[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Hm, other two occurrences are fine.\r\n\r\nI'll just get this in - let's just keep the `and` typo fix only in this PR\r\n\r\n```diff\r\n-    // Sessionize the events. Track number of events, start and end timestamps of session, and\r\n+    // Sessionize the events. Track number of events, start and end timestamps of session,\r\n```",
    "commit": "e1f50399fd79e4fea487d99a5338fbd65386aa74",
    "createdAt": "2019-05-14T05:57:48Z",
    "diffHunk": "@@ -70,15 +70,15 @@ object StructuredSessionization {\n         line.split(\" \").map(word => Event(sessionId = word, timestamp))\n       }\n \n-    // Sessionize the events. Track number of events, start and end timestamps of session, and\n+    // Sessionize the events. Track number of events, start and end timestamps of session,\n     // and report session updates.\n     val sessionUpdates = events\n       .groupByKey(event => event.sessionId)\n       .mapGroupsWithState[SessionInfo, SessionUpdate](GroupStateTimeout.ProcessingTimeTimeout) {\n \n         case (sessionId: String, events: Iterator[Event], state: GroupState[SessionInfo]) =>\n \n-          // If timed out, then remove session and send final update\n+          // If timed out, remove session and send final update"
  }, {
    "author": {
      "login": "beliefer"
    },
    "body": "> Hm, other two occurrences are fine.\r\n> \r\n> I'll just get this in - let's just keep the `and` typo fix only in this PR\r\n> \r\n> ```diff\r\n> -    // Sessionize the events. Track number of events, start and end timestamps of session, and\r\n> +    // Sessionize the events. Track number of events, start and end timestamps of session,\r\n> ```\r\n\r\nI find another type `timestamps` and changed to `time stamps`.\r\nIs `Sessionize` a typo?",
    "commit": "e1f50399fd79e4fea487d99a5338fbd65386aa74",
    "createdAt": "2019-05-14T08:41:00Z",
    "diffHunk": "@@ -70,15 +70,15 @@ object StructuredSessionization {\n         line.split(\" \").map(word => Event(sessionId = word, timestamp))\n       }\n \n-    // Sessionize the events. Track number of events, start and end timestamps of session, and\n+    // Sessionize the events. Track number of events, start and end timestamps of session,\n     // and report session updates.\n     val sessionUpdates = events\n       .groupByKey(event => event.sessionId)\n       .mapGroupsWithState[SessionInfo, SessionUpdate](GroupStateTimeout.ProcessingTimeTimeout) {\n \n         case (sessionId: String, events: Iterator[Event], state: GroupState[SessionInfo]) =>\n \n-          // If timed out, then remove session and send final update\n+          // If timed out, remove session and send final update"
  }],
  "prId": 24589
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "I believe timestamp is fine ..",
    "commit": "e1f50399fd79e4fea487d99a5338fbd65386aa74",
    "createdAt": "2019-05-14T11:13:30Z",
    "diffHunk": "@@ -70,7 +70,7 @@ object StructuredSessionization {\n         line.split(\" \").map(word => Event(sessionId = word, timestamp))\n       }\n \n-    // Sessionize the events. Track number of events, start and end timestamps of session, and\n+    // Sessionize the events. Track number of events, start and end time stamps of session,"
  }, {
    "author": {
      "login": "beliefer"
    },
    "body": "> I believe timestamp is fine ..\r\n\r\nIs Sessionize a typo?",
    "commit": "e1f50399fd79e4fea487d99a5338fbd65386aa74",
    "createdAt": "2019-05-14T11:24:55Z",
    "diffHunk": "@@ -70,7 +70,7 @@ object StructuredSessionization {\n         line.split(\" \").map(word => Event(sessionId = word, timestamp))\n       }\n \n-    // Sessionize the events. Track number of events, start and end timestamps of session, and\n+    // Sessionize the events. Track number of events, start and end time stamps of session,"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Not a typo. Just remove 'and' here",
    "commit": "e1f50399fd79e4fea487d99a5338fbd65386aa74",
    "createdAt": "2019-05-14T14:08:08Z",
    "diffHunk": "@@ -70,7 +70,7 @@ object StructuredSessionization {\n         line.split(\" \").map(word => Event(sessionId = word, timestamp))\n       }\n \n-    // Sessionize the events. Track number of events, start and end timestamps of session, and\n+    // Sessionize the events. Track number of events, start and end time stamps of session,"
  }, {
    "author": {
      "login": "beliefer"
    },
    "body": "OK. I have recovered `timestamps`.",
    "commit": "e1f50399fd79e4fea487d99a5338fbd65386aa74",
    "createdAt": "2019-05-15T06:41:48Z",
    "diffHunk": "@@ -70,7 +70,7 @@ object StructuredSessionization {\n         line.split(\" \").map(word => Event(sessionId = word, timestamp))\n       }\n \n-    // Sessionize the events. Track number of events, start and end timestamps of session, and\n+    // Sessionize the events. Track number of events, start and end time stamps of session,"
  }],
  "prId": 24589
}]