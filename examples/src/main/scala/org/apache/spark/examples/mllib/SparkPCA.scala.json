[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "This example is misleading in couple ways:\n1. 1-based indices\n2. coo format input data\n\nUsers will treat examples as the recommended way of using PCA. Given the current implementation, the best input format is simply a dense matrix format with one observation per line.\n",
    "commit": "e298700a69316d9d32bcd1ce3157f22acc4bb585",
    "createdAt": "2014-03-18T20:52:50Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib\n+      \n+import org.apache.spark.SparkContext\n+import org.apache.spark.mllib.linalg.PCA\n+import org.apache.spark.mllib.linalg.MatrixEntry\n+import org.apache.spark.mllib.linalg.SparseMatrix\n+import org.apache.spark.mllib.util._\n+\n+\n+/**\n+ * Compute PCA of an example matrix.\n+ * Input file should be comma separated, 1 indexed of the form\n+ * i,j,value\n+ * Where i is the column, j the row, and value is the matrix entry\n+ * \n+ * For example input file, see:\n+ * mllib/data/als/test.data  (example is 4 x 4)\n+ */\n+object SparkPCA {"
  }, {
    "author": {
      "login": "rezazadeh"
    },
    "body": "Changed to an example that uses row-by-row matrix and 0 indices\n",
    "commit": "e298700a69316d9d32bcd1ce3157f22acc4bb585",
    "createdAt": "2014-03-19T00:08:47Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib\n+      \n+import org.apache.spark.SparkContext\n+import org.apache.spark.mllib.linalg.PCA\n+import org.apache.spark.mllib.linalg.MatrixEntry\n+import org.apache.spark.mllib.linalg.SparseMatrix\n+import org.apache.spark.mllib.util._\n+\n+\n+/**\n+ * Compute PCA of an example matrix.\n+ * Input file should be comma separated, 1 indexed of the form\n+ * i,j,value\n+ * Where i is the column, j the row, and value is the matrix entry\n+ * \n+ * For example input file, see:\n+ * mllib/data/als/test.data  (example is 4 x 4)\n+ */\n+object SparkPCA {"
  }],
  "prId": 88
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Need one more space.\n",
    "commit": "e298700a69316d9d32bcd1ce3157f22acc4bb585",
    "createdAt": "2014-03-19T06:50:05Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib\n+      \n+import org.apache.spark.SparkContext\n+import org.apache.spark.mllib.linalg.PCA\n+import org.apache.spark.mllib.linalg.MatrixEntry\n+import org.apache.spark.mllib.linalg.SparseMatrix\n+import org.apache.spark.mllib.util._\n+\n+\n+/**\n+ * Compute PCA of an example matrix.\n+ */\n+object SparkPCA {\n+  def main(args: Array[String]) {\n+   if (args.length != 4) {"
  }, {
    "author": {
      "login": "rezazadeh"
    },
    "body": "Done.\n",
    "commit": "e298700a69316d9d32bcd1ce3157f22acc4bb585",
    "createdAt": "2014-03-19T07:01:52Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib\n+      \n+import org.apache.spark.SparkContext\n+import org.apache.spark.mllib.linalg.PCA\n+import org.apache.spark.mllib.linalg.MatrixEntry\n+import org.apache.spark.mllib.linalg.SparseMatrix\n+import org.apache.spark.mllib.util._\n+\n+\n+/**\n+ * Compute PCA of an example matrix.\n+ */\n+object SparkPCA {\n+  def main(args: Array[String]) {\n+   if (args.length != 4) {"
  }],
  "prId": 88
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Is `SPARK_EXAMPLE_JAR` used or documented somewhere?\n",
    "commit": "e298700a69316d9d32bcd1ce3157f22acc4bb585",
    "createdAt": "2014-03-19T06:56:04Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib\n+      \n+import org.apache.spark.SparkContext\n+import org.apache.spark.mllib.linalg.PCA\n+import org.apache.spark.mllib.linalg.MatrixEntry\n+import org.apache.spark.mllib.linalg.SparseMatrix\n+import org.apache.spark.mllib.util._\n+\n+\n+/**\n+ * Compute PCA of an example matrix.\n+ */\n+object SparkPCA {\n+  def main(args: Array[String]) {\n+   if (args.length != 4) {\n+      System.err.println(\"Usage: SparkPCA <master> <file> m n\")\n+      System.exit(1)\n+    }\n+    val sc = new SparkContext(args(0), \"SVD\",\n+      System.getenv(\"SPARK_HOME\"), Seq(System.getenv(\"SPARK_EXAMPLES_JAR\")))"
  }, {
    "author": {
      "login": "rezazadeh"
    },
    "body": "I am following other examples here.\n",
    "commit": "e298700a69316d9d32bcd1ce3157f22acc4bb585",
    "createdAt": "2014-03-19T07:02:09Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib\n+      \n+import org.apache.spark.SparkContext\n+import org.apache.spark.mllib.linalg.PCA\n+import org.apache.spark.mllib.linalg.MatrixEntry\n+import org.apache.spark.mllib.linalg.SparseMatrix\n+import org.apache.spark.mllib.util._\n+\n+\n+/**\n+ * Compute PCA of an example matrix.\n+ */\n+object SparkPCA {\n+  def main(args: Array[String]) {\n+   if (args.length != 4) {\n+      System.err.println(\"Usage: SparkPCA <master> <file> m n\")\n+      System.exit(1)\n+    }\n+    val sc = new SparkContext(args(0), \"SVD\",\n+      System.getenv(\"SPARK_HOME\"), Seq(System.getenv(\"SPARK_EXAMPLES_JAR\")))"
  }, {
    "author": {
      "login": "mengxr"
    },
    "body": "The only example I found is in `SparkSVD.scala`. I saw other examples use\n\n```\nSparkContext.jarOfClass(this.getClass)\n```\n\nI'm okay with either way. But if `SPARK_EXAMPLES_JAR` is used, we need to tell users how to set it.\n",
    "commit": "e298700a69316d9d32bcd1ce3157f22acc4bb585",
    "createdAt": "2014-03-19T07:33:14Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib\n+      \n+import org.apache.spark.SparkContext\n+import org.apache.spark.mllib.linalg.PCA\n+import org.apache.spark.mllib.linalg.MatrixEntry\n+import org.apache.spark.mllib.linalg.SparseMatrix\n+import org.apache.spark.mllib.util._\n+\n+\n+/**\n+ * Compute PCA of an example matrix.\n+ */\n+object SparkPCA {\n+  def main(args: Array[String]) {\n+   if (args.length != 4) {\n+      System.err.println(\"Usage: SparkPCA <master> <file> m n\")\n+      System.exit(1)\n+    }\n+    val sc = new SparkContext(args(0), \"SVD\",\n+      System.getenv(\"SPARK_HOME\"), Seq(System.getenv(\"SPARK_EXAMPLES_JAR\")))"
  }],
  "prId": 88
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "`<file>` is not used.\n",
    "commit": "e298700a69316d9d32bcd1ce3157f22acc4bb585",
    "createdAt": "2014-03-19T06:57:55Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib\n+      \n+import org.apache.spark.SparkContext\n+import org.apache.spark.mllib.linalg.PCA\n+import org.apache.spark.mllib.linalg.MatrixEntry\n+import org.apache.spark.mllib.linalg.SparseMatrix\n+import org.apache.spark.mllib.util._\n+\n+\n+/**\n+ * Compute PCA of an example matrix.\n+ */\n+object SparkPCA {\n+  def main(args: Array[String]) {\n+   if (args.length != 4) {\n+      System.err.println(\"Usage: SparkPCA <master> <file> m n\")"
  }, {
    "author": {
      "login": "rezazadeh"
    },
    "body": "Removed.\n",
    "commit": "e298700a69316d9d32bcd1ce3157f22acc4bb585",
    "createdAt": "2014-03-19T07:02:37Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib\n+      \n+import org.apache.spark.SparkContext\n+import org.apache.spark.mllib.linalg.PCA\n+import org.apache.spark.mllib.linalg.MatrixEntry\n+import org.apache.spark.mllib.linalg.SparseMatrix\n+import org.apache.spark.mllib.util._\n+\n+\n+/**\n+ * Compute PCA of an example matrix.\n+ */\n+object SparkPCA {\n+  def main(args: Array[String]) {\n+   if (args.length != 4) {\n+      System.err.println(\"Usage: SparkPCA <master> <file> m n\")"
  }],
  "prId": 88
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "`SVD` -> `PCA`\n",
    "commit": "e298700a69316d9d32bcd1ce3157f22acc4bb585",
    "createdAt": "2014-03-19T21:13:14Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib\n+      \n+import org.apache.spark.SparkContext\n+import org.apache.spark.mllib.linalg.PCA\n+import org.apache.spark.mllib.linalg.MatrixEntry\n+import org.apache.spark.mllib.linalg.SparseMatrix\n+import org.apache.spark.mllib.util._\n+\n+\n+/**\n+ * Compute PCA of an example matrix.\n+ */\n+object SparkPCA {\n+  def main(args: Array[String]) {\n+    if (args.length != 4) {\n+      System.err.println(\"Usage: SparkPCA <master> m n\")\n+      System.exit(1)\n+    }\n+    val sc = new SparkContext(args(0), \"SVD\","
  }, {
    "author": {
      "login": "rezazadeh"
    },
    "body": "done\n",
    "commit": "e298700a69316d9d32bcd1ce3157f22acc4bb585",
    "createdAt": "2014-03-19T21:19:49Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib\n+      \n+import org.apache.spark.SparkContext\n+import org.apache.spark.mllib.linalg.PCA\n+import org.apache.spark.mllib.linalg.MatrixEntry\n+import org.apache.spark.mllib.linalg.SparseMatrix\n+import org.apache.spark.mllib.util._\n+\n+\n+/**\n+ * Compute PCA of an example matrix.\n+ */\n+object SparkPCA {\n+  def main(args: Array[String]) {\n+    if (args.length != 4) {\n+      System.err.println(\"Usage: SparkPCA <master> m n\")\n+      System.exit(1)\n+    }\n+    val sc = new SparkContext(args(0), \"SVD\","
  }],
  "prId": 88
}]