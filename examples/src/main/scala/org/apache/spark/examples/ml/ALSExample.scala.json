[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "It looks like this file was removed though right? is it because we can't distribute even a sample of it?\n",
    "commit": "9b351e914e87012298ab773d6b76ec019a735b6f",
    "createdAt": "2016-02-12T10:53:47Z",
    "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.ml\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.evaluation.RegressionEvaluator\n+import org.apache.spark.ml.recommendation.ALS\n+// $example off$\n+import org.apache.spark.sql.SQLContext\n+// $example on$\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.types.DoubleType\n+// $example off$\n+\n+object ALSExample {\n+\n+  // $example on$\n+  case class Rating(userId: Int, movieId: Int, rating: Float, timestamp: Long)\n+  object Rating {\n+    def parseRating(str: String): Rating = {\n+      val fields = str.split(\"::\")\n+      assert(fields.size == 4)\n+      Rating(fields(0).toInt, fields(1).toInt, fields(2).toFloat, fields(3).toLong)\n+    }\n+  }\n+  // $example off$\n+\n+  def main(args: Array[String]) {\n+    val conf = new SparkConf().setAppName(\"ALSExample\")\n+    val sc = new SparkContext(conf)\n+    val sqlContext = new SQLContext(sc)\n+    import sqlContext.implicits._\n+\n+    // $example on$\n+    val ratings = sc.textFile(\"data/mllib/als/sample_movielens_ratings.txt\")",
    "line": 52
  }, {
    "author": {
      "login": "BenFradet"
    },
    "body": "Nope, the one removed is `sample_movielens_movies.txt`  as it was only used in `MovieLens.scala` which has been removed, cf the discussion in the jira.\n",
    "commit": "9b351e914e87012298ab773d6b76ec019a735b6f",
    "createdAt": "2016-02-12T13:08:47Z",
    "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.ml\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.evaluation.RegressionEvaluator\n+import org.apache.spark.ml.recommendation.ALS\n+// $example off$\n+import org.apache.spark.sql.SQLContext\n+// $example on$\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.types.DoubleType\n+// $example off$\n+\n+object ALSExample {\n+\n+  // $example on$\n+  case class Rating(userId: Int, movieId: Int, rating: Float, timestamp: Long)\n+  object Rating {\n+    def parseRating(str: String): Rating = {\n+      val fields = str.split(\"::\")\n+      assert(fields.size == 4)\n+      Rating(fields(0).toInt, fields(1).toInt, fields(2).toFloat, fields(3).toLong)\n+    }\n+  }\n+  // $example off$\n+\n+  def main(args: Array[String]) {\n+    val conf = new SparkConf().setAppName(\"ALSExample\")\n+    val sc = new SparkContext(conf)\n+    val sqlContext = new SQLContext(sc)\n+    import sqlContext.implicits._\n+\n+    // $example on$\n+    val ratings = sc.textFile(\"data/mllib/als/sample_movielens_ratings.txt\")",
    "line": 52
  }],
  "prId": 10411
}]