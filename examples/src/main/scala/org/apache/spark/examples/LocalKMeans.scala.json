[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "breeze has `squaredDistance` operator.\n",
    "commit": "a43638e5afece89dccaa5df80a1f16caf952bd43",
    "createdAt": "2014-04-16T03:27:16Z",
    "diffHunk": "@@ -58,10 +59,21 @@ object LocalKMeans {\n     bestIndex\n   }\n \n+  // TODO: Make this a part of the Vector\n+  def squaredDist(a: Vector[Double], b: Vector[Double]): Double = {"
  }],
  "prId": 416
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Ditto. `nextDouble()`.\n",
    "commit": "a43638e5afece89dccaa5df80a1f16caf952bd43",
    "createdAt": "2014-04-16T03:29:39Z",
    "diffHunk": "@@ -36,19 +37,19 @@ object LocalKMeans {\n \n   def generateData = {\n     def generatePoint(i: Int) = {\n-      Vector(D, _ => rand.nextDouble * R)\n+      DenseVector.fill(D){rand.nextDouble * R}",
    "line": 22
  }],
  "prId": 416
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "It would be better if you import `scala.collection.mutable` and use `mutable.HashSet` and `mutable.HashMap`. Again, this is not related to this PR ...\n",
    "commit": "a43638e5afece89dccaa5df80a1f16caf952bd43",
    "createdAt": "2014-04-16T03:31:04Z",
    "diffHunk": "@@ -58,10 +59,21 @@ object LocalKMeans {\n     bestIndex\n   }\n \n+  // TODO: Make this a part of the Vector\n+  def squaredDist(a: Vector[Double], b: Vector[Double]): Double = {\n+    var ans = 0.0\n+    var i = 0\n+    while (i < a.length) {\n+      ans += (a(i) - b(i)) * (a(i) - b(i))\n+      i += 1\n+    }\n+    ans\n+  }\n+\n   def main(args: Array[String]) {\n     val data = generateData\n-    var points = new HashSet[Vector]\n-    var kPoints = new HashMap[Int, Vector]\n+    var points = new HashSet[Vector[Double]]",
    "line": 46
  }],
  "prId": 416
}]