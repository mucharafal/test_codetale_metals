[{
  "comments": [{
    "author": {
      "login": "MLnick"
    },
    "body": "Same applies here, why not just `df.select(...).show()`?",
    "commit": "ee9d3686f3e48650668bf26a7003b0bde912b6a0",
    "createdAt": "2018-02-01T13:59:46Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.ml\n+\n+// $example on$\n+import org.apache.spark.ml.linalg.{Vector, Vectors}\n+import org.apache.spark.ml.stat.Summarizer\n+// $example off$\n+import org.apache.spark.sql.SparkSession\n+\n+object SummarizerExample {\n+  def main(args: Array[String]): Unit = {\n+    val spark = SparkSession\n+      .builder\n+      .appName(\"SummarizerExample\")\n+      .getOrCreate()\n+\n+    import spark.implicits._\n+    import Summarizer._\n+\n+    // $example on$\n+    val data = Seq(\n+      (Vectors.dense(2.0, 3.0, 5.0), 1.0),\n+      (Vectors.dense(4.0, 6.0, 7.0), 2.0)\n+    )\n+\n+    val df = data.toDF(\"features\", \"weight\")\n+\n+    val Tuple1((meanVal, varianceVal)) = df.select(metrics(\"mean\", \"variance\")\n+      .summary($\"features\", $\"weight\"))\n+      .as[Tuple1[(Vector, Vector)]].first()\n+\n+    println(s\"with weight: mean = ${meanVal}, variance = ${varianceVal}\")"
  }],
  "prId": 20446
}, {
  "comments": [{
    "author": {
      "login": "MLnick"
    },
    "body": "Same applies here, why not just `df.select(...).show()`?",
    "commit": "ee9d3686f3e48650668bf26a7003b0bde912b6a0",
    "createdAt": "2018-02-01T13:59:54Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.ml\n+\n+// $example on$\n+import org.apache.spark.ml.linalg.{Vector, Vectors}\n+import org.apache.spark.ml.stat.Summarizer\n+// $example off$\n+import org.apache.spark.sql.SparkSession\n+\n+object SummarizerExample {\n+  def main(args: Array[String]): Unit = {\n+    val spark = SparkSession\n+      .builder\n+      .appName(\"SummarizerExample\")\n+      .getOrCreate()\n+\n+    import spark.implicits._\n+    import Summarizer._\n+\n+    // $example on$\n+    val data = Seq(\n+      (Vectors.dense(2.0, 3.0, 5.0), 1.0),\n+      (Vectors.dense(4.0, 6.0, 7.0), 2.0)\n+    )\n+\n+    val df = data.toDF(\"features\", \"weight\")\n+\n+    val Tuple1((meanVal, varianceVal)) = df.select(metrics(\"mean\", \"variance\")\n+      .summary($\"features\", $\"weight\"))\n+      .as[Tuple1[(Vector, Vector)]].first()\n+\n+    println(s\"with weight: mean = ${meanVal}, variance = ${varianceVal}\")\n+\n+    val (meanVal2, varianceVal2) = df.select(mean($\"features\"), variance($\"features\"))\n+      .as[(Vector, Vector)].first()\n+\n+    println(s\"without weight: mean = ${meanVal2}, sum = ${varianceVal2}\")",
    "line": 55
  }],
  "prId": 20446
}, {
  "comments": [{
    "author": {
      "login": "MLnick"
    },
    "body": "nit, but `Tuple1` not required here?",
    "commit": "ee9d3686f3e48650668bf26a7003b0bde912b6a0",
    "createdAt": "2018-02-02T06:34:14Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.ml\n+\n+// $example on$\n+import org.apache.spark.ml.linalg.{Vector, Vectors}\n+import org.apache.spark.ml.stat.Summarizer\n+// $example off$\n+import org.apache.spark.sql.SparkSession\n+\n+object SummarizerExample {\n+  def main(args: Array[String]): Unit = {\n+    val spark = SparkSession\n+      .builder\n+      .appName(\"SummarizerExample\")\n+      .getOrCreate()\n+\n+    import spark.implicits._\n+    import Summarizer._\n+\n+    // $example on$\n+    val data = Seq(\n+      (Vectors.dense(2.0, 3.0, 5.0), 1.0),\n+      (Vectors.dense(4.0, 6.0, 7.0), 2.0)\n+    )\n+\n+    val df = data.toDF(\"features\", \"weight\")\n+\n+    val Tuple1((meanVal, varianceVal)) = df.select(metrics(\"mean\", \"variance\")\n+      .summary($\"features\", $\"weight\"))\n+      .as[Tuple1[(Vector, Vector)]].first()"
  }, {
    "author": {
      "login": "WeichenXu123"
    },
    "body": "Do you mean us `.as[((Vector, Vector))]` ? It compile fails..\r\nor Do you mean change to\r\n```\r\nval (meanVal, varianceVal) = df.select(metrics(\"mean\", \"variance\")\r\n      .summary($\"features\", $\"weight\"))\r\n      .as[(Vector, Vector)].first()\r\n```\r\n? Seems also do not work because it is a \"struct type\" value in the returned row. So the first row format should match Row(Row(mean, variance))\r\n",
    "commit": "ee9d3686f3e48650668bf26a7003b0bde912b6a0",
    "createdAt": "2018-02-02T07:29:17Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.ml\n+\n+// $example on$\n+import org.apache.spark.ml.linalg.{Vector, Vectors}\n+import org.apache.spark.ml.stat.Summarizer\n+// $example off$\n+import org.apache.spark.sql.SparkSession\n+\n+object SummarizerExample {\n+  def main(args: Array[String]): Unit = {\n+    val spark = SparkSession\n+      .builder\n+      .appName(\"SummarizerExample\")\n+      .getOrCreate()\n+\n+    import spark.implicits._\n+    import Summarizer._\n+\n+    // $example on$\n+    val data = Seq(\n+      (Vectors.dense(2.0, 3.0, 5.0), 1.0),\n+      (Vectors.dense(4.0, 6.0, 7.0), 2.0)\n+    )\n+\n+    val df = data.toDF(\"features\", \"weight\")\n+\n+    val Tuple1((meanVal, varianceVal)) = df.select(metrics(\"mean\", \"variance\")\n+      .summary($\"features\", $\"weight\"))\n+      .as[Tuple1[(Vector, Vector)]].first()"
  }, {
    "author": {
      "login": "MLnick"
    },
    "body": "oh ok - perhaps `select(\"summary.mean\", \"summary.variance\")` would work to extract into two columns?",
    "commit": "ee9d3686f3e48650668bf26a7003b0bde912b6a0",
    "createdAt": "2018-02-02T07:42:13Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.ml\n+\n+// $example on$\n+import org.apache.spark.ml.linalg.{Vector, Vectors}\n+import org.apache.spark.ml.stat.Summarizer\n+// $example off$\n+import org.apache.spark.sql.SparkSession\n+\n+object SummarizerExample {\n+  def main(args: Array[String]): Unit = {\n+    val spark = SparkSession\n+      .builder\n+      .appName(\"SummarizerExample\")\n+      .getOrCreate()\n+\n+    import spark.implicits._\n+    import Summarizer._\n+\n+    // $example on$\n+    val data = Seq(\n+      (Vectors.dense(2.0, 3.0, 5.0), 1.0),\n+      (Vectors.dense(4.0, 6.0, 7.0), 2.0)\n+    )\n+\n+    val df = data.toDF(\"features\", \"weight\")\n+\n+    val Tuple1((meanVal, varianceVal)) = df.select(metrics(\"mean\", \"variance\")\n+      .summary($\"features\", $\"weight\"))\n+      .as[Tuple1[(Vector, Vector)]].first()"
  }, {
    "author": {
      "login": "WeichenXu123"
    },
    "body": "Good idea. This way make code easier to read.\r\nDone.",
    "commit": "ee9d3686f3e48650668bf26a7003b0bde912b6a0",
    "createdAt": "2018-02-02T07:59:08Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.ml\n+\n+// $example on$\n+import org.apache.spark.ml.linalg.{Vector, Vectors}\n+import org.apache.spark.ml.stat.Summarizer\n+// $example off$\n+import org.apache.spark.sql.SparkSession\n+\n+object SummarizerExample {\n+  def main(args: Array[String]): Unit = {\n+    val spark = SparkSession\n+      .builder\n+      .appName(\"SummarizerExample\")\n+      .getOrCreate()\n+\n+    import spark.implicits._\n+    import Summarizer._\n+\n+    // $example on$\n+    val data = Seq(\n+      (Vectors.dense(2.0, 3.0, 5.0), 1.0),\n+      (Vectors.dense(4.0, 6.0, 7.0), 2.0)\n+    )\n+\n+    val df = data.toDF(\"features\", \"weight\")\n+\n+    val Tuple1((meanVal, varianceVal)) = df.select(metrics(\"mean\", \"variance\")\n+      .summary($\"features\", $\"weight\"))\n+      .as[Tuple1[(Vector, Vector)]].first()"
  }],
  "prId": 20446
}]