[{
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "why bother supplying a default?  will this be any better than spark's internal default?",
    "commit": "171496a424ed23ebadafe29ff74de72f3db5a49f",
    "createdAt": "2017-11-09T17:22:09Z",
    "diffHunk": "@@ -46,11 +51,13 @@ object StructuredKafkaWordCount {\n   def main(args: Array[String]): Unit = {\n     if (args.length < 3) {\n       System.err.println(\"Usage: StructuredKafkaWordCount <bootstrap-servers> \" +\n-        \"<subscribe-type> <topics>\")\n+        \"<subscribe-type> <topics> [<checkpoint-location>]\")\n       System.exit(1)\n     }\n \n-    val Array(bootstrapServers, subscribeType, topics) = args\n+    val Array(bootstrapServers, subscribeType, topics, _*) = args\n+    val checkpointLocation =\n+      if (args.length > 3) args(3) else \"/tmp/temporary-\" + UUID.randomUUID.toString",
    "line": 36
  }, {
    "author": {
      "login": "wypoon"
    },
    "body": "This is what the internal default would be if java.io.tmpdir is \"/tmp\", but in case of YARN cluster mode, java.io.tmpdir is something else (the underlying problem). Supplying this default here is just to ease the user experience. They would get the same behavior running in YARN cluster mode or client mode, without supplying an explicit checkpoint location.",
    "commit": "171496a424ed23ebadafe29ff74de72f3db5a49f",
    "createdAt": "2017-11-09T17:25:22Z",
    "diffHunk": "@@ -46,11 +51,13 @@ object StructuredKafkaWordCount {\n   def main(args: Array[String]): Unit = {\n     if (args.length < 3) {\n       System.err.println(\"Usage: StructuredKafkaWordCount <bootstrap-servers> \" +\n-        \"<subscribe-type> <topics>\")\n+        \"<subscribe-type> <topics> [<checkpoint-location>]\")\n       System.exit(1)\n     }\n \n-    val Array(bootstrapServers, subscribeType, topics) = args\n+    val Array(bootstrapServers, subscribeType, topics, _*) = args\n+    val checkpointLocation =\n+      if (args.length > 3) args(3) else \"/tmp/temporary-\" + UUID.randomUUID.toString",
    "line": 36
  }, {
    "author": {
      "login": "squito"
    },
    "body": "talked to wing yew about this offline -- so the other part of the story is that in yarn it will by default by a dir on hdfs, and in general /tmp is writeable on hdfs.  And somewhat surprisingly, if you run `fs.create()` on a path where the parent dir doesn't exist, hdfs will create the parents.",
    "commit": "171496a424ed23ebadafe29ff74de72f3db5a49f",
    "createdAt": "2017-11-09T21:10:30Z",
    "diffHunk": "@@ -46,11 +51,13 @@ object StructuredKafkaWordCount {\n   def main(args: Array[String]): Unit = {\n     if (args.length < 3) {\n       System.err.println(\"Usage: StructuredKafkaWordCount <bootstrap-servers> \" +\n-        \"<subscribe-type> <topics>\")\n+        \"<subscribe-type> <topics> [<checkpoint-location>]\")\n       System.exit(1)\n     }\n \n-    val Array(bootstrapServers, subscribeType, topics) = args\n+    val Array(bootstrapServers, subscribeType, topics, _*) = args\n+    val checkpointLocation =\n+      if (args.length > 3) args(3) else \"/tmp/temporary-\" + UUID.randomUUID.toString",
    "line": 36
  }],
  "prId": 19703
}]