[{
  "comments": [{
    "author": {
      "login": "sethah"
    },
    "body": "How do we decide what to print out here? If we want to keep in line with the mllib example, we should print out the mean, weight, and covariance of each cluster. I don't see a reason to show cluster and probability predictions separately, or at all really, since the examples typically don't. This could be done via a call to transform anyway. Also, the output isn't clean:\n\n```\nSize of (number of data points in) each cluster: \n3\n3\n()\nCluster centers of the transformed data:\n+----------+\n|prediction|\n+----------+\n|         1|\n|         1|\n|         1|\n|         0|\n|         0|\n|         0|\n+----------+\n\nProbability of each cluster:\n+--------------------+\n|         probability|\n+--------------------+\n|[2.09399616965883...|\n|[9.89133752129957...|\n|[2.09399616965785...|\n|[0.99999999999999...|\n|[0.99999999999999...|\n|[0.99999999999999...|\n+--------------------+\n```\n\nIf no other motivation, I'd prefer keeping in line with mllib example.\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-04T20:07:47Z",
    "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureSummary}\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.sql.{DataFrame, SQLContext}\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a Spark context and a SQL context\n+    val conf = new SparkConf().setAppName(s\"${this.getClass.getSimpleName}\")\n+    val sc = new SparkContext(conf)\n+    val sqlContext = new SQLContext(sc)\n+\n+    // $example on$\n+    // Crates a DataFrame\n+    val dataset: DataFrame = sqlContext.createDataFrame(Seq(\n+      (1, Vectors.dense(0.0, 0.0, 0.0)),\n+      (2, Vectors.dense(0.1, 0.1, 0.1)),\n+      (3, Vectors.dense(0.2, 0.2, 0.2)),\n+      (4, Vectors.dense(9.0, 9.0, 9.0)),\n+      (5, Vectors.dense(9.1, 9.1, 9.1)),\n+      (6, Vectors.dense(9.2, 9.2, 9.2))\n+    )).toDF(\"id\", \"features\")\n+\n+    // Trains Gaussian Mixture Model\n+    val gmm = new GaussianMixture()\n+      .setK(2)\n+      .setFeaturesCol(\"features\")\n+      .setPredictionCol(\"prediction\")\n+      .setTol(0.0001)\n+      .setMaxIter(10)\n+      .setSeed(10)\n+    val model = gmm.fit(dataset)\n+\n+    // Shows the result\n+    val summary: GaussianMixtureSummary = model.summary\n+    println(\"Size of (number of data points in) each cluster: \")"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "sethah"
    },
    "body": "Here and elsewhere, use spark session instead of `SQLContext`. See [#12809](https://github.com/apache/spark/pull/12809/files) for details.\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-04T20:25:16Z",
    "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureSummary}\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.sql.{DataFrame, SQLContext}\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a Spark context and a SQL context\n+    val conf = new SparkConf().setAppName(s\"${this.getClass.getSimpleName}\")\n+    val sc = new SparkContext(conf)\n+    val sqlContext = new SQLContext(sc)"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "sethah"
    },
    "body": "outer `println` is unnecessary\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-04T20:52:07Z",
    "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureSummary}\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.sql.{DataFrame, SQLContext}\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a Spark context and a SQL context\n+    val conf = new SparkConf().setAppName(s\"${this.getClass.getSimpleName}\")\n+    val sc = new SparkContext(conf)\n+    val sqlContext = new SQLContext(sc)\n+\n+    // $example on$\n+    // Crates a DataFrame\n+    val dataset: DataFrame = sqlContext.createDataFrame(Seq(\n+      (1, Vectors.dense(0.0, 0.0, 0.0)),\n+      (2, Vectors.dense(0.1, 0.1, 0.1)),\n+      (3, Vectors.dense(0.2, 0.2, 0.2)),\n+      (4, Vectors.dense(9.0, 9.0, 9.0)),\n+      (5, Vectors.dense(9.1, 9.1, 9.1)),\n+      (6, Vectors.dense(9.2, 9.2, 9.2))\n+    )).toDF(\"id\", \"features\")\n+\n+    // Trains Gaussian Mixture Model\n+    val gmm = new GaussianMixture()\n+      .setK(2)\n+      .setFeaturesCol(\"features\")\n+      .setPredictionCol(\"prediction\")\n+      .setTol(0.0001)\n+      .setMaxIter(10)\n+      .setSeed(10)\n+    val model = gmm.fit(dataset)\n+\n+    // Shows the result\n+    val summary: GaussianMixtureSummary = model.summary\n+    println(\"Size of (number of data points in) each cluster: \")\n+    println(summary.clusterSizes.foreach(println))"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "sethah"
    },
    "body": "Why are we creating our own data here, but we use \"gmm_data.txt\" in mllib example? \n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-04T22:05:43Z",
    "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureSummary}\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.sql.{DataFrame, SQLContext}\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a Spark context and a SQL context\n+    val conf = new SparkConf().setAppName(s\"${this.getClass.getSimpleName}\")\n+    val sc = new SparkContext(conf)\n+    val sqlContext = new SQLContext(sc)\n+\n+    // $example on$\n+    // Crates a DataFrame\n+    val dataset: DataFrame = sqlContext.createDataFrame(Seq("
  }, {
    "author": {
      "login": "yanboliang"
    },
    "body": "+1 @sethah It's better to use `gmm_data.txt` rather than creating new dataset.\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-05T13:24:21Z",
    "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureSummary}\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.sql.{DataFrame, SQLContext}\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a Spark context and a SQL context\n+    val conf = new SparkConf().setAppName(s\"${this.getClass.getSimpleName}\")\n+    val sc = new SparkContext(conf)\n+    val sqlContext = new SQLContext(sc)\n+\n+    // $example on$\n+    // Crates a DataFrame\n+    val dataset: DataFrame = sqlContext.createDataFrame(Seq("
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "sethah"
    },
    "body": "typo: \"Creates\"\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-09T14:48:08Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureModel}\n+import org.apache.spark.mllib.linalg.{Vectors, VectorUDT}\n+import org.apache.spark.sql.{DataFrame, Row, SparkSession}\n+import org.apache.spark.sql.types.{StructField, StructType}\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a SparkSession\n+    val spark = SparkSession.builder.appName(s\"${this.getClass.getSimpleName}\").getOrCreate()\n+    val input = \"data/mllib/gmm_data.txt\"\n+\n+    // $example on$\n+    // Crates a DataFrame"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "sethah"
    },
    "body": "I'd like to avoid converting this to RDD in the example. You can see the discussion on [11844](https://github.com/apache/spark/pull/11844). The concern I have is that creating a new libsvm file for the gmm data will create _another_ text file with 2000 rows, whereas the kmeans data was 6 rows. Thoughts? @MLnick \n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-09T14:52:10Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureModel}\n+import org.apache.spark.mllib.linalg.{Vectors, VectorUDT}\n+import org.apache.spark.sql.{DataFrame, Row, SparkSession}\n+import org.apache.spark.sql.types.{StructField, StructType}\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a SparkSession\n+    val spark = SparkSession.builder.appName(s\"${this.getClass.getSimpleName}\").getOrCreate()\n+    val input = \"data/mllib/gmm_data.txt\"\n+\n+    // $example on$\n+    // Crates a DataFrame\n+    val rowRDD = spark.read.text(input).rdd.filter(_.nonEmpty)"
  }, {
    "author": {
      "login": "yanboliang"
    },
    "body": "Agree. We should generate a dataset with libsvm format used for `KMeans`, `GaussianMixture` and `BisectingKMeans` examples, then we can load it by `spark.read.format(\"libsvm\")` which could make code more succinct. It looks like #11844 has prepared the data, you can directly use it after that get merged.\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-09T15:13:54Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureModel}\n+import org.apache.spark.mllib.linalg.{Vectors, VectorUDT}\n+import org.apache.spark.sql.{DataFrame, Row, SparkSession}\n+import org.apache.spark.sql.types.{StructField, StructType}\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a SparkSession\n+    val spark = SparkSession.builder.appName(s\"${this.getClass.getSimpleName}\").getOrCreate()\n+    val input = \"data/mllib/gmm_data.txt\"\n+\n+    // $example on$\n+    // Crates a DataFrame\n+    val rowRDD = spark.read.text(input).rdd.filter(_.nonEmpty)"
  }, {
    "author": {
      "login": "wangmiao1981"
    },
    "body": "@yanboliang I think using the svm data is better but using the kmeans file might be confusing for users to learn gmm. We can copy the kmeans svm file to gmm file. @sethah Do you think copying kmeans data to a separate gmm file is good for this example? Thanks!\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-09T16:57:41Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureModel}\n+import org.apache.spark.mllib.linalg.{Vectors, VectorUDT}\n+import org.apache.spark.sql.{DataFrame, Row, SparkSession}\n+import org.apache.spark.sql.types.{StructField, StructType}\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a SparkSession\n+    val spark = SparkSession.builder.appName(s\"${this.getClass.getSimpleName}\").getOrCreate()\n+    val input = \"data/mllib/gmm_data.txt\"\n+\n+    // $example on$\n+    // Crates a DataFrame\n+    val rowRDD = spark.read.text(input).rdd.filter(_.nonEmpty)"
  }, {
    "author": {
      "login": "sethah"
    },
    "body": "I don't think it's necessary, to be honest. We could change the name of the kmeans data to be something like `clustering_data.txt`, but I think it's fine to just use the kmeans file here. It would be a bit excessive to create two separate files with exactly the same data to me. @zhengruifeng \n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-09T18:11:41Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureModel}\n+import org.apache.spark.mllib.linalg.{Vectors, VectorUDT}\n+import org.apache.spark.sql.{DataFrame, Row, SparkSession}\n+import org.apache.spark.sql.types.{StructField, StructType}\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a SparkSession\n+    val spark = SparkSession.builder.appName(s\"${this.getClass.getSimpleName}\").getOrCreate()\n+    val input = \"data/mllib/gmm_data.txt\"\n+\n+    // $example on$\n+    // Crates a DataFrame\n+    val rowRDD = spark.read.text(input).rdd.filter(_.nonEmpty)"
  }, {
    "author": {
      "login": "MLnick"
    },
    "body": "Agree, using the same kmeans libsvm data is fine. It's just for\nillustrative purposes.\nOn Mon, 9 May 2016 at 20:12, Seth Hendrickson notifications@github.com\nwrote:\n\n> In\n> examples/src/main/scala/org/apache/spark/examples/ml/GaussianMixtureExample.scala\n> https://github.com/apache/spark/pull/12788#discussion_r62545534:\n> \n> > +/**\n> > - \\* An example demonstrating Gaussian Mixture Model (GMM).\n> > - \\* Run with\n> > - \\* {{{\n> > - \\* bin/run-example ml.GaussianMixtureExample\n> > - \\* }}}\n> > - */\n> >   +object GaussianMixtureExample {\n> > -  def main(args: Array[String]): Unit = {\n> > -    // Creates a SparkSession\n> > -    val spark = SparkSession.builder.appName(s\"${this.getClass.getSimpleName}\").getOrCreate()\n> > -    val input = \"data/mllib/gmm_data.txt\"\n> >   +\n> > -    // $example on$\n> > -    // Crates a DataFrame\n> > -    val rowRDD = spark.read.text(input).rdd.filter(_.nonEmpty)\n> \n> I don't think it's necessary, to be honest. We could change the name of\n> the kmeans data to be something like clustering_data.txt, but I think\n> it's fine to just use the kmeans file here. It would be a bit excessive to\n> create two separate files with exactly the same data to me. @zhengruifeng\n> https://github.com/zhengruifeng\n> \n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/spark/pull/12788/files/4b5152a43062f382983ecb8084536cdd2c3849d2#r62545534\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-09T19:34:55Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureModel}\n+import org.apache.spark.mllib.linalg.{Vectors, VectorUDT}\n+import org.apache.spark.sql.{DataFrame, Row, SparkSession}\n+import org.apache.spark.sql.types.{StructField, StructType}\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a SparkSession\n+    val spark = SparkSession.builder.appName(s\"${this.getClass.getSimpleName}\").getOrCreate()\n+    val input = \"data/mllib/gmm_data.txt\"\n+\n+    // $example on$\n+    // Crates a DataFrame\n+    val rowRDD = spark.read.text(input).rdd.filter(_.nonEmpty)"
  }, {
    "author": {
      "login": "wangmiao1981"
    },
    "body": "ok. I will make changes once #11844 is merged.\n\nThanks!\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-09T21:10:06Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureModel}\n+import org.apache.spark.mllib.linalg.{Vectors, VectorUDT}\n+import org.apache.spark.sql.{DataFrame, Row, SparkSession}\n+import org.apache.spark.sql.types.{StructField, StructType}\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a SparkSession\n+    val spark = SparkSession.builder.appName(s\"${this.getClass.getSimpleName}\").getOrCreate()\n+    val input = \"data/mllib/gmm_data.txt\"\n+\n+    // $example on$\n+    // Crates a DataFrame\n+    val rowRDD = spark.read.text(input).rdd.filter(_.nonEmpty)"
  }, {
    "author": {
      "login": "yanboliang"
    },
    "body": "#11844 has been merged and you can restore this work now.\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-12T12:51:16Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureModel}\n+import org.apache.spark.mllib.linalg.{Vectors, VectorUDT}\n+import org.apache.spark.sql.{DataFrame, Row, SparkSession}\n+import org.apache.spark.sql.types.{StructField, StructType}\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a SparkSession\n+    val spark = SparkSession.builder.appName(s\"${this.getClass.getSimpleName}\").getOrCreate()\n+    val input = \"data/mllib/gmm_data.txt\"\n+\n+    // $example on$\n+    // Crates a DataFrame\n+    val rowRDD = spark.read.text(input).rdd.filter(_.nonEmpty)"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "zhengruifeng"
    },
    "body": "Loads\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-13T02:24:32Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureModel}\n+import org.apache.spark.sql.SparkSession\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a SparkSession\n+    val spark = SparkSession.builder.appName(s\"${this.getClass.getSimpleName}\").getOrCreate()\n+\n+    // $example on$\n+    // Load data"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "zhengruifeng"
    },
    "body": "keep the args in line with java one\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-13T02:25:12Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureModel}\n+import org.apache.spark.sql.SparkSession\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a SparkSession\n+    val spark = SparkSession.builder.appName(s\"${this.getClass.getSimpleName}\").getOrCreate()\n+\n+    // $example on$\n+    // Load data\n+    val dataset = spark.read.format(\"libsvm\").load(\"data/mllib/sample_kmeans_data.txt\")\n+\n+    // Trains Gaussian Mixture Model\n+    val gmm = new GaussianMixture()\n+      .setK(2)\n+      .setFeaturesCol(\"features\")"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "zhengruifeng"
    },
    "body": "`max-likelihood model` -> `mixture model`\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-13T02:26:55Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureModel}\n+import org.apache.spark.sql.SparkSession\n+// $example off$\n+\n+/**\n+ * An example demonstrating Gaussian Mixture Model (GMM).\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.GaussianMixtureExample\n+ * }}}\n+ */\n+object GaussianMixtureExample {\n+  def main(args: Array[String]): Unit = {\n+    // Creates a SparkSession\n+    val spark = SparkSession.builder.appName(s\"${this.getClass.getSimpleName}\").getOrCreate()\n+\n+    // $example on$\n+    // Load data\n+    val dataset = spark.read.format(\"libsvm\").load(\"data/mllib/sample_kmeans_data.txt\")\n+\n+    // Trains Gaussian Mixture Model\n+    val gmm = new GaussianMixture()\n+      .setK(2)\n+      .setFeaturesCol(\"features\")\n+      .setPredictionCol(\"prediction\")\n+      .setTol(0.0001)\n+      .setMaxIter(10)\n+      .setSeed(10)\n+    val model = gmm.fit(dataset)\n+\n+    // output parameters of max-likelihood model"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "zhengruifeng"
    },
    "body": "`GaussianMixtureModel` is not used\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-13T02:43:59Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.ml.clustering.{GaussianMixture, GaussianMixtureModel}"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "zhengruifeng"
    },
    "body": "`{SparkConf, SparkContext}` are not used\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-13T02:44:19Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml\n+\n+// scalastyle:off println\n+\n+import org.apache.spark.{SparkConf, SparkContext}"
  }],
  "prId": 12788
}]