[{
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "`def main(args: Array[String]):Unit = {`\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T05:40:43Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.mllib.stat.{MultivariateStatisticalSummary, Statistics}\n+// $example off$\n+\n+object SummaryStatisticsExample {\n+\n+  def main(args: Array[String]) {"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "2-indent for inline comment\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T05:41:07Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.mllib.stat.{MultivariateStatisticalSummary, Statistics}\n+// $example off$\n+\n+object SummaryStatisticsExample {\n+\n+  def main(args: Array[String]) {\n+\n+    val conf = new SparkConf().setAppName(\"SummaryStatisticsExample\")\n+    val sc = new SparkContext(conf)\n+\n+    // $example on$\n+    val v1 = Vectors.dense(1.0, 10.0, 100.0)\n+    val v2 = Vectors.dense(2.0, 20.0, 200.0)\n+    val v3 = Vectors.dense(3.0, 30.0, 300.0)\n+\n+    val observations = sc.parallelize(Seq(v1, v2, v3))\n+\n+    // Compute column summary statistics.\n+    val summary: MultivariateStatisticalSummary = Statistics.colStats(observations)\n+    println(summary.mean) // a dense vector containing the mean value for each column"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "ditto\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T05:41:13Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.mllib.stat.{MultivariateStatisticalSummary, Statistics}\n+// $example off$\n+\n+object SummaryStatisticsExample {\n+\n+  def main(args: Array[String]) {\n+\n+    val conf = new SparkConf().setAppName(\"SummaryStatisticsExample\")\n+    val sc = new SparkContext(conf)\n+\n+    // $example on$\n+    val v1 = Vectors.dense(1.0, 10.0, 100.0)\n+    val v2 = Vectors.dense(2.0, 20.0, 200.0)\n+    val v3 = Vectors.dense(3.0, 30.0, 300.0)\n+\n+    val observations = sc.parallelize(Seq(v1, v2, v3))\n+\n+    // Compute column summary statistics.\n+    val summary: MultivariateStatisticalSummary = Statistics.colStats(observations)\n+    println(summary.mean) // a dense vector containing the mean value for each column\n+    println(summary.variance) // column-wise variance"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "ditto\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T05:41:18Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.mllib.stat.{MultivariateStatisticalSummary, Statistics}\n+// $example off$\n+\n+object SummaryStatisticsExample {\n+\n+  def main(args: Array[String]) {\n+\n+    val conf = new SparkConf().setAppName(\"SummaryStatisticsExample\")\n+    val sc = new SparkContext(conf)\n+\n+    // $example on$\n+    val v1 = Vectors.dense(1.0, 10.0, 100.0)\n+    val v2 = Vectors.dense(2.0, 20.0, 200.0)\n+    val v3 = Vectors.dense(3.0, 30.0, 300.0)\n+\n+    val observations = sc.parallelize(Seq(v1, v2, v3))\n+\n+    // Compute column summary statistics.\n+    val summary: MultivariateStatisticalSummary = Statistics.colStats(observations)\n+    println(summary.mean) // a dense vector containing the mean value for each column\n+    println(summary.variance) // column-wise variance\n+    println(summary.numNonzeros) // number of nonzeros in each column"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Embed v1, v2, v3.\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-16T23:43:42Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.mllib.stat.{MultivariateStatisticalSummary, Statistics}\n+// $example off$\n+\n+object SummaryStatisticsExample {\n+\n+  def main(args: Array[String]): Unit = {\n+\n+    val conf = new SparkConf().setAppName(\"SummaryStatisticsExample\")\n+    val sc = new SparkContext(conf)\n+\n+    // $example on$\n+    val v1 = Vectors.dense(1.0, 10.0, 100.0)\n+    val v2 = Vectors.dense(2.0, 20.0, 200.0)\n+    val v3 = Vectors.dense(3.0, 30.0, 300.0)\n+\n+    val observations = sc.parallelize(Seq(v1, v2, v3))"
  }],
  "prId": 11108
}]