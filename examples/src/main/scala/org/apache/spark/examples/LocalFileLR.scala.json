[{
  "comments": [{
    "author": {
      "login": "mateiz"
    },
    "body": "Let's not rename them in this PR, it might just confuse people. If you import Vector it should take precedence over the scala.Vector class.\n",
    "commit": "a43638e5afece89dccaa5df80a1f16caf952bd43",
    "createdAt": "2014-04-15T20:01:12Z",
    "diffHunk": "@@ -18,17 +18,17 @@\n package org.apache.spark.examples\n \n import java.util.Random\n-import org.apache.spark.util.Vector\n+import breeze.linalg.{Vector => BV, DenseVector => BDV}"
  }, {
    "author": {
      "login": "techaddict"
    },
    "body": "Ya right. Fixed\n",
    "commit": "a43638e5afece89dccaa5df80a1f16caf952bd43",
    "createdAt": "2014-04-15T20:53:19Z",
    "diffHunk": "@@ -18,17 +18,17 @@\n package org.apache.spark.examples\n \n import java.util.Random\n-import org.apache.spark.util.Vector\n+import breeze.linalg.{Vector => BV, DenseVector => BDV}"
  }],
  "prId": 416
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Should use `rand.nextDouble()` instead of `rand.nextDouble` because it changes the internal state of `rand`.\n",
    "commit": "a43638e5afece89dccaa5df80a1f16caf952bd43",
    "createdAt": "2014-04-16T03:28:11Z",
    "diffHunk": "@@ -37,15 +37,15 @@ object LocalFileLR {\n     val ITERATIONS = args(1).toInt\n \n     // Initialize w to a random value\n-    var w = Vector(D, _ => 2 * rand.nextDouble - 1)\n+    var w = DenseVector.fill(D){2 * rand.nextDouble - 1}",
    "line": 27
  }, {
    "author": {
      "login": "mengxr"
    },
    "body": "This is not related to this PR, but it would be great if you update it in the next pass.\n",
    "commit": "a43638e5afece89dccaa5df80a1f16caf952bd43",
    "createdAt": "2014-04-16T03:29:07Z",
    "diffHunk": "@@ -37,15 +37,15 @@ object LocalFileLR {\n     val ITERATIONS = args(1).toInt\n \n     // Initialize w to a random value\n-    var w = Vector(D, _ => 2 * rand.nextDouble - 1)\n+    var w = DenseVector.fill(D){2 * rand.nextDouble - 1}",
    "line": 27
  }],
  "prId": 416
}]