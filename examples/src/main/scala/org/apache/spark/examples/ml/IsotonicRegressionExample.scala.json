[{
  "comments": [{
    "author": {
      "login": "yanboliang"
    },
    "body": "Ditto, use libsvm format.\n",
    "commit": "937694e6787b15fd53bf0e381b07addaadf8ed7a",
    "createdAt": "2016-05-31T15:33:35Z",
    "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+\n+package org.apache.spark.examples.ml\n+\n+// $example on$\n+import org.apache.spark.ml.regression.IsotonicRegression\n+// $example off$\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.SparkSession\n+import org.apache.spark.sql.types.{DoubleType, StructType}\n+\n+/**\n+ * An example demonstrating Isotonic Regression.\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.IsotonicRegressionExample\n+ * }}}\n+ */\n+object IsotonicRegressionExample {\n+\n+  def main(args: Array[String]): Unit = {\n+\n+    // Creates a SparkSession.\n+    val spark = SparkSession\n+      .builder\n+      .appName(s\"${this.getClass.getSimpleName}\")\n+      .getOrCreate()\n+    // $example on$\n+    val ir = new IsotonicRegression().setIsotonic(true)\n+      .setLabelCol(\"label\").setFeaturesCol(\"features\").setWeightCol(\"weight\")\n+\n+    val dataReader = spark.read\n+    dataReader.schema(new StructType().add(\"label\", DoubleType).add(\"features\", DoubleType))\n+\n+    var data = dataReader.csv(\"data/mllib/sample_isotonic_regression_data.txt\")"
  }],
  "prId": 13381
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "\"show\" --> \"show()\"\n",
    "commit": "937694e6787b15fd53bf0e381b07addaadf8ed7a",
    "createdAt": "2016-06-11T01:28:42Z",
    "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.ml\n+\n+// $example on$\n+import org.apache.spark.ml.regression.IsotonicRegression\n+// $example off$\n+import org.apache.spark.sql.SparkSession\n+\n+/**\n+ * An example demonstrating Isotonic Regression.\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.IsotonicRegressionExample\n+ * }}}\n+ */\n+object IsotonicRegressionExample {\n+\n+  def main(args: Array[String]): Unit = {\n+\n+    // Creates a SparkSession.\n+    val spark = SparkSession\n+      .builder\n+      .appName(s\"${this.getClass.getSimpleName}\")\n+      .getOrCreate()\n+\n+    // $example on$\n+    // Loads data.\n+    val dataset = spark.read.format(\"libsvm\")\n+      .load(\"data/mllib/sample_isotonic_regression_libsvm_data.txt\")\n+\n+    // Trains an isotonic regression model.\n+    val ir = new IsotonicRegression()\n+    val model = ir.fit(dataset)\n+\n+    println(s\"Boundaries in increasing order: ${model.boundaries}\")\n+    println(s\"Predictions associated with the boundaries: ${model.predictions}\")\n+\n+    // Makes predictions.\n+    model.transform(dataset).show"
  }, {
    "author": {
      "login": "WeichenXu123"
    },
    "body": "@jkbradley Done.\n",
    "commit": "937694e6787b15fd53bf0e381b07addaadf8ed7a",
    "createdAt": "2016-06-11T04:28:36Z",
    "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.ml\n+\n+// $example on$\n+import org.apache.spark.ml.regression.IsotonicRegression\n+// $example off$\n+import org.apache.spark.sql.SparkSession\n+\n+/**\n+ * An example demonstrating Isotonic Regression.\n+ * Run with\n+ * {{{\n+ * bin/run-example ml.IsotonicRegressionExample\n+ * }}}\n+ */\n+object IsotonicRegressionExample {\n+\n+  def main(args: Array[String]): Unit = {\n+\n+    // Creates a SparkSession.\n+    val spark = SparkSession\n+      .builder\n+      .appName(s\"${this.getClass.getSimpleName}\")\n+      .getOrCreate()\n+\n+    // $example on$\n+    // Loads data.\n+    val dataset = spark.read.format(\"libsvm\")\n+      .load(\"data/mllib/sample_isotonic_regression_libsvm_data.txt\")\n+\n+    // Trains an isotonic regression model.\n+    val ir = new IsotonicRegression()\n+    val model = ir.fit(dataset)\n+\n+    println(s\"Boundaries in increasing order: ${model.boundaries}\")\n+    println(s\"Predictions associated with the boundaries: ${model.predictions}\")\n+\n+    // Makes predictions.\n+    model.transform(dataset).show"
  }],
  "prId": 13381
}]