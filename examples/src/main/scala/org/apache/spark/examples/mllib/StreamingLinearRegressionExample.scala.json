[{
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "this line should above the `// $example on$`\n",
    "commit": "90004058248ed356252fddcfc86bdc913175b644",
    "createdAt": "2016-02-26T08:56:29Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+// $example on$\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.mllib.regression.LabeledPoint\n+import org.apache.spark.mllib.regression.StreamingLinearRegressionWithSGD\n+// $example off$\n+import org.apache.spark.SparkConf"
  }],
  "prId": 11320
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "2-idnent for scala code\n",
    "commit": "90004058248ed356252fddcfc86bdc913175b644",
    "createdAt": "2016-02-26T08:59:09Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+// $example on$\n+import org.apache.spark.mllib.linalg.Vectors\n+import org.apache.spark.mllib.regression.LabeledPoint\n+import org.apache.spark.mllib.regression.StreamingLinearRegressionWithSGD\n+// $example off$\n+import org.apache.spark.SparkConf\n+import org.apache.spark.streaming._\n+\n+object StreamingLinearRegressionExample {\n+\n+  def main(args: Array[String]): Unit = {\n+    if (args.length != 2) {\n+      System.err.println(\"Usage: StreamingLinearRegressionExample <trainingDir> <testDir>\")\n+      System.exit(1)\n+    }\n+\n+    val conf = new SparkConf().setAppName(\"StreamingLinearRegressionExample\")\n+    val ssc = new StreamingContext(conf, Seconds(1))\n+\n+    // $example on$\n+    val trainingData = ssc.textFileStream(args(0)).map(LabeledPoint.parse).cache()\n+    val testData = ssc.textFileStream(args(1)).map(LabeledPoint.parse)\n+\n+    val numFeatures = 3\n+    val model = new StreamingLinearRegressionWithSGD()\n+        .setInitialWeights(Vectors.zeros(numFeatures))"
  }],
  "prId": 11320
}]