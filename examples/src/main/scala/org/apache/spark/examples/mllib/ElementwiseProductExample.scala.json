[{
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "Move SparkContext out of example on and off\n",
    "commit": "3513e0f63ed88479052266db5ddc0f22aab175a2",
    "createdAt": "2016-02-21T02:49:34Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+import org.apache.spark.SparkConf\n+// $example on$\n+import org.apache.spark.SparkContext"
  }],
  "prId": 11142
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "add outputs of `transformedData` and `transformedData2`\n",
    "commit": "3513e0f63ed88479052266db5ddc0f22aab175a2",
    "createdAt": "2016-02-21T02:51:03Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+import org.apache.spark.SparkConf\n+// $example on$\n+import org.apache.spark.SparkContext\n+import org.apache.spark.mllib.feature.ElementwiseProduct\n+import org.apache.spark.mllib.linalg.Vectors\n+// $example off$\n+\n+object ElementwiseProductExample {\n+\n+  def main(args: Array[String]) {\n+\n+    val conf = new SparkConf().setAppName(\"ElementwiseProductExample\")\n+    val sc = new SparkContext(conf)\n+\n+    // $example on$\n+    // Create some vector data; also works for sparse vectors\n+    val data = sc.parallelize(Array(Vectors.dense(1.0, 2.0, 3.0), Vectors.dense(4.0, 5.0, 6.0)))\n+\n+    val transformingVector = Vectors.dense(0.0, 1.0, 2.0)\n+    val transformer = new ElementwiseProduct(transformingVector)\n+\n+    // Batch transform and per-row transform give the same results:\n+    val transformedData = transformer.transform(data)\n+    val transformedData2 = data.map(x => transformer.transform(x))\n+    // $example off$\n+",
    "line": 46
  }],
  "prId": 11142
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "def main(args: Array[String]): Unit = {\n",
    "commit": "3513e0f63ed88479052266db5ddc0f22aab175a2",
    "createdAt": "2016-02-21T02:58:35Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+import org.apache.spark.SparkConf\n+// $example on$\n+import org.apache.spark.SparkContext\n+import org.apache.spark.mllib.feature.ElementwiseProduct\n+import org.apache.spark.mllib.linalg.Vectors\n+// $example off$\n+\n+object ElementwiseProductExample {\n+\n+  def main(args: Array[String]) {"
  }],
  "prId": 11142
}]