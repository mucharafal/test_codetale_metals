[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Go ahead and put the print on a new line (I know it wasn't before)",
    "commit": "e891f53dfd609ef9cb46f70147c59f1113c7c0cb",
    "createdAt": "2017-12-30T21:30:58Z",
    "diffHunk": "@@ -42,11 +42,11 @@ object LatentDirichletAllocationExample {\n     val ldaModel = new LDA().setK(3).run(corpus)\n \n     // Output topics. Each is a distribution over words (matching word count vectors)\n-    println(\"Learned topics (as distributions over vocab of \" + ldaModel.vocabSize + \" words):\")\n+    println(s\"Learned topics (as distributions over vocab of ${ldaModel.vocabSize} words):\")\n     val topics = ldaModel.topicsMatrix\n     for (topic <- Range(0, 3)) {\n-      print(\"Topic \" + topic + \":\")\n-      for (word <- Range(0, ldaModel.vocabSize)) { print(\" \" + topics(word, topic)); }\n+      print(s\"Topic $topic :\")\n+      for (word <- Range(0, ldaModel.vocabSize)) { print(s\" ${topics(word, topic)}\") }"
  }, {
    "author": {
      "login": "chetkhatri"
    },
    "body": "@srowen Thanks for suggestion, it has been addressed.",
    "commit": "e891f53dfd609ef9cb46f70147c59f1113c7c0cb",
    "createdAt": "2017-12-31T06:44:14Z",
    "diffHunk": "@@ -42,11 +42,11 @@ object LatentDirichletAllocationExample {\n     val ldaModel = new LDA().setK(3).run(corpus)\n \n     // Output topics. Each is a distribution over words (matching word count vectors)\n-    println(\"Learned topics (as distributions over vocab of \" + ldaModel.vocabSize + \" words):\")\n+    println(s\"Learned topics (as distributions over vocab of ${ldaModel.vocabSize} words):\")\n     val topics = ldaModel.topicsMatrix\n     for (topic <- Range(0, 3)) {\n-      print(\"Topic \" + topic + \":\")\n-      for (word <- Range(0, ldaModel.vocabSize)) { print(\" \" + topics(word, topic)); }\n+      print(s\"Topic $topic :\")\n+      for (word <- Range(0, ldaModel.vocabSize)) { print(s\" ${topics(word, topic)}\") }"
  }],
  "prId": 20070
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "No, we put the open brace on the preceding line with for, and don't triple indent. See any other for loop in the code.",
    "commit": "e891f53dfd609ef9cb46f70147c59f1113c7c0cb",
    "createdAt": "2017-12-31T16:52:08Z",
    "diffHunk": "@@ -46,7 +46,10 @@ object LatentDirichletAllocationExample {\n     val topics = ldaModel.topicsMatrix\n     for (topic <- Range(0, 3)) {\n       print(s\"Topic $topic :\")\n-      for (word <- Range(0, ldaModel.vocabSize)) { print(s\" ${topics(word, topic)}\") }\n+      for (word <- Range(0, ldaModel.vocabSize))\n+          {"
  }, {
    "author": {
      "login": "chetkhatri"
    },
    "body": "@srowen sure done.",
    "commit": "e891f53dfd609ef9cb46f70147c59f1113c7c0cb",
    "createdAt": "2018-01-01T10:04:38Z",
    "diffHunk": "@@ -46,7 +46,10 @@ object LatentDirichletAllocationExample {\n     val topics = ldaModel.topicsMatrix\n     for (topic <- Range(0, 3)) {\n       print(s\"Topic $topic :\")\n-      for (word <- Range(0, ldaModel.vocabSize)) { print(s\" ${topics(word, topic)}\") }\n+      for (word <- Range(0, ldaModel.vocabSize))\n+          {"
  }],
  "prId": 20070
}]