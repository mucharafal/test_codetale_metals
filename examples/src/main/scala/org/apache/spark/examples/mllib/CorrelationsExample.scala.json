[{
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "``` scala\nimport org.apache.spark.{SparkConf, SparkContext}\n// $example on$\nimport org.apache.spark.mllib.linalg._\nimport org.apache.spark.mllib.stat.Statistics\nimport org.apache.spark.rdd.RDD\n// $example off$\n```\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T05:51:03Z",
    "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+import org.apache.spark.{SparkConf, SparkContext}",
    "line": 21
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "def main(args: Array[String]): Unit = {\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T05:51:20Z",
    "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.mllib.linalg._\n+import org.apache.spark.mllib.stat.Statistics\n+// $example off$\n+import org.apache.spark.rdd.RDD\n+\n+object CorrelationsExample {\n+\n+  def main(args: Array[String]) {"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "2-indent for inline comment\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T05:52:54Z",
    "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.mllib.linalg._\n+import org.apache.spark.mllib.stat.Statistics\n+// $example off$\n+import org.apache.spark.rdd.RDD\n+\n+object CorrelationsExample {\n+\n+  def main(args: Array[String]) {\n+\n+    val conf = new SparkConf().setAppName(\"CorrelationsExample\")\n+    val sc = new SparkContext(conf)\n+\n+    // $example on$\n+    val seriesX: RDD[Double] = sc.parallelize(Array(1, 2, 3, 3, 5)) // a series"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "`println(s\"Correlation is: $correlation\")`\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T05:56:51Z",
    "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.mllib.linalg._\n+import org.apache.spark.mllib.stat.Statistics\n+// $example off$\n+import org.apache.spark.rdd.RDD\n+\n+object CorrelationsExample {\n+\n+  def main(args: Array[String]) {\n+\n+    val conf = new SparkConf().setAppName(\"CorrelationsExample\")\n+    val sc = new SparkContext(conf)\n+\n+    // $example on$\n+    val seriesX: RDD[Double] = sc.parallelize(Array(1, 2, 3, 3, 5)) // a series\n+    val seriesY: RDD[Double] = sc.parallelize(Array(11, 22, 33, 33, 555))\n+    // must have the same number of partitions and cardinality as seriesX\n+\n+    // compute the correlation using Pearson's method. Enter \"spearman\" for Spearman's method. If a\n+    // method is not specified, Pearson's method will be used by default.\n+    val correlation: Double = Statistics.corr(seriesX, seriesY, \"pearson\")\n+    println(correlation)"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "It's strange to have a comment below a code. Let's move it up.\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-07T20:19:38Z",
    "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.mllib.linalg._\n+import org.apache.spark.mllib.stat.Statistics\n+import org.apache.spark.rdd.RDD\n+// $example off$\n+\n+object CorrelationsExample {\n+\n+  def main(args: Array[String]): Unit = {\n+\n+    val conf = new SparkConf().setAppName(\"CorrelationsExample\")\n+    val sc = new SparkContext(conf)\n+\n+    // $example on$\n+    val seriesX: RDD[Double] = sc.parallelize(Array(1, 2, 3, 3, 5))  // a series\n+    val seriesY: RDD[Double] = sc.parallelize(Array(11, 22, 33, 33, 555))\n+    // must have the same number of partitions and cardinality as seriesX"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "2-indent here\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-07T20:19:48Z",
    "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// scalastyle:off println\n+package org.apache.spark.examples.mllib\n+\n+import org.apache.spark.{SparkConf, SparkContext}\n+// $example on$\n+import org.apache.spark.mllib.linalg._\n+import org.apache.spark.mllib.stat.Statistics\n+import org.apache.spark.rdd.RDD\n+// $example off$\n+\n+object CorrelationsExample {\n+\n+  def main(args: Array[String]): Unit = {\n+\n+    val conf = new SparkConf().setAppName(\"CorrelationsExample\")\n+    val sc = new SparkContext(conf)\n+\n+    // $example on$\n+    val seriesX: RDD[Double] = sc.parallelize(Array(1, 2, 3, 3, 5))  // a series\n+    val seriesY: RDD[Double] = sc.parallelize(Array(11, 22, 33, 33, 555))\n+    // must have the same number of partitions and cardinality as seriesX\n+\n+    // compute the correlation using Pearson's method. Enter \"spearman\" for Spearman's method. If a\n+    // method is not specified, Pearson's method will be used by default.\n+    val correlation: Double = Statistics.corr(seriesX, seriesY, \"pearson\")\n+    println(s\"Correlation is: $correlation\")\n+\n+    val data: RDD[Vector] = sc.parallelize(\n+      Seq(\n+        Vectors.dense(1.0, 10.0, 100.0),\n+        Vectors.dense(2.0, 20.0, 200.0),\n+        Vectors.dense(5.0, 33.0, 366.0))\n+    ) // note that each Vector is a row and not a column"
  }],
  "prId": 11108
}]