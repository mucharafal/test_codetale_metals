[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "It didn't like the lack of newline at the end of this file",
    "commit": "e891f53dfd609ef9cb46f70147c59f1113c7c0cb",
    "createdAt": "2017-12-28T13:51:05Z",
    "diffHunk": "@@ -42,14 +42,13 @@ object AssociationRulesExample {\n     val results = ar.run(freqItemsets)\n \n     results.collect().foreach { rule =>\n-      println(\"[\" + rule.antecedent.mkString(\",\")\n-        + \"=>\"\n-        + rule.consequent.mkString(\",\") + \"],\" + rule.confidence)\n+    println(s\"[${rule.antecedent.mkString(\",\")}=>${rule.consequent.mkString(\",\")} ]\" +\n+        s\" ${rule.confidence}\")\n     }\n     // $example off$\n \n     sc.stop()\n   }\n \n }\n-// scalastyle:on println\n+// scalastyle:on println"
  }, {
    "author": {
      "login": "chetkhatri"
    },
    "body": "Done, addressed.",
    "commit": "e891f53dfd609ef9cb46f70147c59f1113c7c0cb",
    "createdAt": "2017-12-28T17:57:02Z",
    "diffHunk": "@@ -42,14 +42,13 @@ object AssociationRulesExample {\n     val results = ar.run(freqItemsets)\n \n     results.collect().foreach { rule =>\n-      println(\"[\" + rule.antecedent.mkString(\",\")\n-        + \"=>\"\n-        + rule.consequent.mkString(\",\") + \"],\" + rule.confidence)\n+    println(s\"[${rule.antecedent.mkString(\",\")}=>${rule.consequent.mkString(\",\")} ]\" +\n+        s\" ${rule.confidence}\")\n     }\n     // $example off$\n \n     sc.stop()\n   }\n \n }\n-// scalastyle:on println\n+// scalastyle:on println"
  }],
  "prId": 20070
}]