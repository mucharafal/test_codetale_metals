[{
  "comments": [{
    "author": {
      "login": "jaceklaskowski"
    },
    "body": "A typo - s/Basis/Basic\n",
    "commit": "9320bf8b5371672c8688b80abc530aa920cb82b7",
    "createdAt": "2015-12-12T03:51:05Z",
    "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples;\n+\n+import com.sun.jersey.core.util.Base64;\n+\n+import java.io.IOException;\n+import java.io.UnsupportedEncodingException;\n+import java.util.StringTokenizer;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+\n+/**\n+ *  Servlet filter example for Spark web UI.\n+ *  BasisAuthFilter provides a functionality of basic authentication."
  }],
  "prId": 10273
}, {
  "comments": [{
    "author": {
      "login": "jaceklaskowski"
    },
    "body": "The credentials of the filter are...\n",
    "commit": "9320bf8b5371672c8688b80abc530aa920cb82b7",
    "createdAt": "2015-12-12T03:51:29Z",
    "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples;\n+\n+import com.sun.jersey.core.util.Base64;\n+\n+import java.io.IOException;\n+import java.io.UnsupportedEncodingException;\n+import java.util.StringTokenizer;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+\n+/**\n+ *  Servlet filter example for Spark web UI.\n+ *  BasisAuthFilter provides a functionality of basic authentication.\n+ *  The credential of this filter is for \"spark-user:spark-password\"."
  }],
  "prId": 10273
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "This seems excessively complex as an example of a filter. I don't think it's a great example either since it doesn't show authenticating against an actual domain. There are a lot of style problems in this code to. I would not merge this.\n",
    "commit": "9320bf8b5371672c8688b80abc530aa920cb82b7",
    "createdAt": "2015-12-12T08:47:43Z",
    "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples;\n+\n+import com.sun.jersey.core.util.Base64;\n+\n+import java.io.IOException;\n+import java.io.UnsupportedEncodingException;\n+import java.util.StringTokenizer;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+\n+/**\n+ *  Servlet filter example for Spark web UI.\n+ *  BasicAuthFilter provides a functionality of basic authentication.\n+ *  The credentials of the filter are \"spark-user:spark-password\".\n+ *\n+ *  Usage:\n+ *\n+ *  $ $SPARK_HOME/bin/spark-submit \\\n+ *      --jars examples/target/spark-examples_2.10-1.6.0-SNAPSHOT.jar \\\n+ *      --master <Master URL of your Spark cluster> \\\n+ *      --conf spark.ui.filters=org.apache.spark.examples.BasicAuthFilter\n+ *\n+ *  The web UI of your application will ask you username and password.\n+ *  Required credentials information is\n+ *    username: \"spark-user\"\n+ *    password: \"spark-password\"\n+ */\n+public class BasicAuthFilter implements Filter {",
    "line": 51
  }, {
    "author": {
      "login": "Lewuathe"
    },
    "body": "We can make this filter simpler to removing overkill validations and tokenizers. \n\nAlthough this filter is not against an actual domain (yet only hard-coded credentials), it was difficult to integrate servlet filter with our Spark environment with only [security documentation](https://spark.apache.org/docs/latest/security.html) for us. \nTherefore I think some type of filter example is helpful anyway. So could you give us an idea, if possible, what kind of scenario can be sufficient as an example for developers who are trying to integrate servlet filter with Spark cluster?\nOr writing sample code into documentation might be somewhat helpful.\n",
    "commit": "9320bf8b5371672c8688b80abc530aa920cb82b7",
    "createdAt": "2015-12-12T10:04:24Z",
    "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples;\n+\n+import com.sun.jersey.core.util.Base64;\n+\n+import java.io.IOException;\n+import java.io.UnsupportedEncodingException;\n+import java.util.StringTokenizer;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+\n+/**\n+ *  Servlet filter example for Spark web UI.\n+ *  BasicAuthFilter provides a functionality of basic authentication.\n+ *  The credentials of the filter are \"spark-user:spark-password\".\n+ *\n+ *  Usage:\n+ *\n+ *  $ $SPARK_HOME/bin/spark-submit \\\n+ *      --jars examples/target/spark-examples_2.10-1.6.0-SNAPSHOT.jar \\\n+ *      --master <Master URL of your Spark cluster> \\\n+ *      --conf spark.ui.filters=org.apache.spark.examples.BasicAuthFilter\n+ *\n+ *  The web UI of your application will ask you username and password.\n+ *  Required credentials information is\n+ *    username: \"spark-user\"\n+ *    password: \"spark-password\"\n+ */\n+public class BasicAuthFilter implements Filter {",
    "line": 51
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "You're reimplementing what other libraries and app servers can do for you already though. I don't think this belongs in Spark, especially as we'd have to clean up this code anyway.\n",
    "commit": "9320bf8b5371672c8688b80abc530aa920cb82b7",
    "createdAt": "2015-12-12T10:09:12Z",
    "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples;\n+\n+import com.sun.jersey.core.util.Base64;\n+\n+import java.io.IOException;\n+import java.io.UnsupportedEncodingException;\n+import java.util.StringTokenizer;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+\n+/**\n+ *  Servlet filter example for Spark web UI.\n+ *  BasicAuthFilter provides a functionality of basic authentication.\n+ *  The credentials of the filter are \"spark-user:spark-password\".\n+ *\n+ *  Usage:\n+ *\n+ *  $ $SPARK_HOME/bin/spark-submit \\\n+ *      --jars examples/target/spark-examples_2.10-1.6.0-SNAPSHOT.jar \\\n+ *      --master <Master URL of your Spark cluster> \\\n+ *      --conf spark.ui.filters=org.apache.spark.examples.BasicAuthFilter\n+ *\n+ *  The web UI of your application will ask you username and password.\n+ *  Required credentials information is\n+ *    username: \"spark-user\"\n+ *    password: \"spark-password\"\n+ */\n+public class BasicAuthFilter implements Filter {",
    "line": 51
  }, {
    "author": {
      "login": "Lewuathe"
    },
    "body": "Okay, thanks for comments.\n",
    "commit": "9320bf8b5371672c8688b80abc530aa920cb82b7",
    "createdAt": "2015-12-12T10:12:00Z",
    "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples;\n+\n+import com.sun.jersey.core.util.Base64;\n+\n+import java.io.IOException;\n+import java.io.UnsupportedEncodingException;\n+import java.util.StringTokenizer;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+\n+/**\n+ *  Servlet filter example for Spark web UI.\n+ *  BasicAuthFilter provides a functionality of basic authentication.\n+ *  The credentials of the filter are \"spark-user:spark-password\".\n+ *\n+ *  Usage:\n+ *\n+ *  $ $SPARK_HOME/bin/spark-submit \\\n+ *      --jars examples/target/spark-examples_2.10-1.6.0-SNAPSHOT.jar \\\n+ *      --master <Master URL of your Spark cluster> \\\n+ *      --conf spark.ui.filters=org.apache.spark.examples.BasicAuthFilter\n+ *\n+ *  The web UI of your application will ask you username and password.\n+ *  Required credentials information is\n+ *    username: \"spark-user\"\n+ *    password: \"spark-password\"\n+ */\n+public class BasicAuthFilter implements Filter {",
    "line": 51
  }],
  "prId": 10273
}]