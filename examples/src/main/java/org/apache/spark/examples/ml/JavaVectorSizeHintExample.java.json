[{
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "Do we need the above two lines?",
    "commit": "3055eec72bb71e7fe7d586903fbf8ea57a70fa82",
    "createdAt": "2018-01-18T00:53:42Z",
    "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml;\n+\n+import org.apache.spark.ml.feature.VectorAssembler;\n+import org.apache.spark.ml.feature.VectorSizeHint;\n+import org.apache.spark.ml.linalg.VectorUDT;\n+import org.apache.spark.ml.linalg.Vectors;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.SparkSession;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+\n+import java.util.Arrays;\n+\n+import static org.apache.spark.sql.types.DataTypes.*;\n+\n+// $example on$\n+// $example off$"
  }],
  "prId": 20285
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Hi, @MrBago . It seems that we need to add one more row here.\r\n```java\r\nRowFactory.create(0, 18, 1.0, Vectors.dense(0.0, 10.0), 0.0);\r\n```",
    "commit": "3055eec72bb71e7fe7d586903fbf8ea57a70fa82",
    "createdAt": "2018-01-23T18:37:57Z",
    "diffHunk": "@@ -0,0 +1,78 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml;\n+\n+import org.apache.spark.sql.SparkSession;\n+\n+// $example on$\n+import java.util.Arrays;\n+\n+import org.apache.spark.ml.feature.VectorAssembler;\n+import org.apache.spark.ml.feature.VectorSizeHint;\n+import org.apache.spark.ml.linalg.VectorUDT;\n+import org.apache.spark.ml.linalg.Vectors;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+import static org.apache.spark.sql.types.DataTypes.*;\n+// $example off$\n+\n+public class JavaVectorSizeHintExample {\n+  public static void main(String[] args) {\n+    SparkSession spark = SparkSession\n+      .builder()\n+      .appName(\"JavaVectorSizeHintExample\")\n+      .getOrCreate();\n+\n+    // $example on$\n+    StructType schema = createStructType(new StructField[]{\n+      createStructField(\"id\", IntegerType, false),\n+      createStructField(\"hour\", IntegerType, false),\n+      createStructField(\"mobile\", DoubleType, false),\n+      createStructField(\"userFeatures\", new VectorUDT(), false),\n+      createStructField(\"clicked\", DoubleType, false)\n+    });\n+    Row row = RowFactory.create(0, 18, 1.0, Vectors.dense(0.0, 10.0, 0.5), 1.0);"
  }],
  "prId": 20285
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Can we use the same data set with the other code?\r\nI mean the second row is different from what I suggested and the other examples'.",
    "commit": "3055eec72bb71e7fe7d586903fbf8ea57a70fa82",
    "createdAt": "2018-01-23T18:50:51Z",
    "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml;\n+\n+import org.apache.spark.sql.SparkSession;\n+\n+// $example on$\n+import java.util.Arrays;\n+\n+import org.apache.spark.ml.feature.VectorAssembler;\n+import org.apache.spark.ml.feature.VectorSizeHint;\n+import org.apache.spark.ml.linalg.VectorUDT;\n+import org.apache.spark.ml.linalg.Vectors;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+import static org.apache.spark.sql.types.DataTypes.*;\n+// $example off$\n+\n+public class JavaVectorSizeHintExample {\n+  public static void main(String[] args) {\n+    SparkSession spark = SparkSession\n+      .builder()\n+      .appName(\"JavaVectorSizeHintExample\")\n+      .getOrCreate();\n+\n+    // $example on$\n+    StructType schema = createStructType(new StructField[]{\n+      createStructField(\"id\", IntegerType, false),\n+      createStructField(\"hour\", IntegerType, false),\n+      createStructField(\"mobile\", DoubleType, false),\n+      createStructField(\"userFeatures\", new VectorUDT(), false),\n+      createStructField(\"clicked\", DoubleType, false)\n+    });\n+    Row row0 = RowFactory.create(0, 18, 1.0, Vectors.dense(0.0, 10.0, 0.5), 1.0);\n+    Row row1 = RowFactory.create(0, 18, 1.0, Vectors.dense(0.0, 10.0, 0.5), 1.0);"
  }, {
    "author": {
      "login": "MrBago"
    },
    "body": "Sorry, yes should be fixed now.",
    "commit": "3055eec72bb71e7fe7d586903fbf8ea57a70fa82",
    "createdAt": "2018-01-23T18:53:40Z",
    "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml;\n+\n+import org.apache.spark.sql.SparkSession;\n+\n+// $example on$\n+import java.util.Arrays;\n+\n+import org.apache.spark.ml.feature.VectorAssembler;\n+import org.apache.spark.ml.feature.VectorSizeHint;\n+import org.apache.spark.ml.linalg.VectorUDT;\n+import org.apache.spark.ml.linalg.Vectors;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+import static org.apache.spark.sql.types.DataTypes.*;\n+// $example off$\n+\n+public class JavaVectorSizeHintExample {\n+  public static void main(String[] args) {\n+    SparkSession spark = SparkSession\n+      .builder()\n+      .appName(\"JavaVectorSizeHintExample\")\n+      .getOrCreate();\n+\n+    // $example on$\n+    StructType schema = createStructType(new StructField[]{\n+      createStructField(\"id\", IntegerType, false),\n+      createStructField(\"hour\", IntegerType, false),\n+      createStructField(\"mobile\", DoubleType, false),\n+      createStructField(\"userFeatures\", new VectorUDT(), false),\n+      createStructField(\"clicked\", DoubleType, false)\n+    });\n+    Row row0 = RowFactory.create(0, 18, 1.0, Vectors.dense(0.0, 10.0, 0.5), 1.0);\n+    Row row1 = RowFactory.create(0, 18, 1.0, Vectors.dense(0.0, 10.0, 0.5), 1.0);"
  }],
  "prId": 20285
}]