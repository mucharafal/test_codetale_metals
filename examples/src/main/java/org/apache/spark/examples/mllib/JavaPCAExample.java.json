[{
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "Merge this line with previous one.\n",
    "commit": "3b031da55b81b9440539dfe7ee9579fe4c656b9d",
    "createdAt": "2016-02-15T21:38:09Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+//$example on$\n+import java.util.LinkedList;\n+\n+import org.apache.spark.SparkConf;\n+import org.apache.spark.SparkContext;\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.mllib.linalg.Matrix;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+import org.apache.spark.mllib.linalg.distributed.RowMatrix;\n+//$example off$\n+\n+/**\n+ * Example for compute principal components on a 'RowMatrix'.\n+ */\n+public class JavaPCAExample {\n+  public static void main(String[] args) {\n+    SparkConf conf = new SparkConf().setAppName(\"PCA Example\");\n+    SparkContext sc = new SparkContext(conf);\n+\n+    // $example on$\n+    double[][] array = { { 1.12, 2.05, 3.12 }, { 5.56, 6.28, 8.94 },\n+      { 10.2, 8.0, 20.5 } };"
  }],
  "prId": 11132
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "Merge this line with previous one\n",
    "commit": "3b031da55b81b9440539dfe7ee9579fe4c656b9d",
    "createdAt": "2016-02-15T21:38:19Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+//$example on$\n+import java.util.LinkedList;\n+\n+import org.apache.spark.SparkConf;\n+import org.apache.spark.SparkContext;\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.mllib.linalg.Matrix;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+import org.apache.spark.mllib.linalg.distributed.RowMatrix;\n+//$example off$\n+\n+/**\n+ * Example for compute principal components on a 'RowMatrix'.\n+ */\n+public class JavaPCAExample {\n+  public static void main(String[] args) {\n+    SparkConf conf = new SparkConf().setAppName(\"PCA Example\");\n+    SparkContext sc = new SparkContext(conf);\n+\n+    // $example on$\n+    double[][] array = { { 1.12, 2.05, 3.12 }, { 5.56, 6.28, 8.94 },\n+      { 10.2, 8.0, 20.5 } };\n+    LinkedList<Vector> rowsList = new LinkedList<Vector>();\n+    for (int i = 0; i < array.length; i++) {\n+      Vector currentRow = Vectors.dense(array[i]);\n+      rowsList.add(currentRow);\n+    }\n+    JavaRDD<Vector> rows = JavaSparkContext.fromSparkContext(sc).parallelize(\n+      rowsList);"
  }],
  "prId": 11132
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "remove the blank line\n",
    "commit": "3b031da55b81b9440539dfe7ee9579fe4c656b9d",
    "createdAt": "2016-02-15T21:38:36Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+//$example on$\n+import java.util.LinkedList;\n+\n+import org.apache.spark.SparkConf;\n+import org.apache.spark.SparkContext;\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.mllib.linalg.Matrix;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+import org.apache.spark.mllib.linalg.distributed.RowMatrix;\n+//$example off$\n+\n+/**\n+ * Example for compute principal components on a 'RowMatrix'.\n+ */\n+public class JavaPCAExample {\n+  public static void main(String[] args) {\n+    SparkConf conf = new SparkConf().setAppName(\"PCA Example\");\n+    SparkContext sc = new SparkContext(conf);\n+\n+    // $example on$\n+    double[][] array = { { 1.12, 2.05, 3.12 }, { 5.56, 6.28, 8.94 },\n+      { 10.2, 8.0, 20.5 } };\n+    LinkedList<Vector> rowsList = new LinkedList<Vector>();\n+    for (int i = 0; i < array.length; i++) {\n+      Vector currentRow = Vectors.dense(array[i]);\n+      rowsList.add(currentRow);\n+    }\n+    JavaRDD<Vector> rows = JavaSparkContext.fromSparkContext(sc).parallelize(\n+      rowsList);\n+\n+    // Create a RowMatrix from JavaRDD<Vector>.\n+    RowMatrix mat = new RowMatrix(rows.rdd());\n+\n+    // Compute the top 3 principal components.\n+    Matrix pc = mat.computePrincipalComponents(3);\n+    RowMatrix projected = mat.multiply(pc);\n+"
  }],
  "prId": 11132
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "Move the // $example off$ here\n",
    "commit": "3b031da55b81b9440539dfe7ee9579fe4c656b9d",
    "createdAt": "2016-02-18T22:04:04Z",
    "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+// $example on$\n+import java.util.LinkedList;\n+// $example off$\n+\n+import org.apache.spark.SparkConf;\n+import org.apache.spark.SparkContext;\n+// $example on$\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.mllib.linalg.Matrix;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+import org.apache.spark.mllib.linalg.distributed.RowMatrix;\n+// $example off$\n+\n+/**\n+ * Example for compute principal components on a 'RowMatrix'.\n+ */\n+public class JavaPCAExample {\n+  public static void main(String[] args) {\n+    SparkConf conf = new SparkConf().setAppName(\"PCA Example\");\n+    SparkContext sc = new SparkContext(conf);\n+\n+    // $example on$\n+    double[][] array = {{1.12, 2.05, 3.12}, {5.56, 6.28, 8.94}, {10.2, 8.0, 20.5}};\n+    LinkedList<Vector> rowsList = new LinkedList<Vector>();\n+    for (int i = 0; i < array.length; i++) {\n+      Vector currentRow = Vectors.dense(array[i]);\n+      rowsList.add(currentRow);\n+    }\n+    JavaRDD<Vector> rows = JavaSparkContext.fromSparkContext(sc).parallelize(rowsList);\n+\n+    // Create a RowMatrix from JavaRDD<Vector>.\n+    RowMatrix mat = new RowMatrix(rows.rdd());\n+\n+    // Compute the top 3 principal components.\n+    Matrix pc = mat.computePrincipalComponents(3);\n+    RowMatrix projected = mat.multiply(pc);",
    "line": 57
  }],
  "prId": 11132
}]