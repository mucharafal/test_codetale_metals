[{
  "comments": [{
    "author": {
      "login": "hhbyyh"
    },
    "body": "unnecessary line.",
    "commit": "90450e0950b334af4373c247fe3b0ed0cc6fe6c0",
    "createdAt": "2018-05-20T17:15:58Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml;\n+\n+// $example on$\n+"
  }, {
    "author": {
      "login": "shahidki31"
    },
    "body": "@hhbyyh Removed the unnecessary line",
    "commit": "90450e0950b334af4373c247fe3b0ed0cc6fe6c0",
    "createdAt": "2018-05-21T19:42:45Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml;\n+\n+// $example on$\n+"
  }],
  "prId": 21283
}, {
  "comments": [{
    "author": {
      "login": "hhbyyh"
    },
    "body": "order of import. move java ones to top.",
    "commit": "90450e0950b334af4373c247fe3b0ed0cc6fe6c0",
    "createdAt": "2018-05-20T17:17:04Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml;\n+\n+// $example on$\n+\n+import org.apache.spark.ml.clustering.PowerIterationClustering;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.SparkSession;\n+import org.apache.spark.sql.types.DataTypes;\n+import org.apache.spark.sql.types.Metadata;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+\n+import java.util.Arrays;\n+import java.util.List;"
  }, {
    "author": {
      "login": "shahidki31"
    },
    "body": "Rearranged the import",
    "commit": "90450e0950b334af4373c247fe3b0ed0cc6fe6c0",
    "createdAt": "2018-05-21T19:43:05Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml;\n+\n+// $example on$\n+\n+import org.apache.spark.ml.clustering.PowerIterationClustering;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.SparkSession;\n+import org.apache.spark.sql.types.DataTypes;\n+import org.apache.spark.sql.types.Metadata;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+\n+import java.util.Arrays;\n+import java.util.List;"
  }],
  "prId": 21283
}, {
  "comments": [{
    "author": {
      "login": "hhbyyh"
    },
    "body": "unnecessary line",
    "commit": "90450e0950b334af4373c247fe3b0ed0cc6fe6c0",
    "createdAt": "2018-05-20T17:17:19Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml;\n+\n+// $example on$\n+\n+import org.apache.spark.ml.clustering.PowerIterationClustering;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.SparkSession;\n+import org.apache.spark.sql.types.DataTypes;\n+import org.apache.spark.sql.types.Metadata;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+"
  }, {
    "author": {
      "login": "shahidki31"
    },
    "body": "Removed the unnecessary lines",
    "commit": "90450e0950b334af4373c247fe3b0ed0cc6fe6c0",
    "createdAt": "2018-05-21T19:43:28Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml;\n+\n+// $example on$\n+\n+import org.apache.spark.ml.clustering.PowerIterationClustering;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.SparkSession;\n+import org.apache.spark.sql.types.DataTypes;\n+import org.apache.spark.sql.types.Metadata;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+"
  }],
  "prId": 21283
}, {
  "comments": [{
    "author": {
      "login": "hhbyyh"
    },
    "body": "Maybe we could increase the complexity of the data by a little bit, e.g. put more than one elements in some `neighbors` and `similarities`",
    "commit": "90450e0950b334af4373c247fe3b0ed0cc6fe6c0",
    "createdAt": "2018-05-20T17:41:03Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml;\n+\n+// $example on$\n+\n+import org.apache.spark.ml.clustering.PowerIterationClustering;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.SparkSession;\n+import org.apache.spark.sql.types.DataTypes;\n+import org.apache.spark.sql.types.Metadata;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+// $example off$\n+\n+/**\n+ * An example demonstrating PowerIterationClusteringExample.\n+ * Run with\n+ * <pre>\n+ * bin/run-example ml.JavaPowerIterationClusteringExample\n+ * </pre>\n+ */\n+public class JavaPowerIterationClusteringExample {\n+\n+    public static void main(String[] args) {\n+        // Create a SparkSession.\n+        SparkSession spark = SparkSession\n+                .builder()\n+                .appName(\"JavaPowerIterationClustering\")\n+                .getOrCreate();\n+\n+        // $example on$\n+        // Creates data.\n+        List<Row> data = Arrays.asList(\n+                RowFactory.create(0L, Arrays.asList(1L), Arrays.asList(0.9)),\n+                RowFactory.create(1L, Arrays.asList(2L), Arrays.asList(0.9)),\n+                RowFactory.create(2L, Arrays.asList(3L), Arrays.asList(0.9)),\n+                RowFactory.create(3L, Arrays.asList(4L), Arrays.asList(0.1)),\n+                RowFactory.create(4L, Arrays.asList(5L), Arrays.asList(0.9))"
  }, {
    "author": {
      "login": "shahidki31"
    },
    "body": "Thanks, I have increased the complexity of the data by putting more elements in the neighbors and similarities",
    "commit": "90450e0950b334af4373c247fe3b0ed0cc6fe6c0",
    "createdAt": "2018-05-21T19:44:27Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml;\n+\n+// $example on$\n+\n+import org.apache.spark.ml.clustering.PowerIterationClustering;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.SparkSession;\n+import org.apache.spark.sql.types.DataTypes;\n+import org.apache.spark.sql.types.Metadata;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+// $example off$\n+\n+/**\n+ * An example demonstrating PowerIterationClusteringExample.\n+ * Run with\n+ * <pre>\n+ * bin/run-example ml.JavaPowerIterationClusteringExample\n+ * </pre>\n+ */\n+public class JavaPowerIterationClusteringExample {\n+\n+    public static void main(String[] args) {\n+        // Create a SparkSession.\n+        SparkSession spark = SparkSession\n+                .builder()\n+                .appName(\"JavaPowerIterationClustering\")\n+                .getOrCreate();\n+\n+        // $example on$\n+        // Creates data.\n+        List<Row> data = Arrays.asList(\n+                RowFactory.create(0L, Arrays.asList(1L), Arrays.asList(0.9)),\n+                RowFactory.create(1L, Arrays.asList(2L), Arrays.asList(0.9)),\n+                RowFactory.create(2L, Arrays.asList(3L), Arrays.asList(0.9)),\n+                RowFactory.create(3L, Arrays.asList(4L), Arrays.asList(0.1)),\n+                RowFactory.create(4L, Arrays.asList(5L), Arrays.asList(0.9))"
  }],
  "prId": 21283
}, {
  "comments": [{
    "author": {
      "login": "hhbyyh"
    },
    "body": "for consistency: Either remove the detailed comments or add one for training. ",
    "commit": "90450e0950b334af4373c247fe3b0ed0cc6fe6c0",
    "createdAt": "2018-05-20T17:42:13Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml;\n+\n+// $example on$\n+\n+import org.apache.spark.ml.clustering.PowerIterationClustering;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.SparkSession;\n+import org.apache.spark.sql.types.DataTypes;\n+import org.apache.spark.sql.types.Metadata;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+// $example off$\n+\n+/**\n+ * An example demonstrating PowerIterationClusteringExample.\n+ * Run with\n+ * <pre>\n+ * bin/run-example ml.JavaPowerIterationClusteringExample\n+ * </pre>\n+ */\n+public class JavaPowerIterationClusteringExample {\n+\n+    public static void main(String[] args) {\n+        // Create a SparkSession.\n+        SparkSession spark = SparkSession\n+                .builder()\n+                .appName(\"JavaPowerIterationClustering\")\n+                .getOrCreate();\n+\n+        // $example on$\n+        // Creates data."
  }, {
    "author": {
      "login": "shahidki31"
    },
    "body": "Done",
    "commit": "90450e0950b334af4373c247fe3b0ed0cc6fe6c0",
    "createdAt": "2018-05-21T19:44:40Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.ml;\n+\n+// $example on$\n+\n+import org.apache.spark.ml.clustering.PowerIterationClustering;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.RowFactory;\n+import org.apache.spark.sql.SparkSession;\n+import org.apache.spark.sql.types.DataTypes;\n+import org.apache.spark.sql.types.Metadata;\n+import org.apache.spark.sql.types.StructField;\n+import org.apache.spark.sql.types.StructType;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+// $example off$\n+\n+/**\n+ * An example demonstrating PowerIterationClusteringExample.\n+ * Run with\n+ * <pre>\n+ * bin/run-example ml.JavaPowerIterationClusteringExample\n+ * </pre>\n+ */\n+public class JavaPowerIterationClusteringExample {\n+\n+    public static void main(String[] args) {\n+        // Create a SparkSession.\n+        SparkSession spark = SparkSession\n+                .builder()\n+                .appName(\"JavaPowerIterationClustering\")\n+                .getOrCreate();\n+\n+        // $example on$\n+        // Creates data."
  }],
  "prId": 21283
}]