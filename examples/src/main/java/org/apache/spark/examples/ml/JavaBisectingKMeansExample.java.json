[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "@mgaido91 .\r\nIf we are going to change all `ml` examples for deprecation, we had better change the following, too. And, could you check if we had another instances?\r\n- https://github.com/apache/spark/blob/master/examples/src/main/python/ml/bisecting_k_means_example.py#L45\r\n```scala\r\n    # Evaluate clustering.\r\n    cost = model.computeCost(dataset)\r\n```",
    "commit": "d5fddb56b426ddda8c61cb5fef4b29763482eaf9",
    "createdAt": "2018-10-18T06:28:02Z",
    "diffHunk": "@@ -50,9 +51,14 @@ public static void main(String[] args) {\n     BisectingKMeans bkm = new BisectingKMeans().setK(2).setSeed(1);\n     BisectingKMeansModel model = bkm.fit(dataset);\n \n-    // Evaluate clustering.\n-    double cost = model.computeCost(dataset);\n-    System.out.println(\"Within Set Sum of Squared Errors = \" + cost);\n+    // Make predictions\n+    Dataset<Row> predictions = model.transform(dataset);\n+\n+    // Evaluate clustering by computing Silhouette score\n+    ClusteringEvaluator evaluator = new ClusteringEvaluator();\n+\n+    double silhouette = evaluator.evaluate(predictions);\n+    System.out.println(\"Silhouette with squared euclidean distance = \" + silhouette);"
  }, {
    "author": {
      "login": "mgaido91"
    },
    "body": "thanks I'll do @dongjoon-hyun ",
    "commit": "d5fddb56b426ddda8c61cb5fef4b29763482eaf9",
    "createdAt": "2018-10-18T09:45:27Z",
    "diffHunk": "@@ -50,9 +51,14 @@ public static void main(String[] args) {\n     BisectingKMeans bkm = new BisectingKMeans().setK(2).setSeed(1);\n     BisectingKMeansModel model = bkm.fit(dataset);\n \n-    // Evaluate clustering.\n-    double cost = model.computeCost(dataset);\n-    System.out.println(\"Within Set Sum of Squared Errors = \" + cost);\n+    // Make predictions\n+    Dataset<Row> predictions = model.transform(dataset);\n+\n+    // Evaluate clustering by computing Silhouette score\n+    ClusteringEvaluator evaluator = new ClusteringEvaluator();\n+\n+    double silhouette = evaluator.evaluate(predictions);\n+    System.out.println(\"Silhouette with squared euclidean distance = \" + silhouette);"
  }],
  "prId": 22756
}]