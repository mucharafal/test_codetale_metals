[{
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "remove it\n",
    "commit": "8b9228dfaefdf966841d91bb838a7aeacb5854e2",
    "createdAt": "2016-02-16T01:29:24Z",
    "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+// $example on$\n+import org.apache.spark.api.java.*;\n+import org.apache.spark.api.java.function.Function;\n+import org.apache.spark.mllib.clustering.GaussianMixture;\n+import org.apache.spark.mllib.clustering.GaussianMixtureModel;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+import org.apache.spark.SparkConf;"
  }],
  "prId": 11116
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "remove it\n",
    "commit": "8b9228dfaefdf966841d91bb838a7aeacb5854e2",
    "createdAt": "2016-02-16T01:29:36Z",
    "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+// $example on$\n+import org.apache.spark.api.java.*;\n+import org.apache.spark.api.java.function.Function;\n+import org.apache.spark.mllib.clustering.GaussianMixture;\n+import org.apache.spark.mllib.clustering.GaussianMixtureModel;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+import org.apache.spark.SparkConf;\n+// $example off$\n+\n+import org.apache.spark.SparkConf;\n+import org.apache.spark.sql.SQLContext;\n+import org.apache.spark.mllib.linalg.Vectors;"
  }],
  "prId": 11116
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "remove it\n",
    "commit": "8b9228dfaefdf966841d91bb838a7aeacb5854e2",
    "createdAt": "2016-02-16T01:29:41Z",
    "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+// $example on$\n+import org.apache.spark.api.java.*;\n+import org.apache.spark.api.java.function.Function;\n+import org.apache.spark.mllib.clustering.GaussianMixture;\n+import org.apache.spark.mllib.clustering.GaussianMixtureModel;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+import org.apache.spark.SparkConf;\n+// $example off$\n+\n+import org.apache.spark.SparkConf;\n+import org.apache.spark.sql.SQLContext;\n+import org.apache.spark.mllib.linalg.Vectors;\n+import java.util.Arrays;"
  }],
  "prId": 11116
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "Use 2-space indent for Java code.\n",
    "commit": "8b9228dfaefdf966841d91bb838a7aeacb5854e2",
    "createdAt": "2016-02-16T01:30:34Z",
    "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+// $example on$\n+import org.apache.spark.api.java.*;\n+import org.apache.spark.api.java.function.Function;\n+import org.apache.spark.mllib.clustering.GaussianMixture;\n+import org.apache.spark.mllib.clustering.GaussianMixtureModel;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+import org.apache.spark.SparkConf;\n+// $example off$\n+\n+import org.apache.spark.SparkConf;\n+import org.apache.spark.sql.SQLContext;\n+import org.apache.spark.mllib.linalg.Vectors;\n+import java.util.Arrays;\n+\n+public class JavaGaussianMixtureExample {\n+    public static void main(String[] args) {\n+\n+        SparkConf conf = new SparkConf().setAppName(\"JavaGaussianMixtureExample\")"
  }],
  "prId": 11116
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "Change the imports to\n\n``` scala\nimport org.apache.spark.SparkConf;\nimport org.apache.spark.api.java.JavaSparkContext;\n\n// $example on$\nimport org.apache.spark.api.java.JavaRDD;\nimport org.apache.spark.api.java.function.Function;\nimport org.apache.spark.mllib.clustering.GaussianMixture;\nimport org.apache.spark.mllib.clustering.GaussianMixtureModel;\nimport org.apache.spark.mllib.linalg.Vector;\nimport org.apache.spark.mllib.linalg.Vectors;\n// $example off$\n```\n",
    "commit": "8b9228dfaefdf966841d91bb838a7aeacb5854e2",
    "createdAt": "2016-02-18T22:15:17Z",
    "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+// $example on$\n+import org.apache.spark.api.java.*;"
  }],
  "prId": 11116
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "2-indent spaces for Java\n",
    "commit": "8b9228dfaefdf966841d91bb838a7aeacb5854e2",
    "createdAt": "2016-02-18T22:16:51Z",
    "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+// $example on$\n+import org.apache.spark.api.java.*;\n+import org.apache.spark.api.java.function.Function;\n+import org.apache.spark.mllib.clustering.GaussianMixture;\n+import org.apache.spark.mllib.clustering.GaussianMixtureModel;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+// $example off$\n+\n+import org.apache.spark.SparkConf;\n+\n+public class JavaGaussianMixtureExample {\n+  public static void main(String[] args) {\n+\n+    SparkConf conf = new SparkConf().setAppName(\"JavaGaussianMixtureExample\");\n+    JavaSparkContext jsc = new JavaSparkContext(conf);\n+\n+    // $example on$\n+    // Load and parse data\n+    String path = \"data/mllib/gmm_data.txt\";\n+    JavaRDD<String> data = jsc.textFile(path);\n+    JavaRDD<Vector> parsedData = data.map(\n+        new Function<String, Vector>() {"
  }],
  "prId": 11116
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "ditto\n",
    "commit": "8b9228dfaefdf966841d91bb838a7aeacb5854e2",
    "createdAt": "2016-02-18T22:17:02Z",
    "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+// $example on$\n+import org.apache.spark.api.java.*;\n+import org.apache.spark.api.java.function.Function;\n+import org.apache.spark.mllib.clustering.GaussianMixture;\n+import org.apache.spark.mllib.clustering.GaussianMixtureModel;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+// $example off$\n+\n+import org.apache.spark.SparkConf;\n+\n+public class JavaGaussianMixtureExample {\n+  public static void main(String[] args) {\n+\n+    SparkConf conf = new SparkConf().setAppName(\"JavaGaussianMixtureExample\");\n+    JavaSparkContext jsc = new JavaSparkContext(conf);\n+\n+    // $example on$\n+    // Load and parse data\n+    String path = \"data/mllib/gmm_data.txt\";\n+    JavaRDD<String> data = jsc.textFile(path);\n+    JavaRDD<Vector> parsedData = data.map(\n+        new Function<String, Vector>() {\n+            public Vector call(String s) {"
  }],
  "prId": 11116
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "ditto\n",
    "commit": "8b9228dfaefdf966841d91bb838a7aeacb5854e2",
    "createdAt": "2016-02-18T22:17:11Z",
    "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+// $example on$\n+import org.apache.spark.api.java.*;\n+import org.apache.spark.api.java.function.Function;\n+import org.apache.spark.mllib.clustering.GaussianMixture;\n+import org.apache.spark.mllib.clustering.GaussianMixtureModel;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+// $example off$\n+\n+import org.apache.spark.SparkConf;\n+\n+public class JavaGaussianMixtureExample {\n+  public static void main(String[] args) {\n+\n+    SparkConf conf = new SparkConf().setAppName(\"JavaGaussianMixtureExample\");\n+    JavaSparkContext jsc = new JavaSparkContext(conf);\n+\n+    // $example on$\n+    // Load and parse data\n+    String path = \"data/mllib/gmm_data.txt\";\n+    JavaRDD<String> data = jsc.textFile(path);\n+    JavaRDD<Vector> parsedData = data.map(\n+        new Function<String, Vector>() {\n+            public Vector call(String s) {\n+                String[] sarray = s.trim().split(\" \");"
  }],
  "prId": 11116
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "Change the code block like this:\n\n``` Java\n    JavaRDD<Vector> parsedData = data.map(\n      new Function<String, Vector>() {\n        public Vector call(String s) {\n          String[] sarray = s.trim().split(\" \");\n          double[] values = new double[sarray.length];\n          for (int i = 0; i < sarray.length; i++)\n            values[i] = Double.parseDouble(sarray[i]);\n          return Vectors.dense(values);\n        }\n      }\n    );\n```\n\nAll 2-indent spaces.\n",
    "commit": "8b9228dfaefdf966841d91bb838a7aeacb5854e2",
    "createdAt": "2016-02-18T22:19:35Z",
    "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+// $example on$\n+import org.apache.spark.api.java.*;\n+import org.apache.spark.api.java.function.Function;\n+import org.apache.spark.mllib.clustering.GaussianMixture;\n+import org.apache.spark.mllib.clustering.GaussianMixtureModel;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+// $example off$\n+\n+import org.apache.spark.SparkConf;\n+\n+public class JavaGaussianMixtureExample {\n+  public static void main(String[] args) {\n+\n+    SparkConf conf = new SparkConf().setAppName(\"JavaGaussianMixtureExample\");\n+    JavaSparkContext jsc = new JavaSparkContext(conf);\n+\n+    // $example on$\n+    // Load and parse data\n+    String path = \"data/mllib/gmm_data.txt\";\n+    JavaRDD<String> data = jsc.textFile(path);\n+    JavaRDD<Vector> parsedData = data.map(",
    "line": 42
  }],
  "prId": 11116
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "2-indent\n",
    "commit": "8b9228dfaefdf966841d91bb838a7aeacb5854e2",
    "createdAt": "2016-02-18T22:20:18Z",
    "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+// $example on$\n+import org.apache.spark.api.java.*;\n+import org.apache.spark.api.java.function.Function;\n+import org.apache.spark.mllib.clustering.GaussianMixture;\n+import org.apache.spark.mllib.clustering.GaussianMixtureModel;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+// $example off$\n+\n+import org.apache.spark.SparkConf;\n+\n+public class JavaGaussianMixtureExample {\n+  public static void main(String[] args) {\n+\n+    SparkConf conf = new SparkConf().setAppName(\"JavaGaussianMixtureExample\");\n+    JavaSparkContext jsc = new JavaSparkContext(conf);\n+\n+    // $example on$\n+    // Load and parse data\n+    String path = \"data/mllib/gmm_data.txt\";\n+    JavaRDD<String> data = jsc.textFile(path);\n+    JavaRDD<Vector> parsedData = data.map(\n+        new Function<String, Vector>() {\n+            public Vector call(String s) {\n+                String[] sarray = s.trim().split(\" \");\n+                    double[] values = new double[sarray.length];\n+                    for (int i = 0; i < sarray.length; i++)\n+                        values[i] = Double.parseDouble(sarray[i]);\n+                    return Vectors.dense(values);\n+                }\n+            }\n+    );\n+    parsedData.cache();\n+\n+    // Cluster the data into two classes using GaussianMixture\n+    GaussianMixtureModel gmm = new GaussianMixture().setK(2).run(parsedData.rdd());\n+\n+    // Save and load GaussianMixtureModel\n+    gmm.save(jsc.sc(), \"myGMMModel\");\n+    GaussianMixtureModel sameModel = GaussianMixtureModel.load(jsc.sc(), \"myGMMModel\");\n+    // Output the parameters of the mixture model\n+    for(int j=0; j<gmm.k(); j++) {\n+        System.out.printf(\"weight=%f\\nmu=%s\\nsigma=\\n%s\\n\","
  }],
  "prId": 11116
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "ditto\n",
    "commit": "8b9228dfaefdf966841d91bb838a7aeacb5854e2",
    "createdAt": "2016-02-18T22:20:24Z",
    "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+// $example on$\n+import org.apache.spark.api.java.*;\n+import org.apache.spark.api.java.function.Function;\n+import org.apache.spark.mllib.clustering.GaussianMixture;\n+import org.apache.spark.mllib.clustering.GaussianMixtureModel;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+// $example off$\n+\n+import org.apache.spark.SparkConf;\n+\n+public class JavaGaussianMixtureExample {\n+  public static void main(String[] args) {\n+\n+    SparkConf conf = new SparkConf().setAppName(\"JavaGaussianMixtureExample\");\n+    JavaSparkContext jsc = new JavaSparkContext(conf);\n+\n+    // $example on$\n+    // Load and parse data\n+    String path = \"data/mllib/gmm_data.txt\";\n+    JavaRDD<String> data = jsc.textFile(path);\n+    JavaRDD<Vector> parsedData = data.map(\n+        new Function<String, Vector>() {\n+            public Vector call(String s) {\n+                String[] sarray = s.trim().split(\" \");\n+                    double[] values = new double[sarray.length];\n+                    for (int i = 0; i < sarray.length; i++)\n+                        values[i] = Double.parseDouble(sarray[i]);\n+                    return Vectors.dense(values);\n+                }\n+            }\n+    );\n+    parsedData.cache();\n+\n+    // Cluster the data into two classes using GaussianMixture\n+    GaussianMixtureModel gmm = new GaussianMixture().setK(2).run(parsedData.rdd());\n+\n+    // Save and load GaussianMixtureModel\n+    gmm.save(jsc.sc(), \"myGMMModel\");\n+    GaussianMixtureModel sameModel = GaussianMixtureModel.load(jsc.sc(), \"myGMMModel\");\n+    // Output the parameters of the mixture model\n+    for(int j=0; j<gmm.k(); j++) {\n+        System.out.printf(\"weight=%f\\nmu=%s\\nsigma=\\n%s\\n\",\n+                gmm.weights()[j], gmm.gaussians()[j].mu(), gmm.gaussians()[j].sigma());"
  }],
  "prId": 11116
}]