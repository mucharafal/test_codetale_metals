[{
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "I would exclude JavaSparkContext and SparkConf.\n",
    "commit": "3066696a16709f58fe5cc179274b0a7ba277481a",
    "createdAt": "2015-12-15T22:59:12Z",
    "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+import java.util.ArrayList;\n+\n+// $example on$\n+import com.google.common.collect.Lists;\n+\n+import org.apache.spark.SparkConf;\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaSparkContext;"
  }],
  "prId": 9952
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "Indent with 2 spaces in Java please\n",
    "commit": "3066696a16709f58fe5cc179274b0a7ba277481a",
    "createdAt": "2015-12-15T22:59:13Z",
    "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+import java.util.ArrayList;\n+\n+// $example on$\n+import com.google.common.collect.Lists;\n+\n+import org.apache.spark.SparkConf;\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.mllib.clustering.BisectingKMeans;\n+import org.apache.spark.mllib.clustering.BisectingKMeansModel;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+// $example off$\n+\n+/**\n+ * Java example for graph clustering using power iteration clustering (PIC).\n+ */\n+public class JavaBisectingKMeansExample {\n+  public static void main(String[] args) {\n+    SparkConf sparkConf = new SparkConf().setAppName(\"JavaBisectingKMeansExample\");\n+    JavaSparkContext sc = new JavaSparkContext(sparkConf);\n+\n+    // $example on$\n+    ArrayList<Vector> localData = Lists.newArrayList(\n+        Vectors.dense(0.1, 0.1),   Vectors.dense(0.3, 0.3),"
  }],
  "prId": 9952
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "fix indentation here too\n",
    "commit": "3066696a16709f58fe5cc179274b0a7ba277481a",
    "createdAt": "2015-12-15T22:59:32Z",
    "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+import java.util.ArrayList;\n+\n+// $example on$\n+import com.google.common.collect.Lists;\n+\n+import org.apache.spark.SparkConf;\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.mllib.clustering.BisectingKMeans;\n+import org.apache.spark.mllib.clustering.BisectingKMeansModel;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+// $example off$\n+\n+/**\n+ * Java example for graph clustering using power iteration clustering (PIC).\n+ */\n+public class JavaBisectingKMeansExample {\n+  public static void main(String[] args) {\n+    SparkConf sparkConf = new SparkConf().setAppName(\"JavaBisectingKMeansExample\");\n+    JavaSparkContext sc = new JavaSparkContext(sparkConf);\n+\n+    // $example on$\n+    ArrayList<Vector> localData = Lists.newArrayList(\n+        Vectors.dense(0.1, 0.1),   Vectors.dense(0.3, 0.3),\n+        Vectors.dense(10.1, 10.1), Vectors.dense(10.3, 10.3),\n+        Vectors.dense(20.1, 20.1), Vectors.dense(20.3, 20.3),\n+        Vectors.dense(30.1, 30.1), Vectors.dense(30.3, 30.3)\n+    );\n+    JavaRDD<Vector> data = sc.parallelize(localData, 2);\n+\n+    BisectingKMeans bkm = new BisectingKMeans()\n+        .setK(4);"
  }],
  "prId": 9952
}]