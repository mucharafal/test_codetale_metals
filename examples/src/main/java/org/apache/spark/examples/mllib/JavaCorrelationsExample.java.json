[{
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "``` java\nimport org.apache.spark.SparkConf;\nimport org.apache.spark.api.java.JavaSparkContext;\n// $example on$\nimport java.util.Arrays;\n\nimport org.apache.spark.api.java.JavaDoubleRDD;\nimport org.apache.spark.api.java.JavaRDD;\nimport org.apache.spark.mllib.linalg.Matrix;\nimport org.apache.spark.mllib.linalg.Vector;\nimport org.apache.spark.mllib.linalg.Vectors;\nimport org.apache.spark.mllib.stat.Statistics;\n// $example off$\n```\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T05:54:17Z",
    "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+import java.util.Arrays;"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "Simplify it to `Arrays.asList(1.0, 2.0, 3.0, 3.0, 5.0));  // a series` with 2-indent for inline comment\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T05:55:36Z",
    "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+import java.util.Arrays;\n+\n+import org.apache.spark.SparkConf;\n+// $example on$\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaDoubleRDD;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.mllib.linalg.Matrix;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+import org.apache.spark.mllib.stat.Statistics;\n+// $example off$\n+\n+public class JavaCorrelationsExample {\n+  public static void main(String[] args) {\n+\n+    SparkConf conf = new SparkConf().setAppName(\"JavaCorrelationsExample\");\n+    JavaSparkContext jsc = new JavaSparkContext(conf);\n+\n+    // $example on$\n+    JavaDoubleRDD seriesX = jsc.parallelizeDoubles(\n+      Arrays.asList(new Double[]{1.0, 2.0, 3.0, 3.0, 5.0})); // a series"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "ditto\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T05:55:44Z",
    "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+import java.util.Arrays;\n+\n+import org.apache.spark.SparkConf;\n+// $example on$\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaDoubleRDD;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.mllib.linalg.Matrix;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+import org.apache.spark.mllib.stat.Statistics;\n+// $example off$\n+\n+public class JavaCorrelationsExample {\n+  public static void main(String[] args) {\n+\n+    SparkConf conf = new SparkConf().setAppName(\"JavaCorrelationsExample\");\n+    JavaSparkContext jsc = new JavaSparkContext(conf);\n+\n+    // $example on$\n+    JavaDoubleRDD seriesX = jsc.parallelizeDoubles(\n+      Arrays.asList(new Double[]{1.0, 2.0, 3.0, 3.0, 5.0})); // a series\n+\n+    // must have the same number of partitions and cardinality as seriesX\n+    JavaDoubleRDD seriesY = jsc.parallelizeDoubles(\n+      Arrays.asList(new Double[]{11.0, 22.0, 33.0, 33.0, 555.0}));"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "`\"correlation is: \"` --> `\"Correlation is: \"`\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T06:00:17Z",
    "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+import java.util.Arrays;\n+\n+import org.apache.spark.SparkConf;\n+// $example on$\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaDoubleRDD;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.mllib.linalg.Matrix;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+import org.apache.spark.mllib.stat.Statistics;\n+// $example off$\n+\n+public class JavaCorrelationsExample {\n+  public static void main(String[] args) {\n+\n+    SparkConf conf = new SparkConf().setAppName(\"JavaCorrelationsExample\");\n+    JavaSparkContext jsc = new JavaSparkContext(conf);\n+\n+    // $example on$\n+    JavaDoubleRDD seriesX = jsc.parallelizeDoubles(\n+      Arrays.asList(new Double[]{1.0, 2.0, 3.0, 3.0, 5.0})); // a series\n+\n+    // must have the same number of partitions and cardinality as seriesX\n+    JavaDoubleRDD seriesY = jsc.parallelizeDoubles(\n+      Arrays.asList(new Double[]{11.0, 22.0, 33.0, 33.0, 555.0}));\n+\n+    // compute the correlation using Pearson's method. Enter \"spearman\" for Spearman's method.\n+    // If a method is not specified, Pearson's method will be used by default.\n+    Double correlation = Statistics.corr(seriesX.srdd(), seriesY.srdd(), \"pearson\");\n+    System.out.println(\"correlation is: \" + correlation);"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "We can save some code by embedding `Vectors.dense(...)` in `Arrays.asList(...)`.\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-16T23:28:09Z",
    "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+import org.apache.spark.SparkConf;\n+import org.apache.spark.api.java.JavaSparkContext;\n+// $example on$\n+import java.util.Arrays;\n+\n+import org.apache.spark.api.java.JavaDoubleRDD;\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.mllib.linalg.Matrix;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+import org.apache.spark.mllib.stat.Statistics;\n+// $example off$\n+\n+public class JavaCorrelationsExample {\n+  public static void main(String[] args) {\n+\n+    SparkConf conf = new SparkConf().setAppName(\"JavaCorrelationsExample\");\n+    JavaSparkContext jsc = new JavaSparkContext(conf);\n+\n+    // $example on$\n+    JavaDoubleRDD seriesX = jsc.parallelizeDoubles(\n+      Arrays.asList(1.0, 2.0, 3.0, 3.0, 5.0));  // a series\n+\n+    // must have the same number of partitions and cardinality as seriesX\n+    JavaDoubleRDD seriesY = jsc.parallelizeDoubles(\n+      Arrays.asList(11.0, 22.0, 33.0, 33.0, 555.0));\n+\n+    // compute the correlation using Pearson's method. Enter \"spearman\" for Spearman's method.\n+    // If a method is not specified, Pearson's method will be used by default.\n+    Double correlation = Statistics.corr(seriesX.srdd(), seriesY.srdd(), \"pearson\");\n+    System.out.println(\"Correlation is: \" + correlation);\n+\n+    Vector v1 = Vectors.dense(1.0, 10.0, 100.0);\n+    Vector v2 = Vectors.dense(2.0, 20.0, 200.0);\n+    Vector v3 = Vectors.dense(5.0, 33.0, 366.0);\n+\n+    // note that each Vector is a row and not a column\n+    JavaRDD<Vector> data = jsc.parallelize(Arrays.asList(v1, v2, v3));"
  }],
  "prId": 11108
}]