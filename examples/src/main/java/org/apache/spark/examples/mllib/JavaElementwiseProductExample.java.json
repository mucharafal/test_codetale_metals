[{
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "Add outputs of `transformedData` and `transformedData2`\n",
    "commit": "3513e0f63ed88479052266db5ddc0f22aab175a2",
    "createdAt": "2016-02-20T23:31:32Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+import org.apache.spark.SparkConf;\n+// $example on$\n+import java.util.Arrays;\n+import org.apache.spark.api.java.JavaRDD;\n+import org.apache.spark.api.java.JavaSparkContext;\n+import org.apache.spark.api.java.function.Function;\n+import org.apache.spark.mllib.feature.ElementwiseProduct;\n+import org.apache.spark.mllib.linalg.Vector;\n+import org.apache.spark.mllib.linalg.Vectors;\n+// $example off$\n+\n+public class JavaElementwiseProductExample {\n+  public static void main(String[] args) {\n+\n+    SparkConf conf = new SparkConf().setAppName(\"JavaElementwiseProductExample\");\n+    JavaSparkContext jsc = new JavaSparkContext(conf);\n+\n+    // $example on$\n+    // Create some vector data; also works for sparse vectors\n+    JavaRDD<Vector> data = jsc.parallelize(Arrays.asList(\n+      Vectors.dense(1.0, 2.0, 3.0), Vectors.dense(4.0, 5.0, 6.0)));\n+    Vector transformingVector = Vectors.dense(0.0, 1.0, 2.0);\n+    final ElementwiseProduct transformer = new ElementwiseProduct(transformingVector);\n+\n+    // Batch transform and per-row transform give the same results:\n+    JavaRDD<Vector> transformedData = transformer.transform(data);\n+    JavaRDD<Vector> transformedData2 = data.map(\n+      new Function<Vector, Vector>() {\n+        @Override\n+        public Vector call(Vector v) {\n+          return transformer.transform(v);\n+        }\n+      }\n+    );\n+    // $example off$\n+",
    "line": 59
  }],
  "prId": 11142
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "Change the imports to\n\n``` Java\n// $example on$\nimport java.util.Arrays;\n// $example off$\n\nimport org.apache.spark.SparkConf;\nimport org.apache.spark.api.java.JavaSparkContext;\n// $example on$\nimport org.apache.spark.api.java.JavaRDD;\nimport org.apache.spark.api.java.function.Function;\nimport org.apache.spark.mllib.feature.ElementwiseProduct;\nimport org.apache.spark.mllib.linalg.Vector;\nimport org.apache.spark.mllib.linalg.Vectors;\n// $example off$\n```\n",
    "commit": "3513e0f63ed88479052266db5ddc0f22aab175a2",
    "createdAt": "2016-02-20T23:33:15Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.examples.mllib;\n+\n+import org.apache.spark.SparkConf;"
  }],
  "prId": 11142
}]