[{
  "comments": [{
    "author": {
      "login": "wangmiao1981"
    },
    "body": "Extra blank line",
    "commit": "65bd462b111788945f7f2b17f11c1674958b4008",
    "createdAt": "2016-12-05T19:14:29Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# To run this example use\n+# ./bin/spark-submit examples/src/main/r/ml.R\n+\n+# Load SparkR library into your R session\n+library(SparkR)\n+\n+# Initialize SparkSession\n+sparkR.session(appName = \"SparkR-ML-example\")\n+\n+############################ model read/write ##############################################\n+# $example on:read_write$\n+irisDF <- suppressWarnings(createDataFrame(iris))\n+# Fit a generalized linear model of family \"gaussian\" with spark.glm\n+gaussianDF <- irisDF\n+gaussianTestDF <- irisDF\n+gaussianGLM <- spark.glm(gaussianDF, Sepal_Length ~ Sepal_Width + Species, family = \"gaussian\")\n+\n+# Save and then load a fitted MLlib model\n+modelPath <- tempfile(pattern = \"ml\", fileext = \".tmp\")\n+write.ml(gaussianGLM, modelPath)\n+gaussianGLM2 <- read.ml(modelPath)\n+\n+# Check model summary\n+summary(gaussianGLM2)\n+\n+# Check model prediction\n+gaussianPredictions <- predict(gaussianGLM2, gaussianTestDF)\n+showDF(gaussianPredictions)\n+\n+unlink(modelPath)\n+# $example off:read_write$\n+############################ fit models with spark.lapply #####################################\n+\n+# Perform distributed training of multiple models with spark.lapply\n+families <- c(\"gaussian\", \"poisson\")\n+train <- function(family) {\n+  model <- glm(Sepal.Length ~ Sepal.Width + Species, iris, family = family)\n+  summary(model)\n+}\n+model.summaries <- spark.lapply(families, train)\n+\n+# Print the summary of each model\n+print(model.summaries)\n+\n+"
  }, {
    "author": {
      "login": "yanboliang"
    },
    "body": "Done.",
    "commit": "65bd462b111788945f7f2b17f11c1674958b4008",
    "createdAt": "2016-12-06T07:31:14Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# To run this example use\n+# ./bin/spark-submit examples/src/main/r/ml.R\n+\n+# Load SparkR library into your R session\n+library(SparkR)\n+\n+# Initialize SparkSession\n+sparkR.session(appName = \"SparkR-ML-example\")\n+\n+############################ model read/write ##############################################\n+# $example on:read_write$\n+irisDF <- suppressWarnings(createDataFrame(iris))\n+# Fit a generalized linear model of family \"gaussian\" with spark.glm\n+gaussianDF <- irisDF\n+gaussianTestDF <- irisDF\n+gaussianGLM <- spark.glm(gaussianDF, Sepal_Length ~ Sepal_Width + Species, family = \"gaussian\")\n+\n+# Save and then load a fitted MLlib model\n+modelPath <- tempfile(pattern = \"ml\", fileext = \".tmp\")\n+write.ml(gaussianGLM, modelPath)\n+gaussianGLM2 <- read.ml(modelPath)\n+\n+# Check model summary\n+summary(gaussianGLM2)\n+\n+# Check model prediction\n+gaussianPredictions <- predict(gaussianGLM2, gaussianTestDF)\n+showDF(gaussianPredictions)\n+\n+unlink(modelPath)\n+# $example off:read_write$\n+############################ fit models with spark.lapply #####################################\n+\n+# Perform distributed training of multiple models with spark.lapply\n+families <- c(\"gaussian\", \"poisson\")\n+train <- function(family) {\n+  model <- glm(Sepal.Length ~ Sepal.Width + Species, iris, family = family)\n+  summary(model)\n+}\n+model.summaries <- spark.lapply(families, train)\n+\n+# Print the summary of each model\n+print(model.summaries)\n+\n+"
  }],
  "prId": 16148
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "might want to use this for example instead\r\nhttps://github.com/apache/spark/blame/master/R/pkg/vignettes/sparkr-vignettes.Rmd#L394\r\n",
    "commit": "65bd462b111788945f7f2b17f11c1674958b4008",
    "createdAt": "2016-12-07T00:12:59Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# To run this example use\n+# ./bin/spark-submit examples/src/main/r/ml.R\n+\n+# Load SparkR library into your R session\n+library(SparkR)\n+\n+# Initialize SparkSession\n+sparkR.session(appName = \"SparkR-ML-example\")\n+\n+############################ model read/write ##############################################\n+# $example on:read_write$\n+irisDF <- suppressWarnings(createDataFrame(iris))\n+# Fit a generalized linear model of family \"gaussian\" with spark.glm\n+gaussianDF <- irisDF\n+gaussianTestDF <- irisDF\n+gaussianGLM <- spark.glm(gaussianDF, Sepal_Length ~ Sepal_Width + Species, family = \"gaussian\")\n+\n+# Save and then load a fitted MLlib model\n+modelPath <- tempfile(pattern = \"ml\", fileext = \".tmp\")\n+write.ml(gaussianGLM, modelPath)\n+gaussianGLM2 <- read.ml(modelPath)\n+\n+# Check model summary\n+summary(gaussianGLM2)\n+\n+# Check model prediction\n+gaussianPredictions <- predict(gaussianGLM2, gaussianTestDF)\n+showDF(gaussianPredictions)\n+\n+unlink(modelPath)\n+# $example off:read_write$\n+############################ fit models with spark.lapply #####################################\n+\n+# Perform distributed training of multiple models with spark.lapply\n+families <- c(\"gaussian\", \"poisson\")\n+train <- function(family) {\n+  model <- glm(Sepal.Length ~ Sepal.Width + Species, iris, family = family)\n+  summary(model)\n+}"
  }, {
    "author": {
      "login": "yanboliang"
    },
    "body": "You means to make them consistent?",
    "commit": "65bd462b111788945f7f2b17f11c1674958b4008",
    "createdAt": "2016-12-07T15:24:31Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# To run this example use\n+# ./bin/spark-submit examples/src/main/r/ml.R\n+\n+# Load SparkR library into your R session\n+library(SparkR)\n+\n+# Initialize SparkSession\n+sparkR.session(appName = \"SparkR-ML-example\")\n+\n+############################ model read/write ##############################################\n+# $example on:read_write$\n+irisDF <- suppressWarnings(createDataFrame(iris))\n+# Fit a generalized linear model of family \"gaussian\" with spark.glm\n+gaussianDF <- irisDF\n+gaussianTestDF <- irisDF\n+gaussianGLM <- spark.glm(gaussianDF, Sepal_Length ~ Sepal_Width + Species, family = \"gaussian\")\n+\n+# Save and then load a fitted MLlib model\n+modelPath <- tempfile(pattern = \"ml\", fileext = \".tmp\")\n+write.ml(gaussianGLM, modelPath)\n+gaussianGLM2 <- read.ml(modelPath)\n+\n+# Check model summary\n+summary(gaussianGLM2)\n+\n+# Check model prediction\n+gaussianPredictions <- predict(gaussianGLM2, gaussianTestDF)\n+showDF(gaussianPredictions)\n+\n+unlink(modelPath)\n+# $example off:read_write$\n+############################ fit models with spark.lapply #####################################\n+\n+# Perform distributed training of multiple models with spark.lapply\n+families <- c(\"gaussian\", \"poisson\")\n+train <- function(family) {\n+  model <- glm(Sepal.Length ~ Sepal.Width + Species, iris, family = family)\n+  summary(model)\n+}"
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "I mean running 2 families on glm in parallel is not a very useful or practical example. The link [above](https://github.com/apache/spark/blame/master/R/pkg/vignettes/sparkr-vignettes.Rmd#L394), running a (potentially longer) list of costs might be a better example to include here.\r\n",
    "commit": "65bd462b111788945f7f2b17f11c1674958b4008",
    "createdAt": "2016-12-07T18:09:15Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# To run this example use\n+# ./bin/spark-submit examples/src/main/r/ml.R\n+\n+# Load SparkR library into your R session\n+library(SparkR)\n+\n+# Initialize SparkSession\n+sparkR.session(appName = \"SparkR-ML-example\")\n+\n+############################ model read/write ##############################################\n+# $example on:read_write$\n+irisDF <- suppressWarnings(createDataFrame(iris))\n+# Fit a generalized linear model of family \"gaussian\" with spark.glm\n+gaussianDF <- irisDF\n+gaussianTestDF <- irisDF\n+gaussianGLM <- spark.glm(gaussianDF, Sepal_Length ~ Sepal_Width + Species, family = \"gaussian\")\n+\n+# Save and then load a fitted MLlib model\n+modelPath <- tempfile(pattern = \"ml\", fileext = \".tmp\")\n+write.ml(gaussianGLM, modelPath)\n+gaussianGLM2 <- read.ml(modelPath)\n+\n+# Check model summary\n+summary(gaussianGLM2)\n+\n+# Check model prediction\n+gaussianPredictions <- predict(gaussianGLM2, gaussianTestDF)\n+showDF(gaussianPredictions)\n+\n+unlink(modelPath)\n+# $example off:read_write$\n+############################ fit models with spark.lapply #####################################\n+\n+# Perform distributed training of multiple models with spark.lapply\n+families <- c(\"gaussian\", \"poisson\")\n+train <- function(family) {\n+  model <- glm(Sepal.Length ~ Sepal.Width + Species, iris, family = family)\n+  summary(model)\n+}"
  }, {
    "author": {
      "login": "yanboliang"
    },
    "body": "Good suggestion, I'll update it. Thanks.",
    "commit": "65bd462b111788945f7f2b17f11c1674958b4008",
    "createdAt": "2016-12-08T03:50:14Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# To run this example use\n+# ./bin/spark-submit examples/src/main/r/ml.R\n+\n+# Load SparkR library into your R session\n+library(SparkR)\n+\n+# Initialize SparkSession\n+sparkR.session(appName = \"SparkR-ML-example\")\n+\n+############################ model read/write ##############################################\n+# $example on:read_write$\n+irisDF <- suppressWarnings(createDataFrame(iris))\n+# Fit a generalized linear model of family \"gaussian\" with spark.glm\n+gaussianDF <- irisDF\n+gaussianTestDF <- irisDF\n+gaussianGLM <- spark.glm(gaussianDF, Sepal_Length ~ Sepal_Width + Species, family = \"gaussian\")\n+\n+# Save and then load a fitted MLlib model\n+modelPath <- tempfile(pattern = \"ml\", fileext = \".tmp\")\n+write.ml(gaussianGLM, modelPath)\n+gaussianGLM2 <- read.ml(modelPath)\n+\n+# Check model summary\n+summary(gaussianGLM2)\n+\n+# Check model prediction\n+gaussianPredictions <- predict(gaussianGLM2, gaussianTestDF)\n+showDF(gaussianPredictions)\n+\n+unlink(modelPath)\n+# $example off:read_write$\n+############################ fit models with spark.lapply #####################################\n+\n+# Perform distributed training of multiple models with spark.lapply\n+families <- c(\"gaussian\", \"poisson\")\n+train <- function(family) {\n+  model <- glm(Sepal.Length ~ Sepal.Width + Species, iris, family = family)\n+  summary(model)\n+}"
  }],
  "prId": 16148
}]