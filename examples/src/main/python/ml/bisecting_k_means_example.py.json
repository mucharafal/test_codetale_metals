[{
  "comments": [{
    "author": {
      "login": "MLnick"
    },
    "body": "Not all imports are required here, please clean them up and add `# $example on$` and `# $example off$` where necessary.\n",
    "commit": "165a4fe6f0d8cbc9eb5bcdf161dbfe48b2c1f8f9",
    "createdAt": "2016-03-09T10:12:25Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+import sys\n+import re\n+\n+import numpy as np\n+from pyspark import SparkContext\n+from pyspark.ml.clustering import BisectingKMeans, BisectingKMeansModel"
  }, {
    "author": {
      "login": "zhengruifeng"
    },
    "body": "ok, I have fixed it\n",
    "commit": "165a4fe6f0d8cbc9eb5bcdf161dbfe48b2c1f8f9",
    "createdAt": "2016-03-09T13:30:47Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+import sys\n+import re\n+\n+import numpy as np\n+from pyspark import SparkContext\n+from pyspark.ml.clustering import BisectingKMeans, BisectingKMeansModel"
  }],
  "prId": 11515
}, {
  "comments": [{
    "author": {
      "login": "MLnick"
    },
    "body": "Could we make this example more consistent with the style of the other one (and the ML kmeans example):\n\n``` python\nfrom pyspark.sql.types import Row\nfrom pyspark.mllib.linalg import Vectors\n...\ndata = sc.textFile(\"data/mllib/kmeans_data.txt\")\nparsedData = data.map(lambda line: Row(features=Vectors.dense([float(x) for x in line.split(' ')])))\ntraining = sqlContext.createDataFrame(parsedData)\n...\n```\n",
    "commit": "165a4fe6f0d8cbc9eb5bcdf161dbfe48b2c1f8f9",
    "createdAt": "2016-03-10T08:53:00Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+from pyspark import SparkContext\n+# $example on$\n+from pyspark.ml.clustering import BisectingKMeans, BisectingKMeansModel\n+from pyspark.mllib.linalg import VectorUDT, _convert_to_vector, Vectors\n+# $example off$\n+from pyspark.sql import SQLContext\n+\n+\"\"\"\n+A simple example demonstrating a bisecting k-means clustering.\n+\"\"\"\n+\n+if __name__ == \"__main__\":\n+\n+    sc = SparkContext(appName=\"PythonBisectingKMeansExample\")\n+    sqlContext = SQLContext(sc)\n+\n+    # $example on$\n+    training = sqlContext.createDataFrame(["
  }],
  "prId": 11515
}, {
  "comments": [{
    "author": {
      "login": "MLnick"
    },
    "body": "You can just make this `kmeans = BisectingKMeans().setK(2).setSeed(1).setFeaturesCol(\"features\")`\n",
    "commit": "165a4fe6f0d8cbc9eb5bcdf161dbfe48b2c1f8f9",
    "createdAt": "2016-03-10T08:53:26Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+from pyspark import SparkContext\n+# $example on$\n+from pyspark.ml.clustering import BisectingKMeans, BisectingKMeansModel\n+from pyspark.mllib.linalg import VectorUDT, _convert_to_vector, Vectors\n+# $example off$\n+from pyspark.sql import SQLContext\n+\n+\"\"\"\n+A simple example demonstrating a bisecting k-means clustering.\n+\"\"\"\n+\n+if __name__ == \"__main__\":\n+\n+    sc = SparkContext(appName=\"PythonBisectingKMeansExample\")\n+    sqlContext = SQLContext(sc)\n+\n+    # $example on$\n+    training = sqlContext.createDataFrame([\n+        (0, Vectors.dense(0.1, 0.1, 0.1)),\n+        (1, Vectors.dense(0.3, 0.3, 0.25)),\n+        (2, Vectors.dense(0.1, 0.1, -0.1)),\n+        (3, Vectors.dense(20.3, 20.1, 19.9)),\n+        (4, Vectors.dense(20.2, 20.1, 19.7)),\n+        (5, Vectors.dense(18.9, 20.0, 19.7))], [\"id\", \"features\"])\n+\n+    k = 2"
  }],
  "prId": 11515
}]