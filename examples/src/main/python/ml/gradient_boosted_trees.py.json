[{
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "Add note that GBTClassifier only supports binary classification currently.\n",
    "commit": "732506ef0dc17fd074f5f51e0b285edcfe3489aa",
    "createdAt": "2015-05-29T03:17:38Z",
    "diffHunk": "@@ -0,0 +1,84 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+import sys\n+\n+from pyspark import SparkContext\n+from pyspark.ml.classification import GBTClassifier\n+from pyspark.ml.feature import StringIndexer\n+from pyspark.ml.regression import GBTRegressor\n+from pyspark.mllib.evaluation import MulticlassMetrics, RegressionMetrics\n+from pyspark.mllib.util import MLUtils\n+from pyspark.sql import Row, SQLContext\n+\n+\"\"\"\n+A simple example demonstrating a Gradient Boosted Trees Classification/Regression Pipeline.",
    "line": 31
  }],
  "prId": 6443
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "Curious: Are the casts to float required?\n",
    "commit": "732506ef0dc17fd074f5f51e0b285edcfe3489aa",
    "createdAt": "2015-05-29T03:17:39Z",
    "diffHunk": "@@ -0,0 +1,84 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+import sys\n+\n+from pyspark import SparkContext\n+from pyspark.ml.classification import GBTClassifier\n+from pyspark.ml.feature import StringIndexer\n+from pyspark.ml.regression import GBTRegressor\n+from pyspark.mllib.evaluation import MulticlassMetrics, RegressionMetrics\n+from pyspark.mllib.util import MLUtils\n+from pyspark.sql import Row, SQLContext\n+\n+\"\"\"\n+A simple example demonstrating a Gradient Boosted Trees Classification/Regression Pipeline.\n+Run with:\n+  bin/spark-submit examples/src/main/python/ml/gradient_boosted_trees.py\n+\"\"\"\n+\n+\n+def testClassification(train, test):\n+    # Train a GradientBoostedTrees model.\n+\n+    rf = GBTClassifier(maxIter=30, maxDepth=4, labelCol=\"indexed\")\n+\n+    model = rf.fit(train)\n+    predictionAndLabels = model.transform(test).select(\"prediction\", \"indexed\") \\\n+        .map(lambda x: (float(x.prediction), float(x.indexed)))"
  }],
  "prId": 6443
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "Use BinaryClassificationMetrics to avoid making users think they can do multiclass\n",
    "commit": "732506ef0dc17fd074f5f51e0b285edcfe3489aa",
    "createdAt": "2015-05-29T03:17:41Z",
    "diffHunk": "@@ -0,0 +1,84 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+import sys\n+\n+from pyspark import SparkContext\n+from pyspark.ml.classification import GBTClassifier\n+from pyspark.ml.feature import StringIndexer\n+from pyspark.ml.regression import GBTRegressor\n+from pyspark.mllib.evaluation import MulticlassMetrics, RegressionMetrics\n+from pyspark.mllib.util import MLUtils\n+from pyspark.sql import Row, SQLContext\n+\n+\"\"\"\n+A simple example demonstrating a Gradient Boosted Trees Classification/Regression Pipeline.\n+Run with:\n+  bin/spark-submit examples/src/main/python/ml/gradient_boosted_trees.py\n+\"\"\"\n+\n+\n+def testClassification(train, test):\n+    # Train a GradientBoostedTrees model.\n+\n+    rf = GBTClassifier(maxIter=30, maxDepth=4, labelCol=\"indexed\")\n+\n+    model = rf.fit(train)\n+    predictionAndLabels = model.transform(test).select(\"prediction\", \"indexed\") \\\n+        .map(lambda x: (float(x.prediction), float(x.indexed)))\n+\n+    metrics = MulticlassMetrics(predictionAndLabels)"
  }],
  "prId": 6443
}]