[{
  "comments": [{
    "author": {
      "login": "sethah"
    },
    "body": "Forcing input args like this means that this can't be run directly in the repl. You end up referencing a `path` variable that doesn't exist. I think we should hard code it like scala.\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-04T20:42:41Z",
    "diffHunk": "@@ -0,0 +1,78 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+import sys\n+\n+import numpy as np\n+# $example on$\n+from pyspark import SparkContext\n+from pyspark.ml.clustering import GaussianMixture, GaussianMixtureModel\n+from pyspark.mllib.linalg import VectorUDT, _convert_to_vector\n+from pyspark.sql import SQLContext\n+from pyspark.sql.types import Row, StructField, StructType\n+# $example off$\n+\n+\"\"\"\n+A simple example demonstrating a Gaussian Mixture Model (GMM).\n+Run with:\n+  bin/spark-submit examples/src/main/python/ml/gaussian_mixture_example.py <input> <k>\n+\"\"\"\n+\n+\n+def parseVector(line):\n+    line_strip = line.strip()\n+    array = np.array([float(x) for x in line_strip.split(' ')])\n+    return _convert_to_vector(array)\n+\n+\n+if __name__ == \"__main__\":\n+\n+    FEATURES_COL = \"features\"\n+\n+    if len(sys.argv) != 3:"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "sethah"
    },
    "body": "If we don't allow input args, then we can remove this. Most python examples in ml don't have it, and I worry about maintainability if the file name changes, or the bash command changes, etc...\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-04T20:46:38Z",
    "diffHunk": "@@ -0,0 +1,78 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+import sys\n+\n+import numpy as np\n+# $example on$\n+from pyspark import SparkContext\n+from pyspark.ml.clustering import GaussianMixture, GaussianMixtureModel\n+from pyspark.mllib.linalg import VectorUDT, _convert_to_vector\n+from pyspark.sql import SQLContext\n+from pyspark.sql.types import Row, StructField, StructType\n+# $example off$\n+\n+\"\"\"\n+A simple example demonstrating a Gaussian Mixture Model (GMM).\n+Run with:\n+  bin/spark-submit examples/src/main/python/ml/gaussian_mixture_example.py <input> <k>"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "sethah"
    },
    "body": "you're referencing `FEATURES_COL` here, which is not included in the user guide examples. Can you be sure this runs using spark-submit AND copy/paste into repl? Ditto for the other languages.\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-04T20:48:19Z",
    "diffHunk": "@@ -0,0 +1,78 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+import sys\n+\n+import numpy as np\n+# $example on$\n+from pyspark import SparkContext\n+from pyspark.ml.clustering import GaussianMixture, GaussianMixtureModel\n+from pyspark.mllib.linalg import VectorUDT, _convert_to_vector\n+from pyspark.sql import SQLContext\n+from pyspark.sql.types import Row, StructField, StructType\n+# $example off$\n+\n+\"\"\"\n+A simple example demonstrating a Gaussian Mixture Model (GMM).\n+Run with:\n+  bin/spark-submit examples/src/main/python/ml/gaussian_mixture_example.py <input> <k>\n+\"\"\"\n+\n+\n+def parseVector(line):\n+    line_strip = line.strip()\n+    array = np.array([float(x) for x in line_strip.split(' ')])\n+    return _convert_to_vector(array)\n+\n+\n+if __name__ == \"__main__\":\n+\n+    FEATURES_COL = \"features\"\n+\n+    if len(sys.argv) != 3:\n+        print(\"Usage: gaussian_mixture_example.py <file> <k>\", file=sys.stderr)\n+        exit(-1)\n+    path = sys.argv[1]\n+    k = sys.argv[2]\n+\n+    sc = SparkContext(appName=\"PythonGuassianMixtureExample\")\n+    sqlContext = SQLContext(sc)\n+\n+    # $example on$\n+    lines = sc.textFile(path)\n+    data = lines.map(parseVector)\n+    row_rdd = data.map(lambda x: Row(x))\n+    schema = StructType([StructField(FEATURES_COL, VectorUDT(), False)])"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "zhengruifeng"
    },
    "body": "demonstrating Gaussian Mixture Model\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-13T02:21:00Z",
    "diffHunk": "@@ -0,0 +1,55 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+# $example on$\n+from pyspark.ml.clustering import GaussianMixture, GaussianMixtureModel\n+# $example off$\n+from pyspark.sql import SparkSession\n+\n+\"\"\"\n+A simple example demonstrating a Gaussian Mixture Model (GMM)."
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "zhengruifeng"
    },
    "body": "keep the args in line with scala example\n`setFeaturesCol(\"features\")` is redundant\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-13T02:23:32Z",
    "diffHunk": "@@ -0,0 +1,55 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+# $example on$\n+from pyspark.ml.clustering import GaussianMixture, GaussianMixtureModel\n+# $example off$\n+from pyspark.sql import SparkSession\n+\n+\"\"\"\n+A simple example demonstrating a Gaussian Mixture Model (GMM).\n+Run with:\n+  bin/spark-submit examples/src/main/python/ml/gaussian_mixture_example.py\n+\"\"\"\n+\n+if __name__ == \"__main__\":\n+    spark = SparkSession\\\n+        .builder\\\n+        .appName(\"PythonGuassianMixtureExample\")\\\n+        .getOrCreate()\n+\n+    # $example on$\n+    # load data\n+    dataset = spark.read.format(\"libsvm\").load(\"data/mllib/sample_kmeans_data.txt\")\n+\n+    gmm = GaussianMixture().setK(2).setSeed(10).setFeaturesCol(\"features\")"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "zhengruifeng"
    },
    "body": "keep the output in line with scala example\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-13T02:24:04Z",
    "diffHunk": "@@ -0,0 +1,55 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+# $example on$\n+from pyspark.ml.clustering import GaussianMixture, GaussianMixtureModel\n+# $example off$\n+from pyspark.sql import SparkSession\n+\n+\"\"\"\n+A simple example demonstrating a Gaussian Mixture Model (GMM).\n+Run with:\n+  bin/spark-submit examples/src/main/python/ml/gaussian_mixture_example.py\n+\"\"\"\n+\n+if __name__ == \"__main__\":\n+    spark = SparkSession\\\n+        .builder\\\n+        .appName(\"PythonGuassianMixtureExample\")\\\n+        .getOrCreate()\n+\n+    # $example on$\n+    # load data\n+    dataset = spark.read.format(\"libsvm\").load(\"data/mllib/sample_kmeans_data.txt\")\n+\n+    gmm = GaussianMixture().setK(2).setSeed(10).setFeaturesCol(\"features\")\n+    model = gmm.fit(dataset)\n+\n+    print(\"Gaussians: \")\n+    model.gaussiansDF.show()\n+\n+    transformed = model.transform(dataset).select(\"prediction\")"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "zhengruifeng"
    },
    "body": "Loads\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-13T02:28:33Z",
    "diffHunk": "@@ -0,0 +1,55 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+# $example on$\n+from pyspark.ml.clustering import GaussianMixture, GaussianMixtureModel\n+# $example off$\n+from pyspark.sql import SparkSession\n+\n+\"\"\"\n+A simple example demonstrating a Gaussian Mixture Model (GMM).\n+Run with:\n+  bin/spark-submit examples/src/main/python/ml/gaussian_mixture_example.py\n+\"\"\"\n+\n+if __name__ == \"__main__\":\n+    spark = SparkSession\\\n+        .builder\\\n+        .appName(\"PythonGuassianMixtureExample\")\\\n+        .getOrCreate()\n+\n+    # $example on$\n+    # load data"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "zhengruifeng"
    },
    "body": "`GaussianMixtureModel` is not used\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-13T02:43:28Z",
    "diffHunk": "@@ -0,0 +1,55 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+# $example on$\n+from pyspark.ml.clustering import GaussianMixture, GaussianMixtureModel"
  }],
  "prId": 12788
}, {
  "comments": [{
    "author": {
      "login": "MLnick"
    },
    "body": "we do `setSeed` here in the Python example but not in the Scala/Java examples. We should make it consistent (perhaps remove the `setSeed` here)\n",
    "commit": "f56344b026dfe11ce10d03ac7c222de68668be92",
    "createdAt": "2016-05-16T06:27:56Z",
    "diffHunk": "@@ -0,0 +1,48 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+# $example on$\n+from pyspark.ml.clustering import GaussianMixture\n+# $example off$\n+from pyspark.sql import SparkSession\n+\n+\"\"\"\n+A simple example demonstrating Gaussian Mixture Model (GMM).\n+Run with:\n+  bin/spark-submit examples/src/main/python/ml/gaussian_mixture_example.py\n+\"\"\"\n+\n+if __name__ == \"__main__\":\n+    spark = SparkSession\\\n+        .builder\\\n+        .appName(\"PythonGuassianMixtureExample\")\\\n+        .getOrCreate()\n+\n+    # $example on$\n+    # loads data\n+    dataset = spark.read.format(\"libsvm\").load(\"data/mllib/sample_kmeans_data.txt\")\n+\n+    gmm = GaussianMixture().setK(2).setSeed(10)"
  }],
  "prId": 12788
}]