[{
  "comments": [{
    "author": {
      "login": "sethah"
    },
    "body": "Other examples typically will output some print statements along with the output, explaining what you're seeing. As it is, this example just spits out a bunch of dataframes with no explanations. I'd like us to add that here, and for the Scala examples really.",
    "commit": "36fd9bc6366d58541c8306803d8742649be69098",
    "createdAt": "2017-02-07T21:56:46Z",
    "diffHunk": "@@ -0,0 +1,76 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\n+from __future__ import print_function\n+\n+# $example on$\n+from pyspark.ml.feature import BucketedRandomProjectionLSH\n+from pyspark.ml.linalg import Vectors\n+# $example off$\n+from pyspark.sql import SparkSession\n+\n+\"\"\"\n+An example demonstrating BucketedRandomProjectionLSH.\n+Run with:\n+  bin/spark-submit examples/src/main/python/ml/bucketed_random_projection_lsh.py\n+\"\"\"\n+\n+if __name__ == \"__main__\":\n+    spark = SparkSession \\\n+        .builder \\\n+        .appName(\"BucketedRandomProjectionLSHExample\") \\\n+        .getOrCreate()\n+\n+    # $example on$\n+    dataA = [(0, Vectors.dense([1.0, 1.0]),),\n+             (1, Vectors.dense([1.0, -1.0]),),\n+             (2, Vectors.dense([-1.0, -1.0]),),\n+             (3, Vectors.dense([-1.0, 1.0]),)]\n+    dfA = spark.createDataFrame(dataA, [\"id\", \"keys\"])\n+\n+    dataB = [(4, Vectors.dense([1.0, 0.0]),),\n+             (5, Vectors.dense([-1.0, 0.0]),),\n+             (6, Vectors.dense([0.0, 1.0]),),\n+             (7, Vectors.dense([0.0, -1.0]),)]\n+    dfB = spark.createDataFrame(dataB, [\"id\", \"keys\"])\n+\n+    key = Vectors.dense([1.0, 0.0])\n+\n+    brp = BucketedRandomProjectionLSH(inputCol=\"keys\", outputCol=\"values\", bucketLength=2.0,\n+                                      numHashTables=3)\n+    model = brp.fit(dfA)\n+\n+    # Feature Transformation\n+    model.transform(dfA).show()"
  }, {
    "author": {
      "login": "Yunni"
    },
    "body": "Done for Scala/Java/Python Examples.",
    "commit": "36fd9bc6366d58541c8306803d8742649be69098",
    "createdAt": "2017-02-08T22:57:19Z",
    "diffHunk": "@@ -0,0 +1,76 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\n+from __future__ import print_function\n+\n+# $example on$\n+from pyspark.ml.feature import BucketedRandomProjectionLSH\n+from pyspark.ml.linalg import Vectors\n+# $example off$\n+from pyspark.sql import SparkSession\n+\n+\"\"\"\n+An example demonstrating BucketedRandomProjectionLSH.\n+Run with:\n+  bin/spark-submit examples/src/main/python/ml/bucketed_random_projection_lsh.py\n+\"\"\"\n+\n+if __name__ == \"__main__\":\n+    spark = SparkSession \\\n+        .builder \\\n+        .appName(\"BucketedRandomProjectionLSHExample\") \\\n+        .getOrCreate()\n+\n+    # $example on$\n+    dataA = [(0, Vectors.dense([1.0, 1.0]),),\n+             (1, Vectors.dense([1.0, -1.0]),),\n+             (2, Vectors.dense([-1.0, -1.0]),),\n+             (3, Vectors.dense([-1.0, 1.0]),)]\n+    dfA = spark.createDataFrame(dataA, [\"id\", \"keys\"])\n+\n+    dataB = [(4, Vectors.dense([1.0, 0.0]),),\n+             (5, Vectors.dense([-1.0, 0.0]),),\n+             (6, Vectors.dense([0.0, 1.0]),),\n+             (7, Vectors.dense([0.0, -1.0]),)]\n+    dfB = spark.createDataFrame(dataB, [\"id\", \"keys\"])\n+\n+    key = Vectors.dense([1.0, 0.0])\n+\n+    brp = BucketedRandomProjectionLSH(inputCol=\"keys\", outputCol=\"values\", bucketLength=2.0,\n+                                      numHashTables=3)\n+    model = brp.fit(dfA)\n+\n+    # Feature Transformation\n+    model.transform(dfA).show()"
  }],
  "prId": 16715
}, {
  "comments": [{
    "author": {
      "login": "sethah"
    },
    "body": "the file names usually end with \"_example\". Have we not done that here because of how long the name is already? I slightly prefer to stick with the convention.",
    "commit": "36fd9bc6366d58541c8306803d8742649be69098",
    "createdAt": "2017-02-07T21:57:38Z",
    "diffHunk": "@@ -0,0 +1,76 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\n+from __future__ import print_function\n+\n+# $example on$\n+from pyspark.ml.feature import BucketedRandomProjectionLSH\n+from pyspark.ml.linalg import Vectors\n+# $example off$\n+from pyspark.sql import SparkSession\n+\n+\"\"\"\n+An example demonstrating BucketedRandomProjectionLSH.\n+Run with:\n+  bin/spark-submit examples/src/main/python/ml/bucketed_random_projection_lsh.py"
  }, {
    "author": {
      "login": "Yunni"
    },
    "body": "That was a mistake. Sorry about it!",
    "commit": "36fd9bc6366d58541c8306803d8742649be69098",
    "createdAt": "2017-02-08T22:57:38Z",
    "diffHunk": "@@ -0,0 +1,76 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\n+from __future__ import print_function\n+\n+# $example on$\n+from pyspark.ml.feature import BucketedRandomProjectionLSH\n+from pyspark.ml.linalg import Vectors\n+# $example off$\n+from pyspark.sql import SparkSession\n+\n+\"\"\"\n+An example demonstrating BucketedRandomProjectionLSH.\n+Run with:\n+  bin/spark-submit examples/src/main/python/ml/bucketed_random_projection_lsh.py"
  }],
  "prId": 16715
}]