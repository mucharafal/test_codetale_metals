[{
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "remove the import\n",
    "commit": "2fe06672cc9827545fe34a22fc38f2e304243205",
    "createdAt": "2016-02-17T18:37:08Z",
    "diffHunk": "@@ -0,0 +1,95 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"\n+Estimator Transformer Param Example.\n+\"\"\"\n+from pyspark import SparkContext, SQLContext\n+from pyspark.mllib.linalg import Vectors\n+# $example on$\n+from pyspark.ml.classification import LogisticRegression\n+# $example off$\n+from pyspark.ml.param import Param, Params"
  }],
  "prId": 11053
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "no need to break the line here\n",
    "commit": "2fe06672cc9827545fe34a22fc38f2e304243205",
    "createdAt": "2016-02-18T04:17:39Z",
    "diffHunk": "@@ -0,0 +1,95 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"\n+Estimator Transformer Param Example.\n+\"\"\"\n+from pyspark import SparkContext, SQLContext\n+from pyspark.mllib.linalg import Vectors\n+# $example on$\n+from pyspark.ml.classification import LogisticRegression\n+# $example off$\n+from pyspark.ml.param import Param, Params\n+\n+if __name__ == \"__main__\":\n+\n+    sc = SparkContext(appName=\"EstimatorTransformerParamExample\")\n+    sqlContext = SQLContext(sc)\n+\n+    # $example on$\n+    # Prepare training data from a list of (label, features) tuples.\n+    training = sqlContext.createDataFrame([\n+        (1.0, Vectors.dense([0.0, 1.1, 0.1])),\n+        (0.0, Vectors.dense([2.0, 1.0, -1.0])),\n+        (0.0, Vectors.dense([2.0, 1.3, 1.0])),\n+        (1.0, Vectors.dense([0.0, 1.2, -0.5]))], [\"label\", \"features\"])\n+\n+    # Create a LogisticRegression instance. This instance is an Estimator.\n+    lr = LogisticRegression(maxIter=10, regParam=0.01)\n+    # Print out the parameters, documentation, and any default values.\n+    print \"LogisticRegression parameters:\\n\" + lr.explainParams() + \"\\n\"\n+\n+    # Learn a LogisticRegression model. This uses the parameters stored in lr.\n+    model1 = lr.fit(training)\n+\n+    # Since model1 is a Model (i.e., a transformer produced by an Estimator),\n+    # we can view the parameters it used during fit().\n+    # This prints the parameter (name: value) pairs, where names are unique\n+    # IDs for this LogisticRegression instance.\n+    print \"Model 1 was fit using parameters: \"\n+    print model1.extractParamMap()\n+\n+    # We may alternatively specify parameters using a Python dictionary\n+    # as a paramMap\n+    paramMap = {lr.maxIter: 20}\n+    # Specify 1 Param, overwriting the original maxIter.\n+    paramMap[lr.maxIter] = 30\n+    # Specify multiple Params.\n+    paramMap.update({lr.regParam: 0.1, lr.threshold: 0.55})\n+\n+    # You can combine paramMaps, which are python dictionaries.\n+    # Change output column name\n+    paramMap2 = {lr.probabilityCol: \"myProbability\"}\n+    paramMapCombined = paramMap.copy()\n+    paramMapCombined.update(paramMap2)\n+\n+    # Now learn a new model using the paramMapCombined parameters.\n+    # paramMapCombined overrides all parameters set earlier via\n+    # lr.set* methods.\n+    model2 = lr.fit(training, paramMapCombined)\n+    print \"Model 2 was fit using parameters: \"\n+    print model2.extractParamMap()\n+\n+    # Prepare test data\n+    test = sqlContext.createDataFrame([\n+        (1.0, Vectors.dense([-1.0, 1.5, 1.3])),\n+        (0.0, Vectors.dense([3.0, 2.0, -0.1])),\n+        (1.0, Vectors.dense([0.0, 2.2, -1.5]))], [\"label\", \"features\"])\n+\n+    # Make predictions on test data using the Transformer.transform() method.\n+    # LogisticRegression.transform will only use the 'features' column.\n+    # Note that model2.transform() outputs a \"myProbability\" column instead\n+    # of the usual 'probability' column since we renamed the lr.probabilityCol\n+    # parameter previously.\n+    prediction = model2.transform(test)\n+    selected = prediction.select(\n+        \"features\", \"label\", \"myProbability\", \"prediction\")"
  }],
  "prId": 11053
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "The `Vectors` should be included in `$example on$`\n",
    "commit": "2fe06672cc9827545fe34a22fc38f2e304243205",
    "createdAt": "2016-02-18T21:35:03Z",
    "diffHunk": "@@ -0,0 +1,87 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+\"\"\"\n+Estimator Transformer Param Example.\n+\"\"\"\n+from pyspark import SparkContext, SQLContext\n+from pyspark.mllib.linalg import Vectors"
  }],
  "prId": 11053
}]