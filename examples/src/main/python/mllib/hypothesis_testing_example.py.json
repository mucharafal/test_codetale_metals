[{
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "from pyspark.mllib.linalg import Matrices, Vectors\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T06:21:53Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+from pyspark import SparkContext\n+# $example on$\n+from pyspark.mllib.linalg import Vectors, Matrices"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "Remove the final dot\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T06:22:22Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+from pyspark import SparkContext\n+# $example on$\n+from pyspark.mllib.linalg import Vectors, Matrices\n+from pyspark.mllib.regression import LabeledPoint\n+from pyspark.mllib.stat import Statistics\n+# $example off$\n+\n+if __name__ == \"__main__\":\n+    sc = SparkContext(appName=\"HypothesisTestingExample\")  # SparkContext\n+\n+    # $example on$\n+    vec = Vectors.dense(0.1, 0.15, 0.2, 0.3, 0.25)  # a vector composed of the frequencies of events\n+\n+    # compute the goodness of fit. If a second vector to test against\n+    # is not supplied as a parameter, the test runs against a uniform distribution.\n+    goodnessOfFitTestResult = Statistics.chiSqTest(vec)\n+    print(goodnessOfFitTestResult)  # summary of the test including the p-value, degrees of freedom,\n+    # test statistic, the method used, and the null hypothesis.\n+\n+    mat = Matrices.dense(3, 2, [1.0, 3.0, 5.0, 2.0, 4.0, 6.0])  # a contingency matrix\n+\n+    # conduct Pearson's independence test on the input contingency matrix\n+    independenceTestResult = Statistics.chiSqTest(mat)\n+    print(independenceTestResult)  # summary of the test including the p-value, degrees of freedom\n+\n+    p1 = LabeledPoint(1.0, [1.0, 0.0, 3.0])\n+    p2 = LabeledPoint(1.0, [1.0, 2.0, 0.0])\n+    p3 = LabeledPoint(1.0, [-1.0, 0.0, -0.5])\n+    obs = sc.parallelize([p1, p2, p3])  # LabeledPoint(feature, label) ."
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "add a println\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T06:23:10Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+from pyspark import SparkContext\n+# $example on$\n+from pyspark.mllib.linalg import Vectors, Matrices\n+from pyspark.mllib.regression import LabeledPoint\n+from pyspark.mllib.stat import Statistics\n+# $example off$\n+\n+if __name__ == \"__main__\":\n+    sc = SparkContext(appName=\"HypothesisTestingExample\")  # SparkContext\n+\n+    # $example on$\n+    vec = Vectors.dense(0.1, 0.15, 0.2, 0.3, 0.25)  # a vector composed of the frequencies of events\n+\n+    # compute the goodness of fit. If a second vector to test against\n+    # is not supplied as a parameter, the test runs against a uniform distribution.\n+    goodnessOfFitTestResult = Statistics.chiSqTest(vec)\n+    print(goodnessOfFitTestResult)  # summary of the test including the p-value, degrees of freedom,"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "add a println\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T06:23:17Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+from pyspark import SparkContext\n+# $example on$\n+from pyspark.mllib.linalg import Vectors, Matrices\n+from pyspark.mllib.regression import LabeledPoint\n+from pyspark.mllib.stat import Statistics\n+# $example off$\n+\n+if __name__ == \"__main__\":\n+    sc = SparkContext(appName=\"HypothesisTestingExample\")  # SparkContext\n+\n+    # $example on$\n+    vec = Vectors.dense(0.1, 0.15, 0.2, 0.3, 0.25)  # a vector composed of the frequencies of events\n+\n+    # compute the goodness of fit. If a second vector to test against\n+    # is not supplied as a parameter, the test runs against a uniform distribution.\n+    goodnessOfFitTestResult = Statistics.chiSqTest(vec)\n+    print(goodnessOfFitTestResult)  # summary of the test including the p-value, degrees of freedom,\n+    # test statistic, the method used, and the null hypothesis.\n+\n+    mat = Matrices.dense(3, 2, [1.0, 3.0, 5.0, 2.0, 4.0, 6.0])  # a contingency matrix\n+\n+    # conduct Pearson's independence test on the input contingency matrix\n+    independenceTestResult = Statistics.chiSqTest(mat)\n+    print(independenceTestResult)  # summary of the test including the p-value, degrees of freedom"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "yinxusen"
    },
    "body": "add a println\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-06T06:23:32Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+from pyspark import SparkContext\n+# $example on$\n+from pyspark.mllib.linalg import Vectors, Matrices\n+from pyspark.mllib.regression import LabeledPoint\n+from pyspark.mllib.stat import Statistics\n+# $example off$\n+\n+if __name__ == \"__main__\":\n+    sc = SparkContext(appName=\"HypothesisTestingExample\")  # SparkContext\n+\n+    # $example on$\n+    vec = Vectors.dense(0.1, 0.15, 0.2, 0.3, 0.25)  # a vector composed of the frequencies of events\n+\n+    # compute the goodness of fit. If a second vector to test against\n+    # is not supplied as a parameter, the test runs against a uniform distribution.\n+    goodnessOfFitTestResult = Statistics.chiSqTest(vec)\n+    print(goodnessOfFitTestResult)  # summary of the test including the p-value, degrees of freedom,\n+    # test statistic, the method used, and the null hypothesis.\n+\n+    mat = Matrices.dense(3, 2, [1.0, 3.0, 5.0, 2.0, 4.0, 6.0])  # a contingency matrix\n+\n+    # conduct Pearson's independence test on the input contingency matrix\n+    independenceTestResult = Statistics.chiSqTest(mat)\n+    print(independenceTestResult)  # summary of the test including the p-value, degrees of freedom\n+\n+    p1 = LabeledPoint(1.0, [1.0, 0.0, 3.0])\n+    p2 = LabeledPoint(1.0, [1.0, 2.0, 0.0])\n+    p3 = LabeledPoint(1.0, [-1.0, 0.0, -0.5])\n+    obs = sc.parallelize([p1, p2, p3])  # LabeledPoint(feature, label) .\n+\n+    # The contingency table is constructed from an RDD of LabeledPoint and used to conduct\n+    # the independence test. Returns an array containing the ChiSquaredTestResult for every feature\n+    # against the label.\n+    featureTestResults = Statistics.chiSqTest(obs)\n+\n+    for i, result in enumerate(featureTestResults):\n+        print(\"Column: \" + str(i + 1))\n+        print(result)"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "It is weird to have a `print()` line right after a comment. We can do `print(\"%s\\n\" % goodnessOfFitTestResult)`.\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-16T23:36:38Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+from pyspark import SparkContext\n+# $example on$\n+from pyspark.mllib.linalg import Matrices, Vectors\n+from pyspark.mllib.regression import LabeledPoint\n+from pyspark.mllib.stat import Statistics\n+# $example off$\n+\n+if __name__ == \"__main__\":\n+    sc = SparkContext(appName=\"HypothesisTestingExample\")  # SparkContext\n+\n+    # $example on$\n+    vec = Vectors.dense(0.1, 0.15, 0.2, 0.3, 0.25)  # a vector composed of the frequencies of events\n+\n+    # compute the goodness of fit. If a second vector to test against\n+    # is not supplied as a parameter, the test runs against a uniform distribution.\n+    goodnessOfFitTestResult = Statistics.chiSqTest(vec)\n+    print(goodnessOfFitTestResult)  # summary of the test including the p-value, degrees of freedom,\n+    # test statistic, the method used, and the null hypothesis.\n+    print()"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "`print(\"Column %d:\\n%s\" % (i+1, result))` (index should be before `:`)\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-16T23:37:18Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+from pyspark import SparkContext\n+# $example on$\n+from pyspark.mllib.linalg import Matrices, Vectors\n+from pyspark.mllib.regression import LabeledPoint\n+from pyspark.mllib.stat import Statistics\n+# $example off$\n+\n+if __name__ == \"__main__\":\n+    sc = SparkContext(appName=\"HypothesisTestingExample\")  # SparkContext\n+\n+    # $example on$\n+    vec = Vectors.dense(0.1, 0.15, 0.2, 0.3, 0.25)  # a vector composed of the frequencies of events\n+\n+    # compute the goodness of fit. If a second vector to test against\n+    # is not supplied as a parameter, the test runs against a uniform distribution.\n+    goodnessOfFitTestResult = Statistics.chiSqTest(vec)\n+    print(goodnessOfFitTestResult)  # summary of the test including the p-value, degrees of freedom,\n+    # test statistic, the method used, and the null hypothesis.\n+    print()\n+\n+    mat = Matrices.dense(3, 2, [1.0, 3.0, 5.0, 2.0, 4.0, 6.0])  # a contingency matrix\n+\n+    # conduct Pearson's independence test on the input contingency matrix\n+    independenceTestResult = Statistics.chiSqTest(mat)\n+    print(independenceTestResult)  # summary of the test including the p-value, degrees of freedom\n+    print()\n+\n+    p1 = LabeledPoint(1.0, [1.0, 0.0, 3.0])\n+    p2 = LabeledPoint(1.0, [1.0, 2.0, 0.0])\n+    p3 = LabeledPoint(1.0, [-1.0, 0.0, -0.5])\n+    obs = sc.parallelize([p1, p2, p3])  # LabeledPoint(feature, label)\n+\n+    # The contingency table is constructed from an RDD of LabeledPoint and used to conduct\n+    # the independence test. Returns an array containing the ChiSquaredTestResult for every feature\n+    # against the label.\n+    featureTestResults = Statistics.chiSqTest(obs)\n+\n+    for i, result in enumerate(featureTestResults):\n+        print(\"Column: \" + str(i + 1))"
  }],
  "prId": 11108
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "remove comment\n",
    "commit": "a4eb28d07a99e559132160f8ae9ac993d47d8fa3",
    "createdAt": "2016-03-16T23:37:46Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+from __future__ import print_function\n+\n+from pyspark import SparkContext\n+# $example on$\n+from pyspark.mllib.linalg import Matrices, Vectors\n+from pyspark.mllib.regression import LabeledPoint\n+from pyspark.mllib.stat import Statistics\n+# $example off$\n+\n+if __name__ == \"__main__\":\n+    sc = SparkContext(appName=\"HypothesisTestingExample\")  # SparkContext"
  }],
  "prId": 11108
}]