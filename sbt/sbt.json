[{
  "comments": [{
    "author": {
      "login": "pwendell"
    },
    "body": "Does this need to quote the \"$@\" to preserve argument arrays?\n",
    "commit": "0e5a0e4345c6d1fe466ac574c961e690de2e9744",
    "createdAt": "2014-12-26T21:13:15Z",
    "diffHunk": "@@ -1,111 +1,9 @@\n-#!/usr/bin/env bash\n+#!/bin/bash\n \n-# When creating new tests for Spark SQL Hive, the HADOOP_CLASSPATH must contain the hive jars so\n-# that we can run Hive to generate the golden answer.  This is not required for normal development\n-# or testing.\n-for i in \"$HIVE_HOME\"/lib/*\n-do HADOOP_CLASSPATH=\"$HADOOP_CLASSPATH:$i\"\n-done\n-export HADOOP_CLASSPATH\n+# Determine the current working directory\n+_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n \n-realpath () {\n-(\n-  TARGET_FILE=\"$1\"\n+echo \"WARNING: The sbt/sbt script has been deprecated in place of build/sbt.\" >&2\n+echo \"         Please change all references to point to the new location.\" >&2\n \n-  cd \"$(dirname \"$TARGET_FILE\")\"\n-  TARGET_FILE=\"$(basename \"$TARGET_FILE\")\"\n-\n-  COUNT=0\n-  while [ -L \"$TARGET_FILE\" -a $COUNT -lt 100 ]\n-  do\n-      TARGET_FILE=\"$(readlink \"$TARGET_FILE\")\"\n-      cd $(dirname \"$TARGET_FILE\")\n-      TARGET_FILE=\"$(basename $TARGET_FILE)\"\n-      COUNT=$(($COUNT + 1))\n-  done\n-\n-  echo \"$(pwd -P)/\"$TARGET_FILE\"\"\n-)\n-}\n-\n-. \"$(dirname \"$(realpath \"$0\")\")\"/sbt-launch-lib.bash\n-\n-\n-declare -r noshare_opts=\"-Dsbt.global.base=project/.sbtboot -Dsbt.boot.directory=project/.boot -Dsbt.ivy.home=project/.ivy\"\n-declare -r sbt_opts_file=\".sbtopts\"\n-declare -r etc_sbt_opts_file=\"/etc/sbt/sbtopts\"\n-\n-usage() {\n- cat <<EOM\n-Usage: $script_name [options]\n-\n-  -h | -help         print this message\n-  -v | -verbose      this runner is chattier\n-  -d | -debug        set sbt log level to debug\n-  -no-colors         disable ANSI color codes\n-  -sbt-create        start sbt even if current directory contains no sbt project\n-  -sbt-dir   <path>  path to global settings/plugins directory (default: ~/.sbt)\n-  -sbt-boot  <path>  path to shared boot directory (default: ~/.sbt/boot in 0.11 series)\n-  -ivy       <path>  path to local Ivy repository (default: ~/.ivy2)\n-  -mem    <integer>  set memory options (default: $sbt_mem, which is $(get_mem_opts $sbt_mem))\n-  -no-share          use all local caches; no sharing\n-  -no-global         uses global caches, but does not use global ~/.sbt directory.\n-  -jvm-debug <port>  Turn on JVM debugging, open at the given port.\n-  -batch             Disable interactive mode\n-\n-  # sbt version (default: from project/build.properties if present, else latest release)\n-  -sbt-version  <version>   use the specified version of sbt\n-  -sbt-jar      <path>      use the specified jar as the sbt launcher\n-  -sbt-rc                   use an RC version of sbt\n-  -sbt-snapshot             use a snapshot version of sbt\n-\n-  # java version (default: java from PATH, currently $(java -version 2>&1 | grep version))\n-  -java-home <path>         alternate JAVA_HOME\n-\n-  # jvm options and output control\n-  JAVA_OPTS          environment variable, if unset uses \"$java_opts\"\n-  SBT_OPTS           environment variable, if unset uses \"$default_sbt_opts\"\n-  .sbtopts           if this file exists in the current directory, it is\n-                     prepended to the runner args\n-  /etc/sbt/sbtopts   if this file exists, it is prepended to the runner args\n-  -Dkey=val          pass -Dkey=val directly to the java runtime\n-  -J-X               pass option -X directly to the java runtime\n-                     (-J is stripped)\n-  -S-X               add -X to sbt's scalacOptions (-S is stripped)\n-  -PmavenProfiles    Enable a maven profile for the build.\n-\n-In the case of duplicated or conflicting options, the order above\n-shows precedence: JAVA_OPTS lowest, command line options highest.\n-EOM\n-}\n-\n-process_my_args () {\n-  while [[ $# -gt 0 ]]; do\n-    case \"$1\" in\n-     -no-colors) addJava \"-Dsbt.log.noformat=true\" && shift ;;\n-      -no-share) addJava \"$noshare_opts\" && shift ;;\n-     -no-global) addJava \"-Dsbt.global.base=$(pwd)/project/.sbtboot\" && shift ;;\n-      -sbt-boot) require_arg path \"$1\" \"$2\" && addJava \"-Dsbt.boot.directory=$2\" && shift 2 ;;\n-       -sbt-dir) require_arg path \"$1\" \"$2\" && addJava \"-Dsbt.global.base=$2\" && shift 2 ;;\n-     -debug-inc) addJava \"-Dxsbt.inc.debug=true\" && shift ;;\n-         -batch) exec </dev/null && shift ;;\n-\n-    -sbt-create) sbt_create=true && shift ;;\n-\n-              *) addResidual \"$1\" && shift ;;\n-    esac\n-  done\n-\n-  # Now, ensure sbt version is used.\n-  [[ \"${sbt_version}XXX\" != \"XXX\" ]] && addJava \"-Dsbt.version=$sbt_version\"\n-}\n-\n-loadConfigFile() {\n-  cat \"$1\" | sed '/^\\#/d'\n-}\n-\n-# if sbtopts files exist, prepend their contents to $@ so it can be processed by this runner\n-[[ -f \"$etc_sbt_opts_file\" ]] && set -- $(loadConfigFile \"$etc_sbt_opts_file\") \"$@\"\n-[[ -f \"$sbt_opts_file\" ]] && set -- $(loadConfigFile \"$sbt_opts_file\") \"$@\"\n-\n-run \"$@\"\n+${_DIR}/../build/sbt $@"
  }, {
    "author": {
      "login": "brennonyork"
    },
    "body": "Yes it does, great catch! I'll be back to a computer in a few hours and can commit the changes, but, if you want to merge before that, feel free to update. Thanks!\n\n-----Original Message-----\nFrom: Patrick Wendell [notifications@github.commailto:notifications@github.com]\nSent: Friday, December 26, 2014 04:13 PM Eastern Standard Time\nTo: apache/spark\nCc: York, Brennon\nSubject: Re: [spark] [SPARK-4501][Core] - Create build/mvn to automatically download maven/zinc/scalac (#3707)\n\nIn sbt/sbthttps://github.com/apache/spark/pull/3707#discussion-diff-22288516:\n\n> ## \\-  done\n> -  # Now, ensure sbt version is used.\n> -  [[ \"${sbt_version}XXX\" != \"XXX\" ]] && addJava \"-Dsbt.version=$sbt_version\"\n>   -}\n>   -\n>   -loadConfigFile() {\n> -  cat \"$1\" | sed '/^#/d'\n>   -}\n>   -\n>   -# if sbtopts files exist, prepend their contents to $@ so it can be processed by this runner\n>   -[[ -f \"$etc_sbt_opts_file\" ]] && set -- $(loadConfigFile \"$etc_sbt_opts_file\") \"$@\"\n>   -[[ -f \"$sbt_opts_file\" ]] && set -- $(loadConfigFile \"$sbt_opts_file\") \"$@\"\n>   -\n>   -run \"$@\"\n>   +${_DIR}/../build/sbt $@\n\nDoes this need to quote the \"$@\" to preserve argument arrays?\n\nâ€”\nReply to this email directly or view it on GitHubhttps://github.com/apache/spark/pull/3707/files#r22288516.\n\n---\n\nThe information contained in this e-mail is confidential and/or proprietary to Capital One and/or its affiliates. The information transmitted herewith is intended only for use by the individual or entity to which it is addressed.  If the reader of this message is not the intended recipient, you are hereby notified that any review, retransmission, dissemination, distribution, copying or other use of, or taking of any action in reliance upon this information is strictly prohibited. If you have received this communication in error, please contact the sender and delete the material from your computer.\n",
    "commit": "0e5a0e4345c6d1fe466ac574c961e690de2e9744",
    "createdAt": "2014-12-26T22:35:35Z",
    "diffHunk": "@@ -1,111 +1,9 @@\n-#!/usr/bin/env bash\n+#!/bin/bash\n \n-# When creating new tests for Spark SQL Hive, the HADOOP_CLASSPATH must contain the hive jars so\n-# that we can run Hive to generate the golden answer.  This is not required for normal development\n-# or testing.\n-for i in \"$HIVE_HOME\"/lib/*\n-do HADOOP_CLASSPATH=\"$HADOOP_CLASSPATH:$i\"\n-done\n-export HADOOP_CLASSPATH\n+# Determine the current working directory\n+_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n \n-realpath () {\n-(\n-  TARGET_FILE=\"$1\"\n+echo \"WARNING: The sbt/sbt script has been deprecated in place of build/sbt.\" >&2\n+echo \"         Please change all references to point to the new location.\" >&2\n \n-  cd \"$(dirname \"$TARGET_FILE\")\"\n-  TARGET_FILE=\"$(basename \"$TARGET_FILE\")\"\n-\n-  COUNT=0\n-  while [ -L \"$TARGET_FILE\" -a $COUNT -lt 100 ]\n-  do\n-      TARGET_FILE=\"$(readlink \"$TARGET_FILE\")\"\n-      cd $(dirname \"$TARGET_FILE\")\n-      TARGET_FILE=\"$(basename $TARGET_FILE)\"\n-      COUNT=$(($COUNT + 1))\n-  done\n-\n-  echo \"$(pwd -P)/\"$TARGET_FILE\"\"\n-)\n-}\n-\n-. \"$(dirname \"$(realpath \"$0\")\")\"/sbt-launch-lib.bash\n-\n-\n-declare -r noshare_opts=\"-Dsbt.global.base=project/.sbtboot -Dsbt.boot.directory=project/.boot -Dsbt.ivy.home=project/.ivy\"\n-declare -r sbt_opts_file=\".sbtopts\"\n-declare -r etc_sbt_opts_file=\"/etc/sbt/sbtopts\"\n-\n-usage() {\n- cat <<EOM\n-Usage: $script_name [options]\n-\n-  -h | -help         print this message\n-  -v | -verbose      this runner is chattier\n-  -d | -debug        set sbt log level to debug\n-  -no-colors         disable ANSI color codes\n-  -sbt-create        start sbt even if current directory contains no sbt project\n-  -sbt-dir   <path>  path to global settings/plugins directory (default: ~/.sbt)\n-  -sbt-boot  <path>  path to shared boot directory (default: ~/.sbt/boot in 0.11 series)\n-  -ivy       <path>  path to local Ivy repository (default: ~/.ivy2)\n-  -mem    <integer>  set memory options (default: $sbt_mem, which is $(get_mem_opts $sbt_mem))\n-  -no-share          use all local caches; no sharing\n-  -no-global         uses global caches, but does not use global ~/.sbt directory.\n-  -jvm-debug <port>  Turn on JVM debugging, open at the given port.\n-  -batch             Disable interactive mode\n-\n-  # sbt version (default: from project/build.properties if present, else latest release)\n-  -sbt-version  <version>   use the specified version of sbt\n-  -sbt-jar      <path>      use the specified jar as the sbt launcher\n-  -sbt-rc                   use an RC version of sbt\n-  -sbt-snapshot             use a snapshot version of sbt\n-\n-  # java version (default: java from PATH, currently $(java -version 2>&1 | grep version))\n-  -java-home <path>         alternate JAVA_HOME\n-\n-  # jvm options and output control\n-  JAVA_OPTS          environment variable, if unset uses \"$java_opts\"\n-  SBT_OPTS           environment variable, if unset uses \"$default_sbt_opts\"\n-  .sbtopts           if this file exists in the current directory, it is\n-                     prepended to the runner args\n-  /etc/sbt/sbtopts   if this file exists, it is prepended to the runner args\n-  -Dkey=val          pass -Dkey=val directly to the java runtime\n-  -J-X               pass option -X directly to the java runtime\n-                     (-J is stripped)\n-  -S-X               add -X to sbt's scalacOptions (-S is stripped)\n-  -PmavenProfiles    Enable a maven profile for the build.\n-\n-In the case of duplicated or conflicting options, the order above\n-shows precedence: JAVA_OPTS lowest, command line options highest.\n-EOM\n-}\n-\n-process_my_args () {\n-  while [[ $# -gt 0 ]]; do\n-    case \"$1\" in\n-     -no-colors) addJava \"-Dsbt.log.noformat=true\" && shift ;;\n-      -no-share) addJava \"$noshare_opts\" && shift ;;\n-     -no-global) addJava \"-Dsbt.global.base=$(pwd)/project/.sbtboot\" && shift ;;\n-      -sbt-boot) require_arg path \"$1\" \"$2\" && addJava \"-Dsbt.boot.directory=$2\" && shift 2 ;;\n-       -sbt-dir) require_arg path \"$1\" \"$2\" && addJava \"-Dsbt.global.base=$2\" && shift 2 ;;\n-     -debug-inc) addJava \"-Dxsbt.inc.debug=true\" && shift ;;\n-         -batch) exec </dev/null && shift ;;\n-\n-    -sbt-create) sbt_create=true && shift ;;\n-\n-              *) addResidual \"$1\" && shift ;;\n-    esac\n-  done\n-\n-  # Now, ensure sbt version is used.\n-  [[ \"${sbt_version}XXX\" != \"XXX\" ]] && addJava \"-Dsbt.version=$sbt_version\"\n-}\n-\n-loadConfigFile() {\n-  cat \"$1\" | sed '/^\\#/d'\n-}\n-\n-# if sbtopts files exist, prepend their contents to $@ so it can be processed by this runner\n-[[ -f \"$etc_sbt_opts_file\" ]] && set -- $(loadConfigFile \"$etc_sbt_opts_file\") \"$@\"\n-[[ -f \"$sbt_opts_file\" ]] && set -- $(loadConfigFile \"$sbt_opts_file\") \"$@\"\n-\n-run \"$@\"\n+${_DIR}/../build/sbt $@"
  }],
  "prId": 3707
}]