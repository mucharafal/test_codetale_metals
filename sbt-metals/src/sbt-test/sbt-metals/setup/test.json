[
  {
    "id" : "05bb737e-f3d9-4166-b118-dc7da2b00e78",
    "prId" : 268,
    "comments" : [
      {
        "id" : "9ed557fe-7b08-4714-b157-d5751329c074",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Should we test `metalsSetup` instead? Unless users are expected to run `Compile/metalsWriteBuildInfo`, I think it's better to not test implementation details like this.",
        "createdAt" : "2018-04-08T13:13:38Z",
        "updatedAt" : "2018-04-08T20:12:42Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "34f60717-5398-48e1-9f69-958c3babdec9",
        "parentId" : "9ed557fe-7b08-4714-b157-d5751329c074",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "out of curiosity, `Compile/metalsWriteBuildInfo` won't work on 0.13. How hard would it be add 0.13 scripted tests?",
        "createdAt" : "2018-04-08T13:14:58Z",
        "updatedAt" : "2018-04-08T20:12:42Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9dde6037-7580-40d4-b9d7-78f35e1fc2cd",
        "parentId" : "9ed557fe-7b08-4714-b157-d5751329c074",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "> Should we test metalsSetup instead?\r\n\r\nOf course, this test was written this way because of #269. I will update it and add different types of calls to the `metalsWriteBuildInfo` task too.\r\n\r\n> Compile/metalsWriteBuildInfo won't work on 0.13\r\n\r\nGood point. I will fix this. scripted should run with `^` on 1.0 and 0.13.",
        "createdAt" : "2018-04-08T17:23:38Z",
        "updatedAt" : "2018-04-08T20:12:42Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "45a935487f9cef20c54bd959355900b832d644cd",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,9 @@\n+> semanticdbEnable\n+> compile\n+$ exists target/scala-2.12/classes/META-INF/semanticdb/A.semanticdb\n+\n+$ absent .metals/buildinfo/\n+> Compile/metalsWriteBuildInfo"
  },
  {
    "id" : "b8b07fb4-5a04-47e1-b958-8b4eca952e26",
    "prId" : 268,
    "comments" : [
      {
        "id" : "636d2a97-4f92-4e1b-bfd2-7acd8cdbfb56",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I would also test that metalsSetup enables semanticdb-scalac (probably running a compile and checking for the .semanticdb file)",
        "createdAt" : "2018-04-08T21:03:13Z",
        "updatedAt" : "2018-04-09T08:55:10Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2ec8a23f-4b68-4150-aff2-f20fdbb0bd06",
        "parentId" : "636d2a97-4f92-4e1b-bfd2-7acd8cdbfb56",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "`semanticdb-scalac` test does exactly this 👌 check also my comment above on why it's separate: https://github.com/scalameta/metals/pull/268#issuecomment-379579423 ",
        "createdAt" : "2018-04-09T08:58:05Z",
        "updatedAt" : "2018-04-09T08:58:05Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "26f9c5fd-951c-4270-b537-f07fcdea703b",
        "parentId" : "636d2a97-4f92-4e1b-bfd2-7acd8cdbfb56",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "ah sorry, I missed that that test used `metalsSetup`. 👍 then",
        "createdAt" : "2018-04-09T09:04:07Z",
        "updatedAt" : "2018-04-09T09:04:07Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a02a5395-ea71-4095-a4ba-32cf94d60bc5",
        "parentId" : "636d2a97-4f92-4e1b-bfd2-7acd8cdbfb56",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "The tests naming could be improved, so suggestions are welcome 😉 ",
        "createdAt" : "2018-04-09T09:05:16Z",
        "updatedAt" : "2018-04-09T09:05:16Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "45a935487f9cef20c54bd959355900b832d644cd",
    "line" : 2,
    "diffHunk" : "@@ -0,0 +1,4 @@\n+$ absent .metals/buildinfo/\n+> metalsSetup"
  }
]