[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "I wouldn't add all of those cases for R. One test case to check if they can be called should be good enough.",
    "commit": "34ba74f79aad2a0e2fe9e0d6f6110a10a51c8108",
    "createdAt": "2018-09-03T01:49:19Z",
    "diffHunk": "@@ -1803,6 +1803,18 @@ test_that(\"string operators\", {\n     collect(select(df4, split_string(df4$a, \"\\\\\\\\\")))[1, 1],\n     list(list(\"a.b@c.d   1\", \"b\"))\n   )\n+  expect_equal(\n+    collect(select(df4, split_string(df4$a, \"\\\\.\", 2)))[1, 1],\n+    list(list(\"a\", \"b@c.d   1\\\\b\"))\n+  )\n+  expect_equal(\n+    collect(select(df4, split_string(df4$a, \"b\", -2)))[1, 1],\n+    list(list(\"a.\", \"@c.d   1\\\\\", \"\"))\n+  )\n+  expect_equal(\n+    collect(select(df4, split_string(df4$a, \"b\", 0)))[1, 1],",
    "line": 9
  }, {
    "author": {
      "login": "phegstrom"
    },
    "body": "per @felixcheung's I added back the `limit = 0` case",
    "commit": "34ba74f79aad2a0e2fe9e0d6f6110a10a51c8108",
    "createdAt": "2018-09-16T22:48:51Z",
    "diffHunk": "@@ -1803,6 +1803,18 @@ test_that(\"string operators\", {\n     collect(select(df4, split_string(df4$a, \"\\\\\\\\\")))[1, 1],\n     list(list(\"a.b@c.d   1\", \"b\"))\n   )\n+  expect_equal(\n+    collect(select(df4, split_string(df4$a, \"\\\\.\", 2)))[1, 1],\n+    list(list(\"a\", \"b@c.d   1\\\\b\"))\n+  )\n+  expect_equal(\n+    collect(select(df4, split_string(df4$a, \"b\", -2)))[1, 1],\n+    list(list(\"a.\", \"@c.d   1\\\\\", \"\"))\n+  )\n+  expect_equal(\n+    collect(select(df4, split_string(df4$a, \"b\", 0)))[1, 1],",
    "line": 9
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "for context, we've had some cases in the past the wrong value is passed for an parameter - so let's at least get one with and one without any optional parameter",
    "commit": "34ba74f79aad2a0e2fe9e0d6f6110a10a51c8108",
    "createdAt": "2018-09-17T05:53:34Z",
    "diffHunk": "@@ -1803,6 +1803,18 @@ test_that(\"string operators\", {\n     collect(select(df4, split_string(df4$a, \"\\\\\\\\\")))[1, 1],\n     list(list(\"a.b@c.d   1\", \"b\"))\n   )\n+  expect_equal(\n+    collect(select(df4, split_string(df4$a, \"\\\\.\", 2)))[1, 1],\n+    list(list(\"a\", \"b@c.d   1\\\\b\"))\n+  )\n+  expect_equal(\n+    collect(select(df4, split_string(df4$a, \"b\", -2)))[1, 1],\n+    list(list(\"a.\", \"@c.d   1\\\\\", \"\"))\n+  )\n+  expect_equal(\n+    collect(select(df4, split_string(df4$a, \"b\", 0)))[1, 1],",
    "line": 9
  }, {
    "author": {
      "login": "phegstrom"
    },
    "body": "@felixcheung just to confirm, things look ok here to you? We now have both with/without optional parameter test cases",
    "commit": "34ba74f79aad2a0e2fe9e0d6f6110a10a51c8108",
    "createdAt": "2018-09-17T13:14:56Z",
    "diffHunk": "@@ -1803,6 +1803,18 @@ test_that(\"string operators\", {\n     collect(select(df4, split_string(df4$a, \"\\\\\\\\\")))[1, 1],\n     list(list(\"a.b@c.d   1\", \"b\"))\n   )\n+  expect_equal(\n+    collect(select(df4, split_string(df4$a, \"\\\\.\", 2)))[1, 1],\n+    list(list(\"a\", \"b@c.d   1\\\\b\"))\n+  )\n+  expect_equal(\n+    collect(select(df4, split_string(df4$a, \"b\", -2)))[1, 1],\n+    list(list(\"a.\", \"@c.d   1\\\\\", \"\"))\n+  )\n+  expect_equal(\n+    collect(select(df4, split_string(df4$a, \"b\", 0)))[1, 1],",
    "line": 9
  }],
  "prId": 22227
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "let's add a test for `limit = 0` or `limit = -1` too - while it's the default value, is any of the test cases changes behavior for limit = -1?",
    "commit": "34ba74f79aad2a0e2fe9e0d6f6110a10a51c8108",
    "createdAt": "2018-09-16T04:18:43Z",
    "diffHunk": "@@ -1803,6 +1803,10 @@ test_that(\"string operators\", {\n     collect(select(df4, split_string(df4$a, \"\\\\\\\\\")))[1, 1],\n     list(list(\"a.b@c.d   1\", \"b\"))\n   )\n+  expect_equal(\n+    collect(select(df4, split_string(df4$a, \"\\\\.\", 2)))[1, 1],\n+    list(list(\"a\", \"b@c.d   1\\\\b\"))",
    "line": 6
  }, {
    "author": {
      "login": "phegstrom"
    },
    "body": "added for `limit = 0` to catch the \"change behavior\" case",
    "commit": "34ba74f79aad2a0e2fe9e0d6f6110a10a51c8108",
    "createdAt": "2018-09-16T22:46:32Z",
    "diffHunk": "@@ -1803,6 +1803,10 @@ test_that(\"string operators\", {\n     collect(select(df4, split_string(df4$a, \"\\\\\\\\\")))[1, 1],\n     list(list(\"a.b@c.d   1\", \"b\"))\n   )\n+  expect_equal(\n+    collect(select(df4, split_string(df4$a, \"\\\\.\", 2)))[1, 1],\n+    list(list(\"a\", \"b@c.d   1\\\\b\"))",
    "line": 6
  }],
  "prId": 22227
}]