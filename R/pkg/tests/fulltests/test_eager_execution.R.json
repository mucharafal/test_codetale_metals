[{
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "I'm neutral, should these tests be in test_sparkSQL.R? it takes longer to run with many test files",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-09-20T04:20:58Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")\n+\n+test_that(\"eager execution is not enabled\", {"
  }, {
    "author": {
      "login": "adrian555"
    },
    "body": "Since this test will terminate the spark session and restart, I think it is better to be self contained.",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-09-20T20:57:40Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")\n+\n+test_that(\"eager execution is not enabled\", {"
  }],
  "prId": 22455
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "use a different dataset that does not require `suppressWarnings`",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-09-20T04:21:21Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")\n+\n+test_that(\"eager execution is not enabled\", {\n+  # Start Spark session without eager execution enabled\n+  sparkSession <- if (windows_with_hadoop()) {\n+    sparkR.session(master = sparkRTestMaster)\n+  } else {\n+    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE)\n+  }\n+  \n+  df <- suppressWarnings(createDataFrame(iris))"
  }, {
    "author": {
      "login": "adrian555"
    },
    "body": "Done",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-09-20T20:57:45Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")\n+\n+test_that(\"eager execution is not enabled\", {\n+  # Start Spark session without eager execution enabled\n+  sparkSession <- if (windows_with_hadoop()) {\n+    sparkR.session(master = sparkRTestMaster)\n+  } else {\n+    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE)\n+  }\n+  \n+  df <- suppressWarnings(createDataFrame(iris))"
  }],
  "prId": 22455
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "ditto",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-09-20T04:21:33Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")\n+\n+test_that(\"eager execution is not enabled\", {\n+  # Start Spark session without eager execution enabled\n+  sparkSession <- if (windows_with_hadoop()) {\n+    sparkR.session(master = sparkRTestMaster)\n+  } else {\n+    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE)\n+  }\n+  \n+  df <- suppressWarnings(createDataFrame(iris))\n+  expect_is(df, \"SparkDataFrame\")\n+  expected <- \"Sepal_Length:double, Sepal_Width:double, Petal_Length:double, Petal_Width:double, Species:string\"\n+  expect_output(show(df), expected)\n+  \n+  # Stop Spark session\n+  sparkR.session.stop()\n+})\n+\n+test_that(\"eager execution is enabled\", {\n+  # Start Spark session without eager execution enabled\n+  sparkSession <- if (windows_with_hadoop()) {\n+    sparkR.session(master = sparkRTestMaster,\n+                   sparkConfig = list(spark.sql.repl.eagerEval.enabled = \"true\"))\n+  } else {\n+    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE, \n+                   sparkConfig = list(spark.sql.repl.eagerEval.enabled = \"true\"))\n+  }\n+  \n+  df <- suppressWarnings(createDataFrame(iris))"
  }, {
    "author": {
      "login": "adrian555"
    },
    "body": "Done",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-09-20T20:57:49Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")\n+\n+test_that(\"eager execution is not enabled\", {\n+  # Start Spark session without eager execution enabled\n+  sparkSession <- if (windows_with_hadoop()) {\n+    sparkR.session(master = sparkRTestMaster)\n+  } else {\n+    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE)\n+  }\n+  \n+  df <- suppressWarnings(createDataFrame(iris))\n+  expect_is(df, \"SparkDataFrame\")\n+  expected <- \"Sepal_Length:double, Sepal_Width:double, Petal_Length:double, Petal_Width:double, Species:string\"\n+  expect_output(show(df), expected)\n+  \n+  # Stop Spark session\n+  sparkR.session.stop()\n+})\n+\n+test_that(\"eager execution is enabled\", {\n+  # Start Spark session without eager execution enabled\n+  sparkSession <- if (windows_with_hadoop()) {\n+    sparkR.session(master = sparkRTestMaster,\n+                   sparkConfig = list(spark.sql.repl.eagerEval.enabled = \"true\"))\n+  } else {\n+    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE, \n+                   sparkConfig = list(spark.sql.repl.eagerEval.enabled = \"true\"))\n+  }\n+  \n+  df <- suppressWarnings(createDataFrame(iris))"
  }],
  "prId": 22455
}, {
  "comments": [{
    "author": {
      "login": "dilipbiswal"
    },
    "body": "Here we are testing with eager execution enabled, right ? Do we need to fix the comment here ?",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-09-20T21:56:05Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")\n+\n+test_that(\"eager execution is not enabled\", {\n+  # Start Spark session without eager execution enabled\n+  sparkSession <- if (windows_with_hadoop()) {\n+    sparkR.session(master = sparkRTestMaster)\n+  } else {\n+    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE)\n+  }\n+  \n+  df <- createDataFrame(faithful)\n+  expect_is(df, \"SparkDataFrame\")\n+  expected <- \"eruptions:double, waiting:double\"\n+  expect_output(show(df), expected)\n+  \n+  # Stop Spark session\n+  sparkR.session.stop()\n+})\n+\n+test_that(\"eager execution is enabled\", {\n+  # Start Spark session without eager execution enabled"
  }, {
    "author": {
      "login": "adrian555"
    },
    "body": "Done",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-09-20T22:03:54Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")\n+\n+test_that(\"eager execution is not enabled\", {\n+  # Start Spark session without eager execution enabled\n+  sparkSession <- if (windows_with_hadoop()) {\n+    sparkR.session(master = sparkRTestMaster)\n+  } else {\n+    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE)\n+  }\n+  \n+  df <- createDataFrame(faithful)\n+  expect_is(df, \"SparkDataFrame\")\n+  expected <- \"eruptions:double, waiting:double\"\n+  expect_output(show(df), expected)\n+  \n+  # Stop Spark session\n+  sparkR.session.stop()\n+})\n+\n+test_that(\"eager execution is enabled\", {\n+  # Start Spark session without eager execution enabled"
  }],
  "prId": 22455
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "I'd set sparkConfig to a list of values we need before calling sparkR.session, and simply reuse it for both cases instead of having them duplicated",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-09-23T06:31:20Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")\n+\n+test_that(\"eager execution is not enabled\", {\n+  # Start Spark session without eager execution enabled\n+  sparkSession <- if (windows_with_hadoop()) {\n+    sparkR.session(master = sparkRTestMaster)\n+  } else {\n+    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE)\n+  }\n+  \n+  df <- createDataFrame(faithful)\n+  expect_is(df, \"SparkDataFrame\")\n+  expected <- \"eruptions:double, waiting:double\"\n+  expect_output(show(df), expected)\n+  \n+  # Stop Spark session\n+  sparkR.session.stop()\n+})\n+\n+test_that(\"eager execution is enabled\", {\n+  # Start Spark session with eager execution enabled\n+  sparkSession <- if (windows_with_hadoop()) {\n+    sparkR.session(master = sparkRTestMaster,\n+                   sparkConfig = list(spark.sql.repl.eagerEval.enabled = \"true\",\n+                                      spark.sql.repl.eagerEval.maxNumRows = as.integer(10)))\n+  } else {\n+    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE, \n+                   sparkConfig = list(spark.sql.repl.eagerEval.enabled = \"true\",\n+                                      spark.sql.repl.eagerEval.maxNumRows = as.integer(10)))"
  }, {
    "author": {
      "login": "adrian555"
    },
    "body": "Done",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-09-24T18:17:14Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")\n+\n+test_that(\"eager execution is not enabled\", {\n+  # Start Spark session without eager execution enabled\n+  sparkSession <- if (windows_with_hadoop()) {\n+    sparkR.session(master = sparkRTestMaster)\n+  } else {\n+    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE)\n+  }\n+  \n+  df <- createDataFrame(faithful)\n+  expect_is(df, \"SparkDataFrame\")\n+  expected <- \"eruptions:double, waiting:double\"\n+  expect_output(show(df), expected)\n+  \n+  # Stop Spark session\n+  sparkR.session.stop()\n+})\n+\n+test_that(\"eager execution is enabled\", {\n+  # Start Spark session with eager execution enabled\n+  sparkSession <- if (windows_with_hadoop()) {\n+    sparkR.session(master = sparkRTestMaster,\n+                   sparkConfig = list(spark.sql.repl.eagerEval.enabled = \"true\",\n+                                      spark.sql.repl.eagerEval.maxNumRows = as.integer(10)))\n+  } else {\n+    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE, \n+                   sparkConfig = list(spark.sql.repl.eagerEval.enabled = \"true\",\n+                                      spark.sql.repl.eagerEval.maxNumRows = as.integer(10)))"
  }],
  "prId": 22455
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "actually you can use `, enableHiveSupport = FALSE` for this file in all cases - we only need the opposite for SQL tests",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-09-25T00:41:44Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")\n+\n+test_that(\"eager execution is not enabled\", {\n+  # Start Spark session without eager execution enabled\n+  sparkSession <- if (windows_with_hadoop()) {\n+    sparkR.session(master = sparkRTestMaster)\n+  } else {\n+    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE)"
  }, {
    "author": {
      "login": "adrian555"
    },
    "body": "Done",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-09-25T17:52:03Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")\n+\n+test_that(\"eager execution is not enabled\", {\n+  # Start Spark session without eager execution enabled\n+  sparkSession <- if (windows_with_hadoop()) {\n+    sparkR.session(master = sparkRTestMaster)\n+  } else {\n+    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE)"
  }],
  "prId": 22455
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "you should definitely set `enableHiveSupport = FALSE` - historically this hasn't work well in other R tests when hive catalog is enabled",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-09-29T04:54:57Z",
    "diffHunk": "@@ -21,11 +21,7 @@ context(\"Show SparkDataFrame when eager execution is enabled.\")\n \n test_that(\"eager execution is not enabled\", {\n   # Start Spark session without eager execution enabled\n-  sparkSession <- if (windows_with_hadoop()) {\n-    sparkR.session(master = sparkRTestMaster)\n-  } else {\n-    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE)\n-  }\n+  sparkR.session(master = sparkRTestMaster)"
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "as mentioned here https://github.com/apache/spark/pull/22455#discussion_r220030686\r\n",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-09-29T04:56:25Z",
    "diffHunk": "@@ -21,11 +21,7 @@ context(\"Show SparkDataFrame when eager execution is enabled.\")\n \n test_that(\"eager execution is not enabled\", {\n   # Start Spark session without eager execution enabled\n-  sparkSession <- if (windows_with_hadoop()) {\n-    sparkR.session(master = sparkRTestMaster)\n-  } else {\n-    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE)\n-  }\n+  sparkR.session(master = sparkRTestMaster)"
  }, {
    "author": {
      "login": "adrian555"
    },
    "body": "Sure. Guess I misinterpreted your other comment.",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-10-03T20:10:47Z",
    "diffHunk": "@@ -21,11 +21,7 @@ context(\"Show SparkDataFrame when eager execution is enabled.\")\n \n test_that(\"eager execution is not enabled\", {\n   # Start Spark session without eager execution enabled\n-  sparkSession <- if (windows_with_hadoop()) {\n-    sparkR.session(master = sparkRTestMaster)\n-  } else {\n-    sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE)\n-  }\n+  sparkR.session(master = sparkRTestMaster)"
  }],
  "prId": 22455
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "change this test to add `spark.sql.repl.eagerEval.truncate`\r\n\r\nalso add a new test with `spark.sql.repl.eagerEval.maxNumRows` not set.\r\n",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-10-21T19:02:21Z",
    "diffHunk": "@@ -0,0 +1,52 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")\n+\n+test_that(\"eager execution is not enabled\", {\n+  # Start Spark session without eager execution enabled\n+  sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE)\n+  \n+  df <- createDataFrame(faithful)\n+  expect_is(df, \"SparkDataFrame\")\n+  expected <- \"eruptions:double, waiting:double\"\n+  expect_output(show(df), expected)\n+  \n+  # Stop Spark session\n+  sparkR.session.stop()\n+})\n+\n+test_that(\"eager execution is enabled\", {\n+  # Start Spark session with eager execution enabled\n+  sparkConfig <- list(spark.sql.repl.eagerEval.enabled = \"true\",\n+                      spark.sql.repl.eagerEval.maxNumRows = as.integer(10))"
  }, {
    "author": {
      "login": "adrian555"
    },
    "body": "Done",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-10-23T17:55:34Z",
    "diffHunk": "@@ -0,0 +1,52 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")\n+\n+test_that(\"eager execution is not enabled\", {\n+  # Start Spark session without eager execution enabled\n+  sparkR.session(master = sparkRTestMaster, enableHiveSupport = FALSE)\n+  \n+  df <- createDataFrame(faithful)\n+  expect_is(df, \"SparkDataFrame\")\n+  expected <- \"eruptions:double, waiting:double\"\n+  expect_output(show(df), expected)\n+  \n+  # Stop Spark session\n+  sparkR.session.stop()\n+})\n+\n+test_that(\"eager execution is enabled\", {\n+  # Start Spark session with eager execution enabled\n+  sparkConfig <- list(spark.sql.repl.eagerEval.enabled = \"true\",\n+                      spark.sql.repl.eagerEval.maxNumRows = as.integer(10))"
  }],
  "prId": 22455
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "one thing to note, since test runs alphebatically, this test will run before sparkSQL - I think we should rename this file to `test_sparkSQL_eager.R` to ensure it runs after",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-10-21T19:07:30Z",
    "diffHunk": "@@ -0,0 +1,52 @@\n+#"
  }, {
    "author": {
      "login": "adrian555"
    },
    "body": "Done.",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-10-23T17:55:19Z",
    "diffHunk": "@@ -0,0 +1,52 @@\n+#"
  }],
  "prId": 22455
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "change text to `test show SparkDataFrame when eager execution is enabled.`",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-10-21T19:12:18Z",
    "diffHunk": "@@ -0,0 +1,52 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")"
  }, {
    "author": {
      "login": "adrian555"
    },
    "body": "Done",
    "commit": "2d2c3c638062633193642931e8c81e80151dd09d",
    "createdAt": "2018-10-23T17:55:26Z",
    "diffHunk": "@@ -0,0 +1,52 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"Show SparkDataFrame when eager execution is enabled.\")"
  }],
  "prId": 22455
}]