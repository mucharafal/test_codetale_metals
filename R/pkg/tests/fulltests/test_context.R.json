[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "@felixcheung, I remember we discourage to exclude this?",
    "commit": "07491b7738044a5ea514d6356ca0c1490bf3c3d1",
    "createdAt": "2018-07-24T03:58:52Z",
    "diffHunk": "@@ -21,10 +21,11 @@ test_that(\"Check masked functions\", {\n   # Check that we are not masking any new function from base, stats, testthat unexpectedly\n   # NOTE: We should avoid adding entries to *namesOfMaskedCompletely* as masked functions make it\n   # hard for users to use base R functions. Please check when in doubt.\n-  namesOfMaskedCompletely <- c(\"cov\", \"filter\", \"sample\", \"not\")\n+  namesOfMaskedCompletely <- c(\"cov\", \"filter\", \"sample\", \"not\", \"sequence\")"
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "yes, we should definitely try to avoid adding here (as in the comment above) unless we absolutely have to.\r\n\r\nin this case,[ base::sequence ](https://stat.ethz.ch/R-manual/R-devel/library/base/html/sequence.html)can be commonly used - we really need a way to avoid breaking it.\r\nfor example, could you try setting the generic as such:\r\n\r\n`setGeneric(\"sequence\", function(...) { standardGeneric(\"sequence\") })`",
    "commit": "07491b7738044a5ea514d6356ca0c1490bf3c3d1",
    "createdAt": "2018-07-24T06:11:47Z",
    "diffHunk": "@@ -21,10 +21,11 @@ test_that(\"Check masked functions\", {\n   # Check that we are not masking any new function from base, stats, testthat unexpectedly\n   # NOTE: We should avoid adding entries to *namesOfMaskedCompletely* as masked functions make it\n   # hard for users to use base R functions. Please check when in doubt.\n-  namesOfMaskedCompletely <- c(\"cov\", \"filter\", \"sample\", \"not\")\n+  namesOfMaskedCompletely <- c(\"cov\", \"filter\", \"sample\", \"not\", \"sequence\")"
  }, {
    "author": {
      "login": "huaxingao"
    },
    "body": "Thanks @HyukjinKwon @felixcheung for your review. I will change this. ",
    "commit": "07491b7738044a5ea514d6356ca0c1490bf3c3d1",
    "createdAt": "2018-07-24T18:18:48Z",
    "diffHunk": "@@ -21,10 +21,11 @@ test_that(\"Check masked functions\", {\n   # Check that we are not masking any new function from base, stats, testthat unexpectedly\n   # NOTE: We should avoid adding entries to *namesOfMaskedCompletely* as masked functions make it\n   # hard for users to use base R functions. Please check when in doubt.\n-  namesOfMaskedCompletely <- c(\"cov\", \"filter\", \"sample\", \"not\")\n+  namesOfMaskedCompletely <- c(\"cov\", \"filter\", \"sample\", \"not\", \"sequence\")"
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "thanks, this is a bit tricky because of the way tests work, could you do one check - install the package locally (`R CMD INSTALL --library=lib pkg/`) and then load the package from lib, in R, `library(SparkR, lib.loc='pathto/lib')`\r\nthen try calling base::sequence and SparkR::sequence\r\n\r\nalso, please add a test for base::sequence too - we have that for other functions",
    "commit": "07491b7738044a5ea514d6356ca0c1490bf3c3d1",
    "createdAt": "2018-07-25T06:58:22Z",
    "diffHunk": "@@ -21,10 +21,11 @@ test_that(\"Check masked functions\", {\n   # Check that we are not masking any new function from base, stats, testthat unexpectedly\n   # NOTE: We should avoid adding entries to *namesOfMaskedCompletely* as masked functions make it\n   # hard for users to use base R functions. Please check when in doubt.\n-  namesOfMaskedCompletely <- c(\"cov\", \"filter\", \"sample\", \"not\")\n+  namesOfMaskedCompletely <- c(\"cov\", \"filter\", \"sample\", \"not\", \"sequence\")"
  }],
  "prId": 21835
}]