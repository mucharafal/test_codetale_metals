[{
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "this is an important fix..",
    "commit": "04ec3e18e71b0f0e0d212a3532a6dc06518d61c0",
    "createdAt": "2018-12-08T07:39:14Z",
    "diffHunk": "@@ -84,19 +84,20 @@ test_that(\"spark.fpGrowth\", {\n })\n \n test_that(\"spark.prefixSpan\", {\n-    df <- createDataFrame(list(list(list(list(1L, 2L), list(3L))),\n-                          list(list(list(1L), list(3L, 2L), list(1L, 2L))),\n-                          list(list(list(1L, 2L), list(5L))),\n-                          list(list(list(6L)))), schema = c(\"sequence\"))\n-    result1 <- spark.findFrequentSequentialPatterns(df, minSupport = 0.5, maxPatternLength = 5L,\n-                                                    maxLocalProjDBSize = 32000000L)\n-\n-    expected_result <- createDataFrame(list(list(list(list(1L)), 3L),\n-                                            list(list(list(3L)), 2L),\n-                                            list(list(list(2L)), 3L),\n-                                            list(list(list(1L, 2L)), 3L),\n-                                            list(list(list(1L), list(3L)), 2L)),\n-                                            schema = c(\"sequence\", \"freq\"))\n-  })\n+  df <- createDataFrame(list(list(list(list(1L, 2L), list(3L))),\n+                             list(list(list(1L), list(3L, 2L), list(1L, 2L))),\n+                             list(list(list(1L, 2L), list(5L))),\n+                             list(list(list(6L)))),\n+                        schema = c(\"sequence\"))\n+  result <- spark.findFrequentSequentialPatterns(df, minSupport = 0.5, maxPatternLength = 5L,\n+                                                 maxLocalProjDBSize = 32000000L)\n+\n+  expected_result <- createDataFrame(list(list(list(list(1L)), 3L), list(list(list(3L)), 2L),\n+                                          list(list(list(2L)), 3L), list(list(list(1L, 2L)), 3L),\n+                                          list(list(list(1L), list(3L)), 2L)),\n+                                     schema = c(\"sequence\", \"freq\"))\n+\n+  expect_equivalent(expected_result, result)",
    "line": 31
  }],
  "prId": 23256
}]