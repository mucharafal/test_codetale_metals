[{
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "seealso needs to have a link:\n`@seealso \\link{window}`\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2015-12-02T20:20:41Z",
    "diffHunk": "@@ -0,0 +1,178 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# WindowSpec.R - WindowSpec class and methods implemented in S4 OO classes\n+\n+#' @include generics.R jobj.R column.R\n+\n+#' @title S4 class that represents a WindowSpec\n+#' @description WindowSpec can be created by using Window.partitionBy()\n+#'              or Window.orderBy()\n+#' @rdname WindowSpec\n+#' @seealso window"
  }],
  "prId": 10094
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "please add\n`@name`, `@family` for method in this file\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2015-12-02T20:21:37Z",
    "diffHunk": "@@ -0,0 +1,178 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# WindowSpec.R - WindowSpec class and methods implemented in S4 OO classes\n+\n+#' @include generics.R jobj.R column.R\n+\n+#' @title S4 class that represents a WindowSpec\n+#' @description WindowSpec can be created by using Window.partitionBy()\n+#'              or Window.orderBy()\n+#' @rdname WindowSpec\n+#' @seealso window\n+#'\n+#' @param sws A Java object reference to the backing Scala WindowSpec\n+#' @export\n+setClass(\"WindowSpec\",\n+         slots = list(sws = \"jobj\"))\n+\n+setMethod(\"initialize\", \"WindowSpec\", function(.Object, sws) {\n+  .Object@sws <- sws\n+  .Object\n+})\n+\n+windowSpec <- function(sws) {\n+  stopifnot(class(sws) == \"jobj\")\n+  new(\"WindowSpec\", sws)\n+}\n+\n+#' @rdname show\n+setMethod(\"show\", \"WindowSpec\",\n+          function(object) {\n+            cat(\"WindowSpec\", callJMethod(object@sws, \"toString\"), \"\\n\")\n+          })\n+\n+#' partitionBy\n+#'\n+#' Defines the partitioning columns in a WindowSpec.\n+#'\n+#' @param x a WindowSpec",
    "line": 54
  }, {
    "author": {
      "login": "sun-rui"
    },
    "body": "could you tell the effect of @name? it seems that @rdname  is enough?\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2015-12-07T11:49:30Z",
    "diffHunk": "@@ -0,0 +1,178 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# WindowSpec.R - WindowSpec class and methods implemented in S4 OO classes\n+\n+#' @include generics.R jobj.R column.R\n+\n+#' @title S4 class that represents a WindowSpec\n+#' @description WindowSpec can be created by using Window.partitionBy()\n+#'              or Window.orderBy()\n+#' @rdname WindowSpec\n+#' @seealso window\n+#'\n+#' @param sws A Java object reference to the backing Scala WindowSpec\n+#' @export\n+setClass(\"WindowSpec\",\n+         slots = list(sws = \"jobj\"))\n+\n+setMethod(\"initialize\", \"WindowSpec\", function(.Object, sws) {\n+  .Object@sws <- sws\n+  .Object\n+})\n+\n+windowSpec <- function(sws) {\n+  stopifnot(class(sws) == \"jobj\")\n+  new(\"WindowSpec\", sws)\n+}\n+\n+#' @rdname show\n+setMethod(\"show\", \"WindowSpec\",\n+          function(object) {\n+            cat(\"WindowSpec\", callJMethod(object@sws, \"toString\"), \"\\n\")\n+          })\n+\n+#' partitionBy\n+#'\n+#' Defines the partitioning columns in a WindowSpec.\n+#'\n+#' @param x a WindowSpec",
    "line": 54
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "roxygen2 requires it - if missing it would try to infer it. I think it is better to be explicit and also it would be consistent everywhere we have it.\nBut yes, it's optional: https://github.com/klutometis/roxygen/blob/3af98f2ca64cbbf2f2735ab4ef590b3fc39042ad/R/roclet-rd.R#L90\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2015-12-07T21:13:37Z",
    "diffHunk": "@@ -0,0 +1,178 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# WindowSpec.R - WindowSpec class and methods implemented in S4 OO classes\n+\n+#' @include generics.R jobj.R column.R\n+\n+#' @title S4 class that represents a WindowSpec\n+#' @description WindowSpec can be created by using Window.partitionBy()\n+#'              or Window.orderBy()\n+#' @rdname WindowSpec\n+#' @seealso window\n+#'\n+#' @param sws A Java object reference to the backing Scala WindowSpec\n+#' @export\n+setClass(\"WindowSpec\",\n+         slots = list(sws = \"jobj\"))\n+\n+setMethod(\"initialize\", \"WindowSpec\", function(.Object, sws) {\n+  .Object@sws <- sws\n+  .Object\n+})\n+\n+windowSpec <- function(sws) {\n+  stopifnot(class(sws) == \"jobj\")\n+  new(\"WindowSpec\", sws)\n+}\n+\n+#' @rdname show\n+setMethod(\"show\", \"WindowSpec\",\n+          function(object) {\n+            cat(\"WindowSpec\", callJMethod(object@sws, \"toString\"), \"\\n\")\n+          })\n+\n+#' partitionBy\n+#'\n+#' Defines the partitioning columns in a WindowSpec.\n+#'\n+#' @param x a WindowSpec",
    "line": 54
  }, {
    "author": {
      "login": "sun-rui"
    },
    "body": "OK. Thanks. I will add it\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2015-12-08T02:42:48Z",
    "diffHunk": "@@ -0,0 +1,178 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# WindowSpec.R - WindowSpec class and methods implemented in S4 OO classes\n+\n+#' @include generics.R jobj.R column.R\n+\n+#' @title S4 class that represents a WindowSpec\n+#' @description WindowSpec can be created by using Window.partitionBy()\n+#'              or Window.orderBy()\n+#' @rdname WindowSpec\n+#' @seealso window\n+#'\n+#' @param sws A Java object reference to the backing Scala WindowSpec\n+#' @export\n+setClass(\"WindowSpec\",\n+         slots = list(sws = \"jobj\"))\n+\n+setMethod(\"initialize\", \"WindowSpec\", function(.Object, sws) {\n+  .Object@sws <- sws\n+  .Object\n+})\n+\n+windowSpec <- function(sws) {\n+  stopifnot(class(sws) == \"jobj\")\n+  new(\"WindowSpec\", sws)\n+}\n+\n+#' @rdname show\n+setMethod(\"show\", \"WindowSpec\",\n+          function(object) {\n+            cat(\"WindowSpec\", callJMethod(object@sws, \"toString\"), \"\\n\")\n+          })\n+\n+#' partitionBy\n+#'\n+#' Defines the partitioning columns in a WindowSpec.\n+#'\n+#' @param x a WindowSpec",
    "line": 54
  }],
  "prId": 10094
}]