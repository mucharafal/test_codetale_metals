[{
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "let's quote with `\"` \r\noptionally, use `\\code{}`",
    "commit": "f33d0eafa5fc2a0b806c7016b42574045c3261af",
    "createdAt": "2017-05-30T06:45:16Z",
    "diffHunk": "@@ -70,6 +70,12 @@ setClass(\"IsotonicRegressionModel\", representation(jobj = \"jobj\"))\n #'                      the relationship between the variance and mean of the distribution. Only\n #'                      applicable to the Tweedie family.\n #' @param link.power the index in the power link function. Only applicable to the Tweedie family.\n+#' @param stringIndexerOrderType how to order categories of a string feature column. This is used to\n+#'                               decide the base level of a string feature as the last category after\n+#'                               ordering is dropped when encoding strings. Supported options are\n+#'                               'frequencyDesc', 'frequencyAsc', 'alphabetDesc', 'alphabetAsc'."
  }],
  "prId": 18140
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "given we need to spell it out, I'm wondering it it would be better to check the `stringIndexerOrderType` parameter to match on of the supported options in R?",
    "commit": "f33d0eafa5fc2a0b806c7016b42574045c3261af",
    "createdAt": "2017-05-30T06:52:00Z",
    "diffHunk": "@@ -110,7 +125,8 @@ setClass(\"IsotonicRegressionModel\", representation(jobj = \"jobj\"))\n #' @seealso \\link{glm}, \\link{read.ml}\n setMethod(\"spark.glm\", signature(data = \"SparkDataFrame\", formula = \"formula\"),\n           function(data, formula, family = gaussian, tol = 1e-6, maxIter = 25, weightCol = NULL,\n-                   regParam = 0.0, var.power = 0.0, link.power = 1.0 - var.power) {\n+                   regParam = 0.0, var.power = 0.0, link.power = 1.0 - var.power,\n+                   stringIndexerOrderType = \"frequencyDesc\") {"
  }, {
    "author": {
      "login": "actuaryzhang"
    },
    "body": "I don't think there are corresponding R options for this. One can convert the string into a factor and manipulate the factor easily. It's just the default approach is dropping the first alphabetical category. ",
    "commit": "f33d0eafa5fc2a0b806c7016b42574045c3261af",
    "createdAt": "2017-05-30T07:42:38Z",
    "diffHunk": "@@ -110,7 +125,8 @@ setClass(\"IsotonicRegressionModel\", representation(jobj = \"jobj\"))\n #' @seealso \\link{glm}, \\link{read.ml}\n setMethod(\"spark.glm\", signature(data = \"SparkDataFrame\", formula = \"formula\"),\n           function(data, formula, family = gaussian, tol = 1e-6, maxIter = 25, weightCol = NULL,\n-                   regParam = 0.0, var.power = 0.0, link.power = 1.0 - var.power) {\n+                   regParam = 0.0, var.power = 0.0, link.power = 1.0 - var.power,\n+                   stringIndexerOrderType = \"frequencyDesc\") {"
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "actually, I mean it as https://github.com/actuaryzhang/spark/blob/66bc786add41df52baead5a7d38b0b6b035d764d/R/pkg/R/mllib_clustering.R#L167\r\n\r\nbut then we will need to tweak it to have a default value",
    "commit": "f33d0eafa5fc2a0b806c7016b42574045c3261af",
    "createdAt": "2017-05-31T16:15:19Z",
    "diffHunk": "@@ -110,7 +125,8 @@ setClass(\"IsotonicRegressionModel\", representation(jobj = \"jobj\"))\n #' @seealso \\link{glm}, \\link{read.ml}\n setMethod(\"spark.glm\", signature(data = \"SparkDataFrame\", formula = \"formula\"),\n           function(data, formula, family = gaussian, tol = 1e-6, maxIter = 25, weightCol = NULL,\n-                   regParam = 0.0, var.power = 0.0, link.power = 1.0 - var.power) {\n+                   regParam = 0.0, var.power = 0.0, link.power = 1.0 - var.power,\n+                   stringIndexerOrderType = \"frequencyDesc\") {"
  }, {
    "author": {
      "login": "actuaryzhang"
    },
    "body": "I see. Added argument matching in the new commit.",
    "commit": "f33d0eafa5fc2a0b806c7016b42574045c3261af",
    "createdAt": "2017-05-31T18:34:34Z",
    "diffHunk": "@@ -110,7 +125,8 @@ setClass(\"IsotonicRegressionModel\", representation(jobj = \"jobj\"))\n #' @seealso \\link{glm}, \\link{read.ml}\n setMethod(\"spark.glm\", signature(data = \"SparkDataFrame\", formula = \"formula\"),\n           function(data, formula, family = gaussian, tol = 1e-6, maxIter = 25, weightCol = NULL,\n-                   regParam = 0.0, var.power = 0.0, link.power = 1.0 - var.power) {\n+                   regParam = 0.0, var.power = 0.0, link.power = 1.0 - var.power,\n+                   stringIndexerOrderType = \"frequencyDesc\") {"
  }],
  "prId": 18140
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "nit: I think we don't need `as.character` now as `stringIndexerOrderType` is from `match.arg`?",
    "commit": "f33d0eafa5fc2a0b806c7016b42574045c3261af",
    "createdAt": "2017-06-19T07:02:35Z",
    "diffHunk": "@@ -145,7 +163,8 @@ setMethod(\"spark.glm\", signature(data = \"SparkDataFrame\", formula = \"formula\"),\n             jobj <- callJStatic(\"org.apache.spark.ml.r.GeneralizedLinearRegressionWrapper\",\n                                 \"fit\", formula, data@sdf, tolower(family$family), family$link,\n                                 tol, as.integer(maxIter), weightCol, regParam,\n-                                as.double(var.power), as.double(link.power))\n+                                as.double(var.power), as.double(link.power),\n+                                as.character(stringIndexerOrderType))"
  }],
  "prId": 18140
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "maybe we don't need here, since we are calling spark.glm which will do the same check",
    "commit": "f33d0eafa5fc2a0b806c7016b42574045c3261af",
    "createdAt": "2017-06-19T07:03:43Z",
    "diffHunk": "@@ -182,9 +207,13 @@ setMethod(\"spark.glm\", signature(data = \"SparkDataFrame\", formula = \"formula\"),\n #' @seealso \\link{spark.glm}\n setMethod(\"glm\", signature(formula = \"formula\", family = \"ANY\", data = \"SparkDataFrame\"),\n           function(formula, family = gaussian, data, epsilon = 1e-6, maxit = 25, weightCol = NULL,\n-                   var.power = 0.0, link.power = 1.0 - var.power) {\n+                   var.power = 0.0, link.power = 1.0 - var.power,\n+                   stringIndexerOrderType = c(\"frequencyDesc\", \"frequencyAsc\",\n+                                              \"alphabetDesc\", \"alphabetAsc\")) {\n+            stringIndexerOrderType <- match.arg(stringIndexerOrderType)"
  }],
  "prId": 18140
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "ditto",
    "commit": "f33d0eafa5fc2a0b806c7016b42574045c3261af",
    "createdAt": "2017-06-19T07:04:14Z",
    "diffHunk": "@@ -443,10 +478,14 @@ setMethod(\"write.ml\", signature(object = \"IsotonicRegressionModel\", path = \"char\n #' }\n #' @note spark.survreg since 2.0.0\n setMethod(\"spark.survreg\", signature(data = \"SparkDataFrame\", formula = \"formula\"),\n-          function(data, formula, aggregationDepth = 2) {\n+          function(data, formula, aggregationDepth = 2,\n+                   stringIndexerOrderType = c(\"frequencyDesc\", \"frequencyAsc\",\n+                                              \"alphabetDesc\", \"alphabetAsc\")) {\n+            stringIndexerOrderType <- match.arg(stringIndexerOrderType)\n             formula <- paste(deparse(formula), collapse = \"\")\n             jobj <- callJStatic(\"org.apache.spark.ml.r.AFTSurvivalRegressionWrapper\",\n-                                \"fit\", formula, data@sdf, as.integer(aggregationDepth))\n+                                \"fit\", formula, data@sdf, as.integer(aggregationDepth),\n+                                as.character(stringIndexerOrderType))"
  }],
  "prId": 18140
}]