[{
  "comments": [{
    "author": {
      "login": "wangmiao1981"
    },
    "body": "`backing` -> `backend`?",
    "commit": "afcd0914e6e0e19cb3848b1f6190d981e66f5af5",
    "createdAt": "2017-05-13T00:35:20Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+#' S4 class that represents a Java ML model\n+#'\n+#' @param jobj a Java object reference to the backing Scala model",
    "line": 20
  }, {
    "author": {
      "login": "zero323"
    },
    "body": "We use \"backing\" all over the docs. I am not sure if backend is really better or not, but changing this only here doesn't make sense.",
    "commit": "afcd0914e6e0e19cb3848b1f6190d981e66f5af5",
    "createdAt": "2017-05-13T00:54:53Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+#' S4 class that represents a Java ML model\n+#'\n+#' @param jobj a Java object reference to the backing Scala model",
    "line": 20
  }],
  "prId": 17969
}, {
  "comments": [{
    "author": {
      "login": "wangmiao1981"
    },
    "body": "`A` -> `a` ?",
    "commit": "afcd0914e6e0e19cb3848b1f6190d981e66f5af5",
    "createdAt": "2017-05-13T00:36:15Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+#' S4 class that represents a Java ML model\n+#'\n+#' @param jobj a Java object reference to the backing Scala model\n+#' @export\n+#' @note JavaModel since 2.3.0\n+setClass(\"JavaModel\", representation(jobj = \"jobj\"))\n+\n+#' Makes predictions from a Java ML model\n+#'\n+#' @param object a Spark ML model.\n+#' @param newData a SparkDataFrame for testing.\n+#' @return \\code{predict} returns a SparkDataFrame containing predicted value.\n+#' @rdname spark.predict\n+#' @aliases predict,JavaModel-method\n+#' @export\n+#' @note predict since 2.3.0\n+setMethod(\"predict\", signature(object = \"JavaModel\"),\n+          function(object, newData) {\n+            predict_internal(object, newData)\n+          })\n+\n+#' S4 class that represents a writable Java ML model\n+#'\n+#' @param jobj a Java object reference to the backing Scala model\n+#' @export\n+#' @note JavaMLWritable since 2.3.0\n+setClass(\"JavaMLWritable\", representation(jobj = \"jobj\"))\n+\n+#  Save the ML model to the output path.\n+\n+#' @param object A fitted ML model."
  }],
  "prId": 17969
}, {
  "comments": [{
    "author": {
      "login": "wangmiao1981"
    },
    "body": "`O` -> `o` ? ",
    "commit": "afcd0914e6e0e19cb3848b1f6190d981e66f5af5",
    "createdAt": "2017-05-13T00:37:08Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+#' S4 class that represents a Java ML model\n+#'\n+#' @param jobj a Java object reference to the backing Scala model\n+#' @export\n+#' @note JavaModel since 2.3.0\n+setClass(\"JavaModel\", representation(jobj = \"jobj\"))\n+\n+#' Makes predictions from a Java ML model\n+#'\n+#' @param object a Spark ML model.\n+#' @param newData a SparkDataFrame for testing.\n+#' @return \\code{predict} returns a SparkDataFrame containing predicted value.\n+#' @rdname spark.predict\n+#' @aliases predict,JavaModel-method\n+#' @export\n+#' @note predict since 2.3.0\n+setMethod(\"predict\", signature(object = \"JavaModel\"),\n+          function(object, newData) {\n+            predict_internal(object, newData)\n+          })\n+\n+#' S4 class that represents a writable Java ML model\n+#'\n+#' @param jobj a Java object reference to the backing Scala model\n+#' @export\n+#' @note JavaMLWritable since 2.3.0\n+setClass(\"JavaMLWritable\", representation(jobj = \"jobj\"))\n+\n+#  Save the ML model to the output path.\n+\n+#' @param object A fitted ML model.\n+#' @param path The directory where the model is saved.\n+#' @param overwrite Overwrites or not if the output path already exists. Default is FALSE"
  }],
  "prId": 17969
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "would it make the method harder to find in generated html doc or search with `?` not as intuitive?",
    "commit": "afcd0914e6e0e19cb3848b1f6190d981e66f5af5",
    "createdAt": "2017-05-13T04:09:02Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+#' S4 class that represents a Java ML model\n+#'\n+#' @param jobj a Java object reference to the backing Scala model\n+#' @export\n+#' @note JavaModel since 2.3.0\n+setClass(\"JavaModel\", representation(jobj = \"jobj\"))\n+\n+#' Makes predictions from a Java ML model\n+#'\n+#' @param object a Spark ML model.\n+#' @param newData a SparkDataFrame for testing.\n+#' @return \\code{predict} returns a SparkDataFrame containing predicted value.\n+#' @rdname spark.predict\n+#' @aliases predict,JavaModel-method",
    "line": 31
  }, {
    "author": {
      "login": "zero323"
    },
    "body": "I am biased here, but I'll argue that it doesn't. Both `predict` and `write.ml` (same as `read.ml`) are extremely generic and in  general we don't provide any useful information about these. And the usage is already covered by class `examples`.  Finally we can use `@seealso` to provide a bit more R-is experience if you think it is not enough  Something around the lines of `lm` docs:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/1554276/26024731/2214f012-37d8-11e7-9afb-b750e9c647ff.png)\r\n\r\n\r\nMoreover using this approach significantly reduces amount of clutter in the generated docs. There are shorter, argument list is focused on the important parts, same as `value`. See for example GLM docs below.  So IMHO this is actually a significant improvement.\r\n\r\nPersonally I would do the same with all the `prints` and `summaries` as well, although it wouldn't reduce the codebase (for now.... ðŸ˜ˆ).  This would further shorten the docs and remove awkward descriptions like this:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/1554276/26024707/567b2020-37d7-11e7-8c21-260404d7767d.png)\r\n \r\nAnd from the developer side it is a clear win. No mindless copy / paste / replace cycle and more time to provide useful examples.\r\n\r\n __Before__:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/1554276/26024648/1c36253c-37d6-11e7-9411-72c0c14c54a8.png)\r\n\r\n__After__:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/1554276/26024653/2643bd64-37d6-11e7-8463-08662611cd37.png)\r\n\r\n \r\n\r\n",
    "commit": "afcd0914e6e0e19cb3848b1f6190d981e66f5af5",
    "createdAt": "2017-05-13T10:32:33Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+#' S4 class that represents a Java ML model\n+#'\n+#' @param jobj a Java object reference to the backing Scala model\n+#' @export\n+#' @note JavaModel since 2.3.0\n+setClass(\"JavaModel\", representation(jobj = \"jobj\"))\n+\n+#' Makes predictions from a Java ML model\n+#'\n+#' @param object a Spark ML model.\n+#' @param newData a SparkDataFrame for testing.\n+#' @return \\code{predict} returns a SparkDataFrame containing predicted value.\n+#' @rdname spark.predict\n+#' @aliases predict,JavaModel-method",
    "line": 31
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "Hmm, I see your view, though at some level I see it a benefit to have predict and write.ml in the same RD / help page as your attached image \"Before\"",
    "commit": "afcd0914e6e0e19cb3848b1f6190d981e66f5af5",
    "createdAt": "2017-05-14T18:53:15Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+#' S4 class that represents a Java ML model\n+#'\n+#' @param jobj a Java object reference to the backing Scala model\n+#' @export\n+#' @note JavaModel since 2.3.0\n+setClass(\"JavaModel\", representation(jobj = \"jobj\"))\n+\n+#' Makes predictions from a Java ML model\n+#'\n+#' @param object a Spark ML model.\n+#' @param newData a SparkDataFrame for testing.\n+#' @return \\code{predict} returns a SparkDataFrame containing predicted value.\n+#' @rdname spark.predict\n+#' @aliases predict,JavaModel-method",
    "line": 31
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "And no doubt it's much easier as developer to add models.",
    "commit": "afcd0914e6e0e19cb3848b1f6190d981e66f5af5",
    "createdAt": "2017-05-14T18:55:10Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+#' S4 class that represents a Java ML model\n+#'\n+#' @param jobj a Java object reference to the backing Scala model\n+#' @export\n+#' @note JavaModel since 2.3.0\n+setClass(\"JavaModel\", representation(jobj = \"jobj\"))\n+\n+#' Makes predictions from a Java ML model\n+#'\n+#' @param object a Spark ML model.\n+#' @param newData a SparkDataFrame for testing.\n+#' @return \\code{predict} returns a SparkDataFrame containing predicted value.\n+#' @rdname spark.predict\n+#' @aliases predict,JavaModel-method",
    "line": 31
  }, {
    "author": {
      "login": "zero323"
    },
    "body": "I believe there is no conflict here. If you find this useful you can use templates to include additional information about generic operations. Very simple example https://github.com/zero323/spark/commit/64a3e854792181e159d39b9e747170b707f2711d\r\n\r\nwhich would create section like this:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/1554276/26038702/72b70280-390e-11e7-922c-0d1dece4816e.png)\r\n\r\nThis can be further parametrized if needed.",
    "commit": "afcd0914e6e0e19cb3848b1f6190d981e66f5af5",
    "createdAt": "2017-05-14T23:33:39Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+#' S4 class that represents a Java ML model\n+#'\n+#' @param jobj a Java object reference to the backing Scala model\n+#' @export\n+#' @note JavaModel since 2.3.0\n+setClass(\"JavaModel\", representation(jobj = \"jobj\"))\n+\n+#' Makes predictions from a Java ML model\n+#'\n+#' @param object a Spark ML model.\n+#' @param newData a SparkDataFrame for testing.\n+#' @return \\code{predict} returns a SparkDataFrame containing predicted value.\n+#' @rdname spark.predict\n+#' @aliases predict,JavaModel-method",
    "line": 31
  }],
  "prId": 17969
}]