[{
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "is it a good idea to have `.` in method name?\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2015-12-02T20:19:44Z",
    "diffHunk": "@@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# window.R - Utility functions for defining window in DataFrames\n+\n+#' Window.partitionBy\n+#'\n+#' Creates a WindowSpec with the partitioning defined.\n+#'\n+#' @rdname Window.partitionBy\n+#' @export\n+#' @examples\n+#' \\dontrun{\n+#'   Window.partitionBy(\"col1\", \"col2\")\n+#'   Window.partitionBy(df$col1, df$col2)\n+#' }\n+setMethod(\"Window.partitionBy\","
  }, {
    "author": {
      "login": "sun-rui"
    },
    "body": "it is common to have . in method names in R, like is.numeric(), as.numeric()\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2015-12-07T07:21:41Z",
    "diffHunk": "@@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# window.R - Utility functions for defining window in DataFrames\n+\n+#' Window.partitionBy\n+#'\n+#' Creates a WindowSpec with the partitioning defined.\n+#'\n+#' @rdname Window.partitionBy\n+#' @export\n+#' @examples\n+#' \\dontrun{\n+#'   Window.partitionBy(\"col1\", \"col2\")\n+#'   Window.partitionBy(df$col1, df$col2)\n+#' }\n+setMethod(\"Window.partitionBy\","
  }, {
    "author": {
      "login": "sun-rui"
    },
    "body": "More explaination for naming of Window.partitionBy() and Window.orderBy(): I could use partitionBy() and orderBy(), but I think it is a little bit confusing. Such naming scheme is consistent with usage in Scala, for example, https://github.com/apache/spark/blob/master/sql/hive/src/test/scala/org/apache/spark/sql/hive/HiveDataFrameWindowSuite.scala#L31 and https://github.com/apache/spark/blob/master/sql/hive/src/test/scala/org/apache/spark/sql/hive/HiveDataFrameWindowSuite.scala#L42\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2015-12-07T07:30:54Z",
    "diffHunk": "@@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# window.R - Utility functions for defining window in DataFrames\n+\n+#' Window.partitionBy\n+#'\n+#' Creates a WindowSpec with the partitioning defined.\n+#'\n+#' @rdname Window.partitionBy\n+#' @export\n+#' @examples\n+#' \\dontrun{\n+#'   Window.partitionBy(\"col1\", \"col2\")\n+#'   Window.partitionBy(df$col1, df$col2)\n+#' }\n+setMethod(\"Window.partitionBy\","
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "Is it better to start with lower case 'w'? It seems to me functions in R generally starts lowered-case\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2015-12-07T21:11:08Z",
    "diffHunk": "@@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# window.R - Utility functions for defining window in DataFrames\n+\n+#' Window.partitionBy\n+#'\n+#' Creates a WindowSpec with the partitioning defined.\n+#'\n+#' @rdname Window.partitionBy\n+#' @export\n+#' @examples\n+#' \\dontrun{\n+#'   Window.partitionBy(\"col1\", \"col2\")\n+#'   Window.partitionBy(df$col1, df$col2)\n+#' }\n+setMethod(\"Window.partitionBy\","
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "right i was thinking it might be easier to users not having to remember which partitionBy() to use if we could infer it by context and not having to name them differently\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2015-12-07T21:12:25Z",
    "diffHunk": "@@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# window.R - Utility functions for defining window in DataFrames\n+\n+#' Window.partitionBy\n+#'\n+#' Creates a WindowSpec with the partitioning defined.\n+#'\n+#' @rdname Window.partitionBy\n+#' @export\n+#' @examples\n+#' \\dontrun{\n+#'   Window.partitionBy(\"col1\", \"col2\")\n+#'   Window.partitionBy(df$col1, df$col2)\n+#' }\n+setMethod(\"Window.partitionBy\","
  }, {
    "author": {
      "login": "sun-rui"
    },
    "body": "@shivaram, what's your opinion?\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2015-12-08T02:45:36Z",
    "diffHunk": "@@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# window.R - Utility functions for defining window in DataFrames\n+\n+#' Window.partitionBy\n+#'\n+#' Creates a WindowSpec with the partitioning defined.\n+#'\n+#' @rdname Window.partitionBy\n+#' @export\n+#' @examples\n+#' \\dontrun{\n+#'   Window.partitionBy(\"col1\", \"col2\")\n+#'   Window.partitionBy(df$col1, df$col2)\n+#' }\n+setMethod(\"Window.partitionBy\","
  }, {
    "author": {
      "login": "shivaram"
    },
    "body": "@sun-rui The scala example links don't seem to work anymore. Is there a new pointer to how this API looks in Python / Scala ?\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2016-05-03T16:38:33Z",
    "diffHunk": "@@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# window.R - Utility functions for defining window in DataFrames\n+\n+#' Window.partitionBy\n+#'\n+#' Creates a WindowSpec with the partitioning defined.\n+#'\n+#' @rdname Window.partitionBy\n+#' @export\n+#' @examples\n+#' \\dontrun{\n+#'   Window.partitionBy(\"col1\", \"col2\")\n+#'   Window.partitionBy(df$col1, df$col2)\n+#' }\n+setMethod(\"Window.partitionBy\","
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "+1 on \"window.*\" lower cased - I think it is consistent with other things we are adding \"spark.lapply\" \"read.ml\" etc.\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2016-05-04T04:57:26Z",
    "diffHunk": "@@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# window.R - Utility functions for defining window in DataFrames\n+\n+#' Window.partitionBy\n+#'\n+#' Creates a WindowSpec with the partitioning defined.\n+#'\n+#' @rdname Window.partitionBy\n+#' @export\n+#' @examples\n+#' \\dontrun{\n+#'   Window.partitionBy(\"col1\", \"col2\")\n+#'   Window.partitionBy(df$col1, df$col2)\n+#' }\n+setMethod(\"Window.partitionBy\","
  }, {
    "author": {
      "login": "shivaram"
    },
    "body": "yeah I think lower case `window.*` is better as its similar to `read.df` and `spark.lapply` etc.\n@sun-rui Do you know if dplyr or some other R package supports windowing similar to this ?\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2016-05-04T06:08:19Z",
    "diffHunk": "@@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# window.R - Utility functions for defining window in DataFrames\n+\n+#' Window.partitionBy\n+#'\n+#' Creates a WindowSpec with the partitioning defined.\n+#'\n+#' @rdname Window.partitionBy\n+#' @export\n+#' @examples\n+#' \\dontrun{\n+#'   Window.partitionBy(\"col1\", \"col2\")\n+#'   Window.partitionBy(df$col1, df$col2)\n+#' }\n+setMethod(\"Window.partitionBy\","
  }, {
    "author": {
      "login": "sun-rui"
    },
    "body": "Naming in Scala: Window.partitionBy - https://github.com/apache/spark/blob/master/sql/core/src/test/scala/org/apache/spark/sql/DataFrameWindowSuite.scala#L30\nWindow.orderBy - https://github.com/apache/spark/blob/master/sql/core/src/test/scala/org/apache/spark/sql/DataFrameWindowSuite.scala#L41\n\ndplyr supports window functions, see https://cran.r-project.org/web/packages/dplyr/vignettes/window-functions.html\n\nbut here window.\\* names are for factory methods in Scala, not window functions themselves. Refer to https://github.com/apache/spark/blob/master/sql/core/src/main/scala/org/apache/spark/sql/expressions/Window.scala\n\nI am ok with \"window.*\". \n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2016-05-04T10:17:32Z",
    "diffHunk": "@@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# window.R - Utility functions for defining window in DataFrames\n+\n+#' Window.partitionBy\n+#'\n+#' Creates a WindowSpec with the partitioning defined.\n+#'\n+#' @rdname Window.partitionBy\n+#' @export\n+#' @examples\n+#' \\dontrun{\n+#'   Window.partitionBy(\"col1\", \"col2\")\n+#'   Window.partitionBy(df$col1, df$col2)\n+#' }\n+setMethod(\"Window.partitionBy\","
  }, {
    "author": {
      "login": "shivaram"
    },
    "body": "Yeah lets go with \"window.*\" - Thanks for the pointer to the Scala files.\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2016-05-04T22:21:15Z",
    "diffHunk": "@@ -0,0 +1,88 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# window.R - Utility functions for defining window in DataFrames\n+\n+#' Window.partitionBy\n+#'\n+#' Creates a WindowSpec with the partitioning defined.\n+#'\n+#' @rdname Window.partitionBy\n+#' @export\n+#' @examples\n+#' \\dontrun{\n+#'   Window.partitionBy(\"col1\", \"col2\")\n+#'   Window.partitionBy(df$col1, df$col2)\n+#' }\n+setMethod(\"Window.partitionBy\","
  }],
  "prId": 10094
}, {
  "comments": [{
    "author": {
      "login": "shivaram"
    },
    "body": "Should we define these as S3 functions  ? I think we have so far used S4 functions for methods within a class - here I don't think we have a class per-se ?\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2016-05-04T22:23:18Z",
    "diffHunk": "@@ -0,0 +1,92 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# window.R - Utility functions for defining window in DataFrames\n+\n+#' Window.partitionBy\n+#'\n+#' Creates a WindowSpec with the partitioning defined.\n+#'\n+#' @rdname Window.partitionBy\n+#' @name Window.partitionBy\n+#' @export\n+#' @examples\n+#' \\dontrun{\n+#'   Window.partitionBy(\"col1\", \"col2\")\n+#'   Window.partitionBy(df$col1, df$col2)\n+#' }\n+setMethod(\"Window.partitionBy\",\n+          signature(col = \"character\"),\n+          function(col, ...) {\n+            windowSpec(\n+              callJStatic(\"org.apache.spark.sql.expressions.Window\",\n+                          \"partitionBy\",\n+                          col,\n+                          list(...)))\n+          })\n+\n+#' @rdname Window.partitionBy\n+#' @name Window.partitionBy\n+#' @export\n+setMethod(\"Window.partitionBy\","
  }, {
    "author": {
      "login": "sun-rui"
    },
    "body": "We already have S4 functions for those in org.apache.spark.sql.functions in Scala which don't have a class. I could implement these 2 as S3 or normal functions. But I think implementing them as S4 functions are consistent and having the benefit of checking parameter types.\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2016-05-05T03:55:50Z",
    "diffHunk": "@@ -0,0 +1,92 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# window.R - Utility functions for defining window in DataFrames\n+\n+#' Window.partitionBy\n+#'\n+#' Creates a WindowSpec with the partitioning defined.\n+#'\n+#' @rdname Window.partitionBy\n+#' @name Window.partitionBy\n+#' @export\n+#' @examples\n+#' \\dontrun{\n+#'   Window.partitionBy(\"col1\", \"col2\")\n+#'   Window.partitionBy(df$col1, df$col2)\n+#' }\n+setMethod(\"Window.partitionBy\",\n+          signature(col = \"character\"),\n+          function(col, ...) {\n+            windowSpec(\n+              callJStatic(\"org.apache.spark.sql.expressions.Window\",\n+                          \"partitionBy\",\n+                          col,\n+                          list(...)))\n+          })\n+\n+#' @rdname Window.partitionBy\n+#' @name Window.partitionBy\n+#' @export\n+setMethod(\"Window.partitionBy\","
  }],
  "prId": 10094
}, {
  "comments": [{
    "author": {
      "login": "shivaram"
    },
    "body": "Can we give a full length example here ? i.e. how to use windowing with a query and what it means (something like what we have in the unit test ?)\n",
    "commit": "c6424d2c3c064de5e4fa368bf567a6e4352d443e",
    "createdAt": "2016-05-05T06:36:56Z",
    "diffHunk": "@@ -0,0 +1,92 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# window.R - Utility functions for defining window in DataFrames\n+\n+#' window.partitionBy\n+#'\n+#' Creates a WindowSpec with the partitioning defined.\n+#'\n+#' @rdname window.partitionBy\n+#' @name window.partitionBy\n+#' @export\n+#' @examples\n+#' \\dontrun{\n+#'   window.partitionBy(\"col1\", \"col2\")"
  }],
  "prId": 10094
}]