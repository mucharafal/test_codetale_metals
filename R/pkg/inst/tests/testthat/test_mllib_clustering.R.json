[{
  "comments": [{
    "author": {
      "login": "yanboliang"
    },
    "body": "It looks like the test case is insensitive to ```seed```, could you add a test case which is sensitive to ```seed```? Or add a test case whose termination controlled by ```tol```? We need to make sure these arguments will take effect.",
    "commit": "1c27df4d8e9ed405ef5a9705cffd67f9d3adc4ff",
    "createdAt": "2017-01-10T14:23:13Z",
    "diffHunk": "@@ -99,7 +99,8 @@ test_that(\"spark.kmeans\", {\n \n   take(training, 1)\n \n-  model <- spark.kmeans(data = training, ~ ., k = 2, maxIter = 10, initMode = \"random\")\n+  model <- spark.kmeans(data = training, ~ ., k = 2, maxIter = 10, initMode = \"random\", seed = 1,\n+                        initSteps = 3, tol = 1E-5)"
  }, {
    "author": {
      "login": "wangmiao1981"
    },
    "body": "Sounds good. I will compose a test that is really controlled by the parameters.",
    "commit": "1c27df4d8e9ed405ef5a9705cffd67f9d3adc4ff",
    "createdAt": "2017-01-10T18:46:15Z",
    "diffHunk": "@@ -99,7 +99,8 @@ test_that(\"spark.kmeans\", {\n \n   take(training, 1)\n \n-  model <- spark.kmeans(data = training, ~ ., k = 2, maxIter = 10, initMode = \"random\")\n+  model <- spark.kmeans(data = training, ~ ., k = 2, maxIter = 10, initMode = \"random\", seed = 1,\n+                        initSteps = 3, tol = 1E-5)"
  }, {
    "author": {
      "login": "wangmiao1981"
    },
    "body": "I tested existing unit tests in KmeansSuite.scala in both ML and MLLIB. They are all insensitive to `seed` and `tol`. I think I should compose tests use `random` as `initMode`.",
    "commit": "1c27df4d8e9ed405ef5a9705cffd67f9d3adc4ff",
    "createdAt": "2017-01-11T18:31:25Z",
    "diffHunk": "@@ -99,7 +99,8 @@ test_that(\"spark.kmeans\", {\n \n   take(training, 1)\n \n-  model <- spark.kmeans(data = training, ~ ., k = 2, maxIter = 10, initMode = \"random\")\n+  model <- spark.kmeans(data = training, ~ ., k = 2, maxIter = 10, initMode = \"random\", seed = 1,\n+                        initSteps = 3, tol = 1E-5)"
  }],
  "prId": 16523
}, {
  "comments": [{
    "author": {
      "login": "yanboliang"
    },
    "body": "typo? ```model2 <- model <- spark.kmeans```",
    "commit": "1c27df4d8e9ed405ef5a9705cffd67f9d3adc4ff",
    "createdAt": "2017-01-12T13:30:26Z",
    "diffHunk": "@@ -132,6 +132,26 @@ test_that(\"spark.kmeans\", {\n   expect_true(summary2$is.loaded)\n \n   unlink(modelPath)\n+\n+  # Test Kmeans on dataset that is sensitive to seed value\n+  col1 <- c(1, 2, 3, 4, 0, 1, 2, 3, 4, 0)\n+  col2 <- c(1, 2, 3, 4, 0, 1, 2, 3, 4, 0)\n+  col3 <- c(1, 2, 3, 4, 0, 1, 2, 3, 4, 0)\n+  cols <- as.data.frame(cbind(col1, col2, col3))\n+  df <- createDataFrame(cols)\n+\n+  model1 <- spark.kmeans(data = df, ~ ., k = 5, maxIter = 10,\n+                         initMode = \"random\", seed = 1, tol = 1E-5)\n+  model2 <- model <- spark.kmeans(data = df, ~ ., k = 5, maxIter = 10,"
  }],
  "prId": 16523
}]