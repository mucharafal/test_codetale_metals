[{
  "comments": [{
    "author": {
      "login": "davies"
    },
    "body": "The tests run inside SparkR package, so we don't need `SparkR:::` here, I think.\n",
    "commit": "3dfac0c2a306a901e34287adc03678dcc08ec677",
    "createdAt": "2015-07-18T07:13:36Z",
    "diffHunk": "@@ -0,0 +1,34 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"MLLib functions\")\n+\n+# Tests for MLLib functions in SparkR\n+\n+sc <- sparkR.init()\n+\n+sqlContext <- sparkRSQL.init(sc)\n+\n+test_that(\"glm and predict\", {\n+  training <- createDataFrame(sqlContext, iris)\n+  test <- select(training, \"Sepal_Length\")\n+  model <- SparkR:::glm(Sepal_Width ~ Sepal_Length, training, family = \"gaussian\")"
  }, {
    "author": {
      "login": "ericl"
    },
    "body": "Done\n",
    "commit": "3dfac0c2a306a901e34287adc03678dcc08ec677",
    "createdAt": "2015-07-20T19:11:28Z",
    "diffHunk": "@@ -0,0 +1,34 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"MLLib functions\")\n+\n+# Tests for MLLib functions in SparkR\n+\n+sc <- sparkR.init()\n+\n+sqlContext <- sparkRSQL.init(sc)\n+\n+test_that(\"glm and predict\", {\n+  training <- createDataFrame(sqlContext, iris)\n+  test <- select(training, \"Sepal_Length\")\n+  model <- SparkR:::glm(Sepal_Width ~ Sepal_Length, training, family = \"gaussian\")"
  }],
  "prId": 7483
}, {
  "comments": [{
    "author": {
      "login": "shivaram"
    },
    "body": "It would be good to see if we get the same answers as running `glm` in R ? Or is that not easily possible because of normalization etc. ?\n",
    "commit": "3dfac0c2a306a901e34287adc03678dcc08ec677",
    "createdAt": "2015-07-21T01:02:38Z",
    "diffHunk": "@@ -0,0 +1,34 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"MLlib functions\")\n+\n+# Tests for MLlib functions in SparkR\n+\n+sc <- sparkR.init()\n+\n+sqlContext <- sparkRSQL.init(sc)\n+\n+test_that(\"glm and predict\", {\n+  training <- createDataFrame(sqlContext, iris)\n+  test <- select(training, \"Sepal_Length\")\n+  model <- glm(Sepal_Width ~ Sepal_Length, training, family = \"gaussian\")\n+  prediction <- predict(model, test)\n+  expect_equal(typeof(take(select(prediction, \"prediction\"), 1)$prediction), \"double\")",
    "line": 33
  }, {
    "author": {
      "login": "ericl"
    },
    "body": "It does produce the same answers at least for trivial examples using iris.\n",
    "commit": "3dfac0c2a306a901e34287adc03678dcc08ec677",
    "createdAt": "2015-07-21T01:11:45Z",
    "diffHunk": "@@ -0,0 +1,34 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"MLlib functions\")\n+\n+# Tests for MLlib functions in SparkR\n+\n+sc <- sparkR.init()\n+\n+sqlContext <- sparkRSQL.init(sc)\n+\n+test_that(\"glm and predict\", {\n+  training <- createDataFrame(sqlContext, iris)\n+  test <- select(training, \"Sepal_Length\")\n+  model <- glm(Sepal_Width ~ Sepal_Length, training, family = \"gaussian\")\n+  prediction <- predict(model, test)\n+  expect_equal(typeof(take(select(prediction, \"prediction\"), 1)$prediction), \"double\")",
    "line": 33
  }, {
    "author": {
      "login": "shivaram"
    },
    "body": "Could you add an `expect_equal` with that ? That'll help us notice any deviations etc.\n",
    "commit": "3dfac0c2a306a901e34287adc03678dcc08ec677",
    "createdAt": "2015-07-21T01:12:50Z",
    "diffHunk": "@@ -0,0 +1,34 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"MLlib functions\")\n+\n+# Tests for MLlib functions in SparkR\n+\n+sc <- sparkR.init()\n+\n+sqlContext <- sparkRSQL.init(sc)\n+\n+test_that(\"glm and predict\", {\n+  training <- createDataFrame(sqlContext, iris)\n+  test <- select(training, \"Sepal_Length\")\n+  model <- glm(Sepal_Width ~ Sepal_Length, training, family = \"gaussian\")\n+  prediction <- predict(model, test)\n+  expect_equal(typeof(take(select(prediction, \"prediction\"), 1)$prediction), \"double\")",
    "line": 33
  }, {
    "author": {
      "login": "ericl"
    },
    "body": "Done\n",
    "commit": "3dfac0c2a306a901e34287adc03678dcc08ec677",
    "createdAt": "2015-07-21T01:27:57Z",
    "diffHunk": "@@ -0,0 +1,34 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+library(testthat)\n+\n+context(\"MLlib functions\")\n+\n+# Tests for MLlib functions in SparkR\n+\n+sc <- sparkR.init()\n+\n+sqlContext <- sparkRSQL.init(sc)\n+\n+test_that(\"glm and predict\", {\n+  training <- createDataFrame(sqlContext, iris)\n+  test <- select(training, \"Sepal_Length\")\n+  model <- glm(Sepal_Width ~ Sepal_Length, training, family = \"gaussian\")\n+  prediction <- predict(model, test)\n+  expect_equal(typeof(take(select(prediction, \"prediction\"), 1)$prediction), \"double\")",
    "line": 33
  }],
  "prId": 7483
}]