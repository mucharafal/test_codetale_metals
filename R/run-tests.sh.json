[{
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "I think as the next step should generate the manual as a part of this test too? Agree not critical for now.\n",
    "commit": "e040455229dd722b32c52a03889e7e55a60315c1",
    "createdAt": "2016-08-22T19:55:03Z",
    "diffHunk": "@@ -26,14 +26,30 @@ rm -f $LOGFILE\n SPARK_TESTING=1 $FWDIR/../bin/spark-submit --driver-java-options \"-Dlog4j.configuration=file:$FWDIR/log4j.properties\" --conf spark.hadoop.fs.default.name=\"file:///\" $FWDIR/pkg/tests/run-all.R 2>&1 | tee -a $LOGFILE\n FAILED=$((PIPESTATUS[0]||$FAILED))\n \n+# Also run the documentation tests for CRAN\n+CRAN_CHECK_LOG_FILE=$FWDIR/cran-check.out\n+rm -f $CRAN_CHECK_LOG_FILE\n+CRAN_CHECK_OPTIONS=\"--no-tests --no-manual\" $FWDIR/check-cran.sh 2>&1 | tee -a $CRAN_CHECK_LOG_FILE"
  }, {
    "author": {
      "login": "shivaram"
    },
    "body": "Yeah I've turned it off because of the lack of latex packages on Jenkins. I dont think this matters for now as the PDF manual isn't something we use. But we can revisit this later if required. \n",
    "commit": "e040455229dd722b32c52a03889e7e55a60315c1",
    "createdAt": "2016-08-22T21:04:29Z",
    "diffHunk": "@@ -26,14 +26,30 @@ rm -f $LOGFILE\n SPARK_TESTING=1 $FWDIR/../bin/spark-submit --driver-java-options \"-Dlog4j.configuration=file:$FWDIR/log4j.properties\" --conf spark.hadoop.fs.default.name=\"file:///\" $FWDIR/pkg/tests/run-all.R 2>&1 | tee -a $LOGFILE\n FAILED=$((PIPESTATUS[0]||$FAILED))\n \n+# Also run the documentation tests for CRAN\n+CRAN_CHECK_LOG_FILE=$FWDIR/cran-check.out\n+rm -f $CRAN_CHECK_LOG_FILE\n+CRAN_CHECK_OPTIONS=\"--no-tests --no-manual\" $FWDIR/check-cran.sh 2>&1 | tee -a $CRAN_CHECK_LOG_FILE"
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "Right. I think pdf is generally available for each package posted on CRAN?\n",
    "commit": "e040455229dd722b32c52a03889e7e55a60315c1",
    "createdAt": "2016-08-22T21:48:08Z",
    "diffHunk": "@@ -26,14 +26,30 @@ rm -f $LOGFILE\n SPARK_TESTING=1 $FWDIR/../bin/spark-submit --driver-java-options \"-Dlog4j.configuration=file:$FWDIR/log4j.properties\" --conf spark.hadoop.fs.default.name=\"file:///\" $FWDIR/pkg/tests/run-all.R 2>&1 | tee -a $LOGFILE\n FAILED=$((PIPESTATUS[0]||$FAILED))\n \n+# Also run the documentation tests for CRAN\n+CRAN_CHECK_LOG_FILE=$FWDIR/cran-check.out\n+rm -f $CRAN_CHECK_LOG_FILE\n+CRAN_CHECK_OPTIONS=\"--no-tests --no-manual\" $FWDIR/check-cran.sh 2>&1 | tee -a $CRAN_CHECK_LOG_FILE"
  }, {
    "author": {
      "login": "shivaram"
    },
    "body": "Yeah - I think it will get generated by CRAN online (we submit a source package to them I think) - We will also do a check before we release a package.  \n",
    "commit": "e040455229dd722b32c52a03889e7e55a60315c1",
    "createdAt": "2016-08-22T21:53:17Z",
    "diffHunk": "@@ -26,14 +26,30 @@ rm -f $LOGFILE\n SPARK_TESTING=1 $FWDIR/../bin/spark-submit --driver-java-options \"-Dlog4j.configuration=file:$FWDIR/log4j.properties\" --conf spark.hadoop.fs.default.name=\"file:///\" $FWDIR/pkg/tests/run-all.R 2>&1 | tee -a $LOGFILE\n FAILED=$((PIPESTATUS[0]||$FAILED))\n \n+# Also run the documentation tests for CRAN\n+CRAN_CHECK_LOG_FILE=$FWDIR/cran-check.out\n+rm -f $CRAN_CHECK_LOG_FILE\n+CRAN_CHECK_OPTIONS=\"--no-tests --no-manual\" $FWDIR/check-cran.sh 2>&1 | tee -a $CRAN_CHECK_LOG_FILE"
  }],
  "prId": 14759
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "should check for ERROR or NOTE too?\n\nFor ERROR, I guess that would go to exit code?\nFor NOTE, I think we should probably compare the note count. Perhaps then we just look for the line `Status: 2 NOTEs` at the end of the output?\n",
    "commit": "e040455229dd722b32c52a03889e7e55a60315c1",
    "createdAt": "2016-08-22T19:56:30Z",
    "diffHunk": "@@ -26,14 +26,30 @@ rm -f $LOGFILE\n SPARK_TESTING=1 $FWDIR/../bin/spark-submit --driver-java-options \"-Dlog4j.configuration=file:$FWDIR/log4j.properties\" --conf spark.hadoop.fs.default.name=\"file:///\" $FWDIR/pkg/tests/run-all.R 2>&1 | tee -a $LOGFILE\n FAILED=$((PIPESTATUS[0]||$FAILED))\n \n+# Also run the documentation tests for CRAN\n+CRAN_CHECK_LOG_FILE=$FWDIR/cran-check.out\n+rm -f $CRAN_CHECK_LOG_FILE\n+CRAN_CHECK_OPTIONS=\"--no-tests --no-manual\" $FWDIR/check-cran.sh 2>&1 | tee -a $CRAN_CHECK_LOG_FILE\n+FAILED=$((PIPESTATUS[0]||$FAILED))\n+\n+HAS_CRAN_WARNING=\"$(grep -c WARNING $CRAN_CHECK_LOG_FILE)\""
  }, {
    "author": {
      "login": "shivaram"
    },
    "body": "Good point - Added that.\n",
    "commit": "e040455229dd722b32c52a03889e7e55a60315c1",
    "createdAt": "2016-08-22T21:02:17Z",
    "diffHunk": "@@ -26,14 +26,30 @@ rm -f $LOGFILE\n SPARK_TESTING=1 $FWDIR/../bin/spark-submit --driver-java-options \"-Dlog4j.configuration=file:$FWDIR/log4j.properties\" --conf spark.hadoop.fs.default.name=\"file:///\" $FWDIR/pkg/tests/run-all.R 2>&1 | tee -a $LOGFILE\n FAILED=$((PIPESTATUS[0]||$FAILED))\n \n+# Also run the documentation tests for CRAN\n+CRAN_CHECK_LOG_FILE=$FWDIR/cran-check.out\n+rm -f $CRAN_CHECK_LOG_FILE\n+CRAN_CHECK_OPTIONS=\"--no-tests --no-manual\" $FWDIR/check-cran.sh 2>&1 | tee -a $CRAN_CHECK_LOG_FILE\n+FAILED=$((PIPESTATUS[0]||$FAILED))\n+\n+HAS_CRAN_WARNING=\"$(grep -c WARNING $CRAN_CHECK_LOG_FILE)\""
  }],
  "prId": 14759
}, {
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "btw this might be a problem in Jenkins? It's a new NOTE\n\n```\n* checking package dependencies ... NOTE\n  No repository set, so cyclic dependency check skipped\n```\n",
    "commit": "e040455229dd722b32c52a03889e7e55a60315c1",
    "createdAt": "2016-08-22T23:08:18Z",
    "diffHunk": "@@ -26,14 +26,35 @@ rm -f $LOGFILE\n SPARK_TESTING=1 $FWDIR/../bin/spark-submit --driver-java-options \"-Dlog4j.configuration=file:$FWDIR/log4j.properties\" --conf spark.hadoop.fs.default.name=\"file:///\" $FWDIR/pkg/tests/run-all.R 2>&1 | tee -a $LOGFILE\n FAILED=$((PIPESTATUS[0]||$FAILED))\n \n+# Also run the documentation tests for CRAN\n+CRAN_CHECK_LOG_FILE=$FWDIR/cran-check.out\n+rm -f $CRAN_CHECK_LOG_FILE\n+\n+NO_TESTS=1 NO_MANUAL=1 $FWDIR/check-cran.sh 2>&1 | tee -a $CRAN_CHECK_LOG_FILE\n+FAILED=$((PIPESTATUS[0]||$FAILED))\n+\n+NUM_CRAN_WARNING=\"$(grep -c WARNING$ $CRAN_CHECK_LOG_FILE)\"\n+NUM_CRAN_ERROR=\"$(grep -c ERROR$ $CRAN_CHECK_LOG_FILE)\"\n+NUM_CRAN_NOTES=\"$(grep -c NOTE$ $CRAN_CHECK_LOG_FILE)\"\n+\n if [[ $FAILED != 0 ]]; then\n     cat $LOGFILE\n     echo -en \"\\033[31m\"  # Red\n     echo \"Had test failures; see logs.\"\n     echo -en \"\\033[0m\"  # No color\n     exit -1\n else\n-    echo -en \"\\033[32m\"  # Green\n-    echo \"Tests passed.\"\n-    echo -en \"\\033[0m\"  # No color\n+    # We have 2 existing NOTEs for new maintainer, attach()\n+    # We have one more NOTE in Jenkins due to \"No repository set\"\n+    if [[ $NUM_CRAN_WARNING != 0 || $NUM_CRAN_ERROR != 0 || $NUM_CRAN_NOTES -gt 3 ]]; then",
    "line": 27
  }, {
    "author": {
      "login": "shivaram"
    },
    "body": "Yeah I think its a jenkins specific problem as there is no default CRAN repository set in the R config of that machine. \n",
    "commit": "e040455229dd722b32c52a03889e7e55a60315c1",
    "createdAt": "2016-08-22T23:13:17Z",
    "diffHunk": "@@ -26,14 +26,35 @@ rm -f $LOGFILE\n SPARK_TESTING=1 $FWDIR/../bin/spark-submit --driver-java-options \"-Dlog4j.configuration=file:$FWDIR/log4j.properties\" --conf spark.hadoop.fs.default.name=\"file:///\" $FWDIR/pkg/tests/run-all.R 2>&1 | tee -a $LOGFILE\n FAILED=$((PIPESTATUS[0]||$FAILED))\n \n+# Also run the documentation tests for CRAN\n+CRAN_CHECK_LOG_FILE=$FWDIR/cran-check.out\n+rm -f $CRAN_CHECK_LOG_FILE\n+\n+NO_TESTS=1 NO_MANUAL=1 $FWDIR/check-cran.sh 2>&1 | tee -a $CRAN_CHECK_LOG_FILE\n+FAILED=$((PIPESTATUS[0]||$FAILED))\n+\n+NUM_CRAN_WARNING=\"$(grep -c WARNING$ $CRAN_CHECK_LOG_FILE)\"\n+NUM_CRAN_ERROR=\"$(grep -c ERROR$ $CRAN_CHECK_LOG_FILE)\"\n+NUM_CRAN_NOTES=\"$(grep -c NOTE$ $CRAN_CHECK_LOG_FILE)\"\n+\n if [[ $FAILED != 0 ]]; then\n     cat $LOGFILE\n     echo -en \"\\033[31m\"  # Red\n     echo \"Had test failures; see logs.\"\n     echo -en \"\\033[0m\"  # No color\n     exit -1\n else\n-    echo -en \"\\033[32m\"  # Green\n-    echo \"Tests passed.\"\n-    echo -en \"\\033[0m\"  # No color\n+    # We have 2 existing NOTEs for new maintainer, attach()\n+    # We have one more NOTE in Jenkins due to \"No repository set\"\n+    if [[ $NUM_CRAN_WARNING != 0 || $NUM_CRAN_ERROR != 0 || $NUM_CRAN_NOTES -gt 3 ]]; then",
    "line": 27
  }, {
    "author": {
      "login": "shivaram"
    },
    "body": "I think we can leave this as `3` for now to satisfy Jenkins -- It means that if a PR is tested locally it might pass despite a new note being added, but Jenkins should anyway catch this during code review.\n",
    "commit": "e040455229dd722b32c52a03889e7e55a60315c1",
    "createdAt": "2016-08-22T23:55:14Z",
    "diffHunk": "@@ -26,14 +26,35 @@ rm -f $LOGFILE\n SPARK_TESTING=1 $FWDIR/../bin/spark-submit --driver-java-options \"-Dlog4j.configuration=file:$FWDIR/log4j.properties\" --conf spark.hadoop.fs.default.name=\"file:///\" $FWDIR/pkg/tests/run-all.R 2>&1 | tee -a $LOGFILE\n FAILED=$((PIPESTATUS[0]||$FAILED))\n \n+# Also run the documentation tests for CRAN\n+CRAN_CHECK_LOG_FILE=$FWDIR/cran-check.out\n+rm -f $CRAN_CHECK_LOG_FILE\n+\n+NO_TESTS=1 NO_MANUAL=1 $FWDIR/check-cran.sh 2>&1 | tee -a $CRAN_CHECK_LOG_FILE\n+FAILED=$((PIPESTATUS[0]||$FAILED))\n+\n+NUM_CRAN_WARNING=\"$(grep -c WARNING$ $CRAN_CHECK_LOG_FILE)\"\n+NUM_CRAN_ERROR=\"$(grep -c ERROR$ $CRAN_CHECK_LOG_FILE)\"\n+NUM_CRAN_NOTES=\"$(grep -c NOTE$ $CRAN_CHECK_LOG_FILE)\"\n+\n if [[ $FAILED != 0 ]]; then\n     cat $LOGFILE\n     echo -en \"\\033[31m\"  # Red\n     echo \"Had test failures; see logs.\"\n     echo -en \"\\033[0m\"  # No color\n     exit -1\n else\n-    echo -en \"\\033[32m\"  # Green\n-    echo \"Tests passed.\"\n-    echo -en \"\\033[0m\"  # No color\n+    # We have 2 existing NOTEs for new maintainer, attach()\n+    # We have one more NOTE in Jenkins due to \"No repository set\"\n+    if [[ $NUM_CRAN_WARNING != 0 || $NUM_CRAN_ERROR != 0 || $NUM_CRAN_NOTES -gt 3 ]]; then",
    "line": 27
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "I think that's a great start, having this.\nJenkins' R 3.1.1 flagging less stuff could be a problem though... \n",
    "commit": "e040455229dd722b32c52a03889e7e55a60315c1",
    "createdAt": "2016-08-23T00:00:53Z",
    "diffHunk": "@@ -26,14 +26,35 @@ rm -f $LOGFILE\n SPARK_TESTING=1 $FWDIR/../bin/spark-submit --driver-java-options \"-Dlog4j.configuration=file:$FWDIR/log4j.properties\" --conf spark.hadoop.fs.default.name=\"file:///\" $FWDIR/pkg/tests/run-all.R 2>&1 | tee -a $LOGFILE\n FAILED=$((PIPESTATUS[0]||$FAILED))\n \n+# Also run the documentation tests for CRAN\n+CRAN_CHECK_LOG_FILE=$FWDIR/cran-check.out\n+rm -f $CRAN_CHECK_LOG_FILE\n+\n+NO_TESTS=1 NO_MANUAL=1 $FWDIR/check-cran.sh 2>&1 | tee -a $CRAN_CHECK_LOG_FILE\n+FAILED=$((PIPESTATUS[0]||$FAILED))\n+\n+NUM_CRAN_WARNING=\"$(grep -c WARNING$ $CRAN_CHECK_LOG_FILE)\"\n+NUM_CRAN_ERROR=\"$(grep -c ERROR$ $CRAN_CHECK_LOG_FILE)\"\n+NUM_CRAN_NOTES=\"$(grep -c NOTE$ $CRAN_CHECK_LOG_FILE)\"\n+\n if [[ $FAILED != 0 ]]; then\n     cat $LOGFILE\n     echo -en \"\\033[31m\"  # Red\n     echo \"Had test failures; see logs.\"\n     echo -en \"\\033[0m\"  # No color\n     exit -1\n else\n-    echo -en \"\\033[32m\"  # Green\n-    echo \"Tests passed.\"\n-    echo -en \"\\033[0m\"  # No color\n+    # We have 2 existing NOTEs for new maintainer, attach()\n+    # We have one more NOTE in Jenkins due to \"No repository set\"\n+    if [[ $NUM_CRAN_WARNING != 0 || $NUM_CRAN_ERROR != 0 || $NUM_CRAN_NOTES -gt 3 ]]; then",
    "line": 27
  }],
  "prId": 14759
}]