[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "\"Extended\" does not mean much. Rather \"KinesisTestUtilsWithKPL\" or \"KPLBasedKinesisTestUtils\"\n",
    "commit": "0192d2d1926efd4411d7fc3ad7372f3a40ab66c0",
    "createdAt": "2015-12-02T22:59:43Z",
    "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.streaming.kinesis\n+\n+import java.nio.ByteBuffer\n+\n+import scala.collection.mutable\n+import scala.collection.mutable.ArrayBuffer\n+\n+import com.amazonaws.services.kinesis.producer.{KinesisProducer => KPLProducer, KinesisProducerConfiguration, UserRecordResult}\n+import com.google.common.util.concurrent.{FutureCallback, Futures}\n+\n+private[kinesis] class ExtendedKinesisTestUtils extends KinesisTestUtils {"
  }],
  "prId": 10050
}]