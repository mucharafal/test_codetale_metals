[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "This is not necessarily a master URL, is it?\n",
    "commit": "90de09594195b9b23a4994b062eaaef10a6a61e5",
    "createdAt": "2015-09-17T02:24:10Z",
    "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.rpc.netty\n+\n+import java.net.URI\n+\n+import org.apache.spark.SparkException\n+import org.apache.spark.rpc.RpcAddress\n+\n+private[netty] case class NettyRpcAddress(host: String, port: Int, name: String) {\n+\n+  def toRpcAddress: RpcAddress = RpcAddress(host, port)\n+\n+  override val toString = s\"spark://$name@$host:$port\"\n+}\n+\n+private[netty] object NettyRpcAddress {\n+\n+  def apply(sparkUrl: String): NettyRpcAddress = {\n+    try {\n+      val uri = new URI(sparkUrl)\n+      val host = uri.getHost\n+      val port = uri.getPort\n+      val name = uri.getUserInfo\n+      if (uri.getScheme != \"spark\" ||\n+        host == null ||\n+        port < 0 ||\n+        name == null ||\n+        (uri.getPath != null && !uri.getPath.isEmpty) || // uri.getPath returns \"\" instead of null\n+        uri.getFragment != null ||\n+        uri.getQuery != null) {\n+        throw new SparkException(\"Invalid master URL: \" + sparkUrl)"
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "Fixed.\n",
    "commit": "90de09594195b9b23a4994b062eaaef10a6a61e5",
    "createdAt": "2015-09-17T14:37:14Z",
    "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.rpc.netty\n+\n+import java.net.URI\n+\n+import org.apache.spark.SparkException\n+import org.apache.spark.rpc.RpcAddress\n+\n+private[netty] case class NettyRpcAddress(host: String, port: Int, name: String) {\n+\n+  def toRpcAddress: RpcAddress = RpcAddress(host, port)\n+\n+  override val toString = s\"spark://$name@$host:$port\"\n+}\n+\n+private[netty] object NettyRpcAddress {\n+\n+  def apply(sparkUrl: String): NettyRpcAddress = {\n+    try {\n+      val uri = new URI(sparkUrl)\n+      val host = uri.getHost\n+      val port = uri.getPort\n+      val name = uri.getUserInfo\n+      if (uri.getScheme != \"spark\" ||\n+        host == null ||\n+        port < 0 ||\n+        name == null ||\n+        (uri.getPath != null && !uri.getPath.isEmpty) || // uri.getPath returns \"\" instead of null\n+        uri.getFragment != null ||\n+        uri.getQuery != null) {\n+        throw new SparkException(\"Invalid master URL: \" + sparkUrl)"
  }],
  "prId": 6457
}]