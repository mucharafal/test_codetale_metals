[{
  "comments": [{
    "author": {
      "login": "pwendell"
    },
    "body": "If you already have the `executorId` here, why doesn't this just directly index into the executorIdToStorageStatus instead of doing `find`?\n",
    "commit": "45416fa909c3665a7ff473e42e29817b27f15ce7",
    "createdAt": "2014-06-28T17:48:53Z",
    "diffHunk": "@@ -37,7 +37,11 @@ class StorageStatusListener extends SparkListener {\n     val filteredStatus = storageStatusList.find(_.blockManagerId.executorId == execId)"
  }, {
    "author": {
      "login": "andrewor14"
    },
    "body": "good point... I have no idea\n",
    "commit": "45416fa909c3665a7ff473e42e29817b27f15ce7",
    "createdAt": "2014-06-28T20:10:55Z",
    "diffHunk": "@@ -37,7 +37,11 @@ class StorageStatusListener extends SparkListener {\n     val filteredStatus = storageStatusList.find(_.blockManagerId.executorId == execId)"
  }],
  "prId": 1255
}, {
  "comments": [{
    "author": {
      "login": "pwendell"
    },
    "body": "Should you update the docs above `executorIdToStorageStatus` (above) to say that it only stores persisted blocks?\n",
    "commit": "45416fa909c3665a7ff473e42e29817b27f15ce7",
    "createdAt": "2014-06-28T17:51:16Z",
    "diffHunk": "@@ -37,7 +37,11 @@ class StorageStatusListener extends SparkListener {\n     val filteredStatus = storageStatusList.find(_.blockManagerId.executorId == execId)\n     filteredStatus.foreach { storageStatus =>\n       updatedBlocks.foreach { case (blockId, updatedStatus) =>\n-        storageStatus.blocks(blockId) = updatedStatus\n+        if (updatedStatus.storageLevel == StorageLevel.NONE) {\n+          storageStatus.blocks.remove(blockId)\n+        } else {\n+          storageStatus.blocks(blockId) = updatedStatus\n+        }\n       }\n     }",
    "line": 24
  }, {
    "author": {
      "login": "andrewor14"
    },
    "body": "will do\n",
    "commit": "45416fa909c3665a7ff473e42e29817b27f15ce7",
    "createdAt": "2014-06-28T20:11:07Z",
    "diffHunk": "@@ -37,7 +37,11 @@ class StorageStatusListener extends SparkListener {\n     val filteredStatus = storageStatusList.find(_.blockManagerId.executorId == execId)\n     filteredStatus.foreach { storageStatus =>\n       updatedBlocks.foreach { case (blockId, updatedStatus) =>\n-        storageStatus.blocks(blockId) = updatedStatus\n+        if (updatedStatus.storageLevel == StorageLevel.NONE) {\n+          storageStatus.blocks.remove(blockId)\n+        } else {\n+          storageStatus.blocks(blockId) = updatedStatus\n+        }\n       }\n     }",
    "line": 24
  }],
  "prId": 1255
}]