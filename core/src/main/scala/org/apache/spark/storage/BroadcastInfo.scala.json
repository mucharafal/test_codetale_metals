[{
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "this can be just `this.id - that.id`\n",
    "commit": "1aec3a8073a241d16953a0adad7a17cf3ac2bba4",
    "createdAt": "2015-02-13T16:00:22Z",
    "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.storage\n+\n+import org.apache.spark.annotation.DeveloperApi\n+import org.apache.spark.broadcast.{TorrentBroadcast, Broadcast}\n+import org.apache.spark.util.Utils\n+import org.apache.spark.util.Utils._\n+\n+@DeveloperApi\n+class BroadcastInfo(\n+    val id: Long,\n+    val name: String,\n+    val numPartitions: Int) extends Ordered[BroadcastInfo] {\n+\n+  var memSize = 0L\n+  var diskSize = 0L\n+  var tachyonSize = 0L\n+\n+  override def toString = {\n+    import Utils.bytesToString\n+    (\"%s\\\" (%d) ; \" +\n+      \"MemorySize: %s; TachyonSize: %s; DiskSize: %s\").format(\n+        name, id, bytesToString(memSize), bytesToString(tachyonSize), bytesToString(diskSize))\n+  }\n+\n+  override def compare(that: BroadcastInfo) = {\n+    if (this.id > that.id) {\n+      1\n+    } else {\n+      if (this.id == that.id) {\n+        0\n+      }\n+      -1"
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "what type does `compare` return? It's generally an `int`, and `id` is a long. (BTW, _hint_ _hint_, make the method's return type explicit.)\n",
    "commit": "1aec3a8073a241d16953a0adad7a17cf3ac2bba4",
    "createdAt": "2015-02-13T21:06:30Z",
    "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.storage\n+\n+import org.apache.spark.annotation.DeveloperApi\n+import org.apache.spark.broadcast.{TorrentBroadcast, Broadcast}\n+import org.apache.spark.util.Utils\n+import org.apache.spark.util.Utils._\n+\n+@DeveloperApi\n+class BroadcastInfo(\n+    val id: Long,\n+    val name: String,\n+    val numPartitions: Int) extends Ordered[BroadcastInfo] {\n+\n+  var memSize = 0L\n+  var diskSize = 0L\n+  var tachyonSize = 0L\n+\n+  override def toString = {\n+    import Utils.bytesToString\n+    (\"%s\\\" (%d) ; \" +\n+      \"MemorySize: %s; TachyonSize: %s; DiskSize: %s\").format(\n+        name, id, bytesToString(memSize), bytesToString(tachyonSize), bytesToString(diskSize))\n+  }\n+\n+  override def compare(that: BroadcastInfo) = {\n+    if (this.id > that.id) {\n+      1\n+    } else {\n+      if (this.id == that.id) {\n+        0\n+      }\n+      -1"
  }],
  "prId": 2851
}]