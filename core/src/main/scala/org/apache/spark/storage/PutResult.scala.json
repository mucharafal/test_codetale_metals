[{
  "comments": [{
    "author": {
      "login": "pwendell"
    },
    "body": "It would be good to add unit tests that test the new logic you've added around these PutResults. If you look in `BlockManagerSuite` there are fairly extensive tests for the Block Manager. You should change the existing tests that do puts and cause things to flush out of memory to verify that the `droppedBlocks` gets updated. And also see if you can add new tests if those don't sufficiently cover the new code.\n",
    "commit": "e5f14fa5e63636c5eee5df084c913d938fdee541",
    "createdAt": "2014-03-14T07:22:48Z",
    "diffHunk": "@@ -20,7 +20,13 @@ package org.apache.spark.storage\n import java.nio.ByteBuffer\n \n /**\n- * Result of adding a block into a BlockStore. Contains its estimated size, and possibly the\n- * values put if the caller asked for them to be returned (e.g. for chaining replication)\n+ * Result of adding a block into a BlockStore. This case class contains a few things:\n+ *   (1) The estimated size of the put,\n+ *   (2) The values put if the caller asked for them to be returned (e.g. for chaining\n+ *       replication), and\n+ *   (3) A list of blocks dropped as a result of this put. This is always empty for DiskStore.\n  */\n-private[spark] case class PutResult(size: Long, data: Either[Iterator[_], ByteBuffer])\n+private[spark] case class PutResult(\n+    size: Long,\n+    data: Either[Iterator[_], ByteBuffer],\n+    droppedBlocks: Seq[(BlockId, BlockStatus)] = Seq())"
  }, {
    "author": {
      "login": "andrewor14"
    },
    "body": "Ok\n",
    "commit": "e5f14fa5e63636c5eee5df084c913d938fdee541",
    "createdAt": "2014-03-14T17:02:47Z",
    "diffHunk": "@@ -20,7 +20,13 @@ package org.apache.spark.storage\n import java.nio.ByteBuffer\n \n /**\n- * Result of adding a block into a BlockStore. Contains its estimated size, and possibly the\n- * values put if the caller asked for them to be returned (e.g. for chaining replication)\n+ * Result of adding a block into a BlockStore. This case class contains a few things:\n+ *   (1) The estimated size of the put,\n+ *   (2) The values put if the caller asked for them to be returned (e.g. for chaining\n+ *       replication), and\n+ *   (3) A list of blocks dropped as a result of this put. This is always empty for DiskStore.\n  */\n-private[spark] case class PutResult(size: Long, data: Either[Iterator[_], ByteBuffer])\n+private[spark] case class PutResult(\n+    size: Long,\n+    data: Either[Iterator[_], ByteBuffer],\n+    droppedBlocks: Seq[(BlockId, BlockStatus)] = Seq())"
  }],
  "prId": 42
}]