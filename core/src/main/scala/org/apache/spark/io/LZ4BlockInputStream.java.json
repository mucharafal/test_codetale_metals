[{
  "comments": [{
    "author": {
      "login": "nongli"
    },
    "body": "Can you comment what is modified? This is otherwise hard to review/maintain if lz4 updates.\n",
    "commit": "83c77f42d33002b88fe209393eac9a74e9a87e70",
    "createdAt": "2015-12-17T18:09:39Z",
    "diffHunk": "@@ -0,0 +1,259 @@\n+package org.apache.spark.io;\n+\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import java.io.EOFException;\n+import java.io.FilterInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.zip.Checksum;\n+\n+import net.jpountz.lz4.LZ4BlockOutputStream;\n+import net.jpountz.lz4.LZ4Exception;\n+import net.jpountz.lz4.LZ4Factory;\n+import net.jpountz.lz4.LZ4FastDecompressor;\n+import net.jpountz.util.SafeUtils;\n+import net.jpountz.xxhash.StreamingXXHash32;\n+import net.jpountz.xxhash.XXHash32;\n+import net.jpountz.xxhash.XXHashFactory;\n+\n+/**\n+ * {@link InputStream} implementation to decode data written with\n+ * {@link LZ4BlockOutputStream}. This class is not thread-safe and does not\n+ * support {@link #mark(int)}/{@link #reset()}.\n+ * @see LZ4BlockOutputStream\n+ *\n+ * This is based on net.jpountz.lz4.LZ4BlockInputStream",
    "line": 38
  }, {
    "author": {
      "login": "davies"
    },
    "body": "See the changes here: https://github.com/davies/lz4-java/commit/cc1fa940ac57cc66a0b937300f805d37e2bf8411\n",
    "commit": "83c77f42d33002b88fe209393eac9a74e9a87e70",
    "createdAt": "2015-12-17T23:14:35Z",
    "diffHunk": "@@ -0,0 +1,259 @@\n+package org.apache.spark.io;\n+\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import java.io.EOFException;\n+import java.io.FilterInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.zip.Checksum;\n+\n+import net.jpountz.lz4.LZ4BlockOutputStream;\n+import net.jpountz.lz4.LZ4Exception;\n+import net.jpountz.lz4.LZ4Factory;\n+import net.jpountz.lz4.LZ4FastDecompressor;\n+import net.jpountz.util.SafeUtils;\n+import net.jpountz.xxhash.StreamingXXHash32;\n+import net.jpountz.xxhash.XXHash32;\n+import net.jpountz.xxhash.XXHashFactory;\n+\n+/**\n+ * {@link InputStream} implementation to decode data written with\n+ * {@link LZ4BlockOutputStream}. This class is not thread-safe and does not\n+ * support {@link #mark(int)}/{@link #reset()}.\n+ * @see LZ4BlockOutputStream\n+ *\n+ * This is based on net.jpountz.lz4.LZ4BlockInputStream",
    "line": 38
  }],
  "prId": 10342
}]