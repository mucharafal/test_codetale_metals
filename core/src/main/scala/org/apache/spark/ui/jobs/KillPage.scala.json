[{
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "Isn't this always going to be None?\n",
    "commit": "5fdd0e2250497ff060bb4b0a125d84e31d3276ce",
    "createdAt": "2014-03-27T06:06:58Z",
    "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ui.jobs\n+\n+import java.util.Date\n+import javax.servlet.http.HttpServletRequest\n+\n+import scala.xml.Node\n+\n+import org.apache.spark.ui.Page._\n+import org.apache.spark.ui.{WebUI, UIUtils}\n+import org.apache.spark.util.{Utils, Distribution}\n+\n+/** Page showing statistics and task list for a given stage */\n+private[ui] class KillPage(parent: JobProgressUI) {\n+  private val appName = parent.appName\n+  private val basePath = parent.basePath\n+  private lazy val listener = parent.listener\n+  private lazy val sc = parent.sc\n+  \n+  def render(request: HttpServletRequest): Seq[Node] = {\n+    listener.synchronized {\n+      val stageId = request.getParameter(\"id\").toInt\n+      val jobIdOpt = listener.stageIdToJobId.get(stageId)\n+\n+      if (!parent.killEnabled) {\n+        val content =\n+            <div>\n+              <h4>Option disbaled</h4> Cannot kill jobs through the UI. \n+                 Please set spark.ui.killEnabled to change this behavior\n+            </div>\n+          return UIUtils.headerSparkPage(\n+            content, basePath, appName, \"Disabled option\", Stages)\n+\n+      } \n+      \n+      jobIdOpt match {\n+        case Some(jobId) => {\n+          sc.cancelJob(jobId)\n+\t      val content =\n+            <div>\n+              Stage {stageId}  and Job {jobId} are being killed\n+            </div>\n+          return UIUtils.headerSparkPage(\n+            content, basePath, appName, \"Stage %s is being terminated\".format(stageId), Stages)\n+    \t}\n+        case _ => {"
  }, {
    "author": {
      "login": "sundeepn"
    },
    "body": "Yep.\n",
    "commit": "5fdd0e2250497ff060bb4b0a125d84e31d3276ce",
    "createdAt": "2014-03-27T20:22:48Z",
    "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ui.jobs\n+\n+import java.util.Date\n+import javax.servlet.http.HttpServletRequest\n+\n+import scala.xml.Node\n+\n+import org.apache.spark.ui.Page._\n+import org.apache.spark.ui.{WebUI, UIUtils}\n+import org.apache.spark.util.{Utils, Distribution}\n+\n+/** Page showing statistics and task list for a given stage */\n+private[ui] class KillPage(parent: JobProgressUI) {\n+  private val appName = parent.appName\n+  private val basePath = parent.basePath\n+  private lazy val listener = parent.listener\n+  private lazy val sc = parent.sc\n+  \n+  def render(request: HttpServletRequest): Seq[Node] = {\n+    listener.synchronized {\n+      val stageId = request.getParameter(\"id\").toInt\n+      val jobIdOpt = listener.stageIdToJobId.get(stageId)\n+\n+      if (!parent.killEnabled) {\n+        val content =\n+            <div>\n+              <h4>Option disbaled</h4> Cannot kill jobs through the UI. \n+                 Please set spark.ui.killEnabled to change this behavior\n+            </div>\n+          return UIUtils.headerSparkPage(\n+            content, basePath, appName, \"Disabled option\", Stages)\n+\n+      } \n+      \n+      jobIdOpt match {\n+        case Some(jobId) => {\n+          sc.cancelJob(jobId)\n+\t      val content =\n+            <div>\n+              Stage {stageId}  and Job {jobId} are being killed\n+            </div>\n+          return UIUtils.headerSparkPage(\n+            content, basePath, appName, \"Stage %s is being terminated\".format(stageId), Stages)\n+    \t}\n+        case _ => {"
  }],
  "prId": 246
}]