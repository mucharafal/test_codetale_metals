[{
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "same here, no need to do `case` and specify the type\n",
    "commit": "7b4d6eb92fbbf758854bf322608ed3ae2e68ebed",
    "createdAt": "2014-09-11T19:33:23Z",
    "diffHunk": "@@ -30,6 +35,35 @@ private[ui] class PoolPage(parent: JobProgressTab) extends WebUIPage(\"pool\") {\n   private val sc = parent.sc\n   private val listener = parent.listener\n \n+  override def renderJson(request: HttpServletRequest): JValue = {\n+    listener.synchronized {\n+      val poolName = request.getParameter(\"poolname\")\n+      val poolToActiveStages = listener.poolToActiveStages\n+      val activeStages = poolToActiveStages.get(poolName) match {\n+        case Some(s) => s.values.map {\n+          case info: StageInfo =>\n+            JsonProtocol.stageInfoToJson(info)\n+        }\n+        case None => Seq[JValue]()\n+      }\n+\n+      val pools = if (live) Seq(sc.getPoolForName(poolName).get) else Seq[Schedulable]()\n+\n+      val poolList = pools.map {\n+        case schedulable: Schedulable =>"
  }],
  "prId": 2333
}]