[{
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "indentation is weird\n",
    "commit": "a6a8a0b4a97893a9c47645e0858885192cb41abf",
    "createdAt": "2014-08-27T05:44:40Z",
    "diffHunk": "@@ -70,8 +70,10 @@ class StorageListener(storageStatusListener: StorageStatusListener) extends Spar\n   }\n \n   override def onStageCompleted(stageCompleted: SparkListenerStageCompleted) = synchronized {\n-    // Remove all partitions that are no longer cached\n-    _rddInfoMap.retain { case (_, info) => info.numCachedPartitions > 0 }\n+    // Remove all partitions that are no longer cached in current completed stage\n+    val completedRddInfoIds = Set[Int]() ++ stageCompleted.stageInfo.rddInfos.map(r => r.id)\n+    _rddInfoMap.retain { case (id, info) =>\n+               !completedRddInfoIds.contains(id) || info.numCachedPartitions > 0 }"
  }, {
    "author": {
      "login": "andrewor14"
    },
    "body": "also, the style should be\n\n```\n_rddInfoMap.retain { case (id, info) =>\n  !completed...\n}\n```\n",
    "commit": "a6a8a0b4a97893a9c47645e0858885192cb41abf",
    "createdAt": "2014-08-27T06:52:31Z",
    "diffHunk": "@@ -70,8 +70,10 @@ class StorageListener(storageStatusListener: StorageStatusListener) extends Spar\n   }\n \n   override def onStageCompleted(stageCompleted: SparkListenerStageCompleted) = synchronized {\n-    // Remove all partitions that are no longer cached\n-    _rddInfoMap.retain { case (_, info) => info.numCachedPartitions > 0 }\n+    // Remove all partitions that are no longer cached in current completed stage\n+    val completedRddInfoIds = Set[Int]() ++ stageCompleted.stageInfo.rddInfos.map(r => r.id)\n+    _rddInfoMap.retain { case (id, info) =>\n+               !completedRddInfoIds.contains(id) || info.numCachedPartitions > 0 }"
  }],
  "prId": 2131
}, {
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "Why not just use `toSet`?\n",
    "commit": "a6a8a0b4a97893a9c47645e0858885192cb41abf",
    "createdAt": "2014-08-27T05:44:52Z",
    "diffHunk": "@@ -70,8 +70,10 @@ class StorageListener(storageStatusListener: StorageStatusListener) extends Spar\n   }\n \n   override def onStageCompleted(stageCompleted: SparkListenerStageCompleted) = synchronized {\n-    // Remove all partitions that are no longer cached\n-    _rddInfoMap.retain { case (_, info) => info.numCachedPartitions > 0 }\n+    // Remove all partitions that are no longer cached in current completed stage\n+    val completedRddInfoIds = Set[Int]() ++ stageCompleted.stageInfo.rddInfos.map(r => r.id)"
  }, {
    "author": {
      "login": "andrewor14"
    },
    "body": "Also, I would just call this `completedRddIds`\n",
    "commit": "a6a8a0b4a97893a9c47645e0858885192cb41abf",
    "createdAt": "2014-08-27T07:25:02Z",
    "diffHunk": "@@ -70,8 +70,10 @@ class StorageListener(storageStatusListener: StorageStatusListener) extends Spar\n   }\n \n   override def onStageCompleted(stageCompleted: SparkListenerStageCompleted) = synchronized {\n-    // Remove all partitions that are no longer cached\n-    _rddInfoMap.retain { case (_, info) => info.numCachedPartitions > 0 }\n+    // Remove all partitions that are no longer cached in current completed stage\n+    val completedRddInfoIds = Set[Int]() ++ stageCompleted.stageInfo.rddInfos.map(r => r.id)"
  }],
  "prId": 2131
}]