[{
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "minor: just do\n\n```\nlistener.activeStages.values.map { info => JsonProtocol.stageInfoToJson(info) }\n```\n",
    "commit": "7b4d6eb92fbbf758854bf322608ed3ae2e68ebed",
    "createdAt": "2014-09-11T19:32:19Z",
    "diffHunk": "@@ -31,6 +36,35 @@ private[ui] class JobProgressPage(parent: JobProgressTab) extends WebUIPage(\"\")\n   private val listener = parent.listener\n   private lazy val isFairScheduler = parent.isFairScheduler\n \n+  override def renderJson(request: HttpServletRequest): JValue = {\n+    listener.synchronized {\n+\n+      val activeStageList = listener.activeStages.values.map {\n+        case info: StageInfo =>\n+          JsonProtocol.stageInfoToJson(info)\n+      }"
  }, {
    "author": {
      "login": "andrewor14"
    },
    "body": "here and other places\n",
    "commit": "7b4d6eb92fbbf758854bf322608ed3ae2e68ebed",
    "createdAt": "2014-09-11T19:32:35Z",
    "diffHunk": "@@ -31,6 +36,35 @@ private[ui] class JobProgressPage(parent: JobProgressTab) extends WebUIPage(\"\")\n   private val listener = parent.listener\n   private lazy val isFairScheduler = parent.isFairScheduler\n \n+  override def renderJson(request: HttpServletRequest): JValue = {\n+    listener.synchronized {\n+\n+      val activeStageList = listener.activeStages.values.map {\n+        case info: StageInfo =>\n+          JsonProtocol.stageInfoToJson(info)\n+      }"
  }],
  "prId": 2333
}, {
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "Can you put this in a variable so this is more readable?\n",
    "commit": "7b4d6eb92fbbf758854bf322608ed3ae2e68ebed",
    "createdAt": "2014-09-11T19:32:57Z",
    "diffHunk": "@@ -31,6 +36,35 @@ private[ui] class JobProgressPage(parent: JobProgressTab) extends WebUIPage(\"\")\n   private val listener = parent.listener\n   private lazy val isFairScheduler = parent.isFairScheduler\n \n+  override def renderJson(request: HttpServletRequest): JValue = {\n+    listener.synchronized {\n+\n+      val activeStageList = listener.activeStages.values.map {\n+        case info: StageInfo =>\n+          JsonProtocol.stageInfoToJson(info)\n+      }\n+      val activeStageJson = (\"Active Stages\" -> activeStageList)\n+\n+      val completedStageList = listener.completedStages.reverse.map {\n+        case info: StageInfo =>\n+          JsonProtocol.stageInfoToJson(info)\n+      }\n+      val completedStageJson = (\"Completed Stages\" -> completedStageList)\n+\n+      val failedStageList = listener.failedStages.reverse.map {\n+        case info: StageInfo =>\n+          JsonProtocol.stageInfoToJson(info)\n+      }\n+      val failedStageJson = (\"Failed Stages\" -> failedStageList)\n+\n+      (\"Stages Info\" ->\n+        (\"Scheduling Mode\" -> listener.schedulingMode.map(_.toString).getOrElse(\"Unknown\")) ~"
  }],
  "prId": 2333
}]