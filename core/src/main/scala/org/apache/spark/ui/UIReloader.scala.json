[{
  "comments": [{
    "author": {
      "login": "pwendell"
    },
    "body": "We should think a bit about the right way to expose the \"rebuild a UI\" logic inside of Spark. The first goal here is that the existing standalone cluster manager should, once an application completes, be able to re-render the existing UI for that application. The ideal semantics would be that you can just point to a directory in HDFS known to contain the logs and have it add new handlers to an existing jetty server. Right now the SparkUI starts its own server always so that might need to be altered. \n\nA second goal is to have simple standalone version that can run in it's own JVM that basically \"watches\" a base directory and reports new applications as they arrive. This one would also need to create multiple SparkUI's in the same JVM.\n",
    "commit": "e5f14fa5e63636c5eee5df084c913d938fdee541",
    "createdAt": "2014-03-04T20:40:43Z",
    "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ui\n+\n+/**\n+ * Reload a persisted UI independently from a SparkContext\n+ */\n+object UIReloader {"
  }, {
    "author": {
      "login": "pwendell"
    },
    "body": "One idea is the SparkUI could just take an existing jetty server along with a content path \"/X/Y/\" and add handlers to it instead of building it's own server. This way you could have a parent server with multiple UI's bound to it. Then when the handlers are created you'd just have to prepend the base path.\n",
    "commit": "e5f14fa5e63636c5eee5df084c913d938fdee541",
    "createdAt": "2014-03-04T20:50:42Z",
    "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ui\n+\n+/**\n+ * Reload a persisted UI independently from a SparkContext\n+ */\n+object UIReloader {"
  }, {
    "author": {
      "login": "andrewor14"
    },
    "body": "Right, the purpose of UIReloader is just to present a quick example to demonstrate how this can be done. I should make that more explicit in the comments.\n\n@pwendell and I discussed this more offline. The proposal is to extract the server logic from SparkUI, and treat it as a handler for an existing server. This external server could be the server that holds the Master UI, for example. Further, we need to figure out a way to pass the log directory of the SparkUI to the external server, which should not be too complicated.\n",
    "commit": "e5f14fa5e63636c5eee5df084c913d938fdee541",
    "createdAt": "2014-03-05T01:37:46Z",
    "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ui\n+\n+/**\n+ * Reload a persisted UI independently from a SparkContext\n+ */\n+object UIReloader {"
  }],
  "prId": 42
}, {
  "comments": [{
    "author": {
      "login": "kayousterhout"
    },
    "body": "Maybe remove \"A simple example that\" here?  Implies that this isn't actually supposed to be used.\n",
    "commit": "e5f14fa5e63636c5eee5df084c913d938fdee541",
    "createdAt": "2014-03-06T21:11:32Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ui\n+\n+import org.apache.spark.SparkConf\n+\n+/**\n+ * A simple example that reloads a persisted UI independently from a SparkContext"
  }],
  "prId": 42
}, {
  "comments": [{
    "author": {
      "login": "kayousterhout"
    },
    "body": "Use the SparkUI.DEFAULT_PERSISTED_PORT variable here to make sure they stay consistent?\n",
    "commit": "e5f14fa5e63636c5eee5df084c913d938fdee541",
    "createdAt": "2014-03-06T21:24:24Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ui\n+\n+import org.apache.spark.SparkConf\n+\n+/**\n+ * A simple example that reloads a persisted UI independently from a SparkContext\n+ */\n+object UIReloader {\n+  def main(args: Array[String]) {\n+    if (args.length < 1) {\n+      println(\"Usage: ./bin/spark-class org.apache.spark.ui.UIReloader [log path] [port]\")\n+      System.exit(1)\n+    }\n+\n+    val port = if (args.length == 2) args(1).toInt else 14040"
  }],
  "prId": 42
}, {
  "comments": [{
    "author": {
      "login": "pwendell"
    },
    "body": "It's fine if you want to leave this class but it might be worth taking it out since it could be interpreted as a public API. I think in general we'll want a standalone thing that runs in YARN deployments but this is just a small example. Also we could maybe move this to the examples directory.\n",
    "commit": "e5f14fa5e63636c5eee5df084c913d938fdee541",
    "createdAt": "2014-03-14T05:47:56Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ui\n+\n+import org.apache.spark.SparkConf\n+\n+/**\n+ * Reload a persisted UI independently from a SparkContext.\n+ */\n+object UIReloader {\n+  def main(args: Array[String]) {"
  }, {
    "author": {
      "login": "andrewor14"
    },
    "body": "I don't like it either, but it was convenient for me while I was still developing the feature. I'll remove it.\n",
    "commit": "e5f14fa5e63636c5eee5df084c913d938fdee541",
    "createdAt": "2014-03-15T04:50:32Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.ui\n+\n+import org.apache.spark.SparkConf\n+\n+/**\n+ * Reload a persisted UI independently from a SparkContext.\n+ */\n+object UIReloader {\n+  def main(args: Array[String]) {"
  }],
  "prId": 42
}]