[{
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "can you use use Option(System.getenv(\"APPLICATION_WEB_PROXY_BASE\")).getOrElse(System.getProperty(\"spark.ui.proxyBase\")).getOrElse(\"\") for this instead of  != null checks.\n\nAlso we should be using the SparkConf whenever possible and not system properties unless there is explicit reason\n",
    "commit": "6022bcd4277c6038baf7da42b890d04d14e9d262",
    "createdAt": "2014-06-23T14:29:28Z",
    "diffHunk": "@@ -135,7 +135,16 @@ private[spark] object UIUtils extends Logging {\n   }\n \n   // Yarn has to go through a proxy so the base uri is provided and has to be on all links\n-  val uiRoot : String = Option(System.getenv(\"APPLICATION_WEB_PROXY_BASE\")).getOrElse(\"\")\n+  def uiRoot: String = {\n+    if (System.getenv(\"APPLICATION_WEB_PROXY_BASE\") != null) {",
    "line": 6
  }, {
    "author": {
      "login": "witgo"
    },
    "body": "`Option(System.getenv(\"APPLICATION_WEB_PROXY_BASE\"))` will create a new object\n",
    "commit": "6022bcd4277c6038baf7da42b890d04d14e9d262",
    "createdAt": "2014-06-23T14:32:39Z",
    "diffHunk": "@@ -135,7 +135,16 @@ private[spark] object UIUtils extends Logging {\n   }\n \n   // Yarn has to go through a proxy so the base uri is provided and has to be on all links\n-  val uiRoot : String = Option(System.getenv(\"APPLICATION_WEB_PROXY_BASE\")).getOrElse(\"\")\n+  def uiRoot: String = {\n+    if (System.getenv(\"APPLICATION_WEB_PROXY_BASE\") != null) {",
    "line": 6
  }, {
    "author": {
      "login": "rahulsinghaliitd"
    },
    "body": "Can we set the \"spark.ui.proxyBase\" property in ApplicationMaster.scala's addAmIpFilter() so that\n1. The code is more consistent\n2. The if-else case here is reduced\n",
    "commit": "6022bcd4277c6038baf7da42b890d04d14e9d262",
    "createdAt": "2014-06-27T04:22:14Z",
    "diffHunk": "@@ -135,7 +135,16 @@ private[spark] object UIUtils extends Logging {\n   }\n \n   // Yarn has to go through a proxy so the base uri is provided and has to be on all links\n-  val uiRoot : String = Option(System.getenv(\"APPLICATION_WEB_PROXY_BASE\")).getOrElse(\"\")\n+  def uiRoot: String = {\n+    if (System.getenv(\"APPLICATION_WEB_PROXY_BASE\") != null) {",
    "line": 6
  }, {
    "author": {
      "login": "witgo"
    },
    "body": " `addAmIpFilter` is invoked in  yarn Container.  The code in [Client.scala](https://github.com/apache/spark/blob/master/yarn/stable/src/main/scala/org/apache/spark/deploy/yarn/Client.scala)\n",
    "commit": "6022bcd4277c6038baf7da42b890d04d14e9d262",
    "createdAt": "2014-07-10T16:22:20Z",
    "diffHunk": "@@ -135,7 +135,16 @@ private[spark] object UIUtils extends Logging {\n   }\n \n   // Yarn has to go through a proxy so the base uri is provided and has to be on all links\n-  val uiRoot : String = Option(System.getenv(\"APPLICATION_WEB_PROXY_BASE\")).getOrElse(\"\")\n+  def uiRoot: String = {\n+    if (System.getenv(\"APPLICATION_WEB_PROXY_BASE\") != null) {",
    "line": 6
  }],
  "prId": 1112
}]