[{
  "comments": [{
    "author": {
      "login": "nongli"
    },
    "body": "You seem to do this in a bunch of places, perhaps consider the switched semantics that put does not retain the lock by default. Not sure if this is better, something to think about for later.\n",
    "commit": "9becde3d94ea41bba9e275b9108c61b91074f035",
    "createdAt": "2016-02-24T00:30:30Z",
    "diffHunk": "@@ -65,7 +65,11 @@ class NettyBlockRpcServer(\n         val level: StorageLevel =\n           serializer.newInstance().deserialize(ByteBuffer.wrap(uploadBlock.metadata))\n         val data = new NioManagedBuffer(ByteBuffer.wrap(uploadBlock.blockData))\n-        blockManager.putBlockData(BlockId(uploadBlock.blockId), data, level)\n+        val blockId = BlockId(uploadBlock.blockId)\n+        val putSucceeded = blockManager.putBlockData(blockId, data, level)",
    "line": 6
  }, {
    "author": {
      "login": "JoshRosen"
    },
    "body": "Yeah, let's revisit this in a followup. Swapping the default might be a good move since I think the current semantics are only really useful in the CacheManager.\n",
    "commit": "9becde3d94ea41bba9e275b9108c61b91074f035",
    "createdAt": "2016-02-24T03:07:33Z",
    "diffHunk": "@@ -65,7 +65,11 @@ class NettyBlockRpcServer(\n         val level: StorageLevel =\n           serializer.newInstance().deserialize(ByteBuffer.wrap(uploadBlock.metadata))\n         val data = new NioManagedBuffer(ByteBuffer.wrap(uploadBlock.blockData))\n-        blockManager.putBlockData(BlockId(uploadBlock.blockId), data, level)\n+        val blockId = BlockId(uploadBlock.blockId)\n+        val putSucceeded = blockManager.putBlockData(blockId, data, level)",
    "line": 6
  }],
  "prId": 10705
}]