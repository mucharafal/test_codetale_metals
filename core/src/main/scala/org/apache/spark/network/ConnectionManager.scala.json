[{
  "comments": [{
    "author": {
      "login": "epahomov"
    },
    "body": "there is no need for \"return\"\n",
    "commit": "038a579a26ffcfc1c5540f28176f236779eef12a",
    "createdAt": "2014-06-18T10:35:21Z",
    "diffHunk": "@@ -102,7 +102,24 @@ private[spark] class ConnectionManager(port: Int, conf: SparkConf,\n   serverChannel.socket.setReuseAddress(true)\n   serverChannel.socket.setReceiveBufferSize(256 * 1024)\n \n-  serverChannel.socket.bind(new InetSocketAddress(port))\n+  def bindWithIncrement(port: Int, maxTries: Int = 3) {\n+    for( offset <- 0 until maxTries ) {\n+      try {\n+        serverChannel.socket.bind(new InetSocketAddress(port + offset))\n+        return"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Something is required to stop looping after a success, right? `break` might be clearer if Scala had it; `return` might just be simpler than using `breakable`. Or some kind of success flag with a while loop.\n",
    "commit": "038a579a26ffcfc1c5540f28176f236779eef12a",
    "createdAt": "2014-06-18T10:41:20Z",
    "diffHunk": "@@ -102,7 +102,24 @@ private[spark] class ConnectionManager(port: Int, conf: SparkConf,\n   serverChannel.socket.setReuseAddress(true)\n   serverChannel.socket.setReceiveBufferSize(256 * 1024)\n \n-  serverChannel.socket.bind(new InetSocketAddress(port))\n+  def bindWithIncrement(port: Int, maxTries: Int = 3) {\n+    for( offset <- 0 until maxTries ) {\n+      try {\n+        serverChannel.socket.bind(new InetSocketAddress(port + offset))\n+        return"
  }, {
    "author": {
      "login": "epahomov"
    },
    "body": "Agree. My bad.\n",
    "commit": "038a579a26ffcfc1c5540f28176f236779eef12a",
    "createdAt": "2014-06-18T10:45:22Z",
    "diffHunk": "@@ -102,7 +102,24 @@ private[spark] class ConnectionManager(port: Int, conf: SparkConf,\n   serverChannel.socket.setReuseAddress(true)\n   serverChannel.socket.setReceiveBufferSize(256 * 1024)\n \n-  serverChannel.socket.bind(new InetSocketAddress(port))\n+  def bindWithIncrement(port: Int, maxTries: Int = 3) {\n+    for( offset <- 0 until maxTries ) {\n+      try {\n+        serverChannel.socket.bind(new InetSocketAddress(port + offset))\n+        return"
  }],
  "prId": 1107
}]