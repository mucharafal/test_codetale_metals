[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "this fits in the previous line, no?\n",
    "commit": "84b7a4278771efb9c0ce158afef3620535eada07",
    "createdAt": "2015-11-18T03:53:56Z",
    "diffHunk": "@@ -40,23 +40,26 @@ object SparkTransportConf {\n \n   /**\n    * Utility for creating a [[TransportConf]] from a [[SparkConf]].\n+   * @param _conf the [[SparkConf]]\n+   * @param module the module name\n    * @param numUsableCores if nonzero, this will restrict the server and client threads to only\n    *                       use the given number of cores, rather than all of the machine's cores.\n    *                       This restriction will only occur if these properties are not already set.\n    */\n-  def fromSparkConf(_conf: SparkConf, numUsableCores: Int = 0): TransportConf = {\n+  def fromSparkConf(_conf: SparkConf, module: String, numUsableCores: Int = 0):\n+    TransportConf = {"
  }],
  "prId": 9481
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "Not your fault, but this could be `setIfMissing`, no? Also, interpolation would look a little better.\n",
    "commit": "84b7a4278771efb9c0ce158afef3620535eada07",
    "createdAt": "2015-11-18T03:55:35Z",
    "diffHunk": "@@ -40,23 +40,26 @@ object SparkTransportConf {\n \n   /**\n    * Utility for creating a [[TransportConf]] from a [[SparkConf]].\n+   * @param _conf the [[SparkConf]]\n+   * @param module the module name\n    * @param numUsableCores if nonzero, this will restrict the server and client threads to only\n    *                       use the given number of cores, rather than all of the machine's cores.\n    *                       This restriction will only occur if these properties are not already set.\n    */\n-  def fromSparkConf(_conf: SparkConf, numUsableCores: Int = 0): TransportConf = {\n+  def fromSparkConf(_conf: SparkConf, module: String, numUsableCores: Int = 0):\n+    TransportConf = {\n     val conf = _conf.clone\n \n     // Specify thread configuration based on our JVM's allocation of cores (rather than necessarily\n     // assuming we have all the machine's cores).\n     // NB: Only set if serverThreads/clientThreads not already set.\n     val numThreads = defaultNumThreads(numUsableCores)\n-    conf.set(\"spark.shuffle.io.serverThreads\",\n-      conf.get(\"spark.shuffle.io.serverThreads\", numThreads.toString))\n-    conf.set(\"spark.shuffle.io.clientThreads\",\n-      conf.get(\"spark.shuffle.io.clientThreads\", numThreads.toString))\n+    conf.set(\"spark.\" + module + \".io.serverThreads\","
  }],
  "prId": 9481
}]