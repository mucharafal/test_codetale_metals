[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "how about\r\n```\r\nclass StageInfo(\r\n    ...\r\n    val attempNumber: Int,\r\n   ...  {\r\n  @deprecated\r\n  def attempId: Int = attemptNumber\r\n}\r\n```",
    "commit": "2ec919761ced379f00e1fa9804a66e3b15e9d2e9",
    "createdAt": "2018-01-08T05:05:58Z",
    "diffHunk": "@@ -56,6 +56,8 @@ class StageInfo(\n     completionTime = Some(System.currentTimeMillis)\n   }\n \n+  def attemptNumber(): Int = attemptId",
    "line": 13
  }, {
    "author": {
      "login": "advancedxy"
    },
    "body": "If we go this way, I believe it would break source compatibility for Developer API.\r\n\r\nCode like `new StageInfo(stageId = xx, attemptId = yy, ...)` couldn't by compiled any more.\r\n\r\nNot sure about binary compatibility",
    "commit": "2ec919761ced379f00e1fa9804a66e3b15e9d2e9",
    "createdAt": "2018-01-08T05:12:23Z",
    "diffHunk": "@@ -56,6 +56,8 @@ class StageInfo(\n     completionTime = Some(System.currentTimeMillis)\n   }\n \n+  def attemptNumber(): Int = attemptId",
    "line": 13
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "ah i see, let's keep it.",
    "commit": "2ec919761ced379f00e1fa9804a66e3b15e9d2e9",
    "createdAt": "2018-01-08T05:15:10Z",
    "diffHunk": "@@ -56,6 +56,8 @@ class StageInfo(\n     completionTime = Some(System.currentTimeMillis)\n   }\n \n+  def attemptNumber(): Int = attemptId",
    "line": 13
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "hmmm, can we add a new constructor for `attemptId`?",
    "commit": "2ec919761ced379f00e1fa9804a66e3b15e9d2e9",
    "createdAt": "2018-01-08T05:18:04Z",
    "diffHunk": "@@ -56,6 +56,8 @@ class StageInfo(\n     completionTime = Some(System.currentTimeMillis)\n   }\n \n+  def attemptNumber(): Int = attemptId",
    "line": 13
  }, {
    "author": {
      "login": "advancedxy"
    },
    "body": "hmmmm, maybe.. Let me try it out after work...",
    "commit": "2ec919761ced379f00e1fa9804a66e3b15e9d2e9",
    "createdAt": "2018-01-08T05:27:05Z",
    "diffHunk": "@@ -56,6 +56,8 @@ class StageInfo(\n     completionTime = Some(System.currentTimeMillis)\n   }\n \n+  def attemptNumber(): Int = attemptId",
    "line": 13
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "It may break the json protocol?",
    "commit": "2ec919761ced379f00e1fa9804a66e3b15e9d2e9",
    "createdAt": "2018-01-08T08:01:25Z",
    "diffHunk": "@@ -56,6 +56,8 @@ class StageInfo(\n     completionTime = Some(System.currentTimeMillis)\n   }\n \n+  def attemptNumber(): Int = attemptId",
    "line": 13
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "So we do not fully deprecate it, it's still `attemptId` in json. Shall we fix the json too? We may need to add some logic at the parser side to recognize `attemptId`",
    "commit": "2ec919761ced379f00e1fa9804a66e3b15e9d2e9",
    "createdAt": "2018-01-08T08:49:25Z",
    "diffHunk": "@@ -56,6 +56,8 @@ class StageInfo(\n     completionTime = Some(System.currentTimeMillis)\n   }\n \n+  def attemptNumber(): Int = attemptId",
    "line": 13
  }, {
    "author": {
      "login": "advancedxy"
    },
    "body": "So, keep it this way or add a constructor and fix Json parser?",
    "commit": "2ec919761ced379f00e1fa9804a66e3b15e9d2e9",
    "createdAt": "2018-01-08T15:26:16Z",
    "diffHunk": "@@ -56,6 +56,8 @@ class StageInfo(\n     completionTime = Some(System.currentTimeMillis)\n   }\n \n+  def attemptNumber(): Int = attemptId",
    "line": 13
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "I'd like to add a constructor and fix the json parser, otherwise we are not fully deprecating it. But let's do it in a new PR, as it may need quite a lot of changes.",
    "commit": "2ec919761ced379f00e1fa9804a66e3b15e9d2e9",
    "createdAt": "2018-01-08T15:36:38Z",
    "diffHunk": "@@ -56,6 +56,8 @@ class StageInfo(\n     completionTime = Some(System.currentTimeMillis)\n   }\n \n+  def attemptNumber(): Int = attemptId",
    "line": 13
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "Oh, I was wrong. It seems the rest api doesn't use this class. It's using `org.apache.spark.status.api.v1.StageData`. However, it's also called `attemptId` in this class.",
    "commit": "2ec919761ced379f00e1fa9804a66e3b15e9d2e9",
    "createdAt": "2018-01-08T19:39:22Z",
    "diffHunk": "@@ -56,6 +56,8 @@ class StageInfo(\n     completionTime = Some(System.currentTimeMillis)\n   }\n \n+  def attemptNumber(): Int = attemptId",
    "line": 13
  }, {
    "author": {
      "login": "advancedxy"
    },
    "body": "> But let's do it in a new PR, as it may need quite a lot of changes.\r\n\r\nLets's do that after Spark 2.3 release then? \r\n\r\n>However, it's also called attemptId in this class.\r\n\r\nYeah, (stage)attemptId is over a lot of places...",
    "commit": "2ec919761ced379f00e1fa9804a66e3b15e9d2e9",
    "createdAt": "2018-01-10T04:32:06Z",
    "diffHunk": "@@ -56,6 +56,8 @@ class StageInfo(\n     completionTime = Some(System.currentTimeMillis)\n   }\n \n+  def attemptNumber(): Int = attemptId",
    "line": 13
  }],
  "prId": 20178
}]