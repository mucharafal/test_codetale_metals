[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "No, don't touch this file. First because applying history server settings in Spark apps is weird.\r\n\r\nSecond because users don't even have permission to do this in a properly deployed Spark. Users can only delete their own log files.\r\n\r\nSpark apps should only be concerned with their own state, not figuring out how to manage things left over by other Spark apps.",
    "commit": "96e906326327c96f0c6d07bba14c46ac46e86ae0",
    "createdAt": "2016-12-08T18:42:24Z",
    "diffHunk": "@@ -90,6 +91,10 @@ private[spark] class EventLoggingListener(\n    * Creates the log file in the configured log directory.\n    */\n   def start() {\n+    val statusList = Option(fileSystem.listStatus(new Path(logBaseDir))).map(_.toSeq)\n+      .getOrElse(Seq[FileStatus]())\n+    EventLoggingListener.cleanRedundantLogFiles(sparkConf, fileSystem, statusList)"
  }, {
    "author": {
      "login": "uncleGen"
    },
    "body": "Make sense.  I will revert related changes first.",
    "commit": "96e906326327c96f0c6d07bba14c46ac46e86ae0",
    "createdAt": "2016-12-12T06:44:12Z",
    "diffHunk": "@@ -90,6 +91,10 @@ private[spark] class EventLoggingListener(\n    * Creates the log file in the configured log directory.\n    */\n   def start() {\n+    val statusList = Option(fileSystem.listStatus(new Path(logBaseDir))).map(_.toSeq)\n+      .getOrElse(Seq[FileStatus]())\n+    EventLoggingListener.cleanRedundantLogFiles(sparkConf, fileSystem, statusList)"
  }],
  "prId": 16142
}]