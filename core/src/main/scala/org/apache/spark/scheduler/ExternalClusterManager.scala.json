[{
  "comments": [{
    "author": {
      "login": "tejasapatil"
    },
    "body": "remove extra newline\n",
    "commit": "674742029e28278b8ff038590464045f714b5790",
    "createdAt": "2016-03-24T05:35:43Z",
    "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.scheduler\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.annotation.DeveloperApi\n+\n+/**\n+ * :: DeveloperApi ::\n+ * A cluster manager interface to plugin external scheduler.\n+ *"
  }, {
    "author": {
      "login": "hbhanawat"
    },
    "body": "Done.\n",
    "commit": "674742029e28278b8ff038590464045f714b5790",
    "createdAt": "2016-03-24T12:26:50Z",
    "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.scheduler\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.annotation.DeveloperApi\n+\n+/**\n+ * :: DeveloperApi ::\n+ * A cluster manager interface to plugin external scheduler.\n+ *"
  }],
  "prId": 11723
}, {
  "comments": [{
    "author": {
      "login": "tejasapatil"
    },
    "body": "can you also include the `masterURL` as a param ?\n",
    "commit": "674742029e28278b8ff038590464045f714b5790",
    "createdAt": "2016-03-24T05:41:20Z",
    "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.scheduler\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.annotation.DeveloperApi\n+\n+/**\n+ * :: DeveloperApi ::\n+ * A cluster manager interface to plugin external scheduler.\n+ *\n+ */\n+@DeveloperApi\n+private[spark] trait ExternalClusterManager {\n+\n+  /**\n+   * Check if this cluster manager instance can create scheduler components\n+   * for a certain master URL.\n+   * @param masterURL the master URL\n+   * @return True if the cluster manager can create scheduler backend/\n+   */\n+  def canCreate(masterURL : String): Boolean\n+\n+  /**\n+   * Create a task scheduler instance for the given SparkContext\n+   * @param sc SparkContext\n+   * @return TaskScheduler that will be responsible for task handling\n+   */\n+  def createTaskScheduler (sc: SparkContext): TaskScheduler"
  }, {
    "author": {
      "login": "hbhanawat"
    },
    "body": "I have added the master url. In the hindsight, I think it makes sense. \n",
    "commit": "674742029e28278b8ff038590464045f714b5790",
    "createdAt": "2016-03-24T12:28:05Z",
    "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.scheduler\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.annotation.DeveloperApi\n+\n+/**\n+ * :: DeveloperApi ::\n+ * A cluster manager interface to plugin external scheduler.\n+ *\n+ */\n+@DeveloperApi\n+private[spark] trait ExternalClusterManager {\n+\n+  /**\n+   * Check if this cluster manager instance can create scheduler components\n+   * for a certain master URL.\n+   * @param masterURL the master URL\n+   * @return True if the cluster manager can create scheduler backend/\n+   */\n+  def canCreate(masterURL : String): Boolean\n+\n+  /**\n+   * Create a task scheduler instance for the given SparkContext\n+   * @param sc SparkContext\n+   * @return TaskScheduler that will be responsible for task handling\n+   */\n+  def createTaskScheduler (sc: SparkContext): TaskScheduler"
  }],
  "prId": 11723
}, {
  "comments": [{
    "author": {
      "login": "tejasapatil"
    },
    "body": "can you also include the `masterURL` as a param ?\n",
    "commit": "674742029e28278b8ff038590464045f714b5790",
    "createdAt": "2016-03-24T05:41:23Z",
    "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.scheduler\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.annotation.DeveloperApi\n+\n+/**\n+ * :: DeveloperApi ::\n+ * A cluster manager interface to plugin external scheduler.\n+ *\n+ */\n+@DeveloperApi\n+private[spark] trait ExternalClusterManager {\n+\n+  /**\n+   * Check if this cluster manager instance can create scheduler components\n+   * for a certain master URL.\n+   * @param masterURL the master URL\n+   * @return True if the cluster manager can create scheduler backend/\n+   */\n+  def canCreate(masterURL : String): Boolean\n+\n+  /**\n+   * Create a task scheduler instance for the given SparkContext\n+   * @param sc SparkContext\n+   * @return TaskScheduler that will be responsible for task handling\n+   */\n+  def createTaskScheduler (sc: SparkContext): TaskScheduler\n+\n+  /**\n+   * Create a scheduler backend for the given SparkContext and scheduler. This is\n+   * called after task scheduler is created using [[ExternalClusterManager.createTaskScheduler()]].\n+   * @param sc SparkContext\n+   * @param scheduler TaskScheduler that will be used with the scheduler backend.\n+   * @return SchedulerBackend that works with a TaskScheduler\n+   */\n+  def createSchedulerBackend (sc: SparkContext, scheduler: TaskScheduler): SchedulerBackend"
  }, {
    "author": {
      "login": "hbhanawat"
    },
    "body": "Done. \n",
    "commit": "674742029e28278b8ff038590464045f714b5790",
    "createdAt": "2016-03-24T12:28:25Z",
    "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.scheduler\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.annotation.DeveloperApi\n+\n+/**\n+ * :: DeveloperApi ::\n+ * A cluster manager interface to plugin external scheduler.\n+ *\n+ */\n+@DeveloperApi\n+private[spark] trait ExternalClusterManager {\n+\n+  /**\n+   * Check if this cluster manager instance can create scheduler components\n+   * for a certain master URL.\n+   * @param masterURL the master URL\n+   * @return True if the cluster manager can create scheduler backend/\n+   */\n+  def canCreate(masterURL : String): Boolean\n+\n+  /**\n+   * Create a task scheduler instance for the given SparkContext\n+   * @param sc SparkContext\n+   * @return TaskScheduler that will be responsible for task handling\n+   */\n+  def createTaskScheduler (sc: SparkContext): TaskScheduler\n+\n+  /**\n+   * Create a scheduler backend for the given SparkContext and scheduler. This is\n+   * called after task scheduler is created using [[ExternalClusterManager.createTaskScheduler()]].\n+   * @param sc SparkContext\n+   * @param scheduler TaskScheduler that will be used with the scheduler backend.\n+   * @return SchedulerBackend that works with a TaskScheduler\n+   */\n+  def createSchedulerBackend (sc: SparkContext, scheduler: TaskScheduler): SchedulerBackend"
  }],
  "prId": 11723
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "are you sure you want this to be private spark?\n",
    "commit": "674742029e28278b8ff038590464045f714b5790",
    "createdAt": "2016-04-15T05:38:57Z",
    "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.scheduler\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.annotation.DeveloperApi\n+\n+/**\n+  * :: DeveloperApi ::\n+  * A cluster manager interface to plugin external scheduler.\n+  */\n+@DeveloperApi\n+private[spark] trait ExternalClusterManager {"
  }],
  "prId": 11723
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "use javadoc style indent in spark, i.e.\n\n```\n/**\n * Check if this cluster manager instance can create scheduler components\n * ...\n */\n```\n",
    "commit": "674742029e28278b8ff038590464045f714b5790",
    "createdAt": "2016-04-15T05:42:53Z",
    "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.scheduler\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.annotation.DeveloperApi\n+\n+/**\n+  * :: DeveloperApi ::\n+  * A cluster manager interface to plugin external scheduler.\n+  */\n+@DeveloperApi\n+private[spark] trait ExternalClusterManager {\n+\n+  /**\n+    * Check if this cluster manager instance can create scheduler components"
  }],
  "prId": 11723
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "the way we indent is\n\n```\ndef createSchedulerBackend(\n    sc: SparkContext,\n    masterURL: String,\n    scheduler: TaskScheduler): SchedulerBackend\n```\n",
    "commit": "674742029e28278b8ff038590464045f714b5790",
    "createdAt": "2016-04-15T05:43:23Z",
    "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.scheduler\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.annotation.DeveloperApi\n+\n+/**\n+  * :: DeveloperApi ::\n+  * A cluster manager interface to plugin external scheduler.\n+  */\n+@DeveloperApi\n+private[spark] trait ExternalClusterManager {\n+\n+  /**\n+    * Check if this cluster manager instance can create scheduler components\n+    * for a certain master URL.\n+    * @param masterURL the master URL\n+    * @return True if the cluster manager can create scheduler backend/\n+    */\n+  def canCreate(masterURL: String): Boolean\n+\n+  /**\n+    * Create a task scheduler instance for the given SparkContext\n+    * @param sc SparkContext\n+    * @param masterURL the master URL\n+    * @return TaskScheduler that will be responsible for task handling\n+    */\n+  def createTaskScheduler(sc: SparkContext, masterURL: String): TaskScheduler\n+\n+  /**\n+    * Create a scheduler backend for the given SparkContext and scheduler. This is\n+    * called after task scheduler is created using [[ExternalClusterManager.createTaskScheduler()]].\n+    * @param sc SparkContext\n+    * @param masterURL the master URL\n+    * @param scheduler TaskScheduler that will be used with the scheduler backend.\n+    * @return SchedulerBackend that works with a TaskScheduler\n+    */\n+  def createSchedulerBackend(sc: SparkContext,"
  }],
  "prId": 11723
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "i just realized most of the return types used in this class are private[spark], so your implementation of this interface would need to be in the spark package anyway. I'm going to add private[spark] to this when I merge.\n",
    "commit": "674742029e28278b8ff038590464045f714b5790",
    "createdAt": "2016-04-17T06:43:04Z",
    "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.scheduler\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.annotation.DeveloperApi\n+\n+/**\n+ * :: DeveloperApi ::\n+ * A cluster manager interface to plugin external scheduler.\n+ */\n+@DeveloperApi\n+trait ExternalClusterManager {",
    "line": 28
  }],
  "prId": 11723
}]