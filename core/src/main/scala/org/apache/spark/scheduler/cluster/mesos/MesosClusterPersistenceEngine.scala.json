[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Up to you, but does it make sense to fall back to the original property as a default to preserve compatibility? Does that make sense for all these Mesos-specific override properties?\n",
    "commit": "5ebaf04ef29aea4c7ac8bed13b406e2de0206c7d",
    "createdAt": "2015-12-01T08:48:06Z",
    "diffHunk": "@@ -94,7 +94,7 @@ private[spark] class ZookeeperMesosClusterPersistenceEngine(\n     conf: SparkConf)\n   extends MesosClusterPersistenceEngine with Logging {\n   private val WORKING_DIR =\n-    conf.get(\"spark.deploy.zookeeper.dir\", \"/spark_mesos_dispatcher\") + \"/\" + baseDir\n+    conf.get(\"spark.mesos.deploy.zookeeper.dir\", \"/spark_mesos_dispatcher\") + \"/\" + baseDir"
  }, {
    "author": {
      "login": "andrewor14"
    },
    "body": "was this documented?\n",
    "commit": "5ebaf04ef29aea4c7ac8bed13b406e2de0206c7d",
    "createdAt": "2015-12-01T18:42:51Z",
    "diffHunk": "@@ -94,7 +94,7 @@ private[spark] class ZookeeperMesosClusterPersistenceEngine(\n     conf: SparkConf)\n   extends MesosClusterPersistenceEngine with Logging {\n   private val WORKING_DIR =\n-    conf.get(\"spark.deploy.zookeeper.dir\", \"/spark_mesos_dispatcher\") + \"/\" + baseDir\n+    conf.get(\"spark.mesos.deploy.zookeeper.dir\", \"/spark_mesos_dispatcher\") + \"/\" + baseDir"
  }],
  "prId": 10057
}, {
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "same here, no need to do this later. Just do it now. (also this is Spark so you should use Spark versions in comments, not Mesos versions)\n",
    "commit": "5ebaf04ef29aea4c7ac8bed13b406e2de0206c7d",
    "createdAt": "2015-12-21T21:11:12Z",
    "diffHunk": "@@ -53,9 +53,12 @@ private[spark] trait MesosClusterPersistenceEngine {\n  * all of them reuses the same connection pool.\n  */\n private[spark] class ZookeeperMesosClusterPersistenceEngineFactory(conf: SparkConf)\n-  extends MesosClusterPersistenceEngineFactory(conf) {\n+  extends MesosClusterPersistenceEngineFactory(conf) with Logging {\n \n-  lazy val zk = SparkCuratorUtil.newClient(conf, \"spark.mesos.deploy.zookeeper.url\")\n+  // TODO(tnachen): Remove support for spark.mesos.deploy.zookeeper.url in 0.28."
  }, {
    "author": {
      "login": "tnachen"
    },
    "body": ":)\n",
    "commit": "5ebaf04ef29aea4c7ac8bed13b406e2de0206c7d",
    "createdAt": "2015-12-22T00:49:06Z",
    "diffHunk": "@@ -53,9 +53,12 @@ private[spark] trait MesosClusterPersistenceEngine {\n  * all of them reuses the same connection pool.\n  */\n private[spark] class ZookeeperMesosClusterPersistenceEngineFactory(conf: SparkConf)\n-  extends MesosClusterPersistenceEngineFactory(conf) {\n+  extends MesosClusterPersistenceEngineFactory(conf) with Logging {\n \n-  lazy val zk = SparkCuratorUtil.newClient(conf, \"spark.mesos.deploy.zookeeper.url\")\n+  // TODO(tnachen): Remove support for spark.mesos.deploy.zookeeper.url in 0.28."
  }],
  "prId": 10057
}]