[{
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "you need override here\n",
    "commit": "c8dade2aa7c07d97d9dc953e6ea7c09c72ed2f9d",
    "createdAt": "2015-02-02T01:40:02Z",
    "diffHunk": "@@ -17,78 +17,47 @@\n \n package org.apache.spark.scheduler\n \n-import scala.collection.mutable\n-import scala.collection.mutable.ArrayBuffer\n-\n-import org.apache.spark.Logging\n-import org.apache.spark.util.Utils\n+import org.apache.spark.util.ListenerBus\n \n /**\n- * A SparkListenerEvent bus that relays events to its listeners\n+ * A [[SparkListenerEvent]] bus that relays [[SparkListenerEvent]]s to its listeners\n  */\n-private[spark] trait SparkListenerBus extends Logging {\n-\n-  // SparkListeners attached to this event bus\n-  protected val sparkListeners = new ArrayBuffer[SparkListener]\n-    with mutable.SynchronizedBuffer[SparkListener]\n-\n-  def addListener(listener: SparkListener) {\n-    sparkListeners += listener\n-  }\n+private[spark] trait SparkListenerBus extends ListenerBus[SparkListener, SparkListenerEvent] {\n \n-  /**\n-   * Post an event to all attached listeners.\n-   * This does nothing if the event is SparkListenerShutdown.\n-   */\n-  def postToAll(event: SparkListenerEvent) {\n+  def onPostEvent(listener: SparkListener, event: SparkListenerEvent): Unit = {",
    "line": 31
  }],
  "prId": 4006
}]