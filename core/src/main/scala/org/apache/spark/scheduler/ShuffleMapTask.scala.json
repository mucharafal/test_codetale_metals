[{
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "Why not push this logic into `UnsafeShuffleWriter.stop()`?\n",
    "commit": "9abecb9ff9bebd2305abcdf0a8fdf2b5b56347a9",
    "createdAt": "2015-07-30T18:57:04Z",
    "diffHunk": "@@ -69,7 +72,13 @@ private[spark] class ShuffleMapTask(\n       val manager = SparkEnv.get.shuffleManager\n       writer = manager.getWriter[Any, Any](dep.shuffleHandle, partitionId, context)\n       writer.write(rdd.iterator(partition, context).asInstanceOf[Iterator[_ <: Product2[Any, Any]]])\n-      return writer.stop(success = true).get\n+      writer match {\n+        case unsafe: UnsafeShuffleWriter[_, _] =>"
  }, {
    "author": {
      "login": "JoshRosen"
    },
    "body": "I guess we don't need to necessarily worry about the writer task failing due to an OutOfMemoryException because that will kill the executor.\n",
    "commit": "9abecb9ff9bebd2305abcdf0a8fdf2b5b56347a9",
    "createdAt": "2015-07-30T18:58:21Z",
    "diffHunk": "@@ -69,7 +72,13 @@ private[spark] class ShuffleMapTask(\n       val manager = SparkEnv.get.shuffleManager\n       writer = manager.getWriter[Any, Any](dep.shuffleHandle, partitionId, context)\n       writer.write(rdd.iterator(partition, context).asInstanceOf[Iterator[_ <: Product2[Any, Any]]])\n-      return writer.stop(success = true).get\n+      writer match {\n+        case unsafe: UnsafeShuffleWriter[_, _] =>"
  }, {
    "author": {
      "login": "andrewor14"
    },
    "body": "ok\n",
    "commit": "9abecb9ff9bebd2305abcdf0a8fdf2b5b56347a9",
    "createdAt": "2015-07-30T22:24:15Z",
    "diffHunk": "@@ -69,7 +72,13 @@ private[spark] class ShuffleMapTask(\n       val manager = SparkEnv.get.shuffleManager\n       writer = manager.getWriter[Any, Any](dep.shuffleHandle, partitionId, context)\n       writer.write(rdd.iterator(partition, context).asInstanceOf[Iterator[_ <: Product2[Any, Any]]])\n-      return writer.stop(success = true).get\n+      writer match {\n+        case unsafe: UnsafeShuffleWriter[_, _] =>"
  }],
  "prId": 7770
}]