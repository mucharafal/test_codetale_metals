[{
  "comments": [{
    "author": {
      "login": "mridulm"
    },
    "body": "This method is duplicated in KerberosUtil ?",
    "commit": "0218e9effe7ae23d4683b24f9dac65209c03aa06",
    "createdAt": "2017-03-11T04:55:11Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.scheduler\n+\n+import org.apache.hadoop.security.{Credentials, UserGroupInformation}\n+import org.apache.spark.{SparkConf, SparkEnv, SparkException}\n+import org.apache.spark.deploy.SparkHadoopUtil\n+import org.apache.spark.internal.Logging\n+\n+object KerberosUser extends Logging {\n+\n+  def securize (principal: String, keytab: String) : Unit = {\n+    val hadoopConf = SparkHadoopUtil.get.newConfiguration(new SparkConf())\n+    hadoopConf.set(\"hadoop.security.authentication\", \"Kerberos\")\n+    UserGroupInformation.setConfiguration(hadoopConf)\n+    UserGroupInformation.loginUserFromKeytab(principal, keytab)\n+  }",
    "line": 32
  }],
  "prId": 16788
}]