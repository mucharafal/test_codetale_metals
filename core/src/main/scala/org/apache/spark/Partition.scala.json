[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Hm, `super.equals()` delegates to the default in `Object` which requires reference equality. I don't think we can have that. Although defining these in an abstract class is dicey, I agree it should go hand in hand with `hashCode` at least and should just define equality based on index.\n",
    "commit": "ba5633c6ad42f110428540e0a4f1de9eb67b35aa",
    "createdAt": "2016-04-05T01:28:42Z",
    "diffHunk": "@@ -26,6 +26,11 @@ trait Partition extends Serializable {\n    */\n   def index: Int\n \n+  override def equals(other: Any): Boolean = other match {\n+    case that: Partition => super.equals(that) && that.index == index"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Actually is there any subclass that relies on this default implementation? If so, I think it also needs to check its own class vs the class of the argument. If not, we could remove this.\n",
    "commit": "ba5633c6ad42f110428540e0a4f1de9eb67b35aa",
    "createdAt": "2016-04-05T01:32:13Z",
    "diffHunk": "@@ -26,6 +26,11 @@ trait Partition extends Serializable {\n    */\n   def index: Int\n \n+  override def equals(other: Any): Boolean = other match {\n+    case that: Partition => super.equals(that) && that.index == index"
  }, {
    "author": {
      "login": "joan38"
    },
    "body": "If so, do you mean using the `canEqual` approach?\nIf not, do you mean removing both `equals` and `hashCode` then?\n",
    "commit": "ba5633c6ad42f110428540e0a4f1de9eb67b35aa",
    "createdAt": "2016-04-05T10:18:39Z",
    "diffHunk": "@@ -26,6 +26,11 @@ trait Partition extends Serializable {\n    */\n   def index: Int\n \n+  override def equals(other: Any): Boolean = other match {\n+    case that: Partition => super.equals(that) && that.index == index"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "If all the subclasses override these methods (and some implement some custom logic), then this isn't used, and maybe it's simpler to omit it. If this stays, yes, you're right that it really has to check the class of itself vs the argument too.\n",
    "commit": "ba5633c6ad42f110428540e0a4f1de9eb67b35aa",
    "createdAt": "2016-04-05T10:42:39Z",
    "diffHunk": "@@ -26,6 +26,11 @@ trait Partition extends Serializable {\n    */\n   def index: Int\n \n+  override def equals(other: Any): Boolean = other match {\n+    case that: Partition => super.equals(that) && that.index == index"
  }],
  "prId": 12157
}]