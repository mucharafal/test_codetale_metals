[{
  "comments": [{
    "author": {
      "login": "ericl"
    },
    "body": "@rxin\n",
    "commit": "63f7f2ee65a93de7f87f99b9fc46a71deefa5ea5",
    "createdAt": "2016-11-08T20:09:19Z",
    "diffHunk": "@@ -86,6 +86,16 @@ abstract class FileCommitProtocol {\n   def newTaskTempFile(taskContext: TaskAttemptContext, dir: Option[String], ext: String): String\n \n   /**\n+   * Similar to newTaskTempFile(), but allows files to committed to an absolute output location.\n+   * Depending on the implementation, there may be weaker guarantees around adding files this way.\n+   */\n+  def newTaskTempFileAbsPath("
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "Do we want a default implementation? If the protocol doesn't implement this things will go seriously wrong at runtime wouldn't it?\n",
    "commit": "63f7f2ee65a93de7f87f99b9fc46a71deefa5ea5",
    "createdAt": "2016-11-08T21:10:02Z",
    "diffHunk": "@@ -86,6 +86,16 @@ abstract class FileCommitProtocol {\n   def newTaskTempFile(taskContext: TaskAttemptContext, dir: Option[String], ext: String): String\n \n   /**\n+   * Similar to newTaskTempFile(), but allows files to committed to an absolute output location.\n+   * Depending on the implementation, there may be weaker guarantees around adding files this way.\n+   */\n+  def newTaskTempFileAbsPath("
  }, {
    "author": {
      "login": "ericl"
    },
    "body": "Done\n",
    "commit": "63f7f2ee65a93de7f87f99b9fc46a71deefa5ea5",
    "createdAt": "2016-11-08T23:45:54Z",
    "diffHunk": "@@ -86,6 +86,16 @@ abstract class FileCommitProtocol {\n   def newTaskTempFile(taskContext: TaskAttemptContext, dir: Option[String], ext: String): String\n \n   /**\n+   * Similar to newTaskTempFile(), but allows files to committed to an absolute output location.\n+   * Depending on the implementation, there may be weaker guarantees around adding files this way.\n+   */\n+  def newTaskTempFileAbsPath("
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "Can you unify this and `newTaskTempFile`? If we treat the default partition location like custom location.\n",
    "commit": "63f7f2ee65a93de7f87f99b9fc46a71deefa5ea5",
    "createdAt": "2016-11-09T00:39:58Z",
    "diffHunk": "@@ -86,6 +86,16 @@ abstract class FileCommitProtocol {\n   def newTaskTempFile(taskContext: TaskAttemptContext, dir: Option[String], ext: String): String\n \n   /**\n+   * Similar to newTaskTempFile(), but allows files to committed to an absolute output location.\n+   * Depending on the implementation, there may be weaker guarantees around adding files this way.\n+   */\n+  def newTaskTempFileAbsPath("
  }, {
    "author": {
      "login": "ericl"
    },
    "body": "I thought about combining it but I think the method semantics become too subtle then.\n",
    "commit": "63f7f2ee65a93de7f87f99b9fc46a71deefa5ea5",
    "createdAt": "2016-11-09T03:44:40Z",
    "diffHunk": "@@ -86,6 +86,16 @@ abstract class FileCommitProtocol {\n   def newTaskTempFile(taskContext: TaskAttemptContext, dir: Option[String], ext: String): String\n \n   /**\n+   * Similar to newTaskTempFile(), but allows files to committed to an absolute output location.\n+   * Depending on the implementation, there may be weaker guarantees around adding files this way.\n+   */\n+  def newTaskTempFileAbsPath("
  }],
  "prId": 15814
}]