[{
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "I'll also make this into a ConcurrentHashMap.\n",
    "commit": "24519631c722d337af938102842d09e3d6f1b132",
    "createdAt": "2016-01-02T22:08:08Z",
    "diffHunk": "@@ -63,10 +63,7 @@ private[spark] class FileShuffleBlockResolver(conf: SparkConf)\n     val completedMapTasks = new ConcurrentLinkedQueue[Int]()\n   }\n \n-  private val shuffleStates = new TimeStampedHashMap[ShuffleId, ShuffleState]\n-\n-  private val metadataCleaner =\n-    new MetadataCleaner(MetadataCleanerType.SHUFFLE_BLOCK_MANAGER, this.cleanup, conf)\n+  private val shuffleStates = new scala.collection.mutable.HashMap[ShuffleId, ShuffleState]"
  }],
  "prId": 10534
}]