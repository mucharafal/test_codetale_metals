[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "private?\n",
    "commit": "0e01ae321735aea5e4f568f247968e68e7f3ec33",
    "createdAt": "2014-07-09T07:05:30Z",
    "diffHunk": "@@ -59,8 +64,10 @@ private[spark] trait ShuffleWriterGroup {\n  * files within a ShuffleFileGroups associated with the block's reducer.\n  */\n private[spark]\n-class ShuffleBlockManager(blockManager: BlockManager) extends Logging {\n-  def conf = blockManager.conf\n+class HashShuffleBlockManager(conf: SparkConf)\n+  extends ShuffleBlockManager with Logging {\n+\n+  lazy val blockManager = SparkEnv.get.blockManager"
  }],
  "prId": 1241
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "One thing about this naming is that the block manager technically isn't specific to hashing. For example, we can still do sort-based shuffle using this block manager (although that's unlikely to happen).\n\n@aarondav any thoughts?\n",
    "commit": "0e01ae321735aea5e4f568f247968e68e7f3ec33",
    "createdAt": "2014-07-09T07:06:57Z",
    "diffHunk": "@@ -59,8 +64,10 @@ private[spark] trait ShuffleWriterGroup {\n  * files within a ShuffleFileGroups associated with the block's reducer.\n  */\n private[spark]\n-class ShuffleBlockManager(blockManager: BlockManager) extends Logging {\n-  def conf = blockManager.conf\n+class HashShuffleBlockManager(conf: SparkConf)"
  }],
  "prId": 1241
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "While you are at it, do you mind rewriting this into a while loop? It gets expensive to do \"return\" within a for closure. \n",
    "commit": "0e01ae321735aea5e4f568f247968e68e7f3ec33",
    "createdAt": "2014-07-09T07:08:25Z",
    "diffHunk": "@@ -156,17 +162,25 @@ class ShuffleBlockManager(blockManager: BlockManager) extends Logging {\n \n   /**\n    * Returns the physical file segment in which the given BlockId is located.\n-   * This function should only be called if shuffle file consolidation is enabled, as it is\n-   * an error condition if we don't find the expected block.\n    */\n   def getBlockLocation(id: ShuffleBlockId): FileSegment = {\n-    // Search all file groups associated with this shuffle.\n-    val shuffleState = shuffleStates(id.shuffleId)\n-    for (fileGroup <- shuffleState.allFileGroups) {\n-      val segment = fileGroup.getFileSegmentFor(id.mapId, id.reduceId)\n-      if (segment.isDefined) { return segment.get }\n+    if (consolidateShuffleFiles) {\n+      // Search all file groups associated with this shuffle.\n+      val shuffleState = shuffleStates(id.shuffleId)\n+      for (fileGroup <- shuffleState.allFileGroups) {"
  }],
  "prId": 1241
}]