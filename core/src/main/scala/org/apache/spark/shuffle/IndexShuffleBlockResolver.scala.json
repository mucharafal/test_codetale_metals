[{
  "comments": [{
    "author": {
      "login": "zsxwing"
    },
    "body": "@jerryshao this is another place. In addition, I'm not sure if there is any compression codec using `skip` or not.\r\n\r\nI also noticed `sun.nio.ch.ChannelInputStream` has extra `synchronized`s as `Files.newInputStream` needs to be thread-safe. Not sure if it may cause performance regression or not.",
    "commit": "401d65047cc2b9b920243e0df7b2802929a6bc56",
    "createdAt": "2018-01-03T07:28:49Z",
    "diffHunk": "@@ -198,7 +196,7 @@ private[spark] class IndexShuffleBlockResolver(\n     // find out the consolidated file, then the offset within that from our index\n     val indexFile = getIndexFile(blockId.shuffleId, blockId.mapId)\n \n-    val in = new DataInputStream(Files.newInputStream(indexFile.toPath))\n+    val in = new DataInputStream(new FileInputStream(indexFile))",
    "line": 23
  }, {
    "author": {
      "login": "jerryshao"
    },
    "body": "I see. ",
    "commit": "401d65047cc2b9b920243e0df7b2802929a6bc56",
    "createdAt": "2018-01-03T07:36:15Z",
    "diffHunk": "@@ -198,7 +196,7 @@ private[spark] class IndexShuffleBlockResolver(\n     // find out the consolidated file, then the offset within that from our index\n     val indexFile = getIndexFile(blockId.shuffleId, blockId.mapId)\n \n-    val in = new DataInputStream(Files.newInputStream(indexFile.toPath))\n+    val in = new DataInputStream(new FileInputStream(indexFile))",
    "line": 23
  }],
  "prId": 20119
}]