[{
  "comments": [{
    "author": {
      "login": "skonto"
    },
    "body": "One thing that concerns me besides this being a bit verbose is that it does not provide whose properties these are, when someone looks at the code. \nIt would be ok i guess if sc properties are propagated without any modification to all involved components, is this the case?\n",
    "commit": "ec6707e35784113896063f5b5aec042e2e54ecb1",
    "createdAt": "2016-07-21T11:01:27Z",
    "diffHunk": "@@ -50,7 +50,7 @@ private[ui] class DriverPage(parent: MesosClusterUI) extends WebUIPage(\"driver\")\n     val driverDescription = Iterable.apply(driverState.description)\n     val submissionState = Iterable.apply(driverState.submissionState)\n     val command = Iterable.apply(driverState.description.command)\n-    val schedulerProperties = Iterable.apply(driverState.description.schedulerProperties)\n+    val schedulerProperties = Iterable.apply(driverState.description.sc.getAll.toMap)"
  }, {
    "author": {
      "login": "mgummelt"
    },
    "body": "`conf` is still namespaced under `driverState`, so I think it's still just as clear that these are driver properties.  In fact, maybe even moreso, since \"scheduler\" is ambiguous, as both the dispatcher and the driver are schedulers.\n",
    "commit": "ec6707e35784113896063f5b5aec042e2e54ecb1",
    "createdAt": "2016-07-21T17:14:16Z",
    "diffHunk": "@@ -50,7 +50,7 @@ private[ui] class DriverPage(parent: MesosClusterUI) extends WebUIPage(\"driver\")\n     val driverDescription = Iterable.apply(driverState.description)\n     val submissionState = Iterable.apply(driverState.submissionState)\n     val command = Iterable.apply(driverState.description.command)\n-    val schedulerProperties = Iterable.apply(driverState.description.schedulerProperties)\n+    val schedulerProperties = Iterable.apply(driverState.description.sc.getAll.toMap)"
  }],
  "prId": 14275
}]