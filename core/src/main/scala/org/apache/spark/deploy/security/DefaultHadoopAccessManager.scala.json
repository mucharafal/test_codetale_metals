[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "Needs `private[spark]`? (Or even plain `private` if just used in this package.)",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-04-28T23:18:15Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.FileSystem\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.security.UserGroupInformation\n+\n+class DefaultHadoopAccessManager(hadoopConf: Configuration) extends HadoopAccessManager {"
  }, {
    "author": {
      "login": "mgummelt"
    },
    "body": "fixed",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-18T20:11:22Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.FileSystem\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.security.UserGroupInformation\n+\n+class DefaultHadoopAccessManager(hadoopConf: Configuration) extends HadoopAccessManager {"
  }],
  "prId": 17723
}, {
  "comments": [{
    "author": {
      "login": "mridulm"
    },
    "body": "In general, do we want to depend on UGI for spark security ?\r\nI would expect Kubernetes or spark standalone or some future resource manager to now be necessarily compatible with it (I was actually surprised the mesos is).\r\n+CC @rxin\r\n\r\nCan we externalize use of UGI from core ?\r\n\r\nYes, it has leaked into core in a few places - which is unfortunate IMO.",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-04-29T00:02:40Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.FileSystem\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.security.UserGroupInformation\n+\n+class DefaultHadoopAccessManager(hadoopConf: Configuration) extends HadoopAccessManager {\n+\n+  def getTokenRenewer: String = {\n+    UserGroupInformation.getCurrentUser.getShortUserName"
  }, {
    "author": {
      "login": "mgummelt"
    },
    "body": "This is resolved by our previous discussions.",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-18T20:11:59Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.FileSystem\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.security.UserGroupInformation\n+\n+class DefaultHadoopAccessManager(hadoopConf: Configuration) extends HadoopAccessManager {\n+\n+  def getTokenRenewer: String = {\n+    UserGroupInformation.getCurrentUser.getShortUserName"
  }],
  "prId": 17723
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Please add `override` for these three functions too. ",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-19T21:06:50Z",
    "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.FileSystem\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.security.UserGroupInformation\n+\n+private[spark] class DefaultHadoopAccessManager(hadoopConf: Configuration)\n+  extends HadoopAccessManager {\n+\n+  def getTokenRenewer: String = {\n+    UserGroupInformation.getCurrentUser.getShortUserName\n+  }\n+\n+  def hadoopFSsToAccess: Set[Path] = {\n+    Set(FileSystem.get(hadoopConf).getHomeDirectory)\n+  }\n+\n+  def getTokenRenewalInterval: Option[Long] = {"
  }, {
    "author": {
      "login": "mgummelt"
    },
    "body": "done",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-19T23:34:05Z",
    "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.FileSystem\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.security.UserGroupInformation\n+\n+private[spark] class DefaultHadoopAccessManager(hadoopConf: Configuration)\n+  extends HadoopAccessManager {\n+\n+  def getTokenRenewer: String = {\n+    UserGroupInformation.getCurrentUser.getShortUserName\n+  }\n+\n+  def hadoopFSsToAccess: Set[Path] = {\n+    Set(FileSystem.get(hadoopConf).getHomeDirectory)\n+  }\n+\n+  def getTokenRenewalInterval: Option[Long] = {"
  }],
  "prId": 17723
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "If this is for testing only, could we move it to the test package?",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-19T21:16:43Z",
    "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.FileSystem\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.security.UserGroupInformation\n+\n+private[spark] class DefaultHadoopAccessManager(hadoopConf: Configuration)"
  }, {
    "author": {
      "login": "mgummelt"
    },
    "body": "Mesos, along with possibly other non-YARN schedulers, will use it.",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-19T23:33:39Z",
    "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.FileSystem\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.security.UserGroupInformation\n+\n+private[spark] class DefaultHadoopAccessManager(hadoopConf: Configuration)"
  }],
  "prId": 17723
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Please write a comment to explain why we return None. ",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-19T21:40:26Z",
    "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.FileSystem\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.security.UserGroupInformation\n+\n+private[spark] class DefaultHadoopAccessManager(hadoopConf: Configuration)\n+  extends HadoopAccessManager {\n+\n+  def getTokenRenewer: String = {\n+    UserGroupInformation.getCurrentUser.getShortUserName\n+  }\n+\n+  def hadoopFSsToAccess: Set[Path] = {\n+    Set(FileSystem.get(hadoopConf).getHomeDirectory)\n+  }\n+\n+  def getTokenRenewalInterval: Option[Long] = {\n+    None"
  }],
  "prId": 17723
}]