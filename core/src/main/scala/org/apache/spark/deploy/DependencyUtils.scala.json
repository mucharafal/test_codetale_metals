[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "`File.separator` is better",
    "commit": "e1e97aabb45cf611221ee7baa8d0351b32fbb770",
    "createdAt": "2018-11-21T21:40:03Z",
    "diffHunk": "@@ -65,7 +65,7 @@ private[deploy] object DependencyUtils extends Logging {\n       .map {\n         resolveGlobPaths(_, hadoopConf)\n           .split(\",\")\n-          .filterNot(_.contains(userJar.split(\"/\").last))\n+          .filterNot(_.contains(userJar.split(System.getProperty(\"file.separator\")).last))"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "+1",
    "commit": "e1e97aabb45cf611221ee7baa8d0351b32fbb770",
    "createdAt": "2018-11-22T00:01:26Z",
    "diffHunk": "@@ -65,7 +65,7 @@ private[deploy] object DependencyUtils extends Logging {\n       .map {\n         resolveGlobPaths(_, hadoopConf)\n           .split(\",\")\n-          .filterNot(_.contains(userJar.split(\"/\").last))\n+          .filterNot(_.contains(userJar.split(System.getProperty(\"file.separator\")).last))"
  }, {
    "author": {
      "login": "markpavey"
    },
    "body": "I have updated to use File.separator instead of System.getProperty(\"file.separator\").",
    "commit": "e1e97aabb45cf611221ee7baa8d0351b32fbb770",
    "createdAt": "2018-11-26T16:59:27Z",
    "diffHunk": "@@ -65,7 +65,7 @@ private[deploy] object DependencyUtils extends Logging {\n       .map {\n         resolveGlobPaths(_, hadoopConf)\n           .split(\",\")\n-          .filterNot(_.contains(userJar.split(\"/\").last))\n+          .filterNot(_.contains(userJar.split(System.getProperty(\"file.separator\")).last))"
  }],
  "prId": 23102
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Just split on `File.separator`, not a regex.",
    "commit": "e1e97aabb45cf611221ee7baa8d0351b32fbb770",
    "createdAt": "2018-11-22T21:44:01Z",
    "diffHunk": "@@ -61,11 +62,12 @@ private[deploy] object DependencyUtils extends Logging {\n       hadoopConf: Configuration,\n       secMgr: SecurityManager): String = {\n     val targetDir = Utils.createTempDir()\n+    val fileSeparator = Pattern.quote(System.getProperty(\"file.separator\"))\n     Option(jars)\n       .map {\n         resolveGlobPaths(_, hadoopConf)\n           .split(\",\")\n-          .filterNot(_.contains(userJar.split(\"/\").last))\n+          .filterNot(_.contains(userJar.split(fileSeparator).last))"
  }, {
    "author": {
      "login": "kiszk"
    },
    "body": "Beyond the original purpose of this PR, is it better to move `userJar.split(fileSeparator).last` before line 66? This is because `userJar` is not changed in `map { ... }`.",
    "commit": "e1e97aabb45cf611221ee7baa8d0351b32fbb770",
    "createdAt": "2018-11-23T15:39:02Z",
    "diffHunk": "@@ -61,11 +62,12 @@ private[deploy] object DependencyUtils extends Logging {\n       hadoopConf: Configuration,\n       secMgr: SecurityManager): String = {\n     val targetDir = Utils.createTempDir()\n+    val fileSeparator = Pattern.quote(System.getProperty(\"file.separator\"))\n     Option(jars)\n       .map {\n         resolveGlobPaths(_, hadoopConf)\n           .split(\",\")\n-          .filterNot(_.contains(userJar.split(\"/\").last))\n+          .filterNot(_.contains(userJar.split(fileSeparator).last))"
  }],
  "prId": 23102
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Previous import style was correct. It complied project's style",
    "commit": "e1e97aabb45cf611221ee7baa8d0351b32fbb770",
    "createdAt": "2018-11-26T17:01:53Z",
    "diffHunk": "@@ -19,11 +19,11 @@ package org.apache.spark.deploy\n \n import java.io.File\n import java.net.URI\n+import java.util.regex.Pattern\n \n import org.apache.commons.lang3.StringUtils\n import org.apache.hadoop.conf.Configuration\n import org.apache.hadoop.fs.{FileSystem, Path}\n-"
  }, {
    "author": {
      "login": "markpavey"
    },
    "body": "Oops, I have pushed a commit to correct this.",
    "commit": "e1e97aabb45cf611221ee7baa8d0351b32fbb770",
    "createdAt": "2018-11-26T17:08:50Z",
    "diffHunk": "@@ -19,11 +19,11 @@ package org.apache.spark.deploy\n \n import java.io.File\n import java.net.URI\n+import java.util.regex.Pattern\n \n import org.apache.commons.lang3.StringUtils\n import org.apache.hadoop.conf.Configuration\n import org.apache.hadoop.fs.{FileSystem, Path}\n-"
  }],
  "prId": 23102
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Mind elaborating why this should be quoted",
    "commit": "e1e97aabb45cf611221ee7baa8d0351b32fbb770",
    "createdAt": "2018-11-26T17:02:15Z",
    "diffHunk": "@@ -61,11 +61,13 @@ private[deploy] object DependencyUtils extends Logging {\n       hadoopConf: Configuration,\n       secMgr: SecurityManager): String = {\n     val targetDir = Utils.createTempDir()\n+    val fileSeparator = Pattern.quote(File.separator)"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "My bad. `separator` is a string and will be interpreted as a regex. Split on `File.separatorChar` instead and it will split as expected. No Pattern needed.",
    "commit": "e1e97aabb45cf611221ee7baa8d0351b32fbb770",
    "createdAt": "2018-11-26T17:07:30Z",
    "diffHunk": "@@ -61,11 +61,13 @@ private[deploy] object DependencyUtils extends Logging {\n       hadoopConf: Configuration,\n       secMgr: SecurityManager): String = {\n     val targetDir = Utils.createTempDir()\n+    val fileSeparator = Pattern.quote(File.separator)"
  }, {
    "author": {
      "login": "markpavey"
    },
    "body": "The Java String.split method treats its parameter as a regular expression. On Windows the File.separator is a single backslash '\\\\' and it throws a PatternSyntaxException. Wrapping it in Pattern.quote ensures it is interpreted as a literal value.",
    "commit": "e1e97aabb45cf611221ee7baa8d0351b32fbb770",
    "createdAt": "2018-11-26T17:07:35Z",
    "diffHunk": "@@ -61,11 +61,13 @@ private[deploy] object DependencyUtils extends Logging {\n       hadoopConf: Configuration,\n       secMgr: SecurityManager): String = {\n     val targetDir = Utils.createTempDir()\n+    val fileSeparator = Pattern.quote(File.separator)"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "This should be OK in Scala: \r\n```\r\nscala> \"foo\\\\bar\".split('\\\\')\r\nres2: Array[String] = Array(foo, bar)\r\n```",
    "commit": "e1e97aabb45cf611221ee7baa8d0351b32fbb770",
    "createdAt": "2018-11-26T17:16:40Z",
    "diffHunk": "@@ -61,11 +61,13 @@ private[deploy] object DependencyUtils extends Logging {\n       hadoopConf: Configuration,\n       secMgr: SecurityManager): String = {\n     val targetDir = Utils.createTempDir()\n+    val fileSeparator = Pattern.quote(File.separator)"
  }, {
    "author": {
      "login": "markpavey"
    },
    "body": "Changed to use File.separatorChar.",
    "commit": "e1e97aabb45cf611221ee7baa8d0351b32fbb770",
    "createdAt": "2018-11-27T09:45:12Z",
    "diffHunk": "@@ -61,11 +61,13 @@ private[deploy] object DependencyUtils extends Logging {\n       hadoopConf: Configuration,\n       secMgr: SecurityManager): String = {\n     val targetDir = Utils.createTempDir()\n+    val fileSeparator = Pattern.quote(File.separator)"
  }],
  "prId": 23102
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "(Remove this import)",
    "commit": "e1e97aabb45cf611221ee7baa8d0351b32fbb770",
    "createdAt": "2018-11-27T15:06:42Z",
    "diffHunk": "@@ -19,6 +19,7 @@ package org.apache.spark.deploy\n \n import java.io.File\n import java.net.URI\n+import java.util.regex.Pattern"
  }, {
    "author": {
      "login": "markpavey"
    },
    "body": "Done",
    "commit": "e1e97aabb45cf611221ee7baa8d0351b32fbb770",
    "createdAt": "2018-11-27T15:11:31Z",
    "diffHunk": "@@ -19,6 +19,7 @@ package org.apache.spark.deploy\n \n import java.io.File\n import java.net.URI\n+import java.util.regex.Pattern"
  }],
  "prId": 23102
}]