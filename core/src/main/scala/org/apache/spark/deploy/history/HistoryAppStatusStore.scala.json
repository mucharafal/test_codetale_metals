[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "I don't think this block should be executed at all when `exec.attributes` is not empty; IMO this should only apply to legacy event logs that don't record that information.",
    "commit": "14bb807f16c2e904c3c317e8fb8f4729f9d35e1b",
    "createdAt": "2019-03-04T19:09:02Z",
    "diffHunk": "@@ -63,8 +63,25 @@ private[spark] class HistoryAppStatusStore(\n     }\n   }\n \n+  val STDOUT_URL_GROUPS = conf.get(LIVE_EXECUTOR_LOR_URL_CAPTURING_GROUPS)\n+    .map(_.split(\",\"))\n+    .getOrElse(Array.empty[String])\n+\n+  val STDOUT_URL_REGEX = conf.get(LIVE_EXECUTOR_LOG_URL_REGEX)\n+    .map(r => new Regex(r, STDOUT_URL_GROUPS: _*))\n+\n   private def replaceLogUrls(exec: v1.ExecutorSummary, urlPattern: String): v1.ExecutorSummary = {\n-    val attributes = exec.attributes\n+    val attributes = STDOUT_URL_REGEX.flatMap { regEx =>\n+      exec.executorLogs\n+        .get(\"stdout\")\n+        .flatMap(regEx.findFirstMatchIn)\n+        .map { urlMatch =>\n+          STDOUT_URL_GROUPS.foldLeft(exec.attributes) { (attribs, groupName) =>",
    "line": 18
  }, {
    "author": {
      "login": "HeartSaVioR"
    },
    "body": "+1 Let's just use `attributes` if it exists. I can see the case this helps even if attributes are presented: the number of `attributes` are updated which new attributes can be extracted from URL, but at least with current YARN URL we have extracted almost everything so it will unlikely happen.",
    "commit": "14bb807f16c2e904c3c317e8fb8f4729f9d35e1b",
    "createdAt": "2019-03-04T23:46:58Z",
    "diffHunk": "@@ -63,8 +63,25 @@ private[spark] class HistoryAppStatusStore(\n     }\n   }\n \n+  val STDOUT_URL_GROUPS = conf.get(LIVE_EXECUTOR_LOR_URL_CAPTURING_GROUPS)\n+    .map(_.split(\",\"))\n+    .getOrElse(Array.empty[String])\n+\n+  val STDOUT_URL_REGEX = conf.get(LIVE_EXECUTOR_LOG_URL_REGEX)\n+    .map(r => new Regex(r, STDOUT_URL_GROUPS: _*))\n+\n   private def replaceLogUrls(exec: v1.ExecutorSummary, urlPattern: String): v1.ExecutorSummary = {\n-    val attributes = exec.attributes\n+    val attributes = STDOUT_URL_REGEX.flatMap { regEx =>\n+      exec.executorLogs\n+        .get(\"stdout\")\n+        .flatMap(regEx.findFirstMatchIn)\n+        .map { urlMatch =>\n+          STDOUT_URL_GROUPS.foldLeft(exec.attributes) { (attribs, groupName) =>",
    "line": 18
  }],
  "prId": 23720
}]