[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "`s/webUi/webUiPort`\n",
    "commit": "5e02d8a19103843607166b9838b1fccdf600e242",
    "createdAt": "2015-05-20T16:01:47Z",
    "diffHunk": "@@ -53,7 +55,8 @@ class LocalSparkCluster(\n       .set(\"spark.shuffle.service.enabled\", \"false\")\n \n     /* Start the Master */\n-    val (masterSystem, masterPort, _, _) = Master.startSystemAndActor(localHostname, 0, 0, _conf)\n+    val (masterSystem, masterPort, webUi, _) = Master.startSystemAndActor(localHostname, 0, 0, _conf)"
  }],
  "prId": 6284
}, {
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "Minor nit: we could use the `@VisibleForTesting` annotation here, but not a big deal (the codebase is a bit inconsistent about this).\n",
    "commit": "5e02d8a19103843607166b9838b1fccdf600e242",
    "createdAt": "2015-05-22T22:58:06Z",
    "diffHunk": "@@ -43,6 +43,8 @@ class LocalSparkCluster(\n   private val localHostname = Utils.localHostName()\n   private val masterActorSystems = ArrayBuffer[ActorSystem]()\n   private val workerActorSystems = ArrayBuffer[ActorSystem]()\n+  // exposed for testing\n+  var masterWebUIPort = -1",
    "line": 5
  }],
  "prId": 6284
}]