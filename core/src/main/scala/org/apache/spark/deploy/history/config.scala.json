[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Just want to confirm it. Except this, no change on the other parameters. Right?",
    "commit": "5eff2c5f0891c6ea3fcfbbc7dacbbaf56c1d1788",
    "createdAt": "2017-09-10T04:11:25Z",
    "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.history\n+\n+import java.util.concurrent.TimeUnit\n+\n+import scala.annotation.meta.getter\n+\n+import org.apache.spark.internal.config.ConfigBuilder\n+import org.apache.spark.util.kvstore.KVIndex\n+\n+private[spark] object config {\n+\n+  /** Use this to annotate constructor params to be used as KVStore indices. */\n+  type KVIndexParam = KVIndex @getter\n+\n+  val DEFAULT_LOG_DIR = \"file:/tmp/spark-events\"\n+\n+  val EVENT_LOG_DIR = ConfigBuilder(\"spark.history.fs.logDirectory\")\n+    .stringConf\n+    .createWithDefault(DEFAULT_LOG_DIR)\n+\n+  val MAX_LOG_AGE_S = ConfigBuilder(\"spark.history.fs.cleaner.maxAge\")\n+    .timeConf(TimeUnit.SECONDS)\n+    .createWithDefaultString(\"7d\")\n+\n+  val LOCAL_STORE_DIR = ConfigBuilder(\"spark.history.store.path\")",
    "line": 42
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "It'd better to document the default one is an in-memory store.",
    "commit": "5eff2c5f0891c6ea3fcfbbc7dacbbaf56c1d1788",
    "createdAt": "2017-09-11T21:06:01Z",
    "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.history\n+\n+import java.util.concurrent.TimeUnit\n+\n+import scala.annotation.meta.getter\n+\n+import org.apache.spark.internal.config.ConfigBuilder\n+import org.apache.spark.util.kvstore.KVIndex\n+\n+private[spark] object config {\n+\n+  /** Use this to annotate constructor params to be used as KVStore indices. */\n+  type KVIndexParam = KVIndex @getter\n+\n+  val DEFAULT_LOG_DIR = \"file:/tmp/spark-events\"\n+\n+  val EVENT_LOG_DIR = ConfigBuilder(\"spark.history.fs.logDirectory\")\n+    .stringConf\n+    .createWithDefault(DEFAULT_LOG_DIR)\n+\n+  val MAX_LOG_AGE_S = ConfigBuilder(\"spark.history.fs.cleaner.maxAge\")\n+    .timeConf(TimeUnit.SECONDS)\n+    .createWithDefaultString(\"7d\")\n+\n+  val LOCAL_STORE_DIR = ConfigBuilder(\"spark.history.store.path\")",
    "line": 42
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "Correct, other parameters are the same.",
    "commit": "5eff2c5f0891c6ea3fcfbbc7dacbbaf56c1d1788",
    "createdAt": "2017-09-12T23:22:15Z",
    "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.history\n+\n+import java.util.concurrent.TimeUnit\n+\n+import scala.annotation.meta.getter\n+\n+import org.apache.spark.internal.config.ConfigBuilder\n+import org.apache.spark.util.kvstore.KVIndex\n+\n+private[spark] object config {\n+\n+  /** Use this to annotate constructor params to be used as KVStore indices. */\n+  type KVIndexParam = KVIndex @getter\n+\n+  val DEFAULT_LOG_DIR = \"file:/tmp/spark-events\"\n+\n+  val EVENT_LOG_DIR = ConfigBuilder(\"spark.history.fs.logDirectory\")\n+    .stringConf\n+    .createWithDefault(DEFAULT_LOG_DIR)\n+\n+  val MAX_LOG_AGE_S = ConfigBuilder(\"spark.history.fs.cleaner.maxAge\")\n+    .timeConf(TimeUnit.SECONDS)\n+    .createWithDefaultString(\"7d\")\n+\n+  val LOCAL_STORE_DIR = ConfigBuilder(\"spark.history.store.path\")",
    "line": 42
  }],
  "prId": 18887
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "what does the ending `S` mean? `seconds`?",
    "commit": "5eff2c5f0891c6ea3fcfbbc7dacbbaf56c1d1788",
    "createdAt": "2017-09-26T14:20:46Z",
    "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.history\n+\n+import java.util.concurrent.TimeUnit\n+\n+import scala.annotation.meta.getter\n+\n+import org.apache.spark.internal.config.ConfigBuilder\n+import org.apache.spark.util.kvstore.KVIndex\n+\n+private[spark] object config {\n+\n+  /** Use this to annotate constructor params to be used as KVStore indices. */\n+  type KVIndexParam = KVIndex @getter\n+\n+  val DEFAULT_LOG_DIR = \"file:/tmp/spark-events\"\n+\n+  val EVENT_LOG_DIR = ConfigBuilder(\"spark.history.fs.logDirectory\")\n+    .stringConf\n+    .createWithDefault(DEFAULT_LOG_DIR)\n+\n+  val MAX_LOG_AGE_S = ConfigBuilder(\"spark.history.fs.cleaner.maxAge\")",
    "line": 38
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "Yes. This pattern is used in a bunch of other places to indicate the unit of time of the config.",
    "commit": "5eff2c5f0891c6ea3fcfbbc7dacbbaf56c1d1788",
    "createdAt": "2017-09-26T17:09:49Z",
    "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.history\n+\n+import java.util.concurrent.TimeUnit\n+\n+import scala.annotation.meta.getter\n+\n+import org.apache.spark.internal.config.ConfigBuilder\n+import org.apache.spark.util.kvstore.KVIndex\n+\n+private[spark] object config {\n+\n+  /** Use this to annotate constructor params to be used as KVStore indices. */\n+  type KVIndexParam = KVIndex @getter\n+\n+  val DEFAULT_LOG_DIR = \"file:/tmp/spark-events\"\n+\n+  val EVENT_LOG_DIR = ConfigBuilder(\"spark.history.fs.logDirectory\")\n+    .stringConf\n+    .createWithDefault(DEFAULT_LOG_DIR)\n+\n+  val MAX_LOG_AGE_S = ConfigBuilder(\"spark.history.fs.cleaner.maxAge\")",
    "line": 38
  }],
  "prId": 18887
}]