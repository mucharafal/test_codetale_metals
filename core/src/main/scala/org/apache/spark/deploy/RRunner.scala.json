[{
  "comments": [{
    "author": {
      "login": "shivaram"
    },
    "body": "Can this actually happen ? I thought we only used RRunner when we launched non-shell jobs (i.e. when we are executing scripts).\n",
    "commit": "4f4413888f3169d332bd10420b4522acfc2d449d",
    "createdAt": "2015-10-20T17:00:42Z",
    "diffHunk": "@@ -40,7 +40,13 @@ object RRunner {\n \n     // Time to wait for SparkR backend to initialize in seconds\n     val backendTimeout = sys.env.getOrElse(\"SPARKR_BACKEND_TIMEOUT\", \"120\").toInt\n-    val rCommand = \"Rscript\"\n+    val rCommand = {\n+      var cmd = sys.props.getOrElse(\"spark.sparkr.r.command\", \"Rscript\")\n+      if (sys.props(\"spark.submit.deployMode\") == \"client\") {"
  }, {
    "author": {
      "login": "sun-rui"
    },
    "body": "Yes, we only use RRunner when we launched non-shell jobs (i.e. when we are executing scripts). But R scripts can be executed in either client mode or cluster mode. In client mode, the R script is to be executed on the local host, while in cluster mode, it is to be executed on a selected worker node.\n",
    "commit": "4f4413888f3169d332bd10420b4522acfc2d449d",
    "createdAt": "2015-10-21T01:43:55Z",
    "diffHunk": "@@ -40,7 +40,13 @@ object RRunner {\n \n     // Time to wait for SparkR backend to initialize in seconds\n     val backendTimeout = sys.env.getOrElse(\"SPARKR_BACKEND_TIMEOUT\", \"120\").toInt\n-    val rCommand = \"Rscript\"\n+    val rCommand = {\n+      var cmd = sys.props.getOrElse(\"spark.sparkr.r.command\", \"Rscript\")\n+      if (sys.props(\"spark.submit.deployMode\") == \"client\") {"
  }],
  "prId": 9179
}]