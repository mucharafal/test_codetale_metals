[{
  "comments": [{
    "author": {
      "login": "CodingCat"
    },
    "body": "expect a new line above this\n",
    "commit": "932a7dd5cf4ab14ad1817c0d6e1638b6f7ba0c50",
    "createdAt": "2015-08-05T11:26:31Z",
    "diffHunk": "@@ -0,0 +1,171 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.master\n+\n+/**\n+ * An interface for sort algorithm\n+ */\n+private[spark] trait SchedulingAlgorithm {\n+  def master: Master\n+\n+  /**\n+   * Schedule and launch executors on workers\n+   */\n+  def startExecutorsOnWorkers(\n+      waitingApps: Array[ApplicationInfo],\n+      workers: Array[WorkerInfo]): Unit\n+  def scheduleExecutorsOnWorkers("
  }],
  "prId": 7958
}, {
  "comments": [{
    "author": {
      "login": "CodingCat"
    },
    "body": "new line\n",
    "commit": "932a7dd5cf4ab14ad1817c0d6e1638b6f7ba0c50",
    "createdAt": "2015-08-05T11:26:39Z",
    "diffHunk": "@@ -0,0 +1,171 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.master\n+\n+/**\n+ * An interface for sort algorithm\n+ */\n+private[spark] trait SchedulingAlgorithm {\n+  def master: Master\n+\n+  /**\n+   * Schedule and launch executors on workers\n+   */\n+  def startExecutorsOnWorkers(\n+      waitingApps: Array[ApplicationInfo],\n+      workers: Array[WorkerInfo]): Unit\n+  def scheduleExecutorsOnWorkers(\n+      app: ApplicationInfo,\n+      usableWorkers: Array[WorkerInfo],\n+      spreadOutApps: Boolean): Array[Int]\n+  /**"
  }],
  "prId": 7958
}, {
  "comments": [{
    "author": {
      "login": "CodingCat"
    },
    "body": "private[master] is enough?\n",
    "commit": "932a7dd5cf4ab14ad1817c0d6e1638b6f7ba0c50",
    "createdAt": "2015-08-05T11:28:50Z",
    "diffHunk": "@@ -0,0 +1,171 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.master\n+\n+/**\n+ * An interface for sort algorithm\n+ */\n+private[spark] trait SchedulingAlgorithm {"
  }, {
    "author": {
      "login": "CodingCat"
    },
    "body": "I'm not sure if it is the right time to have such an interface, considering we do not have other algorithms except FIFO in standalone mode. \n\nThis interface is built up based on the current implementation, as a result, some cases might be ignored. As an example, the current algorithm treats `memory` as the first-class citizen, so whether the executors are to be launched is firstly determined by whether there is enough memory. Considering that if we want to implement something like Dominant Resource Fair ( https://www.cs.berkeley.edu/~alig/papers/drf.pdf), then the current interface like `allocateWorkerResourceToExecutors` brings too many limitations here\n\nLet me bring other guys who always maintain these code blocks, @JoshRosen @andrewor14 @srowen \n",
    "commit": "932a7dd5cf4ab14ad1817c0d6e1638b6f7ba0c50",
    "createdAt": "2015-08-05T11:43:08Z",
    "diffHunk": "@@ -0,0 +1,171 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.master\n+\n+/**\n+ * An interface for sort algorithm\n+ */\n+private[spark] trait SchedulingAlgorithm {"
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "@CodingCat Thanks for commenting.\n\nIn fact, we are going to implement a scheduler for Spark applications in standalone deployment mode. Because of that, we need an extensive interface for implementing new scheduling algorithms. This interface can be static like this PR or dynamic one like I mentioned above that loads scheduling algorithm class in runtime. Both are ok for us. We just want to make sure our implementation can be contributed back later and maintained easily.\n\nThis interface in current stage can be not so much comprehensive. It can be revised later. But we want to make sure that there is an extensive interface we can build our scheduling algorithm based on.\n",
    "commit": "932a7dd5cf4ab14ad1817c0d6e1638b6f7ba0c50",
    "createdAt": "2015-08-05T13:11:45Z",
    "diffHunk": "@@ -0,0 +1,171 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.master\n+\n+/**\n+ * An interface for sort algorithm\n+ */\n+private[spark] trait SchedulingAlgorithm {"
  }],
  "prId": 7958
}]