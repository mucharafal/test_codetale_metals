[{
  "comments": [{
    "author": {
      "login": "HeartSaVioR"
    },
    "body": "Unlike Hadoop and Hive, Spark will not be built with HBase libs. It will only work when end users link the HBase libraries or contain HBase libraries in their app jar.\r\n\r\nSo the message doesn't look correct, though I think `Fail to invoke HBaseConfiguration` is more misleading.\r\n\r\nActually the root issue is that HBaseDelegationToken is activated even end users don't use HBase in their apps, which #23499 is trying to avoid with service loader.",
    "commit": "aa6fef9baa80b5d81308bf75883703239580ed4f",
    "createdAt": "2019-01-21T20:54:05Z",
    "diffHunk": "@@ -70,6 +70,10 @@ private[security] class HBaseDelegationTokenProvider\n         getMethod(\"create\", classOf[Configuration])\n       confCreate.invoke(null, conf).asInstanceOf[Configuration]\n     } catch {\n+      case e: ClassNotFoundException =>\n+        logWarning(s\"You are attempting to use the ${getClass.getCanonicalName}, but your\" +"
  }, {
    "author": {
      "login": "shahidki31"
    },
    "body": "Thanks I will check the PR",
    "commit": "aa6fef9baa80b5d81308bf75883703239580ed4f",
    "createdAt": "2019-01-22T03:10:31Z",
    "diffHunk": "@@ -70,6 +70,10 @@ private[security] class HBaseDelegationTokenProvider\n         getMethod(\"create\", classOf[Configuration])\n       confCreate.invoke(null, conf).asInstanceOf[Configuration]\n     } catch {\n+      case e: ClassNotFoundException =>\n+        logWarning(s\"You are attempting to use the ${getClass.getCanonicalName}, but your\" +"
  }],
  "prId": 23605
}, {
  "comments": [{
    "author": {
      "login": "HeartSaVioR"
    },
    "body": "The message is better than before but still only half correct, because end users don't intend to enable HBase delegation token provider.\r\n\r\nI agree the warn message Spark provides is misleading so better to address that, but #23449 tackles root issue so for master branch (which gets rid of need for dealing with this confused message) I would rely on #23449 until the patch has a chance to be merged.",
    "commit": "aa6fef9baa80b5d81308bf75883703239580ed4f",
    "createdAt": "2019-01-22T05:13:01Z",
    "diffHunk": "@@ -70,6 +70,10 @@ private[security] class HBaseDelegationTokenProvider\n         getMethod(\"create\", classOf[Configuration])\n       confCreate.invoke(null, conf).asInstanceOf[Configuration]\n     } catch {\n+      case e: ClassNotFoundException =>\n+        logWarning(s\"You are attempting to use the ${getClass.getCanonicalName}, but\" +",
    "line": 5
  }, {
    "author": {
      "login": "shahidki31"
    },
    "body": "Okay. After that PR,  if the issue doesn't happen, then I can close this pr, because this issue happens only in the master branch",
    "commit": "aa6fef9baa80b5d81308bf75883703239580ed4f",
    "createdAt": "2019-01-22T05:22:30Z",
    "diffHunk": "@@ -70,6 +70,10 @@ private[security] class HBaseDelegationTokenProvider\n         getMethod(\"create\", classOf[Configuration])\n       confCreate.invoke(null, conf).asInstanceOf[Configuration]\n     } catch {\n+      case e: ClassNotFoundException =>\n+        logWarning(s\"You are attempting to use the ${getClass.getCanonicalName}, but\" +",
    "line": 5
  }, {
    "author": {
      "login": "gaborgsomogyi"
    },
    "body": "@HeartSaVioR thanks for this suggestion, same opinion.",
    "commit": "aa6fef9baa80b5d81308bf75883703239580ed4f",
    "createdAt": "2019-01-22T10:08:07Z",
    "diffHunk": "@@ -70,6 +70,10 @@ private[security] class HBaseDelegationTokenProvider\n         getMethod(\"create\", classOf[Configuration])\n       confCreate.invoke(null, conf).asInstanceOf[Configuration]\n     } catch {\n+      case e: ClassNotFoundException =>\n+        logWarning(s\"You are attempting to use the ${getClass.getCanonicalName}, but\" +",
    "line": 5
  }],
  "prId": 23605
}]