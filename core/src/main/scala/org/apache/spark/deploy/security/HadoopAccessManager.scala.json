[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Do we have any design doc about this new trait? \r\n\r\ncc @kanzhang who is the original creator of delegation token concepts in Hadoop.",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-04T08:29:33Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.Path\n+\n+/**\n+ * Methods in [[HadoopAccessManager]] return scheduler-specific information related to how Hadoop\n+ * delegation tokens should be fetched.\n+ */\n+private[spark] trait HadoopAccessManager {"
  }, {
    "author": {
      "login": "mgummelt"
    },
    "body": "No design doc.",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-18T20:03:58Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.Path\n+\n+/**\n+ * Methods in [[HadoopAccessManager]] return scheduler-specific information related to how Hadoop\n+ * delegation tokens should be fetched.\n+ */\n+private[spark] trait HadoopAccessManager {"
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "For such big PRs, we normally prefer to reviewing the design doc at first. When the PR does not have a design doc, it could slow down the review. ",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-19T17:45:49Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.Path\n+\n+/**\n+ * Methods in [[HadoopAccessManager]] return scheduler-specific information related to how Hadoop\n+ * delegation tokens should be fetched.\n+ */\n+private[spark] trait HadoopAccessManager {"
  }, {
    "author": {
      "login": "mgummelt"
    },
    "body": "Thanks.  I'll make sure to do that in the future.  We happened to already have most of this code written internally before upstreaming to Apache, which is why I submitted before going through a design review.\r\n\r\nAs for this trait, I introduced it in order to parameterize `HadoopFSCredentialProvider` to support different behavior on YARN than on Mesos.  If you look at `YARNHadoopAccessManager`, you'll see that it uses YARN specific configuration variables.\r\n\r\nI had originally tried to introduce both a `YARNHadoopFSCredentialProvider` and a `DefaultHadoopFSCredentialProvider` in order to support different behaviors, but as vanzin pointed out here: https://github.com/apache/spark/pull/17665#discussion_r112298650, we can't service load different providers on YARN than on Mesos.",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-19T18:12:13Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.Path\n+\n+/**\n+ * Methods in [[HadoopAccessManager]] return scheduler-specific information related to how Hadoop\n+ * delegation tokens should be fetched.\n+ */\n+private[spark] trait HadoopAccessManager {"
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "Thanks for explaining it. Just need to understand the design of this trait. Why we pick these three functions here?",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-19T21:59:57Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.Path\n+\n+/**\n+ * Methods in [[HadoopAccessManager]] return scheduler-specific information related to how Hadoop\n+ * delegation tokens should be fetched.\n+ */\n+private[spark] trait HadoopAccessManager {"
  }, {
    "author": {
      "login": "mgummelt"
    },
    "body": "I just removed this entire trait.  The purpose of the trait was to parameterize `HadoopFSCredentialProvider` with two things: the filesystems to access and the renewer.  I've instead done this by adding `filesystems` to the constructor, and I'll probably do the same for the renewer in the Mesos PR, but for now, we can just leave the YARN behavior.",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-22T23:33:24Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.Path\n+\n+/**\n+ * Methods in [[HadoopAccessManager]] return scheduler-specific information related to how Hadoop\n+ * delegation tokens should be fetched.\n+ */\n+private[spark] trait HadoopAccessManager {"
  }],
  "prId": 17723
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "A basic question. Conceptually, I am wondering why `getTokenRenewalInterval` is scheduler-specific information?",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-19T21:58:47Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.Path\n+\n+/**\n+ * Methods in [[HadoopAccessManager]] return scheduler-specific information related to how Hadoop\n+ * delegation tokens should be fetched.\n+ */\n+private[spark] trait HadoopAccessManager {\n+\n+  /** The user allowed to renew delegation tokens */\n+  def getTokenRenewer: String\n+\n+  /** The renewal interval, or [[None]] if the token shouldn't be renewed */\n+  def getTokenRenewalInterval: Option[Long]"
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "Is Mesos behaving differently from Yarn when getting token renewal intervals?",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-19T22:05:37Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.Path\n+\n+/**\n+ * Methods in [[HadoopAccessManager]] return scheduler-specific information related to how Hadoop\n+ * delegation tokens should be fetched.\n+ */\n+private[spark] trait HadoopAccessManager {\n+\n+  /** The user allowed to renew delegation tokens */\n+  def getTokenRenewer: String\n+\n+  /** The renewal interval, or [[None]] if the token shouldn't be renewed */\n+  def getTokenRenewalInterval: Option[Long]"
  }, {
    "author": {
      "login": "mgummelt"
    },
    "body": "That's a good point.  They don't.  I have it factored out like this because the code which computes it depends on `spark.yarn.principal`, which of course should be specific to YARN, but once Mesos keytab/principal support gets merged, that variable will likely be deprecated and replaced with `spark.kerberos.principal` or something.\r\n\r\nI'll go ahead and remove this function from this trait and put it back in `HadoopFSCredentialProvider`.  It will use `spark.yarn.principal` until we rename it later.",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-20T00:09:53Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.security\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.Path\n+\n+/**\n+ * Methods in [[HadoopAccessManager]] return scheduler-specific information related to how Hadoop\n+ * delegation tokens should be fetched.\n+ */\n+private[spark] trait HadoopAccessManager {\n+\n+  /** The user allowed to renew delegation tokens */\n+  def getTokenRenewer: String\n+\n+  /** The renewal interval, or [[None]] if the token shouldn't be renewed */\n+  def getTokenRenewalInterval: Option[Long]"
  }],
  "prId": 17723
}]