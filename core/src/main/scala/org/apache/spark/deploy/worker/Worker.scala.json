[{
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "nit: double indent this line, the continuation of the condition",
    "commit": "475d27817b6ef37eed9b7b39fee709427811f0d6",
    "createdAt": "2019-01-24T18:40:51Z",
    "diffHunk": "@@ -462,6 +462,15 @@ private[deploy] class Worker(\n           // when cleaning up\n           val appIdFromDir = dir.getName\n           val isAppStillRunning = appIds.contains(appIdFromDir)\n+\n+          // Remove some registeredExecutors information of DB in external shuffle service when\n+          // #spark.shuffle.service.db.enabled=true, the one which comes to mind is, what happens\n+          // if an application is stopped while the external shuffle service is down?\n+          // So then it'll leave an entry in the DB and the entry should be removed.\n+          if (conf.get(config.SHUFFLE_SERVICE_DB_ENABLED) &&\n+            conf.get(config.SHUFFLE_SERVICE_ENABLED) && !isAppStillRunning) {"
  }, {
    "author": {
      "login": "weixiuli"
    },
    "body": "Hi,@squito ,i have fixed itï¼Œthanks a lot!",
    "commit": "475d27817b6ef37eed9b7b39fee709427811f0d6",
    "createdAt": "2019-01-25T02:14:16Z",
    "diffHunk": "@@ -462,6 +462,15 @@ private[deploy] class Worker(\n           // when cleaning up\n           val appIdFromDir = dir.getName\n           val isAppStillRunning = appIds.contains(appIdFromDir)\n+\n+          // Remove some registeredExecutors information of DB in external shuffle service when\n+          // #spark.shuffle.service.db.enabled=true, the one which comes to mind is, what happens\n+          // if an application is stopped while the external shuffle service is down?\n+          // So then it'll leave an entry in the DB and the entry should be removed.\n+          if (conf.get(config.SHUFFLE_SERVICE_DB_ENABLED) &&\n+            conf.get(config.SHUFFLE_SERVICE_ENABLED) && !isAppStillRunning) {"
  }],
  "prId": 23393
}, {
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "nit: double indent this line (4 spaces)",
    "commit": "475d27817b6ef37eed9b7b39fee709427811f0d6",
    "createdAt": "2019-03-04T21:18:35Z",
    "diffHunk": "@@ -467,6 +467,15 @@ private[deploy] class Worker(\n         }.foreach { dir =>\n           logInfo(s\"Removing directory: ${dir.getPath}\")\n           Utils.deleteRecursively(dir)\n+\n+          // Remove some registeredExecutors information of DB in external shuffle service when\n+          // #spark.shuffle.service.db.enabled=true, the one which comes to mind is, what happens\n+          // if an application is stopped while the external shuffle service is down?\n+          // So then it'll leave an entry in the DB and the entry should be removed.\n+          if (conf.get(config.SHUFFLE_SERVICE_DB_ENABLED) &&\n+            conf.get(config.SHUFFLE_SERVICE_ENABLED)) {"
  }, {
    "author": {
      "login": "weixiuli"
    },
    "body": "sorry , i don't understand why this is necessary.",
    "commit": "475d27817b6ef37eed9b7b39fee709427811f0d6",
    "createdAt": "2019-03-06T11:14:06Z",
    "diffHunk": "@@ -467,6 +467,15 @@ private[deploy] class Worker(\n         }.foreach { dir =>\n           logInfo(s\"Removing directory: ${dir.getPath}\")\n           Utils.deleteRecursively(dir)\n+\n+          // Remove some registeredExecutors information of DB in external shuffle service when\n+          // #spark.shuffle.service.db.enabled=true, the one which comes to mind is, what happens\n+          // if an application is stopped while the external shuffle service is down?\n+          // So then it'll leave an entry in the DB and the entry should be removed.\n+          if (conf.get(config.SHUFFLE_SERVICE_DB_ENABLED) &&\n+            conf.get(config.SHUFFLE_SERVICE_ENABLED)) {"
  }, {
    "author": {
      "login": "squito"
    },
    "body": "its a continuation of the condition of the `if`.   That helps separate it from the body, which is only indented 2 spaces.  eg. like this:\r\n\r\nhttps://github.com/apache/spark/blob/190a3a4ad8e648d4ed4b38c5189b3baf75b1fc52/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/plans/logical/AnalysisHelper.scala#L133-L137",
    "commit": "475d27817b6ef37eed9b7b39fee709427811f0d6",
    "createdAt": "2019-03-06T16:48:21Z",
    "diffHunk": "@@ -467,6 +467,15 @@ private[deploy] class Worker(\n         }.foreach { dir =>\n           logInfo(s\"Removing directory: ${dir.getPath}\")\n           Utils.deleteRecursively(dir)\n+\n+          // Remove some registeredExecutors information of DB in external shuffle service when\n+          // #spark.shuffle.service.db.enabled=true, the one which comes to mind is, what happens\n+          // if an application is stopped while the external shuffle service is down?\n+          // So then it'll leave an entry in the DB and the entry should be removed.\n+          if (conf.get(config.SHUFFLE_SERVICE_DB_ENABLED) &&\n+            conf.get(config.SHUFFLE_SERVICE_ENABLED)) {"
  }],
  "prId": 23393
}, {
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "unrelated to your change -- can you add 2 space indentation on line 466 `!Utils.doesDirectoryContainAnyNewFiles(dir, APP_DATA_RETENTION_SECONDS)` as its a continuation?",
    "commit": "475d27817b6ef37eed9b7b39fee709427811f0d6",
    "createdAt": "2019-03-04T21:22:14Z",
    "diffHunk": "@@ -467,6 +467,15 @@ private[deploy] class Worker(\n         }.foreach { dir =>\n           logInfo(s\"Removing directory: ${dir.getPath}\")\n           Utils.deleteRecursively(dir)\n+"
  }],
  "prId": 23393
}]