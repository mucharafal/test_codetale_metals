[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "All moved codes are as are, except that I made this `private`.",
    "commit": "9e41ca5e8a49588507cd6445da8e8e9f2686dcd2",
    "createdAt": "2019-03-08T07:23:45Z",
    "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.security\n+\n+import java.net._\n+\n+import scala.concurrent.Promise\n+import scala.concurrent.duration.Duration\n+import scala.language.existentials\n+import scala.util.Try\n+\n+import org.apache.spark.SparkEnv\n+import org.apache.spark.network.util.JavaUtils\n+import org.apache.spark.util._\n+\n+\n+/**\n+ * Creates a server in the jvm to communicate with python for handling one batch of data, with\n+ * authentication and error handling.\n+ */\n+private[spark] abstract class SocketAuthServer[T](\n+    authHelper: SocketAuthHelper,\n+    threadName: String) {\n+\n+  def this(env: SparkEnv, threadName: String) = this(new SocketAuthHelper(env.conf), threadName)\n+  def this(threadName: String) = this(SparkEnv.get, threadName)\n+\n+  private val promise = Promise[T]()",
    "line": 43
  }],
  "prId": 24023
}, {
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "I guess this shouldn't say \"python\" anymore.  maybe \"external process, like R or python\"?",
    "commit": "9e41ca5e8a49588507cd6445da8e8e9f2686dcd2",
    "createdAt": "2019-03-08T21:39:16Z",
    "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.security\n+\n+import java.net.{InetAddress, ServerSocket, Socket}\n+\n+import scala.concurrent.Promise\n+import scala.concurrent.duration.Duration\n+import scala.language.existentials\n+import scala.util.Try\n+\n+import org.apache.spark.SparkEnv\n+import org.apache.spark.network.util.JavaUtils\n+import org.apache.spark.util.ThreadUtils\n+\n+\n+/**\n+ * Creates a server in the jvm to communicate with python for handling one batch of data, with"
  }],
  "prId": 24023
}]