[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "similarly what's the return type?\n",
    "commit": "a43fcfb7410bc1ca35597336a03140fe6412494f",
    "createdAt": "2014-11-01T08:20:07Z",
    "diffHunk": "@@ -34,7 +36,13 @@ private[spark] class WholeTextFileRecordReader(\n     split: CombineFileSplit,\n     context: TaskAttemptContext,\n     index: Integer)\n-  extends RecordReader[String, String] {\n+  extends RecordReader[String, String] with Configurable {\n+\n+  private var conf: Configuration = _\n+  def setConf(c: Configuration) = {"
  }],
  "prId": 3005
}, {
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "Nit: don't need this semicolon.\n",
    "commit": "a43fcfb7410bc1ca35597336a03140fe6412494f",
    "createdAt": "2014-11-12T19:56:04Z",
    "diffHunk": "@@ -57,8 +65,16 @@ private[spark] class WholeTextFileRecordReader(\n \n   override def nextKeyValue(): Boolean = {\n     if (!processed) {\n+      val conf = new Configuration\n+      val factory = new CompressionCodecFactory(conf);\n+      val codec = factory.getCodec(path); // infers from file ext."
  }],
  "prId": 3005
}, {
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "Another semicolon.\n",
    "commit": "a43fcfb7410bc1ca35597336a03140fe6412494f",
    "createdAt": "2014-11-12T20:01:28Z",
    "diffHunk": "@@ -57,8 +65,16 @@ private[spark] class WholeTextFileRecordReader(\n \n   override def nextKeyValue(): Boolean = {\n     if (!processed) {\n+      val conf = new Configuration\n+      val factory = new CompressionCodecFactory(conf);"
  }],
  "prId": 3005
}]