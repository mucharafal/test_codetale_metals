[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "The default RNG is Well19937c. From the doc, it is slower but better than MT. I'm leaning towards the default because sampling computation is usually not the bottleneck for Spark.\n",
    "commit": "61a232ffd0378d56e7e4a3d2c2e8f9f8a9660a80",
    "createdAt": "2014-10-24T20:23:49Z",
    "diffHunk": "@@ -53,9 +53,14 @@ private[spark] class SampledRDD[T: ClassTag](\n     if (withReplacement) {\n       // For large datasets, the expected number of occurrences of each element in a sample with\n       // replacement is Poisson(frac). We use that to get a count for each element.\n-      val poisson = new Poisson(frac, new DRand(split.seed))\n+      val poisson = new PoissonDistribution(\n+        new MersenneTwister(split.seed),"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Good point, especially on being the default. I will switch to Well19937c.\n",
    "commit": "61a232ffd0378d56e7e4a3d2c2e8f9f8a9660a80",
    "createdAt": "2014-10-24T21:00:50Z",
    "diffHunk": "@@ -53,9 +53,14 @@ private[spark] class SampledRDD[T: ClassTag](\n     if (withReplacement) {\n       // For large datasets, the expected number of occurrences of each element in a sample with\n       // replacement is Poisson(frac). We use that to get a count for each element.\n-      val poisson = new Poisson(frac, new DRand(split.seed))\n+      val poisson = new PoissonDistribution(\n+        new MersenneTwister(split.seed),"
  }],
  "prId": 2928
}]