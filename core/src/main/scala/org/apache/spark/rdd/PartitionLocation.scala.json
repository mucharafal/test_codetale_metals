[{
  "comments": [{
    "author": {
      "login": "sryza"
    },
    "body": "replaceAll uses regexes, which can be expensive.  Instead of indexOf and and replaceAll, can we use startsWith in the condition and substring?\n",
    "commit": "338d4f8fedd68b64a7fdfaf078afcc2623072501",
    "createdAt": "2014-09-02T22:22:20Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.rdd\n+\n+private[spark] object PartitionPriority extends Enumeration {\n+  val NORMAL, IN_MEMORY = Value\n+}\n+\n+/**\n+ * The location of an RDD partition.\n+ */\n+private[spark] class PartitionLocation(val host : String,\n+    val priority : PartitionPriority.Value) {\n+  override def toString() : String = {\n+    priority match {\n+      case PartitionPriority.NORMAL => host\n+      case PartitionPriority.IN_MEMORY =>\n+        PartitionLocation.IN_MEMORY_LOCATION_TAG + host\n+    }\n+  }\n+}\n+\n+private[spark] object PartitionLocation {\n+  val IN_MEMORY_LOCATION_TAG = \"_M_\"\n+\n+  def fromString(str : String) : PartitionLocation = {\n+    if (str.indexOf(IN_MEMORY_LOCATION_TAG) >= 0) {\n+      new PartitionLocation(str.replaceAll(IN_MEMORY_LOCATION_TAG, \"\"),"
  }, {
    "author": {
      "login": "cmccabe"
    },
    "body": "OK\n",
    "commit": "338d4f8fedd68b64a7fdfaf078afcc2623072501",
    "createdAt": "2014-09-03T01:36:10Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.rdd\n+\n+private[spark] object PartitionPriority extends Enumeration {\n+  val NORMAL, IN_MEMORY = Value\n+}\n+\n+/**\n+ * The location of an RDD partition.\n+ */\n+private[spark] class PartitionLocation(val host : String,\n+    val priority : PartitionPriority.Value) {\n+  override def toString() : String = {\n+    priority match {\n+      case PartitionPriority.NORMAL => host\n+      case PartitionPriority.IN_MEMORY =>\n+        PartitionLocation.IN_MEMORY_LOCATION_TAG + host\n+    }\n+  }\n+}\n+\n+private[spark] object PartitionLocation {\n+  val IN_MEMORY_LOCATION_TAG = \"_M_\"\n+\n+  def fromString(str : String) : PartitionLocation = {\n+    if (str.indexOf(IN_MEMORY_LOCATION_TAG) >= 0) {\n+      new PartitionLocation(str.replaceAll(IN_MEMORY_LOCATION_TAG, \"\"),"
  }],
  "prId": 1486
}, {
  "comments": [{
    "author": {
      "login": "sryza"
    },
    "body": "Comment should mention that it contains the priority as well.\n",
    "commit": "338d4f8fedd68b64a7fdfaf078afcc2623072501",
    "createdAt": "2014-09-02T22:23:11Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.rdd\n+\n+private[spark] object PartitionPriority extends Enumeration {\n+  val NORMAL, IN_MEMORY = Value\n+}\n+\n+/**\n+ * The location of an RDD partition."
  }, {
    "author": {
      "login": "cmccabe"
    },
    "body": "ok\n",
    "commit": "338d4f8fedd68b64a7fdfaf078afcc2623072501",
    "createdAt": "2014-09-03T01:38:48Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.rdd\n+\n+private[spark] object PartitionPriority extends Enumeration {\n+  val NORMAL, IN_MEMORY = Value\n+}\n+\n+/**\n+ * The location of an RDD partition."
  }],
  "prId": 1486
}, {
  "comments": [{
    "author": {
      "login": "sryza"
    },
    "body": "Add a comment explaining the meaning of a PartitionPriority?\n",
    "commit": "338d4f8fedd68b64a7fdfaf078afcc2623072501",
    "createdAt": "2014-09-02T22:30:56Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.rdd\n+\n+private[spark] object PartitionPriority extends Enumeration {"
  }, {
    "author": {
      "login": "cmccabe"
    },
    "body": "k\n",
    "commit": "338d4f8fedd68b64a7fdfaf078afcc2623072501",
    "createdAt": "2014-09-03T01:41:21Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.rdd\n+\n+private[spark] object PartitionPriority extends Enumeration {"
  }],
  "prId": 1486
}]