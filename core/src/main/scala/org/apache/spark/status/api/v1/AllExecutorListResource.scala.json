[{
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "PathParam doesn't appear to be used\n",
    "commit": "87301c1e0de1ade000fb7d05685b61ca87fc1491",
    "createdAt": "2016-07-12T19:49:13Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+package org.apache.spark.status.api.v1\n+\n+import javax.ws.rs.{GET, PathParam, Produces}"
  }],
  "prId": 13670
}, {
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "can we just change this to be activeNumExecutors = listener.activeStorageStatusList.size since we don't ever use this list other then to get the size.  same with below for dead ones.\n",
    "commit": "87301c1e0de1ade000fb7d05685b61ca87fc1491",
    "createdAt": "2016-07-12T19:55:11Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+package org.apache.spark.status.api.v1\n+\n+import javax.ws.rs.{GET, PathParam, Produces}\n+import javax.ws.rs.core.MediaType\n+\n+import org.apache.spark.ui.SparkUI\n+import org.apache.spark.ui.exec.ExecutorsPage\n+\n+@Produces(Array(MediaType.APPLICATION_JSON))\n+private[v1] class AllExecutorListResource(ui: SparkUI) {\n+\n+  @GET\n+  def executorList(): Seq[ExecutorSummary] = {\n+    val listener = ui.executorsListener\n+    listener.synchronized {\n+      // The follow codes should be protected by `listener` to make sure no executors will be\n+      // removed before we query their status. See SPARK-12784.\n+      val storageStatusList = listener.activeStorageStatusList"
  }],
  "prId": 13670
}]