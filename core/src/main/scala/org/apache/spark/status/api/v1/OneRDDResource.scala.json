[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "`NotFoundException`?\n",
    "commit": "da1e35f39cd60878f32b5446438afdf25d868d7b",
    "createdAt": "2015-04-07T19:57:43Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.status.api.v1\n+\n+import javax.ws.rs.{PathParam, GET, Produces}\n+import javax.ws.rs.core.MediaType\n+\n+@Produces(Array(MediaType.APPLICATION_JSON))\n+private[v1] class OneRDDResource(uiRoot: UIRoot) {\n+\n+    @GET\n+    def rddData(\n+      @PathParam(\"appId\") appId: String,\n+      @PathParam(\"rddId\") rddId: Int\n+    ): RDDStorageInfo  = {\n+      uiRoot.withSparkUI(appId) { ui =>\n+        AllRDDResource.getRDDStorageInfo(rddId, ui.storageListener, true).getOrElse(\n+          throw new IllegalArgumentException(\"no rdd found w/ id \" + rddId)"
  }],
  "prId": 4435
}]