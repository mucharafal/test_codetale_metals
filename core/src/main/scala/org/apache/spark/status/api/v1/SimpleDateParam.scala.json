[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "I wouldn't bother with `ThreadLocal`. Just make new objects on demand. These aren't expensive.\n",
    "commit": "aeed4c1dc5a286688505c5a6aed8c1d54c0a5a31",
    "createdAt": "2015-05-26T08:21:29Z",
    "diffHunk": "@@ -42,14 +42,16 @@ private[v1] class SimpleDateParam(val originalValue: String) {\n \n private[v1] object SimpleDateParam {\n \n-  val formats: Seq[SimpleDateFormat] = {\n+  // `SimpleDateFormat` is not thread-safe\n+  val formats = new ThreadLocal[Seq[SimpleDateFormat]]() {"
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "I just feel using `ThreadLocal` is easy and minimizes the changes.\n",
    "commit": "aeed4c1dc5a286688505c5a6aed8c1d54c0a5a31",
    "createdAt": "2015-05-26T08:31:36Z",
    "diffHunk": "@@ -42,14 +42,16 @@ private[v1] class SimpleDateParam(val originalValue: String) {\n \n private[v1] object SimpleDateParam {\n \n-  val formats: Seq[SimpleDateFormat] = {\n+  // `SimpleDateFormat` is not thread-safe\n+  val formats = new ThreadLocal[Seq[SimpleDateFormat]]() {"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "It also means you keep per-thread state lying around. I know, it's not big, but I don't think it's worth it.\n",
    "commit": "aeed4c1dc5a286688505c5a6aed8c1d54c0a5a31",
    "createdAt": "2015-05-26T09:15:53Z",
    "diffHunk": "@@ -42,14 +42,16 @@ private[v1] class SimpleDateParam(val originalValue: String) {\n \n private[v1] object SimpleDateParam {\n \n-  val formats: Seq[SimpleDateFormat] = {\n+  // `SimpleDateFormat` is not thread-safe\n+  val formats = new ThreadLocal[Seq[SimpleDateFormat]]() {"
  }],
  "prId": 6406
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Now this is a field though. There's no need for that. The format objects can be created on demand to parse the input. If this `SimpleDateParam` object is short-lived I suppose it does not matter much but I would have just inlined all this.\n",
    "commit": "aeed4c1dc5a286688505c5a6aed8c1d54c0a5a31",
    "createdAt": "2015-05-26T15:34:33Z",
    "diffHunk": "@@ -25,8 +25,19 @@ import javax.ws.rs.core.Response.Status\n import scala.util.Try\n \n private[v1] class SimpleDateParam(val originalValue: String) {\n+\n+  private val formats: Seq[SimpleDateFormat] = {"
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "Inlined `formats`.\n",
    "commit": "aeed4c1dc5a286688505c5a6aed8c1d54c0a5a31",
    "createdAt": "2015-05-26T15:45:49Z",
    "diffHunk": "@@ -25,8 +25,19 @@ import javax.ws.rs.core.Response.Status\n import scala.util.Try\n \n private[v1] class SimpleDateParam(val originalValue: String) {\n+\n+  private val formats: Seq[SimpleDateFormat] = {"
  }],
  "prId": 6406
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "OK... but this seems like a very complicated way of saying, \"parse with one format, and if it fails, parse with the other. Why not just boil this down while we're here? you can even avoid allocating at least one of the two objects in most cases.\n",
    "commit": "aeed4c1dc5a286688505c5a6aed8c1d54c0a5a31",
    "createdAt": "2015-05-26T15:58:04Z",
    "diffHunk": "@@ -25,8 +25,18 @@ import javax.ws.rs.core.Response.Status\n import scala.util.Try\n \n private[v1] class SimpleDateParam(val originalValue: String) {\n+\n   val timestamp: Long = {\n-    SimpleDateParam.formats.collectFirst {\n+    val formats: Seq[SimpleDateFormat] = {"
  }],
  "prId": 6406
}, {
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "why not just make this a `def makeFormats` or something and add a comment explaining why it needs to be a def? It would be good to not inline it because the old code is more readable.\n",
    "commit": "aeed4c1dc5a286688505c5a6aed8c1d54c0a5a31",
    "createdAt": "2015-05-26T21:53:13Z",
    "diffHunk": "@@ -39,17 +49,3 @@ private[v1] class SimpleDateParam(val originalValue: String) {\n     )\n   }\n }\n-\n-private[v1] object SimpleDateParam {\n-\n-  val formats: Seq[SimpleDateFormat] = {"
  }],
  "prId": 6406
}]