[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "This is fine, but if you want you can probably replace the filters in the listener by setting this to `-1` for running jobs / stages / others, and starting iteration at \"0\".",
    "commit": "b83b396dcd10fabf9d28ef57d4206fba2980efa5",
    "createdAt": "2018-02-02T00:28:14Z",
    "diffHunk": "@@ -73,6 +73,8 @@ private[spark] class JobDataWrapper(\n   @JsonIgnore @KVIndex\n   private def id: Int = info.jobId\n \n+  @JsonIgnore @KVIndex(\"completionTime\")\n+  private def completionTime: Long = info.completionTime.map(_.getTime).getOrElse(Long.MaxValue)"
  }],
  "prId": 20481
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "Could you use a shorter name like the others? It saves a little bit more space on disk because there are so many tasks in large apps.",
    "commit": "b83b396dcd10fabf9d28ef57d4206fba2980efa5",
    "createdAt": "2018-02-02T01:57:31Z",
    "diffHunk": "@@ -134,6 +138,7 @@ private[spark] object TaskIndexNames {\n   final val STAGE = \"stage\"\n   final val STATUS = \"sta\"\n   final val TASK_INDEX = \"idx\"\n+  final val COMPLETION_TIME = \"completionTime\""
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "+1",
    "commit": "b83b396dcd10fabf9d28ef57d4206fba2980efa5",
    "createdAt": "2018-02-02T02:12:38Z",
    "diffHunk": "@@ -134,6 +138,7 @@ private[spark] object TaskIndexNames {\n   final val STAGE = \"stage\"\n   final val STATUS = \"sta\"\n   final val TASK_INDEX = \"idx\"\n+  final val COMPLETION_TIME = \"completionTime\""
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "I've asked this before, is it possible to put an ID instead of the index name to the kvstore? Then we can use long index names.",
    "commit": "b83b396dcd10fabf9d28ef57d4206fba2980efa5",
    "createdAt": "2018-02-02T03:47:04Z",
    "diffHunk": "@@ -134,6 +138,7 @@ private[spark] object TaskIndexNames {\n   final val STAGE = \"stage\"\n   final val STATUS = \"sta\"\n   final val TASK_INDEX = \"idx\"\n+  final val COMPLETION_TIME = \"completionTime\""
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "No, right now there's no support for that for indices.",
    "commit": "b83b396dcd10fabf9d28ef57d4206fba2980efa5",
    "createdAt": "2018-02-02T05:12:34Z",
    "diffHunk": "@@ -134,6 +138,7 @@ private[spark] object TaskIndexNames {\n   final val STAGE = \"stage\"\n   final val STATUS = \"sta\"\n   final val TASK_INDEX = \"idx\"\n+  final val COMPLETION_TIME = \"completionTime\""
  }, {
    "author": {
      "login": "gengliangwang"
    },
    "body": "+1",
    "commit": "b83b396dcd10fabf9d28ef57d4206fba2980efa5",
    "createdAt": "2018-02-02T06:45:34Z",
    "diffHunk": "@@ -134,6 +138,7 @@ private[spark] object TaskIndexNames {\n   final val STAGE = \"stage\"\n   final val STATUS = \"sta\"\n   final val TASK_INDEX = \"idx\"\n+  final val COMPLETION_TIME = \"completionTime\""
  }],
  "prId": 20481
}, {
  "comments": [{
    "author": {
      "login": "jiangxb1987"
    },
    "body": "nit: `-1` -> `-1L`",
    "commit": "b83b396dcd10fabf9d28ef57d4206fba2980efa5",
    "createdAt": "2018-02-02T02:20:39Z",
    "diffHunk": "@@ -73,6 +73,8 @@ private[spark] class JobDataWrapper(\n   @JsonIgnore @KVIndex\n   private def id: Int = info.jobId\n \n+  @JsonIgnore @KVIndex(\"completionTime\")\n+  private def completionTime: Long = info.completionTime.map(_.getTime).getOrElse(-1)"
  }],
  "prId": 20481
}, {
  "comments": [{
    "author": {
      "login": "jiangxb1987"
    },
    "body": "nit: `-1` -> `-1L`",
    "commit": "b83b396dcd10fabf9d28ef57d4206fba2980efa5",
    "createdAt": "2018-02-02T02:20:57Z",
    "diffHunk": "@@ -90,6 +92,8 @@ private[spark] class StageDataWrapper(\n   @JsonIgnore @KVIndex(\"active\")\n   private def active: Boolean = info.status == StageStatus.ACTIVE\n \n+  @JsonIgnore @KVIndex(\"completionTime\")\n+  private def completionTime: Long = info.completionTime.map(_.getTime).getOrElse(-1)"
  }],
  "prId": 20481
}]