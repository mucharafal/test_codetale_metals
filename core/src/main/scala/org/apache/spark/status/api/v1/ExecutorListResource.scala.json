[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "Does this return valid information after an executor dies / is killed?\n",
    "commit": "da1e35f39cd60878f32b5446438afdf25d868d7b",
    "createdAt": "2015-04-07T19:49:48Z",
    "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+package org.apache.spark.status.api.v1\n+\n+import javax.ws.rs.{GET, PathParam, Produces}\n+import javax.ws.rs.core.MediaType\n+\n+import org.apache.spark.ui.exec.ExecutorsPage\n+\n+@Produces(Array(MediaType.APPLICATION_JSON))\n+private[v1] class ExecutorListResource(uiRoot: UIRoot) {\n+\n+  @GET\n+  def jobsList(\n+    @PathParam(\"appId\") appId: String\n+  ): Seq[ExecutorSummary] = {\n+    uiRoot.withSparkUI(appId) { ui =>\n+      val listener = ui.executorsListener\n+      val storageStatusList = listener.storageStatusList\n+      (0 until storageStatusList.size).map { statusId =>\n+        ExecutorsPage.getExecInfo(listener, statusId)"
  }, {
    "author": {
      "login": "squito"
    },
    "body": "looks like it does not -- though neither does the current UI.  (`JobProgressListener` does not implement `onExecutorRemoved`.)  I'll work on including it -- though I'm wondering if it should just be a separate PR?\n",
    "commit": "da1e35f39cd60878f32b5446438afdf25d868d7b",
    "createdAt": "2015-04-08T15:23:42Z",
    "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+package org.apache.spark.status.api.v1\n+\n+import javax.ws.rs.{GET, PathParam, Produces}\n+import javax.ws.rs.core.MediaType\n+\n+import org.apache.spark.ui.exec.ExecutorsPage\n+\n+@Produces(Array(MediaType.APPLICATION_JSON))\n+private[v1] class ExecutorListResource(uiRoot: UIRoot) {\n+\n+  @GET\n+  def jobsList(\n+    @PathParam(\"appId\") appId: String\n+  ): Seq[ExecutorSummary] = {\n+    uiRoot.withSparkUI(appId) { ui =>\n+      val listener = ui.executorsListener\n+      val storageStatusList = listener.storageStatusList\n+      (0 until storageStatusList.size).map { statusId =>\n+        ExecutorsPage.getExecInfo(listener, statusId)"
  }],
  "prId": 4435
}]