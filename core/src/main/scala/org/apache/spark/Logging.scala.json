[{
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "I'll update this myself\n",
    "commit": "3835effdc7d8c93f915842184982c2120aa6c8c0",
    "createdAt": "2015-06-10T20:25:35Z",
    "diffHunk": "@@ -121,13 +121,33 @@ trait Logging {\n     if (usingLog4j12) {\n       val log4j12Initialized = LogManager.getRootLogger.getAllAppenders.hasMoreElements\n       if (!log4j12Initialized) {\n-        val defaultLogProps = \"org/apache/spark/log4j-defaults.properties\"\n-        Option(Utils.getSparkClassLoader.getResource(defaultLogProps)) match {\n-          case Some(url) =>\n-            PropertyConfigurator.configure(url)\n-            System.err.println(s\"Using Spark's default log4j profile: $defaultLogProps\")\n-          case None =>\n-            System.err.println(s\"Spark was unable to load $defaultLogProps\")\n+        // Replace it with \"Utils.isInInterpreter\" when SPARK-7527 is resolved\n+        val isInInterpreter =\n+          try {\n+            val interpClass = Utils.classForName(\"org.apache.spark.repl.Main\")\n+            interpClass.getMethod(\"interp\").invoke(null) != null\n+          } catch {\n+            case e: ClassNotFoundException => false\n+          }",
    "line": 18
  }],
  "prId": 6734
}]