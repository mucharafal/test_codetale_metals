[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "I seriously hope the backend is not killing some random executor instead of the one that was asked...\n",
    "commit": "3d2fac45f72dd56e03486bb269baa138cefe4e2e",
    "createdAt": "2016-09-21T17:14:48Z",
    "diffHunk": "@@ -54,13 +54,16 @@ private[spark] trait ExecutorAllocationClient {\n \n   /**\n    * Request that the cluster manager kill the specified executors.\n-   * @return whether the request is acknowledged by the cluster manager.\n+   * @return the ids of the executors acknowledged by the cluster manager to be removed.\n    */\n-  def killExecutors(executorIds: Seq[String]): Boolean\n+  def killExecutors(executorIds: Seq[String]): Seq[String]\n \n   /**\n    * Request that the cluster manager kill the specified executor.\n    * @return whether the request is acknowledged by the cluster manager.\n    */\n-  def killExecutor(executorId: String): Boolean = killExecutors(Seq(executorId))\n+  def killExecutor(executorId: String): Boolean = {\n+    val killedExecutors = killExecutors(Seq(executorId))\n+    killedExecutors.nonEmpty && killedExecutors(0).equals(executorId)",
    "line": 17
  }, {
    "author": {
      "login": "dhruve"
    },
    "body": "It doesn't. Just added an additional check here to be sure. I need to change the short circuit operator here to &.\n",
    "commit": "3d2fac45f72dd56e03486bb269baa138cefe4e2e",
    "createdAt": "2016-09-21T17:35:57Z",
    "diffHunk": "@@ -54,13 +54,16 @@ private[spark] trait ExecutorAllocationClient {\n \n   /**\n    * Request that the cluster manager kill the specified executors.\n-   * @return whether the request is acknowledged by the cluster manager.\n+   * @return the ids of the executors acknowledged by the cluster manager to be removed.\n    */\n-  def killExecutors(executorIds: Seq[String]): Boolean\n+  def killExecutors(executorIds: Seq[String]): Seq[String]\n \n   /**\n    * Request that the cluster manager kill the specified executor.\n    * @return whether the request is acknowledged by the cluster manager.\n    */\n-  def killExecutor(executorId: String): Boolean = killExecutors(Seq(executorId))\n+  def killExecutor(executorId: String): Boolean = {\n+    val killedExecutors = killExecutors(Seq(executorId))\n+    killedExecutors.nonEmpty && killedExecutors(0).equals(executorId)",
    "line": 17
  }],
  "prId": 15152
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "This needs to be short-circuited, otherwise it will throw an exception if the list is empty.\n",
    "commit": "3d2fac45f72dd56e03486bb269baa138cefe4e2e",
    "createdAt": "2016-09-21T21:57:17Z",
    "diffHunk": "@@ -54,13 +54,16 @@ private[spark] trait ExecutorAllocationClient {\n \n   /**\n    * Request that the cluster manager kill the specified executors.\n-   * @return whether the request is acknowledged by the cluster manager.\n+   * @return the ids of the executors acknowledged by the cluster manager to be removed.\n    */\n-  def killExecutors(executorIds: Seq[String]): Boolean\n+  def killExecutors(executorIds: Seq[String]): Seq[String]\n \n   /**\n    * Request that the cluster manager kill the specified executor.\n    * @return whether the request is acknowledged by the cluster manager.\n    */\n-  def killExecutor(executorId: String): Boolean = killExecutors(Seq(executorId))\n+  def killExecutor(executorId: String): Boolean = {\n+    val killedExecutors = killExecutors(Seq(executorId))\n+    killedExecutors.nonEmpty & killedExecutors(0).equals(executorId)"
  }, {
    "author": {
      "login": "dhruve"
    },
    "body": "Ah! The earlier one was fine. Missed it.\n",
    "commit": "3d2fac45f72dd56e03486bb269baa138cefe4e2e",
    "createdAt": "2016-09-21T22:30:46Z",
    "diffHunk": "@@ -54,13 +54,16 @@ private[spark] trait ExecutorAllocationClient {\n \n   /**\n    * Request that the cluster manager kill the specified executors.\n-   * @return whether the request is acknowledged by the cluster manager.\n+   * @return the ids of the executors acknowledged by the cluster manager to be removed.\n    */\n-  def killExecutors(executorIds: Seq[String]): Boolean\n+  def killExecutors(executorIds: Seq[String]): Seq[String]\n \n   /**\n    * Request that the cluster manager kill the specified executor.\n    * @return whether the request is acknowledged by the cluster manager.\n    */\n-  def killExecutor(executorId: String): Boolean = killExecutors(Seq(executorId))\n+  def killExecutor(executorId: String): Boolean = {\n+    val killedExecutors = killExecutors(Seq(executorId))\n+    killedExecutors.nonEmpty & killedExecutors(0).equals(executorId)"
  }],
  "prId": 15152
}]