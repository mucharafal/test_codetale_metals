[{
  "comments": [{
    "author": {
      "login": "ryan-williams"
    },
    "body": "does \"cached\" still make sense here?\n",
    "commit": "824be9104bfb81b260912dc86a0dba7508d1d3f5",
    "createdAt": "2015-10-25T22:59:29Z",
    "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark\n+\n+import scala.collection.mutable\n+import scala.reflect.ClassTag\n+\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.Path\n+\n+import org.apache.spark.rdd.{ReliableRDDCheckpointData, ReliableCheckpointRDD, RDD}\n+import org.apache.spark.storage._\n+\n+class CheckpointManager extends Logging {\n+\n+  /** Keys of RDD partitions that are being checkpointed. */\n+  private val checkpointingRDDPartitions = new mutable.HashSet[RDDBlockId]\n+\n+  /** Gets or computes an RDD partition. Used by RDD.iterator() when an RDD is cached. */"
  }],
  "prId": 9258
}]