[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "nit: `private[this]`",
    "commit": "b801ab096c3bf426c7d2044291785359ace4922f",
    "createdAt": "2017-02-10T17:51:50Z",
    "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.util\n+\n+import java.util.concurrent.atomic.AtomicReference\n+\n+private[spark] object ExecuteOnce {\n+  private val doNothing: Any => Unit = Function.const(())\n+\n+  def apply[T](fn: T => Unit): ExecuteOnce[T] = {\n+    new ExecuteOnce(fn)\n+  }\n+}\n+\n+/**\n+ * Execute the provided function on the first application only.\n+ * Subsequent applications will result in a no-op.\n+ */\n+private[spark] final class ExecuteOnce[T](fn: T => Unit)\n+  extends (T => Unit)\n+  with Serializable {\n+\n+  // a quick to test boolean\n+  private var execute = true"
  }],
  "prId": 16386
}]