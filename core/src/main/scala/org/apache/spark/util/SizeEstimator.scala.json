[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "If I merge your other change that introduces an enum for JVM vendor, can it be used here?\n",
    "commit": "1b6ff6a0daa9dcfaa6bcefdef18d9d2cfb77ba4b",
    "createdAt": "2015-05-12T16:43:45Z",
    "diffHunk": "@@ -97,6 +98,11 @@ private[spark] object SizeEstimator extends Logging {\n       return System.getProperty(\"spark.test.useCompressedOops\").toBoolean\n     }\n \n+    // java.vm.info provides compressed ref info for IBM JDKs\n+    if (System.getProperty(\"java.vendor\").contains(\"IBM\")) {",
    "line": 15
  }, {
    "author": {
      "login": "tellison"
    },
    "body": "It would be useful to have the utility as there are a few more places coming where I'll need to know the JVM vendor.\n\nArchitecturally, are you ok with creating a public utility in launcher and having a dependency on it from core?\n\nFeel free to commit these and I'll restructure on the fly, or I can take both back and submit multiple changes in a single pull request.\n",
    "commit": "1b6ff6a0daa9dcfaa6bcefdef18d9d2cfb77ba4b",
    "createdAt": "2015-05-12T20:09:16Z",
    "diffHunk": "@@ -97,6 +98,11 @@ private[spark] object SizeEstimator extends Logging {\n       return System.getProperty(\"spark.test.useCompressedOops\").toBoolean\n     }\n \n+    // java.vm.info provides compressed ref info for IBM JDKs\n+    if (System.getProperty(\"java.vendor\").contains(\"IBM\")) {",
    "line": 15
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Darn, right, we don't want to add that dependency. Well, I think for the moment these two changes are OK in that regard since adding a new dependency across these two isn't good.\n",
    "commit": "1b6ff6a0daa9dcfaa6bcefdef18d9d2cfb77ba4b",
    "createdAt": "2015-05-12T20:14:38Z",
    "diffHunk": "@@ -97,6 +98,11 @@ private[spark] object SizeEstimator extends Logging {\n       return System.getProperty(\"spark.test.useCompressedOops\").toBoolean\n     }\n \n+    // java.vm.info provides compressed ref info for IBM JDKs\n+    if (System.getProperty(\"java.vendor\").contains(\"IBM\")) {",
    "line": 15
  }, {
    "author": {
      "login": "tellison"
    },
    "body": "How do you feel about me creating a getJavaVendor() utility in org.apache.spark.util.Utils rather than in-lining the checks?\n\nIt would, however, be a duplicate of the version proposed for the launcher which is not great.\n",
    "commit": "1b6ff6a0daa9dcfaa6bcefdef18d9d2cfb77ba4b",
    "createdAt": "2015-05-13T12:22:59Z",
    "diffHunk": "@@ -97,6 +98,11 @@ private[spark] object SizeEstimator extends Logging {\n       return System.getProperty(\"spark.test.useCompressedOops\").toBoolean\n     }\n \n+    // java.vm.info provides compressed ref info for IBM JDKs\n+    if (System.getProperty(\"java.vendor\").contains(\"IBM\")) {",
    "line": 15
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "I think the duplication of the snippet in launcher may be unavoidable for now. I think this PR can be left as is, and a refactoring can be added when it becomes necessary in another PR?\n",
    "commit": "1b6ff6a0daa9dcfaa6bcefdef18d9d2cfb77ba4b",
    "createdAt": "2015-05-13T12:31:31Z",
    "diffHunk": "@@ -97,6 +98,11 @@ private[spark] object SizeEstimator extends Logging {\n       return System.getProperty(\"spark.test.useCompressedOops\").toBoolean\n     }\n \n+    // java.vm.info provides compressed ref info for IBM JDKs\n+    if (System.getProperty(\"java.vendor\").contains(\"IBM\")) {",
    "line": 15
  }],
  "prId": 6085
}]