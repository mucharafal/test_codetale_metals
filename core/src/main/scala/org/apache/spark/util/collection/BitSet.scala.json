[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Use Scala classes in Scala code\n",
    "commit": "0b2da51a2c647d9c0eca2e80955ff371d46e52ff",
    "createdAt": "2015-06-13T07:32:16Z",
    "diffHunk": "@@ -32,6 +34,10 @@ class BitSet(numBits: Int) extends Serializable {\n    */\n   def capacity: Int = numWords * 64\n \n+  def clear(): Unit = {\n+    util.Arrays.fill(words, 0L)"
  }, {
    "author": {
      "login": "navis"
    },
    "body": "I'm new to scala. Could you suggest one?\n",
    "commit": "0b2da51a2c647d9c0eca2e80955ff371d46e52ff",
    "createdAt": "2015-06-13T08:11:41Z",
    "diffHunk": "@@ -32,6 +34,10 @@ class BitSet(numBits: Int) extends Serializable {\n    */\n   def capacity: Int = numWords * 64\n \n+  def clear(): Unit = {\n+    util.Arrays.fill(words, 0L)"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Hm, sorry, I take that back. There is no equivalent in Scala that I can find, that sets an existing array's values. Can I suggest thought that importing just `java.util` might look confusing, so either just import it (there is no  Scala `Arrays` to mix it up with) or if this is just one usage, write `java.util.Arrays.fill(...)`\n",
    "commit": "0b2da51a2c647d9c0eca2e80955ff371d46e52ff",
    "createdAt": "2015-06-13T08:26:36Z",
    "diffHunk": "@@ -32,6 +34,10 @@ class BitSet(numBits: Int) extends Serializable {\n    */\n   def capacity: Int = numWords * 64\n \n+  def clear(): Unit = {\n+    util.Arrays.fill(words, 0L)"
  }, {
    "author": {
      "login": "navis"
    },
    "body": "Addressed comments. Thanks!\n",
    "commit": "0b2da51a2c647d9c0eca2e80955ff371d46e52ff",
    "createdAt": "2015-06-13T10:35:10Z",
    "diffHunk": "@@ -32,6 +34,10 @@ class BitSet(numBits: Int) extends Serializable {\n    */\n   def capacity: Int = numWords * 64\n \n+  def clear(): Unit = {\n+    util.Arrays.fill(words, 0L)"
  }],
  "prId": 6696
}]