[{
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "I don't know if it's the goal but this isn't thread-safe?",
    "commit": "ec6265986cb91585c0a6fdbc0c9675ec9fbba613",
    "createdAt": "2017-04-19T03:17:57Z",
    "diffHunk": "@@ -128,6 +128,16 @@ private[mllib] abstract class PeriodicCheckpointer[T](\n   protected def getCheckpointFiles(data: T): Iterable[String]\n \n   /**\n+   * Call this to unpersist the Dataset.\n+   */\n+  def unpersistDataSet(): Unit = {\n+    while (persistedQueue.nonEmpty) {",
    "line": 25
  }, {
    "author": {
      "login": "mallman"
    },
    "body": "I would agree with you, that this is not thread safe. Is that a concern?",
    "commit": "ec6265986cb91585c0a6fdbc0c9675ec9fbba613",
    "createdAt": "2017-04-19T20:54:05Z",
    "diffHunk": "@@ -128,6 +128,16 @@ private[mllib] abstract class PeriodicCheckpointer[T](\n   protected def getCheckpointFiles(data: T): Iterable[String]\n \n   /**\n+   * Call this to unpersist the Dataset.\n+   */\n+  def unpersistDataSet(): Unit = {\n+    while (persistedQueue.nonEmpty) {",
    "line": 25
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "with the limited internal only use, it should be ok",
    "commit": "ec6265986cb91585c0a6fdbc0c9675ec9fbba613",
    "createdAt": "2017-04-19T21:46:10Z",
    "diffHunk": "@@ -128,6 +128,16 @@ private[mllib] abstract class PeriodicCheckpointer[T](\n   protected def getCheckpointFiles(data: T): Iterable[String]\n \n   /**\n+   * Call this to unpersist the Dataset.\n+   */\n+  def unpersistDataSet(): Unit = {\n+    while (persistedQueue.nonEmpty) {",
    "line": 25
  }],
  "prId": 15125
}]