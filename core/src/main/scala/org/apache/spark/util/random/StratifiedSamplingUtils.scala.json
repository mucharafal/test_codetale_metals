[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Good catch!\n",
    "commit": "61a232ffd0378d56e7e4a3d2c2e8f9f8a9660a80",
    "createdAt": "2014-10-24T20:23:52Z",
    "diffHunk": "@@ -245,9 +245,9 @@ private[spark] object StratifiedSamplingUtils extends Logging {\n           // Must use the same invoke pattern on the rng as in getSeqOp for with replacement\n           // in order to generate the same sequence of random numbers when creating the sample\n           val copiesAccepted = if (acceptBound == 0) 0L else rng.nextPoisson(acceptBound)\n-          val copiesWailisted = rng.nextPoisson(finalResult(key).waitListBound)\n+          val copiesWaitlisted = rng.nextPoisson(finalResult(key).waitListBound)",
    "line": 24
  }],
  "prId": 2928
}]