[{
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "By the way, this use of `nextIterator()` explains why this bug was able to occur on 1.4.x: the first close() call, which throws an exception, comes from `NextIterator`, and the second comes from the task completion listener.\n",
    "commit": "5ec97d7c46fd553401367bf6063d28e946c84675",
    "createdAt": "2015-10-31T04:28:47Z",
    "diffHunk": "@@ -60,8 +60,10 @@ private[spark] abstract class NextIterator[U] extends Iterator[U] {\n    */\n   def closeIfNeeded() {\n     if (!closed) {",
    "line": 3
  }],
  "prId": 9382
}]