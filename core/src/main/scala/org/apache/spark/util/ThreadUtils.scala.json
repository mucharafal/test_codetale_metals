[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Do we need a method for this, really, vs just calling that constructor?\ncan it be imported as a class name?\n",
    "commit": "ed9ff855871bfef69b39b1b9b791d1ce487093bd",
    "createdAt": "2016-02-23T11:29:02Z",
    "diffHunk": "@@ -156,4 +156,11 @@ private[spark] object ThreadUtils {\n         result\n     }\n   }\n+\n+  /**\n+   * Construct a new ForkJoinPool with a specified max parallelism.\n+   */\n+  def newForkJoinPool(maxThreadNumber: Int): scala.concurrent.forkjoin.ForkJoinPool = {",
    "line": 8
  }, {
    "author": {
      "login": "holdenk"
    },
    "body": "I figured it would be best to put it here with the rest of the ThreadUtils stuff. If we add the custom factory for the name as @zsxwing asked gets complicated enough probably worth keeping here in a utility function.\n",
    "commit": "ed9ff855871bfef69b39b1b9b791d1ce487093bd",
    "createdAt": "2016-02-27T04:00:20Z",
    "diffHunk": "@@ -156,4 +156,11 @@ private[spark] object ThreadUtils {\n         result\n     }\n   }\n+\n+  /**\n+   * Construct a new ForkJoinPool with a specified max parallelism.\n+   */\n+  def newForkJoinPool(maxThreadNumber: Int): scala.concurrent.forkjoin.ForkJoinPool = {",
    "line": 8
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Yes, if it's more than calling a constructor it may be worth it but not to wrap up \"new ForkJoinPool\" as \"newForkJoinPool = new ForkJoinPool\"\n",
    "commit": "ed9ff855871bfef69b39b1b9b791d1ce487093bd",
    "createdAt": "2016-02-27T16:41:34Z",
    "diffHunk": "@@ -156,4 +156,11 @@ private[spark] object ThreadUtils {\n         result\n     }\n   }\n+\n+  /**\n+   * Construct a new ForkJoinPool with a specified max parallelism.\n+   */\n+  def newForkJoinPool(maxThreadNumber: Int): scala.concurrent.forkjoin.ForkJoinPool = {",
    "line": 8
  }],
  "prId": 11310
}, {
  "comments": [{
    "author": {
      "login": "zsxwing"
    },
    "body": "Please add a thread factory to set the thread name\n",
    "commit": "ed9ff855871bfef69b39b1b9b791d1ce487093bd",
    "createdAt": "2016-02-27T00:26:10Z",
    "diffHunk": "@@ -156,4 +156,11 @@ private[spark] object ThreadUtils {\n         result\n     }\n   }\n+\n+  /**\n+   * Construct a new ForkJoinPool with a specified max parallelism.\n+   */\n+  def newForkJoinPool(maxThreadNumber: Int): scala.concurrent.forkjoin.ForkJoinPool = {\n+    new scala.concurrent.forkjoin.ForkJoinPool(maxThreadNumber)",
    "line": 9
  }, {
    "author": {
      "login": "holdenk"
    },
    "body": "So, with the scala ForkJoinPool even when provide a thread factory, it sets the thread names based on the \"workerNamePrefix\" (which is final) inside of \"registerWorker\" which is called when constructing a new ForkJoinWorkerThread - although with a custom factory we can change the name back after the thread has been constructed.\n",
    "commit": "ed9ff855871bfef69b39b1b9b791d1ce487093bd",
    "createdAt": "2016-02-27T04:00:24Z",
    "diffHunk": "@@ -156,4 +156,11 @@ private[spark] object ThreadUtils {\n         result\n     }\n   }\n+\n+  /**\n+   * Construct a new ForkJoinPool with a specified max parallelism.\n+   */\n+  def newForkJoinPool(maxThreadNumber: Int): scala.concurrent.forkjoin.ForkJoinPool = {\n+    new scala.concurrent.forkjoin.ForkJoinPool(maxThreadNumber)",
    "line": 9
  }],
  "prId": 11310
}]