[{
  "comments": [{
    "author": {
      "login": "mateiz"
    },
    "body": "Is this really a good idea? `apply` usually does not modify the object you called it on. Maybe we should call this `set` or `update`.\n",
    "commit": "f5c4783c5f5222cdd6a3caa418e6ae08ae424915",
    "createdAt": "2014-03-14T18:12:58Z",
    "diffHunk": "@@ -25,10 +25,20 @@ package org.apache.spark.util\n  * @param  _2   Element 2 of this MutablePair\n  */\n case class MutablePair[@specialized(Int, Long, Double, Char, Boolean/*, AnyRef*/) T1,\n-                      @specialized(Int, Long, Double, Char, Boolean/*, AnyRef*/) T2]\n+                       @specialized(Int, Long, Double, Char, Boolean/*, AnyRef*/) T2]\n   (var _1: T1, var _2: T2)\n   extends Product2[T1, T2]\n {\n+  /** No-arg constructor for serialization */\n+  def this() = this(null.asInstanceOf[T1], null.asInstanceOf[T2])\n+\n+  /** Updates this pair with new values and returns itself */\n+  def apply(n1: T1, n2: T2): MutablePair[T1, T2] = {"
  }],
  "prId": 141
}]