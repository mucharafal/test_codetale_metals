[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Codes here are almost not changed. I just exposed some method to inherit it in ArrowRRunner. This code needs refactoring as a common parent like PythonRunner but I don't target it here.",
    "commit": "2559d7aacb688ae426b1917e65863feecb549968",
    "createdAt": "2019-02-09T12:58:36Z",
    "diffHunk": "@@ -91,28 +91,70 @@ private[spark] class RRunner[U](\n     }\n \n     try {\n-      return new Iterator[U] {\n-        def next(): U = {\n-          val obj = _nextObj\n-          if (hasNext) {\n-            _nextObj = read()\n-          }\n-          obj\n+      newReaderIterator(dataStream, errThread)\n+    } catch {\n+      case e: Exception =>\n+        throw new SparkException(\"R computation failed with\\n \" + errThread.getLines(), e)\n+    }\n+  }\n+\n+  protected def newReaderIterator(",
    "line": 27
  }],
  "prId": 23746
}]