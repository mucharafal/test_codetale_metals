[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "I don't think you need this and the project doesn't depend directly on commons-collections anyway IIRC.\n",
    "commit": "7fe2e9efc7d54310367bf71da96964bd534e70c4",
    "createdAt": "2015-04-18T09:12:10Z",
    "diffHunk": "@@ -19,6 +19,8 @@ package org.apache.spark.api.java\n \n import java.lang.{Double => JDouble}\n \n+import org.apache.commons.collections.ComparatorUtils"
  }],
  "prId": 5571
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "This doesn't need `super` does it? it isn't wrong but feels very slightly overspecific.\n",
    "commit": "7fe2e9efc7d54310367bf71da96964bd534e70c4",
    "createdAt": "2015-04-18T09:13:53Z",
    "diffHunk": "@@ -164,6 +166,20 @@ class JavaDoubleRDD(val srdd: RDD[scala.Double])\n   def sum(): JDouble = srdd.sum()\n \n   /**\n+   * Returns the minimum element from this RDD as defined by\n+   * the default comparator natural order.\n+   * @return the minimum of the RDD\n+   */\n+  def min(): JDouble = super.min(com.google.common.collect.Ordering.natural())"
  }, {
    "author": {
      "login": "ogirardot"
    },
    "body": "you're right it doesn't - it doesn't shock me, but I'll change it\n",
    "commit": "7fe2e9efc7d54310367bf71da96964bd534e70c4",
    "createdAt": "2015-04-18T09:17:54Z",
    "diffHunk": "@@ -164,6 +166,20 @@ class JavaDoubleRDD(val srdd: RDD[scala.Double])\n   def sum(): JDouble = srdd.sum()\n \n   /**\n+   * Returns the minimum element from this RDD as defined by\n+   * the default comparator natural order.\n+   * @return the minimum of the RDD\n+   */\n+  def min(): JDouble = super.min(com.google.common.collect.Ordering.natural())"
  }],
  "prId": 5571
}]