[{
  "comments": [{
    "author": {
      "login": "wangyum"
    },
    "body": "`num.toString().padStart(2, \"0\")` cause [org.apache.spark.deploy.history.HistoryServerSuite](https://amplab.cs.berkeley.edu/jenkins/job/SparkPullRequestBuilder/83813/testReport/) test failed.\r\n\r\n",
    "commit": "08f5e6808847ad9ca383dc6f78ca3d733efc00ab",
    "createdAt": "2017-11-14T14:11:12Z",
    "diffHunk": "@@ -46,3 +46,25 @@ function formatBytes(bytes, type) {\n     var i = Math.floor(Math.log(bytes) / Math.log(k));\n     return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n }\n+\n+function padZeroes(num) {\n+  return (\"0\" + num).slice(-2);",
    "line": 6
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "do you know why?",
    "commit": "08f5e6808847ad9ca383dc6f78ca3d733efc00ab",
    "createdAt": "2017-11-14T14:37:14Z",
    "diffHunk": "@@ -46,3 +46,25 @@ function formatBytes(bytes, type) {\n     var i = Math.floor(Math.log(bytes) / Math.log(k));\n     return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n }\n+\n+function padZeroes(num) {\n+  return (\"0\" + num).slice(-2);",
    "line": 6
  }, {
    "author": {
      "login": "wangyum"
    },
    "body": "`padStart` with poor compatibility:\r\n\r\nFeature | Chrome | Edge | Firefox | Internet Explorer | Opera | Safari\r\n-- | -- | -- | -- | -- | -- | --\r\nBasic support | 57 | 15 | 48 | No | 44 | 10\r\n\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice\r\n\r\n\r\n",
    "commit": "08f5e6808847ad9ca383dc6f78ca3d733efc00ab",
    "createdAt": "2017-11-14T15:22:46Z",
    "diffHunk": "@@ -46,3 +46,25 @@ function formatBytes(bytes, type) {\n     var i = Math.floor(Math.log(bytes) / Math.log(k));\n     return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n }\n+\n+function padZeroes(num) {\n+  return (\"0\" + num).slice(-2);",
    "line": 6
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "what does the test use?",
    "commit": "08f5e6808847ad9ca383dc6f78ca3d733efc00ab",
    "createdAt": "2017-11-14T15:39:31Z",
    "diffHunk": "@@ -46,3 +46,25 @@ function formatBytes(bytes, type) {\n     var i = Math.floor(Math.log(bytes) / Math.log(k));\n     return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n }\n+\n+function padZeroes(num) {\n+  return (\"0\" + num).slice(-2);",
    "line": 6
  }, {
    "author": {
      "login": "wangyum"
    },
    "body": "[TagNameQuery(\"a\") ](https://github.com/apache/spark/blob/4a78965c22f11fbda7c9ba843ee266048bf6d319/core/src/test/scala/org/apache/spark/deploy/history/HistoryServerSuite.scala#L349) gets result from [WebBrowser](https://github.com/apache/spark/blob/4a78965c22f11fbda7c9ba843ee266048bf6d319/core/src/test/scala/org/apache/spark/deploy/history/HistoryServerSuite.scala#L43), This browser doesn't support this function.",
    "commit": "08f5e6808847ad9ca383dc6f78ca3d733efc00ab",
    "createdAt": "2017-11-15T04:56:27Z",
    "diffHunk": "@@ -46,3 +46,25 @@ function formatBytes(bytes, type) {\n     var i = Math.floor(Math.log(bytes) / Math.log(k));\n     return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n }\n+\n+function padZeroes(num) {\n+  return (\"0\" + num).slice(-2);",
    "line": 6
  }],
  "prId": 19640
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "how about `Intl.DateTimeFormat().resolvedOptions().timeZone`",
    "commit": "08f5e6808847ad9ca383dc6f78ca3d733efc00ab",
    "createdAt": "2017-11-14T15:37:01Z",
    "diffHunk": "@@ -46,3 +46,25 @@ function formatBytes(bytes, type) {\n     var i = Math.floor(Math.log(bytes) / Math.log(k));\n     return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n }\n+\n+function padZeroes(num) {\n+  return (\"0\" + num).slice(-2);\n+}\n+\n+function formatTimeMillis(timeMillis) {\n+  if (timeMillis <= 0) {\n+    return \"-\";\n+  } else {\n+    var dt = new Date(timeMillis);\n+    return dt.getFullYear() + \"-\" +\n+      padZeroes(dt.getMonth() + 1) + \"-\" +\n+      padZeroes(dt.getDate()) + \" \" +\n+      padZeroes(dt.getHours()) + \":\" +\n+      padZeroes(dt.getMinutes()) + \":\" +\n+      padZeroes(dt.getSeconds());\n+  }\n+}\n+\n+function getTimeZone() {\n+  return new Date().toString().match(/\\(([A-Za-z\\s].*)\\)/)[1];"
  }, {
    "author": {
      "login": "wangyum"
    },
    "body": "This timeZone seems incorrect. Safari gets `Asia/Shanghai`, but Chrome gets `America/Chicago` on the same computer.\r\n\r\nHow about just include this change to release notes.",
    "commit": "08f5e6808847ad9ca383dc6f78ca3d733efc00ab",
    "createdAt": "2017-11-15T05:10:35Z",
    "diffHunk": "@@ -46,3 +46,25 @@ function formatBytes(bytes, type) {\n     var i = Math.floor(Math.log(bytes) / Math.log(k));\n     return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n }\n+\n+function padZeroes(num) {\n+  return (\"0\" + num).slice(-2);\n+}\n+\n+function formatTimeMillis(timeMillis) {\n+  if (timeMillis <= 0) {\n+    return \"-\";\n+  } else {\n+    var dt = new Date(timeMillis);\n+    return dt.getFullYear() + \"-\" +\n+      padZeroes(dt.getMonth() + 1) + \"-\" +\n+      padZeroes(dt.getDate()) + \" \" +\n+      padZeroes(dt.getHours()) + \":\" +\n+      padZeroes(dt.getMinutes()) + \":\" +\n+      padZeroes(dt.getSeconds());\n+  }\n+}\n+\n+function getTimeZone() {\n+  return new Date().toString().match(/\\(([A-Za-z\\s].*)\\)/)[1];"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "did you have proxy on your chrome? It works fine at my Chrome.",
    "commit": "08f5e6808847ad9ca383dc6f78ca3d733efc00ab",
    "createdAt": "2017-11-15T11:24:26Z",
    "diffHunk": "@@ -46,3 +46,25 @@ function formatBytes(bytes, type) {\n     var i = Math.floor(Math.log(bytes) / Math.log(k));\n     return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n }\n+\n+function padZeroes(num) {\n+  return (\"0\" + num).slice(-2);\n+}\n+\n+function formatTimeMillis(timeMillis) {\n+  if (timeMillis <= 0) {\n+    return \"-\";\n+  } else {\n+    var dt = new Date(timeMillis);\n+    return dt.getFullYear() + \"-\" +\n+      padZeroes(dt.getMonth() + 1) + \"-\" +\n+      padZeroes(dt.getDate()) + \" \" +\n+      padZeroes(dt.getHours()) + \":\" +\n+      padZeroes(dt.getMinutes()) + \":\" +\n+      padZeroes(dt.getSeconds());\n+  }\n+}\n+\n+function getTimeZone() {\n+  return new Date().toString().match(/\\(([A-Za-z\\s].*)\\)/)[1];"
  }],
  "prId": 19640
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "if you really want to keep this code, please add comment to explain this regex.",
    "commit": "08f5e6808847ad9ca383dc6f78ca3d733efc00ab",
    "createdAt": "2017-11-15T16:54:18Z",
    "diffHunk": "@@ -46,3 +46,29 @@ function formatBytes(bytes, type) {\n     var i = Math.floor(Math.log(bytes) / Math.log(k));\n     return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n }\n+\n+function padZeroes(num) {\n+  return (\"0\" + num).slice(-2);\n+}\n+\n+function formatTimeMillis(timeMillis) {\n+  if (timeMillis <= 0) {\n+    return \"-\";\n+  } else {\n+    var dt = new Date(timeMillis);\n+    return dt.getFullYear() + \"-\" +\n+      padZeroes(dt.getMonth() + 1) + \"-\" +\n+      padZeroes(dt.getDate()) + \" \" +\n+      padZeroes(dt.getHours()) + \":\" +\n+      padZeroes(dt.getMinutes()) + \":\" +\n+      padZeroes(dt.getSeconds());\n+  }\n+}\n+\n+function getTimeZone() {\n+  try {\n+    return Intl.DateTimeFormat().resolvedOptions().timeZone;\n+  } catch(ex) {\n+    return new Date().toString().match(/\\((.*)\\)/)[1];"
  }],
  "prId": 19640
}, {
  "comments": [{
    "author": {
      "login": "wangyum"
    },
    "body": "Some old browser doesn't support this function. so I surround with try catch.\r\n\r\nFeature | Chrome | Edge | Firefox | Internet Explorer | Opera | Safari\r\n-- | -- | -- | -- | -- | -- | --\r\nBasic support | 24 | 12 | 29 | 11 | 15 | 10\r\ncomputedÂ timeZone | 35 | 14 | 53 | No | 30 | 10\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/resolvedOptions\r\n",
    "commit": "08f5e6808847ad9ca383dc6f78ca3d733efc00ab",
    "createdAt": "2017-11-15T17:33:34Z",
    "diffHunk": "@@ -46,3 +46,31 @@ function formatBytes(bytes, type) {\n     var i = Math.floor(Math.log(bytes) / Math.log(k));\n     return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n }\n+\n+function padZeroes(num) {\n+  return (\"0\" + num).slice(-2);\n+}\n+\n+function formatTimeMillis(timeMillis) {\n+  if (timeMillis <= 0) {\n+    return \"-\";\n+  } else {\n+    var dt = new Date(timeMillis);\n+    return dt.getFullYear() + \"-\" +\n+      padZeroes(dt.getMonth() + 1) + \"-\" +\n+      padZeroes(dt.getDate()) + \" \" +\n+      padZeroes(dt.getHours()) + \":\" +\n+      padZeroes(dt.getMinutes()) + \":\" +\n+      padZeroes(dt.getSeconds());\n+  }\n+}\n+\n+function getTimeZone() {\n+  try {",
    "line": 24
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "cc @srowen does Spark have a guarantee about which version of which browser to support?",
    "commit": "08f5e6808847ad9ca383dc6f78ca3d733efc00ab",
    "createdAt": "2017-11-15T18:32:57Z",
    "diffHunk": "@@ -46,3 +46,31 @@ function formatBytes(bytes, type) {\n     var i = Math.floor(Math.log(bytes) / Math.log(k));\n     return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n }\n+\n+function padZeroes(num) {\n+  return (\"0\" + num).slice(-2);\n+}\n+\n+function formatTimeMillis(timeMillis) {\n+  if (timeMillis <= 0) {\n+    return \"-\";\n+  } else {\n+    var dt = new Date(timeMillis);\n+    return dt.getFullYear() + \"-\" +\n+      padZeroes(dt.getMonth() + 1) + \"-\" +\n+      padZeroes(dt.getDate()) + \" \" +\n+      padZeroes(dt.getHours()) + \":\" +\n+      padZeroes(dt.getMinutes()) + \":\" +\n+      padZeroes(dt.getSeconds());\n+  }\n+}\n+\n+function getTimeZone() {\n+  try {",
    "line": 24
  }, {
    "author": {
      "login": "ajbozarth"
    },
    "body": "Spark does not have a list of supported browsers, from my experience most of us just test new UI changes on whatever browsers we have (In my case the latest Safari, Chrome and Firefox ESR). Though I'd like to think we don't have any IE users, we can't make that assumption while IE 11 is still supported by MS.",
    "commit": "08f5e6808847ad9ca383dc6f78ca3d733efc00ab",
    "createdAt": "2017-11-15T21:13:56Z",
    "diffHunk": "@@ -46,3 +46,31 @@ function formatBytes(bytes, type) {\n     var i = Math.floor(Math.log(bytes) / Math.log(k));\n     return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n }\n+\n+function padZeroes(num) {\n+  return (\"0\" + num).slice(-2);\n+}\n+\n+function formatTimeMillis(timeMillis) {\n+  if (timeMillis <= 0) {\n+    return \"-\";\n+  } else {\n+    var dt = new Date(timeMillis);\n+    return dt.getFullYear() + \"-\" +\n+      padZeroes(dt.getMonth() + 1) + \"-\" +\n+      padZeroes(dt.getDate()) + \" \" +\n+      padZeroes(dt.getHours()) + \":\" +\n+      padZeroes(dt.getMinutes()) + \":\" +\n+      padZeroes(dt.getSeconds());\n+  }\n+}\n+\n+function getTimeZone() {\n+  try {",
    "line": 24
  }],
  "prId": 19640
}]