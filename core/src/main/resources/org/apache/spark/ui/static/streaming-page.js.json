[{
  "comments": [{
    "author": {
      "login": "uncleGen"
    },
    "body": "FYI: this is newly added for area stack drawing.",
    "commit": "6de18cc2e20bd8ef0167a52c869c7706f67014a2",
    "createdAt": "2019-10-24T06:15:28Z",
    "diffHunk": "@@ -300,6 +300,156 @@ function drawHistogram(id, values, minY, maxY, unitY, batchInterval) {\n     }\n }\n \n+function drawAreaStack(id, labels, values, minX, maxX, minY, maxY) {"
  }],
  "prId": 26201
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Maybe, `4 space` indent here to be consistent with the others?",
    "commit": "6de18cc2e20bd8ef0167a52c869c7706f67014a2",
    "createdAt": "2019-10-24T19:44:19Z",
    "diffHunk": "@@ -300,6 +300,156 @@ function drawHistogram(id, values, minY, maxY, unitY, batchInterval) {\n     }\n }\n \n+function drawAreaStack(id, labels, values, minX, maxX, minY, maxY) {\n+    d3.select(d3.select(id).node().parentNode)\n+        .style(\"padding\", \"8px 0 8px 8px\")\n+        .style(\"border-right\", \"0px solid white\");\n+\n+    // Setup svg using Bostock's margin convention\n+    var margin = {top: 20, right: 27, bottom: 30, left: maxMarginLeftForTimeline};\n+    var width = 850 - margin.left - margin.right;\n+    var height = 300 - margin.top - margin.bottom;\n+\n+    var svg = d3.select(id)\n+      .append(\"svg\")"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Before this line, it seems that you follows `4-space`. After this line, it seems that you uses `2-space`. It would be good if the newly added code is consistent.",
    "commit": "6de18cc2e20bd8ef0167a52c869c7706f67014a2",
    "createdAt": "2019-10-24T19:46:15Z",
    "diffHunk": "@@ -300,6 +300,156 @@ function drawHistogram(id, values, minY, maxY, unitY, batchInterval) {\n     }\n }\n \n+function drawAreaStack(id, labels, values, minX, maxX, minY, maxY) {\n+    d3.select(d3.select(id).node().parentNode)\n+        .style(\"padding\", \"8px 0 8px 8px\")\n+        .style(\"border-right\", \"0px solid white\");\n+\n+    // Setup svg using Bostock's margin convention\n+    var margin = {top: 20, right: 27, bottom: 30, left: maxMarginLeftForTimeline};\n+    var width = 850 - margin.left - margin.right;\n+    var height = 300 - margin.top - margin.bottom;\n+\n+    var svg = d3.select(id)\n+      .append(\"svg\")"
  }, {
    "author": {
      "login": "uncleGen"
    },
    "body": "ok",
    "commit": "6de18cc2e20bd8ef0167a52c869c7706f67014a2",
    "createdAt": "2019-10-25T02:34:33Z",
    "diffHunk": "@@ -300,6 +300,156 @@ function drawHistogram(id, values, minY, maxY, unitY, batchInterval) {\n     }\n }\n \n+function drawAreaStack(id, labels, values, minX, maxX, minY, maxY) {\n+    d3.select(d3.select(id).node().parentNode)\n+        .style(\"padding\", \"8px 0 8px 8px\")\n+        .style(\"border-right\", \"0px solid white\");\n+\n+    // Setup svg using Bostock's margin convention\n+    var margin = {top: 20, right: 27, bottom: 30, left: maxMarginLeftForTimeline};\n+    var width = 850 - margin.left - margin.right;\n+    var height = 300 - margin.top - margin.bottom;\n+\n+    var svg = d3.select(id)\n+      .append(\"svg\")"
  }],
  "prId": 26201
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "nit. Please try to avoid this change like the other files.",
    "commit": "6de18cc2e20bd8ef0167a52c869c7706f67014a2",
    "createdAt": "2019-10-24T19:46:54Z",
    "diffHunk": "@@ -326,4 +476,4 @@ function highlightBatchRow(batch) {\n \n function clearBatchRow(batch) {\n     $(\"#batch-\" + batch).parent().removeClass(\"batch-table-cell-highlight\");\n-}\n+}"
  }],
  "prId": 26201
}, {
  "comments": [{
    "author": {
      "login": "sarutak"
    },
    "body": "\"y\" and \"height\" can be NaN because `d.y0` and `d.y` can be NaN.",
    "commit": "6de18cc2e20bd8ef0167a52c869c7706f67014a2",
    "createdAt": "2019-11-11T11:52:44Z",
    "diffHunk": "@@ -300,6 +300,156 @@ function drawHistogram(id, values, minY, maxY, unitY, batchInterval) {\n     }\n }\n \n+function drawAreaStack(id, labels, values, minX, maxX, minY, maxY) {\n+    d3.select(d3.select(id).node().parentNode)\n+        .style(\"padding\", \"8px 0 8px 8px\")\n+        .style(\"border-right\", \"0px solid white\");\n+\n+    // Setup svg using Bostock's margin convention\n+    var margin = {top: 20, right: 27, bottom: 30, left: maxMarginLeftForTimeline};\n+    var width = 850 - margin.left - margin.right;\n+    var height = 300 - margin.top - margin.bottom;\n+\n+    var svg = d3.select(id)\n+        .append(\"svg\")\n+        .attr(\"width\", width + margin.left + margin.right)\n+        .attr(\"height\", height + margin.top + margin.bottom)\n+        .append(\"g\")\n+        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n+\n+    var data = values;\n+\n+    var parse = d3.time.format(\"%H:%M:%S.%L\").parse;\n+\n+    // Transpose the data into layers\n+    var dataset = d3.layout.stack()(labels.map(function(fruit) {\n+        return data.map(function(d) {\n+            return {_x: d.x, x: parse(d.x), y: +d[fruit]};\n+        });\n+    }));\n+\n+\n+    // Set x, y and colors\n+    var x = d3.scale.ordinal()\n+        .domain(dataset[0].map(function(d) { return d.x; }))\n+        .rangeRoundBands([10, width-10], 0.02);\n+\n+    var y = d3.scale.linear()\n+        .domain([0, d3.max(dataset, function(d) {  return d3.max(d, function(d) { return d.y0 + d.y; });  })])\n+        .range([height, 0]);\n+\n+    var colors = [\"#0088cc\", \"#AFEEEE\", \"#FF8C00\", \"#3CB371\", \"#FF0000\"];\n+\n+    // Define and draw axes\n+    var yAxis = d3.svg.axis()\n+        .scale(y)\n+        .orient(\"left\")\n+        .ticks(7)\n+        .tickFormat( function(d) { return d } );\n+\n+    var xAxis = d3.svg.axis()\n+        .scale(x)\n+        .orient(\"bottom\")\n+        .tickFormat(d3.time.format(\"%H:%M:%S.%L\"));\n+\n+    // Only show the first and last time in the graph\n+    var xline = []\n+    xline.push(x.domain()[0])\n+    xline.push(x.domain()[x.domain().length - 1])\n+    xAxis.tickValues(xline);\n+\n+    svg.append(\"g\")\n+        .attr(\"class\", \"y axis\")\n+        .call(yAxis)\n+        .append(\"text\")\n+            .attr(\"transform\", \"translate(0,\" + unitLabelYOffset + \")\")\n+            .text(\"ms\");\n+\n+    svg.append(\"g\")\n+        .attr(\"class\", \"x axis\")\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\n+        .call(xAxis);\n+\n+    // Create groups for each series, rects for each segment\n+    var groups = svg.selectAll(\"g.cost\")\n+        .data(dataset)\n+        .enter().append(\"g\")\n+        .attr(\"class\", \"cost\")\n+        .style(\"fill\", function(d, i) { return colors[i]; });\n+\n+    var rect = groups.selectAll(\"rect\")\n+        .data(function(d) { return d; })\n+        .enter()\n+        .append(\"rect\")\n+        .attr(\"x\", function(d) { return x(d.x); })\n+        .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n+        .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); })"
  }],
  "prId": 26201
}, {
  "comments": [{
    "author": {
      "login": "sarutak"
    },
    "body": "The legend area can overlap with the graph area.\r\n<img width=\"1068\" alt=\"スクリーンショット 2019-11-08 17 45 56\" src=\"https://user-images.githubusercontent.com/4736016/68634358-8a9bdf80-0538-11ea-9dbd-596ad0c816b6.png\">\r\n\r\n",
    "commit": "6de18cc2e20bd8ef0167a52c869c7706f67014a2",
    "createdAt": "2019-11-12T01:38:25Z",
    "diffHunk": "@@ -300,6 +300,156 @@ function drawHistogram(id, values, minY, maxY, unitY, batchInterval) {\n     }\n }\n \n+function drawAreaStack(id, labels, values, minX, maxX, minY, maxY) {\n+    d3.select(d3.select(id).node().parentNode)\n+        .style(\"padding\", \"8px 0 8px 8px\")\n+        .style(\"border-right\", \"0px solid white\");\n+\n+    // Setup svg using Bostock's margin convention\n+    var margin = {top: 20, right: 27, bottom: 30, left: maxMarginLeftForTimeline};\n+    var width = 850 - margin.left - margin.right;\n+    var height = 300 - margin.top - margin.bottom;\n+\n+    var svg = d3.select(id)\n+        .append(\"svg\")\n+        .attr(\"width\", width + margin.left + margin.right)\n+        .attr(\"height\", height + margin.top + margin.bottom)\n+        .append(\"g\")\n+        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n+\n+    var data = values;\n+\n+    var parse = d3.time.format(\"%H:%M:%S.%L\").parse;\n+\n+    // Transpose the data into layers\n+    var dataset = d3.layout.stack()(labels.map(function(fruit) {\n+        return data.map(function(d) {\n+            return {_x: d.x, x: parse(d.x), y: +d[fruit]};\n+        });\n+    }));\n+\n+\n+    // Set x, y and colors\n+    var x = d3.scale.ordinal()\n+        .domain(dataset[0].map(function(d) { return d.x; }))\n+        .rangeRoundBands([10, width-10], 0.02);\n+\n+    var y = d3.scale.linear()\n+        .domain([0, d3.max(dataset, function(d) {  return d3.max(d, function(d) { return d.y0 + d.y; });  })])\n+        .range([height, 0]);\n+\n+    var colors = [\"#0088cc\", \"#AFEEEE\", \"#FF8C00\", \"#3CB371\", \"#FF0000\"];\n+\n+    // Define and draw axes\n+    var yAxis = d3.svg.axis()\n+        .scale(y)\n+        .orient(\"left\")\n+        .ticks(7)\n+        .tickFormat( function(d) { return d } );\n+\n+    var xAxis = d3.svg.axis()\n+        .scale(x)\n+        .orient(\"bottom\")\n+        .tickFormat(d3.time.format(\"%H:%M:%S.%L\"));\n+\n+    // Only show the first and last time in the graph\n+    var xline = []\n+    xline.push(x.domain()[0])\n+    xline.push(x.domain()[x.domain().length - 1])\n+    xAxis.tickValues(xline);\n+\n+    svg.append(\"g\")\n+        .attr(\"class\", \"y axis\")\n+        .call(yAxis)\n+        .append(\"text\")\n+            .attr(\"transform\", \"translate(0,\" + unitLabelYOffset + \")\")\n+            .text(\"ms\");\n+\n+    svg.append(\"g\")\n+        .attr(\"class\", \"x axis\")\n+        .attr(\"transform\", \"translate(0,\" + height + \")\")\n+        .call(xAxis);\n+\n+    // Create groups for each series, rects for each segment\n+    var groups = svg.selectAll(\"g.cost\")\n+        .data(dataset)\n+        .enter().append(\"g\")\n+        .attr(\"class\", \"cost\")\n+        .style(\"fill\", function(d, i) { return colors[i]; });\n+\n+    var rect = groups.selectAll(\"rect\")\n+        .data(function(d) { return d; })\n+        .enter()\n+        .append(\"rect\")\n+        .attr(\"x\", function(d) { return x(d.x); })\n+        .attr(\"y\", function(d) { return y(d.y0 + d.y); })\n+        .attr(\"height\", function(d) { return y(d.y0) - y(d.y0 + d.y); })\n+        .attr(\"width\", x.rangeBand())\n+        .on('mouseover', function(d) {\n+            var tip = '';\n+            var idx = 0;\n+            var _values = timeToValues[d._x]\n+            _values.forEach(function (k) {\n+                tip += labels[idx] + ': ' + k + '   ';\n+                idx += 1;\n+            });\n+            tip += \" at \" + d._x\n+            showBootstrapTooltip(d3.select(this).node(), tip);\n+        })\n+        .on('mouseout',  function() {\n+            hideBootstrapTooltip(d3.select(this).node());\n+        })\n+        .on(\"mousemove\", function(d) {\n+            var xPosition = d3.mouse(this)[0] - 15;\n+            var yPosition = d3.mouse(this)[1] - 25;\n+            tooltip.attr(\"transform\", \"translate(\" + xPosition + \",\" + yPosition + \")\");\n+            tooltip.select(\"text\").text(d.y);\n+        });\n+\n+\n+    // Draw legend\n+    var legend = svg.selectAll(\".legend\")"
  }],
  "prId": 26201
}]