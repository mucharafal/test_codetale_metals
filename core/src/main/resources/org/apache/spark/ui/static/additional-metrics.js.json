[{
  "comments": [{
    "author": {
      "login": "pwendell"
    },
    "body": "This comment is orthogonal to this PR - but do you know how expensive this function is if there are hundreds of thousands of rows?\n",
    "commit": "be6e10a28031a7e67d814b601468b3138e6b5ce3",
    "createdAt": "2014-11-05T21:02:15Z",
    "diffHunk": "@@ -39,6 +39,8 @@ $(function() {\n         var column = \"table .\" + $(this).attr(\"name\");\n         $(column).hide();\n     });\n+    // Stripe table rows after rows have been hidden to ensure correct striping.\n+    stripeTables();",
    "line": 5
  }, {
    "author": {
      "login": "kayousterhout"
    },
    "body": "This striping code is at the frontier of my extremely limited JavaScipt knowledge -- I have no idea how it compares to the default bootstrap striping, which uses CSS\n",
    "commit": "be6e10a28031a7e67d814b601468b3138e6b5ce3",
    "createdAt": "2014-11-05T21:05:12Z",
    "diffHunk": "@@ -39,6 +39,8 @@ $(function() {\n         var column = \"table .\" + $(this).attr(\"name\");\n         $(column).hide();\n     });\n+    // Stripe table rows after rows have been hidden to ensure correct striping.\n+    stripeTables();",
    "line": 5
  }, {
    "author": {
      "login": "pwendell"
    },
    "body": "What if you just write a small program that creates tens of thousands of tasks... can the stage page load without hanging?\n",
    "commit": "be6e10a28031a7e67d814b601468b3138e6b5ce3",
    "createdAt": "2014-11-05T21:16:27Z",
    "diffHunk": "@@ -39,6 +39,8 @@ $(function() {\n         var column = \"table .\" + $(this).attr(\"name\");\n         $(column).hide();\n     });\n+    // Stripe table rows after rows have been hidden to ensure correct striping.\n+    stripeTables();",
    "line": 5
  }, {
    "author": {
      "login": "kayousterhout"
    },
    "body": "A bunch of the additional metrics stuff becomes problematic with thousands of tasks.  The striping stuff is significantly worse than the CSS striping (the CSS striping loads quickly, where as the new JavaScript striping can take as long as 30 seconds after the page loads).  This is semi-easily fixable by only doing the custom striping for the summary table.  But, the page still takes a while to _finish_ loading (you can see it quickly, but it keeps doing JS for a while) because (I think) of the Javascript to hide columns.  It's possible this could be fixed by using an ID rather than classname to find the columns to hide, because the ID query selector is much more efficient.  LMK how much of an issue you think these are and I can file a JIRA appropriately.\n",
    "commit": "be6e10a28031a7e67d814b601468b3138e6b5ce3",
    "createdAt": "2014-11-05T23:18:59Z",
    "diffHunk": "@@ -39,6 +39,8 @@ $(function() {\n         var column = \"table .\" + $(this).attr(\"name\");\n         $(column).hide();\n     });\n+    // Stripe table rows after rows have been hidden to ensure correct striping.\n+    stripeTables();",
    "line": 5
  }],
  "prId": 3117
}]