[{
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "comment is actually more appropriate in `initChannel()` (transferTo is only used w/ the channel).\r\n\r\nbtw, why does `initChannel` set the member variable `outputFileStream`?  Couldn't it just set\r\n\r\n`outputChannel = new FileOutputStream(outputTempFile, true).getChannel();`?",
    "commit": "85a101dff8a7a58d293c283857a219b6e73510de",
    "createdAt": "2019-07-31T18:27:15Z",
    "diffHunk": "@@ -124,6 +137,8 @@ private void cleanUp() throws IOException {\n \n   private void initStream() throws IOException {\n     if (outputFileStream == null) {\n+      // This file needs to opened in append mode in order to work around a Linux kernel bug that\n+      // affects transferTo; see SPARK-3948 for more details."
  }],
  "prId": 25304
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "nit: `&&` goes in previous line",
    "commit": "85a101dff8a7a58d293c283857a219b6e73510de",
    "createdAt": "2019-09-04T17:40:17Z",
    "diffHunk": "@@ -97,6 +98,19 @@ public ShufflePartitionWriter getPartitionWriter(int reducePartitionId) throws I\n \n   @Override\n   public long[] commitAllPartitions() throws IOException {\n+    // Check the position after transferTo loop to see if it is in the right position and raise a\n+    // exception if it is incorrect. The position will not be increased to the expected length\n+    // after calling transferTo in kernel version 2.6.32. This issue is described at\n+    // https://bugs.openjdk.java.net/browse/JDK-7052359 and SPARK-3948.\n+    if (outputFileChannel != null\n+        && outputFileChannel.position() != bytesWrittenToMergedFile) {"
  }],
  "prId": 25304
}]