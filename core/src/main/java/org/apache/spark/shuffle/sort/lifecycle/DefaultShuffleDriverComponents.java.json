[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "Prefer `Collections.emptyMap()`.",
    "commit": "0534e0243dd420b158cfb9e72ee44df1ae9cf16f",
    "createdAt": "2019-09-26T16:01:17Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.shuffle.sort.lifecycle;\n+\n+import java.util.Map;\n+\n+import com.google.common.collect.ImmutableMap;\n+\n+import org.apache.spark.SparkEnv;\n+import org.apache.spark.shuffle.api.ShuffleDriverComponents;\n+import org.apache.spark.storage.BlockManagerMaster;\n+\n+public class DefaultShuffleDriverComponents implements ShuffleDriverComponents {\n+\n+  private BlockManagerMaster blockManagerMaster;\n+\n+  @Override\n+  public Map<String, String> initializeApplication() {\n+    blockManagerMaster = SparkEnv.get().blockManager().master();\n+    return ImmutableMap.of();"
  }],
  "prId": 25823
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "Only called here, so inline?",
    "commit": "0534e0243dd420b158cfb9e72ee44df1ae9cf16f",
    "createdAt": "2019-09-26T16:02:05Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.shuffle.sort.lifecycle;\n+\n+import java.util.Map;\n+\n+import com.google.common.collect.ImmutableMap;\n+\n+import org.apache.spark.SparkEnv;\n+import org.apache.spark.shuffle.api.ShuffleDriverComponents;\n+import org.apache.spark.storage.BlockManagerMaster;\n+\n+public class DefaultShuffleDriverComponents implements ShuffleDriverComponents {\n+\n+  private BlockManagerMaster blockManagerMaster;\n+\n+  @Override\n+  public Map<String, String> initializeApplication() {\n+    blockManagerMaster = SparkEnv.get().blockManager().master();\n+    return ImmutableMap.of();\n+  }\n+\n+  @Override\n+  public void removeShuffle(int shuffleId, boolean blocking) {\n+    checkInitialized();"
  }],
  "prId": 25823
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "This seems to be a new package; seems overkill to add it just to hold one class, unless you have plans to add more stuff here?",
    "commit": "0534e0243dd420b158cfb9e72ee44df1ae9cf16f",
    "createdAt": "2019-09-26T16:02:45Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.shuffle.sort.lifecycle;"
  }, {
    "author": {
      "login": "yifeih"
    },
    "body": "No this was a mistake, thanks for catching that",
    "commit": "0534e0243dd420b158cfb9e72ee44df1ae9cf16f",
    "createdAt": "2019-10-01T22:09:59Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.shuffle.sort.lifecycle;"
  }],
  "prId": 25823
}]