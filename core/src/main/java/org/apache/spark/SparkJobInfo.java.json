[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "can u document what the return string might be?\n",
    "commit": "e6aa78d16314c66903aa7d1d2c52e5237a9a9d0d",
    "createdAt": "2014-10-13T21:36:30Z",
    "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark;\n+\n+/**\n+ * Exposes information about Spark Jobs.\n+ *\n+ * This interface is not designed to be implemented outside of Spark.  We may add additional methods\n+ * which may break binary compatibility with outside implementations.\n+ */\n+public interface SparkJobInfo {\n+  int jobId();\n+  int[] stageIds();\n+  String status();"
  }, {
    "author": {
      "login": "ChengXiangLi"
    },
    "body": "I suppose status here represent job current state, like RUNNING/SUCCEED/FAILED... could we use enum here so that user can switch state instead of a bunch if-else.\n",
    "commit": "e6aa78d16314c66903aa7d1d2c52e5237a9a9d0d",
    "createdAt": "2014-10-14T03:03:54Z",
    "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark;\n+\n+/**\n+ * Exposes information about Spark Jobs.\n+ *\n+ * This interface is not designed to be implemented outside of Spark.  We may add additional methods\n+ * which may break binary compatibility with outside implementations.\n+ */\n+public interface SparkJobInfo {\n+  int jobId();\n+  int[] stageIds();\n+  String status();"
  }],
  "prId": 2696
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "It seems like your goals here are:\n- people shouldn't implement these interfaces\n- people shouldn't be able to instantiate their own objects of these types\n\nInstead of interface / private implementation, how about a `public final class` with a package-private constructor? Seems like this package is the only place where you're actually instantiating these types, so that should work just as well.\n",
    "commit": "e6aa78d16314c66903aa7d1d2c52e5237a9a9d0d",
    "createdAt": "2014-10-14T20:31:08Z",
    "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark;\n+\n+/**\n+ * Exposes information about Spark Jobs.\n+ *\n+ * This interface is not designed to be implemented outside of Spark.  We may add additional methods",
    "line": 23
  }, {
    "author": {
      "login": "JoshRosen"
    },
    "body": "I think that exposing interfaces helps to maximize the flexibility of our internal implementations of Java-friendly classes.  Imagine that I want to have a `private[spark]` method on an object that I expose to users.  If I implement this as a Scala class, my `private[spark]` methods and fields are public from Java users' points of view.  If I implement this as a `public final class` Java with package-private methods, then I need to add a separate class containing \"forwarder\" methods in order to allow the Java package-private methods to be called from Scala subpackages.\n\nThe need for this kind of flexibility isn't much of a concern for this specific case, since SparkJobInfo and SparkStageInfo are simple immutable objects, but it _is_ a problem for classes like TaskContext.  Since other Java-friendly APIs will likely be exposed as interfaces, I was thinking of doing the same here for consistency's sake.\n\nDoes this sound reasonable or are there other approaches / considerations that I'm missing?\n",
    "commit": "e6aa78d16314c66903aa7d1d2c52e5237a9a9d0d",
    "createdAt": "2014-10-14T23:54:49Z",
    "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark;\n+\n+/**\n+ * Exposes information about Spark Jobs.\n+ *\n+ * This interface is not designed to be implemented outside of Spark.  We may add additional methods",
    "line": 23
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "I understand your point, but as you say, that doesn't really apply here. And a final class would avoid the scary comment.\n\nBut not a big deal.\n",
    "commit": "e6aa78d16314c66903aa7d1d2c52e5237a9a9d0d",
    "createdAt": "2014-10-15T00:11:02Z",
    "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark;\n+\n+/**\n+ * Exposes information about Spark Jobs.\n+ *\n+ * This interface is not designed to be implemented outside of Spark.  We may add additional methods",
    "line": 23
  }],
  "prId": 2696
}]