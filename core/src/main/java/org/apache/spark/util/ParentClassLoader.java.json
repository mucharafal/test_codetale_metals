[{
  "comments": [{
    "author": {
      "login": "attilapiros"
    },
    "body": "As I see this also not needed (public in the parent class).",
    "commit": "39a2d1e28a2d30b38cd87e4430c27eb57b2474f2",
    "createdAt": "2019-03-18T19:25:41Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.util;\n+\n+/**\n+ * A class loader which makes some protected methods in ClassLoader accessible.\n+ */\n+public class ParentClassLoader extends ClassLoader {\n+\n+  static {\n+    ClassLoader.registerAsParallelCapable();\n+  }\n+\n+  public ParentClassLoader(ClassLoader parent) {\n+    super(parent);\n+  }\n+\n+  @Override\n+  public Class<?> findClass(String name) throws ClassNotFoundException {\n+    return super.findClass(name);\n+  }\n+\n+  @Override\n+  public Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException {\n+    return super.loadClass(name, resolve);\n+  }\n+\n+  @Override\n+  public Class<?> loadClass(String name) throws ClassNotFoundException {"
  }, {
    "author": {
      "login": "ajithme"
    },
    "body": "removed",
    "commit": "39a2d1e28a2d30b38cd87e4430c27eb57b2474f2",
    "createdAt": "2019-03-19T02:23:27Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.util;\n+\n+/**\n+ * A class loader which makes some protected methods in ClassLoader accessible.\n+ */\n+public class ParentClassLoader extends ClassLoader {\n+\n+  static {\n+    ClassLoader.registerAsParallelCapable();\n+  }\n+\n+  public ParentClassLoader(ClassLoader parent) {\n+    super(parent);\n+  }\n+\n+  @Override\n+  public Class<?> findClass(String name) throws ClassNotFoundException {\n+    return super.findClass(name);\n+  }\n+\n+  @Override\n+  public Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException {\n+    return super.loadClass(name, resolve);\n+  }\n+\n+  @Override\n+  public Class<?> loadClass(String name) throws ClassNotFoundException {"
  }],
  "prId": 24126
}]