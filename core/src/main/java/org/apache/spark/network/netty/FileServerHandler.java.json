[{
  "comments": [{
    "author": {
      "login": "mridulm"
    },
    "body": "This method is incorrect - if channel was writable initially, it will exit immediately without any write.\n\nHas this patch been tested ?\n",
    "commit": "6eb86cf16c962384d4bd38acac1a7f2306c06d6c",
    "createdAt": "2014-07-04T12:52:19Z",
    "diffHunk": "@@ -80,4 +78,11 @@ public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) {\n     LOG.error(\"Exception: \", cause);\n     ctx.close();\n   }\n+\n+  // We want to send right away without over  loading the channel so the busy wait is needed.\n+  private void writeIfPossible(Channel channel, Object object) {\n+    while (!channel.isWritable()) {\n+      channel.writeAndFlush(object);\n+    }\n+  }"
  }, {
    "author": {
      "login": "ngbinh"
    },
    "body": "good catch! Will test it.\n",
    "commit": "6eb86cf16c962384d4bd38acac1a7f2306c06d6c",
    "createdAt": "2014-07-04T13:39:23Z",
    "diffHunk": "@@ -80,4 +78,11 @@ public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) {\n     LOG.error(\"Exception: \", cause);\n     ctx.close();\n   }\n+\n+  // We want to send right away without over  loading the channel so the busy wait is needed.\n+  private void writeIfPossible(Channel channel, Object object) {\n+    while (!channel.isWritable()) {\n+      channel.writeAndFlush(object);\n+    }\n+  }"
  }],
  "prId": 1303
}]