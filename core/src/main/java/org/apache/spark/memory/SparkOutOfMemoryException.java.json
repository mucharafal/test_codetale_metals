[{
  "comments": [{
    "author": {
      "login": "felixcheung"
    },
    "body": "so OutOfMemoryError  subclasses java.lang.Error \r\nwhere as this is subclassing from Exeception, does this matter here?",
    "commit": "f5a5a812ee32994244d29a27ddeb5730748cd212",
    "createdAt": "2018-05-20T21:41:31Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.memory;\n+\n+import org.apache.spark.annotation.Private;\n+\n+/**\n+ * SPARK-24294: To bypass scala bug: https://github.com/scala/bug/issues/9554, we catch\n+ * {@link OutOfMemoryError} in {@link scala.concurrent.Future}'s body, and re-throw\n+ * SparkOutOfMemoryException instead.\n+ */\n+@Private\n+public final class SparkOutOfMemoryException extends Exception {\n+\n+  private OutOfMemoryError oe;"
  }, {
    "author": {
      "login": "jinxing64"
    },
    "body": "@felixcheung  thanks for review.\r\nIn current change there is no SparkOutOfMemoryException. I wrap fatal Throwable in SparkFatalException",
    "commit": "f5a5a812ee32994244d29a27ddeb5730748cd212",
    "createdAt": "2018-05-21T02:15:56Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.memory;\n+\n+import org.apache.spark.annotation.Private;\n+\n+/**\n+ * SPARK-24294: To bypass scala bug: https://github.com/scala/bug/issues/9554, we catch\n+ * {@link OutOfMemoryError} in {@link scala.concurrent.Future}'s body, and re-throw\n+ * SparkOutOfMemoryException instead.\n+ */\n+@Private\n+public final class SparkOutOfMemoryException extends Exception {\n+\n+  private OutOfMemoryError oe;"
  }],
  "prId": 21342
}]