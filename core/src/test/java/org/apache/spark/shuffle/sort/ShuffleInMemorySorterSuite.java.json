[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "explain what / 8 \\* 2 does\n",
    "commit": "1ffb3b99e681a572040777a7c3b9b026d937b683",
    "createdAt": "2016-04-19T07:22:31Z",
    "diffHunk": "@@ -70,14 +73,15 @@ public void testBasicSorting() throws Exception {\n       new TaskMemoryManager(new TestMemoryManager(conf), 0);\n     final MemoryBlock dataPage = memoryManager.allocatePage(2048, null);\n     final Object baseObject = dataPage.getBaseObject();\n-    final ShuffleInMemorySorter sorter = new ShuffleInMemorySorter(consumer, 4);\n+    final ShuffleInMemorySorter sorter = new ShuffleInMemorySorter(\n+      consumer, 4, shouldUseRadixSort());\n     final HashPartitioner hashPartitioner = new HashPartitioner(4);\n \n     // Write the records into the data page and store pointers into the sorter\n     long position = dataPage.getBaseOffset();\n     for (String str : dataToSort) {\n       if (!sorter.hasSpaceForAnotherRecord()) {\n-        sorter.expandPointerArray(consumer.allocateArray(sorter.numRecords() * 2));\n+        sorter.expandPointerArray(consumer.allocateArray(sorter.getMemoryUsage() / 8 * 2));"
  }, {
    "author": {
      "login": "ericl"
    },
    "body": "Done\n",
    "commit": "1ffb3b99e681a572040777a7c3b9b026d937b683",
    "createdAt": "2016-04-19T23:02:04Z",
    "diffHunk": "@@ -70,14 +73,15 @@ public void testBasicSorting() throws Exception {\n       new TaskMemoryManager(new TestMemoryManager(conf), 0);\n     final MemoryBlock dataPage = memoryManager.allocatePage(2048, null);\n     final Object baseObject = dataPage.getBaseObject();\n-    final ShuffleInMemorySorter sorter = new ShuffleInMemorySorter(consumer, 4);\n+    final ShuffleInMemorySorter sorter = new ShuffleInMemorySorter(\n+      consumer, 4, shouldUseRadixSort());\n     final HashPartitioner hashPartitioner = new HashPartitioner(4);\n \n     // Write the records into the data page and store pointers into the sorter\n     long position = dataPage.getBaseOffset();\n     for (String str : dataToSort) {\n       if (!sorter.hasSpaceForAnotherRecord()) {\n-        sorter.expandPointerArray(consumer.allocateArray(sorter.numRecords() * 2));\n+        sorter.expandPointerArray(consumer.allocateArray(sorter.getMemoryUsage() / 8 * 2));"
  }],
  "prId": 12490
}]