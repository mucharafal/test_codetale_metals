[{
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "I dont' think this is what @attilapiros meant.  I think he meant to (a) leave `UnsafeKryoSerializerSuite` as it was before and (b) add a new test which just tested serialization of `RoaringBitmap` with kryo in this class, but didn't tweak confs at all.  That way you'd get a test for serializing with kryo.unsafe=false (here in `KryoSerializerSuite`) and you'd also automatically get a test with kryo.unsafe=true (inherited in `UnsafeKryoSerializerSuite`).",
    "commit": "3397957be459bec29c330011e4ccecc48dd97be6",
    "createdAt": "2019-04-02T04:15:34Z",
    "diffHunk": "@@ -565,6 +565,20 @@ class KryoSerializerAutoResetDisabledSuite extends SparkFunSuite with SharedSpar\n     assert(serInstance.deserialize[Any](serObj) === (obj))\n     assert(serInstance.deserialize[Any](byteBuffer) === (obj))\n   }\n+\n+  test(\"SPARK-27216: Upgrade RoaringBitmap to 0.7.45 to fix Kryo unsafe ser/dser issue\") {\n+    val expected = new RoaringBitmap()\n+    expected.add(1787)\n+\n+    conf.set(KRYO_USE_UNSAFE, true)"
  }, {
    "author": {
      "login": "attilapiros"
    },
    "body": "Exactly. I was about to write a similar comment.",
    "commit": "3397957be459bec29c330011e4ccecc48dd97be6",
    "createdAt": "2019-04-02T04:22:05Z",
    "diffHunk": "@@ -565,6 +565,20 @@ class KryoSerializerAutoResetDisabledSuite extends SparkFunSuite with SharedSpar\n     assert(serInstance.deserialize[Any](serObj) === (obj))\n     assert(serInstance.deserialize[Any](byteBuffer) === (obj))\n   }\n+\n+  test(\"SPARK-27216: Upgrade RoaringBitmap to 0.7.45 to fix Kryo unsafe ser/dser issue\") {\n+    val expected = new RoaringBitmap()\n+    expected.add(1787)\n+\n+    conf.set(KRYO_USE_UNSAFE, true)"
  }],
  "prId": 24264
}]