[{
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "yay!\n",
    "commit": "c7cb04615e702c1b3e0a68b870cdd7fbf6ea58e3",
    "createdAt": "2015-06-03T22:36:08Z",
    "diffHunk": "@@ -106,6 +106,48 @@ class SerializationDebuggerSuite extends SparkFunSuite with BeforeAndAfterEach {\n     assert(s(3).contains(\"writeExternal\"))\n     assert(s(4).contains(\"ExternalizableClass\"))\n   }\n+\n+  test(\"externalizable class writing out serializable objects\") {\n+    assert(find(new ExternalizableClass(new SerializableClass1)).isEmpty)\n+  }\n+\n+  test(\"object containing writeReplace() which returns not serializable object\") {\n+    val s = find(new SerializableClassWithWriteReplace(new NotSerializable))\n+    assert(s.size === 3)\n+    assert(s(0).contains(\"NotSerializable\"))\n+    assert(s(1).contains(\"writeReplace\"))\n+    assert(s(2).contains(\"SerializableClassWithWriteReplace\"))\n+  }\n+\n+  test(\"object containing writeObject() and not serializable field\") {\n+    val s = find(new SerializableClassWithWriteObject(new NotSerializable))\n+    assert(s.size === 3)\n+    assert(s(0).contains(\"NotSerializable\"))\n+    assert(s(1).contains(\"writeObject data\"))\n+    assert(s(2).contains(\"SerializableClassWithWriteObject\"))\n+  }\n+\n+  test(\"object containing writeObject() and serializable field\") {\n+    assert(find(new SerializableClassWithWriteObject(new SerializableClass1)).isEmpty)\n+  }\n+\n+  test(\"object of serializable subclass with more fields than superclass (SPARK-7180)\") {\n+    // This should not throw ArrayOutOfBoundsException\n+    find(new SerializableSubclass(new SerializableClass1))\n+  }\n+\n+  test(\"crazy nested objects\") {\n+    val s = find(\n+      new SerializableClassWithWriteReplace(\n+        new ExternalizableClass(\n+          new SerializableSubclass(\n+            new SerializableArray(\n+              Array(new SerializableClass1, new SerializableClass2(new NotSerializable))\n+            ))))\n+    )\n+    assert(s.nonEmpty)\n+    assert(s.head.contains(\"NotSerializable\"))\n+  }"
  }],
  "prId": 6625
}]