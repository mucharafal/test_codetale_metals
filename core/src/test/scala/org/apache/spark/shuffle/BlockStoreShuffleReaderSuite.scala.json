[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "why this line?",
    "commit": "b07a3b61ba483989b2c205e88cf9fdc73a4205df",
    "createdAt": "2017-05-05T08:51:32Z",
    "diffHunk": "@@ -126,11 +131,21 @@ class BlockStoreShuffleReaderSuite extends SparkFunSuite with LocalSparkContext\n         .set(\"spark.shuffle.compress\", \"false\")\n         .set(\"spark.shuffle.spill.compress\", \"false\"))\n \n+    val taskMemoryManager = mock(classOf[TaskMemoryManager])\n+    when(taskMemoryManager.acquireExecutionMemory(any(), any()))\n+      .thenAnswer(new Answer[Long] {\n+        override def answer(invocation: InvocationOnMock): Long = {\n+          invocation.getArguments()(0).asInstanceOf[Long]\n+        }\n+      })\n+    taskMemoryManager"
  }, {
    "author": {
      "login": "jinxing64"
    },
    "body": "So sorry.",
    "commit": "b07a3b61ba483989b2c205e88cf9fdc73a4205df",
    "createdAt": "2017-05-05T10:02:39Z",
    "diffHunk": "@@ -126,11 +131,21 @@ class BlockStoreShuffleReaderSuite extends SparkFunSuite with LocalSparkContext\n         .set(\"spark.shuffle.compress\", \"false\")\n         .set(\"spark.shuffle.spill.compress\", \"false\"))\n \n+    val taskMemoryManager = mock(classOf[TaskMemoryManager])\n+    when(taskMemoryManager.acquireExecutionMemory(any(), any()))\n+      .thenAnswer(new Answer[Long] {\n+        override def answer(invocation: InvocationOnMock): Long = {\n+          invocation.getArguments()(0).asInstanceOf[Long]\n+        }\n+      })\n+    taskMemoryManager"
  }],
  "prId": 16989
}]