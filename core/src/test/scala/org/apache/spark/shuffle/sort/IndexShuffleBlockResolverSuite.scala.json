[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "shall we also test committing shuffle files multiple times with different shuffle generation ids?",
    "commit": "8873f111f5e1dcd6137396eeda06d7595ac2a72e",
    "createdAt": "2019-06-27T07:48:15Z",
    "diffHunk": "@@ -155,4 +156,19 @@ class IndexShuffleBlockResolverSuite extends SparkFunSuite with BeforeAndAfterEa\n       indexIn2.close()\n     }\n   }\n+\n+  test(\"commit shuffle files multiple times\") {\n+    val shuffleId = 1\n+    val mapId = 2\n+    val idxName = s\"shuffle_${shuffleId}_${mapId}_0.index\"\n+    testWithIndexShuffleBlockResolver(shuffleId, mapId, idxName, -1)\n+  }\n+\n+  test(\"commit shuffle files with shuffle generation id multiple times\") {",
    "line": 70
  }, {
    "author": {
      "login": "xuanyuanking"
    },
    "body": "Thanks for the advice, add a new case in IndexShuffleBlockResolverSuite.scala. Done in 3ec15dc.",
    "commit": "8873f111f5e1dcd6137396eeda06d7595ac2a72e",
    "createdAt": "2019-07-02T06:40:55Z",
    "diffHunk": "@@ -155,4 +156,19 @@ class IndexShuffleBlockResolverSuite extends SparkFunSuite with BeforeAndAfterEa\n       indexIn2.close()\n     }\n   }\n+\n+  test(\"commit shuffle files multiple times\") {\n+    val shuffleId = 1\n+    val mapId = 2\n+    val idxName = s\"shuffle_${shuffleId}_${mapId}_0.index\"\n+    testWithIndexShuffleBlockResolver(shuffleId, mapId, idxName, -1)\n+  }\n+\n+  test(\"commit shuffle files with shuffle generation id multiple times\") {",
    "line": 70
  }],
  "prId": 24892
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "nit: shall we put `generationId` right after `shuffleId`?",
    "commit": "8873f111f5e1dcd6137396eeda06d7595ac2a72e",
    "createdAt": "2019-08-12T13:21:19Z",
    "diffHunk": "@@ -58,10 +61,8 @@ class IndexShuffleBlockResolverSuite extends SparkFunSuite with BeforeAndAfterEa\n     }\n   }\n \n-  test(\"commit shuffle files multiple times\") {\n-    val shuffleId = 1\n-    val mapId = 2\n-    val idxName = s\"shuffle_${shuffleId}_${mapId}_0.index\"\n+  private def testWithIndexShuffleBlockResolver(\n+      shuffleId: Int, mapId: Int, idxName: String, generationId: Int): Unit = {",
    "line": 23
  }],
  "prId": 24892
}]