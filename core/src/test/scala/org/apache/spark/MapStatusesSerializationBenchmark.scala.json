[{
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "avro?",
    "commit": "08c8fb2d79f499b074578991dc217a61d1633bb6",
    "createdAt": "2019-10-16T23:09:22Z",
    "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark\n+\n+import org.apache.spark.benchmark.Benchmark\n+import org.apache.spark.benchmark.BenchmarkBase\n+import org.apache.spark.scheduler.CompressedMapStatus\n+import org.apache.spark.storage.BlockManagerId\n+\n+/**\n+ * Benchmark for MapStatuses serialization performance.\n+ * {{{\n+ *   To run this benchmark:\n+ *   1. without sbt: bin/spark-submit --class <this class>\n+ *        --jars <catalyst test jar>,<core test jar>,<spark-avro jar> <avro test jar>\n+ *   2. build/sbt \"avro/test:runMain <this class>\"\n+ *   3. generate result: SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"core/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/AvroReadBenchmark-results.txt\"."
  }, {
    "author": {
      "login": "dbtsai"
    },
    "body": "Addressed. Thanks. Currently, `BenchmarkBase` only supports time-base benchmarking, and doesn't support else such as data size difference between different codec. I'll submit another PR for benchmarking code to have it merged first. For the data size benchmarking, I'll just use `println` for now, and we can add it into `BenchmarkBase` later.",
    "commit": "08c8fb2d79f499b074578991dc217a61d1633bb6",
    "createdAt": "2019-10-17T23:54:23Z",
    "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark\n+\n+import org.apache.spark.benchmark.Benchmark\n+import org.apache.spark.benchmark.BenchmarkBase\n+import org.apache.spark.scheduler.CompressedMapStatus\n+import org.apache.spark.storage.BlockManagerId\n+\n+/**\n+ * Benchmark for MapStatuses serialization performance.\n+ * {{{\n+ *   To run this benchmark:\n+ *   1. without sbt: bin/spark-submit --class <this class>\n+ *        --jars <catalyst test jar>,<core test jar>,<spark-avro jar> <avro test jar>\n+ *   2. build/sbt \"avro/test:runMain <this class>\"\n+ *   3. generate result: SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"core/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/AvroReadBenchmark-results.txt\"."
  }],
  "prId": 26085
}]