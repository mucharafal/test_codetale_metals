[{
  "comments": [{
    "author": {
      "login": "CodingCat"
    },
    "body": "we do not need \"s\" here?\n",
    "commit": "fe3df4cbd9efa052803f0c3d12544874b649728b",
    "createdAt": "2015-03-06T02:49:41Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.rpc.akka\n+\n+import org.apache.spark.rpc._\n+import org.apache.spark.{SecurityManager, SparkConf}\n+\n+class AkkaRpcEnvSuite extends RpcEnvSuite {\n+\n+  override def createRpcEnv(conf: SparkConf, name: String, port: Int): RpcEnv = {\n+    AkkaRpcEnv(RpcEnvConfig(conf, name, \"localhost\", port, new SecurityManager(conf)))\n+  }\n+\n+  test(\"setupEndpointRef: systemName, address, endpointName\") {\n+    val ref = env.setupEndpoint(\"test_endpoint\", new RpcEndpoint {\n+      override val rpcEnv = env\n+\n+      override def receive = {\n+        case _ =>\n+      }\n+    })\n+    val conf = new SparkConf()\n+    val newRpcEnv =\n+      AkkaRpcEnv(RpcEnvConfig(conf, \"test\", \"localhost\", 12346, new SecurityManager(conf)))\n+    try {\n+      val newRef = newRpcEnv.setupEndpointRef(\"local\", ref.address, \"test_endpoint\")\n+      assert(s\"akka.tcp://local@localhost:12345/user/test_endpoint\" ==="
  }],
  "prId": 4588
}]