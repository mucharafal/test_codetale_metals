[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "So, if it's definitely an `UnsatisfiedLinkError`, I imagine it's sufficient to look for just \"mesos\"? that would differentiate it from not finding other libs without having to depend on the text like this. Would that work?\n",
    "commit": "2c5cd4e0a5bd1f279b281f6533779135834b1071",
    "createdAt": "2015-05-13T12:36:22Z",
    "diffHunk": "@@ -159,7 +159,7 @@ class SparkContextSchedulerCreationSuite\n       assert(sched.backend.getClass === expectedClass)\n     } catch {\n       case e: UnsatisfiedLinkError =>\n-        assert(e.getMessage.contains(\"no mesos in\"))\n+        assert(e.getMessage.contains(\"no mesos in\") || e.getMessage.contains(\"mesos (Not found in java.library.path)\"))"
  }, {
    "author": {
      "login": "tellison"
    },
    "body": "That would work for me.  I'll update.\n",
    "commit": "2c5cd4e0a5bd1f279b281f6533779135834b1071",
    "createdAt": "2015-05-13T13:49:00Z",
    "diffHunk": "@@ -159,7 +159,7 @@ class SparkContextSchedulerCreationSuite\n       assert(sched.backend.getClass === expectedClass)\n     } catch {\n       case e: UnsatisfiedLinkError =>\n-        assert(e.getMessage.contains(\"no mesos in\"))\n+        assert(e.getMessage.contains(\"no mesos in\") || e.getMessage.contains(\"mesos (Not found in java.library.path)\"))"
  }],
  "prId": 6119
}]