[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "Can you add more comments on what each of these sets of asserts test? Since it all inside \"basic functions\" its hard to understand what are actually being tested. Actually this one unit test \" basic functions\" is fairly long. If it doesnt affect efficiency much, I suggest breaking it into multiple unit tests. \n\nTL;DR either add intermediate comments OR break it down into smaller parts.\n",
    "commit": "df2c1d8579e3643e646a1f37534cc4cfb2c7db54",
    "createdAt": "2015-07-01T08:34:41Z",
    "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.storage\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.scheduler._\n+\n+class BlockStatusListenerSuite extends SparkFunSuite {\n+\n+  test(\"basic functions\") {\n+    val blockManagerId = BlockManagerId(\"0\", \"localhost\", 10000)\n+    val listener = new BlockStatusListener()\n+    listener.onBlockManagerAdded(SparkListenerBlockManagerAdded(0, blockManagerId, 0))\n+    listener.onBlockUpdated(SparkListenerBlockUpdated(\n+      BlockUpdatedInfo(\n+        blockManagerId,\n+        StreamBlockId(0, 100),\n+        StorageLevel.MEMORY_AND_DISK,\n+        memSize = 100,\n+        diskSize = 100,\n+        externalBlockStoreSize = 0)))\n+    val blocks = listener.allBlocks\n+    assert(blocks.size === 1)"
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "Added more comments and rewrote the asserts for readability.\n\nBreaking into small unit tests needs many duplicate codes to construct the test cases. So I just added comments.\n",
    "commit": "df2c1d8579e3643e646a1f37534cc4cfb2c7db54",
    "createdAt": "2015-07-01T09:28:24Z",
    "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.storage\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.scheduler._\n+\n+class BlockStatusListenerSuite extends SparkFunSuite {\n+\n+  test(\"basic functions\") {\n+    val blockManagerId = BlockManagerId(\"0\", \"localhost\", 10000)\n+    val listener = new BlockStatusListener()\n+    listener.onBlockManagerAdded(SparkListenerBlockManagerAdded(0, blockManagerId, 0))\n+    listener.onBlockUpdated(SparkListenerBlockUpdated(\n+      BlockUpdatedInfo(\n+        blockManagerId,\n+        StreamBlockId(0, 100),\n+        StorageLevel.MEMORY_AND_DISK,\n+        memSize = 100,\n+        diskSize = 100,\n+        externalBlockStoreSize = 0)))\n+    val blocks = listener.allBlocks\n+    assert(blocks.size === 1)"
  }],
  "prId": 6672
}]