[{
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "would be nice to add comment here about 123456 value - ie it being larger than maxSplitSize \r\nAlso can we move this down into the test itself",
    "commit": "bcb2991b278cafb2f163bae0069293c61b939898",
    "createdAt": "2018-07-09T15:55:43Z",
    "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.input\n+\n+import java.io.{DataOutputStream, File, FileOutputStream}\n+\n+import scala.collection.immutable.IndexedSeq\n+\n+import org.scalatest.BeforeAndAfterAll\n+\n+import org.apache.spark.{SparkConf, SparkContext, SparkFunSuite}\n+import org.apache.spark.internal.Logging\n+import org.apache.spark.util.Utils\n+\n+/**\n+ * Tests the correctness of\n+ * [[org.apache.spark.input.WholeTextFileInputFormat WholeTextFileInputFormat]]. A temporary\n+ * directory containing files is created as fake input which is deleted in the end.\n+ */\n+class WholeTextFileInputFormatSuite extends SparkFunSuite with BeforeAndAfterAll with Logging {\n+  private var sc: SparkContext = _\n+\n+  override def beforeAll() {\n+    super.beforeAll()\n+    val conf = new SparkConf()\n+    sc = new SparkContext(\"local\", \"test\", conf)\n+\n+    sc.hadoopConfiguration.setLong(\"mapreduce.input.fileinputformat.split.minsize.per.node\", 123456)"
  }],
  "prId": 21601
}]