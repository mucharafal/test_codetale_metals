[{
  "comments": [{
    "author": {
      "login": "advancedxy"
    },
    "body": "Should I just use primitive wrapper classes or create dummy classes?\n",
    "commit": "c4dcb411ce38eff25204dff487335e39b986cb05",
    "createdAt": "2015-02-26T06:59:42Z",
    "diffHunk": "@@ -59,6 +59,13 @@ class SizeEstimatorSuite\n     assertResult(24)(SizeEstimator.estimate(new DummyClass4(null)))\n     assertResult(48)(SizeEstimator.estimate(new DummyClass4(new DummyClass3)))\n   }\n+  \n+  test(\"primitive wrapper objects\") {"
  }],
  "prId": 4783
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Don't change this, but FYI 1.0f is a float and 1.0 is a double.\n",
    "commit": "c4dcb411ce38eff25204dff487335e39b986cb05",
    "createdAt": "2015-05-01T10:39:29Z",
    "diffHunk": "@@ -59,6 +68,22 @@ class SizeEstimatorSuite\n     assertResult(24)(SizeEstimator.estimate(new DummyClass4(null)))\n     assertResult(48)(SizeEstimator.estimate(new DummyClass4(new DummyClass3)))\n   }\n+  \n+  test(\"primitive wrapper objects\") {\n+    assertResult(16)(SizeEstimator.estimate(new java.lang.Boolean(true)))\n+    assertResult(16)(SizeEstimator.estimate(new java.lang.Byte(\"1\")))\n+    assertResult(16)(SizeEstimator.estimate(new java.lang.Character('1')))\n+    assertResult(16)(SizeEstimator.estimate(new java.lang.Short(\"1\")))\n+    assertResult(16)(SizeEstimator.estimate(new java.lang.Integer(1)))\n+    assertResult(24)(SizeEstimator.estimate(new java.lang.Long(1)))\n+    assertResult(16)(SizeEstimator.estimate(new java.lang.Float(1.0)))",
    "line": 35
  }, {
    "author": {
      "login": "advancedxy"
    },
    "body": "Thanks.  I do know 1.0 is a double. Maybe I didn't think clearly when I was writing the test cases. Just leave it? \n",
    "commit": "c4dcb411ce38eff25204dff487335e39b986cb05",
    "createdAt": "2015-05-01T11:47:32Z",
    "diffHunk": "@@ -59,6 +68,22 @@ class SizeEstimatorSuite\n     assertResult(24)(SizeEstimator.estimate(new DummyClass4(null)))\n     assertResult(48)(SizeEstimator.estimate(new DummyClass4(new DummyClass3)))\n   }\n+  \n+  test(\"primitive wrapper objects\") {\n+    assertResult(16)(SizeEstimator.estimate(new java.lang.Boolean(true)))\n+    assertResult(16)(SizeEstimator.estimate(new java.lang.Byte(\"1\")))\n+    assertResult(16)(SizeEstimator.estimate(new java.lang.Character('1')))\n+    assertResult(16)(SizeEstimator.estimate(new java.lang.Short(\"1\")))\n+    assertResult(16)(SizeEstimator.estimate(new java.lang.Integer(1)))\n+    assertResult(24)(SizeEstimator.estimate(new java.lang.Long(1)))\n+    assertResult(16)(SizeEstimator.estimate(new java.lang.Float(1.0)))",
    "line": 35
  }],
  "prId": 4783
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "I'm worried that setting the system props above like `os.arch` is going to pollute the JVM state for other tests. It should be restored.\n",
    "commit": "c4dcb411ce38eff25204dff487335e39b986cb05",
    "createdAt": "2015-05-01T10:43:54Z",
    "diffHunk": "@@ -135,5 +160,20 @@ class SizeEstimatorSuite\n     assertResult(64)(SizeEstimator.estimate(DummyString(\"a\")))\n     assertResult(64)(SizeEstimator.estimate(DummyString(\"ab\")))\n     assertResult(72)(SizeEstimator.estimate(DummyString(\"abcdefgh\")))\n+    "
  }, {
    "author": {
      "login": "advancedxy"
    },
    "body": "I didn't consider that. But after a look at the code, It seems the `ResetSystemProperties` trait already takes care of that.\n",
    "commit": "c4dcb411ce38eff25204dff487335e39b986cb05",
    "createdAt": "2015-05-01T12:04:32Z",
    "diffHunk": "@@ -135,5 +160,20 @@ class SizeEstimatorSuite\n     assertResult(64)(SizeEstimator.estimate(DummyString(\"a\")))\n     assertResult(64)(SizeEstimator.estimate(DummyString(\"ab\")))\n     assertResult(72)(SizeEstimator.estimate(DummyString(\"abcdefgh\")))\n+    "
  }],
  "prId": 4783
}]