[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "nit: these imports should come before `org.apache.spark`. Also, nuke one of the empty lines before the class declaration.\n",
    "commit": "8f1b6d98e986d576edf36021b4b8a4bc39f884e3",
    "createdAt": "2015-10-14T16:43:44Z",
    "diffHunk": "@@ -19,9 +19,15 @@ package org.apache.spark.util\n \n import java.net.URLClassLoader\n \n+import scala.collection.JavaConverters._\n+\n import org.apache.spark.{SparkContext, SparkException, SparkFunSuite, TestUtils}\n \n-class MutableURLClassLoaderSuite extends SparkFunSuite {\n+import org.scalatest.Matchers"
  }],
  "prId": 9106
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "ah, missed this before, but tests should use `===`. Other than that, patch looks good.\n",
    "commit": "8f1b6d98e986d576edf36021b4b8a4bc39f884e3",
    "createdAt": "2015-10-14T22:10:27Z",
    "diffHunk": "@@ -68,6 +79,33 @@ class MutableURLClassLoaderSuite extends SparkFunSuite {\n     }\n   }\n \n+  test(\"default JDK classloader get resources\") {\n+    val parentLoader = new URLClassLoader(fileUrlsParent, null)\n+    val classLoader = new URLClassLoader(fileUrlsChild, parentLoader)\n+    assert(classLoader.getResources(\"resource1\").asScala.size == 2)\n+    assert(classLoader.getResources(\"resource2\").asScala.size == 1)\n+  }\n+\n+  test(\"parent first get resources\") {\n+    val parentLoader = new URLClassLoader(fileUrlsParent, null)\n+    val classLoader = new MutableURLClassLoader(fileUrlsChild, parentLoader)\n+    assert(classLoader.getResources(\"resource1\").asScala.size == 2)\n+    assert(classLoader.getResources(\"resource2\").asScala.size == 1)\n+  }\n+\n+  test(\"child first get resources\") {\n+    val parentLoader = new URLClassLoader(fileUrlsParent, null)\n+    val classLoader = new ChildFirstURLClassLoader(fileUrlsChild, parentLoader)\n+\n+    val res1 = classLoader.getResources(\"resource1\").asScala.toList\n+    assert(res1.size == 2)\n+    assert(classLoader.getResources(\"resource2\").asScala.size == 1)"
  }],
  "prId": 9106
}]