[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "one extra empty line\n",
    "commit": "208db9b70eb601af63265739d482db5dbc3f3dfc",
    "createdAt": "2014-03-06T22:14:57Z",
    "diffHunk": "@@ -48,6 +48,20 @@ class RandomSamplerSuite extends FunSuite with BeforeAndAfter with EasyMockSugar\n     }\n   }\n \n+  test(\"BernoulliSamplerWithRangeInverse\") {\n+    expecting {\n+      for(x <- Seq(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)) {\n+        random.nextDouble().andReturn(x)\n+      }\n+    }\n+    whenExecuting(random)\n+    {\n+      val sampler = new BernoulliSampler[Int](0.25, 0.55, true)(random)\n+      assert(sampler.sample(a.iterator).toList === List(1, 2, 6, 7, 8, 9))\n+    }\n+  }\n+\n+"
  }],
  "prId": 18
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "`{` should stay with `whenExecuting(random)`\n",
    "commit": "208db9b70eb601af63265739d482db5dbc3f3dfc",
    "createdAt": "2014-04-09T20:23:35Z",
    "diffHunk": "@@ -48,6 +48,19 @@ class RandomSamplerSuite extends FunSuite with BeforeAndAfter with EasyMockSugar\n     }\n   }\n \n+  test(\"BernoulliSamplerWithRangeInverse\") {\n+    expecting {\n+      for(x <- Seq(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9)) {\n+        random.nextDouble().andReturn(x)\n+      }\n+    }\n+    whenExecuting(random)\n+    {"
  }],
  "prId": 18
}]