[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "nit: indentation was correct before.",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-04-28T23:34:34Z",
    "diffHunk": "@@ -130,9 +129,9 @@ class TestCredentialProvider extends ServiceCredentialProvider {\n   override def credentialsRequired(conf: Configuration): Boolean = true\n \n   override def obtainCredentials(\n-      hadoopConf: Configuration,\n-      sparkConf: SparkConf,\n-      creds: Credentials): Option[Long] = {\n+    hadoopConf: Configuration,"
  }],
  "prId": 17723
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "What is the reason that this test case is removed? ",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-19T19:04:37Z",
    "diffHunk": "@@ -64,36 +57,22 @@ class ConfigurableCredentialManagerSuite extends SparkFunSuite with Matchers wit\n \n   test(\"using deprecated configurations\") {\n     sparkConf.set(\"spark.yarn.security.tokens.hadoopfs.enabled\", \"false\")\n-    sparkConf.set(\"spark.yarn.security.tokens.hive.enabled\", \"false\")\n+    sparkConf.set(\"spark.yarn.security.credentials.hive.enabled\", \"false\")\n     credentialManager = new ConfigurableCredentialManager(sparkConf, hadoopConf)\n \n     credentialManager.getServiceCredentialProvider(\"hadoopfs\") should be (None)\n     credentialManager.getServiceCredentialProvider(\"hive\") should be (None)\n-    credentialManager.getServiceCredentialProvider(\"test\") should not be (None)\n     credentialManager.getServiceCredentialProvider(\"hbase\") should not be (None)\n   }\n \n-  test(\"verify obtaining credentials from provider\") {\n+  test(\"verify no credentials are obtained\") {\n     credentialManager = new ConfigurableCredentialManager(sparkConf, hadoopConf)\n     val creds = new Credentials()\n \n-    // Tokens can only be obtained from TestTokenProvider, for hdfs, hbase and hive tokens cannot\n-    // be obtained.\n+    // Tokens cannot be obtained from HDFS, Hive, HBase in unit tests.\n     credentialManager.obtainCredentials(hadoopConf, creds)\n     val tokens = creds.getAllTokens\n-    tokens.size() should be (1)\n-    tokens.iterator().next().getService should be (new Text(\"test\"))\n-  }\n-\n-  test(\"verify getting credential renewal info\") {"
  }, {
    "author": {
      "login": "mgummelt"
    },
    "body": "ConfigurableCredentialManager no longer supports service loading, and the service loaded `TestCredentialProvider` was the only provider that returned a renewal time.",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-05-24T00:50:50Z",
    "diffHunk": "@@ -64,36 +57,22 @@ class ConfigurableCredentialManagerSuite extends SparkFunSuite with Matchers wit\n \n   test(\"using deprecated configurations\") {\n     sparkConf.set(\"spark.yarn.security.tokens.hadoopfs.enabled\", \"false\")\n-    sparkConf.set(\"spark.yarn.security.tokens.hive.enabled\", \"false\")\n+    sparkConf.set(\"spark.yarn.security.credentials.hive.enabled\", \"false\")\n     credentialManager = new ConfigurableCredentialManager(sparkConf, hadoopConf)\n \n     credentialManager.getServiceCredentialProvider(\"hadoopfs\") should be (None)\n     credentialManager.getServiceCredentialProvider(\"hive\") should be (None)\n-    credentialManager.getServiceCredentialProvider(\"test\") should not be (None)\n     credentialManager.getServiceCredentialProvider(\"hbase\") should not be (None)\n   }\n \n-  test(\"verify obtaining credentials from provider\") {\n+  test(\"verify no credentials are obtained\") {\n     credentialManager = new ConfigurableCredentialManager(sparkConf, hadoopConf)\n     val creds = new Credentials()\n \n-    // Tokens can only be obtained from TestTokenProvider, for hdfs, hbase and hive tokens cannot\n-    // be obtained.\n+    // Tokens cannot be obtained from HDFS, Hive, HBase in unit tests.\n     credentialManager.obtainCredentials(hadoopConf, creds)\n     val tokens = creds.getAllTokens\n-    tokens.size() should be (1)\n-    tokens.iterator().next().getService should be (new Text(\"test\"))\n-  }\n-\n-  test(\"verify getting credential renewal info\") {"
  }],
  "prId": 17723
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "I see you're changing the calls because of the API change, but they still all fit in one line.",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-06-07T22:18:35Z",
    "diffHunk": "@@ -104,7 +96,9 @@ class ConfigurableCredentialManagerSuite extends SparkFunSuite with Matchers wit\n \n     val hiveCredentialProvider = new HiveCredentialProvider()\n     val credentials = new Credentials()\n-    hiveCredentialProvider.obtainCredentials(hadoopConf, sparkConf, credentials)\n+    hiveCredentialProvider.obtainCredentials("
  }, {
    "author": {
      "login": "mgummelt"
    },
    "body": "fixed et al",
    "commit": "c4149ddb940c32285fde8b1c08a5b212fced5d66",
    "createdAt": "2017-06-08T21:23:45Z",
    "diffHunk": "@@ -104,7 +96,9 @@ class ConfigurableCredentialManagerSuite extends SparkFunSuite with Matchers wit\n \n     val hiveCredentialProvider = new HiveCredentialProvider()\n     val credentials = new Credentials()\n-    hiveCredentialProvider.obtainCredentials(hadoopConf, sparkConf, credentials)\n+    hiveCredentialProvider.obtainCredentials("
  }],
  "prId": 17723
}]