[{
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "Not your change, but this should not be a valid jar URL right? My understanding is that one or three slashes are valid, but not two.\n",
    "commit": "82bc9cc2d96aa70b786dcd0f39fbe93f8abb4ecc",
    "createdAt": "2014-11-18T00:15:38Z",
    "diffHunk": "@@ -24,6 +24,7 @@ class ClientSuite extends FunSuite with Matchers {\n   test(\"correctly validates driver jar URL's\") {\n     ClientArguments.isValidJarUrl(\"http://someHost:8080/foo.jar\") should be (true)\n     ClientArguments.isValidJarUrl(\"file://some/path/to/a/jarFile.jar\") should be (true)"
  }],
  "prId": 3326
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "This comment is wrong. The URI fails validation because it doesn't have a path, not because it doesn't have an authority (which it does).\n",
    "commit": "82bc9cc2d96aa70b786dcd0f39fbe93f8abb4ecc",
    "createdAt": "2014-11-18T03:04:49Z",
    "diffHunk": "@@ -23,12 +23,26 @@ import org.scalatest.Matchers\n class ClientSuite extends FunSuite with Matchers {\n   test(\"correctly validates driver jar URL's\") {\n     ClientArguments.isValidJarUrl(\"http://someHost:8080/foo.jar\") should be (true)\n-    ClientArguments.isValidJarUrl(\"file://some/path/to/a/jarFile.jar\") should be (true)\n+\n+    // file scheme with authority is valid.\n+    ClientArguments.isValidJarUrl(\"file://somehost/path/to/a/jarFile.jar\") should be (true)\n+\n+    // file scheme without authority is not valid."
  }],
  "prId": 3326
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "Same: validation fails becase URI has no path, not because it doesn't have an authority.\n",
    "commit": "82bc9cc2d96aa70b786dcd0f39fbe93f8abb4ecc",
    "createdAt": "2014-11-18T03:07:56Z",
    "diffHunk": "@@ -23,12 +23,26 @@ import org.scalatest.Matchers\n class ClientSuite extends FunSuite with Matchers {\n   test(\"correctly validates driver jar URL's\") {\n     ClientArguments.isValidJarUrl(\"http://someHost:8080/foo.jar\") should be (true)\n-    ClientArguments.isValidJarUrl(\"file://some/path/to/a/jarFile.jar\") should be (true)\n+\n+    // file scheme with authority is valid.\n+    ClientArguments.isValidJarUrl(\"file://somehost/path/to/a/jarFile.jar\") should be (true)\n+\n+    // file scheme without authority is not valid.\n+    ClientArguments.isValidJarUrl(\"file://jarFile.jar\") should be (false)\n+\n+    // file scheme without authority but with triple slash is valid.\n+    ClientArguments.isValidJarUrl(\"file:///some/path/to/a/jarFile.jar\") should be (true)\n     ClientArguments.isValidJarUrl(\"hdfs://someHost:1234/foo.jar\") should be (true)\n \n     ClientArguments.isValidJarUrl(\"hdfs://someHost:1234/foo\") should be (false)\n     ClientArguments.isValidJarUrl(\"/missing/a/protocol/jarfile.jar\") should be (false)\n     ClientArguments.isValidJarUrl(\"not-even-a-path.jar\") should be (false)\n+\n+    // No authority"
  }],
  "prId": 3326
}, {
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "Wait, why is this valid?\n",
    "commit": "82bc9cc2d96aa70b786dcd0f39fbe93f8abb4ecc",
    "createdAt": "2014-11-18T19:09:22Z",
    "diffHunk": "@@ -23,12 +23,27 @@ import org.scalatest.Matchers\n class ClientSuite extends FunSuite with Matchers {\n   test(\"correctly validates driver jar URL's\") {\n     ClientArguments.isValidJarUrl(\"http://someHost:8080/foo.jar\") should be (true)\n-    ClientArguments.isValidJarUrl(\"file://some/path/to/a/jarFile.jar\") should be (true)\n+\n+    // file scheme with authority and path is valid.\n+    ClientArguments.isValidJarUrl(\"file://somehost/path/to/a/jarFile.jar\") should be (true)",
    "line": 7
  }],
  "prId": 3326
}]