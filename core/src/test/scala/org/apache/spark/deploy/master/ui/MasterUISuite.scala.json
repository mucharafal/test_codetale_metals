[{
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "nit: import ordering, see https://cwiki.apache.org/confluence/display/SPARK/Spark+Code+Style+Guide#SparkCodeStyleGuide-Imports\n",
    "commit": "c29fe8b3819fc862d324ab2f78dae8ed0edbdbdb",
    "createdAt": "2015-11-06T14:55:56Z",
    "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.master.ui\n+\n+import java.util.Date\n+\n+import org.apache.spark.{SparkConf, SecurityManager, SparkFunSuite}\n+import org.apache.spark.deploy.DeployMessages.MasterStateResponse\n+import org.apache.spark.deploy.DeployTestUtils._\n+import org.apache.spark.deploy.master._\n+import org.apache.spark.rpc.RpcEnv\n+import org.json4s.JsonAST.{JNothing, JString, JInt}\n+\n+import scala.io.Source\n+import scala.language.postfixOps\n+\n+import org.json4s.jackson.JsonMethods._\n+import org.mockito.Mockito.{mock, when}\n+import org.scalatest.concurrent.Eventually\n+import org.scalatest.{Matchers, PrivateMethodTester}"
  }],
  "prId": 9472
}, {
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "can you rename this to MasterWebUISuite?  will be easier for others to find in the future\n",
    "commit": "c29fe8b3819fc862d324ab2f78dae8ed0edbdbdb",
    "createdAt": "2015-11-06T14:56:42Z",
    "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.master.ui\n+\n+import java.util.Date\n+\n+import org.apache.spark.{SparkConf, SecurityManager, SparkFunSuite}\n+import org.apache.spark.deploy.DeployMessages.MasterStateResponse\n+import org.apache.spark.deploy.DeployTestUtils._\n+import org.apache.spark.deploy.master._\n+import org.apache.spark.rpc.RpcEnv\n+import org.json4s.JsonAST.{JNothing, JString, JInt}\n+\n+import scala.io.Source\n+import scala.language.postfixOps\n+\n+import org.json4s.jackson.JsonMethods._\n+import org.mockito.Mockito.{mock, when}\n+import org.scalatest.concurrent.Eventually\n+import org.scalatest.{Matchers, PrivateMethodTester}\n+\n+\n+class MasterUISuite extends SparkFunSuite with Matchers with Eventually with PrivateMethodTester {"
  }, {
    "author": {
      "login": "squito"
    },
    "body": "also, you're not using `Matchers`, `Eventually`, or `PrivateMethodTester`, so you can remove them.\n",
    "commit": "c29fe8b3819fc862d324ab2f78dae8ed0edbdbdb",
    "createdAt": "2015-11-06T15:02:45Z",
    "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.master.ui\n+\n+import java.util.Date\n+\n+import org.apache.spark.{SparkConf, SecurityManager, SparkFunSuite}\n+import org.apache.spark.deploy.DeployMessages.MasterStateResponse\n+import org.apache.spark.deploy.DeployTestUtils._\n+import org.apache.spark.deploy.master._\n+import org.apache.spark.rpc.RpcEnv\n+import org.json4s.JsonAST.{JNothing, JString, JInt}\n+\n+import scala.io.Source\n+import scala.language.postfixOps\n+\n+import org.json4s.jackson.JsonMethods._\n+import org.mockito.Mockito.{mock, when}\n+import org.scalatest.concurrent.Eventually\n+import org.scalatest.{Matchers, PrivateMethodTester}\n+\n+\n+class MasterUISuite extends SparkFunSuite with Matchers with Eventually with PrivateMethodTester {"
  }],
  "prId": 9472
}, {
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "be sure to stop the server after the test, even if the test fails.  You can use try / finally for this one test, or the `BeforeAndAfter` trait to do it for all tests.  Doesn't particularly matter since its just one test here, but I'd slightly prefer before & after so its easier to add more tests.\n",
    "commit": "c29fe8b3819fc862d324ab2f78dae8ed0edbdbdb",
    "createdAt": "2015-11-06T15:08:47Z",
    "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.deploy.master.ui\n+\n+import java.util.Date\n+\n+import org.apache.spark.{SparkConf, SecurityManager, SparkFunSuite}\n+import org.apache.spark.deploy.DeployMessages.MasterStateResponse\n+import org.apache.spark.deploy.DeployTestUtils._\n+import org.apache.spark.deploy.master._\n+import org.apache.spark.rpc.RpcEnv\n+import org.json4s.JsonAST.{JNothing, JString, JInt}\n+\n+import scala.io.Source\n+import scala.language.postfixOps\n+\n+import org.json4s.jackson.JsonMethods._\n+import org.mockito.Mockito.{mock, when}\n+import org.scalatest.concurrent.Eventually\n+import org.scalatest.{Matchers, PrivateMethodTester}\n+\n+\n+class MasterUISuite extends SparkFunSuite with Matchers with Eventually with PrivateMethodTester {\n+\n+  test(\"list applications\") {\n+    val masterPage = mock(classOf[MasterPage])\n+    val master = {\n+      val conf = new SparkConf\n+      val securityMgr = new SecurityManager(conf)\n+      val rpcEnv = RpcEnv.create(Master.SYSTEM_NAME, \"localhost\", 0, conf, securityMgr)\n+      val master = new Master(rpcEnv, rpcEnv.address, 0, securityMgr, conf)\n+      master\n+    }\n+    val masterWebUI = new MasterWebUI(master, 0, customMasterPage = Some(masterPage))\n+\n+    val worker = createWorkerInfo()\n+    val appDesc = createAppDesc()\n+    // use new start date so it isn't filtered by UI\n+    val activeApp = new ApplicationInfo(\n+      new Date().getTime, \"id\", appDesc, new Date(), null, Int.MaxValue)\n+    activeApp.addExecutor(worker, 2)\n+\n+    val workers = Array[WorkerInfo](worker)\n+    val activeApps = Array(activeApp)\n+    val completedApps = Array[ApplicationInfo]()\n+    val activeDrivers = Array[DriverInfo]()\n+    val completedDrivers = Array[DriverInfo]()\n+    val stateResponse = new MasterStateResponse(\n+      \"host\", 8080, None, workers, activeApps, completedApps,\n+      activeDrivers, completedDrivers, RecoveryState.ALIVE)\n+\n+    when(masterPage.getMasterState).thenReturn(stateResponse)\n+\n+    masterWebUI.bind()\n+    val resultJson = Source.fromURL(\n+      s\"http://localhost:${masterWebUI.boundPort}/api/v1/applications\")\n+      .mkString\n+    val parsedJson = parse(resultJson)\n+    val firstApp = parsedJson(0)\n+\n+    assert(firstApp \\ \"id\" === JString(activeApp.id))\n+    assert(firstApp \\ \"name\" === JString(activeApp.desc.name))\n+    assert(firstApp \\ \"coresGranted\" === JInt(2))\n+    assert(firstApp \\ \"maxCores\" === JInt(4))\n+    assert(firstApp \\ \"memoryPerExecutorMB\" === JInt(1234))\n+    assert(firstApp \\ \"coresPerExecutor\" === JNothing)"
  }],
  "prId": 9472
}]