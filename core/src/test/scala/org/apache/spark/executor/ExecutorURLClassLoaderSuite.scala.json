[{
  "comments": [{
    "author": {
      "login": "stephenh"
    },
    "body": "This 2nd loadClass would cause the LinkageError.\n",
    "commit": "dabcd35e130141b5548095c73def6dd80af996b0",
    "createdAt": "2014-12-17T20:29:20Z",
    "diffHunk": "@@ -37,6 +37,8 @@ class ExecutorURLClassLoaderSuite extends FunSuite {\n     val fakeClass = classLoader.loadClass(\"FakeClass2\").newInstance()\n     val fakeClassVersion = fakeClass.toString\n     assert(fakeClassVersion === \"1\")\n+    val fakeClass2 = classLoader.loadClass(\"FakeClass2\").newInstance()",
    "line": 23
  }, {
    "author": {
      "login": "holdenk"
    },
    "body": "Good catch :) Out of interest, did someone observe this in production or was the classloader protected from this unsafe access pattern through how set the classloader?\n",
    "commit": "dabcd35e130141b5548095c73def6dd80af996b0",
    "createdAt": "2014-12-19T20:04:02Z",
    "diffHunk": "@@ -37,6 +37,8 @@ class ExecutorURLClassLoaderSuite extends FunSuite {\n     val fakeClass = classLoader.loadClass(\"FakeClass2\").newInstance()\n     val fakeClassVersion = fakeClass.toString\n     assert(fakeClassVersion === \"1\")\n+    val fakeClass2 = classLoader.loadClass(\"FakeClass2\").newInstance()",
    "line": 23
  }, {
    "author": {
      "login": "stephenh"
    },
    "body": "I saw the LinkageError running a job; it went through the first stage just fine, but blew up on the 2nd stage; the error was:\n\n java.lang.LinkageError (loader (instance of  org/apache/spark/executor/ChildExecutorURLClassLoader$userClassLoader$): attempted  duplicate class definition for name: \"com/...one of our classes...\") [duplicate 35]\n",
    "commit": "dabcd35e130141b5548095c73def6dd80af996b0",
    "createdAt": "2014-12-19T20:11:45Z",
    "diffHunk": "@@ -37,6 +37,8 @@ class ExecutorURLClassLoaderSuite extends FunSuite {\n     val fakeClass = classLoader.loadClass(\"FakeClass2\").newInstance()\n     val fakeClassVersion = fakeClass.toString\n     assert(fakeClassVersion === \"1\")\n+    val fakeClass2 = classLoader.loadClass(\"FakeClass2\").newInstance()",
    "line": 23
  }, {
    "author": {
      "login": "holdenk"
    },
    "body": "thats bad :( Well glad we have a fix now :) Thanks!\n",
    "commit": "dabcd35e130141b5548095c73def6dd80af996b0",
    "createdAt": "2014-12-19T20:26:07Z",
    "diffHunk": "@@ -37,6 +37,8 @@ class ExecutorURLClassLoaderSuite extends FunSuite {\n     val fakeClass = classLoader.loadClass(\"FakeClass2\").newInstance()\n     val fakeClassVersion = fakeClass.toString\n     assert(fakeClassVersion === \"1\")\n+    val fakeClass2 = classLoader.loadClass(\"FakeClass2\").newInstance()",
    "line": 23
  }],
  "prId": 3725
}]