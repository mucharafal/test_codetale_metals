[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "As above, how about defining and equals method in ResourceInformation? you get this for free with a case class",
    "commit": "82cd1e35bdc7caaddb4122060d8fd6b98893cbb6",
    "createdAt": "2019-04-15T14:08:15Z",
    "diffHunk": "@@ -82,6 +87,19 @@ class TaskDescriptionSuite extends SparkFunSuite {\n     assert(decodedTaskDescription.addedFiles.equals(originalFiles))\n     assert(decodedTaskDescription.addedJars.equals(originalJars))\n     assert(decodedTaskDescription.properties.equals(originalTaskDescription.properties))\n+    assert(equalResources(decodedTaskDescription.resources, originalTaskDescription.resources))\n     assert(decodedTaskDescription.serializedTask.equals(taskBuffer))\n+\n+    def equalResources(original: Map[String, ResourceInformation],\n+        target: Map[String, ResourceInformation]): Boolean = {\n+      original.size == target.size && original.forall { case (name, info) =>\n+        target.get(name).exists { targetInfo =>\n+          info.getName().equals(targetInfo.getName()) &&"
  }],
  "prId": 24374
}]