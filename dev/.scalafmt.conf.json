[{
  "comments": [{
    "author": {
      "login": "dbtsai"
    },
    "body": "Are we using 100 for maxColumn?",
    "commit": "92dd105b4f2d3be2d2059f5a983dab01339e81a9",
    "createdAt": "2018-11-27T19:31:59Z",
    "diffHunk": "@@ -0,0 +1,24 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+align = none\n+align.openParenDefnSite = false\n+align.openParenCallSite = false\n+align.tokens = []\n+docstrings = JavaDoc\n+maxColumn = 98",
    "line": 23
  }, {
    "author": {
      "login": "koeninger"
    },
    "body": "I originally had this set to 100, and noticed a corner case where an ending space and curly brace were formatted on columns 100 and 101 respectively, making scalastyle complain.",
    "commit": "92dd105b4f2d3be2d2059f5a983dab01339e81a9",
    "createdAt": "2018-11-27T19:59:42Z",
    "diffHunk": "@@ -0,0 +1,24 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+align = none\n+align.openParenDefnSite = false\n+align.openParenCallSite = false\n+align.tokens = []\n+docstrings = JavaDoc\n+maxColumn = 98",
    "line": 23
  }, {
    "author": {
      "login": "dbtsai"
    },
    "body": "If we set it as `98`, will this complain for legit code with 100 chars?",
    "commit": "92dd105b4f2d3be2d2059f5a983dab01339e81a9",
    "createdAt": "2018-11-27T20:18:17Z",
    "diffHunk": "@@ -0,0 +1,24 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+align = none\n+align.openParenDefnSite = false\n+align.openParenCallSite = false\n+align.tokens = []\n+docstrings = JavaDoc\n+maxColumn = 98",
    "line": 23
  }, {
    "author": {
      "login": "koeninger"
    },
    "body": "For now, this won't complain about any code, it just gives a way for contributors to format it.\r\n\r\nIf we did turn on test as part of the build process, it would complain about any code that was different after formatting.  That could include code in that 99-101 column range, depending on whether it hit that corner case.  E.g.\r\n\r\n```\r\n    // this is 101 columns and will fail scalastyle, but will pass with scalafmt set to 99\r\n    if (caseInsensitiveParams.contains(s\"kafka.${ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG}\")) {\r\n```\r\n\r\nMy thinking is that being slightly more strict than existing scalastyle is better than having automated formatting that won't pass other existing automated checks.  Trying to find and upstream fixes to off-by-one errors in scalafmt is another option, but that will take a while.",
    "commit": "92dd105b4f2d3be2d2059f5a983dab01339e81a9",
    "createdAt": "2018-11-27T21:43:35Z",
    "diffHunk": "@@ -0,0 +1,24 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+align = none\n+align.openParenDefnSite = false\n+align.openParenCallSite = false\n+align.tokens = []\n+docstrings = JavaDoc\n+maxColumn = 98",
    "line": 23
  }],
  "prId": 23148
}]