[{
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "Technically, the `--force` can be in the first list, but it doesn't really matter.\n",
    "commit": "cf58c49c3be31c8e33639ba68eca16398f98c7f6",
    "createdAt": "2015-08-02T23:24:40Z",
    "diffHunk": "@@ -231,7 +231,7 @@ def exec_maven(mvn_args=()):\n     \"\"\"Will call Maven in the current directory with the list of mvn_args passed\n     in and returns the subprocess for any further processing\"\"\"\n \n-    run_cmd([os.path.join(SPARK_HOME, \"build\", \"mvn\")] + mvn_args)\n+    run_cmd([os.path.join(SPARK_HOME, \"build\", \"mvn\")] + [\"--force\"] + mvn_args)"
  }],
  "prId": 7878
}, {
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "On a non-zero exit code, `run_cmd` will print an error message and will call `sys.exit()`, so we may want to ensure that this always returns a zero exit code.  If this is a concern, you could always just perform the underlying `subprocess` call yourself.\n",
    "commit": "cf58c49c3be31c8e33639ba68eca16398f98c7f6",
    "createdAt": "2015-08-02T23:37:12Z",
    "diffHunk": "@@ -283,16 +284,35 @@ def get_hadoop_profiles(hadoop_version):\n         sys.exit(int(os.environ.get(\"CURRENT_BLOCK\", 255)))\n \n \n+def get_zinc_port():\n+    \"\"\"\n+    Get a randomized port on which to start Zinc\n+    \"\"\"\n+\n+    return random.randrange(3030, 4030)\n+\n+\n+def kill_zinc_on_port(zinc_port):\n+    \"\"\"\n+    Kill the Zinc process running on the given port, if one exists.\n+    \"\"\"\n+\n+    cmd = (\"/usr/sbin/lsof -P |grep %s | grep LISTEN \"\n+           \"| awk '{ print $2; }' | xargs kill\") % zinc_port\n+    # TODO: Not sure what happens here if no process exists"
  }],
  "prId": 7878
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "I hope this doesn't lead to builds failing because zinc can't bind to the chosen port.\n",
    "commit": "cf58c49c3be31c8e33639ba68eca16398f98c7f6",
    "createdAt": "2015-08-28T23:23:59Z",
    "diffHunk": "@@ -227,11 +228,32 @@ def build_spark_documentation():\n     os.chdir(SPARK_HOME)\n \n \n+def get_zinc_port():\n+    \"\"\"\n+    Get a randomized port on which to start Zinc\n+    \"\"\"\n+    return random.randrange(3030, 4030)",
    "line": 16
  }, {
    "author": {
      "login": "pwendell"
    },
    "body": "This logic is identical to that hard coded in the bash scripts that run the maven builds, in the past they've never failed for this reason... but yeah it could happen.\n",
    "commit": "cf58c49c3be31c8e33639ba68eca16398f98c7f6",
    "createdAt": "2015-08-31T04:36:54Z",
    "diffHunk": "@@ -227,11 +228,32 @@ def build_spark_documentation():\n     os.chdir(SPARK_HOME)\n \n \n+def get_zinc_port():\n+    \"\"\"\n+    Get a randomized port on which to start Zinc\n+    \"\"\"\n+    return random.randrange(3030, 4030)",
    "line": 16
  }],
  "prId": 7878
}]