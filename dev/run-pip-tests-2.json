[{
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "Shall we use `$python` here too?\n",
    "commit": "e1398552469288de3829eb889fec0de2ba568f15",
    "createdAt": "2016-11-03T04:06:45Z",
    "diffHunk": "@@ -0,0 +1,94 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# Stop on error\n+set -e\n+# Set nullglob for when we are checking existence based on globs\n+shopt -s nullglob\n+\n+FWDIR=\"$(cd \"`dirname $0`\"/..; pwd)\"\n+cd \"$FWDIR\"\n+# Some systems don't have pip or virtualenv - in those cases our tests won't work.\n+if ! hash virtualenv 2>/dev/null; then\n+  echo \"Missing virtualenv skipping pip installability tests.\"\n+  exit 0\n+fi\n+if ! hash pip 2>/dev/null; then\n+  echo \"Missing pip, skipping pip installability tests.\"\n+  exit 0\n+fi\n+\n+if [ -d ~/.cache/pip/wheels/ ]; then\n+  echo \"Cleaning up pip wheel cache so we install the fresh package\"\n+  rm -rf ~/.cache/pip/wheels/\n+fi\n+\n+# Figure out which Python execs we should test pip installation with\n+PYTHON_EXECS=()\n+if hash python 2>/dev/null; then\n+  # We do this since we are testing with virtualenv and the default virtual env python\n+  # is in /usr/bin/python\n+  PYTHON_EXECS+=('python')\n+fi\n+if hash python3 2>/dev/null; then\n+  PYTHON_EXECS+=('python3')\n+fi\n+\n+for python in $PYTHON_EXECS; do\n+  echo \"Testing pip installation with python $python\"\n+  # Create a temp directory for us to work in and save its name to a file for cleanup\n+  echo \"Constucting virtual env for testing\"\n+  mktemp -d > ./virtual_env_temp_dir\n+  VIRTUALENV_BASE=`cat ./virtual_env_temp_dir`\n+  echo \"Using $VIRTUALENV_BASE for virtualenv\"\n+  virtualenv --python=$python $VIRTUALENV_BASE\n+  source $VIRTUALENV_BASE/bin/activate\n+  # Upgrade pip\n+  pip install --upgrade pip\n+\n+  echo \"Creating pip installable source dist\"\n+  cd $FWDIR/python\n+  $python setup.py sdist\n+\n+\n+  echo \"Installing dist into virtual env\"\n+  cd dist\n+  # Verify that the dist directory only contains one thing to install\n+  sdists=(*.tar.gz)\n+  if [ ${#sdists[@]} -ne 1 ]; then\n+    echo \"Unexpected number of targets found in dist directory - please cleanup existing sdists first.\"\n+    exit -1\n+  fi\n+  # Do the actual installation\n+  pip install --upgrade --force-reinstall *.tar.gz\n+\n+  cd /\n+\n+  echo \"Run basic sanity check on pip installed version with spark-submit\"\n+  spark-submit $FWDIR/dev/pip-sanity-check.py\n+  echo \"Run basic sanity check with import based\"\n+  python $FWDIR/dev/pip-sanity-check.py"
  }, {
    "author": {
      "login": "holdenk"
    },
    "body": "It would probably be fine for `python` or `python3` but if we later added a specific path (like `/usr/bin/python` then this would refer to the path python rather than the virtualenv one). And while that isn't a current issue - using `$python` here too doesn't really add anything so I'd rather not.\n",
    "commit": "e1398552469288de3829eb889fec0de2ba568f15",
    "createdAt": "2016-11-03T04:12:30Z",
    "diffHunk": "@@ -0,0 +1,94 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# Stop on error\n+set -e\n+# Set nullglob for when we are checking existence based on globs\n+shopt -s nullglob\n+\n+FWDIR=\"$(cd \"`dirname $0`\"/..; pwd)\"\n+cd \"$FWDIR\"\n+# Some systems don't have pip or virtualenv - in those cases our tests won't work.\n+if ! hash virtualenv 2>/dev/null; then\n+  echo \"Missing virtualenv skipping pip installability tests.\"\n+  exit 0\n+fi\n+if ! hash pip 2>/dev/null; then\n+  echo \"Missing pip, skipping pip installability tests.\"\n+  exit 0\n+fi\n+\n+if [ -d ~/.cache/pip/wheels/ ]; then\n+  echo \"Cleaning up pip wheel cache so we install the fresh package\"\n+  rm -rf ~/.cache/pip/wheels/\n+fi\n+\n+# Figure out which Python execs we should test pip installation with\n+PYTHON_EXECS=()\n+if hash python 2>/dev/null; then\n+  # We do this since we are testing with virtualenv and the default virtual env python\n+  # is in /usr/bin/python\n+  PYTHON_EXECS+=('python')\n+fi\n+if hash python3 2>/dev/null; then\n+  PYTHON_EXECS+=('python3')\n+fi\n+\n+for python in $PYTHON_EXECS; do\n+  echo \"Testing pip installation with python $python\"\n+  # Create a temp directory for us to work in and save its name to a file for cleanup\n+  echo \"Constucting virtual env for testing\"\n+  mktemp -d > ./virtual_env_temp_dir\n+  VIRTUALENV_BASE=`cat ./virtual_env_temp_dir`\n+  echo \"Using $VIRTUALENV_BASE for virtualenv\"\n+  virtualenv --python=$python $VIRTUALENV_BASE\n+  source $VIRTUALENV_BASE/bin/activate\n+  # Upgrade pip\n+  pip install --upgrade pip\n+\n+  echo \"Creating pip installable source dist\"\n+  cd $FWDIR/python\n+  $python setup.py sdist\n+\n+\n+  echo \"Installing dist into virtual env\"\n+  cd dist\n+  # Verify that the dist directory only contains one thing to install\n+  sdists=(*.tar.gz)\n+  if [ ${#sdists[@]} -ne 1 ]; then\n+    echo \"Unexpected number of targets found in dist directory - please cleanup existing sdists first.\"\n+    exit -1\n+  fi\n+  # Do the actual installation\n+  pip install --upgrade --force-reinstall *.tar.gz\n+\n+  cd /\n+\n+  echo \"Run basic sanity check on pip installed version with spark-submit\"\n+  spark-submit $FWDIR/dev/pip-sanity-check.py\n+  echo \"Run basic sanity check with import based\"\n+  python $FWDIR/dev/pip-sanity-check.py"
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "If we package the sdist with python3 above, could `python $FWDIR/dev/pip-sanity-check.py` work well?\n",
    "commit": "e1398552469288de3829eb889fec0de2ba568f15",
    "createdAt": "2016-11-03T04:17:49Z",
    "diffHunk": "@@ -0,0 +1,94 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# Stop on error\n+set -e\n+# Set nullglob for when we are checking existence based on globs\n+shopt -s nullglob\n+\n+FWDIR=\"$(cd \"`dirname $0`\"/..; pwd)\"\n+cd \"$FWDIR\"\n+# Some systems don't have pip or virtualenv - in those cases our tests won't work.\n+if ! hash virtualenv 2>/dev/null; then\n+  echo \"Missing virtualenv skipping pip installability tests.\"\n+  exit 0\n+fi\n+if ! hash pip 2>/dev/null; then\n+  echo \"Missing pip, skipping pip installability tests.\"\n+  exit 0\n+fi\n+\n+if [ -d ~/.cache/pip/wheels/ ]; then\n+  echo \"Cleaning up pip wheel cache so we install the fresh package\"\n+  rm -rf ~/.cache/pip/wheels/\n+fi\n+\n+# Figure out which Python execs we should test pip installation with\n+PYTHON_EXECS=()\n+if hash python 2>/dev/null; then\n+  # We do this since we are testing with virtualenv and the default virtual env python\n+  # is in /usr/bin/python\n+  PYTHON_EXECS+=('python')\n+fi\n+if hash python3 2>/dev/null; then\n+  PYTHON_EXECS+=('python3')\n+fi\n+\n+for python in $PYTHON_EXECS; do\n+  echo \"Testing pip installation with python $python\"\n+  # Create a temp directory for us to work in and save its name to a file for cleanup\n+  echo \"Constucting virtual env for testing\"\n+  mktemp -d > ./virtual_env_temp_dir\n+  VIRTUALENV_BASE=`cat ./virtual_env_temp_dir`\n+  echo \"Using $VIRTUALENV_BASE for virtualenv\"\n+  virtualenv --python=$python $VIRTUALENV_BASE\n+  source $VIRTUALENV_BASE/bin/activate\n+  # Upgrade pip\n+  pip install --upgrade pip\n+\n+  echo \"Creating pip installable source dist\"\n+  cd $FWDIR/python\n+  $python setup.py sdist\n+\n+\n+  echo \"Installing dist into virtual env\"\n+  cd dist\n+  # Verify that the dist directory only contains one thing to install\n+  sdists=(*.tar.gz)\n+  if [ ${#sdists[@]} -ne 1 ]; then\n+    echo \"Unexpected number of targets found in dist directory - please cleanup existing sdists first.\"\n+    exit -1\n+  fi\n+  # Do the actual installation\n+  pip install --upgrade --force-reinstall *.tar.gz\n+\n+  cd /\n+\n+  echo \"Run basic sanity check on pip installed version with spark-submit\"\n+  spark-submit $FWDIR/dev/pip-sanity-check.py\n+  echo \"Run basic sanity check with import based\"\n+  python $FWDIR/dev/pip-sanity-check.py"
  }, {
    "author": {
      "login": "holdenk"
    },
    "body": "I think I'm missing something - it does work with a python3 virtualenv - what are suggesting with the most recent suggestion?\n",
    "commit": "e1398552469288de3829eb889fec0de2ba568f15",
    "createdAt": "2016-11-03T04:33:05Z",
    "diffHunk": "@@ -0,0 +1,94 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# Stop on error\n+set -e\n+# Set nullglob for when we are checking existence based on globs\n+shopt -s nullglob\n+\n+FWDIR=\"$(cd \"`dirname $0`\"/..; pwd)\"\n+cd \"$FWDIR\"\n+# Some systems don't have pip or virtualenv - in those cases our tests won't work.\n+if ! hash virtualenv 2>/dev/null; then\n+  echo \"Missing virtualenv skipping pip installability tests.\"\n+  exit 0\n+fi\n+if ! hash pip 2>/dev/null; then\n+  echo \"Missing pip, skipping pip installability tests.\"\n+  exit 0\n+fi\n+\n+if [ -d ~/.cache/pip/wheels/ ]; then\n+  echo \"Cleaning up pip wheel cache so we install the fresh package\"\n+  rm -rf ~/.cache/pip/wheels/\n+fi\n+\n+# Figure out which Python execs we should test pip installation with\n+PYTHON_EXECS=()\n+if hash python 2>/dev/null; then\n+  # We do this since we are testing with virtualenv and the default virtual env python\n+  # is in /usr/bin/python\n+  PYTHON_EXECS+=('python')\n+fi\n+if hash python3 2>/dev/null; then\n+  PYTHON_EXECS+=('python3')\n+fi\n+\n+for python in $PYTHON_EXECS; do\n+  echo \"Testing pip installation with python $python\"\n+  # Create a temp directory for us to work in and save its name to a file for cleanup\n+  echo \"Constucting virtual env for testing\"\n+  mktemp -d > ./virtual_env_temp_dir\n+  VIRTUALENV_BASE=`cat ./virtual_env_temp_dir`\n+  echo \"Using $VIRTUALENV_BASE for virtualenv\"\n+  virtualenv --python=$python $VIRTUALENV_BASE\n+  source $VIRTUALENV_BASE/bin/activate\n+  # Upgrade pip\n+  pip install --upgrade pip\n+\n+  echo \"Creating pip installable source dist\"\n+  cd $FWDIR/python\n+  $python setup.py sdist\n+\n+\n+  echo \"Installing dist into virtual env\"\n+  cd dist\n+  # Verify that the dist directory only contains one thing to install\n+  sdists=(*.tar.gz)\n+  if [ ${#sdists[@]} -ne 1 ]; then\n+    echo \"Unexpected number of targets found in dist directory - please cleanup existing sdists first.\"\n+    exit -1\n+  fi\n+  # Do the actual installation\n+  pip install --upgrade --force-reinstall *.tar.gz\n+\n+  cd /\n+\n+  echo \"Run basic sanity check on pip installed version with spark-submit\"\n+  spark-submit $FWDIR/dev/pip-sanity-check.py\n+  echo \"Run basic sanity check with import based\"\n+  python $FWDIR/dev/pip-sanity-check.py"
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "yeah. nvm. `virtualenv` will take care of that.\n",
    "commit": "e1398552469288de3829eb889fec0de2ba568f15",
    "createdAt": "2016-11-03T04:56:07Z",
    "diffHunk": "@@ -0,0 +1,94 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# Stop on error\n+set -e\n+# Set nullglob for when we are checking existence based on globs\n+shopt -s nullglob\n+\n+FWDIR=\"$(cd \"`dirname $0`\"/..; pwd)\"\n+cd \"$FWDIR\"\n+# Some systems don't have pip or virtualenv - in those cases our tests won't work.\n+if ! hash virtualenv 2>/dev/null; then\n+  echo \"Missing virtualenv skipping pip installability tests.\"\n+  exit 0\n+fi\n+if ! hash pip 2>/dev/null; then\n+  echo \"Missing pip, skipping pip installability tests.\"\n+  exit 0\n+fi\n+\n+if [ -d ~/.cache/pip/wheels/ ]; then\n+  echo \"Cleaning up pip wheel cache so we install the fresh package\"\n+  rm -rf ~/.cache/pip/wheels/\n+fi\n+\n+# Figure out which Python execs we should test pip installation with\n+PYTHON_EXECS=()\n+if hash python 2>/dev/null; then\n+  # We do this since we are testing with virtualenv and the default virtual env python\n+  # is in /usr/bin/python\n+  PYTHON_EXECS+=('python')\n+fi\n+if hash python3 2>/dev/null; then\n+  PYTHON_EXECS+=('python3')\n+fi\n+\n+for python in $PYTHON_EXECS; do\n+  echo \"Testing pip installation with python $python\"\n+  # Create a temp directory for us to work in and save its name to a file for cleanup\n+  echo \"Constucting virtual env for testing\"\n+  mktemp -d > ./virtual_env_temp_dir\n+  VIRTUALENV_BASE=`cat ./virtual_env_temp_dir`\n+  echo \"Using $VIRTUALENV_BASE for virtualenv\"\n+  virtualenv --python=$python $VIRTUALENV_BASE\n+  source $VIRTUALENV_BASE/bin/activate\n+  # Upgrade pip\n+  pip install --upgrade pip\n+\n+  echo \"Creating pip installable source dist\"\n+  cd $FWDIR/python\n+  $python setup.py sdist\n+\n+\n+  echo \"Installing dist into virtual env\"\n+  cd dist\n+  # Verify that the dist directory only contains one thing to install\n+  sdists=(*.tar.gz)\n+  if [ ${#sdists[@]} -ne 1 ]; then\n+    echo \"Unexpected number of targets found in dist directory - please cleanup existing sdists first.\"\n+    exit -1\n+  fi\n+  # Do the actual installation\n+  pip install --upgrade --force-reinstall *.tar.gz\n+\n+  cd /\n+\n+  echo \"Run basic sanity check on pip installed version with spark-submit\"\n+  spark-submit $FWDIR/dev/pip-sanity-check.py\n+  echo \"Run basic sanity check with import based\"\n+  python $FWDIR/dev/pip-sanity-check.py"
  }],
  "prId": 15659
}, {
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "`$PYTHON_EXECS` actually is just `${PYTHON_EXECS[0]}`. Should be `${PYTHON_EXECS[@]}`, I think.\n",
    "commit": "e1398552469288de3829eb889fec0de2ba568f15",
    "createdAt": "2016-11-03T04:09:16Z",
    "diffHunk": "@@ -0,0 +1,94 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# Stop on error\n+set -e\n+# Set nullglob for when we are checking existence based on globs\n+shopt -s nullglob\n+\n+FWDIR=\"$(cd \"`dirname $0`\"/..; pwd)\"\n+cd \"$FWDIR\"\n+# Some systems don't have pip or virtualenv - in those cases our tests won't work.\n+if ! hash virtualenv 2>/dev/null; then\n+  echo \"Missing virtualenv skipping pip installability tests.\"\n+  exit 0\n+fi\n+if ! hash pip 2>/dev/null; then\n+  echo \"Missing pip, skipping pip installability tests.\"\n+  exit 0\n+fi\n+\n+if [ -d ~/.cache/pip/wheels/ ]; then\n+  echo \"Cleaning up pip wheel cache so we install the fresh package\"\n+  rm -rf ~/.cache/pip/wheels/\n+fi\n+\n+# Figure out which Python execs we should test pip installation with\n+PYTHON_EXECS=()\n+if hash python 2>/dev/null; then\n+  # We do this since we are testing with virtualenv and the default virtual env python\n+  # is in /usr/bin/python\n+  PYTHON_EXECS+=('python')\n+fi\n+if hash python3 2>/dev/null; then\n+  PYTHON_EXECS+=('python3')\n+fi\n+\n+for python in $PYTHON_EXECS; do"
  }, {
    "author": {
      "login": "holdenk"
    },
    "body": "Ah thanks, fixed :)\n",
    "commit": "e1398552469288de3829eb889fec0de2ba568f15",
    "createdAt": "2016-11-03T04:33:59Z",
    "diffHunk": "@@ -0,0 +1,94 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# Stop on error\n+set -e\n+# Set nullglob for when we are checking existence based on globs\n+shopt -s nullglob\n+\n+FWDIR=\"$(cd \"`dirname $0`\"/..; pwd)\"\n+cd \"$FWDIR\"\n+# Some systems don't have pip or virtualenv - in those cases our tests won't work.\n+if ! hash virtualenv 2>/dev/null; then\n+  echo \"Missing virtualenv skipping pip installability tests.\"\n+  exit 0\n+fi\n+if ! hash pip 2>/dev/null; then\n+  echo \"Missing pip, skipping pip installability tests.\"\n+  exit 0\n+fi\n+\n+if [ -d ~/.cache/pip/wheels/ ]; then\n+  echo \"Cleaning up pip wheel cache so we install the fresh package\"\n+  rm -rf ~/.cache/pip/wheels/\n+fi\n+\n+# Figure out which Python execs we should test pip installation with\n+PYTHON_EXECS=()\n+if hash python 2>/dev/null; then\n+  # We do this since we are testing with virtualenv and the default virtual env python\n+  # is in /usr/bin/python\n+  PYTHON_EXECS+=('python')\n+fi\n+if hash python3 2>/dev/null; then\n+  PYTHON_EXECS+=('python3')\n+fi\n+\n+for python in $PYTHON_EXECS; do"
  }],
  "prId": 15659
}, {
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "When we want to test python3, shall we use pip3?\n",
    "commit": "e1398552469288de3829eb889fec0de2ba568f15",
    "createdAt": "2016-11-03T04:41:03Z",
    "diffHunk": "@@ -0,0 +1,94 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# Stop on error\n+set -e\n+# Set nullglob for when we are checking existence based on globs\n+shopt -s nullglob\n+\n+FWDIR=\"$(cd \"`dirname $0`\"/..; pwd)\"\n+cd \"$FWDIR\"\n+# Some systems don't have pip or virtualenv - in those cases our tests won't work.\n+if ! hash virtualenv 2>/dev/null; then\n+  echo \"Missing virtualenv skipping pip installability tests.\"\n+  exit 0\n+fi\n+if ! hash pip 2>/dev/null; then\n+  echo \"Missing pip, skipping pip installability tests.\"\n+  exit 0\n+fi\n+\n+if [ -d ~/.cache/pip/wheels/ ]; then\n+  echo \"Cleaning up pip wheel cache so we install the fresh package\"\n+  rm -rf ~/.cache/pip/wheels/\n+fi\n+\n+# Figure out which Python execs we should test pip installation with\n+PYTHON_EXECS=()\n+if hash python 2>/dev/null; then\n+  # We do this since we are testing with virtualenv and the default virtual env python\n+  # is in /usr/bin/python\n+  PYTHON_EXECS+=('python')\n+fi\n+if hash python3 2>/dev/null; then\n+  PYTHON_EXECS+=('python3')\n+fi\n+\n+for python in \"${PYTHON_EXECS[@]}\"; do\n+  echo \"Testing pip installation with python $python\"\n+  # Create a temp directory for us to work in and save its name to a file for cleanup\n+  echo \"Constucting virtual env for testing\"\n+  mktemp -d > ./virtual_env_temp_dir\n+  VIRTUALENV_BASE=`cat ./virtual_env_temp_dir`\n+  echo \"Using $VIRTUALENV_BASE for virtualenv\"\n+  virtualenv --python=$python $VIRTUALENV_BASE\n+  source $VIRTUALENV_BASE/bin/activate\n+  # Upgrade pip\n+  pip install --upgrade pip"
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "oh. nvm. `virtualenv` will take care of it.\n",
    "commit": "e1398552469288de3829eb889fec0de2ba568f15",
    "createdAt": "2016-11-03T04:55:28Z",
    "diffHunk": "@@ -0,0 +1,94 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# Stop on error\n+set -e\n+# Set nullglob for when we are checking existence based on globs\n+shopt -s nullglob\n+\n+FWDIR=\"$(cd \"`dirname $0`\"/..; pwd)\"\n+cd \"$FWDIR\"\n+# Some systems don't have pip or virtualenv - in those cases our tests won't work.\n+if ! hash virtualenv 2>/dev/null; then\n+  echo \"Missing virtualenv skipping pip installability tests.\"\n+  exit 0\n+fi\n+if ! hash pip 2>/dev/null; then\n+  echo \"Missing pip, skipping pip installability tests.\"\n+  exit 0\n+fi\n+\n+if [ -d ~/.cache/pip/wheels/ ]; then\n+  echo \"Cleaning up pip wheel cache so we install the fresh package\"\n+  rm -rf ~/.cache/pip/wheels/\n+fi\n+\n+# Figure out which Python execs we should test pip installation with\n+PYTHON_EXECS=()\n+if hash python 2>/dev/null; then\n+  # We do this since we are testing with virtualenv and the default virtual env python\n+  # is in /usr/bin/python\n+  PYTHON_EXECS+=('python')\n+fi\n+if hash python3 2>/dev/null; then\n+  PYTHON_EXECS+=('python3')\n+fi\n+\n+for python in \"${PYTHON_EXECS[@]}\"; do\n+  echo \"Testing pip installation with python $python\"\n+  # Create a temp directory for us to work in and save its name to a file for cleanup\n+  echo \"Constucting virtual env for testing\"\n+  mktemp -d > ./virtual_env_temp_dir\n+  VIRTUALENV_BASE=`cat ./virtual_env_temp_dir`\n+  echo \"Using $VIRTUALENV_BASE for virtualenv\"\n+  virtualenv --python=$python $VIRTUALENV_BASE\n+  source $VIRTUALENV_BASE/bin/activate\n+  # Upgrade pip\n+  pip install --upgrade pip"
  }],
  "prId": 15659
}, {
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "I think we need double quotes here and around the other substitutions in this file to avoid problems for folks with spaces in their directory names.\n",
    "commit": "e1398552469288de3829eb889fec0de2ba568f15",
    "createdAt": "2016-11-12T00:12:57Z",
    "diffHunk": "@@ -0,0 +1,105 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# Stop on error\n+set -e\n+# Set nullglob for when we are checking existence based on globs\n+shopt -s nullglob\n+\n+FWDIR=\"$(cd \"`dirname $0`\"/..; pwd)\"\n+cd \"$FWDIR\"\n+# Some systems don't have pip or virtualenv - in those cases our tests won't work.\n+if ! hash virtualenv 2>/dev/null; then\n+  echo \"Missing virtualenv skipping pip installability tests.\"\n+  exit 0\n+fi\n+if ! hash pip 2>/dev/null; then\n+  echo \"Missing pip, skipping pip installability tests.\"\n+  exit 0\n+fi\n+\n+# Figure out which Python execs we should test pip installation with\n+PYTHON_EXECS=()\n+if hash python 2>/dev/null; then\n+  # We do this since we are testing with virtualenv and the default virtual env python\n+  # is in /usr/bin/python\n+  PYTHON_EXECS+=('python')\n+fi\n+if hash python3 2>/dev/null; then\n+  PYTHON_EXECS+=('python3')\n+fi\n+\n+echo \"Constucting virtual env for testing\"\n+mktemp -d > ./virtual_env_temp_dir\n+VIRTUALENV_BASE=`cat ./virtual_env_temp_dir`\n+\n+# Determine which version of PySpark we are building for archive name\n+PYSPARK_VERSION=`python -c \"exec(open('python/pyspark/version.py').read());print __version__\"`\n+PYSPARK_DIST=\"$FWDIR/python/dist/pyspark-$PYSPARK_VERSION.tar.gz\"\n+# The pip install options we use for all the pip commands\n+PIP_OPTIONS=\"--upgrade --no-cache-dir --force-reinstall \"\n+# Test both regular user and edit/dev install modes.\n+PIP_COMMANDS=(\"pip install $PIP_OPTIONS $PYSPARK_DIST\"\n+\t      \"pip install $PIP_OPTIONS -e python/\")\n+\n+for python in \"${PYTHON_EXECS[@]}\"; do\n+  for install_command in \"${PIP_COMMANDS[@]}\"; do\n+    echo \"Testing pip installation with python $python\"\n+    # Create a temp directory for us to work in and save its name to a file for cleanup\n+    echo \"Using $VIRTUALENV_BASE for virtualenv\"\n+    VIRTUALENV_PATH=$VIRTUALENV_BASE/$python\n+    rm -rf $VIRTUALENV_PATH\n+    mkdir -p $VIRTUALENV_PATH\n+    virtualenv --python=$python $VIRTUALENV_PATH\n+    source $VIRTUALENV_PATH/bin/activate\n+    # Upgrade pip\n+    pip install --upgrade pip\n+\n+    echo \"Creating pip installable source dist\"\n+    cd $FWDIR/python"
  }],
  "prId": 15659
}, {
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "One slight oddity in AMPLab Jenkins is that `python` might actually point to `python3`. Given this, I think that it might be worth trying to use `python2` or `python2.7` or `python2.6` first and then only fall back on adding `python` as a last resort in order to guarantee that we're testing with a Python 2 environment.\n",
    "commit": "e1398552469288de3829eb889fec0de2ba568f15",
    "createdAt": "2016-11-12T00:15:14Z",
    "diffHunk": "@@ -0,0 +1,105 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+# Stop on error\n+set -e\n+# Set nullglob for when we are checking existence based on globs\n+shopt -s nullglob\n+\n+FWDIR=\"$(cd \"`dirname $0`\"/..; pwd)\"\n+cd \"$FWDIR\"\n+# Some systems don't have pip or virtualenv - in those cases our tests won't work.\n+if ! hash virtualenv 2>/dev/null; then\n+  echo \"Missing virtualenv skipping pip installability tests.\"\n+  exit 0\n+fi\n+if ! hash pip 2>/dev/null; then\n+  echo \"Missing pip, skipping pip installability tests.\"\n+  exit 0\n+fi\n+\n+# Figure out which Python execs we should test pip installation with\n+PYTHON_EXECS=()\n+if hash python 2>/dev/null; then\n+  # We do this since we are testing with virtualenv and the default virtual env python\n+  # is in /usr/bin/python\n+  PYTHON_EXECS+=('python')"
  }],
  "prId": 15659
}]