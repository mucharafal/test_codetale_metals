[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Can you use the `command -v` idiom seen elsewhere in our scripts to check for a binary?\n",
    "commit": "cde2f170d4562184eee7287c20b9115b3f457ebb",
    "createdAt": "2015-06-17T07:19:23Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+usage() {\n+  echo \"Usage: $(basename $0) <from-version> <to-version>\" 1>&2\n+  exit 1\n+}\n+\n+if [ $# -ne 2 ]; then\n+  echo \"Wrong number of arguments\" 1>&2\n+  usage\n+fi\n+\n+FROM_VERSION=$1\n+TO_VERSION=$2\n+\n+VALID_VERSIONS=( 2.10 2.11 )\n+\n+check_scala_version() {\n+  for i in ${VALID_VERSIONS[*]}; do [ $i = \"$1\" ] && return 0; done\n+  echo \"Invalid Scala version: $1. Valid versions: ${VALID_VERSIONS[*]}\" 1>&2\n+  exit 1\n+}\n+\n+check_scala_version \"$FROM_VERSION\"\n+check_scala_version \"$TO_VERSION\"\n+\n+test_sed() {\n+  [ ! -z \"$($1 --version 2>&1 | head -n 1 | grep 'GNU sed')\" ]\n+}\n+\n+# Find GNU sed. On OS X with MacPorts you can install gsed with \"sudo port install gsed\"\n+if test_sed sed; then"
  }, {
    "author": {
      "login": "mallman"
    },
    "body": "I can, but it seems that idiom is used to simply check for the existence of a binary. We want to test that `sed --version` outputs `GNU sed`. `command -v` would be inadequate for that purpose.\n\nHowever, if you still want me to then I guess\n\n```\ntest_sed() {\n  [ $(command -v $1) -a ! -z \"$($1 --version 2>&1 | head -n 1 | grep 'GNU sed')\" ]\n}\n```\n\nis the way to go? Or perhaps `test_gnu_sed` would be a better name for that function?\n",
    "commit": "cde2f170d4562184eee7287c20b9115b3f457ebb",
    "createdAt": "2015-06-17T17:04:34Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+usage() {\n+  echo \"Usage: $(basename $0) <from-version> <to-version>\" 1>&2\n+  exit 1\n+}\n+\n+if [ $# -ne 2 ]; then\n+  echo \"Wrong number of arguments\" 1>&2\n+  usage\n+fi\n+\n+FROM_VERSION=$1\n+TO_VERSION=$2\n+\n+VALID_VERSIONS=( 2.10 2.11 )\n+\n+check_scala_version() {\n+  for i in ${VALID_VERSIONS[*]}; do [ $i = \"$1\" ] && return 0; done\n+  echo \"Invalid Scala version: $1. Valid versions: ${VALID_VERSIONS[*]}\" 1>&2\n+  exit 1\n+}\n+\n+check_scala_version \"$FROM_VERSION\"\n+check_scala_version \"$TO_VERSION\"\n+\n+test_sed() {\n+  [ ! -z \"$($1 --version 2>&1 | head -n 1 | grep 'GNU sed')\" ]\n+}\n+\n+# Find GNU sed. On OS X with MacPorts you can install gsed with \"sudo port install gsed\"\n+if test_sed sed; then"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Nah I see your point now about looking for GNU-ness. Sounds good.\n",
    "commit": "cde2f170d4562184eee7287c20b9115b3f457ebb",
    "createdAt": "2015-06-17T17:05:56Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+usage() {\n+  echo \"Usage: $(basename $0) <from-version> <to-version>\" 1>&2\n+  exit 1\n+}\n+\n+if [ $# -ne 2 ]; then\n+  echo \"Wrong number of arguments\" 1>&2\n+  usage\n+fi\n+\n+FROM_VERSION=$1\n+TO_VERSION=$2\n+\n+VALID_VERSIONS=( 2.10 2.11 )\n+\n+check_scala_version() {\n+  for i in ${VALID_VERSIONS[*]}; do [ $i = \"$1\" ] && return 0; done\n+  echo \"Invalid Scala version: $1. Valid versions: ${VALID_VERSIONS[*]}\" 1>&2\n+  exit 1\n+}\n+\n+check_scala_version \"$FROM_VERSION\"\n+check_scala_version \"$TO_VERSION\"\n+\n+test_sed() {\n+  [ ! -z \"$($1 --version 2>&1 | head -n 1 | grep 'GNU sed')\" ]\n+}\n+\n+# Find GNU sed. On OS X with MacPorts you can install gsed with \"sudo port install gsed\"\n+if test_sed sed; then"
  }],
  "prId": 6832
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "This line seems to have changed the logic though. It's supposed to update `scala.binary.version` right?\n",
    "commit": "cde2f170d4562184eee7287c20b9115b3f457ebb",
    "createdAt": "2015-06-17T07:20:56Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+usage() {\n+  echo \"Usage: $(basename $0) <from-version> <to-version>\" 1>&2\n+  exit 1\n+}\n+\n+if [ $# -ne 2 ]; then\n+  echo \"Wrong number of arguments\" 1>&2\n+  usage\n+fi\n+\n+FROM_VERSION=$1\n+TO_VERSION=$2\n+\n+VALID_VERSIONS=( 2.10 2.11 )\n+\n+check_scala_version() {\n+  for i in ${VALID_VERSIONS[*]}; do [ $i = \"$1\" ] && return 0; done\n+  echo \"Invalid Scala version: $1. Valid versions: ${VALID_VERSIONS[*]}\" 1>&2\n+  exit 1\n+}\n+\n+check_scala_version \"$FROM_VERSION\"\n+check_scala_version \"$TO_VERSION\"\n+\n+test_sed() {\n+  [ ! -z \"$($1 --version 2>&1 | head -n 1 | grep 'GNU sed')\" ]\n+}\n+\n+# Find GNU sed. On OS X with MacPorts you can install gsed with \"sudo port install gsed\"\n+if test_sed sed; then\n+  SED=sed\n+elif test_sed gsed; then\n+  SED=gsed\n+else\n+  echo \"Could not find GNU sed. Tried \\\"sed\\\" and \\\"gsed\\\"\" 1>&2\n+  exit 1\n+fi\n+\n+BASEDIR=$(dirname $0)/..\n+find $BASEDIR -name 'pom.xml' | grep -v target \\\n+  | xargs -I {} $SED -i -e 's/\\(artifactId.*\\)_'$FROM_VERSION'/\\1_'$TO_VERSION'/g' {}\n+\n+# Update source of scaladocs\n+$SED -i -e 's/scala\\-'$FROM_VERSION'/scala\\-'$TO_VERSION'/' $BASEDIR/docs/_plugins/copy_api_dirs.rb"
  }, {
    "author": {
      "login": "mallman"
    },
    "body": "It used to, yes. However, that property is now set through activating the appropriate maven profileâ€”`scala-2.10` or `scala-2.11`. Changing it through a textual find/replace will override that logic. For example, the `scala-2.10` profile will compile with scala 2.11 or vice-versa.\n",
    "commit": "cde2f170d4562184eee7287c20b9115b3f457ebb",
    "createdAt": "2015-06-17T17:12:37Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+usage() {\n+  echo \"Usage: $(basename $0) <from-version> <to-version>\" 1>&2\n+  exit 1\n+}\n+\n+if [ $# -ne 2 ]; then\n+  echo \"Wrong number of arguments\" 1>&2\n+  usage\n+fi\n+\n+FROM_VERSION=$1\n+TO_VERSION=$2\n+\n+VALID_VERSIONS=( 2.10 2.11 )\n+\n+check_scala_version() {\n+  for i in ${VALID_VERSIONS[*]}; do [ $i = \"$1\" ] && return 0; done\n+  echo \"Invalid Scala version: $1. Valid versions: ${VALID_VERSIONS[*]}\" 1>&2\n+  exit 1\n+}\n+\n+check_scala_version \"$FROM_VERSION\"\n+check_scala_version \"$TO_VERSION\"\n+\n+test_sed() {\n+  [ ! -z \"$($1 --version 2>&1 | head -n 1 | grep 'GNU sed')\" ]\n+}\n+\n+# Find GNU sed. On OS X with MacPorts you can install gsed with \"sudo port install gsed\"\n+if test_sed sed; then\n+  SED=sed\n+elif test_sed gsed; then\n+  SED=gsed\n+else\n+  echo \"Could not find GNU sed. Tried \\\"sed\\\" and \\\"gsed\\\"\" 1>&2\n+  exit 1\n+fi\n+\n+BASEDIR=$(dirname $0)/..\n+find $BASEDIR -name 'pom.xml' | grep -v target \\\n+  | xargs -I {} $SED -i -e 's/\\(artifactId.*\\)_'$FROM_VERSION'/\\1_'$TO_VERSION'/g' {}\n+\n+# Update source of scaladocs\n+$SED -i -e 's/scala\\-'$FROM_VERSION'/scala\\-'$TO_VERSION'/' $BASEDIR/docs/_plugins/copy_api_dirs.rb"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "I don't think that will work, and I 80% remember why -- the published POM doesn't have any notion of activated profiles, and so the artifacts will default to expressing a dependency on 2.10. That's why it had to be hard-coded and changed on update to 2.11.\n",
    "commit": "cde2f170d4562184eee7287c20b9115b3f457ebb",
    "createdAt": "2015-06-17T18:38:25Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+usage() {\n+  echo \"Usage: $(basename $0) <from-version> <to-version>\" 1>&2\n+  exit 1\n+}\n+\n+if [ $# -ne 2 ]; then\n+  echo \"Wrong number of arguments\" 1>&2\n+  usage\n+fi\n+\n+FROM_VERSION=$1\n+TO_VERSION=$2\n+\n+VALID_VERSIONS=( 2.10 2.11 )\n+\n+check_scala_version() {\n+  for i in ${VALID_VERSIONS[*]}; do [ $i = \"$1\" ] && return 0; done\n+  echo \"Invalid Scala version: $1. Valid versions: ${VALID_VERSIONS[*]}\" 1>&2\n+  exit 1\n+}\n+\n+check_scala_version \"$FROM_VERSION\"\n+check_scala_version \"$TO_VERSION\"\n+\n+test_sed() {\n+  [ ! -z \"$($1 --version 2>&1 | head -n 1 | grep 'GNU sed')\" ]\n+}\n+\n+# Find GNU sed. On OS X with MacPorts you can install gsed with \"sudo port install gsed\"\n+if test_sed sed; then\n+  SED=sed\n+elif test_sed gsed; then\n+  SED=gsed\n+else\n+  echo \"Could not find GNU sed. Tried \\\"sed\\\" and \\\"gsed\\\"\" 1>&2\n+  exit 1\n+fi\n+\n+BASEDIR=$(dirname $0)/..\n+find $BASEDIR -name 'pom.xml' | grep -v target \\\n+  | xargs -I {} $SED -i -e 's/\\(artifactId.*\\)_'$FROM_VERSION'/\\1_'$TO_VERSION'/g' {}\n+\n+# Update source of scaladocs\n+$SED -i -e 's/scala\\-'$FROM_VERSION'/scala\\-'$TO_VERSION'/' $BASEDIR/docs/_plugins/copy_api_dirs.rb"
  }, {
    "author": {
      "login": "mallman"
    },
    "body": "That makes sense. I also better remember why I removed that lineâ€”it has to do with some incorrect behavior in changing `scala.binary.version` which I mistakenly attributed to that portion of the script. Absent any apparent problem, I'm going to restore that part of that script.\n",
    "commit": "cde2f170d4562184eee7287c20b9115b3f457ebb",
    "createdAt": "2015-06-18T07:01:23Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+#!/usr/bin/env bash\n+\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+usage() {\n+  echo \"Usage: $(basename $0) <from-version> <to-version>\" 1>&2\n+  exit 1\n+}\n+\n+if [ $# -ne 2 ]; then\n+  echo \"Wrong number of arguments\" 1>&2\n+  usage\n+fi\n+\n+FROM_VERSION=$1\n+TO_VERSION=$2\n+\n+VALID_VERSIONS=( 2.10 2.11 )\n+\n+check_scala_version() {\n+  for i in ${VALID_VERSIONS[*]}; do [ $i = \"$1\" ] && return 0; done\n+  echo \"Invalid Scala version: $1. Valid versions: ${VALID_VERSIONS[*]}\" 1>&2\n+  exit 1\n+}\n+\n+check_scala_version \"$FROM_VERSION\"\n+check_scala_version \"$TO_VERSION\"\n+\n+test_sed() {\n+  [ ! -z \"$($1 --version 2>&1 | head -n 1 | grep 'GNU sed')\" ]\n+}\n+\n+# Find GNU sed. On OS X with MacPorts you can install gsed with \"sudo port install gsed\"\n+if test_sed sed; then\n+  SED=sed\n+elif test_sed gsed; then\n+  SED=gsed\n+else\n+  echo \"Could not find GNU sed. Tried \\\"sed\\\" and \\\"gsed\\\"\" 1>&2\n+  exit 1\n+fi\n+\n+BASEDIR=$(dirname $0)/..\n+find $BASEDIR -name 'pom.xml' | grep -v target \\\n+  | xargs -I {} $SED -i -e 's/\\(artifactId.*\\)_'$FROM_VERSION'/\\1_'$TO_VERSION'/g' {}\n+\n+# Update source of scaladocs\n+$SED -i -e 's/scala\\-'$FROM_VERSION'/scala\\-'$TO_VERSION'/' $BASEDIR/docs/_plugins/copy_api_dirs.rb"
  }],
  "prId": 6832
}]