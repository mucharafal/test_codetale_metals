[
  {
    "id" : "fb5c5993-182e-4f25-a1e2-96c0e985f8f5",
    "prId" : 1468,
    "comments" : [
      {
        "id" : "e003fdde-d2f1-43e7-8212-7450ec7b7412",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n[tanishiking](https://github.com/tanishiking), we now support the quick fix code\r\n```",
        "createdAt" : "2020-02-25T20:23:31Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3fb0b2c99e8dbdbd8e6c1f37443adbc10498e9e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,447 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.1 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.8.1. This release includes a\n+large number of bug fixes and some new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">313</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">100</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">19</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">52</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">2</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/19?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with help from [Lunatech](https://lunatech.com) along with contributors from the\n+community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/) and\n+give Metals a try!\n+\n+- insert missing abstract members\n+- new file provider\n+- enable rename preview for Visual Studio Code\n+- debug and run working in Emacs and soon in Vim\n+\n+## Insert missing abstract members\n+\n+Thanks to yet again amazing work by\n+[tanishiking](https://github.com/tanishiking) we now support the quick fix code"
  },
  {
    "id" : "3238cc97-f88a-4983-9e82-772732f3b866",
    "prId" : 1468,
    "comments" : [
      {
        "id" : "f51a2d79-a4d3-419c-9d02-429d84277412",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I think you can simple this and just say way. \"works int he same principle\" doesn't read great.\r\n```suggestion\r\ncase of errors and works in the same way as the recent \"Implement all members\" completions. It\r\n```",
        "createdAt" : "2020-02-25T20:25:21Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3fb0b2c99e8dbdbd8e6c1f37443adbc10498e9e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,447 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.1 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.8.1. This release includes a\n+large number of bug fixes and some new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">313</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">100</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">19</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">52</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">2</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/19?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with help from [Lunatech](https://lunatech.com) along with contributors from the\n+community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/) and\n+give Metals a try!\n+\n+- insert missing abstract members\n+- new file provider\n+- enable rename preview for Visual Studio Code\n+- debug and run working in Emacs and soon in Vim\n+\n+## Insert missing abstract members\n+\n+Thanks to yet again amazing work by\n+[tanishiking](https://github.com/tanishiking) we now support the quick fix code\n+action for implementing abstract class members. This code action is available in\n+case of errors and works in the same principle as the recent completions. It"
  },
  {
    "id" : "f7f724fd-b539-41dc-b1b8-d05b7ed6dfb7",
    "prId" : 1468,
    "comments" : [
      {
        "id" : "e9d237f6-0c42-4d45-8298-50813c6ac913",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nIn the last release we added support for worksheets, which are an easy way to\r\n```",
        "createdAt" : "2020-02-25T20:25:51Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3fb0b2c99e8dbdbd8e6c1f37443adbc10498e9e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,447 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.1 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.8.1. This release includes a\n+large number of bug fixes and some new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">313</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">100</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">19</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">52</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">2</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/19?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with help from [Lunatech](https://lunatech.com) along with contributors from the\n+community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/) and\n+give Metals a try!\n+\n+- insert missing abstract members\n+- new file provider\n+- enable rename preview for Visual Studio Code\n+- debug and run working in Emacs and soon in Vim\n+\n+## Insert missing abstract members\n+\n+Thanks to yet again amazing work by\n+[tanishiking](https://github.com/tanishiking) we now support the quick fix code\n+action for implementing abstract class members. This code action is available in\n+case of errors and works in the same principle as the recent completions. It\n+will add any missing abstract members at the top of the class with the default\n+implementation of ???.\n+\n+![action](https://user-images.githubusercontent.com/9353584/73630120-8b0bc880-4698-11ea-8370-32b1fb2f86fd.gif)\n+\n+## New file provider\n+\n+In the last release we added a support for worksheets, which are an easy way to"
  },
  {
    "id" : "f1d45504-1a74-4c3f-b06d-b8cb6f284683",
    "prId" : 1468,
    "comments" : [
      {
        "id" : "848901bd-ef5a-4793-a6e8-809489bb4499",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "This is already merged into `coc-metals`, so it will work after the release when versioned :)",
        "createdAt" : "2020-02-25T20:26:47Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2892c497-3f39-4796-91fe-2b1b83729d75",
        "parentId" : "848901bd-ef5a-4793-a6e8-809489bb4499",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "https://github.com/scalameta/coc-metals/pull/92",
        "createdAt" : "2020-02-25T20:27:27Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3fb0b2c99e8dbdbd8e6c1f37443adbc10498e9e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,447 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.1 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.8.1. This release includes a\n+large number of bug fixes and some new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">313</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">100</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">19</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">52</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">2</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/19?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with help from [Lunatech](https://lunatech.com) along with contributors from the\n+community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/) and\n+give Metals a try!\n+\n+- insert missing abstract members\n+- new file provider\n+- enable rename preview for Visual Studio Code\n+- debug and run working in Emacs and soon in Vim\n+\n+## Insert missing abstract members\n+\n+Thanks to yet again amazing work by\n+[tanishiking](https://github.com/tanishiking) we now support the quick fix code\n+action for implementing abstract class members. This code action is available in\n+case of errors and works in the same principle as the recent completions. It\n+will add any missing abstract members at the top of the class with the default\n+implementation of ???.\n+\n+![action](https://user-images.githubusercontent.com/9353584/73630120-8b0bc880-4698-11ea-8370-32b1fb2f86fd.gif)\n+\n+## New file provider\n+\n+In the last release we added a support for worksheets, which are an easy way to\n+quickly evaluate some code. To create a new worksheet you need to create a file\n+with the extension `.worksheet.sc`, which was not that easy to figure out. To\n+fix that situation, thanks to\n+[alekseiAlefirov](https://github.com/alekseiAlefirov), we now have a menu to\n+create different types of new files including classes, traits, object, package\n+objects and of course worksheets. At this time it's only available in Visual\n+Studio Code extension, but will soon be included also in the coc-metals vim"
  },
  {
    "id" : "94c414a6-5513-4364-b296-bb95b60269cd",
    "prId" : 1468,
    "comments" : [
      {
        "id" : "b485ecb1-8c7f-47a2-a729-a1e5d33d73b3",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Thoughts on maybe linking to it in case people aren't sure what we are referring to?\r\n\r\nhttps://code.visualstudio.com/updates/v1_42#_rename-preview",
        "createdAt" : "2020-02-25T20:31:15Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3fb0b2c99e8dbdbd8e6c1f37443adbc10498e9e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,447 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.1 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.8.1. This release includes a\n+large number of bug fixes and some new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">313</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">100</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">19</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">52</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">2</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/19?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with help from [Lunatech](https://lunatech.com) along with contributors from the\n+community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/) and\n+give Metals a try!\n+\n+- insert missing abstract members\n+- new file provider\n+- enable rename preview for Visual Studio Code\n+- debug and run working in Emacs and soon in Vim\n+\n+## Insert missing abstract members\n+\n+Thanks to yet again amazing work by\n+[tanishiking](https://github.com/tanishiking) we now support the quick fix code\n+action for implementing abstract class members. This code action is available in\n+case of errors and works in the same principle as the recent completions. It\n+will add any missing abstract members at the top of the class with the default\n+implementation of ???.\n+\n+![action](https://user-images.githubusercontent.com/9353584/73630120-8b0bc880-4698-11ea-8370-32b1fb2f86fd.gif)\n+\n+## New file provider\n+\n+In the last release we added a support for worksheets, which are an easy way to\n+quickly evaluate some code. To create a new worksheet you need to create a file\n+with the extension `.worksheet.sc`, which was not that easy to figure out. To\n+fix that situation, thanks to\n+[alekseiAlefirov](https://github.com/alekseiAlefirov), we now have a menu to\n+create different types of new files including classes, traits, object, package\n+objects and of course worksheets. At this time it's only available in Visual\n+Studio Code extension, but will soon be included also in the coc-metals vim\n+extension.\n+\n+![new-file-provider](https://user-images.githubusercontent.com/10850363/73563467-adfe6880-445d-11ea-89f6-a9a6398034da.gif)\n+\n+## Enable rename preview for Visual Studio Code\n+\n+Rename previews were in the last Visual Studio Code release, which enable users"
  },
  {
    "id" : "088f78bf-786e-4bf9-b130-3cf0b7780c5b",
    "prId" : 1468,
    "comments" : [
      {
        "id" : "6c72feb3-cb52-4a4c-ae3f-a98ee475fe27",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nwe revert to the old behavior of not opening closed files. The reason for this is\r\n```",
        "createdAt" : "2020-02-25T20:32:23Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3fb0b2c99e8dbdbd8e6c1f37443adbc10498e9e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,447 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.1 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.8.1. This release includes a\n+large number of bug fixes and some new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">313</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">100</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">19</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">52</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">2</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/19?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with help from [Lunatech](https://lunatech.com) along with contributors from the\n+community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/) and\n+give Metals a try!\n+\n+- insert missing abstract members\n+- new file provider\n+- enable rename preview for Visual Studio Code\n+- debug and run working in Emacs and soon in Vim\n+\n+## Insert missing abstract members\n+\n+Thanks to yet again amazing work by\n+[tanishiking](https://github.com/tanishiking) we now support the quick fix code\n+action for implementing abstract class members. This code action is available in\n+case of errors and works in the same principle as the recent completions. It\n+will add any missing abstract members at the top of the class with the default\n+implementation of ???.\n+\n+![action](https://user-images.githubusercontent.com/9353584/73630120-8b0bc880-4698-11ea-8370-32b1fb2f86fd.gif)\n+\n+## New file provider\n+\n+In the last release we added a support for worksheets, which are an easy way to\n+quickly evaluate some code. To create a new worksheet you need to create a file\n+with the extension `.worksheet.sc`, which was not that easy to figure out. To\n+fix that situation, thanks to\n+[alekseiAlefirov](https://github.com/alekseiAlefirov), we now have a menu to\n+create different types of new files including classes, traits, object, package\n+objects and of course worksheets. At this time it's only available in Visual\n+Studio Code extension, but will soon be included also in the coc-metals vim\n+extension.\n+\n+![new-file-provider](https://user-images.githubusercontent.com/10850363/73563467-adfe6880-445d-11ea-89f6-a9a6398034da.gif)\n+\n+## Enable rename preview for Visual Studio Code\n+\n+Rename previews were in the last Visual Studio Code release, which enable users\n+to see what will be changed when a rename is executed. Due to optimization and\n+UX reasons Metals renamed symbols in closed files in the background without\n+informing the editor. However, this also causes the previews to be misleading.\n+\n+To fix that situation we now send all the files to VS Code, which then is able\n+to display the preview. We do it, however, for up to 300 files, which threshold\n+was experimentally estimated. When the number of files reaches over that number,\n+we revert to the old behavior of not opening closed files. The reason for it is"
  },
  {
    "id" : "48283ea7-a4bc-4d76-a1dd-c49899e99f0b",
    "prId" : 1468,
    "comments" : [
      {
        "id" : "ddb0a141-7173-4a6a-a27c-fc50600db541",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nthat in some cases for larger numbers of files the editor could hang and become\r\n```",
        "createdAt" : "2020-02-25T20:32:56Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3fb0b2c99e8dbdbd8e6c1f37443adbc10498e9e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,447 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.1 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.8.1. This release includes a\n+large number of bug fixes and some new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">313</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">100</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">19</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">52</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">2</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/19?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with help from [Lunatech](https://lunatech.com) along with contributors from the\n+community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/) and\n+give Metals a try!\n+\n+- insert missing abstract members\n+- new file provider\n+- enable rename preview for Visual Studio Code\n+- debug and run working in Emacs and soon in Vim\n+\n+## Insert missing abstract members\n+\n+Thanks to yet again amazing work by\n+[tanishiking](https://github.com/tanishiking) we now support the quick fix code\n+action for implementing abstract class members. This code action is available in\n+case of errors and works in the same principle as the recent completions. It\n+will add any missing abstract members at the top of the class with the default\n+implementation of ???.\n+\n+![action](https://user-images.githubusercontent.com/9353584/73630120-8b0bc880-4698-11ea-8370-32b1fb2f86fd.gif)\n+\n+## New file provider\n+\n+In the last release we added a support for worksheets, which are an easy way to\n+quickly evaluate some code. To create a new worksheet you need to create a file\n+with the extension `.worksheet.sc`, which was not that easy to figure out. To\n+fix that situation, thanks to\n+[alekseiAlefirov](https://github.com/alekseiAlefirov), we now have a menu to\n+create different types of new files including classes, traits, object, package\n+objects and of course worksheets. At this time it's only available in Visual\n+Studio Code extension, but will soon be included also in the coc-metals vim\n+extension.\n+\n+![new-file-provider](https://user-images.githubusercontent.com/10850363/73563467-adfe6880-445d-11ea-89f6-a9a6398034da.gif)\n+\n+## Enable rename preview for Visual Studio Code\n+\n+Rename previews were in the last Visual Studio Code release, which enable users\n+to see what will be changed when a rename is executed. Due to optimization and\n+UX reasons Metals renamed symbols in closed files in the background without\n+informing the editor. However, this also causes the previews to be misleading.\n+\n+To fix that situation we now send all the files to VS Code, which then is able\n+to display the preview. We do it, however, for up to 300 files, which threshold\n+was experimentally estimated. When the number of files reaches over that number,\n+we revert to the old behavior of not opening closed files. The reason for it is\n+that in some cases for larger numbers files the editor could hang and become"
  },
  {
    "id" : "8439d5c2-a453-4f49-96f3-26065b649cd9",
    "prId" : 1468,
    "comments" : [
      {
        "id" : "ae5a8350-1511-43c0-a0dc-aea4e8cd90c6",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nThis release includes mostly fixes and minor features, which is due to the scope\r\n```",
        "createdAt" : "2020-02-25T20:34:14Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3fb0b2c99e8dbdbd8e6c1f37443adbc10498e9e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,447 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.1 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.8.1. This release includes a\n+large number of bug fixes and some new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">313</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">100</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">19</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">52</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">2</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/19?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with help from [Lunatech](https://lunatech.com) along with contributors from the\n+community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/) and\n+give Metals a try!\n+\n+- insert missing abstract members\n+- new file provider\n+- enable rename preview for Visual Studio Code\n+- debug and run working in Emacs and soon in Vim\n+\n+## Insert missing abstract members\n+\n+Thanks to yet again amazing work by\n+[tanishiking](https://github.com/tanishiking) we now support the quick fix code\n+action for implementing abstract class members. This code action is available in\n+case of errors and works in the same principle as the recent completions. It\n+will add any missing abstract members at the top of the class with the default\n+implementation of ???.\n+\n+![action](https://user-images.githubusercontent.com/9353584/73630120-8b0bc880-4698-11ea-8370-32b1fb2f86fd.gif)\n+\n+## New file provider\n+\n+In the last release we added a support for worksheets, which are an easy way to\n+quickly evaluate some code. To create a new worksheet you need to create a file\n+with the extension `.worksheet.sc`, which was not that easy to figure out. To\n+fix that situation, thanks to\n+[alekseiAlefirov](https://github.com/alekseiAlefirov), we now have a menu to\n+create different types of new files including classes, traits, object, package\n+objects and of course worksheets. At this time it's only available in Visual\n+Studio Code extension, but will soon be included also in the coc-metals vim\n+extension.\n+\n+![new-file-provider](https://user-images.githubusercontent.com/10850363/73563467-adfe6880-445d-11ea-89f6-a9a6398034da.gif)\n+\n+## Enable rename preview for Visual Studio Code\n+\n+Rename previews were in the last Visual Studio Code release, which enable users\n+to see what will be changed when a rename is executed. Due to optimization and\n+UX reasons Metals renamed symbols in closed files in the background without\n+informing the editor. However, this also causes the previews to be misleading.\n+\n+To fix that situation we now send all the files to VS Code, which then is able\n+to display the preview. We do it, however, for up to 300 files, which threshold\n+was experimentally estimated. When the number of files reaches over that number,\n+we revert to the old behavior of not opening closed files. The reason for it is\n+that in some cases for larger numbers files the editor could hang and become\n+unresponsive.\n+\n+## Debug in Vim and Emacs\n+\n+TODO\n+\n+## Other changes\n+\n+This release includes most fixes and minor features, which is due to the scope"
  },
  {
    "id" : "95e38d7e-4a3a-4721-ba5f-dfe4a6e57b12",
    "prId" : 1468,
    "comments" : [
      {
        "id" : "08961f68-7c4c-4b93-81f9-1c3e116dac23",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- add an override for the Bloop plugin version and promote it to LSP\r\n```",
        "createdAt" : "2020-02-25T20:35:27Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3fb0b2c99e8dbdbd8e6c1f37443adbc10498e9e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,447 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.1 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.8.1. This release includes a\n+large number of bug fixes and some new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">313</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">100</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">19</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">52</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">2</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/19?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with help from [Lunatech](https://lunatech.com) along with contributors from the\n+community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/) and\n+give Metals a try!\n+\n+- insert missing abstract members\n+- new file provider\n+- enable rename preview for Visual Studio Code\n+- debug and run working in Emacs and soon in Vim\n+\n+## Insert missing abstract members\n+\n+Thanks to yet again amazing work by\n+[tanishiking](https://github.com/tanishiking) we now support the quick fix code\n+action for implementing abstract class members. This code action is available in\n+case of errors and works in the same principle as the recent completions. It\n+will add any missing abstract members at the top of the class with the default\n+implementation of ???.\n+\n+![action](https://user-images.githubusercontent.com/9353584/73630120-8b0bc880-4698-11ea-8370-32b1fb2f86fd.gif)\n+\n+## New file provider\n+\n+In the last release we added a support for worksheets, which are an easy way to\n+quickly evaluate some code. To create a new worksheet you need to create a file\n+with the extension `.worksheet.sc`, which was not that easy to figure out. To\n+fix that situation, thanks to\n+[alekseiAlefirov](https://github.com/alekseiAlefirov), we now have a menu to\n+create different types of new files including classes, traits, object, package\n+objects and of course worksheets. At this time it's only available in Visual\n+Studio Code extension, but will soon be included also in the coc-metals vim\n+extension.\n+\n+![new-file-provider](https://user-images.githubusercontent.com/10850363/73563467-adfe6880-445d-11ea-89f6-a9a6398034da.gif)\n+\n+## Enable rename preview for Visual Studio Code\n+\n+Rename previews were in the last Visual Studio Code release, which enable users\n+to see what will be changed when a rename is executed. Due to optimization and\n+UX reasons Metals renamed symbols in closed files in the background without\n+informing the editor. However, this also causes the previews to be misleading.\n+\n+To fix that situation we now send all the files to VS Code, which then is able\n+to display the preview. We do it, however, for up to 300 files, which threshold\n+was experimentally estimated. When the number of files reaches over that number,\n+we revert to the old behavior of not opening closed files. The reason for it is\n+that in some cases for larger numbers files the editor could hang and become\n+unresponsive.\n+\n+## Debug in Vim and Emacs\n+\n+TODO\n+\n+## Other changes\n+\n+This release includes most fixes and minor features, which is due to the scope\n+of the last one. We concentrated last month on stability and making sure\n+everything is up to scratch. Those minor changes included:\n+\n+- use bloop.export-jar-classifiers property when importing the build from sbt\n+- ignore bad compiler options passed by users in order not to break completions\n+- add an override for build tool Bloop plugin version and promote it to LSP"
  },
  {
    "id" : "9a0cd151-3a39-4322-844c-792b4471db32",
    "prId" : 1468,
    "comments" : [
      {
        "id" : "7a404d40-1e02-4bb1-ac24-6f99f1712055",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nobjects and of course worksheets. At this time it's only available in the Visual\r\n```",
        "createdAt" : "2020-02-26T16:51:49Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3fb0b2c99e8dbdbd8e6c1f37443adbc10498e9e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,449 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.1 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.8.1. This release includes a\n+large number of bug fixes and some new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">313</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">100</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">19</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">52</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">2</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/19?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with help from [Lunatech](https://lunatech.com) along with contributors from the\n+community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/) and\n+give Metals a try!\n+\n+- insert missing abstract members\n+- new file provider\n+- enable rename preview for Visual Studio Code\n+- debug and run working in Emacs\n+\n+## Insert missing abstract members\n+\n+Thanks to yet again amazing work by\n+[tanishiking](https://github.com/tanishiking), we now support the quick fix code\n+action for implementing abstract class members. This code action is available in\n+case of errors and works in the same way as the recent \"Implement all members\"\n+completion. It will add any missing abstract members at the top of the class\n+with the default implementation of ???.\n+\n+![action](https://user-images.githubusercontent.com/9353584/73630120-8b0bc880-4698-11ea-8370-32b1fb2f86fd.gif)\n+\n+## New file provider\n+\n+In the last release we added support for worksheets, which are an easy way to\n+quickly evaluate some code. To create a new worksheet you need to create a file\n+with the extension `.worksheet.sc`, which was not that easy to figure out. To\n+fix that situation, thanks to\n+[alekseiAlefirov](https://github.com/alekseiAlefirov), we now have a menu to\n+create different types of new files including classes, traits, object, package\n+objects and of course worksheets. At this time it's only available in Visual"
  },
  {
    "id" : "5715c853-ea51-4c18-b2d6-f6e561b31c1b",
    "prId" : 1468,
    "comments" : [
      {
        "id" : "0ccb94e9-90f8-4bed-90df-6d9c67d304f0",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nit in Emacs via [lsp-mode's](https://github.com/emacs-lsp/lsp-mode) metals settings and dap-mode.\r\n```",
        "createdAt" : "2020-02-26T16:53:21Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3fb0b2c99e8dbdbd8e6c1f37443adbc10498e9e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,449 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.1 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.8.1. This release includes a\n+large number of bug fixes and some new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">313</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">100</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">19</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">52</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">2</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/19?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with help from [Lunatech](https://lunatech.com) along with contributors from the\n+community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/) and\n+give Metals a try!\n+\n+- insert missing abstract members\n+- new file provider\n+- enable rename preview for Visual Studio Code\n+- debug and run working in Emacs\n+\n+## Insert missing abstract members\n+\n+Thanks to yet again amazing work by\n+[tanishiking](https://github.com/tanishiking), we now support the quick fix code\n+action for implementing abstract class members. This code action is available in\n+case of errors and works in the same way as the recent \"Implement all members\"\n+completion. It will add any missing abstract members at the top of the class\n+with the default implementation of ???.\n+\n+![action](https://user-images.githubusercontent.com/9353584/73630120-8b0bc880-4698-11ea-8370-32b1fb2f86fd.gif)\n+\n+## New file provider\n+\n+In the last release we added support for worksheets, which are an easy way to\n+quickly evaluate some code. To create a new worksheet you need to create a file\n+with the extension `.worksheet.sc`, which was not that easy to figure out. To\n+fix that situation, thanks to\n+[alekseiAlefirov](https://github.com/alekseiAlefirov), we now have a menu to\n+create different types of new files including classes, traits, object, package\n+objects and of course worksheets. At this time it's only available in Visual\n+Studio Code and `coc-metals` extensions.\n+\n+![new-file-provider](https://user-images.githubusercontent.com/10850363/73563467-adfe6880-445d-11ea-89f6-a9a6398034da.gif)\n+\n+## Enable rename preview for Visual Studio Code\n+\n+Rename previews were in the last Visual Studio Code\n+[release](https://code.visualstudio.com/updates/v1_42#_rename-preview), which\n+enable users to see what will be changed when a rename is executed. Due to\n+optimization and UX reasons Metals renamed symbols in closed files in the\n+background without informing the editor. However, this also causes the previews\n+to be misleading.\n+\n+To fix that situation we now send all the files to VS Code, which then is able\n+to display the preview. We do it, however, for up to 300 files, which threshold\n+was experimentally estimated. When the number of files reaches over that number,\n+we revert to the old behavior of not opening closed files. The reason for this\n+is that in some cases for larger numbers of files the editor could hang and\n+become unresponsive.\n+\n+## Debug in Emacs\n+\n+In the last release run and debug support was only available for Visual Studio\n+Code, but thanks to amazing work by the contributors it is now possible to use\n+it in Emacs via lsp-mode's metals settings and dap-mode."
  },
  {
    "id" : "73d43ead-b763-418b-8da7-58cfa9b71955",
    "prId" : 1468,
    "comments" : [
      {
        "id" : "8950006a-050d-4758-b221-7365c0198529",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nof the last one. We concentrated this last month on stability and making sure\r\n```",
        "createdAt" : "2020-02-26T16:53:45Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3fb0b2c99e8dbdbd8e6c1f37443adbc10498e9e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,449 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.1 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.8.1. This release includes a\n+large number of bug fixes and some new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">313</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">100</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">19</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">52</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">2</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/19?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with help from [Lunatech](https://lunatech.com) along with contributors from the\n+community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/) and\n+give Metals a try!\n+\n+- insert missing abstract members\n+- new file provider\n+- enable rename preview for Visual Studio Code\n+- debug and run working in Emacs\n+\n+## Insert missing abstract members\n+\n+Thanks to yet again amazing work by\n+[tanishiking](https://github.com/tanishiking), we now support the quick fix code\n+action for implementing abstract class members. This code action is available in\n+case of errors and works in the same way as the recent \"Implement all members\"\n+completion. It will add any missing abstract members at the top of the class\n+with the default implementation of ???.\n+\n+![action](https://user-images.githubusercontent.com/9353584/73630120-8b0bc880-4698-11ea-8370-32b1fb2f86fd.gif)\n+\n+## New file provider\n+\n+In the last release we added support for worksheets, which are an easy way to\n+quickly evaluate some code. To create a new worksheet you need to create a file\n+with the extension `.worksheet.sc`, which was not that easy to figure out. To\n+fix that situation, thanks to\n+[alekseiAlefirov](https://github.com/alekseiAlefirov), we now have a menu to\n+create different types of new files including classes, traits, object, package\n+objects and of course worksheets. At this time it's only available in Visual\n+Studio Code and `coc-metals` extensions.\n+\n+![new-file-provider](https://user-images.githubusercontent.com/10850363/73563467-adfe6880-445d-11ea-89f6-a9a6398034da.gif)\n+\n+## Enable rename preview for Visual Studio Code\n+\n+Rename previews were in the last Visual Studio Code\n+[release](https://code.visualstudio.com/updates/v1_42#_rename-preview), which\n+enable users to see what will be changed when a rename is executed. Due to\n+optimization and UX reasons Metals renamed symbols in closed files in the\n+background without informing the editor. However, this also causes the previews\n+to be misleading.\n+\n+To fix that situation we now send all the files to VS Code, which then is able\n+to display the preview. We do it, however, for up to 300 files, which threshold\n+was experimentally estimated. When the number of files reaches over that number,\n+we revert to the old behavior of not opening closed files. The reason for this\n+is that in some cases for larger numbers of files the editor could hang and\n+become unresponsive.\n+\n+## Debug in Emacs\n+\n+In the last release run and debug support was only available for Visual Studio\n+Code, but thanks to amazing work by the contributors it is now possible to use\n+it in Emacs via lsp-mode's metals settings and dap-mode.\n+\n+## Other changes\n+\n+This release includes mostly fixes and minor features, which is due to the scope\n+of the last one. We concentrated last month on stability and making sure"
  },
  {
    "id" : "4236e797-7ae7-4825-bc5e-005e6eb39f43",
    "prId" : 1468,
    "comments" : [
      {
        "id" : "185e2d6b-579f-4687-8547-5a173a3e0e2a",
        "parentId" : null,
        "author" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "body" : "Oops, sorry again, this screen-record is a bit different from the real behavior (we add newlines between each member). I'll take a new one!",
        "createdAt" : "2020-02-27T01:21:02Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "43308640-754a-473e-bd6d-f9ed160a6d98",
        "parentId" : "185e2d6b-579f-4687-8547-5a173a3e0e2a",
        "author" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "body" : "Just re-took a screen-record with metals 0.8.1, can you use this one instead? :)\r\n\r\n![action-take2](https://user-images.githubusercontent.com/9353584/75405616-81047f00-5951-11ea-9972-a12e25b1746a.gif)\r\n\r\n`https://user-images.githubusercontent.com/9353584/75405616-81047f00-5951-11ea-9972-a12e25b1746a.gif`",
        "createdAt" : "2020-02-27T02:12:08Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8ea8d3e1-464d-474a-a11e-b0c4b44aa89d",
        "parentId" : "185e2d6b-579f-4687-8547-5a173a3e0e2a",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Right, I forgot about the newline. Could have made a new gif, but was plain lazy ech.",
        "createdAt" : "2020-02-27T10:52:46Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3fb0b2c99e8dbdbd8e6c1f37443adbc10498e9e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,449 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.1 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.8.1. This release includes a\n+large number of bug fixes and some new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">313</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">100</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">19</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">52</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">2</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/19?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with help from [Lunatech](https://lunatech.com) along with contributors from the\n+community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/) and\n+give Metals a try!\n+\n+- insert missing abstract members\n+- new file provider\n+- enable rename preview for Visual Studio Code\n+- debug and run working in Emacs\n+\n+## Insert missing abstract members\n+\n+Thanks to yet again amazing work by\n+[tanishiking](https://github.com/tanishiking), we now support the quick fix code\n+action for implementing abstract class members. This code action is available in\n+case of errors and works in the same way as the recent \"Implement all members\"\n+completion. It will add any missing abstract members at the top of the class\n+with the default implementation of ???.\n+\n+![action](https://user-images.githubusercontent.com/9353584/73630120-8b0bc880-4698-11ea-8370-32b1fb2f86fd.gif)"
  },
  {
    "id" : "1d8d6fc0-56a3-45ee-a87c-eb8f8f0149f7",
    "prId" : 1468,
    "comments" : [
      {
        "id" : "69702853-57df-440f-b3b9-982cbef4846e",
        "parentId" : null,
        "author" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "body" : "It might be helpful to add a link to https://scalameta.org/metals/blog/#completion-to-add-all-abstract-members on `recent \"Implement all members\" completion` for people who are not familiar with the 0.8.0 release.",
        "createdAt" : "2020-02-27T02:24:53Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "35907976-b6ac-4051-b04c-96d2c224fba0",
        "parentId" : "69702853-57df-440f-b3b9-982cbef4846e",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Good idea! Thanks!",
        "createdAt" : "2020-02-27T10:57:49Z",
        "updatedAt" : "2020-02-27T12:14:42Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3fb0b2c99e8dbdbd8e6c1f37443adbc10498e9e",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,449 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.1 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.8.1. This release includes a\n+large number of bug fixes and some new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">313</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">100</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">19</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">52</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">2</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/19?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with help from [Lunatech](https://lunatech.com) along with contributors from the\n+community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/) and\n+give Metals a try!\n+\n+- insert missing abstract members\n+- new file provider\n+- enable rename preview for Visual Studio Code\n+- debug and run working in Emacs\n+\n+## Insert missing abstract members\n+\n+Thanks to yet again amazing work by\n+[tanishiking](https://github.com/tanishiking), we now support the quick fix code\n+action for implementing abstract class members. This code action is available in\n+case of errors and works in the same way as the recent \"Implement all members\""
  }
]