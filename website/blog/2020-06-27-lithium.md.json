[
  {
    "id" : "40fd6974-569a-4472-b8c4-46289bb8f56a",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "f8f4e045-81e7-46ce-be66-ea7b798c03e9",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Should I make a smaller gif here? I wanted to show the entire workspace properly, but it might be too big.",
        "createdAt" : "2020-06-27T07:43:11Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "099106fd-7bec-45a9-9d92-391cbef185d2",
        "parentId" : "f8f4e045-81e7-46ce-be66-ea7b798c03e9",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I don't think it looks too bad, but if you are worried about it, just cutting in half and only showing the top should be fine as well.",
        "createdAt" : "2020-06-27T09:21:21Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are\n+able to provide importing dependencies inside your Scala worksheets with\n+completions and diagnostics working right from the bat.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+for example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want a lot of\n+time to figure out the best setup for starting with a new technology or the\n+language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as https://github.com/scala/scala-seed.g8.\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+In this version we added an additional command called `New Scala Project` that\n+enables users to reuse the same mechanism in comfort of your own UI. Firstly,\n+you can choose from existing templates, either curated by the Metals team, ones\n+existing on the giter8\n+[wiki page](https://github.com/foundweekends/giter8/wiki/giter8-templates) or\n+alternatively an entirely custom templates. Then you can choose the exact\n+location for the new project and the name. Afterwards, Metals will run giter8\n+itself and ofer to open the new project.\n+\n+![new-project](https://user-images.githubusercontent.com/3807253/81842954-2d1b3680-954d-11ea-934a-96fe53cafeb9.gif)"
  },
  {
    "id" : "0dc4cd81-6972-40ce-8a35-b06c811d78fa",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "6333c2cf-496c-4e2a-a73d-3b49b550b3ea",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nWe're happy to announce the release of Metals v0.9.1, which concentrated on\r\n```",
        "createdAt" : "2020-06-27T08:51:22Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on"
  },
  {
    "id" : "cf581520-2c4f-4852-99ce-91ee667b0492",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "df113d07-adef-4dd1-a76b-e8ae7ed25628",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nfixing issues with the recently released Scala 3 support, Ammonite support and a\r\n```",
        "createdAt" : "2020-06-27T08:51:55Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a"
  },
  {
    "id" : "3820b14c-3bc9-4cf6-aae1-732e9bf56bb4",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "df987a39-2a39-4d3f-9379-0719cc2ebde1",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- New project provider\r\n```",
        "createdAt" : "2020-06-27T08:53:44Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider"
  },
  {
    "id" : "c3c4d586-902d-4bc6-bd80-da19594f099a",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "b91c2c2d-b478-48f8-90d8-6e074ef4b503",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- Worksheet dependency support\r\n```",
        "createdAt" : "2020-06-27T08:53:54Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support"
  },
  {
    "id" : "2c8c60ae-49aa-4f7f-a989-767dc42df4c9",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "f2745040-79cc-48f8-91b7-17286c1fb3d0",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nThanks to great work by [alexarchambault](https://github.com/alexarchambault)\r\n```",
        "createdAt" : "2020-06-27T08:56:41Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)"
  },
  {
    "id" : "1a9453aa-7ae0-4793-9f88-bd6ebc33d308",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "88c07761-cb88-4f58-bb1e-3a0674d810af",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nwe now support [Ammonite](https://ammonite.io) script files. Ammonite enables\r\n```",
        "createdAt" : "2020-06-27T08:56:54Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables"
  },
  {
    "id" : "fcf7f39f-f785-4eb9-8d13-4d524043f9e7",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "877648ab-3eee-448b-a2d0-0650cfe2d20c",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nyou to create scripts that can easily be ran from the command line, without the\r\n```",
        "createdAt" : "2020-06-27T08:57:32Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the"
  },
  {
    "id" : "709a285e-95a7-45ca-a6c1-c4cfdcb8e887",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "4fccfc5f-1a28-4772-9fe0-d154790d5560",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\noverhead of setting up a build tool while still allowing you to download and use\r\n```",
        "createdAt" : "2020-06-27T08:57:57Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use"
  },
  {
    "id" : "ea184c03-25b0-428a-9146-91fad325760a",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "7bf6730c-e4ae-4804-91a3-fd768d824817",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nScala version or information about the added dependencies. You can change the\r\n```",
        "createdAt" : "2020-06-27T08:58:35Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the"
  },
  {
    "id" : "d0258ca0-af83-41f1-96b0-335c7edeb8af",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "dcfa7071-5aaa-4fe7-a2e8-59994bc95872",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\ndefault JVM parameters for the server such as `-Xmx`, which will limit the used\r\nmemory. These can be added via your metals editor extension using the newly created `metals.ammoniteJvmProperties` setting.\r\n```",
        "createdAt" : "2020-06-27T09:02:08Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1493df6e-4fa3-4bfc-83f8-dc2976c26199",
        "parentId" : "dcfa7071-5aaa-4fe7-a2e8-59994bc95872",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I'm not sure on the wording here, but I thought it might be nice to be explicit about the setting for this.\r\n\r\nSort of related, what are you thoughts about mentioning the `metals.ammonite-start` and `metals.ammonite-stop` commands. The only reason I mention it is that we often add commands like this without mentioning them, so users may just be totally unaware of what they do if they see them. If we mention them at least they are aware they are there and they know what they do. I don't feel strongly about this, but just an idea.",
        "createdAt" : "2020-06-27T09:05:38Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c0f6991a-f4c9-411f-a924-4a0c1bf66018",
        "parentId" : "dcfa7071-5aaa-4fe7-a2e8-59994bc95872",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Good idea! I will add that!",
        "createdAt" : "2020-06-27T19:23:44Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings."
  },
  {
    "id" : "2c702ff7-c51a-49f2-b33a-f5f1aebc9643",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "0d1ca08e-40db-473b-8746-49f4fa5ccf17",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nEach of the scripts first need to be imported into the Ammonite BSP server, which\r\n```",
        "createdAt" : "2020-06-27T09:06:25Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which"
  },
  {
    "id" : "b1098d40-c4e9-40c9-8fc4-def7ccd8aeb7",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "9cc32c00-1ff9-4ac8-9fe7-5856b0f05807",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Ah maybe what I mentioned about the start and stop commands could be mentioned here?",
        "createdAt" : "2020-06-27T09:06:53Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e053e91a-e88f-41a3-bda1-8815cf594b4e",
        "parentId" : "9cc32c00-1ff9-4ac8-9fe7-5856b0f05807",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I think it's more natural to mention it after the mentioning the BSP server.",
        "createdAt" : "2020-06-27T19:26:56Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5e0b1030-bbf2-4e56-9738-60e0746a45f1",
        "parentId" : "9cc32c00-1ff9-4ac8-9fe7-5856b0f05807",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Sure, sounds good.",
        "createdAt" : "2020-06-27T19:56:58Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts."
  },
  {
    "id" : "2a7f500f-fa94-470e-93af-963cf9cea931",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "d734db67-7b65-447c-be41-eb8f485737b2",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nIt's important to note that this is an early approach to Ammonite support, which\r\n```",
        "createdAt" : "2020-06-27T09:07:15Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which"
  },
  {
    "id" : "08697f0f-19dc-499b-aeb3-9ffae2d4a417",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "0fcc3161-5f0d-4df3-9cb2-e5c136875919",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\ncan learn more about the new feature or join the discussion in the\r\n```",
        "createdAt" : "2020-06-27T09:08:03Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the"
  },
  {
    "id" : "7c347afc-072a-4ca0-85f7-a1578a0967c4",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "c1658eb1-023f-42d5-8e2e-429b8809f03e",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- Import other scripts: Metals provides completions to select existing files\r\n  based on the filesystem information\r\n```",
        "createdAt" : "2020-06-27T09:09:26Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information"
  },
  {
    "id" : "f2b93bf2-fc3a-4921-8128-dfd3174b648e",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "66ded062-adff-427a-89d3-7ce1f5627b49",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- Import dependencies\r\n```",
        "createdAt" : "2020-06-27T09:10:40Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies"
  },
  {
    "id" : "dd9fc330-a7eb-4daa-a9b1-885536cb12d5",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "961c2297-a2e9-4e5f-b9fb-2d87af7593a5",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nThanks to the efforts of [olafurpg](https://github.com/olafurpg) in [mdoc](https://scalameta.org/mdoc/), which powers worksheets, users are now\r\n```",
        "createdAt" : "2020-06-27T09:12:00Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d508e7d0-22f6-48d8-b5a3-a72aa3ff6505",
        "parentId" : "961c2297-a2e9-4e5f-b9fb-2d87af7593a5",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "What do you think about mentioning mdoc here? I think it's a good idea to give credit where credit is due, but also I've found that a lot of people are unaware that mdoc is how the worksheets are actually working.",
        "createdAt" : "2020-06-27T09:12:52Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0cb2ef28-85fa-45b4-bc6c-e233c1ac3f90",
        "parentId" : "961c2297-a2e9-4e5f-b9fb-2d87af7593a5",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Sure, good idea! I haven't thought of it.",
        "createdAt" : "2020-06-27T19:31:45Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are"
  },
  {
    "id" : "40982644-724e-45c3-aa80-b15cb9e1e3d3",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "823b2e45-895c-462f-a86e-4f21798834dd",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nable to import dependencies directly inside of their Scala worksheet with\r\ncompletions and diagnostics working right from the start.\r\n```",
        "createdAt" : "2020-06-27T09:14:26Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1ea3cc4e-7b5a-449a-812e-a4b2cc59078f",
        "parentId" : "823b2e45-895c-462f-a86e-4f21798834dd",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Just a small change to make it more \"user focused\".",
        "createdAt" : "2020-06-27T09:14:53Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are\n+able to provide importing dependencies inside your Scala worksheets with\n+completions and diagnostics working right from the bat."
  },
  {
    "id" : "4572bcea-5e1c-428a-a8a7-02701118be39",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "08042f6c-79ad-4237-b095-327d3c60b85c",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nFor example:\r\n```",
        "createdAt" : "2020-06-27T09:15:40Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are\n+able to provide importing dependencies inside your Scala worksheets with\n+completions and diagnostics working right from the bat.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+for example:"
  },
  {
    "id" : "0a96ee9e-51b3-4380-92d5-948113113e49",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "7adb42f5-0eb0-4128-9eea-58e0895b0399",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n`::` is the same as `%%` in sbt, which will append the current Scala binary\r\n```",
        "createdAt" : "2020-06-27T09:15:54Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are\n+able to provide importing dependencies inside your Scala worksheets with\n+completions and diagnostics working right from the bat.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+for example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current scala binary"
  },
  {
    "id" : "7a28d83d-85a3-4900-857d-144d67aee1e0",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "ea432259-26fa-4291-8437-5235317f5d9e",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nproblem for both beginners and experts alike. Normally you don't want to spend a lot of\r\ntime to figuring out the best setup for starting with a new technology or the\r\nlanguage itself.\r\n```",
        "createdAt" : "2020-06-27T09:16:55Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are\n+able to provide importing dependencies inside your Scala worksheets with\n+completions and diagnostics working right from the bat.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+for example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want a lot of\n+time to figure out the best setup for starting with a new technology or the\n+language itself."
  },
  {
    "id" : "34260207-e490-46fd-b5b0-bb847caabf15",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "b5daf4fb-7512-45f5-bd58-ff2a76840768",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nScala templates found on Github such as [https://github.com/scala/scala-seed.g8](https://github.com/scala/scala-seed.g8).\r\n```",
        "createdAt" : "2020-06-27T09:17:34Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are\n+able to provide importing dependencies inside your Scala worksheets with\n+completions and diagnostics working right from the bat.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+for example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want a lot of\n+time to figure out the best setup for starting with a new technology or the\n+language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as https://github.com/scala/scala-seed.g8."
  },
  {
    "id" : "3c173f46-b47c-4a6b-8630-c8fb5e63fa36",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "793e215b-f457-49e8-8535-4ca8c5a58a18",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nTo address this, we've added an additional command called `New Scala Project` that\r\n```",
        "createdAt" : "2020-06-27T09:18:32Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1daeb8d0-18ec-4ec8-ad52-433a3b5f006e",
        "parentId" : "793e215b-f457-49e8-8535-4ca8c5a58a18",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I think since we outlined the problem in the sentence before we can change this a bit to draw a line from `existing problem` ----> `our solution`.",
        "createdAt" : "2020-06-27T09:19:19Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are\n+able to provide importing dependencies inside your Scala worksheets with\n+completions and diagnostics working right from the bat.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+for example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want a lot of\n+time to figure out the best setup for starting with a new technology or the\n+language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as https://github.com/scala/scala-seed.g8.\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+In this version we added an additional command called `New Scala Project` that"
  },
  {
    "id" : "2298867e-025e-478d-8031-31a3c3a488a7",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "d72e60b8-f01a-4925-a216-e3c9a3ad804b",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nenables users to reuse the same mechanism from the comfort of your editor. Firstly,\r\n```",
        "createdAt" : "2020-06-27T09:19:44Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are\n+able to provide importing dependencies inside your Scala worksheets with\n+completions and diagnostics working right from the bat.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+for example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want a lot of\n+time to figure out the best setup for starting with a new technology or the\n+language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as https://github.com/scala/scala-seed.g8.\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+In this version we added an additional command called `New Scala Project` that\n+enables users to reuse the same mechanism in comfort of your own UI. Firstly,"
  },
  {
    "id" : "2fce964c-c085-4b9c-b7c6-b830ff11add3",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "4add8a6f-4183-4d0c-aaa0-9d396adbeeb2",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nto create the project and offer to open the new project.\r\n```",
        "createdAt" : "2020-06-27T09:20:34Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are\n+able to provide importing dependencies inside your Scala worksheets with\n+completions and diagnostics working right from the bat.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+for example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want a lot of\n+time to figure out the best setup for starting with a new technology or the\n+language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as https://github.com/scala/scala-seed.g8.\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+In this version we added an additional command called `New Scala Project` that\n+enables users to reuse the same mechanism in comfort of your own UI. Firstly,\n+you can choose from existing templates, either curated by the Metals team, ones\n+existing on the giter8\n+[wiki page](https://github.com/foundweekends/giter8/wiki/giter8-templates) or\n+alternatively an entirely custom templates. Then you can choose the exact\n+location for the new project and the name. Afterwards, Metals will run giter8\n+itself and ofer to open the new project."
  },
  {
    "id" : "35a938aa-220d-4ff5-97b7-eab4c7812e50",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "2c23a81c-522f-4164-bf5a-9e01b0c551d3",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I'd capitalize the first letter of all these.",
        "createdAt" : "2020-06-27T09:21:57Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are\n+able to provide importing dependencies inside your Scala worksheets with\n+completions and diagnostics working right from the bat.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+for example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want a lot of\n+time to figure out the best setup for starting with a new technology or the\n+language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as https://github.com/scala/scala-seed.g8.\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+In this version we added an additional command called `New Scala Project` that\n+enables users to reuse the same mechanism in comfort of your own UI. Firstly,\n+you can choose from existing templates, either curated by the Metals team, ones\n+existing on the giter8\n+[wiki page](https://github.com/foundweekends/giter8/wiki/giter8-templates) or\n+alternatively an entirely custom templates. Then you can choose the exact\n+location for the new project and the name. Afterwards, Metals will run giter8\n+itself and ofer to open the new project.\n+\n+![new-project](https://user-images.githubusercontent.com/3807253/81842954-2d1b3680-954d-11ea-934a-96fe53cafeb9.gif)\n+\n+The command is also available as a button in the welcome view of the Visual\n+Studio Code Metals extension, which means it will be visible in case there are\n+no imported projects in the current workspace.\n+\n+The first curated templates were choosen by the team, however we are happy to\n+include more so that it's easier for people to discover new amazing libraries or\n+frameworks.\n+\n+## Miscellaneous improvements\n+\n+- fix run/debug in Maven workspaces\n+- always run newest sbt version if none is specified\n+- fix find references for Scala 3 on Windows\n+- pick jvm targets before other when running\n+- make breakpoints work properly in Scala 3 and in case of nested classes\n+- exhaustive pattern matching in case of sealed upper bound types\n+- compile before renaming instead showing an error\n+- fix issue with symlinked source directories\n+- fix missing references for synthetic companion objects\n+- automatically add stripMargin when using newline in a multiline string\n+  (behaviour can be disabled in the Metals settings)\n+- automatically add -J to java properties when running or debugging\n+- add an option to choose a build tool in workspaces with multiple ones\n+- fix go to definition in for JDK 11 library sources\n+- keep modifiers when implementing abstract members\n+- fix auto imports position when using package objects and multiple package\n+  definitions\n+- code action to make single string multiline with strip margin\n+- fix issues in files with Scala 2.13 specific syntax like for example\n+  underscore numeric literals (`val num = 100_000`)\n+- always run mill in interactive mode\n+- improvements to hover in Scala 3 files"
  },
  {
    "id" : "1e61c13d-2e26-43d8-8e9e-fed334197f52",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "486ffb2b-dd12-44b0-afbe-fc5216a64154",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I'm actually a bit confused at what this means.",
        "createdAt" : "2020-06-27T09:22:43Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "54ebecd7-659c-4960-b80e-b2b5a8972dfa",
        "parentId" : "486ffb2b-dd12-44b0-afbe-fc5216a64154",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Och yeah, that wasn't too clear :sweat_smile: ",
        "createdAt" : "2020-06-27T19:43:45Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are\n+able to provide importing dependencies inside your Scala worksheets with\n+completions and diagnostics working right from the bat.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+for example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want a lot of\n+time to figure out the best setup for starting with a new technology or the\n+language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as https://github.com/scala/scala-seed.g8.\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+In this version we added an additional command called `New Scala Project` that\n+enables users to reuse the same mechanism in comfort of your own UI. Firstly,\n+you can choose from existing templates, either curated by the Metals team, ones\n+existing on the giter8\n+[wiki page](https://github.com/foundweekends/giter8/wiki/giter8-templates) or\n+alternatively an entirely custom templates. Then you can choose the exact\n+location for the new project and the name. Afterwards, Metals will run giter8\n+itself and ofer to open the new project.\n+\n+![new-project](https://user-images.githubusercontent.com/3807253/81842954-2d1b3680-954d-11ea-934a-96fe53cafeb9.gif)\n+\n+The command is also available as a button in the welcome view of the Visual\n+Studio Code Metals extension, which means it will be visible in case there are\n+no imported projects in the current workspace.\n+\n+The first curated templates were choosen by the team, however we are happy to\n+include more so that it's easier for people to discover new amazing libraries or\n+frameworks.\n+\n+## Miscellaneous improvements\n+\n+- fix run/debug in Maven workspaces\n+- always run newest sbt version if none is specified\n+- fix find references for Scala 3 on Windows\n+- pick jvm targets before other when running"
  },
  {
    "id" : "a9cced93-c3c1-438c-a869-cb92e821df0a",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "44282e0d-ac0e-4910-a92b-357c2c469ded",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- exhaustive pattern matching in the case of sealed upper bound types\r\n```",
        "createdAt" : "2020-06-27T09:23:01Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are\n+able to provide importing dependencies inside your Scala worksheets with\n+completions and diagnostics working right from the bat.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+for example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want a lot of\n+time to figure out the best setup for starting with a new technology or the\n+language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as https://github.com/scala/scala-seed.g8.\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+In this version we added an additional command called `New Scala Project` that\n+enables users to reuse the same mechanism in comfort of your own UI. Firstly,\n+you can choose from existing templates, either curated by the Metals team, ones\n+existing on the giter8\n+[wiki page](https://github.com/foundweekends/giter8/wiki/giter8-templates) or\n+alternatively an entirely custom templates. Then you can choose the exact\n+location for the new project and the name. Afterwards, Metals will run giter8\n+itself and ofer to open the new project.\n+\n+![new-project](https://user-images.githubusercontent.com/3807253/81842954-2d1b3680-954d-11ea-934a-96fe53cafeb9.gif)\n+\n+The command is also available as a button in the welcome view of the Visual\n+Studio Code Metals extension, which means it will be visible in case there are\n+no imported projects in the current workspace.\n+\n+The first curated templates were choosen by the team, however we are happy to\n+include more so that it's easier for people to discover new amazing libraries or\n+frameworks.\n+\n+## Miscellaneous improvements\n+\n+- fix run/debug in Maven workspaces\n+- always run newest sbt version if none is specified\n+- fix find references for Scala 3 on Windows\n+- pick jvm targets before other when running\n+- make breakpoints work properly in Scala 3 and in case of nested classes\n+- exhaustive pattern matching in case of sealed upper bound types"
  },
  {
    "id" : "f052ed7d-65d6-4c01-9bb1-60f64a6d7392",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "47bafbff-a256-4a72-b7f3-da40dde9c1f1",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- compile before renaming instead of showing an error\r\n```",
        "createdAt" : "2020-06-27T09:23:18Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are\n+able to provide importing dependencies inside your Scala worksheets with\n+completions and diagnostics working right from the bat.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+for example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want a lot of\n+time to figure out the best setup for starting with a new technology or the\n+language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as https://github.com/scala/scala-seed.g8.\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+In this version we added an additional command called `New Scala Project` that\n+enables users to reuse the same mechanism in comfort of your own UI. Firstly,\n+you can choose from existing templates, either curated by the Metals team, ones\n+existing on the giter8\n+[wiki page](https://github.com/foundweekends/giter8/wiki/giter8-templates) or\n+alternatively an entirely custom templates. Then you can choose the exact\n+location for the new project and the name. Afterwards, Metals will run giter8\n+itself and ofer to open the new project.\n+\n+![new-project](https://user-images.githubusercontent.com/3807253/81842954-2d1b3680-954d-11ea-934a-96fe53cafeb9.gif)\n+\n+The command is also available as a button in the welcome view of the Visual\n+Studio Code Metals extension, which means it will be visible in case there are\n+no imported projects in the current workspace.\n+\n+The first curated templates were choosen by the team, however we are happy to\n+include more so that it's easier for people to discover new amazing libraries or\n+frameworks.\n+\n+## Miscellaneous improvements\n+\n+- fix run/debug in Maven workspaces\n+- always run newest sbt version if none is specified\n+- fix find references for Scala 3 on Windows\n+- pick jvm targets before other when running\n+- make breakpoints work properly in Scala 3 and in case of nested classes\n+- exhaustive pattern matching in case of sealed upper bound types\n+- compile before renaming instead showing an error"
  },
  {
    "id" : "58cd4f4b-fe00-4716-be34-5f1f6b7d0181",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "321d3cb8-2cd0-48fe-be33-a527bf245219",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I don't remember if this is all the time or only if the `-J` doesn't exit. It might be worth saying _if it doesn't already exist_ if that is the case.",
        "createdAt" : "2020-06-27T09:24:25Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are\n+able to provide importing dependencies inside your Scala worksheets with\n+completions and diagnostics working right from the bat.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+for example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want a lot of\n+time to figure out the best setup for starting with a new technology or the\n+language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as https://github.com/scala/scala-seed.g8.\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+In this version we added an additional command called `New Scala Project` that\n+enables users to reuse the same mechanism in comfort of your own UI. Firstly,\n+you can choose from existing templates, either curated by the Metals team, ones\n+existing on the giter8\n+[wiki page](https://github.com/foundweekends/giter8/wiki/giter8-templates) or\n+alternatively an entirely custom templates. Then you can choose the exact\n+location for the new project and the name. Afterwards, Metals will run giter8\n+itself and ofer to open the new project.\n+\n+![new-project](https://user-images.githubusercontent.com/3807253/81842954-2d1b3680-954d-11ea-934a-96fe53cafeb9.gif)\n+\n+The command is also available as a button in the welcome view of the Visual\n+Studio Code Metals extension, which means it will be visible in case there are\n+no imported projects in the current workspace.\n+\n+The first curated templates were choosen by the team, however we are happy to\n+include more so that it's easier for people to discover new amazing libraries or\n+frameworks.\n+\n+## Miscellaneous improvements\n+\n+- fix run/debug in Maven workspaces\n+- always run newest sbt version if none is specified\n+- fix find references for Scala 3 on Windows\n+- pick jvm targets before other when running\n+- make breakpoints work properly in Scala 3 and in case of nested classes\n+- exhaustive pattern matching in case of sealed upper bound types\n+- compile before renaming instead showing an error\n+- fix issue with symlinked source directories\n+- fix missing references for synthetic companion objects\n+- automatically add stripMargin when using newline in a multiline string\n+  (behaviour can be disabled in the Metals settings)\n+- automatically add -J to java properties when running or debugging"
  },
  {
    "id" : "f32ce019-8d5a-4d70-aa65-d73e9a1e8ea3",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "15984516-1920-45b2-a987-a8d59b3e784e",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- add a prompt to choose the desired build tool in workspaces with multiple build files\r\n```",
        "createdAt" : "2020-06-27T09:25:27Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,503 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- new project provider\n+- worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to a great work by [alexarchambault](https://github.com/alexarchambault)\n+we know support [Ammonite](https://ammonite.io) script files. Ammonite enables\n+to create scripts that you can run easily from the command line, without the\n+overhead of setting build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings.\n+\n+Each of the scripts needs to be first imported into Ammonite BSP server, which\n+can be done manually by clicking on the pop up whenever new script is opened or\n+selecting automatic import at the start, which will import any open scripts.\n+\n+It's important to note that this is an early approach to the support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+learn more about the new feature or comment the in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- importing other scripts, Metals provide completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- importing dependecies\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg), we now are\n+able to provide importing dependencies inside your Scala worksheets with\n+completions and diagnostics working right from the bat.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+for example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want a lot of\n+time to figure out the best setup for starting with a new technology or the\n+language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as https://github.com/scala/scala-seed.g8.\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+In this version we added an additional command called `New Scala Project` that\n+enables users to reuse the same mechanism in comfort of your own UI. Firstly,\n+you can choose from existing templates, either curated by the Metals team, ones\n+existing on the giter8\n+[wiki page](https://github.com/foundweekends/giter8/wiki/giter8-templates) or\n+alternatively an entirely custom templates. Then you can choose the exact\n+location for the new project and the name. Afterwards, Metals will run giter8\n+itself and ofer to open the new project.\n+\n+![new-project](https://user-images.githubusercontent.com/3807253/81842954-2d1b3680-954d-11ea-934a-96fe53cafeb9.gif)\n+\n+The command is also available as a button in the welcome view of the Visual\n+Studio Code Metals extension, which means it will be visible in case there are\n+no imported projects in the current workspace.\n+\n+The first curated templates were choosen by the team, however we are happy to\n+include more so that it's easier for people to discover new amazing libraries or\n+frameworks.\n+\n+## Miscellaneous improvements\n+\n+- fix run/debug in Maven workspaces\n+- always run newest sbt version if none is specified\n+- fix find references for Scala 3 on Windows\n+- pick jvm targets before other when running\n+- make breakpoints work properly in Scala 3 and in case of nested classes\n+- exhaustive pattern matching in case of sealed upper bound types\n+- compile before renaming instead showing an error\n+- fix issue with symlinked source directories\n+- fix missing references for synthetic companion objects\n+- automatically add stripMargin when using newline in a multiline string\n+  (behaviour can be disabled in the Metals settings)\n+- automatically add -J to java properties when running or debugging\n+- add an option to choose a build tool in workspaces with multiple ones"
  },
  {
    "id" : "756f22b8-3077-46b0-bd3c-068a6d1f6adf",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "c5f8a474-9ac6-4043-8596-53f05ea637a8",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Added another section that might be useful for people to see. Especially the code action, which might not be obvious, but is super useful. I thinking of adding a short one about the multiple build tools maybe later.",
        "createdAt" : "2020-06-27T21:27:21Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "984ca32e-719b-46c2-94e4-90f5f456c688",
        "parentId" : "c5f8a474-9ac6-4043-8596-53f05ea637a8",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "@ckipp01 or do you think the short mention is enough for that feature?",
        "createdAt" : "2020-06-27T21:37:06Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9908aa8f-fa5b-47de-b91f-136e1548ca68",
        "parentId" : "c5f8a474-9ac6-4043-8596-53f05ea637a8",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I think this is a really good idea having the subsection. I think I'd even suggest adding a small gif and short description of the \"choose build tool one\". I'm of of the mindset that anything that changes the general UX of something should be mentioned, and since that one does, it might be good to add it. Then we could also mention things like:\r\n- What scenario is this good for? Ex. When you have a project with both a build.sbt and build.sc, but the build.sc is what you use for your build definition. Previously if both were detected, it was automatically considered an sbt workspace. Now you get to choose.\r\n- If you choose the wrong one, or change later one, you'll need to remove the `.metals/` directory to reset the decisions.",
        "createdAt" : "2020-06-28T09:04:53Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f8c3bdec-58eb-4186-8dba-0c58e673f8d3",
        "parentId" : "c5f8a474-9ac6-4043-8596-53f05ea637a8",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Added the next section, I think this is mostly ready. Will go over it once more once we are ready to release.",
        "createdAt" : "2020-06-28T18:06:28Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,527 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We're happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with the recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- New project provider\n+- Worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to great work by [alexarchambault](https://github.com/alexarchambault) we\n+now support [Ammonite](https://ammonite.io) script files. Ammonite enables you\n+to create scripts that can easily be ran from the command line, without the\n+overhead of setting up a build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+Scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings. These can be added via your metals editor extension\n+using the newly created `metals.ammoniteJvmProperties` setting. The Ammonite\n+server can also be started and stopped manually using the new commands\n+`ammonite-start` and `ammonite-stop`.\n+\n+Each of the scripts first need to be imported into the Ammonite BSP server,\n+which can be done manually by clicking on the pop up whenever new script is\n+opened or selecting automatic import at the start, which will import any open\n+scripts automatically.\n+\n+It's important to note that this is an early approach to Ammonite support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+can learn more about the new feature or join the discussion in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- Import other scripts: Metals provides completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- Import dependecies:\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg) in\n+[mdoc](https://scalameta.org/mdoc/), which powers worksheets, users are now able\n+to import dependencies directly inside of their Scala worksheet with completions\n+and diagnostics working right from the start.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+For example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current Scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want to spend a\n+lot of time figuring out the best setup for starting with a new technology or\n+the language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as\n+[https://github.com/scala/scala-seed.g8](https://github.com/scala/scala-seed.g8).\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+To address this, we've added an additional command called `New Scala Project`\n+that enables users to reuse the same mechanism from the comfort of your editor.\n+Firstly, you can choose from existing templates, either curated by the Metals\n+team, ones existing on the giter8\n+[wiki page](https://github.com/foundweekends/giter8/wiki/giter8-templates) or\n+alternatively an entirely custom templates. Then you can choose the exact\n+location for the new project and the name. Afterwards, Metals will run giter8 to\n+create the project and offer to open that new project.\n+\n+![new-project](https://user-images.githubusercontent.com/3807253/81842954-2d1b3680-954d-11ea-934a-96fe53cafeb9.gif)\n+\n+The command is also available as a button in the welcome view of the Visual\n+Studio Code Metals extension, which means it will be visible in case there are\n+no imported projects in the current workspace.\n+\n+The first curated templates were choosen by the team, however we are happy to\n+include more so that it's easier for people to discover new amazing libraries or\n+frameworks.\n+\n+## Multiline string improvements"
  },
  {
    "id" : "f1b940d5-d4b2-4547-9b45-a6916a96a892",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "9ff97c84-554d-4b6f-ba89-a7fa1d1b9c59",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Will update the PR list once we have a tagged version ready.",
        "createdAt" : "2020-06-27T21:27:56Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,527 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We're happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with the recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- New project provider\n+- Worksheet dependency support\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to great work by [alexarchambault](https://github.com/alexarchambault) we\n+now support [Ammonite](https://ammonite.io) script files. Ammonite enables you\n+to create scripts that can easily be ran from the command line, without the\n+overhead of setting up a build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+Scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings. These can be added via your metals editor extension\n+using the newly created `metals.ammoniteJvmProperties` setting. The Ammonite\n+server can also be started and stopped manually using the new commands\n+`ammonite-start` and `ammonite-stop`.\n+\n+Each of the scripts first need to be imported into the Ammonite BSP server,\n+which can be done manually by clicking on the pop up whenever new script is\n+opened or selecting automatic import at the start, which will import any open\n+scripts automatically.\n+\n+It's important to note that this is an early approach to Ammonite support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+can learn more about the new feature or join the discussion in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- Import other scripts: Metals provides completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- Import dependecies:\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg) in\n+[mdoc](https://scalameta.org/mdoc/), which powers worksheets, users are now able\n+to import dependencies directly inside of their Scala worksheet with completions\n+and diagnostics working right from the start.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+For example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current Scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want to spend a\n+lot of time figuring out the best setup for starting with a new technology or\n+the language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as\n+[https://github.com/scala/scala-seed.g8](https://github.com/scala/scala-seed.g8).\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+To address this, we've added an additional command called `New Scala Project`\n+that enables users to reuse the same mechanism from the comfort of your editor.\n+Firstly, you can choose from existing templates, either curated by the Metals\n+team, ones existing on the giter8\n+[wiki page](https://github.com/foundweekends/giter8/wiki/giter8-templates) or\n+alternatively an entirely custom templates. Then you can choose the exact\n+location for the new project and the name. Afterwards, Metals will run giter8 to\n+create the project and offer to open that new project.\n+\n+![new-project](https://user-images.githubusercontent.com/3807253/81842954-2d1b3680-954d-11ea-934a-96fe53cafeb9.gif)\n+\n+The command is also available as a button in the welcome view of the Visual\n+Studio Code Metals extension, which means it will be visible in case there are\n+no imported projects in the current workspace.\n+\n+The first curated templates were choosen by the team, however we are happy to\n+include more so that it's easier for people to discover new amazing libraries or\n+frameworks.\n+\n+## Multiline string improvements\n+\n+There are two new quality of life improvements when it comes to multiline\n+strings. Firstly, thanks to [mlachkar](https://github.com/mlachkar) we now\n+automatically add `stripMargin` method invocation when using newline in a\n+multiline string if that string uses `|` and has not existing `stripMargin`:\n+\n+![strip-margin](https://i.imgur.com/Z2Q1glN.gif)\n+\n+This behaviour can be disabled in Metals settings using\n+`metals.enableStripMarginOnTypeFormatting`.\n+\n+Another useful improvement coming from [colineto](https://github.com/colineto)\n+is a new code action that can easily convert single string into the traditional\n+multiline string with `|` and `stripMargin` at the end:\n+\n+![new-action](https://i.imgur.com/5ohRcl9.gif)\n+\n+## Miscellaneous improvements\n+\n+- Fix run/debug in Maven workspaces.\n+- Always run newest sbt version if none is specified.\n+- Fix find references for Scala 3 on Windows.\n+- Pick jvm targets with higher priority when running without specifying the\n+  exact build target.\n+- Make breakpoints work properly in Scala 3 and in case of nested classes.\n+- Exhaustive pattern matching in the case of sealed upper bound types.\n+- Compile before renaming instead of showing an error.\n+- Fix issue with symlinked source directories.\n+- Fix missing references for synthetic companion objects.\n+- Automatically add -J if it doesn't already exist to java properties when\n+  running or debugging.\n+- Add a prompt to choose the desired build tool in workspaces with multiple\n+  build files\n+- Fix go to definition in for JDK 11 library sources.\n+- Keep modifiers when implementing abstract members.\n+- Fix auto imports position when using package objects and multiple package\n+  definitions.\n+- Fix issues in files with Scala 2.13 specific syntax like for example\n+  underscore numeric literals (`val num = 100_000`).\n+- Always run mill in interactive mode.\n+- Improvements to hover in Scala 3 files.\n+\n+## Contributors\n+\n+Big thanks to everybody who contributed to this release or reported an issue!\n+\n+```\n+$ git shortlog -sn --no-merges v0.9.0..v0.9.1\n+Tomasz Godzik\n+Scala Steward\n+Alexandre Archambault\n+Chris Kipp\n+Łukasz Trojanowski\n+Coline Thomas\n+Krzysztof Bochenek\n+Meriam Lachkar\n+bettyblue\n+Daniel King\n+Naoki Takezoe\n+Olafur Pall Geirsson\n+Win Wang\n+Martin Duhem\n+ag91\n+faizk\n+Łukasz Wawrzyk\n+\n+```\n+\n+## Merged PRs\n+\n+## [v0.9.1](https://github.com/scalameta/metals/tree/v0.9.1) (2020-06-29)\n+\n+[Full Changelog](https://github.com/scalameta/metals/compare/v0.9.0...v0.9.1)\n+\n+**Merged pull requests:**\n+\n+- Update mdoc to 2.2.3 and power completions with worksheet's classpath"
  },
  {
    "id" : "f38461ad-387a-4f3f-829f-5f3db0149ee2",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "d864c935-7c8d-470d-8ff9-8fa3472436a6",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nWe're happy to announce the release of Metals v0.9.1, which focused on\r\n```",
        "createdAt" : "2020-06-28T08:56:18Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,528 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We're happy to announce the release of Metals v0.9.1, which concentrated on"
  },
  {
    "id" : "88616c17-dfb8-4569-84f3-c88cb88ce51b",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "e5156d24-fb45-4b14-b503-95228a3920dd",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nwhich can be done manually by clicking on the pop up whenever a new script is\r\n```",
        "createdAt" : "2020-06-28T08:57:43Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,528 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We're happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with the recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- New project provider\n+- Worksheet dependency support\n+- Multiline string improvements\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to great work by [alexarchambault](https://github.com/alexarchambault) we\n+now support [Ammonite](https://ammonite.io) script files. Ammonite enables you\n+to create scripts that can easily be ran from the command line, without the\n+overhead of setting up a build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+Scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings. These can be added via your metals editor extension\n+using the newly created `metals.ammoniteJvmProperties` setting. The Ammonite\n+server can also be started and stopped manually using the new commands\n+`ammonite-start` and `ammonite-stop`.\n+\n+Each of the scripts first need to be imported into the Ammonite BSP server,\n+which can be done manually by clicking on the pop up whenever new script is"
  },
  {
    "id" : "48369c9d-4525-4cf6-9881-b3f087f063fc",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "5e83e190-6d8f-45f9-a0b2-20d5ab71e207",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nalternatively entirely custom templates. Then you can choose the exact\r\n```\r\nor\r\n```suggestion\r\nalternatively an entirely custom template. Then you can choose the exact\r\n```",
        "createdAt" : "2020-06-28T09:00:53Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,528 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We're happy to announce the release of Metals v0.9.1, which concentrated on\n+fixing issues with the recently released Scala 3 support, Ammonite support and a\n+couple of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- New project provider\n+- Worksheet dependency support\n+- Multiline string improvements\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+\n+## Ammonite support\n+\n+Thanks to great work by [alexarchambault](https://github.com/alexarchambault) we\n+now support [Ammonite](https://ammonite.io) script files. Ammonite enables you\n+to create scripts that can easily be ran from the command line, without the\n+overhead of setting up a build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+Scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings. These can be added via your metals editor extension\n+using the newly created `metals.ammoniteJvmProperties` setting. The Ammonite\n+server can also be started and stopped manually using the new commands\n+`ammonite-start` and `ammonite-stop`.\n+\n+Each of the scripts first need to be imported into the Ammonite BSP server,\n+which can be done manually by clicking on the pop up whenever new script is\n+opened or selecting automatic import at the start, which will import any open\n+scripts automatically.\n+\n+It's important to note that this is an early approach to Ammonite support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+can learn more about the new feature or join the discussion in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- Import other scripts: Metals provides completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- Import dependecies:\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg) in\n+[mdoc](https://scalameta.org/mdoc/), which powers worksheets, users are now able\n+to import dependencies directly inside of their Scala worksheet with completions\n+and diagnostics working right from the start.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+For example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current Scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want to spend a\n+lot of time figuring out the best setup for starting with a new technology or\n+the language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as\n+[https://github.com/scala/scala-seed.g8](https://github.com/scala/scala-seed.g8).\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+To address this, we've added an additional command called `New Scala Project`\n+that enables users to reuse the same mechanism from the comfort of your editor.\n+Firstly, you can choose from existing templates, either curated by the Metals\n+team, ones existing on the giter8\n+[wiki page](https://github.com/foundweekends/giter8/wiki/giter8-templates) or\n+alternatively an entirely custom templates. Then you can choose the exact"
  },
  {
    "id" : "69c36399-6578-462a-a759-7a03c3b388b4",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "464f13fc-04c2-4997-a1cb-a2d04b8ac6c3",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Super small nitpick, but we want to make sure not to confuse people into thinking this is \"multiple workspace\" support in any way, so I'd recommend switching this up a bit.\r\n```suggestion\r\n- Multiple build tool selection within a workspace\r\n```",
        "createdAt" : "2020-06-29T06:20:49Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "85ec2cfb-f2db-4062-846d-8c5053ce3c97",
        "parentId" : "464f13fc-04c2-4997-a1cb-a2d04b8ac6c3",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Fixed!",
        "createdAt" : "2020-06-30T21:23:54Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,545 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We're happy to announce the release of Metals v0.9.1, which focused on fixing\n+issues with the recently released Scala 3 support, Ammonite support and a couple\n+of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">5</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- New project provider\n+- Worksheet dependency support\n+- Multiline string improvements\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+- Multiple workspace build tools selection"
  },
  {
    "id" : "df3d4122-2159-461f-aac5-b9e6c3d1169f",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "d866f63c-5305-41db-91ed-e85279512143",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "0.25.0-RC2 support",
        "createdAt" : "2020-06-29T08:34:39Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0362b30c-6b3f-4c65-a8d7-3742cd4cb157",
        "parentId" : "d866f63c-5305-41db-91ed-e85279512143",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Thanks, haven't noticed that one!",
        "createdAt" : "2020-06-30T21:24:10Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,545 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We're happy to announce the release of Metals v0.9.1, which focused on fixing\n+issues with the recently released Scala 3 support, Ammonite support and a couple\n+of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">5</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- New project provider\n+- Worksheet dependency support\n+- Multiline string improvements\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support"
  },
  {
    "id" : "eaf6b7f1-8330-4f65-9bb7-b0d67da2d436",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "1bb48c9e-d2b9-444f-a089-b1651f5081c4",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "As people will use ammonite scripts without build tool I would add what scalaVersion will be used in that case as this is not stated anywhere I think (it will be 2.12.11?)",
        "createdAt" : "2020-06-29T08:48:06Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "eef55ba6-6e10-489e-913d-141894e42abf",
        "parentId" : "1bb48c9e-d2b9-444f-a089-b1651f5081c4",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Added an example and some more info about it, what do you think?",
        "createdAt" : "2020-06-30T21:20:16Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dcd35cd1-9b85-4e43-b5c8-fbc261ee848d",
        "parentId" : "1bb48c9e-d2b9-444f-a089-b1651f5081c4",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "wow nice I did not know you can set scala version via comment!\r\nPerfect example :+1:",
        "createdAt" : "2020-06-30T21:48:17Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,545 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We're happy to announce the release of Metals v0.9.1, which focused on fixing\n+issues with the recently released Scala 3 support, Ammonite support and a couple\n+of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">5</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- New project provider\n+- Worksheet dependency support\n+- Multiline string improvements\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+- Multiple workspace build tools selection\n+\n+## Ammonite support\n+\n+Thanks to great work by [alexarchambault](https://github.com/alexarchambault) we\n+now support [Ammonite](https://ammonite.io) script files. Ammonite enables you\n+to create scripts that can easily be ran from the command line, without the\n+overhead of setting up a build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+Scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings. These can be added via your metals editor extension\n+using the newly created `metals.ammoniteJvmProperties` setting. The Ammonite\n+server can also be started and stopped manually using the new commands\n+`ammonite-start` and `ammonite-stop`.\n+\n+Each of the scripts first need to be imported into the Ammonite BSP server,"
  },
  {
    "id" : "8ec01a09-fc76-4c70-b3d8-92ffabc6220d",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "c8a1a85e-b4ea-43aa-8e1b-6a8a7cf88310",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "In case of multiple build tools in single workspace you can see which one was used to import project in 'Metals Doctor' view.\r\n",
        "createdAt" : "2020-06-29T09:00:53Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "416fb5a4-77b6-4a93-8ef6-02998293a612",
        "parentId" : "c8a1a85e-b4ea-43aa-8e1b-6a8a7cf88310",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Ah I totally forgot about that! 😄 Good memory.",
        "createdAt" : "2020-06-29T12:13:04Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4fc8adc7-0133-4f5c-92c8-d22b90a6626b",
        "parentId" : "c8a1a85e-b4ea-43aa-8e1b-6a8a7cf88310",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Added! Thanks!",
        "createdAt" : "2020-06-30T21:20:27Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,545 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We're happy to announce the release of Metals v0.9.1, which focused on fixing\n+issues with the recently released Scala 3 support, Ammonite support and a couple\n+of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">5</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- New project provider\n+- Worksheet dependency support\n+- Multiline string improvements\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+- Multiple workspace build tools selection\n+\n+## Ammonite support\n+\n+Thanks to great work by [alexarchambault](https://github.com/alexarchambault) we\n+now support [Ammonite](https://ammonite.io) script files. Ammonite enables you\n+to create scripts that can easily be ran from the command line, without the\n+overhead of setting up a build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+Scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings. These can be added via your metals editor extension\n+using the newly created `metals.ammoniteJvmProperties` setting. The Ammonite\n+server can also be started and stopped manually using the new commands\n+`ammonite-start` and `ammonite-stop`.\n+\n+Each of the scripts first need to be imported into the Ammonite BSP server,\n+which can be done manually by clicking on the pop up whenever a new script is\n+opened or selecting automatic import at the start, which will import any open\n+scripts automatically.\n+\n+It's important to note that this is an early approach to Ammonite support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+can learn more about the new feature or join the discussion in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- Import other scripts: Metals provides completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- Import dependecies:\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg) in\n+[mdoc](https://scalameta.org/mdoc/), which powers worksheets, users are now able\n+to import dependencies directly inside of their Scala worksheet with completions\n+and diagnostics working right from the start.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+For example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current Scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want to spend a\n+lot of time figuring out the best setup for starting with a new technology or\n+the language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as\n+[https://github.com/scala/scala-seed.g8](https://github.com/scala/scala-seed.g8).\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+To address this, we've added an additional command called `New Scala Project`\n+that enables users to reuse the same mechanism from the comfort of your editor.\n+Firstly, you can choose from existing templates, either curated by the Metals\n+team, ones existing on the giter8\n+[wiki page](https://github.com/foundweekends/giter8/wiki/giter8-templates) or\n+alternatively an entirely custom template. Then you can choose the exact\n+location for the new project and the name. Afterwards, Metals will run giter8 to\n+create the project and offer to open that new project.\n+\n+![new-project](https://user-images.githubusercontent.com/3807253/81842954-2d1b3680-954d-11ea-934a-96fe53cafeb9.gif)\n+\n+The command is also available as a button in the welcome view of the Visual\n+Studio Code Metals extension, which means it will be visible in case there are\n+no imported projects in the current workspace.\n+\n+The first curated templates were choosen by the team, however we are happy to\n+include more so that it's easier for people to discover new amazing libraries or\n+frameworks.\n+\n+## Multiline string improvements\n+\n+There are two new quality of life improvements when it comes to multiline\n+strings. Firstly, thanks to [mlachkar](https://github.com/mlachkar) we now\n+automatically add `stripMargin` method invocation when using newline in a\n+multiline string if that string uses `|` and has not existing `stripMargin`:\n+\n+![strip-margin](https://i.imgur.com/Z2Q1glN.gif)\n+\n+This behaviour can be disabled in Metals settings using\n+`metals.enableStripMarginOnTypeFormatting`.\n+\n+Another useful improvement coming from [colineto](https://github.com/colineto)\n+is a new code action that can easily convert single string into the traditional\n+multiline string with `|` and `stripMargin` at the end:\n+\n+![new-action](https://i.imgur.com/5ohRcl9.gif)\n+\n+## Multiple workspace build tools selection\n+\n+Previously, Metals would only pick up a single build tool in a workspace even if\n+in reality there were multiple available ones. To help with that we added a\n+prompt to choose the desired build tool in workspaces with multiple build files.\n+\n+An example situation where this is needed is when you have a project with both a\n+`build.sbt` and `build.sc`, but the `build.sc` is what you use for your build\n+definition. Previously if both were detected, it was automatically considered an\n+Sbt workspace, however now it's possible to choose.\n+\n+![multiple-build-tool](https://i.imgur.com/pAgZK7u.gif)\n+\n+If you choose the wrong one, or change the main build tool later on, you'll need\n+to remove the .metals/ directory to reset the decisions.\n+"
  },
  {
    "id" : "1a86897c-23e2-482a-997b-78d6d2b9563b",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "5cf0259c-6a4b-4ff1-9adc-a149a3bf56f3",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "what does this mean?",
        "createdAt" : "2020-06-29T09:02:06Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d4ac5825-17f3-4037-95bf-44967f5b1d71",
        "parentId" : "5cf0259c-6a4b-4ff1-9adc-a149a3bf56f3",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "In VS Code it can be done using launch.json. You don't have to specify the target and we will try to find one for the user. I changed it to first check for the JVM ones",
        "createdAt" : "2020-06-30T21:04:48Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6ef70e4a-46ce-4717-9ee8-265fa088f3fa",
        "parentId" : "5cf0259c-6a4b-4ff1-9adc-a149a3bf56f3",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "But it can be done using different editors too, so not sure how best to really explain it here. I will change `running` to `using run/debug`",
        "createdAt" : "2020-06-30T21:05:43Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,545 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We're happy to announce the release of Metals v0.9.1, which focused on fixing\n+issues with the recently released Scala 3 support, Ammonite support and a couple\n+of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">5</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- New project provider\n+- Worksheet dependency support\n+- Multiline string improvements\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+- Multiple workspace build tools selection\n+\n+## Ammonite support\n+\n+Thanks to great work by [alexarchambault](https://github.com/alexarchambault) we\n+now support [Ammonite](https://ammonite.io) script files. Ammonite enables you\n+to create scripts that can easily be ran from the command line, without the\n+overhead of setting up a build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+Scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings. These can be added via your metals editor extension\n+using the newly created `metals.ammoniteJvmProperties` setting. The Ammonite\n+server can also be started and stopped manually using the new commands\n+`ammonite-start` and `ammonite-stop`.\n+\n+Each of the scripts first need to be imported into the Ammonite BSP server,\n+which can be done manually by clicking on the pop up whenever a new script is\n+opened or selecting automatic import at the start, which will import any open\n+scripts automatically.\n+\n+It's important to note that this is an early approach to Ammonite support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+can learn more about the new feature or join the discussion in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- Import other scripts: Metals provides completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- Import dependecies:\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg) in\n+[mdoc](https://scalameta.org/mdoc/), which powers worksheets, users are now able\n+to import dependencies directly inside of their Scala worksheet with completions\n+and diagnostics working right from the start.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+For example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current Scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want to spend a\n+lot of time figuring out the best setup for starting with a new technology or\n+the language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as\n+[https://github.com/scala/scala-seed.g8](https://github.com/scala/scala-seed.g8).\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+To address this, we've added an additional command called `New Scala Project`\n+that enables users to reuse the same mechanism from the comfort of your editor.\n+Firstly, you can choose from existing templates, either curated by the Metals\n+team, ones existing on the giter8\n+[wiki page](https://github.com/foundweekends/giter8/wiki/giter8-templates) or\n+alternatively an entirely custom template. Then you can choose the exact\n+location for the new project and the name. Afterwards, Metals will run giter8 to\n+create the project and offer to open that new project.\n+\n+![new-project](https://user-images.githubusercontent.com/3807253/81842954-2d1b3680-954d-11ea-934a-96fe53cafeb9.gif)\n+\n+The command is also available as a button in the welcome view of the Visual\n+Studio Code Metals extension, which means it will be visible in case there are\n+no imported projects in the current workspace.\n+\n+The first curated templates were choosen by the team, however we are happy to\n+include more so that it's easier for people to discover new amazing libraries or\n+frameworks.\n+\n+## Multiline string improvements\n+\n+There are two new quality of life improvements when it comes to multiline\n+strings. Firstly, thanks to [mlachkar](https://github.com/mlachkar) we now\n+automatically add `stripMargin` method invocation when using newline in a\n+multiline string if that string uses `|` and has not existing `stripMargin`:\n+\n+![strip-margin](https://i.imgur.com/Z2Q1glN.gif)\n+\n+This behaviour can be disabled in Metals settings using\n+`metals.enableStripMarginOnTypeFormatting`.\n+\n+Another useful improvement coming from [colineto](https://github.com/colineto)\n+is a new code action that can easily convert single string into the traditional\n+multiline string with `|` and `stripMargin` at the end:\n+\n+![new-action](https://i.imgur.com/5ohRcl9.gif)\n+\n+## Multiple workspace build tools selection\n+\n+Previously, Metals would only pick up a single build tool in a workspace even if\n+in reality there were multiple available ones. To help with that we added a\n+prompt to choose the desired build tool in workspaces with multiple build files.\n+\n+An example situation where this is needed is when you have a project with both a\n+`build.sbt` and `build.sc`, but the `build.sc` is what you use for your build\n+definition. Previously if both were detected, it was automatically considered an\n+Sbt workspace, however now it's possible to choose.\n+\n+![multiple-build-tool](https://i.imgur.com/pAgZK7u.gif)\n+\n+If you choose the wrong one, or change the main build tool later on, you'll need\n+to remove the .metals/ directory to reset the decisions.\n+\n+This great new feature was contributed by [ckipp01](https://github.com/ckipp01)!\n+\n+## Miscellaneous improvements\n+\n+- Fix run/debug in Maven workspaces.\n+- Always run newest sbt version if none is specified.\n+- Fix find references for Scala 3 on Windows.\n+- Pick jvm targets with higher priority when running without specifying the"
  },
  {
    "id" : "c8141006-6a22-4dee-a076-cef951e20781",
    "prId" : 1858,
    "comments" : [
      {
        "id" : "53ba73bf-8949-4bfa-aa3a-16ae921bbfd0",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "`in` can be removed",
        "createdAt" : "2020-06-29T09:03:47Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a0175188-8dac-42fc-87a2-fff873566c2e",
        "parentId" : "53ba73bf-8949-4bfa-aa3a-16ae921bbfd0",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Removed",
        "createdAt" : "2020-06-30T21:20:40Z",
        "updatedAt" : "2020-07-01T20:56:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "dc03f40a15a15e0414829ba17ffc6d14dccc0a51",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,545 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.1 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We're happy to announce the release of Metals v0.9.1, which focused on fixing\n+issues with the recently released Scala 3 support, Ammonite support and a couple\n+of new features.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">261</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">96</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">16</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">12</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">5</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/24?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Ammonite support\n+- New project provider\n+- Worksheet dependency support\n+- Multiline string improvements\n+- Scala 2.13.3, 0.24.0, 0.25.0-RC1 support\n+- Multiple workspace build tools selection\n+\n+## Ammonite support\n+\n+Thanks to great work by [alexarchambault](https://github.com/alexarchambault) we\n+now support [Ammonite](https://ammonite.io) script files. Ammonite enables you\n+to create scripts that can easily be ran from the command line, without the\n+overhead of setting up a build tool while still allowing you to download and use\n+dependencies.\n+\n+The support includes most of the LSP features such as diagnostics, completions,\n+references, go to definition, but does not include running or debugging the\n+scripts. This new feature works by starting an additional Ammonite BSP server\n+that compiles the scripts and provides additional information about them such as\n+Scala version or information about the added dependencies. You can change the\n+default JVM parameters for the server such as `-Xmx`, which will limit the used\n+memory in Metals settings. These can be added via your metals editor extension\n+using the newly created `metals.ammoniteJvmProperties` setting. The Ammonite\n+server can also be started and stopped manually using the new commands\n+`ammonite-start` and `ammonite-stop`.\n+\n+Each of the scripts first need to be imported into the Ammonite BSP server,\n+which can be done manually by clicking on the pop up whenever a new script is\n+opened or selecting automatic import at the start, which will import any open\n+scripts automatically.\n+\n+It's important to note that this is an early approach to Ammonite support, which\n+might still require some improvements both on the Metals and Ammonite side. You\n+can learn more about the new feature or join the discussion in the\n+[blogpost](https://contributors.scala-lang.org/t/ammonite-support-in-metals/4306)\n+on the Scala contributors forum.\n+\n+Most notable features of Ammonite scripts are:\n+\n+- Import other scripts: Metals provides completions to select existing files\n+  based on the filesystem information\n+\n+```scala\n+//main.sc\n+import $file.hello-world\n+val greeting = hello-world.greeting\n+\n+//hello-world.sc\n+val greeting = \"Hello world!\"\n+```\n+\n+- Import dependecies:\n+\n+```scala\n+import $ivy.`com.lihaoyi::scalatags:0.7.0`\n+import scalatags.Text.all._\n+\n+val rendered = div(\"Moo\").render\n+```\n+\n+## Worksheet dependency support\n+\n+In addition to Ammonite support, which will be useful to anyone interested in\n+Scala scripting, we've also improved the support for Metals Scala worksheets.\n+Thanks to the efforts of [olafurpg](https://github.com/olafurpg) in\n+[mdoc](https://scalameta.org/mdoc/), which powers worksheets, users are now able\n+to import dependencies directly inside of their Scala worksheet with completions\n+and diagnostics working right from the start.\n+\n+![worksheet-imports](https://i.imgur.com/qXgdNWM.gif)\n+\n+You can add them using the following syntax:\n+\n+```\n+$dep.`organisation::artifact:version`\n+```\n+\n+For example:\n+\n+```\n+$dep.`com.lihaoyi::scalatags:0.9.0`\n+```\n+\n+`::` is the same as `%%` in sbt, which will append the current Scala binary\n+version to the artifact name.\n+\n+## New project provider\n+\n+Creating new Scala projects is usually a bit of work to get started, which is a\n+problem for both beginners and experts alike. Normally you don't want to spend a\n+lot of time figuring out the best setup for starting with a new technology or\n+the language itself.\n+\n+There are great tools like [giter8](http://www.foundweekends.org/giter8/), which\n+is used in the `sbt new` command, that enables people to use already existing\n+Scala templates found on Github such as\n+[https://github.com/scala/scala-seed.g8](https://github.com/scala/scala-seed.g8).\n+The problem is when you don't use sbt or you don't know the exact template you\n+want to use.\n+\n+To address this, we've added an additional command called `New Scala Project`\n+that enables users to reuse the same mechanism from the comfort of your editor.\n+Firstly, you can choose from existing templates, either curated by the Metals\n+team, ones existing on the giter8\n+[wiki page](https://github.com/foundweekends/giter8/wiki/giter8-templates) or\n+alternatively an entirely custom template. Then you can choose the exact\n+location for the new project and the name. Afterwards, Metals will run giter8 to\n+create the project and offer to open that new project.\n+\n+![new-project](https://user-images.githubusercontent.com/3807253/81842954-2d1b3680-954d-11ea-934a-96fe53cafeb9.gif)\n+\n+The command is also available as a button in the welcome view of the Visual\n+Studio Code Metals extension, which means it will be visible in case there are\n+no imported projects in the current workspace.\n+\n+The first curated templates were choosen by the team, however we are happy to\n+include more so that it's easier for people to discover new amazing libraries or\n+frameworks.\n+\n+## Multiline string improvements\n+\n+There are two new quality of life improvements when it comes to multiline\n+strings. Firstly, thanks to [mlachkar](https://github.com/mlachkar) we now\n+automatically add `stripMargin` method invocation when using newline in a\n+multiline string if that string uses `|` and has not existing `stripMargin`:\n+\n+![strip-margin](https://i.imgur.com/Z2Q1glN.gif)\n+\n+This behaviour can be disabled in Metals settings using\n+`metals.enableStripMarginOnTypeFormatting`.\n+\n+Another useful improvement coming from [colineto](https://github.com/colineto)\n+is a new code action that can easily convert single string into the traditional\n+multiline string with `|` and `stripMargin` at the end:\n+\n+![new-action](https://i.imgur.com/5ohRcl9.gif)\n+\n+## Multiple workspace build tools selection\n+\n+Previously, Metals would only pick up a single build tool in a workspace even if\n+in reality there were multiple available ones. To help with that we added a\n+prompt to choose the desired build tool in workspaces with multiple build files.\n+\n+An example situation where this is needed is when you have a project with both a\n+`build.sbt` and `build.sc`, but the `build.sc` is what you use for your build\n+definition. Previously if both were detected, it was automatically considered an\n+Sbt workspace, however now it's possible to choose.\n+\n+![multiple-build-tool](https://i.imgur.com/pAgZK7u.gif)\n+\n+If you choose the wrong one, or change the main build tool later on, you'll need\n+to remove the .metals/ directory to reset the decisions.\n+\n+This great new feature was contributed by [ckipp01](https://github.com/ckipp01)!\n+\n+## Miscellaneous improvements\n+\n+- Fix run/debug in Maven workspaces.\n+- Always run newest sbt version if none is specified.\n+- Fix find references for Scala 3 on Windows.\n+- Pick jvm targets with higher priority when running without specifying the\n+  exact build target.\n+- Make breakpoints work properly in Scala 3 and in case of nested classes.\n+- Exhaustive pattern matching in the case of sealed upper bound types.\n+- Compile before renaming instead of showing an error.\n+- Fix issue with symlinked source directories.\n+- Fix missing references for synthetic companion objects.\n+- Automatically add -J if it doesn't already exist to java properties when\n+  running or debugging.\n+- Fix go to definition in for JDK 11 library sources."
  }
]