[
  {
    "id" : "bc7dd0ce-fa3e-4708-a819-9c6d2c507f34",
    "prId" : 790,
    "comments" : [
      {
        "id" : "1832519c-312e-437e-a211-dc81d38faac1",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "we also miss the commit character removal PR",
        "createdAt" : "2019-06-23T15:36:25Z",
        "updatedAt" : "2019-06-23T15:36:25Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f007a2ee9f7fc9f7296e9431de3f5c19df299902",
    "line" : 130,
    "diffHunk" : "@@ -0,0 +1,145 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.6.2 - Radium\n+authorURL: https://twitter.com/tomekgodzik\n+authorImageURL: https://avatars1.githubusercontent.com/u/3807253?s=460&v=4\n+---\n+\n+We are excited to announce the release of Metals v0.6.2. The release includes\n+several bug fixes as well as new feature additions.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+along with contributors from the community.\n+\n+In this release we merged <TODO> PRs and closed <TODO> issues, full details:\n+<TODO>\n+\n+## TL;DR\n+\n+- New support for Scala 2.13\n+- New support for JDK 11\n+- New improved classpath indexing performance\n+- New fallback to \"find references\" when calling \"goto definition\" on a symbol\n+  definition\n+- Bug fixes for importing builds in Gradle, Mill and sbt\n+- Dropped support for deprecated Scala versions 2.11.9, 2.11.10, 2.11.11,\n+  2.12.4, 2.12.5 and 2.12.6.\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+## Support for Scala 2.13\n+\n+Metals now supports most of Scala 2.13.0. The following features are currently\n+not working completely on 2.13:\n+\n+- underscore separators in numeric literals: `1_000_000`.\n+- whitebox string interpolator macros, we had to disable one test on 2.13\n+- better-monadic-for compile plugin, we had to disable one test on 2.13\n+\n+See [this PR](https://github.com/scalameta/metals/pull/763) for more details.\n+\n+Big thanks to [@gabro](https://github.com/gabro) for leading this effort!\n+\n+## JDK 11 support\n+\n+Metals can now run on Java 11! To use Java 11 instead of Java 8, point the\n+`$JAVA_HOME` environment variable to a Java 11 installation. The VS Code\n+extension will continue to use Java 8 by default, update the \"Java Home\" setting\n+to use Java 11 instead.\n+\n+Big thanks to [@er1c](https://github.com/er1c) for pushing for this effort on\n+both the Bloop and Metals side!\n+\n+## Improved classpath indexing performance\n+\n+Previously, to support fuzzy symbol search Metals indexed classpath elements\n+using an algorithm that required a quadratic iteration on the number of\n+characters in classfile names. Now, the fuzzy symbol search algorithm only\n+requires a linear pass on the characters of a classfile name. This optimization\n+resulted in a 2x speedup for indexing a 235Mb classpath in our benchmarks.\n+\n+```diff\n+  Benchmark                   Mode  Cnt     Score    Error  Units\n+- ClasspathIndexingBench.run    ss   10  1809.068 ± 61.461  ms/op # JDK 8\n++ ClasspathIndexingBench.run    ss   10  919.237  ± 42.827  ms/op # JDK 8\n++ ClasspathIndexingBench.run    ss   10  1316.451 ± 22.595  ms/op # JDK 11\n+```\n+\n+## Fallback to \"find references\" from \"goto definition\"\n+\n+Previously, nothing happened when invoking \"goto definition\" on the symbol\n+definition itself. Now, Metals falls back to \"find references\" in this\n+situation.\n+\n+![Fallback](https://i.imgur.com/BT3h0FJ.gif)\n+\n+Big thanks to [@tanishiking](https://github.com/tanishiking) for contributing\n+this new feature!\n+\n+## Dropping older Scala versions\n+\n+The Scala versions supported by Metals are now the following.\n+\n+| Version | Old Status  | New Status                                                     |\n+| :------ | ----------- | -------------------------------------------------------------- |\n+| 2.11.9  | Deprecated  | Dropped                                                        |\n+| 2.11.10 | Deprecated  | Dropped                                                        |\n+| 2.11.11 | Deprecated  | Dropped                                                        |\n+| 2.11.12 | Supported   | Deprecated, with no plans to be dropped in upcoming releases\\* |\n+| 2.12.4  | Deprecated  | Dropped                                                        |\n+| 2.12.5  | Deprecated  | Dropped                                                        |\n+| 2.12.6  | Deprecated  | Dropped                                                        |\n+| 2.12.7  | Supported   | Deprecated, please upgrade to 2.12.8                           |\n+| 2.12.8  | Supported   | Supported                                                      |\n+| 2.13.0  | Unsupported | Supported                                                      |\n+\n+\\* Scala 2.11 support will likely stay around for a while given the situation\n+with Spark, Scala Native, Playframework and other libraries and frameworks that\n+have been late to adopt 2.12. Our download numbers show that ~10% of Metals\n+users are still on 2.11. Nevertheless, we encourage our users to upgrade to 2.12\n+to enjoy a better code editing experience thanks to multiple improvements in the\n+compiler.\n+\n+## Fixes for auto importing builds\n+\n+- digest only `.sbt` files at workspace level for sbt projects (thanks\n+  [@wojciechUrbanski](https://github.com/wojciechUrbanski)!)\n+- fix SemanticDB plugin path on Windows for Gradle workspaces\n+- update default Mill version to 0.4.1 to fix an issue with classpath not\n+  containing Scala library\n+- Metals now pick up the version from `.mill-version` for the `millw` script\n+\n+## No more \"work in progress\"\n+\n+Previously, the Metals website used the \"Work-in-progress language server for\n+Scala\" tagline to reflect the experimental status of the project. Now, the\n+tagline on the website has been changed to \"Scala language server with rich IDE\n+features\" to reflect that Metals is used by thousands of developers today for\n+their day-to-day coding.\n+\n+## Miscellaneous fixes\n+\n+- fix off-by-one for parameter hints when the cursor was after the closing `)`\n+  parenthesis\n+- make sure we add an autoimport in the correct line in case of brackets\n+- document symbol outline no longer fails when `val _ = ()` is the only thing in\n+  a block expression\n+- nested objects are now imported correctly in case of deeper nesting\n+- fix concurrent modification in text document cache (thanks"
  }
]