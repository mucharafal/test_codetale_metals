[
  {
    "id" : "98974579-4265-4283-8757-9de33c666c46",
    "prId" : 1596,
    "comments" : [
      {
        "id" : "b21aa959-f4f3-45f4-a557-8f28a6906b61",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Out of sheer curiosity: why not markdown?",
        "createdAt" : "2020-04-09T17:59:38Z",
        "updatedAt" : "2020-04-10T11:24:09Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f854eda7-19fe-47fc-8069-e731ec069a5c",
        "parentId" : "b21aa959-f4f3-45f4-a557-8f28a6906b61",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I can't remember exactly, but I think it's because Markdown requires column labels, we could do something like:\r\n\r\n| Summary                    |     |\r\n| -------------------------- | --- |\r\n| Commits since last release | 174 |\r\n| Merged PRs                 | 55  |\r\n| Contributors               | 9   |\r\n| Closed issues              | 13  |\r\n| New features               | 3   |\r\n\r\nbut not:\r\n\r\n| Commits since last release | 174 |\r\n| Merged PRs                 | 55  |\r\n| Contributors               | 9   |\r\n| Closed issues              | 13  |\r\n| New features               | 3   |",
        "createdAt" : "2020-04-10T14:19:49Z",
        "updatedAt" : "2020-04-10T14:19:49Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2431db13-2138-4403-bc60-1f510229a13c",
        "parentId" : "b21aa959-f4f3-45f4-a557-8f28a6906b61",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "ah, that makes sense, thanks",
        "createdAt" : "2020-04-10T15:59:24Z",
        "updatedAt" : "2020-04-10T15:59:24Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "98216b111b90200af63cab4201335bfed979a303",
    "line" : 11,
    "diffHunk" : "@@ -0,0 +1,369 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.4 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.8.4, which will most likely be\n+the last 0.8.x version.\n+\n+<table>"
  },
  {
    "id" : "2a4c439f-209e-4d52-a1a2-c8ebb4179746",
    "prId" : 1596,
    "comments" : [
      {
        "id" : "79e34299-471c-4dae-8056-5ad58705f7f2",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\noverrides another method, in which case it will show a new lens next to the\r\n```",
        "createdAt" : "2020-04-09T18:07:23Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "98216b111b90200af63cab4201335bfed979a303",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,350 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.4 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.8.4, which will most likely be\n+the last 0.8.x version.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">174</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">55</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">13</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/22?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- navigating to parent method\n+- support for `launch.json`\n+- new \"Create new symbol\" code action\n+- miscellaneous improvements\n+\n+## Navigating to parent method\n+\n+Metals will now calculate if any definition of a method in the current file\n+overrides another method, in which case it will show new lens next to the"
  },
  {
    "id" : "9f7f14ee-8766-42cc-af81-f7f5aaf1c8d9",
    "prId" : 1596,
    "comments" : [
      {
        "id" : "eaa8510c-0b2b-4bfb-8b4d-684d7bcee17b",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Is it maybe also worth putting in a reminder that in order for these the work, ensure you have code lenses enabled in your client? I'm not sure if they are for vscode, but for example they aren't be default in coc.nvim.",
        "createdAt" : "2020-04-09T18:08:45Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a192e709-cab0-46dd-8274-ecb225ad8655",
        "parentId" : "eaa8510c-0b2b-4bfb-8b4d-684d7bcee17b",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Added a mention, good idea!",
        "createdAt" : "2020-04-10T10:03:33Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "98216b111b90200af63cab4201335bfed979a303",
    "line" : 68,
    "diffHunk" : "@@ -0,0 +1,350 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.4 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.8.4, which will most likely be\n+the last 0.8.x version.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">174</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">55</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">13</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/22?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- navigating to parent method\n+- support for `launch.json`\n+- new \"Create new symbol\" code action\n+- miscellaneous improvements\n+\n+## Navigating to parent method\n+\n+Metals will now calculate if any definition of a method in the current file\n+overrides another method, in which case it will show new lens next to the\n+method's position. Once clicked, the user will be able to go to the super\n+method. Lenses also link to methods in external dependencies and are displayed\n+in files from libraries.\n+\n+![Screenshot 2020-03-10 at 09 24 41](https://user-images.githubusercontent.com/10478402/76293237-fad12c80-62b0-11ea-9952-d8b536ffd374.png)\n+\n+If they are found to be disturbing your workflow they can be easily disabled via\n+the `metals.superMethodLensesEnabled` configuration option - they are enabled by\n+default. For example in Visual Studio Code:\n+"
  },
  {
    "id" : "de4f951c-2ed9-4893-873f-161e0df8299a",
    "prId" : 1596,
    "comments" : [
      {
        "id" : "9e0b68de-f141-4c2c-89c4-746aefb374bb",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nmethod hierarchy and if more than one position is found it displays a quickPick\r\n```",
        "createdAt" : "2020-04-09T18:09:30Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "98216b111b90200af63cab4201335bfed979a303",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,350 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.4 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.8.4, which will most likely be\n+the last 0.8.x version.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">174</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">55</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">13</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/22?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- navigating to parent method\n+- support for `launch.json`\n+- new \"Create new symbol\" code action\n+- miscellaneous improvements\n+\n+## Navigating to parent method\n+\n+Metals will now calculate if any definition of a method in the current file\n+overrides another method, in which case it will show new lens next to the\n+method's position. Once clicked, the user will be able to go to the super\n+method. Lenses also link to methods in external dependencies and are displayed\n+in files from libraries.\n+\n+![Screenshot 2020-03-10 at 09 24 41](https://user-images.githubusercontent.com/10478402/76293237-fad12c80-62b0-11ea-9952-d8b536ffd374.png)\n+\n+If they are found to be disturbing your workflow they can be easily disabled via\n+the `metals.superMethodLensesEnabled` configuration option - they are enabled by\n+default. For example in Visual Studio Code:\n+\n+![Screenshot 2020-03-09 at 16 24 21](https://user-images.githubusercontent.com/10478402/76293133-cbbabb00-62b0-11ea-84be-06c992af768b.png)\n+\n+These new lenses should be quick to calculate but if you notice significant\n+slowdown you can also disable them, since when disabled they are not only not\n+displayed but also not calculated at all.\n+\n+There is also an exposed server command `goto-super-method` that can be mapped\n+and used through shortcut in Visual Studio Code.\n+\n+![Screenshot 2020-03-10 at 09 38 49](https://user-images.githubusercontent.com/10478402/76294356-fd348600-62b2-11ea-880e-7074df2928a6.png)\n+\n+It is possible to also navigate the whole inheritance hierachy at once using the\n+new `super-method-hierarchy` command.\n+\n+![super-hierarchy](https://user-images.githubusercontent.com/10478402/76294832-de82bf00-62b3-11ea-847d-bc1d94136671.gif)\n+\n+This new command can be invoked on a method definition. It calculates super\n+method hierarchy and if more than one position is found it displays quickPick"
  },
  {
    "id" : "e95da508-a891-47a9-bbf3-493490483e53",
    "prId" : 1596,
    "comments" : [
      {
        "id" : "804d4690-3d1b-4d97-aee0-052c34f60f04",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nwindow (same as the new scala file feature) which displays all super methods and allows a user to select\r\none and jump to its definition.\r\n```",
        "createdAt" : "2020-04-09T18:12:01Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "98216b111b90200af63cab4201335bfed979a303",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,350 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.4 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.8.4, which will most likely be\n+the last 0.8.x version.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">174</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">55</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">13</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/22?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- navigating to parent method\n+- support for `launch.json`\n+- new \"Create new symbol\" code action\n+- miscellaneous improvements\n+\n+## Navigating to parent method\n+\n+Metals will now calculate if any definition of a method in the current file\n+overrides another method, in which case it will show new lens next to the\n+method's position. Once clicked, the user will be able to go to the super\n+method. Lenses also link to methods in external dependencies and are displayed\n+in files from libraries.\n+\n+![Screenshot 2020-03-10 at 09 24 41](https://user-images.githubusercontent.com/10478402/76293237-fad12c80-62b0-11ea-9952-d8b536ffd374.png)\n+\n+If they are found to be disturbing your workflow they can be easily disabled via\n+the `metals.superMethodLensesEnabled` configuration option - they are enabled by\n+default. For example in Visual Studio Code:\n+\n+![Screenshot 2020-03-09 at 16 24 21](https://user-images.githubusercontent.com/10478402/76293133-cbbabb00-62b0-11ea-84be-06c992af768b.png)\n+\n+These new lenses should be quick to calculate but if you notice significant\n+slowdown you can also disable them, since when disabled they are not only not\n+displayed but also not calculated at all.\n+\n+There is also an exposed server command `goto-super-method` that can be mapped\n+and used through shortcut in Visual Studio Code.\n+\n+![Screenshot 2020-03-10 at 09 38 49](https://user-images.githubusercontent.com/10478402/76294356-fd348600-62b2-11ea-880e-7074df2928a6.png)\n+\n+It is possible to also navigate the whole inheritance hierachy at once using the\n+new `super-method-hierarchy` command.\n+\n+![super-hierarchy](https://user-images.githubusercontent.com/10478402/76294832-de82bf00-62b3-11ea-847d-bc1d94136671.gif)\n+\n+This new command can be invoked on a method definition. It calculates super\n+method hierarchy and if more than one position is found it displays quickPick\n+window (same as from new scala file) with super methods and when user selects\n+one entry it jumps to that definition."
  },
  {
    "id" : "ed0ff8e8-b278-4463-9da7-8fc045a8ecec",
    "prId" : 1596,
    "comments" : [
      {
        "id" : "090c3319-4170-40b6-bb8d-7ae2d1370fb5",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nPreviously, it was only possible to launch main classes or tests via code\r\n```",
        "createdAt" : "2020-04-09T18:12:30Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "98216b111b90200af63cab4201335bfed979a303",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,350 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.4 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.8.4, which will most likely be\n+the last 0.8.x version.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">174</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">55</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">13</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/22?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- navigating to parent method\n+- support for `launch.json`\n+- new \"Create new symbol\" code action\n+- miscellaneous improvements\n+\n+## Navigating to parent method\n+\n+Metals will now calculate if any definition of a method in the current file\n+overrides another method, in which case it will show new lens next to the\n+method's position. Once clicked, the user will be able to go to the super\n+method. Lenses also link to methods in external dependencies and are displayed\n+in files from libraries.\n+\n+![Screenshot 2020-03-10 at 09 24 41](https://user-images.githubusercontent.com/10478402/76293237-fad12c80-62b0-11ea-9952-d8b536ffd374.png)\n+\n+If they are found to be disturbing your workflow they can be easily disabled via\n+the `metals.superMethodLensesEnabled` configuration option - they are enabled by\n+default. For example in Visual Studio Code:\n+\n+![Screenshot 2020-03-09 at 16 24 21](https://user-images.githubusercontent.com/10478402/76293133-cbbabb00-62b0-11ea-84be-06c992af768b.png)\n+\n+These new lenses should be quick to calculate but if you notice significant\n+slowdown you can also disable them, since when disabled they are not only not\n+displayed but also not calculated at all.\n+\n+There is also an exposed server command `goto-super-method` that can be mapped\n+and used through shortcut in Visual Studio Code.\n+\n+![Screenshot 2020-03-10 at 09 38 49](https://user-images.githubusercontent.com/10478402/76294356-fd348600-62b2-11ea-880e-7074df2928a6.png)\n+\n+It is possible to also navigate the whole inheritance hierachy at once using the\n+new `super-method-hierarchy` command.\n+\n+![super-hierarchy](https://user-images.githubusercontent.com/10478402/76294832-de82bf00-62b3-11ea-847d-bc1d94136671.gif)\n+\n+This new command can be invoked on a method definition. It calculates super\n+method hierarchy and if more than one position is found it displays quickPick\n+window (same as from new scala file) with super methods and when user selects\n+one entry it jumps to that definition.\n+\n+As an example in Visual Studio Code it can be bound to a shortcut this way:\n+![Screenshot 2020-03-10 at 09 48 55](https://user-images.githubusercontent.com/10478402/76295136-5d77f780-62b4-11ea-87bc-1d25c3e6d586.png)\n+\n+## Support for 'launch.json'\n+\n+Previously, it was only possible to launch main classes or tests only via code"
  },
  {
    "id" : "29f6a0ca-877f-4e5d-bb63-43aa69eafc7a",
    "prId" : 1596,
    "comments" : [
      {
        "id" : "d65c68bb-2987-4e4e-a0ef-e8345b6be5d4",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nlenses that would appear above a particular class. Now, we add a way for a\r\n```",
        "createdAt" : "2020-04-09T18:12:54Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "98216b111b90200af63cab4201335bfed979a303",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,350 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.4 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.8.4, which will most likely be\n+the last 0.8.x version.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">174</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">55</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">13</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/22?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- navigating to parent method\n+- support for `launch.json`\n+- new \"Create new symbol\" code action\n+- miscellaneous improvements\n+\n+## Navigating to parent method\n+\n+Metals will now calculate if any definition of a method in the current file\n+overrides another method, in which case it will show new lens next to the\n+method's position. Once clicked, the user will be able to go to the super\n+method. Lenses also link to methods in external dependencies and are displayed\n+in files from libraries.\n+\n+![Screenshot 2020-03-10 at 09 24 41](https://user-images.githubusercontent.com/10478402/76293237-fad12c80-62b0-11ea-9952-d8b536ffd374.png)\n+\n+If they are found to be disturbing your workflow they can be easily disabled via\n+the `metals.superMethodLensesEnabled` configuration option - they are enabled by\n+default. For example in Visual Studio Code:\n+\n+![Screenshot 2020-03-09 at 16 24 21](https://user-images.githubusercontent.com/10478402/76293133-cbbabb00-62b0-11ea-84be-06c992af768b.png)\n+\n+These new lenses should be quick to calculate but if you notice significant\n+slowdown you can also disable them, since when disabled they are not only not\n+displayed but also not calculated at all.\n+\n+There is also an exposed server command `goto-super-method` that can be mapped\n+and used through shortcut in Visual Studio Code.\n+\n+![Screenshot 2020-03-10 at 09 38 49](https://user-images.githubusercontent.com/10478402/76294356-fd348600-62b2-11ea-880e-7074df2928a6.png)\n+\n+It is possible to also navigate the whole inheritance hierachy at once using the\n+new `super-method-hierarchy` command.\n+\n+![super-hierarchy](https://user-images.githubusercontent.com/10478402/76294832-de82bf00-62b3-11ea-847d-bc1d94136671.gif)\n+\n+This new command can be invoked on a method definition. It calculates super\n+method hierarchy and if more than one position is found it displays quickPick\n+window (same as from new scala file) with super methods and when user selects\n+one entry it jumps to that definition.\n+\n+As an example in Visual Studio Code it can be bound to a shortcut this way:\n+![Screenshot 2020-03-10 at 09 48 55](https://user-images.githubusercontent.com/10478402/76295136-5d77f780-62b4-11ea-87bc-1d25c3e6d586.png)\n+\n+## Support for 'launch.json'\n+\n+Previously, it was only possible to launch main classes or tests only via code\n+lenses that would appear above a particular class. Now, we add a way to for a"
  },
  {
    "id" : "a49fcbc7-370a-46cf-9bb5-9de1f741a753",
    "prId" : 1596,
    "comments" : [
      {
        "id" : "3520438c-c5b0-4263-b333-8c0c858eb43c",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n`buildTarget` is an optional parameter, which might be useful if there are identical\r\n```",
        "createdAt" : "2020-04-09T18:13:33Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "98216b111b90200af63cab4201335bfed979a303",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,350 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.4 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.8.4, which will most likely be\n+the last 0.8.x version.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">174</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">55</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">13</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/22?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- navigating to parent method\n+- support for `launch.json`\n+- new \"Create new symbol\" code action\n+- miscellaneous improvements\n+\n+## Navigating to parent method\n+\n+Metals will now calculate if any definition of a method in the current file\n+overrides another method, in which case it will show new lens next to the\n+method's position. Once clicked, the user will be able to go to the super\n+method. Lenses also link to methods in external dependencies and are displayed\n+in files from libraries.\n+\n+![Screenshot 2020-03-10 at 09 24 41](https://user-images.githubusercontent.com/10478402/76293237-fad12c80-62b0-11ea-9952-d8b536ffd374.png)\n+\n+If they are found to be disturbing your workflow they can be easily disabled via\n+the `metals.superMethodLensesEnabled` configuration option - they are enabled by\n+default. For example in Visual Studio Code:\n+\n+![Screenshot 2020-03-09 at 16 24 21](https://user-images.githubusercontent.com/10478402/76293133-cbbabb00-62b0-11ea-84be-06c992af768b.png)\n+\n+These new lenses should be quick to calculate but if you notice significant\n+slowdown you can also disable them, since when disabled they are not only not\n+displayed but also not calculated at all.\n+\n+There is also an exposed server command `goto-super-method` that can be mapped\n+and used through shortcut in Visual Studio Code.\n+\n+![Screenshot 2020-03-10 at 09 38 49](https://user-images.githubusercontent.com/10478402/76294356-fd348600-62b2-11ea-880e-7074df2928a6.png)\n+\n+It is possible to also navigate the whole inheritance hierachy at once using the\n+new `super-method-hierarchy` command.\n+\n+![super-hierarchy](https://user-images.githubusercontent.com/10478402/76294832-de82bf00-62b3-11ea-847d-bc1d94136671.gif)\n+\n+This new command can be invoked on a method definition. It calculates super\n+method hierarchy and if more than one position is found it displays quickPick\n+window (same as from new scala file) with super methods and when user selects\n+one entry it jumps to that definition.\n+\n+As an example in Visual Studio Code it can be bound to a shortcut this way:\n+![Screenshot 2020-03-10 at 09 48 55](https://user-images.githubusercontent.com/10478402/76295136-5d77f780-62b4-11ea-87bc-1d25c3e6d586.png)\n+\n+## Support for 'launch.json'\n+\n+Previously, it was only possible to launch main classes or tests only via code\n+lenses that would appear above a particular class. Now, we add a way to for a\n+user to be able specify the name of the the class or test to run. We will then\n+automatically try to detect the build target, which that class/test belongs to\n+and run it. In this release, we also add a way to specify the main class\n+arguments.\n+\n+![launch_debug3](https://user-images.githubusercontent.com/10850363/78788713-73103800-79ac-11ea-94b3-2e2d898992e4.gif)\n+\n+While this will be primarily useful for the Visual Studio Code Metals extension,\n+it will also make it easier for other editors that support the Debug Adapter\n+Protocol. To obtain the uri needed for starting a debug session users can now\n+execute the `debug-adapter-start` command with params:\n+\n+- for main class\n+\n+```json\n+{\n+  \"mainClass\": \"com.foo.App\",\n+  \"buildTarget\": \"foo\",\n+  \"args\": [\"bar\"]\n+}\n+```\n+\n+- for test class\n+\n+```json\n+{\n+  \"testClass\": \"com.foo.FooSuite\",\n+  \"buildTarget\": \"foo\"\n+}\n+```\n+\n+`buildTarget` is an optional parameter, which might be useful if there identical"
  },
  {
    "id" : "6be0ffeb-742d-41ed-8960-83ffe3f24303",
    "prId" : 1596,
    "comments" : [
      {
        "id" : "b9a7270a-c3d4-4cb6-bcfc-44a559506ae6",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n  `New Scala file` also shows now the same as directories\r\n```",
        "createdAt" : "2020-04-09T18:14:29Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "98216b111b90200af63cab4201335bfed979a303",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,350 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.4 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.8.4, which will most likely be\n+the last 0.8.x version.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">174</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">55</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">13</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/22?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- navigating to parent method\n+- support for `launch.json`\n+- new \"Create new symbol\" code action\n+- miscellaneous improvements\n+\n+## Navigating to parent method\n+\n+Metals will now calculate if any definition of a method in the current file\n+overrides another method, in which case it will show new lens next to the\n+method's position. Once clicked, the user will be able to go to the super\n+method. Lenses also link to methods in external dependencies and are displayed\n+in files from libraries.\n+\n+![Screenshot 2020-03-10 at 09 24 41](https://user-images.githubusercontent.com/10478402/76293237-fad12c80-62b0-11ea-9952-d8b536ffd374.png)\n+\n+If they are found to be disturbing your workflow they can be easily disabled via\n+the `metals.superMethodLensesEnabled` configuration option - they are enabled by\n+default. For example in Visual Studio Code:\n+\n+![Screenshot 2020-03-09 at 16 24 21](https://user-images.githubusercontent.com/10478402/76293133-cbbabb00-62b0-11ea-84be-06c992af768b.png)\n+\n+These new lenses should be quick to calculate but if you notice significant\n+slowdown you can also disable them, since when disabled they are not only not\n+displayed but also not calculated at all.\n+\n+There is also an exposed server command `goto-super-method` that can be mapped\n+and used through shortcut in Visual Studio Code.\n+\n+![Screenshot 2020-03-10 at 09 38 49](https://user-images.githubusercontent.com/10478402/76294356-fd348600-62b2-11ea-880e-7074df2928a6.png)\n+\n+It is possible to also navigate the whole inheritance hierachy at once using the\n+new `super-method-hierarchy` command.\n+\n+![super-hierarchy](https://user-images.githubusercontent.com/10478402/76294832-de82bf00-62b3-11ea-847d-bc1d94136671.gif)\n+\n+This new command can be invoked on a method definition. It calculates super\n+method hierarchy and if more than one position is found it displays quickPick\n+window (same as from new scala file) with super methods and when user selects\n+one entry it jumps to that definition.\n+\n+As an example in Visual Studio Code it can be bound to a shortcut this way:\n+![Screenshot 2020-03-10 at 09 48 55](https://user-images.githubusercontent.com/10478402/76295136-5d77f780-62b4-11ea-87bc-1d25c3e6d586.png)\n+\n+## Support for 'launch.json'\n+\n+Previously, it was only possible to launch main classes or tests only via code\n+lenses that would appear above a particular class. Now, we add a way to for a\n+user to be able specify the name of the the class or test to run. We will then\n+automatically try to detect the build target, which that class/test belongs to\n+and run it. In this release, we also add a way to specify the main class\n+arguments.\n+\n+![launch_debug3](https://user-images.githubusercontent.com/10850363/78788713-73103800-79ac-11ea-94b3-2e2d898992e4.gif)\n+\n+While this will be primarily useful for the Visual Studio Code Metals extension,\n+it will also make it easier for other editors that support the Debug Adapter\n+Protocol. To obtain the uri needed for starting a debug session users can now\n+execute the `debug-adapter-start` command with params:\n+\n+- for main class\n+\n+```json\n+{\n+  \"mainClass\": \"com.foo.App\",\n+  \"buildTarget\": \"foo\",\n+  \"args\": [\"bar\"]\n+}\n+```\n+\n+- for test class\n+\n+```json\n+{\n+  \"testClass\": \"com.foo.FooSuite\",\n+  \"buildTarget\": \"foo\"\n+}\n+```\n+\n+`buildTarget` is an optional parameter, which might be useful if there identical\n+class names in different modules. A uri will be returned that can be used by the\n+DAP client.\n+\n+More information about adding support for debugging is available\n+[here](/metals/docs/editors/debug-adapter-protocol.html).\n+\n+## New 'Create new symbol...' code action\n+\n+Previously we would propose to import a symbol (if available) in response to\n+\"missing symbol\" errors. Now, we also propose to create a new class, case class,\n+trait or object.\n+\n+![2020-03-23 17 49 31](https://user-images.githubusercontent.com/691940/77632315-1cd3db80-6f4e-11ea-9283-a2b522cedf1d.gif)\n+\n+This might be useful when sketching out a domain model and should improve user\n+experience for fast prototyping.\n+\n+## Miscellaneous improvements\n+\n+- `package` is no longer added on imports from package objects\n+- if user right clicks on a file in Visual Studio Code the option for\n+  `New Scala file` also shows now just as for directories"
  },
  {
    "id" : "d4f125f5-2fae-4d63-9970-3d93137cf84f",
    "prId" : 1596,
    "comments" : [
      {
        "id" : "23899149-c67a-40bf-9ab7-777bf6f62ffe",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- a multiline string can now be formatted exclusively when using `format selection`\r\n```",
        "createdAt" : "2020-04-09T18:14:46Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "98216b111b90200af63cab4201335bfed979a303",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,350 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.8.4 - Cobalt\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.8.4, which will most likely be\n+the last 0.8.x version.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">174</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">55</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">13</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/22?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- navigating to parent method\n+- support for `launch.json`\n+- new \"Create new symbol\" code action\n+- miscellaneous improvements\n+\n+## Navigating to parent method\n+\n+Metals will now calculate if any definition of a method in the current file\n+overrides another method, in which case it will show new lens next to the\n+method's position. Once clicked, the user will be able to go to the super\n+method. Lenses also link to methods in external dependencies and are displayed\n+in files from libraries.\n+\n+![Screenshot 2020-03-10 at 09 24 41](https://user-images.githubusercontent.com/10478402/76293237-fad12c80-62b0-11ea-9952-d8b536ffd374.png)\n+\n+If they are found to be disturbing your workflow they can be easily disabled via\n+the `metals.superMethodLensesEnabled` configuration option - they are enabled by\n+default. For example in Visual Studio Code:\n+\n+![Screenshot 2020-03-09 at 16 24 21](https://user-images.githubusercontent.com/10478402/76293133-cbbabb00-62b0-11ea-84be-06c992af768b.png)\n+\n+These new lenses should be quick to calculate but if you notice significant\n+slowdown you can also disable them, since when disabled they are not only not\n+displayed but also not calculated at all.\n+\n+There is also an exposed server command `goto-super-method` that can be mapped\n+and used through shortcut in Visual Studio Code.\n+\n+![Screenshot 2020-03-10 at 09 38 49](https://user-images.githubusercontent.com/10478402/76294356-fd348600-62b2-11ea-880e-7074df2928a6.png)\n+\n+It is possible to also navigate the whole inheritance hierachy at once using the\n+new `super-method-hierarchy` command.\n+\n+![super-hierarchy](https://user-images.githubusercontent.com/10478402/76294832-de82bf00-62b3-11ea-847d-bc1d94136671.gif)\n+\n+This new command can be invoked on a method definition. It calculates super\n+method hierarchy and if more than one position is found it displays quickPick\n+window (same as from new scala file) with super methods and when user selects\n+one entry it jumps to that definition.\n+\n+As an example in Visual Studio Code it can be bound to a shortcut this way:\n+![Screenshot 2020-03-10 at 09 48 55](https://user-images.githubusercontent.com/10478402/76295136-5d77f780-62b4-11ea-87bc-1d25c3e6d586.png)\n+\n+## Support for 'launch.json'\n+\n+Previously, it was only possible to launch main classes or tests only via code\n+lenses that would appear above a particular class. Now, we add a way to for a\n+user to be able specify the name of the the class or test to run. We will then\n+automatically try to detect the build target, which that class/test belongs to\n+and run it. In this release, we also add a way to specify the main class\n+arguments.\n+\n+![launch_debug3](https://user-images.githubusercontent.com/10850363/78788713-73103800-79ac-11ea-94b3-2e2d898992e4.gif)\n+\n+While this will be primarily useful for the Visual Studio Code Metals extension,\n+it will also make it easier for other editors that support the Debug Adapter\n+Protocol. To obtain the uri needed for starting a debug session users can now\n+execute the `debug-adapter-start` command with params:\n+\n+- for main class\n+\n+```json\n+{\n+  \"mainClass\": \"com.foo.App\",\n+  \"buildTarget\": \"foo\",\n+  \"args\": [\"bar\"]\n+}\n+```\n+\n+- for test class\n+\n+```json\n+{\n+  \"testClass\": \"com.foo.FooSuite\",\n+  \"buildTarget\": \"foo\"\n+}\n+```\n+\n+`buildTarget` is an optional parameter, which might be useful if there identical\n+class names in different modules. A uri will be returned that can be used by the\n+DAP client.\n+\n+More information about adding support for debugging is available\n+[here](/metals/docs/editors/debug-adapter-protocol.html).\n+\n+## New 'Create new symbol...' code action\n+\n+Previously we would propose to import a symbol (if available) in response to\n+\"missing symbol\" errors. Now, we also propose to create a new class, case class,\n+trait or object.\n+\n+![2020-03-23 17 49 31](https://user-images.githubusercontent.com/691940/77632315-1cd3db80-6f4e-11ea-9283-a2b522cedf1d.gif)\n+\n+This might be useful when sketching out a domain model and should improve user\n+experience for fast prototyping.\n+\n+## Miscellaneous improvements\n+\n+- `package` is no longer added on imports from package objects\n+- if user right clicks on a file in Visual Studio Code the option for\n+  `New Scala file` also shows now just as for directories\n+- multiline string can now be formated exclusively when using `format selection`"
  }
]