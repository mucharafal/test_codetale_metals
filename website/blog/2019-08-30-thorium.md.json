[
  {
    "id" : "8ce59cb0-91f9-4c8e-9822-9edc67fbbf59",
    "prId" : 886,
    "comments" : [
      {
        "id" : "5b748131-9855-4d57-8a27-d75996f972b5",
        "parentId" : null,
        "author" : {
          "login" : "hudclark",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9096928?u=c22ee8d6c85f0340d4eadd0b431d2a0bfb02f845&v=4"
        },
        "body" : "> ny\r\n\r\nSmall typo?",
        "createdAt" : "2019-08-29T15:32:35Z",
        "updatedAt" : "2019-09-02T15:16:06Z",
        "lastEditedBy" : {
          "login" : "hudclark",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9096928?u=c22ee8d6c85f0340d4eadd0b431d2a0bfb02f845&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f2ffed1bf6657e765c66db5d9b0d46317b61404a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,148 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.7.1 - Thorium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.7.0 - codename \"Thorium\" ðŸŽ‰\n+The release includes mostly bug fixes with some smaller new features.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+along with contributors from the community.\n+\n+In this release we merged 39 PRs and closed 11 issues, full details:\n+https://github.com/scalameta/metals/milestone/12?closed=1\n+\n+## TL;DR\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+- support for Scala 2.12.9\n+- fix completions in case of inline comments\n+- add support for non-directory sources\n+- automatically add package definition to new source files\n+- automatically insert pipes in multiline string\n+- a lot of miscellaneous fixes\n+\n+## Fix completions in case of inline comments\n+\n+Previously, completions after a comment and newline would yield no results:\n+\n+```scala\n+val List(1,2,3)\n+  .map(num => num + 1) // we add one\n+  @@\n+```\n+\n+This was fixed by the Metals team in the presentation compiler itself for 2.12.9\n+and 2.13.1, however we also added a workaround for ny older Scala versions."
  },
  {
    "id" : "743da256-58c4-4076-a086-74c1d4c3b21d",
    "prId" : 886,
    "comments" : [
      {
        "id" : "3fea787f-fb6d-4a6f-9156-0d6a35e5b7bd",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "```suggestion\r\nWe are excited to announce the release of Metals v0.7.1 - codename \"Thorium\" ðŸŽ‰\r\n```",
        "createdAt" : "2019-08-30T06:11:05Z",
        "updatedAt" : "2019-09-02T15:16:06Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f2ffed1bf6657e765c66db5d9b0d46317b61404a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,148 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.7.1 - Thorium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.7.0 - codename \"Thorium\" ðŸŽ‰"
  },
  {
    "id" : "757458dd-a839-4230-8943-625718d69901",
    "prId" : 886,
    "comments" : [
      {
        "id" : "51cde767-c421-4995-b0b1-263d67da35c3",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "since there is \"fix\" or \"add\" everywhere else, let's keep it consistent :)\r\n```suggestion\r\n- add support for Scala 2.12.9\r\n```",
        "createdAt" : "2019-08-30T06:13:03Z",
        "updatedAt" : "2019-09-02T15:16:06Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f2ffed1bf6657e765c66db5d9b0d46317b61404a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,148 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.7.1 - Thorium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.7.0 - codename \"Thorium\" ðŸŽ‰\n+The release includes mostly bug fixes with some smaller new features.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+along with contributors from the community.\n+\n+In this release we merged 39 PRs and closed 11 issues, full details:\n+https://github.com/scalameta/metals/milestone/12?closed=1\n+\n+## TL;DR\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+- support for Scala 2.12.9"
  },
  {
    "id" : "dfdc1542-e73a-4b69-a620-0f88b8fa69e0",
    "prId" : 886,
    "comments" : [
      {
        "id" : "813bd596-f664-4a9f-bd1c-7dae8b4b1ece",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "let's keep the ammount of noise to minimum. I read the comment as a part of the description of this feature and got confused for a moment :(\r\n\r\n```suggestion\r\n  .map(num => num + 1) // some comment\r\n```",
        "createdAt" : "2019-08-30T06:15:02Z",
        "updatedAt" : "2019-09-02T15:16:06Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f2ffed1bf6657e765c66db5d9b0d46317b61404a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,148 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.7.1 - Thorium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.7.0 - codename \"Thorium\" ðŸŽ‰\n+The release includes mostly bug fixes with some smaller new features.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+along with contributors from the community.\n+\n+In this release we merged 39 PRs and closed 11 issues, full details:\n+https://github.com/scalameta/metals/milestone/12?closed=1\n+\n+## TL;DR\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+- support for Scala 2.12.9\n+- fix completions in case of inline comments\n+- add support for non-directory sources\n+- automatically add package definition to new source files\n+- automatically insert pipes in multiline string\n+- a lot of miscellaneous fixes\n+\n+## Fix completions in case of inline comments\n+\n+Previously, completions after a comment and newline would yield no results:\n+\n+```scala\n+val List(1,2,3)\n+  .map(num => num + 1) // we add one"
  },
  {
    "id" : "dd101f96-52e6-4476-9d23-73dcdd97dbc8",
    "prId" : 886,
    "comments" : [
      {
        "id" : "67bc783b-4b31-4803-b0ae-2ecc38579601",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "```suggestion\r\nIn case that your build tool supports having single files as sources, we now offer\r\n```",
        "createdAt" : "2019-08-30T06:18:09Z",
        "updatedAt" : "2019-09-02T15:16:06Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f2ffed1bf6657e765c66db5d9b0d46317b61404a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,148 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.7.1 - Thorium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.7.0 - codename \"Thorium\" ðŸŽ‰\n+The release includes mostly bug fixes with some smaller new features.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+along with contributors from the community.\n+\n+In this release we merged 39 PRs and closed 11 issues, full details:\n+https://github.com/scalameta/metals/milestone/12?closed=1\n+\n+## TL;DR\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+- support for Scala 2.12.9\n+- fix completions in case of inline comments\n+- add support for non-directory sources\n+- automatically add package definition to new source files\n+- automatically insert pipes in multiline string\n+- a lot of miscellaneous fixes\n+\n+## Fix completions in case of inline comments\n+\n+Previously, completions after a comment and newline would yield no results:\n+\n+```scala\n+val List(1,2,3)\n+  .map(num => num + 1) // we add one\n+  @@\n+```\n+\n+This was fixed by the Metals team in the presentation compiler itself for 2.12.9\n+and 2.13.1, however we also added a workaround for ny older Scala versions.\n+\n+## Add support for non-directory sources\n+\n+In case that your build tool supports having single files sources, we now offer"
  },
  {
    "id" : "0fa30e76-f651-4158-a748-600adb6e6a9f",
    "prId" : 886,
    "comments" : [
      {
        "id" : "58ab4d20-eda5-4ec2-8392-f2ff70dfaecc",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "`BSP specification` - link to the change in spec?",
        "createdAt" : "2019-08-30T06:18:51Z",
        "updatedAt" : "2019-09-02T15:16:06Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f2ffed1bf6657e765c66db5d9b0d46317b61404a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,148 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.7.1 - Thorium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.7.0 - codename \"Thorium\" ðŸŽ‰\n+The release includes mostly bug fixes with some smaller new features.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+along with contributors from the community.\n+\n+In this release we merged 39 PRs and closed 11 issues, full details:\n+https://github.com/scalameta/metals/milestone/12?closed=1\n+\n+## TL;DR\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+- support for Scala 2.12.9\n+- fix completions in case of inline comments\n+- add support for non-directory sources\n+- automatically add package definition to new source files\n+- automatically insert pipes in multiline string\n+- a lot of miscellaneous fixes\n+\n+## Fix completions in case of inline comments\n+\n+Previously, completions after a comment and newline would yield no results:\n+\n+```scala\n+val List(1,2,3)\n+  .map(num => num + 1) // we add one\n+  @@\n+```\n+\n+This was fixed by the Metals team in the presentation compiler itself for 2.12.9\n+and 2.13.1, however we also added a workaround for ny older Scala versions.\n+\n+## Add support for non-directory sources\n+\n+In case that your build tool supports having single files sources, we now offer\n+full support for them. That corresponds to the most recent BSP specification."
  },
  {
    "id" : "a87475d8-f6a8-4906-80c7-dc51dfa37404",
    "prId" : 886,
    "comments" : [
      {
        "id" : "66a47b40-ae53-445c-a536-d5a60542ec1f",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "```suggestion\r\n- fix several small issues in the tree view protocol spec\r\n```",
        "createdAt" : "2019-08-30T06:26:21Z",
        "updatedAt" : "2019-09-02T15:16:06Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f2ffed1bf6657e765c66db5d9b0d46317b61404a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,148 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.7.1 - Thorium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.7.0 - codename \"Thorium\" ðŸŽ‰\n+The release includes mostly bug fixes with some smaller new features.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+along with contributors from the community.\n+\n+In this release we merged 39 PRs and closed 11 issues, full details:\n+https://github.com/scalameta/metals/milestone/12?closed=1\n+\n+## TL;DR\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+- support for Scala 2.12.9\n+- fix completions in case of inline comments\n+- add support for non-directory sources\n+- automatically add package definition to new source files\n+- automatically insert pipes in multiline string\n+- a lot of miscellaneous fixes\n+\n+## Fix completions in case of inline comments\n+\n+Previously, completions after a comment and newline would yield no results:\n+\n+```scala\n+val List(1,2,3)\n+  .map(num => num + 1) // we add one\n+  @@\n+```\n+\n+This was fixed by the Metals team in the presentation compiler itself for 2.12.9\n+and 2.13.1, however we also added a workaround for ny older Scala versions.\n+\n+## Add support for non-directory sources\n+\n+In case that your build tool supports having single files sources, we now offer\n+full support for them. That corresponds to the most recent BSP specification.\n+\n+## Automatically add package definition to new source files\n+\n+For every new Scala file we automatically add package definition based on the\n+relative path between the new source file and source root. This is done using\n+applyWorkspaceEdit method, which causes the change to be done in editor and this\n+can easily be rewerted like any other change you would type.\n+\n+![add-package](https://i.imgur.com/6V9gHnM.gif)\n+\n+We also added support for package objects. Whenever you create `package.scala`\n+file, we will automatically create the barebone definition of the package\n+object.\n+\n+![package-object](https://i.imgur.com/CfF0cdE.gif)\n+\n+There is still some work to be done about moving files between packages, which\n+will be addressed in the next release.\n+\n+Big thanks to the first time contributor from VirtusLab Tomasz Dudzik for\n+implementing most of the functionality! ðŸŽ‰\n+\n+## Automatically insert pipes in multiline string\n+\n+We finally managed to properly support adding `|` in multiline strings using the\n+`onTypeFormatting` method. Previous implementation was very naive and often\n+added pipes in wrong places.\n+\n+To enable the functionality you need to enable `onTypeFormatting` inside your\n+editor if it's not enabled by default.\n+\n+In Visual Studio Code this needs to be done in settings by checking\n+`Editor: Format On Type`:\n+\n+![on-type](https://i.imgur.com/4eVvSP5.gif)\n+\n+You will also need the newest version of the Visual Studio Code plugin.\n+\n+There is still some possible improvements in case of copy pasting entire text\n+fragments, but that needs some more work.\n+\n+Big thanks to another of our first time contributors from VirtusLab Karolina\n+Bogacka! Great work! ðŸŽ‰\n+\n+## Support for Scala 2.12.9\n+\n+Metals now supports Scala 2.12.9! No new Scala version has been deprecated in\n+this release, since it is possible that Scala 2.12.10 version with some\n+important fixes will be released soon.\n+\n+Big thanks to [@gabro](https://github.com/gabro) for again leading the effort!\n+This took considerably more time and effort than expected.\n+\n+## Miscellaneous fixes\n+\n+- erroneous warning for Scala 2.11 is no longer displayed\n+- don't infer build target for non-readonly files\n+- several issues in the tree view protocol spec"
  },
  {
    "id" : "83303ad6-dbb6-4a97-8a12-3de85a0ca753",
    "prId" : 886,
    "comments" : [
      {
        "id" : "b25be512-aa86-4793-a17c-49c273c88272",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "let's keep the tenses consistent\r\n\r\n```suggestion\r\n- fix issues when import was requested multiple times without any change\r\n```",
        "createdAt" : "2019-08-30T06:27:24Z",
        "updatedAt" : "2019-09-02T15:16:06Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f2ffed1bf6657e765c66db5d9b0d46317b61404a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,148 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.7.1 - Thorium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.7.0 - codename \"Thorium\" ðŸŽ‰\n+The release includes mostly bug fixes with some smaller new features.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+along with contributors from the community.\n+\n+In this release we merged 39 PRs and closed 11 issues, full details:\n+https://github.com/scalameta/metals/milestone/12?closed=1\n+\n+## TL;DR\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+- support for Scala 2.12.9\n+- fix completions in case of inline comments\n+- add support for non-directory sources\n+- automatically add package definition to new source files\n+- automatically insert pipes in multiline string\n+- a lot of miscellaneous fixes\n+\n+## Fix completions in case of inline comments\n+\n+Previously, completions after a comment and newline would yield no results:\n+\n+```scala\n+val List(1,2,3)\n+  .map(num => num + 1) // we add one\n+  @@\n+```\n+\n+This was fixed by the Metals team in the presentation compiler itself for 2.12.9\n+and 2.13.1, however we also added a workaround for ny older Scala versions.\n+\n+## Add support for non-directory sources\n+\n+In case that your build tool supports having single files sources, we now offer\n+full support for them. That corresponds to the most recent BSP specification.\n+\n+## Automatically add package definition to new source files\n+\n+For every new Scala file we automatically add package definition based on the\n+relative path between the new source file and source root. This is done using\n+applyWorkspaceEdit method, which causes the change to be done in editor and this\n+can easily be rewerted like any other change you would type.\n+\n+![add-package](https://i.imgur.com/6V9gHnM.gif)\n+\n+We also added support for package objects. Whenever you create `package.scala`\n+file, we will automatically create the barebone definition of the package\n+object.\n+\n+![package-object](https://i.imgur.com/CfF0cdE.gif)\n+\n+There is still some work to be done about moving files between packages, which\n+will be addressed in the next release.\n+\n+Big thanks to the first time contributor from VirtusLab Tomasz Dudzik for\n+implementing most of the functionality! ðŸŽ‰\n+\n+## Automatically insert pipes in multiline string\n+\n+We finally managed to properly support adding `|` in multiline strings using the\n+`onTypeFormatting` method. Previous implementation was very naive and often\n+added pipes in wrong places.\n+\n+To enable the functionality you need to enable `onTypeFormatting` inside your\n+editor if it's not enabled by default.\n+\n+In Visual Studio Code this needs to be done in settings by checking\n+`Editor: Format On Type`:\n+\n+![on-type](https://i.imgur.com/4eVvSP5.gif)\n+\n+You will also need the newest version of the Visual Studio Code plugin.\n+\n+There is still some possible improvements in case of copy pasting entire text\n+fragments, but that needs some more work.\n+\n+Big thanks to another of our first time contributors from VirtusLab Karolina\n+Bogacka! Great work! ðŸŽ‰\n+\n+## Support for Scala 2.12.9\n+\n+Metals now supports Scala 2.12.9! No new Scala version has been deprecated in\n+this release, since it is possible that Scala 2.12.10 version with some\n+important fixes will be released soon.\n+\n+Big thanks to [@gabro](https://github.com/gabro) for again leading the effort!\n+This took considerably more time and effort than expected.\n+\n+## Miscellaneous fixes\n+\n+- erroneous warning for Scala 2.11 is no longer displayed\n+- don't infer build target for non-readonly files\n+- several issues in the tree view protocol spec\n+- set h2.bindAddress to avoid exposing open ports (thanks @blast-hardcheese!)\n+- resolve symlinks that are used within workspaces\n+- fixed issues when import was requested multiple times without any change"
  },
  {
    "id" : "db9a3c59-27ac-414b-b8b4-355c94e21532",
    "prId" : 886,
    "comments" : [
      {
        "id" : "1d014e91-71ad-432f-8782-c429bb0672f9",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "```suggestion\r\n- string interpolation completions now works properly in multiline strings\r\n```",
        "createdAt" : "2019-08-30T06:27:42Z",
        "updatedAt" : "2019-09-02T15:16:06Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "67a77883-2008-4909-a7e6-a960b47394d6",
        "parentId" : "1d014e91-71ad-432f-8782-c429bb0672f9",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "completions -> work",
        "createdAt" : "2019-08-31T18:06:24Z",
        "updatedAt" : "2019-09-02T15:16:06Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f2ffed1bf6657e765c66db5d9b0d46317b61404a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,148 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.7.1 - Thorium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.7.0 - codename \"Thorium\" ðŸŽ‰\n+The release includes mostly bug fixes with some smaller new features.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+along with contributors from the community.\n+\n+In this release we merged 39 PRs and closed 11 issues, full details:\n+https://github.com/scalameta/metals/milestone/12?closed=1\n+\n+## TL;DR\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+- support for Scala 2.12.9\n+- fix completions in case of inline comments\n+- add support for non-directory sources\n+- automatically add package definition to new source files\n+- automatically insert pipes in multiline string\n+- a lot of miscellaneous fixes\n+\n+## Fix completions in case of inline comments\n+\n+Previously, completions after a comment and newline would yield no results:\n+\n+```scala\n+val List(1,2,3)\n+  .map(num => num + 1) // we add one\n+  @@\n+```\n+\n+This was fixed by the Metals team in the presentation compiler itself for 2.12.9\n+and 2.13.1, however we also added a workaround for ny older Scala versions.\n+\n+## Add support for non-directory sources\n+\n+In case that your build tool supports having single files sources, we now offer\n+full support for them. That corresponds to the most recent BSP specification.\n+\n+## Automatically add package definition to new source files\n+\n+For every new Scala file we automatically add package definition based on the\n+relative path between the new source file and source root. This is done using\n+applyWorkspaceEdit method, which causes the change to be done in editor and this\n+can easily be rewerted like any other change you would type.\n+\n+![add-package](https://i.imgur.com/6V9gHnM.gif)\n+\n+We also added support for package objects. Whenever you create `package.scala`\n+file, we will automatically create the barebone definition of the package\n+object.\n+\n+![package-object](https://i.imgur.com/CfF0cdE.gif)\n+\n+There is still some work to be done about moving files between packages, which\n+will be addressed in the next release.\n+\n+Big thanks to the first time contributor from VirtusLab Tomasz Dudzik for\n+implementing most of the functionality! ðŸŽ‰\n+\n+## Automatically insert pipes in multiline string\n+\n+We finally managed to properly support adding `|` in multiline strings using the\n+`onTypeFormatting` method. Previous implementation was very naive and often\n+added pipes in wrong places.\n+\n+To enable the functionality you need to enable `onTypeFormatting` inside your\n+editor if it's not enabled by default.\n+\n+In Visual Studio Code this needs to be done in settings by checking\n+`Editor: Format On Type`:\n+\n+![on-type](https://i.imgur.com/4eVvSP5.gif)\n+\n+You will also need the newest version of the Visual Studio Code plugin.\n+\n+There is still some possible improvements in case of copy pasting entire text\n+fragments, but that needs some more work.\n+\n+Big thanks to another of our first time contributors from VirtusLab Karolina\n+Bogacka! Great work! ðŸŽ‰\n+\n+## Support for Scala 2.12.9\n+\n+Metals now supports Scala 2.12.9! No new Scala version has been deprecated in\n+this release, since it is possible that Scala 2.12.10 version with some\n+important fixes will be released soon.\n+\n+Big thanks to [@gabro](https://github.com/gabro) for again leading the effort!\n+This took considerably more time and effort than expected.\n+\n+## Miscellaneous fixes\n+\n+- erroneous warning for Scala 2.11 is no longer displayed\n+- don't infer build target for non-readonly files\n+- several issues in the tree view protocol spec\n+- set h2.bindAddress to avoid exposing open ports (thanks @blast-hardcheese!)\n+- resolve symlinks that are used within workspaces\n+- fixed issues when import was requested multiple times without any change\n+- detect openjdk as a valid jdk home\n+- warn when java sources were not found\n+- string interpolation completions now work properly in multiline string"
  },
  {
    "id" : "5f0e1502-1e10-41ed-a10c-18ef42c73fdf",
    "prId" : 886,
    "comments" : [
      {
        "id" : "b53f11e2-bc5b-4bfc-9c52-ce0fd2841f56",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : ">issues\r\n\r\nnone of them? ",
        "createdAt" : "2019-08-30T06:28:14Z",
        "updatedAt" : "2019-09-02T15:16:06Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f2ffed1bf6657e765c66db5d9b0d46317b61404a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,148 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.7.1 - Thorium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.7.0 - codename \"Thorium\" ðŸŽ‰\n+The release includes mostly bug fixes with some smaller new features.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+along with contributors from the community.\n+\n+In this release we merged 39 PRs and closed 11 issues, full details:\n+https://github.com/scalameta/metals/milestone/12?closed=1\n+\n+## TL;DR\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+- support for Scala 2.12.9\n+- fix completions in case of inline comments\n+- add support for non-directory sources\n+- automatically add package definition to new source files\n+- automatically insert pipes in multiline string\n+- a lot of miscellaneous fixes\n+\n+## Fix completions in case of inline comments\n+\n+Previously, completions after a comment and newline would yield no results:\n+\n+```scala\n+val List(1,2,3)\n+  .map(num => num + 1) // we add one\n+  @@\n+```\n+\n+This was fixed by the Metals team in the presentation compiler itself for 2.12.9\n+and 2.13.1, however we also added a workaround for ny older Scala versions.\n+\n+## Add support for non-directory sources\n+\n+In case that your build tool supports having single files sources, we now offer\n+full support for them. That corresponds to the most recent BSP specification.\n+\n+## Automatically add package definition to new source files\n+\n+For every new Scala file we automatically add package definition based on the\n+relative path between the new source file and source root. This is done using\n+applyWorkspaceEdit method, which causes the change to be done in editor and this\n+can easily be rewerted like any other change you would type.\n+\n+![add-package](https://i.imgur.com/6V9gHnM.gif)\n+\n+We also added support for package objects. Whenever you create `package.scala`\n+file, we will automatically create the barebone definition of the package\n+object.\n+\n+![package-object](https://i.imgur.com/CfF0cdE.gif)\n+\n+There is still some work to be done about moving files between packages, which\n+will be addressed in the next release.\n+\n+Big thanks to the first time contributor from VirtusLab Tomasz Dudzik for\n+implementing most of the functionality! ðŸŽ‰\n+\n+## Automatically insert pipes in multiline string\n+\n+We finally managed to properly support adding `|` in multiline strings using the\n+`onTypeFormatting` method. Previous implementation was very naive and often\n+added pipes in wrong places.\n+\n+To enable the functionality you need to enable `onTypeFormatting` inside your\n+editor if it's not enabled by default.\n+\n+In Visual Studio Code this needs to be done in settings by checking\n+`Editor: Format On Type`:\n+\n+![on-type](https://i.imgur.com/4eVvSP5.gif)\n+\n+You will also need the newest version of the Visual Studio Code plugin.\n+\n+There is still some possible improvements in case of copy pasting entire text\n+fragments, but that needs some more work.\n+\n+Big thanks to another of our first time contributors from VirtusLab Karolina\n+Bogacka! Great work! ðŸŽ‰\n+\n+## Support for Scala 2.12.9\n+\n+Metals now supports Scala 2.12.9! No new Scala version has been deprecated in\n+this release, since it is possible that Scala 2.12.10 version with some\n+important fixes will be released soon.\n+\n+Big thanks to [@gabro](https://github.com/gabro) for again leading the effort!\n+This took considerably more time and effort than expected.\n+\n+## Miscellaneous fixes\n+\n+- erroneous warning for Scala 2.11 is no longer displayed\n+- don't infer build target for non-readonly files\n+- several issues in the tree view protocol spec\n+- set h2.bindAddress to avoid exposing open ports (thanks @blast-hardcheese!)\n+- resolve symlinks that are used within workspaces\n+- fixed issues when import was requested multiple times without any change\n+- detect openjdk as a valid jdk home\n+- warn when java sources were not found\n+- string interpolation completions now work properly in multiline string\n+- add ReloadDoctor to the list of all commands (thanks @kurnevsky!)\n+- add correct mill version in the predef script when running `bloopInstall`\n+- issues are no longer reported in java only projects"
  },
  {
    "id" : "a0d0b450-4b32-421e-943c-1654b635bcf4",
    "prId" : 886,
    "comments" : [
      {
        "id" : "b3e1ebe5-2004-4d5e-9957-e779c838cab6",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Can we also include a GIF of using the new feature? ",
        "createdAt" : "2019-08-31T01:36:30Z",
        "updatedAt" : "2019-09-02T15:16:06Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f2ffed1bf6657e765c66db5d9b0d46317b61404a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,148 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.7.1 - Thorium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.7.0 - codename \"Thorium\" ðŸŽ‰\n+The release includes mostly bug fixes with some smaller new features.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+along with contributors from the community.\n+\n+In this release we merged 39 PRs and closed 11 issues, full details:\n+https://github.com/scalameta/metals/milestone/12?closed=1\n+\n+## TL;DR\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+- support for Scala 2.12.9\n+- fix completions in case of inline comments\n+- add support for non-directory sources\n+- automatically add package definition to new source files\n+- automatically insert pipes in multiline string\n+- a lot of miscellaneous fixes\n+\n+## Fix completions in case of inline comments\n+\n+Previously, completions after a comment and newline would yield no results:\n+\n+```scala\n+val List(1,2,3)\n+  .map(num => num + 1) // we add one\n+  @@\n+```\n+\n+This was fixed by the Metals team in the presentation compiler itself for 2.12.9\n+and 2.13.1, however we also added a workaround for ny older Scala versions.\n+\n+## Add support for non-directory sources\n+\n+In case that your build tool supports having single files sources, we now offer\n+full support for them. That corresponds to the most recent BSP specification.\n+\n+## Automatically add package definition to new source files\n+\n+For every new Scala file we automatically add package definition based on the\n+relative path between the new source file and source root. This is done using\n+applyWorkspaceEdit method, which causes the change to be done in editor and this\n+can easily be rewerted like any other change you would type.\n+\n+![add-package](https://i.imgur.com/6V9gHnM.gif)\n+\n+We also added support for package objects. Whenever you create `package.scala`\n+file, we will automatically create the barebone definition of the package\n+object.\n+\n+![package-object](https://i.imgur.com/CfF0cdE.gif)\n+\n+There is still some work to be done about moving files between packages, which\n+will be addressed in the next release.\n+\n+Big thanks to the first time contributor from VirtusLab Tomasz Dudzik for\n+implementing most of the functionality! ðŸŽ‰\n+\n+## Automatically insert pipes in multiline string\n+\n+We finally managed to properly support adding `|` in multiline strings using the\n+`onTypeFormatting` method. Previous implementation was very naive and often\n+added pipes in wrong places.\n+\n+To enable the functionality you need to enable `onTypeFormatting` inside your\n+editor if it's not enabled by default.\n+\n+In Visual Studio Code this needs to be done in settings by checking\n+`Editor: Format On Type`:\n+\n+![on-type](https://i.imgur.com/4eVvSP5.gif)"
  },
  {
    "id" : "406acf22-e956-4514-b81a-0c0cbf676b35",
    "prId" : 886,
    "comments" : [
      {
        "id" : "3a608fd2-ad53-461b-b2fe-e849bf338cd0",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "```suggestion\r\nWe are excited to announce the release of Metals v0.7.2 - codename \"Thorium\" ðŸŽ‰\r\n```\r\n\r\n",
        "createdAt" : "2019-08-31T01:37:00Z",
        "updatedAt" : "2019-09-02T15:16:06Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f2ffed1bf6657e765c66db5d9b0d46317b61404a",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,148 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.7.1 - Thorium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.7.0 - codename \"Thorium\" ðŸŽ‰"
  }
]