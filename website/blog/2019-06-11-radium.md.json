[
  {
    "id" : "670ef4f6-5772-4731-bc9a-a76753151052",
    "prId" : 752,
    "comments" : [
      {
        "id" : "e1eccfaa-3e1f-47cb-84c1-410f35df1198",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "```suggestion\r\nrelease mostly focused on adding support for the build tools Gradle, Maven and Mill.\r\n```",
        "createdAt" : "2019-06-11T11:27:25Z",
        "updatedAt" : "2019-06-11T13:43:01Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f93d3bf127bfb04521817c612f4a4d73cb27f642",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,169 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.6.1 - Radium\n+authorURL: https://twitter.com/tomekgodzik\n+authorImageURL: https://avatars1.githubusercontent.com/u/3807253?s=460&v=4\n+---\n+\n+We are excited to announce the release of Metals v0.6.1, codename \"Radium\" ðŸŽ‰ The\n+release mostly focused on easier integration with the most popular build tools"
  },
  {
    "id" : "23e9f128-7766-420d-aa9c-e3f4b6c8c66d",
    "prId" : 752,
    "comments" : [
      {
        "id" : "7bc5add8-cfea-48e0-bdc1-368b87ffb993",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "```suggestion\r\n[Scala Center](https://scala.epfl.ch/) and [VirtusLab](???) along with contributors from the\r\n```",
        "createdAt" : "2019-06-11T11:27:43Z",
        "updatedAt" : "2019-06-11T13:43:02Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f93d3bf127bfb04521817c612f4a4d73cb27f642",
    "line" : 14,
    "diffHunk" : "@@ -0,0 +1,169 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.6.1 - Radium\n+authorURL: https://twitter.com/tomekgodzik\n+authorImageURL: https://avatars1.githubusercontent.com/u/3807253?s=460&v=4\n+---\n+\n+We are excited to announce the release of Metals v0.6.1, codename \"Radium\" ðŸŽ‰ The\n+release mostly focused on easier integration with the most popular build tools\n+such as Mill, Gradle and Maven.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) along with contributors from the"
  },
  {
    "id" : "c5f89311-83e3-4d6b-be3c-7dd7f59c21ed",
    "prId" : 752,
    "comments" : [
      {
        "id" : "47249e58-e410-4031-b9b6-f4fe1403cdb9",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I propose we pick a consistent term for vscode and stick to it. I propose \"VS Code\" (space after VS and capital C)",
        "createdAt" : "2019-06-11T11:40:35Z",
        "updatedAt" : "2019-06-11T13:10:11Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f93d3bf127bfb04521817c612f4a4d73cb27f642",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,169 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.6.1 - Radium\n+authorURL: https://twitter.com/tomekgodzik\n+authorImageURL: https://avatars1.githubusercontent.com/u/3807253?s=460&v=4\n+---\n+\n+We are excited to announce the release of Metals v0.6.1, codename \"Radium\" ðŸŽ‰ The\n+release mostly focused on easier integration with the most popular build tools\n+such as Mill, Gradle and Maven.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) along with contributors from the\n+community.\n+\n+In this release we merged 24 PRs and closed 6 issues, full details:\n+https://github.com/scalameta/metals/milestone/7?closed=1.\n+\n+## TL;DR\n+\n+- auto-import with gradle, maven and mill\n+- better handling of requests that access the presentation compiler\n+- code completions on keywords\n+- VS code doesn't compile projects until it is focused"
  },
  {
    "id" : "1d76e330-ec08-48fe-bda7-9462c5d289fd",
    "prId" : 752,
    "comments" : [
      {
        "id" : "bd8aef60-cf09-4b5e-9c3c-ec7149f945bc",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "The backticks seem unnecessary for tools names. I would use sbt, Gradle, Maven and Mill without backticks",
        "createdAt" : "2019-06-11T11:41:19Z",
        "updatedAt" : "2019-06-11T13:10:11Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f93d3bf127bfb04521817c612f4a4d73cb27f642",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,169 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.6.1 - Radium\n+authorURL: https://twitter.com/tomekgodzik\n+authorImageURL: https://avatars1.githubusercontent.com/u/3807253?s=460&v=4\n+---\n+\n+We are excited to announce the release of Metals v0.6.1, codename \"Radium\" ðŸŽ‰ The\n+release mostly focused on easier integration with the most popular build tools\n+such as Mill, Gradle and Maven.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) along with contributors from the\n+community.\n+\n+In this release we merged 24 PRs and closed 6 issues, full details:\n+https://github.com/scalameta/metals/milestone/7?closed=1.\n+\n+## TL;DR\n+\n+- auto-import with gradle, maven and mill\n+- better handling of requests that access the presentation compiler\n+- code completions on keywords\n+- VS code doesn't compile projects until it is focused\n+- Metals is now a default server in the Sublime LSP package\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+## Auto-import with gradle, maven and mill\n+\n+Just as with `sbt` when you open a new project that contains scala code and is\n+built with `Gradle`, `Maven` or `Mill`, a pop-up will show prompting you to"
  },
  {
    "id" : "cbd5636b-bfdc-4f6c-bfd1-5efdca4dac02",
    "prId" : 752,
    "comments" : [
      {
        "id" : "c7d6b2cf-c1d3-46e6-8369-1ca31ab6302c",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "link to the documentation?",
        "createdAt" : "2019-06-11T11:41:30Z",
        "updatedAt" : "2019-06-11T13:10:11Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f93d3bf127bfb04521817c612f4a4d73cb27f642",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,169 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.6.1 - Radium\n+authorURL: https://twitter.com/tomekgodzik\n+authorImageURL: https://avatars1.githubusercontent.com/u/3807253?s=460&v=4\n+---\n+\n+We are excited to announce the release of Metals v0.6.1, codename \"Radium\" ðŸŽ‰ The\n+release mostly focused on easier integration with the most popular build tools\n+such as Mill, Gradle and Maven.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) along with contributors from the\n+community.\n+\n+In this release we merged 24 PRs and closed 6 issues, full details:\n+https://github.com/scalameta/metals/milestone/7?closed=1.\n+\n+## TL;DR\n+\n+- auto-import with gradle, maven and mill\n+- better handling of requests that access the presentation compiler\n+- code completions on keywords\n+- VS code doesn't compile projects until it is focused\n+- Metals is now a default server in the Sublime LSP package\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+## Auto-import with gradle, maven and mill\n+\n+Just as with `sbt` when you open a new project that contains scala code and is\n+built with `Gradle`, `Maven` or `Mill`, a pop-up will show prompting you to\n+import the project. Once you click it the auto-import will start. There is more\n+information about each of the build tools supported in the documentation."
  },
  {
    "id" : "71492207-da91-4890-bb1b-1450f878a54a",
    "prId" : 752,
    "comments" : [
      {
        "id" : "71d46078-e39f-4d4b-b676-d3aaf4fee164",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "This entire section seems a bit too focused on implementation details. I would rephrase it from a Metals user perspective and link to the relevant issue for the technical details.\r\n\r\nSomething like:\r\n\r\n> Due to how requests to the presentation compiler worked, the Metals process would fail to exit properly in some cases. We've refactored the communication to make it more resilient, so now Metals should not be hanging around longer than necessary!\r\n\r\n> As a bonus, this approach allows Metals to prioritize the most recently submitted request when choosing between competing hover/signatureHelp/completion requests.",
        "createdAt" : "2019-06-11T11:46:38Z",
        "updatedAt" : "2019-06-11T13:10:11Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f93d3bf127bfb04521817c612f4a4d73cb27f642",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,169 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.6.1 - Radium\n+authorURL: https://twitter.com/tomekgodzik\n+authorImageURL: https://avatars1.githubusercontent.com/u/3807253?s=460&v=4\n+---\n+\n+We are excited to announce the release of Metals v0.6.1, codename \"Radium\" ðŸŽ‰ The\n+release mostly focused on easier integration with the most popular build tools\n+such as Mill, Gradle and Maven.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) along with contributors from the\n+community.\n+\n+In this release we merged 24 PRs and closed 6 issues, full details:\n+https://github.com/scalameta/metals/milestone/7?closed=1.\n+\n+## TL;DR\n+\n+- auto-import with gradle, maven and mill\n+- better handling of requests that access the presentation compiler\n+- code completions on keywords\n+- VS code doesn't compile projects until it is focused\n+- Metals is now a default server in the Sublime LSP package\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+## Auto-import with gradle, maven and mill\n+\n+Just as with `sbt` when you open a new project that contains scala code and is\n+built with `Gradle`, `Maven` or `Mill`, a pop-up will show prompting you to\n+import the project. Once you click it the auto-import will start. There is more\n+information about each of the build tools supported in the documentation.\n+\n+## Better handling of requests to the presentation compiler"
  },
  {
    "id" : "36b07fc2-bf48-4df5-a006-3496be324ecb",
    "prId" : 752,
    "comments" : [
      {
        "id" : "1a8cadec-c2fe-4a56-97c2-a63a491c0ead",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I would add a minor sentence as introduction here:\r\n\r\n> Language keywords are now included in the auto-completions. For instance:",
        "createdAt" : "2019-06-11T11:47:42Z",
        "updatedAt" : "2019-06-11T13:10:11Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f93d3bf127bfb04521817c612f4a4d73cb27f642",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,169 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.6.1 - Radium\n+authorURL: https://twitter.com/tomekgodzik\n+authorImageURL: https://avatars1.githubusercontent.com/u/3807253?s=460&v=4\n+---\n+\n+We are excited to announce the release of Metals v0.6.1, codename \"Radium\" ðŸŽ‰ The\n+release mostly focused on easier integration with the most popular build tools\n+such as Mill, Gradle and Maven.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) along with contributors from the\n+community.\n+\n+In this release we merged 24 PRs and closed 6 issues, full details:\n+https://github.com/scalameta/metals/milestone/7?closed=1.\n+\n+## TL;DR\n+\n+- auto-import with gradle, maven and mill\n+- better handling of requests that access the presentation compiler\n+- code completions on keywords\n+- VS code doesn't compile projects until it is focused\n+- Metals is now a default server in the Sublime LSP package\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+## Auto-import with gradle, maven and mill\n+\n+Just as with `sbt` when you open a new project that contains scala code and is\n+built with `Gradle`, `Maven` or `Mill`, a pop-up will show prompting you to\n+import the project. Once you click it the auto-import will start. There is more\n+information about each of the build tools supported in the documentation.\n+\n+## Better handling of requests to the presentation compiler\n+\n+Previously, we used .synchronized to limit multi-threaded access to the\n+presentation compiler. This approach had several issues, of which most\n+critically we risked blocking threads forever preventing the Metals process from\n+exiting.\n+\n+Now, the APIs that access the presentation compiler return CompletableFuture and\n+the implementation no longer uses .synchronized. This change had a nice\n+side-effect that Metals now prioritizes the most recently submitted request when\n+choosing between competing hover/signatureHelp/completion requests.\n+\n+## Code completions on keywords"
  },
  {
    "id" : "14016105-84cb-4c19-bfe7-ad34e4ee2b7a",
    "prId" : 752,
    "comments" : [
      {
        "id" : "74de4f8c-9240-4521-b1e9-c69b9dd7def9",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "> Keywords are suggested based on the context (e.g. you won't see `throw` suggested if the cursor is not inside a declaration)",
        "createdAt" : "2019-06-11T11:49:45Z",
        "updatedAt" : "2019-06-11T13:10:11Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f93d3bf127bfb04521817c612f4a4d73cb27f642",
    "line" : 74,
    "diffHunk" : "@@ -0,0 +1,169 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.6.1 - Radium\n+authorURL: https://twitter.com/tomekgodzik\n+authorImageURL: https://avatars1.githubusercontent.com/u/3807253?s=460&v=4\n+---\n+\n+We are excited to announce the release of Metals v0.6.1, codename \"Radium\" ðŸŽ‰ The\n+release mostly focused on easier integration with the most popular build tools\n+such as Mill, Gradle and Maven.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) along with contributors from the\n+community.\n+\n+In this release we merged 24 PRs and closed 6 issues, full details:\n+https://github.com/scalameta/metals/milestone/7?closed=1.\n+\n+## TL;DR\n+\n+- auto-import with gradle, maven and mill\n+- better handling of requests that access the presentation compiler\n+- code completions on keywords\n+- VS code doesn't compile projects until it is focused\n+- Metals is now a default server in the Sublime LSP package\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+## Auto-import with gradle, maven and mill\n+\n+Just as with `sbt` when you open a new project that contains scala code and is\n+built with `Gradle`, `Maven` or `Mill`, a pop-up will show prompting you to\n+import the project. Once you click it the auto-import will start. There is more\n+information about each of the build tools supported in the documentation.\n+\n+## Better handling of requests to the presentation compiler\n+\n+Previously, we used .synchronized to limit multi-threaded access to the\n+presentation compiler. This approach had several issues, of which most\n+critically we risked blocking threads forever preventing the Metals process from\n+exiting.\n+\n+Now, the APIs that access the presentation compiler return CompletableFuture and\n+the implementation no longer uses .synchronized. This change had a nice\n+side-effect that Metals now prioritizes the most recently submitted request when\n+choosing between competing hover/signatureHelp/completion requests.\n+\n+## Code completions on keywords\n+\n+```scala\n+object Main {\n+    imp@@\n+}\n+```\n+\n+will automatically give you suggestion to do:\n+\n+```scala\n+object Main {\n+    import\n+}\n+```"
  },
  {
    "id" : "658202a2-5aac-47ac-9948-f06c4d4c7010",
    "prId" : 752,
    "comments" : [
      {
        "id" : "6807983c-945b-42f2-9183-330aefd59d40",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "See comment above about VS Code casing.",
        "createdAt" : "2019-06-11T11:50:06Z",
        "updatedAt" : "2019-06-11T13:10:11Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f93d3bf127bfb04521817c612f4a4d73cb27f642",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,169 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.6.1 - Radium\n+authorURL: https://twitter.com/tomekgodzik\n+authorImageURL: https://avatars1.githubusercontent.com/u/3807253?s=460&v=4\n+---\n+\n+We are excited to announce the release of Metals v0.6.1, codename \"Radium\" ðŸŽ‰ The\n+release mostly focused on easier integration with the most popular build tools\n+such as Mill, Gradle and Maven.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) along with contributors from the\n+community.\n+\n+In this release we merged 24 PRs and closed 6 issues, full details:\n+https://github.com/scalameta/metals/milestone/7?closed=1.\n+\n+## TL;DR\n+\n+- auto-import with gradle, maven and mill\n+- better handling of requests that access the presentation compiler\n+- code completions on keywords\n+- VS code doesn't compile projects until it is focused\n+- Metals is now a default server in the Sublime LSP package\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+## Auto-import with gradle, maven and mill\n+\n+Just as with `sbt` when you open a new project that contains scala code and is\n+built with `Gradle`, `Maven` or `Mill`, a pop-up will show prompting you to\n+import the project. Once you click it the auto-import will start. There is more\n+information about each of the build tools supported in the documentation.\n+\n+## Better handling of requests to the presentation compiler\n+\n+Previously, we used .synchronized to limit multi-threaded access to the\n+presentation compiler. This approach had several issues, of which most\n+critically we risked blocking threads forever preventing the Metals process from\n+exiting.\n+\n+Now, the APIs that access the presentation compiler return CompletableFuture and\n+the implementation no longer uses .synchronized. This change had a nice\n+side-effect that Metals now prioritizes the most recently submitted request when\n+choosing between competing hover/signatureHelp/completion requests.\n+\n+## Code completions on keywords\n+\n+```scala\n+object Main {\n+    imp@@\n+}\n+```\n+\n+will automatically give you suggestion to do:\n+\n+```scala\n+object Main {\n+    import\n+}\n+```\n+\n+## VS code doesn't compile projects until it is focused"
  },
  {
    "id" : "f2344c14-2b75-403a-a1aa-1277671ebe98",
    "prId" : 752,
    "comments" : [
      {
        "id" : "220b8ece-ee5a-4152-9fe1-dfd46a5775ff",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "```suggestion\r\nagain. This helps to avoid unnecessary compilations when you're not actively working on the code.\r\n```",
        "createdAt" : "2019-06-11T11:50:54Z",
        "updatedAt" : "2019-06-11T13:10:11Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f93d3bf127bfb04521817c612f4a4d73cb27f642",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,169 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.6.1 - Radium\n+authorURL: https://twitter.com/tomekgodzik\n+authorImageURL: https://avatars1.githubusercontent.com/u/3807253?s=460&v=4\n+---\n+\n+We are excited to announce the release of Metals v0.6.1, codename \"Radium\" ðŸŽ‰ The\n+release mostly focused on easier integration with the most popular build tools\n+such as Mill, Gradle and Maven.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) along with contributors from the\n+community.\n+\n+In this release we merged 24 PRs and closed 6 issues, full details:\n+https://github.com/scalameta/metals/milestone/7?closed=1.\n+\n+## TL;DR\n+\n+- auto-import with gradle, maven and mill\n+- better handling of requests that access the presentation compiler\n+- code completions on keywords\n+- VS code doesn't compile projects until it is focused\n+- Metals is now a default server in the Sublime LSP package\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+## Auto-import with gradle, maven and mill\n+\n+Just as with `sbt` when you open a new project that contains scala code and is\n+built with `Gradle`, `Maven` or `Mill`, a pop-up will show prompting you to\n+import the project. Once you click it the auto-import will start. There is more\n+information about each of the build tools supported in the documentation.\n+\n+## Better handling of requests to the presentation compiler\n+\n+Previously, we used .synchronized to limit multi-threaded access to the\n+presentation compiler. This approach had several issues, of which most\n+critically we risked blocking threads forever preventing the Metals process from\n+exiting.\n+\n+Now, the APIs that access the presentation compiler return CompletableFuture and\n+the implementation no longer uses .synchronized. This change had a nice\n+side-effect that Metals now prioritizes the most recently submitted request when\n+choosing between competing hover/signatureHelp/completion requests.\n+\n+## Code completions on keywords\n+\n+```scala\n+object Main {\n+    imp@@\n+}\n+```\n+\n+will automatically give you suggestion to do:\n+\n+```scala\n+object Main {\n+    import\n+}\n+```\n+\n+## VS code doesn't compile projects until it is focused\n+\n+When you edit your code outside the editor, like in case of switching git\n+branches, VSCode will wait until it is focused again to start the compilation\n+again. This helps to avoid uneccessary compilations ans strain on the processor."
  }
]