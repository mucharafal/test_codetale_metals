[
  {
    "id" : "f1cdc512-5e7e-41d5-8157-7a3766b6051d",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "82717c0d-c1e9-4964-bc60-16b6b9003a5b",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "@colineto Do you want to be fully mentioned here with the surname or should I leave it as is?",
        "createdAt" : "2020-05-04T15:52:37Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ed2a0a5f-3997-4f02-9fe0-4769c8b2518c",
        "parentId" : "82717c0d-c1e9-4964-bc60-16b6b9003a5b",
        "author" : {
          "login" : "colineto",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/11595083?u=8ca622acabbe83799b21d524022c59e0b15cbb44&v=4"
        },
        "body" : "Coline Thomas will be great thx",
        "createdAt" : "2020-05-05T09:22:29Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "colineto",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/11595083?u=8ca622acabbe83799b21d524022c59e0b15cbb44&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "de50ee50-6229-4be3-ae5f-c24abc6359d4",
        "parentId" : "82717c0d-c1e9-4964-bc60-16b6b9003a5b",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Updated!",
        "createdAt" : "2020-05-05T09:42:12Z",
        "updatedAt" : "2020-05-05T09:42:13Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the\n+Dotty compiler, which will become the new Scala 3. This effort included\n+contributions to Metals, Bloop as well as to Dotty. Thanks to a great help from\n+the Dotty compiler team, we now have an option to generate semanticDB files used\n+for our internal indexes, which allowed some features to work without any\n+changes to the core code. It is also important to mention that without\n+[jvican](https://github.com/jvican) and his Bloop project, which already\n+supports Scala 3, all this would have taken a much longer time.\n+\n+That said, there are some issues that are lacking in the Scala 3 support that\n+are available for 2.x versions. Most notably, we are still missing all of the\n+more advanced completions, filtering and sorting of completion items or auto\n+imports. There are also some possible issues connected to optional braces and\n+top level methods features. In the upcoming months we are planning to address\n+most of those issues and implement the lacking features.\n+\n+You can find missing features in the\n+[feature requests repository](https://github.com/scalameta/metals-feature-requests/issues?q=is%3Aissue+is%3Aopen+label%3Ascala3)\n+and currently known bugs in the\n+[main Metals repo.](https://github.com/scalameta/metals/issues?q=is%3Aissue+is%3Aopen+label%3A%22Scala+3%22)\n+\n+The first supported versions will be `0.23.0` and `0.24.0-RC1`, which are the\n+latest stable and latests release candidate respectably. We plan to always\n+support such two versions until there is a more stable release cycle for\n+Scala 3.\n+\n+Please do report any issues you encounter, especially connected to some new\n+Scala 3 features, which will be an immense help to the team.\n+\n+## Improvements related to Bloop/Metals integration\n+\n+There has been multiple reported issues in the last weeks about hanging\n+compilation, which could make the Metals workspace hard to use. Our top priority\n+is currently figuring out all the possible issues both in Metals as well in\n+Bloop. Thanks to some fixes done by [jvican](https://github.com/jvican) we are\n+hopeful that some of the issues might become less frequent. Those fixes are\n+available in the current Bloop snapshots and in the version included in Metals\n+\n+We also reworked the Metals tree view to highlight some commands that a user can\n+use to fix their workspace as well as added a new command to recompile workspace\n+from scratch:\n+\n+![reworked-tree-view](https://i.imgur.com/PERfNqt.png)\n+\n+`Clean compile workspace` might be needed in case of broken Zinc caches and\n+`Restart Bloop server` should help with the cases where deduplication of\n+compilation would hang. Do not hesitate to report any possible issues and if\n+possible there are a number of additional diagnostics that can be done before\n+reporting an issue:\n+\n+- getting a thread dump of Bloop process\n+- running verbose compilation via the CLI:\n+  `coursier launch ch.epfl.scala:<bloop_version> -- compile --verbose <project_name>`\n+- (advanced) attaching profiler such as YourKit to discover exceptions being\n+  thrown by the Bloop server. This will require\n+\n+We are also monitoring the situation ourselves and investigating all problems\n+encountered.\n+\n+## Automatically add '+' on newline inside a string\n+\n+The Metals team was recently joined by [mlachkar](https://github.com/mlachkar),\n+an engineer from Scala Center, who already contributed a number of features and\n+bug fixes to the Project. Thanks to her, we now can easily enter a newline\n+inside a single line string and that string will be correctly split with an\n+additional `+`.\n+\n+![split-line](https://i.imgur.com/uhF0MOx.gif)\n+\n+## Code action to import all missing symbols\n+\n+Previously, it was only available to import one symbol at a time in case of\n+missing imports. Thanks to [colineto](https://github.com/colineto) we now have\n+an ability to import everything in bulk for every unambiguous import available.\n+Unambiguous in this case meaning that there is only one possible import to\n+choose from.\n+\n+![import-all](https://i.imgur.com/mmzgJs7.gif)\n+\n+## Miscellaneous improvements\n+\n+- added an option to ignore .scalafmt.conf creation message\n+- fixed hanging while debugging if workspace had errors\n+- fixed issue with folding in non 2.12.11 workspaces\n+- turn off \"Go to parent\" code lenses by default\n+- fixed false parsing errors in 2.13.x workspaces\n+- added date string to metals logs\n+- fixed issue with additional src directories being created automatically\n+- fixed \"Go to implementation\" to work with local aliases\n+\n+## Contributors\n+\n+Big thanks to everybody who contributed to this release! We had a lot of new\n+contributors doing some really exemplary work.\n+\n+```\n+$ git shortlog -sn --no-merges v0.8.4..v0.9.0\n+Ayoub Benali\n+Tomasz Godzik\n+Scala Steward\n+Chris Kipp\n+Coline"
  },
  {
    "id" : "7aebe744-c06d-441b-8261-da3bf7795b94",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "1d404954-69a5-4e57-8447-f1f4ae48950a",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nWe are happy to announce the release of Metals v0.9.0, codename \"Lithium\", which\r\n```",
        "createdAt" : "2020-05-04T16:52:00Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which"
  },
  {
    "id" : "17cdf876-2abb-4efc-bfee-6c178e0ae688",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "00577e63-4018-4f54-9a64-403cf40848d7",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nmain focus is introducing support for Scala 3 starting with versions\r\n```",
        "createdAt" : "2020-05-04T16:52:28Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions"
  },
  {
    "id" : "d9d1871b-b63e-4331-976e-1af9369a9fb3",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "c0f79537-53b2-40d4-a131-1b749d5a05ed",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of other\r\n```",
        "createdAt" : "2020-05-04T16:52:50Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of"
  },
  {
    "id" : "5f26fb91-33de-439e-82ba-8482254f69fd",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "7443695c-8fae-47f5-b13e-d52e2cb08950",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- Improvements to the Bloop integration\r\n```",
        "createdAt" : "2020-05-04T16:54:00Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration"
  },
  {
    "id" : "9395f628-7f5d-4e60-b25a-2dec0c20ebbb",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "c2f6b500-3f4a-4621-932d-22ed5f84fb5f",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- Automatically add '+' on newline when inside a string\r\n```",
        "createdAt" : "2020-05-04T16:54:18Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string"
  },
  {
    "id" : "7cec0a5b-cb58-4e67-bf2a-5ae597c7ae00",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "3d8043e8-8d6b-42f0-8db8-c97c6db622d2",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- New Code action: \"Import all missing symbols\"\r\n```",
        "createdAt" : "2020-05-04T16:55:28Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\""
  },
  {
    "id" : "d55baf70-8095-4fed-8bba-8a4f14c22118",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "4ce07923-365c-4c89-9351-61728f0a88fe",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nFor a couple of the last months we have been working on making Metals work with the\r\n```",
        "createdAt" : "2020-05-04T16:55:48Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the"
  },
  {
    "id" : "d24aa1aa-2e94-470f-b626-07936306f593",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "d0d99e1a-7066-4339-85e7-c114b34dcb1c",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\ncontributions to Metals, Bloop as well as to Dotty. Thanks to the great help from\r\n```",
        "createdAt" : "2020-05-04T16:56:04Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the\n+Dotty compiler, which will become the new Scala 3. This effort included\n+contributions to Metals, Bloop as well as to Dotty. Thanks to a great help from"
  },
  {
    "id" : "742fb0ac-6484-48c7-8802-cec5b77b9bd8",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "6a2ac736-589e-4819-b0e2-0f13da43840b",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nmost of these issues and implement the lacking features.\r\n```",
        "createdAt" : "2020-05-04T16:57:39Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the\n+Dotty compiler, which will become the new Scala 3. This effort included\n+contributions to Metals, Bloop as well as to Dotty. Thanks to a great help from\n+the Dotty compiler team, we now have an option to generate semanticDB files used\n+for our internal indexes, which allowed some features to work without any\n+changes to the core code. It is also important to mention that without\n+[jvican](https://github.com/jvican) and his Bloop project, which already\n+supports Scala 3, all this would have taken a much longer time.\n+\n+That said, there are some issues that are lacking in the Scala 3 support that\n+are available for 2.x versions. Most notably, we are still missing all of the\n+more advanced completions, filtering and sorting of completion items or auto\n+imports. There are also some possible issues connected to optional braces and\n+top level methods features. In the upcoming months we are planning to address\n+most of those issues and implement the lacking features."
  },
  {
    "id" : "c7489dfc-2bd5-42b1-ad53-edd8504b59ab",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "df36300f-4b6d-4b17-bad5-31375c1fbcf5",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nlatest stable and latest release candidate respectably. We plan to always\r\n```",
        "createdAt" : "2020-05-04T16:58:05Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the\n+Dotty compiler, which will become the new Scala 3. This effort included\n+contributions to Metals, Bloop as well as to Dotty. Thanks to a great help from\n+the Dotty compiler team, we now have an option to generate semanticDB files used\n+for our internal indexes, which allowed some features to work without any\n+changes to the core code. It is also important to mention that without\n+[jvican](https://github.com/jvican) and his Bloop project, which already\n+supports Scala 3, all this would have taken a much longer time.\n+\n+That said, there are some issues that are lacking in the Scala 3 support that\n+are available for 2.x versions. Most notably, we are still missing all of the\n+more advanced completions, filtering and sorting of completion items or auto\n+imports. There are also some possible issues connected to optional braces and\n+top level methods features. In the upcoming months we are planning to address\n+most of those issues and implement the lacking features.\n+\n+You can find missing features in the\n+[feature requests repository](https://github.com/scalameta/metals-feature-requests/issues?q=is%3Aissue+is%3Aopen+label%3Ascala3)\n+and currently known bugs in the\n+[main Metals repo.](https://github.com/scalameta/metals/issues?q=is%3Aissue+is%3Aopen+label%3A%22Scala+3%22)\n+\n+The first supported versions will be `0.23.0` and `0.24.0-RC1`, which are the\n+latest stable and latests release candidate respectably. We plan to always"
  },
  {
    "id" : "80ab5c27-b2c2-4d48-84c4-0e7761d7a4e4",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "06f46b2f-4f9c-450a-911a-2636fa6d7f47",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nsupport the latest stable and release candidate until there is a more stable release cycle for\r\n```",
        "createdAt" : "2020-05-04T16:58:56Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the\n+Dotty compiler, which will become the new Scala 3. This effort included\n+contributions to Metals, Bloop as well as to Dotty. Thanks to a great help from\n+the Dotty compiler team, we now have an option to generate semanticDB files used\n+for our internal indexes, which allowed some features to work without any\n+changes to the core code. It is also important to mention that without\n+[jvican](https://github.com/jvican) and his Bloop project, which already\n+supports Scala 3, all this would have taken a much longer time.\n+\n+That said, there are some issues that are lacking in the Scala 3 support that\n+are available for 2.x versions. Most notably, we are still missing all of the\n+more advanced completions, filtering and sorting of completion items or auto\n+imports. There are also some possible issues connected to optional braces and\n+top level methods features. In the upcoming months we are planning to address\n+most of those issues and implement the lacking features.\n+\n+You can find missing features in the\n+[feature requests repository](https://github.com/scalameta/metals-feature-requests/issues?q=is%3Aissue+is%3Aopen+label%3Ascala3)\n+and currently known bugs in the\n+[main Metals repo.](https://github.com/scalameta/metals/issues?q=is%3Aissue+is%3Aopen+label%3A%22Scala+3%22)\n+\n+The first supported versions will be `0.23.0` and `0.24.0-RC1`, which are the\n+latest stable and latests release candidate respectably. We plan to always\n+support such two versions until there is a more stable release cycle for"
  },
  {
    "id" : "3ba2b71e-12cd-4487-b0ea-0ca9da27a561",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "8a128179-4842-4396-bf83-260cacd9c1b4",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nThere have been multiple reported issues in the last weeks about hanging\r\ncompilation, which can make the Metals workspace hard to use. Our top priority\r\nhas been figuring out all the possible issues both in Metals as well as in\r\nBloop. Thanks to some fixes done by [jvican](https://github.com/jvican), and some\r\nwork on the Metals side on the Bloop integration we're hopeful that some of the\r\nissues are becoming less frequent. These fixes are included in this release.\r\n```\r\nI think we should re-word this a bit to sound a bit more positive. What do you think of this? I also cut out some of the details that are sort of imo irrelevant to this release doc like \"these fixes are available in the current Bloop snapshots. I think this is a bit more positive and a bit more to the point.",
        "createdAt" : "2020-05-04T17:06:35Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "189eaf3f-2902-4fff-ae69-31c610ff33b5",
        "parentId" : "8a128179-4842-4396-bf83-260cacd9c1b4",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Thanks, I applied these changes.",
        "createdAt" : "2020-05-04T17:43:16Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the\n+Dotty compiler, which will become the new Scala 3. This effort included\n+contributions to Metals, Bloop as well as to Dotty. Thanks to a great help from\n+the Dotty compiler team, we now have an option to generate semanticDB files used\n+for our internal indexes, which allowed some features to work without any\n+changes to the core code. It is also important to mention that without\n+[jvican](https://github.com/jvican) and his Bloop project, which already\n+supports Scala 3, all this would have taken a much longer time.\n+\n+That said, there are some issues that are lacking in the Scala 3 support that\n+are available for 2.x versions. Most notably, we are still missing all of the\n+more advanced completions, filtering and sorting of completion items or auto\n+imports. There are also some possible issues connected to optional braces and\n+top level methods features. In the upcoming months we are planning to address\n+most of those issues and implement the lacking features.\n+\n+You can find missing features in the\n+[feature requests repository](https://github.com/scalameta/metals-feature-requests/issues?q=is%3Aissue+is%3Aopen+label%3Ascala3)\n+and currently known bugs in the\n+[main Metals repo.](https://github.com/scalameta/metals/issues?q=is%3Aissue+is%3Aopen+label%3A%22Scala+3%22)\n+\n+The first supported versions will be `0.23.0` and `0.24.0-RC1`, which are the\n+latest stable and latests release candidate respectably. We plan to always\n+support such two versions until there is a more stable release cycle for\n+Scala 3.\n+\n+Please do report any issues you encounter, especially connected to some new\n+Scala 3 features, which will be an immense help to the team.\n+\n+## Improvements related to Bloop/Metals integration\n+\n+There has been multiple reported issues in the last weeks about hanging\n+compilation, which could make the Metals workspace hard to use. Our top priority\n+is currently figuring out all the possible issues both in Metals as well in\n+Bloop. Thanks to some fixes done by [jvican](https://github.com/jvican) we are\n+hopeful that some of the issues might become less frequent. Those fixes are\n+available in the current Bloop snapshots and in the version included in Metals"
  },
  {
    "id" : "11d314bc-f12b-4711-beda-5e499c6ecee8",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "97664520-51d7-49f7-8438-6bee9a9df933",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- Getting a thread dump of the Bloop process\r\n```",
        "createdAt" : "2020-05-04T17:07:08Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the\n+Dotty compiler, which will become the new Scala 3. This effort included\n+contributions to Metals, Bloop as well as to Dotty. Thanks to a great help from\n+the Dotty compiler team, we now have an option to generate semanticDB files used\n+for our internal indexes, which allowed some features to work without any\n+changes to the core code. It is also important to mention that without\n+[jvican](https://github.com/jvican) and his Bloop project, which already\n+supports Scala 3, all this would have taken a much longer time.\n+\n+That said, there are some issues that are lacking in the Scala 3 support that\n+are available for 2.x versions. Most notably, we are still missing all of the\n+more advanced completions, filtering and sorting of completion items or auto\n+imports. There are also some possible issues connected to optional braces and\n+top level methods features. In the upcoming months we are planning to address\n+most of those issues and implement the lacking features.\n+\n+You can find missing features in the\n+[feature requests repository](https://github.com/scalameta/metals-feature-requests/issues?q=is%3Aissue+is%3Aopen+label%3Ascala3)\n+and currently known bugs in the\n+[main Metals repo.](https://github.com/scalameta/metals/issues?q=is%3Aissue+is%3Aopen+label%3A%22Scala+3%22)\n+\n+The first supported versions will be `0.23.0` and `0.24.0-RC1`, which are the\n+latest stable and latests release candidate respectably. We plan to always\n+support such two versions until there is a more stable release cycle for\n+Scala 3.\n+\n+Please do report any issues you encounter, especially connected to some new\n+Scala 3 features, which will be an immense help to the team.\n+\n+## Improvements related to Bloop/Metals integration\n+\n+There has been multiple reported issues in the last weeks about hanging\n+compilation, which could make the Metals workspace hard to use. Our top priority\n+is currently figuring out all the possible issues both in Metals as well in\n+Bloop. Thanks to some fixes done by [jvican](https://github.com/jvican) we are\n+hopeful that some of the issues might become less frequent. Those fixes are\n+available in the current Bloop snapshots and in the version included in Metals\n+\n+We also reworked the Metals tree view to highlight some commands that a user can\n+use to fix their workspace as well as added a new command to recompile workspace\n+from scratch:\n+\n+![reworked-tree-view](https://i.imgur.com/PERfNqt.png)\n+\n+`Clean compile workspace` might be needed in case of broken Zinc caches and\n+`Restart Bloop server` should help with the cases where deduplication of\n+compilation would hang. Do not hesitate to report any possible issues and if\n+possible there are a number of additional diagnostics that can be done before\n+reporting an issue:\n+\n+- getting a thread dump of Bloop process"
  },
  {
    "id" : "78f6690a-f513-4f7f-986e-2f82008f4bbc",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "b21403c9-a1d8-4d00-adff-ab08eebc7570",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- Running verbose compilation via the CLI:\r\n```",
        "createdAt" : "2020-05-04T17:07:39Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the\n+Dotty compiler, which will become the new Scala 3. This effort included\n+contributions to Metals, Bloop as well as to Dotty. Thanks to a great help from\n+the Dotty compiler team, we now have an option to generate semanticDB files used\n+for our internal indexes, which allowed some features to work without any\n+changes to the core code. It is also important to mention that without\n+[jvican](https://github.com/jvican) and his Bloop project, which already\n+supports Scala 3, all this would have taken a much longer time.\n+\n+That said, there are some issues that are lacking in the Scala 3 support that\n+are available for 2.x versions. Most notably, we are still missing all of the\n+more advanced completions, filtering and sorting of completion items or auto\n+imports. There are also some possible issues connected to optional braces and\n+top level methods features. In the upcoming months we are planning to address\n+most of those issues and implement the lacking features.\n+\n+You can find missing features in the\n+[feature requests repository](https://github.com/scalameta/metals-feature-requests/issues?q=is%3Aissue+is%3Aopen+label%3Ascala3)\n+and currently known bugs in the\n+[main Metals repo.](https://github.com/scalameta/metals/issues?q=is%3Aissue+is%3Aopen+label%3A%22Scala+3%22)\n+\n+The first supported versions will be `0.23.0` and `0.24.0-RC1`, which are the\n+latest stable and latests release candidate respectably. We plan to always\n+support such two versions until there is a more stable release cycle for\n+Scala 3.\n+\n+Please do report any issues you encounter, especially connected to some new\n+Scala 3 features, which will be an immense help to the team.\n+\n+## Improvements related to Bloop/Metals integration\n+\n+There has been multiple reported issues in the last weeks about hanging\n+compilation, which could make the Metals workspace hard to use. Our top priority\n+is currently figuring out all the possible issues both in Metals as well in\n+Bloop. Thanks to some fixes done by [jvican](https://github.com/jvican) we are\n+hopeful that some of the issues might become less frequent. Those fixes are\n+available in the current Bloop snapshots and in the version included in Metals\n+\n+We also reworked the Metals tree view to highlight some commands that a user can\n+use to fix their workspace as well as added a new command to recompile workspace\n+from scratch:\n+\n+![reworked-tree-view](https://i.imgur.com/PERfNqt.png)\n+\n+`Clean compile workspace` might be needed in case of broken Zinc caches and\n+`Restart Bloop server` should help with the cases where deduplication of\n+compilation would hang. Do not hesitate to report any possible issues and if\n+possible there are a number of additional diagnostics that can be done before\n+reporting an issue:\n+\n+- getting a thread dump of Bloop process\n+- running verbose compilation via the CLI:"
  },
  {
    "id" : "4a2c470b-33be-4fca-a107-62d08bffecfd",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "b9ca712d-0ffe-4514-9af5-ba538dc6409d",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- (Advanced) attaching a profiler such as YourKit to discover exceptions being\r\n```",
        "createdAt" : "2020-05-04T17:08:05Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the\n+Dotty compiler, which will become the new Scala 3. This effort included\n+contributions to Metals, Bloop as well as to Dotty. Thanks to a great help from\n+the Dotty compiler team, we now have an option to generate semanticDB files used\n+for our internal indexes, which allowed some features to work without any\n+changes to the core code. It is also important to mention that without\n+[jvican](https://github.com/jvican) and his Bloop project, which already\n+supports Scala 3, all this would have taken a much longer time.\n+\n+That said, there are some issues that are lacking in the Scala 3 support that\n+are available for 2.x versions. Most notably, we are still missing all of the\n+more advanced completions, filtering and sorting of completion items or auto\n+imports. There are also some possible issues connected to optional braces and\n+top level methods features. In the upcoming months we are planning to address\n+most of those issues and implement the lacking features.\n+\n+You can find missing features in the\n+[feature requests repository](https://github.com/scalameta/metals-feature-requests/issues?q=is%3Aissue+is%3Aopen+label%3Ascala3)\n+and currently known bugs in the\n+[main Metals repo.](https://github.com/scalameta/metals/issues?q=is%3Aissue+is%3Aopen+label%3A%22Scala+3%22)\n+\n+The first supported versions will be `0.23.0` and `0.24.0-RC1`, which are the\n+latest stable and latests release candidate respectably. We plan to always\n+support such two versions until there is a more stable release cycle for\n+Scala 3.\n+\n+Please do report any issues you encounter, especially connected to some new\n+Scala 3 features, which will be an immense help to the team.\n+\n+## Improvements related to Bloop/Metals integration\n+\n+There has been multiple reported issues in the last weeks about hanging\n+compilation, which could make the Metals workspace hard to use. Our top priority\n+is currently figuring out all the possible issues both in Metals as well in\n+Bloop. Thanks to some fixes done by [jvican](https://github.com/jvican) we are\n+hopeful that some of the issues might become less frequent. Those fixes are\n+available in the current Bloop snapshots and in the version included in Metals\n+\n+We also reworked the Metals tree view to highlight some commands that a user can\n+use to fix their workspace as well as added a new command to recompile workspace\n+from scratch:\n+\n+![reworked-tree-view](https://i.imgur.com/PERfNqt.png)\n+\n+`Clean compile workspace` might be needed in case of broken Zinc caches and\n+`Restart Bloop server` should help with the cases where deduplication of\n+compilation would hang. Do not hesitate to report any possible issues and if\n+possible there are a number of additional diagnostics that can be done before\n+reporting an issue:\n+\n+- getting a thread dump of Bloop process\n+- running verbose compilation via the CLI:\n+  `coursier launch ch.epfl.scala:<bloop_version> -- compile --verbose <project_name>`\n+- (advanced) attaching profiler such as YourKit to discover exceptions being"
  },
  {
    "id" : "82af2844-3307-43e3-a7e4-73ab5b6df231",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "05cdc818-402f-4271-a7f2-72300bac0a96",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I think you cut off in the middle of the sentence here.",
        "createdAt" : "2020-05-04T17:08:24Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the\n+Dotty compiler, which will become the new Scala 3. This effort included\n+contributions to Metals, Bloop as well as to Dotty. Thanks to a great help from\n+the Dotty compiler team, we now have an option to generate semanticDB files used\n+for our internal indexes, which allowed some features to work without any\n+changes to the core code. It is also important to mention that without\n+[jvican](https://github.com/jvican) and his Bloop project, which already\n+supports Scala 3, all this would have taken a much longer time.\n+\n+That said, there are some issues that are lacking in the Scala 3 support that\n+are available for 2.x versions. Most notably, we are still missing all of the\n+more advanced completions, filtering and sorting of completion items or auto\n+imports. There are also some possible issues connected to optional braces and\n+top level methods features. In the upcoming months we are planning to address\n+most of those issues and implement the lacking features.\n+\n+You can find missing features in the\n+[feature requests repository](https://github.com/scalameta/metals-feature-requests/issues?q=is%3Aissue+is%3Aopen+label%3Ascala3)\n+and currently known bugs in the\n+[main Metals repo.](https://github.com/scalameta/metals/issues?q=is%3Aissue+is%3Aopen+label%3A%22Scala+3%22)\n+\n+The first supported versions will be `0.23.0` and `0.24.0-RC1`, which are the\n+latest stable and latests release candidate respectably. We plan to always\n+support such two versions until there is a more stable release cycle for\n+Scala 3.\n+\n+Please do report any issues you encounter, especially connected to some new\n+Scala 3 features, which will be an immense help to the team.\n+\n+## Improvements related to Bloop/Metals integration\n+\n+There has been multiple reported issues in the last weeks about hanging\n+compilation, which could make the Metals workspace hard to use. Our top priority\n+is currently figuring out all the possible issues both in Metals as well in\n+Bloop. Thanks to some fixes done by [jvican](https://github.com/jvican) we are\n+hopeful that some of the issues might become less frequent. Those fixes are\n+available in the current Bloop snapshots and in the version included in Metals\n+\n+We also reworked the Metals tree view to highlight some commands that a user can\n+use to fix their workspace as well as added a new command to recompile workspace\n+from scratch:\n+\n+![reworked-tree-view](https://i.imgur.com/PERfNqt.png)\n+\n+`Clean compile workspace` might be needed in case of broken Zinc caches and\n+`Restart Bloop server` should help with the cases where deduplication of\n+compilation would hang. Do not hesitate to report any possible issues and if\n+possible there are a number of additional diagnostics that can be done before\n+reporting an issue:\n+\n+- getting a thread dump of Bloop process\n+- running verbose compilation via the CLI:\n+  `coursier launch ch.epfl.scala:<bloop_version> -- compile --verbose <project_name>`\n+- (advanced) attaching profiler such as YourKit to discover exceptions being\n+  thrown by the Bloop server. This will require"
  },
  {
    "id" : "37c6c475-a566-44a9-8d31-cd17caad5df2",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "8b462794-70ac-4f43-841e-22015a92f938",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Tbh I know this is extremely helpful to have for an issue, but I'm feeling a bit like these release notes are starting to sway pretty heavy on the tech side rather than an overview of the features and functionality this release has to offer. Again, I totally think we should include some of the technical improvements, but I'm not sure how I feel about telling users to \"Give us a thread dump of the Bloop process\" here. Imagine a person new to Scala just getting started with Metals reading over these release notes? Thoughts?",
        "createdAt" : "2020-05-04T17:11:20Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "538d6e8e-3964-4759-b9f7-c4b507a748b4",
        "parentId" : "8b462794-70ac-4f43-841e-22015a92f938",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Maybe I went over the board :sweat_smile: . I will reduce it to \"please report an issue\". We can guide the user later. Though it would be extremely useful have that reported right from the bat, I spent loads of time on digging and didn't manage to get anywhere. However, I agree it might be too much.\r\n\r\n",
        "createdAt" : "2020-05-04T17:22:02Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ee4c7976-2296-4308-ad18-dae252ee433a",
        "parentId" : "8b462794-70ac-4f43-841e-22015a92f938",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Changed the section a bit and now it's just:\r\n`Even if those commands help, do not hesitate to report any issues. We are also\r\nmonitoring the situation ourselves and investigating all problems encountered.`",
        "createdAt" : "2020-05-04T17:44:01Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6684b991-0780-4603-88b6-fd074a0bbdfe",
        "parentId" : "8b462794-70ac-4f43-841e-22015a92f938",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Yea I agree it's important. Maybe we should re-work the issue template to say that if they are dealing with this specific type of issue, these are the things that would be helpful.",
        "createdAt" : "2020-05-04T18:40:10Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c0dcf30a-5de4-4aed-805b-107ed642c018",
        "parentId" : "8b462794-70ac-4f43-841e-22015a92f938",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Maybe it will not be necessary. I haven't noticed the issue since Bloop updated, so here's hoping! :crossed_fingers: ",
        "createdAt" : "2020-05-04T18:47:04Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the\n+Dotty compiler, which will become the new Scala 3. This effort included\n+contributions to Metals, Bloop as well as to Dotty. Thanks to a great help from\n+the Dotty compiler team, we now have an option to generate semanticDB files used\n+for our internal indexes, which allowed some features to work without any\n+changes to the core code. It is also important to mention that without\n+[jvican](https://github.com/jvican) and his Bloop project, which already\n+supports Scala 3, all this would have taken a much longer time.\n+\n+That said, there are some issues that are lacking in the Scala 3 support that\n+are available for 2.x versions. Most notably, we are still missing all of the\n+more advanced completions, filtering and sorting of completion items or auto\n+imports. There are also some possible issues connected to optional braces and\n+top level methods features. In the upcoming months we are planning to address\n+most of those issues and implement the lacking features.\n+\n+You can find missing features in the\n+[feature requests repository](https://github.com/scalameta/metals-feature-requests/issues?q=is%3Aissue+is%3Aopen+label%3Ascala3)\n+and currently known bugs in the\n+[main Metals repo.](https://github.com/scalameta/metals/issues?q=is%3Aissue+is%3Aopen+label%3A%22Scala+3%22)\n+\n+The first supported versions will be `0.23.0` and `0.24.0-RC1`, which are the\n+latest stable and latests release candidate respectably. We plan to always\n+support such two versions until there is a more stable release cycle for\n+Scala 3.\n+\n+Please do report any issues you encounter, especially connected to some new\n+Scala 3 features, which will be an immense help to the team.\n+\n+## Improvements related to Bloop/Metals integration\n+\n+There has been multiple reported issues in the last weeks about hanging\n+compilation, which could make the Metals workspace hard to use. Our top priority\n+is currently figuring out all the possible issues both in Metals as well in\n+Bloop. Thanks to some fixes done by [jvican](https://github.com/jvican) we are\n+hopeful that some of the issues might become less frequent. Those fixes are\n+available in the current Bloop snapshots and in the version included in Metals\n+\n+We also reworked the Metals tree view to highlight some commands that a user can\n+use to fix their workspace as well as added a new command to recompile workspace\n+from scratch:\n+\n+![reworked-tree-view](https://i.imgur.com/PERfNqt.png)\n+\n+`Clean compile workspace` might be needed in case of broken Zinc caches and\n+`Restart Bloop server` should help with the cases where deduplication of\n+compilation would hang. Do not hesitate to report any possible issues and if\n+possible there are a number of additional diagnostics that can be done before\n+reporting an issue:"
  },
  {
    "id" : "4f5d7516-c93b-4305-8119-23c8f02f31cb",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "1ef7f002-9051-4fde-9c1e-2da33ee3a851",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nan engineer from the Scala Center, who already contributed a number of features and\r\n```",
        "createdAt" : "2020-05-04T17:11:53Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the\n+Dotty compiler, which will become the new Scala 3. This effort included\n+contributions to Metals, Bloop as well as to Dotty. Thanks to a great help from\n+the Dotty compiler team, we now have an option to generate semanticDB files used\n+for our internal indexes, which allowed some features to work without any\n+changes to the core code. It is also important to mention that without\n+[jvican](https://github.com/jvican) and his Bloop project, which already\n+supports Scala 3, all this would have taken a much longer time.\n+\n+That said, there are some issues that are lacking in the Scala 3 support that\n+are available for 2.x versions. Most notably, we are still missing all of the\n+more advanced completions, filtering and sorting of completion items or auto\n+imports. There are also some possible issues connected to optional braces and\n+top level methods features. In the upcoming months we are planning to address\n+most of those issues and implement the lacking features.\n+\n+You can find missing features in the\n+[feature requests repository](https://github.com/scalameta/metals-feature-requests/issues?q=is%3Aissue+is%3Aopen+label%3Ascala3)\n+and currently known bugs in the\n+[main Metals repo.](https://github.com/scalameta/metals/issues?q=is%3Aissue+is%3Aopen+label%3A%22Scala+3%22)\n+\n+The first supported versions will be `0.23.0` and `0.24.0-RC1`, which are the\n+latest stable and latests release candidate respectably. We plan to always\n+support such two versions until there is a more stable release cycle for\n+Scala 3.\n+\n+Please do report any issues you encounter, especially connected to some new\n+Scala 3 features, which will be an immense help to the team.\n+\n+## Improvements related to Bloop/Metals integration\n+\n+There has been multiple reported issues in the last weeks about hanging\n+compilation, which could make the Metals workspace hard to use. Our top priority\n+is currently figuring out all the possible issues both in Metals as well in\n+Bloop. Thanks to some fixes done by [jvican](https://github.com/jvican) we are\n+hopeful that some of the issues might become less frequent. Those fixes are\n+available in the current Bloop snapshots and in the version included in Metals\n+\n+We also reworked the Metals tree view to highlight some commands that a user can\n+use to fix their workspace as well as added a new command to recompile workspace\n+from scratch:\n+\n+![reworked-tree-view](https://i.imgur.com/PERfNqt.png)\n+\n+`Clean compile workspace` might be needed in case of broken Zinc caches and\n+`Restart Bloop server` should help with the cases where deduplication of\n+compilation would hang. Do not hesitate to report any possible issues and if\n+possible there are a number of additional diagnostics that can be done before\n+reporting an issue:\n+\n+- getting a thread dump of Bloop process\n+- running verbose compilation via the CLI:\n+  `coursier launch ch.epfl.scala:<bloop_version> -- compile --verbose <project_name>`\n+- (advanced) attaching profiler such as YourKit to discover exceptions being\n+  thrown by the Bloop server. This will require\n+\n+We are also monitoring the situation ourselves and investigating all problems\n+encountered.\n+\n+## Automatically add '+' on newline inside a string\n+\n+The Metals team was recently joined by [mlachkar](https://github.com/mlachkar),\n+an engineer from Scala Center, who already contributed a number of features and"
  },
  {
    "id" : "03941725-c12a-4924-9b09-3b4a8844a12e",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "0414d5c9-3ca2-4859-968d-cb092ba42d12",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nbug fixes to the Project. Thanks to her, we can now easily enter a newline\r\n```",
        "createdAt" : "2020-05-04T17:12:13Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the\n+Dotty compiler, which will become the new Scala 3. This effort included\n+contributions to Metals, Bloop as well as to Dotty. Thanks to a great help from\n+the Dotty compiler team, we now have an option to generate semanticDB files used\n+for our internal indexes, which allowed some features to work without any\n+changes to the core code. It is also important to mention that without\n+[jvican](https://github.com/jvican) and his Bloop project, which already\n+supports Scala 3, all this would have taken a much longer time.\n+\n+That said, there are some issues that are lacking in the Scala 3 support that\n+are available for 2.x versions. Most notably, we are still missing all of the\n+more advanced completions, filtering and sorting of completion items or auto\n+imports. There are also some possible issues connected to optional braces and\n+top level methods features. In the upcoming months we are planning to address\n+most of those issues and implement the lacking features.\n+\n+You can find missing features in the\n+[feature requests repository](https://github.com/scalameta/metals-feature-requests/issues?q=is%3Aissue+is%3Aopen+label%3Ascala3)\n+and currently known bugs in the\n+[main Metals repo.](https://github.com/scalameta/metals/issues?q=is%3Aissue+is%3Aopen+label%3A%22Scala+3%22)\n+\n+The first supported versions will be `0.23.0` and `0.24.0-RC1`, which are the\n+latest stable and latests release candidate respectably. We plan to always\n+support such two versions until there is a more stable release cycle for\n+Scala 3.\n+\n+Please do report any issues you encounter, especially connected to some new\n+Scala 3 features, which will be an immense help to the team.\n+\n+## Improvements related to Bloop/Metals integration\n+\n+There has been multiple reported issues in the last weeks about hanging\n+compilation, which could make the Metals workspace hard to use. Our top priority\n+is currently figuring out all the possible issues both in Metals as well in\n+Bloop. Thanks to some fixes done by [jvican](https://github.com/jvican) we are\n+hopeful that some of the issues might become less frequent. Those fixes are\n+available in the current Bloop snapshots and in the version included in Metals\n+\n+We also reworked the Metals tree view to highlight some commands that a user can\n+use to fix their workspace as well as added a new command to recompile workspace\n+from scratch:\n+\n+![reworked-tree-view](https://i.imgur.com/PERfNqt.png)\n+\n+`Clean compile workspace` might be needed in case of broken Zinc caches and\n+`Restart Bloop server` should help with the cases where deduplication of\n+compilation would hang. Do not hesitate to report any possible issues and if\n+possible there are a number of additional diagnostics that can be done before\n+reporting an issue:\n+\n+- getting a thread dump of Bloop process\n+- running verbose compilation via the CLI:\n+  `coursier launch ch.epfl.scala:<bloop_version> -- compile --verbose <project_name>`\n+- (advanced) attaching profiler such as YourKit to discover exceptions being\n+  thrown by the Bloop server. This will require\n+\n+We are also monitoring the situation ourselves and investigating all problems\n+encountered.\n+\n+## Automatically add '+' on newline inside a string\n+\n+The Metals team was recently joined by [mlachkar](https://github.com/mlachkar),\n+an engineer from Scala Center, who already contributed a number of features and\n+bug fixes to the Project. Thanks to her, we now can easily enter a newline"
  },
  {
    "id" : "d0f109e3-b1c2-4e04-81c3-723e64e8a88e",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "affc46c3-b092-4e75-9c20-32f35c6cb5c6",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nthe ability to import everything in bulk for every unambiguous import available.\r\n```",
        "createdAt" : "2020-05-04T17:12:33Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the\n+Dotty compiler, which will become the new Scala 3. This effort included\n+contributions to Metals, Bloop as well as to Dotty. Thanks to a great help from\n+the Dotty compiler team, we now have an option to generate semanticDB files used\n+for our internal indexes, which allowed some features to work without any\n+changes to the core code. It is also important to mention that without\n+[jvican](https://github.com/jvican) and his Bloop project, which already\n+supports Scala 3, all this would have taken a much longer time.\n+\n+That said, there are some issues that are lacking in the Scala 3 support that\n+are available for 2.x versions. Most notably, we are still missing all of the\n+more advanced completions, filtering and sorting of completion items or auto\n+imports. There are also some possible issues connected to optional braces and\n+top level methods features. In the upcoming months we are planning to address\n+most of those issues and implement the lacking features.\n+\n+You can find missing features in the\n+[feature requests repository](https://github.com/scalameta/metals-feature-requests/issues?q=is%3Aissue+is%3Aopen+label%3Ascala3)\n+and currently known bugs in the\n+[main Metals repo.](https://github.com/scalameta/metals/issues?q=is%3Aissue+is%3Aopen+label%3A%22Scala+3%22)\n+\n+The first supported versions will be `0.23.0` and `0.24.0-RC1`, which are the\n+latest stable and latests release candidate respectably. We plan to always\n+support such two versions until there is a more stable release cycle for\n+Scala 3.\n+\n+Please do report any issues you encounter, especially connected to some new\n+Scala 3 features, which will be an immense help to the team.\n+\n+## Improvements related to Bloop/Metals integration\n+\n+There has been multiple reported issues in the last weeks about hanging\n+compilation, which could make the Metals workspace hard to use. Our top priority\n+is currently figuring out all the possible issues both in Metals as well in\n+Bloop. Thanks to some fixes done by [jvican](https://github.com/jvican) we are\n+hopeful that some of the issues might become less frequent. Those fixes are\n+available in the current Bloop snapshots and in the version included in Metals\n+\n+We also reworked the Metals tree view to highlight some commands that a user can\n+use to fix their workspace as well as added a new command to recompile workspace\n+from scratch:\n+\n+![reworked-tree-view](https://i.imgur.com/PERfNqt.png)\n+\n+`Clean compile workspace` might be needed in case of broken Zinc caches and\n+`Restart Bloop server` should help with the cases where deduplication of\n+compilation would hang. Do not hesitate to report any possible issues and if\n+possible there are a number of additional diagnostics that can be done before\n+reporting an issue:\n+\n+- getting a thread dump of Bloop process\n+- running verbose compilation via the CLI:\n+  `coursier launch ch.epfl.scala:<bloop_version> -- compile --verbose <project_name>`\n+- (advanced) attaching profiler such as YourKit to discover exceptions being\n+  thrown by the Bloop server. This will require\n+\n+We are also monitoring the situation ourselves and investigating all problems\n+encountered.\n+\n+## Automatically add '+' on newline inside a string\n+\n+The Metals team was recently joined by [mlachkar](https://github.com/mlachkar),\n+an engineer from Scala Center, who already contributed a number of features and\n+bug fixes to the Project. Thanks to her, we now can easily enter a newline\n+inside a single line string and that string will be correctly split with an\n+additional `+`.\n+\n+![split-line](https://i.imgur.com/uhF0MOx.gif)\n+\n+## Code action to import all missing symbols\n+\n+Previously, it was only available to import one symbol at a time in case of\n+missing imports. Thanks to [colineto](https://github.com/colineto) we now have\n+an ability to import everything in bulk for every unambiguous import available."
  },
  {
    "id" : "88aa5758-e80d-4923-bb43-8fcd8d9fab23",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "057c4648-c1c2-4692-880f-85d48a4e1582",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Capitalize the first letter of these",
        "createdAt" : "2020-05-04T17:13:12Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d504d40e-fe89-4967-a54b-12e569ea9602",
        "parentId" : "057c4648-c1c2-4692-880f-85d48a4e1582",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "You could also maybe add \"Fixed auto-import issue in package objects\"",
        "createdAt" : "2020-05-04T17:13:38Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "58179d8d-2bea-4493-a30f-fff83ce24232",
        "parentId" : "057c4648-c1c2-4692-880f-85d48a4e1582",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Forgot about that one! I remembered to add to PR list, but then my mind wandered.",
        "createdAt" : "2020-05-04T17:18:08Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of\n+useful improvements.\n+\n+<table>\n+<tbody>\n+  <tr>\n+    <td>Commits since last release</td>\n+    <td align=\"center\">140</td>\n+  </tr>\n+  <tr>\n+    <td>Merged PRs</td>\n+    <td align=\"center\">45</td>\n+  </tr>\n+    <tr>\n+    <td>Contributors</td>\n+    <td align=\"center\">14</td>\n+  </tr>\n+  <tr>\n+    <td>Closed issues</td>\n+    <td align=\"center\">9</td>\n+  </tr>\n+  <tr>\n+    <td>New features</td>\n+    <td align=\"center\">3</td>\n+  </tr>\n+</tbody>\n+</table>\n+\n+For full details: https://github.com/scalameta/metals/milestone/13?closed=1\n+\n+Metals is a language server for Scala that works with VS Code, Vim, Emacs,\n+Sublime Text, Atom and Eclipse. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+with the help from [Lunatech](https://lunatech.com) along with contributors from\n+the community.\n+\n+## TL;DR\n+\n+Check out [https://scalameta.org/metals/](https://scalameta.org/metals/), and\n+give Metals a try!\n+\n+- Scala 2.13.2 and basic Scala 3 support\n+- improvements to Bloop integration\n+- automatically add '+' on newline inside a string\n+- code action \"Import all missing symbols\"\n+\n+## Basic Scala 3 support\n+\n+For a couple of last months we have been working on making Metals work with the\n+Dotty compiler, which will become the new Scala 3. This effort included\n+contributions to Metals, Bloop as well as to Dotty. Thanks to a great help from\n+the Dotty compiler team, we now have an option to generate semanticDB files used\n+for our internal indexes, which allowed some features to work without any\n+changes to the core code. It is also important to mention that without\n+[jvican](https://github.com/jvican) and his Bloop project, which already\n+supports Scala 3, all this would have taken a much longer time.\n+\n+That said, there are some issues that are lacking in the Scala 3 support that\n+are available for 2.x versions. Most notably, we are still missing all of the\n+more advanced completions, filtering and sorting of completion items or auto\n+imports. There are also some possible issues connected to optional braces and\n+top level methods features. In the upcoming months we are planning to address\n+most of those issues and implement the lacking features.\n+\n+You can find missing features in the\n+[feature requests repository](https://github.com/scalameta/metals-feature-requests/issues?q=is%3Aissue+is%3Aopen+label%3Ascala3)\n+and currently known bugs in the\n+[main Metals repo.](https://github.com/scalameta/metals/issues?q=is%3Aissue+is%3Aopen+label%3A%22Scala+3%22)\n+\n+The first supported versions will be `0.23.0` and `0.24.0-RC1`, which are the\n+latest stable and latests release candidate respectably. We plan to always\n+support such two versions until there is a more stable release cycle for\n+Scala 3.\n+\n+Please do report any issues you encounter, especially connected to some new\n+Scala 3 features, which will be an immense help to the team.\n+\n+## Improvements related to Bloop/Metals integration\n+\n+There has been multiple reported issues in the last weeks about hanging\n+compilation, which could make the Metals workspace hard to use. Our top priority\n+is currently figuring out all the possible issues both in Metals as well in\n+Bloop. Thanks to some fixes done by [jvican](https://github.com/jvican) we are\n+hopeful that some of the issues might become less frequent. Those fixes are\n+available in the current Bloop snapshots and in the version included in Metals\n+\n+We also reworked the Metals tree view to highlight some commands that a user can\n+use to fix their workspace as well as added a new command to recompile workspace\n+from scratch:\n+\n+![reworked-tree-view](https://i.imgur.com/PERfNqt.png)\n+\n+`Clean compile workspace` might be needed in case of broken Zinc caches and\n+`Restart Bloop server` should help with the cases where deduplication of\n+compilation would hang. Do not hesitate to report any possible issues and if\n+possible there are a number of additional diagnostics that can be done before\n+reporting an issue:\n+\n+- getting a thread dump of Bloop process\n+- running verbose compilation via the CLI:\n+  `coursier launch ch.epfl.scala:<bloop_version> -- compile --verbose <project_name>`\n+- (advanced) attaching profiler such as YourKit to discover exceptions being\n+  thrown by the Bloop server. This will require\n+\n+We are also monitoring the situation ourselves and investigating all problems\n+encountered.\n+\n+## Automatically add '+' on newline inside a string\n+\n+The Metals team was recently joined by [mlachkar](https://github.com/mlachkar),\n+an engineer from Scala Center, who already contributed a number of features and\n+bug fixes to the Project. Thanks to her, we now can easily enter a newline\n+inside a single line string and that string will be correctly split with an\n+additional `+`.\n+\n+![split-line](https://i.imgur.com/uhF0MOx.gif)\n+\n+## Code action to import all missing symbols\n+\n+Previously, it was only available to import one symbol at a time in case of\n+missing imports. Thanks to [colineto](https://github.com/colineto) we now have\n+an ability to import everything in bulk for every unambiguous import available.\n+Unambiguous in this case meaning that there is only one possible import to\n+choose from.\n+\n+![import-all](https://i.imgur.com/mmzgJs7.gif)\n+\n+## Miscellaneous improvements\n+\n+- added an option to ignore .scalafmt.conf creation message\n+- fixed hanging while debugging if workspace had errors\n+- fixed issue with folding in non 2.12.11 workspaces\n+- turn off \"Go to parent\" code lenses by default\n+- fixed false parsing errors in 2.13.x workspaces\n+- added date string to metals logs\n+- fixed issue with additional src directories being created automatically\n+- fixed \"Go to implementation\" to work with local aliases"
  },
  {
    "id" : "3919face-44db-451e-9f70-41b33a85c56a",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "c14f0ae5-c3de-44f2-9fe7-939be8bdc647",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "What is version 2.14.0-RC1?",
        "createdAt" : "2020-05-04T17:33:42Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bbf3896f-2966-4900-8c71-8806e75806a4",
        "parentId" : "c14f0ae5-c3de-44f2-9fe7-939be8bdc647",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : ":fearful: ",
        "createdAt" : "2020-05-04T18:10:41Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c63e1156-608c-4ead-bd92-9263f7bed54e",
        "parentId" : "c14f0ae5-c3de-44f2-9fe7-939be8bdc647",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Too many 2s and 3s :sweat_smile:  Thanks for noticing!  ",
        "createdAt" : "2020-05-04T18:25:46Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dcbd0078-bb5d-43e3-823b-4ca70f9b304d",
        "parentId" : "c14f0ae5-c3de-44f2-9fe7-939be8bdc647",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I was concerned I had missed some important announcement!",
        "createdAt" : "2020-05-04T22:20:40Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,312 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0 codename \"Lithium\", which\n+main focus is introducing the support for Scala 3 starting with the versions\n+2.13.0 and 2.14.0-RC1. We also added support for Scala 2.13.2 and a number of"
  },
  {
    "id" : "040799e5-2f4a-4632-9c09-51c8fd2506a1",
    "prId" : 1689,
    "comments" : [
      {
        "id" : "0c58d750-1c9d-4bf0-bcdc-e97e9f49dee6",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "What is version 2.14.0-RC1?",
        "createdAt" : "2020-05-04T18:09:24Z",
        "updatedAt" : "2020-05-05T09:42:03Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b6f7ea111cd7a00d6555a87eff4437d00e7528d2",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,306 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.9.0 - Lithium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are happy to announce the release of Metals v0.9.0, codename \"Lithium\", which\n+main focus is introducing support for Scala 3 starting with versions 2.13.0 and\n+2.14.0-RC1. We also added support for Scala 2.13.2 and a number of other useful"
  }
]