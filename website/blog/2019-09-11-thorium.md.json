[
  {
    "id" : "a5c65adf-fb3a-47cf-852d-57a75e773684",
    "prId" : 910,
    "comments" : [
      {
        "id" : "4fd00689-a3b0-4f66-86ae-a85e7090e59c",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "```suggestion\r\nLeveraging the work that went into the previous feature, we were also able to provide\r\n```",
        "createdAt" : "2019-09-11T09:40:03Z",
        "updatedAt" : "2019-09-12T10:41:40Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "38cb82cf27235828b40445822d70c41e6659184c",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,128 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.7.3 - Thorium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.7.3 - codename \"Thorium\" ðŸŽ‰\n+The release includes couple of bug fixes for 0.7.2, which were present in some\n+rare scenarios. We also added a new experimental feature, which we would be\n+happy to get feedback about.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+along with contributors from the community.\n+\n+In this release we merged 10 PRs and closed 6 issues, full details:\n+https://github.com/scalameta/metals/milestone/15?closed=1\n+\n+## TL;DR\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+- add auto-fill option to case classes\n+- deduce values for named parameters completions\n+- multiple fixes after adding support for Scala 2.12.9\n+- fixes for automatic addition of `|` in multiline strings\n+\n+## Add auto-fill option to case classes\n+\n+Whenever we invoke a method and try completions inside the brackets there is an\n+additional option to allow Metals to deduce what should be filled for each\n+parameter.\n+\n+![auto-fill](https://i.imgur.com/8pCiMqE.gif)\n+\n+This algorithm checks if there exists a value in scope with the same type as the\n+parameters' and then works according to the rules below:\n+\n+```\n+1. If there is only one candidate, use it.\n+2. If there is more than one, give user an alternative to choose one of them.\n+3. Otherwise use use \"???\".\n+```\n+\n+This feature also uses the snippets syntax to allow to quickly go over the\n+auto-filled parameters and choose or replace the auto-filled values.\n+\n+## Deduce values for named parameters completions\n+\n+As a side effect of implementing the previous feature, we were able to provide"
  },
  {
    "id" : "e970e756-9863-4d4f-8de9-b24fe4ecbdef",
    "prId" : 910,
    "comments" : [
      {
        "id" : "0d50cf7c-1f77-4be8-9083-0eabca3e347b",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "```suggestion\r\nAfter updating Metals to work with Scala 2.12.9 it turned out that completions and hover\r\n```",
        "createdAt" : "2019-09-11T09:40:45Z",
        "updatedAt" : "2019-09-12T10:41:40Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "38cb82cf27235828b40445822d70c41e6659184c",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,128 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.7.3 - Thorium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.7.3 - codename \"Thorium\" ðŸŽ‰\n+The release includes couple of bug fixes for 0.7.2, which were present in some\n+rare scenarios. We also added a new experimental feature, which we would be\n+happy to get feedback about.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+along with contributors from the community.\n+\n+In this release we merged 10 PRs and closed 6 issues, full details:\n+https://github.com/scalameta/metals/milestone/15?closed=1\n+\n+## TL;DR\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+- add auto-fill option to case classes\n+- deduce values for named parameters completions\n+- multiple fixes after adding support for Scala 2.12.9\n+- fixes for automatic addition of `|` in multiline strings\n+\n+## Add auto-fill option to case classes\n+\n+Whenever we invoke a method and try completions inside the brackets there is an\n+additional option to allow Metals to deduce what should be filled for each\n+parameter.\n+\n+![auto-fill](https://i.imgur.com/8pCiMqE.gif)\n+\n+This algorithm checks if there exists a value in scope with the same type as the\n+parameters' and then works according to the rules below:\n+\n+```\n+1. If there is only one candidate, use it.\n+2. If there is more than one, give user an alternative to choose one of them.\n+3. Otherwise use use \"???\".\n+```\n+\n+This feature also uses the snippets syntax to allow to quickly go over the\n+auto-filled parameters and choose or replace the auto-filled values.\n+\n+## Deduce values for named parameters completions\n+\n+As a side effect of implementing the previous feature, we were able to provide\n+additional support for concrete values in named parameter completions.\n+\n+![deduce](https://i.imgur.com/m11xixy.gif)\n+\n+We generate completion item for each value that fits the type of the parameter.\n+\n+## Multiple fixes after adding support for Scala 2.12.9\n+\n+After updating Metals to work with Scala 2.12.9 it turned out that completions"
  },
  {
    "id" : "86f04e28-f90e-4c2d-a0f4-8f16ae4e20e9",
    "prId" : 910,
    "comments" : [
      {
        "id" : "20d780d5-87dd-437c-a195-4611702a5351",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "```suggestion\r\ndidn't work correctly, due to the presentation compiler crashing in the following\r\n```",
        "createdAt" : "2019-09-11T09:41:02Z",
        "updatedAt" : "2019-09-12T10:41:40Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "38cb82cf27235828b40445822d70c41e6659184c",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,128 @@\n+---\n+author: Tomasz Godzik\n+title: Metals v0.7.3 - Thorium\n+authorURL: https://twitter.com/TomekGodzik\n+authorImageURL: https://github.com/tgodzik.png\n+---\n+\n+We are excited to announce the release of Metals v0.7.3 - codename \"Thorium\" ðŸŽ‰\n+The release includes couple of bug fixes for 0.7.2, which were present in some\n+rare scenarios. We also added a new experimental feature, which we would be\n+happy to get feedback about.\n+\n+Metals is a language server for Scala that works with VS Code, Atom, Vim,\n+Sublime Text and Emacs. Metals is developed at the\n+[Scala Center](https://scala.epfl.ch/) and [VirtusLab](https://virtuslab.com)\n+along with contributors from the community.\n+\n+In this release we merged 10 PRs and closed 6 issues, full details:\n+https://github.com/scalameta/metals/milestone/15?closed=1\n+\n+## TL;DR\n+\n+Check out the website and give Metals a try: https://scalameta.org/metals/\n+\n+- add auto-fill option to case classes\n+- deduce values for named parameters completions\n+- multiple fixes after adding support for Scala 2.12.9\n+- fixes for automatic addition of `|` in multiline strings\n+\n+## Add auto-fill option to case classes\n+\n+Whenever we invoke a method and try completions inside the brackets there is an\n+additional option to allow Metals to deduce what should be filled for each\n+parameter.\n+\n+![auto-fill](https://i.imgur.com/8pCiMqE.gif)\n+\n+This algorithm checks if there exists a value in scope with the same type as the\n+parameters' and then works according to the rules below:\n+\n+```\n+1. If there is only one candidate, use it.\n+2. If there is more than one, give user an alternative to choose one of them.\n+3. Otherwise use use \"???\".\n+```\n+\n+This feature also uses the snippets syntax to allow to quickly go over the\n+auto-filled parameters and choose or replace the auto-filled values.\n+\n+## Deduce values for named parameters completions\n+\n+As a side effect of implementing the previous feature, we were able to provide\n+additional support for concrete values in named parameter completions.\n+\n+![deduce](https://i.imgur.com/m11xixy.gif)\n+\n+We generate completion item for each value that fits the type of the parameter.\n+\n+## Multiple fixes after adding support for Scala 2.12.9\n+\n+After updating Metals to work with Scala 2.12.9 it turned out that completions\n+didn't work correctly and crached the presentation compiler in the following"
  }
]