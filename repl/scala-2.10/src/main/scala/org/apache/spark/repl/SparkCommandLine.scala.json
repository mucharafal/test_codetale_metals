[{
  "comments": [{
    "author": {
      "login": "pwendell"
    },
    "body": "should this be marked as a devloper API also, if it's exposed?\n",
    "commit": "053ca75965f496dca7839e5a3602f2008fa13098",
    "createdAt": "2015-01-15T22:09:29Z",
    "diffHunk": "@@ -23,10 +23,15 @@ import scala.Predef._\n /**\n  * Command class enabling Spark-specific command line options (provided by\n  * <i>org.apache.spark.repl.SparkRunnerSettings</i>).\n+ *\n+ * @example new SparkCommandLine(Nil).settings\n+ *\n+ * @param args The list of command line arguments\n+ * @param settings The underlying settings to associate with this set of\n+ *                 command-line options\n  */\n class SparkCommandLine(args: List[String], override val settings: Settings)"
  }, {
    "author": {
      "login": "chipsenkbeil"
    },
    "body": "Oh, do you use the DeveloperApi for entire classes? Or are you saying that since the purpose I described for _SparkCommandLine_ was to retrieve settings?\n\nI didn't mark _SparkILoop_, _SparkIMain_, _SparkHelper_ (forced to be public due to packaging), _SparkJLineCompletion_, or _SparkCommandLine_ as DeveloperApi on the class level. I was assuming that internal markings of DeveloperApi conveyed that. I can go back and do that if that's the way things are normally done.\n\nOr, I can just add it to _SparkCommandLine_ since it is the only one without any internal DeveloperApi marks.\n",
    "commit": "053ca75965f496dca7839e5a3602f2008fa13098",
    "createdAt": "2015-01-15T22:28:55Z",
    "diffHunk": "@@ -23,10 +23,15 @@ import scala.Predef._\n /**\n  * Command class enabling Spark-specific command line options (provided by\n  * <i>org.apache.spark.repl.SparkRunnerSettings</i>).\n+ *\n+ * @example new SparkCommandLine(Nil).settings\n+ *\n+ * @param args The list of command line arguments\n+ * @param settings The underlying settings to associate with this set of\n+ *                 command-line options\n  */\n class SparkCommandLine(args: List[String], override val settings: Settings)"
  }, {
    "author": {
      "login": "pwendell"
    },
    "body": "Usually out of abundance of caution we mark it on the class level as well, even if everything bytecode-exposed inside of the class is also marked. We tend to err on the side of over communication with this.\n",
    "commit": "053ca75965f496dca7839e5a3602f2008fa13098",
    "createdAt": "2015-01-16T02:00:26Z",
    "diffHunk": "@@ -23,10 +23,15 @@ import scala.Predef._\n /**\n  * Command class enabling Spark-specific command line options (provided by\n  * <i>org.apache.spark.repl.SparkRunnerSettings</i>).\n+ *\n+ * @example new SparkCommandLine(Nil).settings\n+ *\n+ * @param args The list of command line arguments\n+ * @param settings The underlying settings to associate with this set of\n+ *                 command-line options\n  */\n class SparkCommandLine(args: List[String], override val settings: Settings)"
  }],
  "prId": 4034
}]