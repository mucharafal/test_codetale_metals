[{
  "comments": [{
    "author": {
      "login": "davies"
    },
    "body": "Who is using this one? Is this a breaking change?",
    "commit": "3554e33297140a51d554b57fbfce542ed66367df",
    "createdAt": "2017-02-09T00:30:43Z",
    "diffHunk": "@@ -28,15 +28,17 @@ private[repl] object Signaling extends Logging {\n    * when no jobs are currently running.\n    * This makes it possible to interrupt a running shell job by pressing Ctrl+C.\n    */\n-  def cancelOnInterrupt(ctx: SparkContext): Unit = SignalUtils.register(\"INT\") {\n-    if (!ctx.statusTracker.getActiveJobIds().isEmpty) {\n-      logWarning(\"Cancelling all active jobs, this can take a while. \" +\n-        \"Press Ctrl+C again to exit now.\")\n-      ctx.cancelAllJobs()\n-      true\n-    } else {\n-      false\n-    }\n+  def cancelOnInterrupt(): Unit = SignalUtils.register(\"INT\") {",
    "line": 13
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "It's used by REPL to cancel the running job if any.",
    "commit": "3554e33297140a51d554b57fbfce542ed66367df",
    "createdAt": "2017-02-09T00:32:16Z",
    "diffHunk": "@@ -28,15 +28,17 @@ private[repl] object Signaling extends Logging {\n    * when no jobs are currently running.\n    * This makes it possible to interrupt a running shell job by pressing Ctrl+C.\n    */\n-  def cancelOnInterrupt(ctx: SparkContext): Unit = SignalUtils.register(\"INT\") {\n-    if (!ctx.statusTracker.getActiveJobIds().isEmpty) {\n-      logWarning(\"Cancelling all active jobs, this can take a while. \" +\n-        \"Press Ctrl+C again to exit now.\")\n-      ctx.cancelAllJobs()\n-      true\n-    } else {\n-      false\n-    }\n+  def cancelOnInterrupt(): Unit = SignalUtils.register(\"INT\") {",
    "line": 13
  }],
  "prId": 16825
}]