[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "This doesn't need to be overridden. Just define it in the superclass",
    "commit": "7ab264d848f1690c6af316cb9940687d81db360b",
    "createdAt": "2017-08-10T12:17:52Z",
    "diffHunk": "@@ -635,8 +642,9 @@ class SparseVector @Since(\"2.0.0\") (\n     nnz\n   }\n \n-  override def toSparse: SparseVector = {\n-    val nnz = numNonzeros\n+  override def toSparse: SparseVector = toSparse(numNonzeros)"
  }, {
    "author": {
      "login": "mpjlu"
    },
    "body": "If define \r\n`def toSparse: SparseVector = toSparse(numNonzeros)`\r\nin the superclass, when call dv.toSparse (there are this kinds of call in the code), there will be error message:\r\nBoth toSparse in the DenseVector of type (nnz:Int) org.apache.spark.ml.linalg.SparseVector and toSparse in trait Vector of type =>org.apache.spark.ml.linalg.SparseVector match  .\r\nSo we should change the name of toSparse(nnz: Int), maybe toSparseWithSize(nnz: Int).\r\n",
    "commit": "7ab264d848f1690c6af316cb9940687d81db360b",
    "createdAt": "2017-08-11T02:47:14Z",
    "diffHunk": "@@ -635,8 +642,9 @@ class SparseVector @Since(\"2.0.0\") (\n     nnz\n   }\n \n-  override def toSparse: SparseVector = {\n-    val nnz = numNonzeros\n+  override def toSparse: SparseVector = toSparse(numNonzeros)"
  }],
  "prId": 18899
}]