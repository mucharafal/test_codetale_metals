[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "* Make it a `sealed` trait. Otherwise, adding a new method to a trait in the future is a breaking change.\r\n* Could you document why we need this trait? Inline comment, not in ScalaDoc.",
    "commit": "44a955bdbe7f9ef88b69193635e1678668584ea3",
    "createdAt": "2019-07-16T18:00:40Z",
    "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.graph.api\n+\n+import org.apache.spark.sql.DataFrame\n+\n+/**\n+ * Result of a Cypher query.\n+ *\n+ * Wraps a DataFrame that contains the result rows.\n+ *\n+ * @since 3.0.0\n+ */\n+trait CypherResult {"
  }, {
    "author": {
      "login": "s1ck"
    },
    "body": "The main reason we introduced the trait is to allow future additions (e.g. returning graphs in addition to tables).",
    "commit": "44a955bdbe7f9ef88b69193635e1678668584ea3",
    "createdAt": "2019-07-25T11:03:47Z",
    "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.graph.api\n+\n+import org.apache.spark.sql.DataFrame\n+\n+/**\n+ * Result of a Cypher query.\n+ *\n+ * Wraps a DataFrame that contains the result rows.\n+ *\n+ * @since 3.0.0\n+ */\n+trait CypherResult {"
  }, {
    "author": {
      "login": "s1ck"
    },
    "body": "I don't see the point in making it sealed, though. We can change the trait in major versions and deprecate existing methods if required. Implementations need to adapt if they want to support a new major version. What kind of scenario do you imagine?",
    "commit": "44a955bdbe7f9ef88b69193635e1678668584ea3",
    "createdAt": "2019-07-25T11:15:01Z",
    "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.graph.api\n+\n+import org.apache.spark.sql.DataFrame\n+\n+/**\n+ * Result of a Cypher query.\n+ *\n+ * Wraps a DataFrame that contains the result rows.\n+ *\n+ * @since 3.0.0\n+ */\n+trait CypherResult {"
  }],
  "prId": 24851
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "What happens if we add another method but user calls `.df`? Do we expect an exception? I'm thinking about whether `Option[DataFrame]` is a better fit, though it will make it harder to Java/Python.",
    "commit": "44a955bdbe7f9ef88b69193635e1678668584ea3",
    "createdAt": "2019-07-16T18:01:48Z",
    "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.graph.api\n+\n+import org.apache.spark.sql.DataFrame\n+\n+/**\n+ * Result of a Cypher query.\n+ *\n+ * Wraps a DataFrame that contains the result rows.\n+ *\n+ * @since 3.0.0\n+ */\n+trait CypherResult {\n+\n+  /**\n+   * Contains the result rows.\n+   *\n+   * The column names are aligned with the return item names specified within the Cypher query,\n+   * (e.g. `RETURN foo, bar AS baz` results in the columns `foo` and `baz`).\n+   *\n+   * @note Dot characters (i.e. `.`) within return item names are replaced by an underscore (`_`),\n+   *       (e.g. `MATCH (n:Person) RETURN n` results in the columns `n`, `n:Person` and `n_name`).\n+   * @since 3.0.0\n+   */\n+  def df: DataFrame"
  }, {
    "author": {
      "login": "s1ck"
    },
    "body": "We could introduce two methods:\r\n```\r\ngetDf: Option[DataFrame]\r\ndf: DataFrame = getDf.get\r\n```\r\nThe user can call `result.df` if the result is tabular.\r\n\r\nThat's also how we designed it in https://github.com/opencypher/morpheus/blob/master/okapi-api/src/main/scala/org/opencypher/okapi/api/graph/CypherResult.scala#L49-L71",
    "commit": "44a955bdbe7f9ef88b69193635e1678668584ea3",
    "createdAt": "2019-07-25T11:19:14Z",
    "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.graph.api\n+\n+import org.apache.spark.sql.DataFrame\n+\n+/**\n+ * Result of a Cypher query.\n+ *\n+ * Wraps a DataFrame that contains the result rows.\n+ *\n+ * @since 3.0.0\n+ */\n+trait CypherResult {\n+\n+  /**\n+   * Contains the result rows.\n+   *\n+   * The column names are aligned with the return item names specified within the Cypher query,\n+   * (e.g. `RETURN foo, bar AS baz` results in the columns `foo` and `baz`).\n+   *\n+   * @note Dot characters (i.e. `.`) within return item names are replaced by an underscore (`_`),\n+   *       (e.g. `MATCH (n:Person) RETURN n` results in the columns `n`, `n:Person` and `n_name`).\n+   * @since 3.0.0\n+   */\n+  def df: DataFrame"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "```scala\r\n-  def df: DataFrame\r\n+  def df: Dataset[Row]\r\n```",
    "commit": "44a955bdbe7f9ef88b69193635e1678668584ea3",
    "createdAt": "2019-10-11T03:34:17Z",
    "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.graph.api\n+\n+import org.apache.spark.sql.DataFrame\n+\n+/**\n+ * Result of a Cypher query.\n+ *\n+ * Wraps a DataFrame that contains the result rows.\n+ *\n+ * @since 3.0.0\n+ */\n+trait CypherResult {\n+\n+  /**\n+   * Contains the result rows.\n+   *\n+   * The column names are aligned with the return item names specified within the Cypher query,\n+   * (e.g. `RETURN foo, bar AS baz` results in the columns `foo` and `baz`).\n+   *\n+   * @note Dot characters (i.e. `.`) within return item names are replaced by an underscore (`_`),\n+   *       (e.g. `MATCH (n:Person) RETURN n` results in the columns `n`, `n:Person` and `n_name`).\n+   * @since 3.0.0\n+   */\n+  def df: DataFrame"
  }],
  "prId": 24851
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "```scala\r\n-import org.apache.spark.sql.DataFrame\r\n+import org.apache.spark.sql.{Dataset, Row}\r\n```",
    "commit": "44a955bdbe7f9ef88b69193635e1678668584ea3",
    "createdAt": "2019-10-11T03:33:55Z",
    "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.graph.api\n+\n+import org.apache.spark.sql.DataFrame"
  }],
  "prId": 24851
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "`DataFrame` -> `Dataset`.",
    "commit": "44a955bdbe7f9ef88b69193635e1678668584ea3",
    "createdAt": "2019-10-11T14:44:18Z",
    "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.graph.api\n+\n+import org.apache.spark.sql.{Dataset, Row}\n+\n+/**\n+ * Result of a Cypher query.\n+ *\n+ * Wraps a DataFrame that contains the result rows."
  }],
  "prId": 24851
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "`df` -> `ds`.",
    "commit": "44a955bdbe7f9ef88b69193635e1678668584ea3",
    "createdAt": "2019-10-11T15:09:17Z",
    "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.graph.api\n+\n+import org.apache.spark.sql.{Dataset, Row}\n+\n+/**\n+ * Result of a Cypher query.\n+ *\n+ * Wraps a DataFrame that contains the result rows.\n+ *\n+ * @since 3.0.0\n+ */\n+sealed trait CypherResult {\n+  // Note that representing the CypherResult as a trait allows for future extensions\n+  // (e.g. returning graphs in addition to tables).\n+\n+  /**\n+   * Contains the result rows.\n+   *\n+   * The column names are aligned with the return item names specified within the Cypher query,\n+   * (e.g. `RETURN foo, bar AS baz` results in the columns `foo` and `baz`).\n+   *\n+   * @note Dot characters (i.e. `.`) within return item names are replaced by an underscore (`_`),\n+   *       (e.g. `MATCH (n:Person) RETURN n` results in the columns `n`, `n:Person` and `n_name`).\n+   * @since 3.0.0\n+   */\n+  def df: Dataset[Row]"
  }],
  "prId": 24851
}]