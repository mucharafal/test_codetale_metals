[{
  "comments": [{
    "author": {
      "login": "kiszk"
    },
    "body": "2-indent?",
    "commit": "3786c73442cfb5c0b1e2c475c8259cd99ac7a8a3",
    "createdAt": "2019-06-17T02:56:51Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.spark.cypher.adapters\n+\n+import org.apache.spark.graph.api.{NodeFrame, RelationshipFrame}\n+import org.opencypher.okapi.api.io.conversion.{ElementMapping, NodeMappingBuilder, RelationshipMappingBuilder}\n+\n+object MappingAdapter {\n+\n+  implicit class RichNodeDataFrame(val nodeDf: NodeFrame) extends AnyVal {\n+    def toNodeMapping: ElementMapping = NodeMappingBuilder\n+      .on(nodeDf.idColumn)\n+      .withImpliedLabels(nodeDf.labelSet.toSeq: _*)\n+      .withPropertyKeyMappings(nodeDf.properties.toSeq:_*)\n+      .build\n+  }\n+\n+  implicit class RichRelationshipDataFrame(val relDf: RelationshipFrame) extends AnyVal {\n+    def toRelationshipMapping: ElementMapping = RelationshipMappingBuilder\n+        .on(relDf.idColumn)",
    "line": 36
  }],
  "prId": 24297
}]