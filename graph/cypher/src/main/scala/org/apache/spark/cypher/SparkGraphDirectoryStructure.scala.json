[{
  "comments": [{
    "author": {
      "login": "kiszk"
    },
    "body": "nit: Is it better to define a variable to hold `\"--UNDERLINE--` and use it at all of the references for consistency?",
    "commit": "3786c73442cfb5c0b1e2c475c8259cd99ac7a8a3",
    "createdAt": "2019-06-17T02:46:46Z",
    "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.spark.cypher\n+\n+import org.apache.hadoop.fs.Path\n+\n+object SparkGraphDirectoryStructure {\n+\n+  import org.apache.spark.cypher.conversions.StringEncodingUtilities._\n+\n+  private implicit class StringPath(val path: String) extends AnyVal {\n+    def /(segment: String): String = s\"$path$pathSeparator$segment\"\n+  }\n+\n+  val pathSeparator: String = Path.SEPARATOR\n+\n+  val nodeTablesDirectoryName = \"nodes\"\n+\n+  val relationshipTablesDirectoryName = \"relationships\"\n+\n+  // Because an empty path does not work, we need a special directory name for nodes without labels.\n+  val noLabelNodeDirectoryName: String = \"__NO_LABEL__\"\n+\n+  def nodeTableDirectoryName(labels: Set[String]): String = concatDirectoryNames(labels.toSeq.sorted)\n+\n+  def relKeyTableDirectoryName(relKey: String): String = relKey.encodeSpecialCharacters\n+\n+  def concatDirectoryNames(seq: Seq[String]): String = {\n+    if (seq.isEmpty) {\n+      noLabelNodeDirectoryName\n+    } else {\n+      // TODO: Find more elegant solution for encoding underline characters\n+      seq.map(_.replace(\"_\", \"--UNDERLINE--\")).mkString(\"_\").encodeSpecialCharacters",
    "line": 49
  }],
  "prId": 24297
}]