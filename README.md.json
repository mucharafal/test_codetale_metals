[
  {
    "id" : "1f44d8b3-9457-448d-8a03-505f114fba75",
    "prId" : 14,
    "comments" : [
      {
        "id" : "b789dc65-1c05-47ac-af0c-dfe0dae7b698",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I think there is a typo in this sentence, probably some word missing?",
        "createdAt" : "2017-11-08T18:05:10Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6b4b2208-edcf-40b9-9281-01d9c6ba4642",
        "parentId" : "b789dc65-1c05-47ac-af0c-dfe0dae7b698",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "It was bad wording, good catch!",
        "createdAt" : "2017-11-08T18:12:12Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7939bde0a143d3f1f5ebc5076a377ad6baafa86b",
    "line" : null,
    "diffHunk" : "@@ -1,33 +1,41 @@\n # Scalameta language-server\n \n-This is an experimental [Language Server Protocol](https://github.com/Microsoft/language-server-protocol)\n-implementation for Scala based on Scalameta.\n+This project is an experiment to implement a [Language Server](https://github.com/Microsoft/language-server-protocol)\n+for Scala using Scalameta semanticdb and the Scala presentation compiler.\n \n-## Project structure\n-- `language-server` contains a Scala implementation of a language server\n-- `vscode-extension` contains a Visual Studio Code extension, implementing a client for the language server\n \n-## Features\n+:warning: This project is very alpha stage.\n+Expect bugs and surprising behavior.\n+Ticket reports and patches are welcome!\n \n-- [x] Scalafix lint on compile (requires `scalac-semanticdb` compiler plugin, see [instructions here](http://scalameta.org/tutorial/#semanticdb-scalac))\n-- [ ] Document formatting with scalafmt\n \n-... WIP\n+## Roadmap\n \n-## Trying this out\n-- publish the `language-server` locally\n+Below is a rough summary of what features work and don't work.\n+Some of those features are a likely outside the scope of this project, we are still learning and exploring what's possible.\n+Please share your thoughts in\n+[#2](https://github.com/scalameta/language-server/issues/2).\n \n-```sh\n-cd language-server\n-sbt publishLocal\n-```\n+- [x] Linting with Scalafix\n+- [x] Formatting with Scalafmt\n+- [x] Auto completions as you type with presentation compiler\n+- [x] Go to definition from project Scala sources to project Scala sources with Semanticdb\n+- [ ] Go to definition from project sources to dependency sources\n+- [ ] Go to definition from dependency sources to dependency sources\n+- [ ] Go to definition in Java sources\n+- [ ] Show red squigglies as you type\n+- [ ] Show red squigglies on compile\n+- [ ] Show parameter list as you type, signature helper\n+- [ ] Show type at position\n+- [ ] Find symbol references\n+- [ ] Show docstring on hover\n \n-- open the vscode-extension in Visual Studio Code\n+## Contributing\n \n-```sh\n-cd vscode-extension\n-code .\n-```\n+See the [contributing guide](CONTRIBUTING.md).\n \n-and press F5 to start debugging.\n+### Team\n+The current maintainers, people actively working on the project and can merge pull requests, are:"
  },
  {
    "id" : "8553a5bb-1433-437a-b218-4fdd43ccf3c3",
    "prId" : 18,
    "comments" : [
      {
        "id" : "496c3a1a-ecf5-4f43-943e-3b4c9e22377e",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Add \"simple installation\"?",
        "createdAt" : "2017-11-09T10:25:38Z",
        "updatedAt" : "2017-11-09T10:29:00Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c6088776-ca5e-4d9b-8e39-703053305c72",
        "parentId" : "496c3a1a-ecf5-4f43-943e-3b4c9e22377e",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "done!",
        "createdAt" : "2017-11-09T10:30:59Z",
        "updatedAt" : "2017-11-09T10:30:59Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "65696d0f8f7496127444bdfbeb6e807c0c1b6a8d",
    "line" : null,
    "diffHunk" : "@@ -8,6 +8,13 @@ for Scala using Scalameta semanticdb and the Scala presentation compiler.\n Expect bugs and surprising behavior.\n Ticket reports and patches are welcome!\n \n+## Project Goals\n+\n+This project has the following goals:\n+\n+- a good UX for the final users"
  },
  {
    "id" : "f887a21b-408e-4111-b8da-2ecc13ac11b8",
    "prId" : 57,
    "comments" : [
      {
        "id" : "06395c85-b633-45eb-bbbb-3b0d080aaf36",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "while we're at it, we should also add `textDocument/rangeFormatting` and `textDocument/onTypeFormatting`",
        "createdAt" : "2017-11-24T11:08:11Z",
        "updatedAt" : "2017-11-24T13:33:31Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4c716417-77ca-4ece-bea4-eb01946f4f0b",
        "parentId" : "06395c85-b633-45eb-bbbb-3b0d080aaf36",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "range formatting is beyond the scope of this project, I spent a long time trying to support it in scalafmt and didn't get it working",
        "createdAt" : "2017-11-24T13:18:34Z",
        "updatedAt" : "2017-11-24T13:33:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f596fed8-39dd-4f4f-827a-04e790075cee",
        "parentId" : "06395c85-b633-45eb-bbbb-3b0d080aaf36",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I thought it was working. I use it in vscode-scalafmt and it seems to be ok if you try to format a \"reasonable\" range of statements.",
        "createdAt" : "2017-11-24T13:25:14Z",
        "updatedAt" : "2017-11-24T13:33:31Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6df40728-3c4a-4e56-8e19-60200ab9891b",
        "parentId" : "06395c85-b633-45eb-bbbb-3b0d080aaf36",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Cool, I added it. Format on type looks interesting, I wasn't aware that was a thing!",
        "createdAt" : "2017-11-24T13:34:01Z",
        "updatedAt" : "2017-11-24T13:34:01Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ef29dee59b9a4b875a1912b928ec99c601b0286a",
    "line" : null,
    "diffHunk" : "@@ -20,24 +20,28 @@ This project has the following goals:\n \n ## Roadmap\n \n-Below is a rough summary of what features work and don't work.\n-Some of those features are a likely outside the scope of this project, we are still learning and exploring what's possible.\n-Please share your thoughts in\n-[#2](https://github.com/scalameta/language-server/issues/2).\n-\n-- [x] Linting with Scalafix\n-- [x] Formatting with Scalafmt\n-- [x] Auto completions as you type with presentation compiler\n-- [x] Go to definition from project Scala sources to project Scala sources\n-- [x] Show type at position\n-- [x] Go to definition from project sources to Scala dependency source files\n-- [x] Go to definition from project sources to Java dependency source files\n-- [ ] Show red squigglies as you type\n-- [ ] Show red squigglies on compile\n-- [ ] Show parameter list as you type, signature helper\n-- [ ] Find symbol references\n-- [ ] Show docstring on hover\n-- [ ] Rename symbol\n+Below is a rough summary of what features have been implemented.\n+Even if some checkbox is marked it does not mean that feature works perfectly.\n+Some of those features are a likely outside the scope of this project, we are\n+still learning and exploring what's possible.\n+\n+- [x] Linting with Scalafix on compile (textDocument/publishDiagnostics)\n+- [ ] Linting with Scalafix as you type (textDocument/publishDiagnostics)\n+- [x] Formatting with Scalafmt (textDocument/formatting)"
  },
  {
    "id" : "114a8d49-6b72-4262-b140-daa15979a89f",
    "prId" : 95,
    "comments" : [
      {
        "id" : "b7c44a10-832b-483e-b2c7-6808cb3eab03",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "this is still WIP, right?",
        "createdAt" : "2017-12-05T07:33:15Z",
        "updatedAt" : "2017-12-06T03:26:59Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d5025cbc-9ae5-4686-a765-9a86c770f165",
        "parentId" : "b7c44a10-832b-483e-b2c7-6808cb3eab03",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Right, it's a copy-paste mistake. Anyway, I think #97 is ready to be merged, so let's leave it checked here.",
        "createdAt" : "2017-12-06T02:52:36Z",
        "updatedAt" : "2017-12-06T03:26:59Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2b8a6231c02a9df92c5fb8066bd217254209bb47",
    "line" : null,
    "diffHunk" : "@@ -25,25 +25,33 @@ Even if some checkbox is marked it does not mean that feature works perfectly.\n Some of those features are a likely outside the scope of this project, we are\n still learning and exploring what's possible.\n \n-- [x] Linting with Scalafix on compile (textDocument/publishDiagnostics)\n-- [ ] Linting with Scalafix as you type (textDocument/publishDiagnostics)\n-- [ ] Refactoring with Scalafix (textDocument/codeAction)\n-- [x] Formatting with Scalafmt (textDocument/formatting)\n-- [ ] Formatting with Scalafmt for range (textDocument/rangeFormatting)\n-- [ ] Formatting with Scalafmt as you type (textDocument/onTypeFormatting)\n-- [x] Auto completions as you type with presentation compiler (textDocument/completions)\n-- [x] Show type at position as you type (textDocument/hover)\n-- [x] Go to definition from project Scala sources to project Scala sources on compile (textDocument/definition)\n-- [x] Go to definition from project sources to Scala dependency source files on compile (textDocument/definition)\n-- [x] Go to definition from project sources to Java dependency source file on compile (textDocument/definition)\n-- [ ] Go to definition as you type (textDocument/definition)\n-- [x] Show parameter list as you type (textDocument/signatureHelper)\n-- [ ] Show red squigglies as you type (textDocument/publishDiagnostics)\n-- [ ] Show red squigglies on compile (textDocument/publishDiagnostics)\n-- [ ] Auto-insert missing import when completing a global symbol (textDocument/completions)\n-- [ ] Find symbol references (textDocument/references)\n-- [ ] Rename local symbol (textDocument/rename)\n-- [ ] Rename global symbol (textDocument/rename)\n+* Formatting with Scalafmt:\n+  - [x] Whole file (`textDocument/formatting`)\n+  - [ ] Selected range (`textDocument/rangeFormatting`)\n+  - [ ] As you type (`textDocument/onTypeFormatting`)\n+* Completions and signature help:\n+  - [x] Auto completions as you type with presentation compiler (`textDocument/completions`)\n+  - [x] Show type at position as you type (`textDocument/hover`)\n+  - [x] Show parameter list as you type (`textDocument/signatureHelper`)\n+* Symbols outline:\n+  - [x] Current file symbols tree as you type (`textDocument/documentSymbol`)\n+  - [ ] Workspace global symbols list (`workspace/symbol`)\n+* Definition and references:\n+  - [x] Go to definition from project Scala sources to project Scala sources on compile (`textDocument/definition`)\n+  - [x] Go to definition from project sources to Scala dependency source files on compile (`textDocument/definition`)\n+  - [x] Go to definition from project sources to Java dependency source file on compile (`textDocument/definition`)\n+  - [ ] Go to definition as you type (`textDocument/definition`)\n+  - [x] Find symbol references in the project (`textDocument/references`)\n+  - [x] Highlight symbol references in the file (`textDocument/documentHighlight`)"
  },
  {
    "id" : "b56633f8-cb9a-4369-87ea-c4a7e9d691ec",
    "prId" : 95,
    "comments" : [
      {
        "id" : "61ece75e-f1fd-42f6-998c-50f980a2f976",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "\"IntelliSense with presentation compiler\"?",
        "createdAt" : "2017-12-05T10:55:49Z",
        "updatedAt" : "2017-12-06T03:26:59Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3b6806b3-caac-402c-9767-b3cfbf0269ed",
        "parentId" : "61ece75e-f1fd-42f6-998c-50f980a2f976",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "IntelliSense is a Visual Studio feature name, isn't it? \"Intelligent code completion\" seems to be a general/neutral way to call it. Or about \"Context-aware code completion\"?",
        "createdAt" : "2017-12-06T03:02:02Z",
        "updatedAt" : "2017-12-06T03:26:59Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2b8a6231c02a9df92c5fb8066bd217254209bb47",
    "line" : null,
    "diffHunk" : "@@ -25,25 +25,33 @@ Even if some checkbox is marked it does not mean that feature works perfectly.\n Some of those features are a likely outside the scope of this project, we are\n still learning and exploring what's possible.\n \n-- [x] Linting with Scalafix on compile (textDocument/publishDiagnostics)\n-- [ ] Linting with Scalafix as you type (textDocument/publishDiagnostics)\n-- [ ] Refactoring with Scalafix (textDocument/codeAction)\n-- [x] Formatting with Scalafmt (textDocument/formatting)\n-- [ ] Formatting with Scalafmt for range (textDocument/rangeFormatting)\n-- [ ] Formatting with Scalafmt as you type (textDocument/onTypeFormatting)\n-- [x] Auto completions as you type with presentation compiler (textDocument/completions)\n-- [x] Show type at position as you type (textDocument/hover)\n-- [x] Go to definition from project Scala sources to project Scala sources on compile (textDocument/definition)\n-- [x] Go to definition from project sources to Scala dependency source files on compile (textDocument/definition)\n-- [x] Go to definition from project sources to Java dependency source file on compile (textDocument/definition)\n-- [ ] Go to definition as you type (textDocument/definition)\n-- [x] Show parameter list as you type (textDocument/signatureHelper)\n-- [ ] Show red squigglies as you type (textDocument/publishDiagnostics)\n-- [ ] Show red squigglies on compile (textDocument/publishDiagnostics)\n-- [ ] Auto-insert missing import when completing a global symbol (textDocument/completions)\n-- [ ] Find symbol references (textDocument/references)\n-- [ ] Rename local symbol (textDocument/rename)\n-- [ ] Rename global symbol (textDocument/rename)\n+* Formatting with Scalafmt:\n+  - [x] Whole file (`textDocument/formatting`)\n+  - [ ] Selected range (`textDocument/rangeFormatting`)\n+  - [ ] As you type (`textDocument/onTypeFormatting`)\n+* Completions and signature help:"
  },
  {
    "id" : "bf4f4972-596f-4f26-a7d6-0d252cecb1aa",
    "prId" : 95,
    "comments" : [
      {
        "id" : "6322efbe-022f-4d85-826d-081466a6f509",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Skip \"with presentation compiler\"",
        "createdAt" : "2017-12-05T10:56:05Z",
        "updatedAt" : "2017-12-06T03:26:59Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2b8a6231c02a9df92c5fb8066bd217254209bb47",
    "line" : null,
    "diffHunk" : "@@ -25,25 +25,33 @@ Even if some checkbox is marked it does not mean that feature works perfectly.\n Some of those features are a likely outside the scope of this project, we are\n still learning and exploring what's possible.\n \n-- [x] Linting with Scalafix on compile (textDocument/publishDiagnostics)\n-- [ ] Linting with Scalafix as you type (textDocument/publishDiagnostics)\n-- [ ] Refactoring with Scalafix (textDocument/codeAction)\n-- [x] Formatting with Scalafmt (textDocument/formatting)\n-- [ ] Formatting with Scalafmt for range (textDocument/rangeFormatting)\n-- [ ] Formatting with Scalafmt as you type (textDocument/onTypeFormatting)\n-- [x] Auto completions as you type with presentation compiler (textDocument/completions)\n-- [x] Show type at position as you type (textDocument/hover)\n-- [x] Go to definition from project Scala sources to project Scala sources on compile (textDocument/definition)\n-- [x] Go to definition from project sources to Scala dependency source files on compile (textDocument/definition)\n-- [x] Go to definition from project sources to Java dependency source file on compile (textDocument/definition)\n-- [ ] Go to definition as you type (textDocument/definition)\n-- [x] Show parameter list as you type (textDocument/signatureHelper)\n-- [ ] Show red squigglies as you type (textDocument/publishDiagnostics)\n-- [ ] Show red squigglies on compile (textDocument/publishDiagnostics)\n-- [ ] Auto-insert missing import when completing a global symbol (textDocument/completions)\n-- [ ] Find symbol references (textDocument/references)\n-- [ ] Rename local symbol (textDocument/rename)\n-- [ ] Rename global symbol (textDocument/rename)\n+* Formatting with Scalafmt:\n+  - [x] Whole file (`textDocument/formatting`)\n+  - [ ] Selected range (`textDocument/rangeFormatting`)\n+  - [ ] As you type (`textDocument/onTypeFormatting`)\n+* Completions and signature help:\n+  - [x] Auto completions as you type with presentation compiler (`textDocument/completions`)"
  },
  {
    "id" : "8c257e90-5cc1-48cf-83a7-69b65ae6a97f",
    "prId" : 95,
    "comments" : [
      {
        "id" : "658ec601-32ff-4f8a-9e43-91e21a8e74ea",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Remove \"as you type\"",
        "createdAt" : "2017-12-05T10:56:46Z",
        "updatedAt" : "2017-12-06T03:26:59Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2b8a6231c02a9df92c5fb8066bd217254209bb47",
    "line" : null,
    "diffHunk" : "@@ -25,25 +25,33 @@ Even if some checkbox is marked it does not mean that feature works perfectly.\n Some of those features are a likely outside the scope of this project, we are\n still learning and exploring what's possible.\n \n-- [x] Linting with Scalafix on compile (textDocument/publishDiagnostics)\n-- [ ] Linting with Scalafix as you type (textDocument/publishDiagnostics)\n-- [ ] Refactoring with Scalafix (textDocument/codeAction)\n-- [x] Formatting with Scalafmt (textDocument/formatting)\n-- [ ] Formatting with Scalafmt for range (textDocument/rangeFormatting)\n-- [ ] Formatting with Scalafmt as you type (textDocument/onTypeFormatting)\n-- [x] Auto completions as you type with presentation compiler (textDocument/completions)\n-- [x] Show type at position as you type (textDocument/hover)\n-- [x] Go to definition from project Scala sources to project Scala sources on compile (textDocument/definition)\n-- [x] Go to definition from project sources to Scala dependency source files on compile (textDocument/definition)\n-- [x] Go to definition from project sources to Java dependency source file on compile (textDocument/definition)\n-- [ ] Go to definition as you type (textDocument/definition)\n-- [x] Show parameter list as you type (textDocument/signatureHelper)\n-- [ ] Show red squigglies as you type (textDocument/publishDiagnostics)\n-- [ ] Show red squigglies on compile (textDocument/publishDiagnostics)\n-- [ ] Auto-insert missing import when completing a global symbol (textDocument/completions)\n-- [ ] Find symbol references (textDocument/references)\n-- [ ] Rename local symbol (textDocument/rename)\n-- [ ] Rename global symbol (textDocument/rename)\n+* Formatting with Scalafmt:\n+  - [x] Whole file (`textDocument/formatting`)\n+  - [ ] Selected range (`textDocument/rangeFormatting`)\n+  - [ ] As you type (`textDocument/onTypeFormatting`)\n+* Completions and signature help:\n+  - [x] Auto completions as you type with presentation compiler (`textDocument/completions`)\n+  - [x] Show type at position as you type (`textDocument/hover`)"
  },
  {
    "id" : "fcd136dd-0f69-49c8-96b4-23eef42c1770",
    "prId" : 95,
    "comments" : [
      {
        "id" : "91e022a3-523a-4134-b4a2-c1acd555783a",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "\"with scalafix\". I would actually split linting and refactoring into two categories. Refactoring is a big topic that can be split into a lot of smaller features: rename local / global symbol, organize imports, move class,... ",
        "createdAt" : "2017-12-05T11:02:17Z",
        "updatedAt" : "2017-12-06T03:26:59Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2b8a6231c02a9df92c5fb8066bd217254209bb47",
    "line" : null,
    "diffHunk" : "@@ -25,25 +25,33 @@ Even if some checkbox is marked it does not mean that feature works perfectly.\n Some of those features are a likely outside the scope of this project, we are\n still learning and exploring what's possible.\n \n-- [x] Linting with Scalafix on compile (textDocument/publishDiagnostics)\n-- [ ] Linting with Scalafix as you type (textDocument/publishDiagnostics)\n-- [ ] Refactoring with Scalafix (textDocument/codeAction)\n-- [x] Formatting with Scalafmt (textDocument/formatting)\n-- [ ] Formatting with Scalafmt for range (textDocument/rangeFormatting)\n-- [ ] Formatting with Scalafmt as you type (textDocument/onTypeFormatting)\n-- [x] Auto completions as you type with presentation compiler (textDocument/completions)\n-- [x] Show type at position as you type (textDocument/hover)\n-- [x] Go to definition from project Scala sources to project Scala sources on compile (textDocument/definition)\n-- [x] Go to definition from project sources to Scala dependency source files on compile (textDocument/definition)\n-- [x] Go to definition from project sources to Java dependency source file on compile (textDocument/definition)\n-- [ ] Go to definition as you type (textDocument/definition)\n-- [x] Show parameter list as you type (textDocument/signatureHelper)\n-- [ ] Show red squigglies as you type (textDocument/publishDiagnostics)\n-- [ ] Show red squigglies on compile (textDocument/publishDiagnostics)\n-- [ ] Auto-insert missing import when completing a global symbol (textDocument/completions)\n-- [ ] Find symbol references (textDocument/references)\n-- [ ] Rename local symbol (textDocument/rename)\n-- [ ] Rename global symbol (textDocument/rename)\n+* Formatting with Scalafmt:\n+  - [x] Whole file (`textDocument/formatting`)\n+  - [ ] Selected range (`textDocument/rangeFormatting`)\n+  - [ ] As you type (`textDocument/onTypeFormatting`)\n+* Completions and signature help:\n+  - [x] Auto completions as you type with presentation compiler (`textDocument/completions`)\n+  - [x] Show type at position as you type (`textDocument/hover`)\n+  - [x] Show parameter list as you type (`textDocument/signatureHelper`)\n+* Symbols outline:\n+  - [x] Current file symbols tree as you type (`textDocument/documentSymbol`)\n+  - [ ] Workspace global symbols list (`workspace/symbol`)\n+* Definition and references:\n+  - [x] Go to definition from project Scala sources to project Scala sources on compile (`textDocument/definition`)\n+  - [x] Go to definition from project sources to Scala dependency source files on compile (`textDocument/definition`)\n+  - [x] Go to definition from project sources to Java dependency source file on compile (`textDocument/definition`)\n+  - [ ] Go to definition as you type (`textDocument/definition`)\n+  - [x] Find symbol references in the project (`textDocument/references`)\n+  - [x] Highlight symbol references in the file (`textDocument/documentHighlight`)\n+* Linting and refactoring:"
  },
  {
    "id" : "1cb3228c-7b40-4423-989c-b7f814b33087",
    "prId" : 95,
    "comments" : [
      {
        "id" : "219f9766-32db-49eb-8e7e-7eb8873b9916",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This can be moved to intellisense with pc imo.",
        "createdAt" : "2017-12-05T11:02:42Z",
        "updatedAt" : "2017-12-06T03:26:59Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "88d0fe0b-b280-4aa3-a51a-e95c058b2776",
        "parentId" : "219f9766-32db-49eb-8e7e-7eb8873b9916",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I would actually remove `red squigglies` items: isn't it what is meant in general by linting? The LSP message is just `textDocument/publishDiagnostics` and it is reflected in the UI in several ways: red-squigglies, gutter icons, special panel with errors, error tooltip on hover, etc. But it's all about UI, not the server functionality.",
        "createdAt" : "2017-12-06T03:14:34Z",
        "updatedAt" : "2017-12-06T03:26:59Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2b8a6231c02a9df92c5fb8066bd217254209bb47",
    "line" : null,
    "diffHunk" : "@@ -25,25 +25,33 @@ Even if some checkbox is marked it does not mean that feature works perfectly.\n Some of those features are a likely outside the scope of this project, we are\n still learning and exploring what's possible.\n \n-- [x] Linting with Scalafix on compile (textDocument/publishDiagnostics)\n-- [ ] Linting with Scalafix as you type (textDocument/publishDiagnostics)\n-- [ ] Refactoring with Scalafix (textDocument/codeAction)\n-- [x] Formatting with Scalafmt (textDocument/formatting)\n-- [ ] Formatting with Scalafmt for range (textDocument/rangeFormatting)\n-- [ ] Formatting with Scalafmt as you type (textDocument/onTypeFormatting)\n-- [x] Auto completions as you type with presentation compiler (textDocument/completions)\n-- [x] Show type at position as you type (textDocument/hover)\n-- [x] Go to definition from project Scala sources to project Scala sources on compile (textDocument/definition)\n-- [x] Go to definition from project sources to Scala dependency source files on compile (textDocument/definition)\n-- [x] Go to definition from project sources to Java dependency source file on compile (textDocument/definition)\n-- [ ] Go to definition as you type (textDocument/definition)\n-- [x] Show parameter list as you type (textDocument/signatureHelper)\n-- [ ] Show red squigglies as you type (textDocument/publishDiagnostics)\n-- [ ] Show red squigglies on compile (textDocument/publishDiagnostics)\n-- [ ] Auto-insert missing import when completing a global symbol (textDocument/completions)\n-- [ ] Find symbol references (textDocument/references)\n-- [ ] Rename local symbol (textDocument/rename)\n-- [ ] Rename global symbol (textDocument/rename)\n+* Formatting with Scalafmt:\n+  - [x] Whole file (`textDocument/formatting`)\n+  - [ ] Selected range (`textDocument/rangeFormatting`)\n+  - [ ] As you type (`textDocument/onTypeFormatting`)\n+* Completions and signature help:\n+  - [x] Auto completions as you type with presentation compiler (`textDocument/completions`)\n+  - [x] Show type at position as you type (`textDocument/hover`)\n+  - [x] Show parameter list as you type (`textDocument/signatureHelper`)\n+* Symbols outline:\n+  - [x] Current file symbols tree as you type (`textDocument/documentSymbol`)\n+  - [ ] Workspace global symbols list (`workspace/symbol`)\n+* Definition and references:\n+  - [x] Go to definition from project Scala sources to project Scala sources on compile (`textDocument/definition`)\n+  - [x] Go to definition from project sources to Scala dependency source files on compile (`textDocument/definition`)\n+  - [x] Go to definition from project sources to Java dependency source file on compile (`textDocument/definition`)\n+  - [ ] Go to definition as you type (`textDocument/definition`)\n+  - [x] Find symbol references in the project (`textDocument/references`)\n+  - [x] Highlight symbol references in the file (`textDocument/documentHighlight`)\n+* Linting and refactoring:\n+  - [x] Linting with Scalafix on compile (`textDocument/publishDiagnostics`)\n+  - [ ] Linting with Scalafix as you type (`textDocument/publishDiagnostics`)\n+  - [ ] Refactoring with Scalafix (`textDocument/codeAction`)\n+  - [ ] Show red squigglies on compile (`textDocument/publishDiagnostics`)"
  },
  {
    "id" : "0775ab16-7a18-422d-89b3-f25c4bec498f",
    "prId" : 95,
    "comments" : [
      {
        "id" : "5f5b28cd-7c63-40d2-bf77-edaaa8ac9d22",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I agree \"intellisense\" is maybe too microsoft specific, but they use it as a general term for exactly these features \r\n\r\n> IntelliSense is the general term for a number of features: List Members, Parameter Info, Quick Info, and Complete Word. These features help you to learn more about the code you are using, keep track of the parameters you are typing, and add calls to properties and methods with only a few keystrokes.\r\n",
        "createdAt" : "2017-12-06T08:46:31Z",
        "updatedAt" : "2017-12-06T08:51:24Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0b5cdea4-1177-4f18-a7a4-60eead00dd90",
        "parentId" : "5f5b28cd-7c63-40d2-bf77-edaaa8ac9d22",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I see your point about multiple connotations, but I'm not sure whether it's a commonly understandable term. I had a general idea when I saw this word before, but when you mentioned it yesterday I had to google the exact meaning because I wasn't sure. Probably it's just me 😅 ",
        "createdAt" : "2017-12-06T11:51:26Z",
        "updatedAt" : "2017-12-06T11:51:26Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2b8a6231c02a9df92c5fb8066bd217254209bb47",
    "line" : 27,
    "diffHunk" : "@@ -25,25 +25,32 @@ Even if some checkbox is marked it does not mean that feature works perfectly.\n Some of those features are a likely outside the scope of this project, we are\n still learning and exploring what's possible.\n \n-- [x] Linting with Scalafix on compile (textDocument/publishDiagnostics)\n-- [ ] Linting with Scalafix as you type (textDocument/publishDiagnostics)\n-- [ ] Refactoring with Scalafix (textDocument/codeAction)\n-- [x] Formatting with Scalafmt (textDocument/formatting)\n-- [ ] Formatting with Scalafmt for range (textDocument/rangeFormatting)\n-- [ ] Formatting with Scalafmt as you type (textDocument/onTypeFormatting)\n-- [x] Auto completions as you type with presentation compiler (textDocument/completions)\n-- [x] Show type at position as you type (textDocument/hover)\n-- [x] Go to definition from project Scala sources to project Scala sources on compile (textDocument/definition)\n-- [x] Go to definition from project sources to Scala dependency source files on compile (textDocument/definition)\n-- [x] Go to definition from project sources to Java dependency source file on compile (textDocument/definition)\n-- [ ] Go to definition as you type (textDocument/definition)\n-- [x] Show parameter list as you type (textDocument/signatureHelper)\n-- [ ] Show red squigglies as you type (textDocument/publishDiagnostics)\n-- [ ] Show red squigglies on compile (textDocument/publishDiagnostics)\n-- [ ] Auto-insert missing import when completing a global symbol (textDocument/completions)\n-- [ ] Find symbol references (textDocument/references)\n-- [ ] Rename local symbol (textDocument/rename)\n-- [ ] Rename global symbol (textDocument/rename)\n+* Formatting with Scalafmt:\n+  - [x] Whole file (`textDocument/formatting`)\n+  - [ ] Selected range (`textDocument/rangeFormatting`)\n+  - [ ] As you type (`textDocument/onTypeFormatting`)\n+* Context-aware code completion:"
  },
  {
    "id" : "0c53fe2f-8fb1-43d8-a99d-d5e7614e21f8",
    "prId" : 116,
    "comments" : [
      {
        "id" : "34721710-ab55-48c8-bd4b-0787b952aaa9",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "`textDocument/publishDiagnostics` here too",
        "createdAt" : "2017-12-13T23:35:39Z",
        "updatedAt" : "2017-12-14T16:33:49Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2ad41c2943b988f4013b1b0d29478092b349360a",
    "line" : null,
    "diffHunk" : "@@ -25,32 +25,39 @@ Even if some checkbox is marked it does not mean that feature works perfectly.\n Some of those features are a likely outside the scope of this project, we are\n still learning and exploring what's possible.\n \n+* Compile errors with the Scala Presentation Compiler:"
  },
  {
    "id" : "442fd48a-223f-4877-a6b3-80a692bf92e1",
    "prId" : 116,
    "comments" : [
      {
        "id" : "6afce349-0e01-4a5b-a14d-8a741ecb50a9",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I wouldn't add `on hover` here, because it's editor-specific. In Atom it works only when you place cursor on a symbol or when you do \"definition preview\".",
        "createdAt" : "2017-12-13T23:37:00Z",
        "updatedAt" : "2017-12-14T16:33:49Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2ad41c2943b988f4013b1b0d29478092b349360a",
    "line" : null,
    "diffHunk" : "@@ -25,32 +25,39 @@ Even if some checkbox is marked it does not mean that feature works perfectly.\n Some of those features are a likely outside the scope of this project, we are\n still learning and exploring what's possible.\n \n+* Compile errors with the Scala Presentation Compiler:\n+  - [ ] On build compile\n+  - [x] As you type\n+* Linting with Scalafix (`textDocument/publishDiagnostics`):\n+  - [x] On build compile\n+  - [x] As you type\n+* Refactoring with Scalafix:\n+  - [ ] Quick-fix inspections (`textDocument/codeAction`)\n+  - [ ] Rename local symbol (`textDocument/rename`)\n+  - [ ] Rename global symbol (`textDocument/rename`)\n * Formatting with Scalafmt:\n   - [x] Whole file (`textDocument/formatting`)\n   - [ ] Selected range (`textDocument/rangeFormatting`)\n   - [ ] As you type (`textDocument/onTypeFormatting`)\n-* Context-aware code completion:\n-  - [x] Autocompletion as you type (`textDocument/completions`)\n+* Code assistance:\n+  - [x] Auto-complete symbols in scope as you type (`textDocument/completions`)\n+  - [ ] Auto-complete global symbol and insert missing imports (`textDocument/completions`)\n   - [x] Show parameter list as you type (`textDocument/signatureHelp`)\n   - [x] Show type at position (`textDocument/hover`)\n-* Symbols outline:\n-  - [x] Current file symbols tree as you type (`textDocument/documentSymbol`)\n-  - [ ] Workspace global symbols list (`workspace/symbol`)\n-* Go to definition (`textDocument/definition`):\n+* Go to definition with SemanticDB (`textDocument/definition`):\n   - [x] Inside the project\n   - [x] From project files to Scala dependency source files\n   - [x] From project files to Java dependency source files\n-* Symbol references:\n-  - [x] Find all references in the project (`textDocument/references`)\n-  - [x] Highlight local references in the file (`textDocument/documentHighlight`)\n-* Linting with Scalafix (`textDocument/publishDiagnostics`):\n-  - [x] On compile\n-  - [ ] As you type\n-* Refactoring with Scalafix:\n-  - [ ] Code actions (`textDocument/codeAction`)\n-  - [ ] Auto-insert missing import when completing a global symbol (`textDocument/completions`)\n-  - [ ] Rename local symbol (`textDocument/rename`)\n-  - [ ] Rename global symbol (`textDocument/rename`)\n+  - [ ] From project dependency to project dependency\n+* Find references with SemanticDB (`textDocument/references`):\n+  - [x] In file on hover (`textDocument/documentHighlight`)"
  },
  {
    "id" : "c2118a4e-353d-4038-8ef5-72a15b92890a",
    "prId" : 207,
    "comments" : [
      {
        "id" : "897e1210-ffad-468d-84b2-0b73952658ea",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "👆 this too!",
        "createdAt" : "2018-03-23T22:21:01Z",
        "updatedAt" : "2018-03-23T23:03:31Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4a216025-5f41-4182-9870-43ec6ee8b5a5",
        "parentId" : "897e1210-ffad-468d-84b2-0b73952658ea",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Right, I forgot about it ",
        "createdAt" : "2018-03-23T22:23:41Z",
        "updatedAt" : "2018-03-23T23:03:31Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5c3682099146050081a2e3e206fc0c57cd20dae2",
    "line" : null,
    "diffHunk" : "@@ -27,16 +27,21 @@ still learning and exploring what's possible.\n * Compile errors with the Scala Presentation Compiler (`textDocument/publishDiagnostics`):\n   - [ ] On build compile\n   - [x] As you type\n+* Integration with the sbt server:\n+  - [x] Run custom sbt command on save\n+  - [x] Receive compilation errors (`textDocument/publishDiagnostics`)\n * Linting with Scalafix (`textDocument/publishDiagnostics`):\n   - [x] On build compile\n   - [x] As you type\n * Refactoring with Scalafix:\n   - [ ] Quick-fix inspections (`textDocument/codeAction`)\n+    + [x] Remove unused imports\n   - [ ] Rename local symbol (`textDocument/rename`)"
  },
  {
    "id" : "ab5a91e9-6a20-436e-a018-6a0ffa224d88",
    "prId" : 207,
    "comments" : [
      {
        "id" : "3bc410e5-ac94-4794-b265-fc861462fce2",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "strictly speaking we don't use scalafix for rename because it's such a simple text edit",
        "createdAt" : "2018-03-23T23:28:42Z",
        "updatedAt" : "2018-03-23T23:30:09Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5c3682099146050081a2e3e206fc0c57cd20dae2",
    "line" : 14,
    "diffHunk" : "@@ -27,16 +27,21 @@ still learning and exploring what's possible.\n * Compile errors with the Scala Presentation Compiler (`textDocument/publishDiagnostics`):\n   - [ ] On build compile\n   - [x] As you type\n+* Integration with the sbt server:\n+  - [x] Run custom sbt command on save\n+  - [x] Receive compilation errors (`textDocument/publishDiagnostics`)\n * Linting with Scalafix (`textDocument/publishDiagnostics`):\n   - [x] On build compile\n   - [x] As you type\n * Refactoring with Scalafix:\n   - [ ] Quick-fix inspections (`textDocument/codeAction`)\n-  - [ ] Rename local symbol (`textDocument/rename`)\n+    + [x] Remove unused imports\n+  - [x] Rename local symbol (`textDocument/rename`)"
  },
  {
    "id" : "ef58f9c6-64fb-4947-a804-ae62a9ad836d",
    "prId" : 207,
    "comments" : [
      {
        "id" : "1da9bdf1-9285-48d5-88ea-b431db769d16",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "👍 ",
        "createdAt" : "2018-03-23T23:28:47Z",
        "updatedAt" : "2018-03-23T23:30:09Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5c3682099146050081a2e3e206fc0c57cd20dae2",
    "line" : 19,
    "diffHunk" : "@@ -27,16 +27,21 @@ still learning and exploring what's possible.\n * Compile errors with the Scala Presentation Compiler (`textDocument/publishDiagnostics`):\n   - [ ] On build compile\n   - [x] As you type\n+* Integration with the sbt server:\n+  - [x] Run custom sbt command on save\n+  - [x] Receive compilation errors (`textDocument/publishDiagnostics`)\n * Linting with Scalafix (`textDocument/publishDiagnostics`):\n   - [x] On build compile\n   - [x] As you type\n * Refactoring with Scalafix:\n   - [ ] Quick-fix inspections (`textDocument/codeAction`)\n-  - [ ] Rename local symbol (`textDocument/rename`)\n+    + [x] Remove unused imports\n+  - [x] Rename local symbol (`textDocument/rename`)\n   - [ ] Rename global symbol (`textDocument/rename`)\n * Formatting with Scalafmt:\n   - [x] Whole file (`textDocument/formatting`)\n   - [ ] Selected range (`textDocument/rangeFormatting`)\n+  - [x] On save (`textDocument/willSaveWaitUntil`)"
  },
  {
    "id" : "ec3d6f28-326d-4af3-9190-043e8af5df35",
    "prId" : 214,
    "comments" : [
      {
        "id" : "f647f25f-2cf5-41da-8fdb-031dbf28fba7",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "\"fast _context-aware_ completions\"?",
        "createdAt" : "2018-03-31T14:28:44Z",
        "updatedAt" : "2018-03-31T22:01:15Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4a225edd-37c4-41a6-9684-51336693bc9a",
        "parentId" : "f647f25f-2cf5-41da-8fdb-031dbf28fba7",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Do people distinguish between the two? I think \"completions\" is clear enough.",
        "createdAt" : "2018-03-31T15:41:15Z",
        "updatedAt" : "2018-03-31T22:01:15Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "19c4b3e8-5245-4af1-bb60-3d1f1cb02a50",
        "parentId" : "f647f25f-2cf5-41da-8fdb-031dbf28fba7",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Well, all this time working with Scala, I was using fast completions, but it wasn't context-aware, just anything from the open buffers. I don't care much about clarifying this, just suggested it because it would make a difference for me reading this for the first time. Probably you're right that in this context it's obvious enough.",
        "createdAt" : "2018-03-31T18:49:34Z",
        "updatedAt" : "2018-03-31T22:01:15Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "d3146fa5e1de6aea4434fb7ac94da886a8657feb",
    "line" : null,
    "diffHunk" : "@@ -1,73 +1,32 @@\n # Metals\n \n+[![Join the chat at https://gitter.im/scalameta/scalameta](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/scalameta/scalameta)\n [![](https://travis-ci.org/scalameta/metals.svg?branch=master)](https://travis-ci.org/scalameta/metals)\n \n-This project is an experiment to implement a [Language Server](https://github.com/Microsoft/language-server-protocol)\n-for Scala using Scalameta semanticdb and the Scala presentation compiler.\n+This project is an experiment to implement a\n+[Language Server](https://github.com/Microsoft/language-server-protocol) for\n+Scala using [Scalameta](http://scalameta.org/)-related technologies.\n \n-:warning: This project is very alpha stage.\n-Expect bugs and surprising behavior.\n-Ticket reports and patches are welcome!\n+:warning: This project is under development and is not intended to be used for\n+day-to-day coding. Expect bugs and incomplete documentation. Installation\n+instructions are primarily intended for project contributors.\n \n ## Project Goals\n \n-This project has the following goals:\n-\n-- a good UX for the final users, including simple installation and setup\n-- low memory requirements\n-- integration with scalameta-based tools, such as [Scalafix](https://github.com/scalacenter/scalafix) and [Scalafmt](https://github.com/scalameta/scalafmt)\n-\n-## Roadmap\n-\n-Below is a rough summary of what features have been implemented.\n-Even if some checkbox is marked it does not mean that feature works perfectly.\n-Some of those features are a likely outside the scope of this project, we are\n-still learning and exploring what's possible.\n-\n-* Compile errors with the Scala Presentation Compiler (`textDocument/publishDiagnostics`):\n-  - [ ] On build compile\n-  - [x] As you type\n-* Integration with the sbt server:\n-  - [x] Run custom sbt command on save\n-  - [x] Receive compilation errors (`textDocument/publishDiagnostics`)\n-* Linting with Scalafix (`textDocument/publishDiagnostics`):\n-  - [x] On build compile\n-  - [x] As you type\n-* Refactoring with Scalafix:\n-  - [ ] Quick-fix inspections (`textDocument/codeAction`)\n-    + [x] Remove unused imports\n-  - [x] Rename local symbol (`textDocument/rename`)\n-  - [ ] Rename global symbol (`textDocument/rename`)\n-* Formatting with Scalafmt:\n-  - [x] Whole file (`textDocument/formatting`)\n-  - [ ] Selected range (`textDocument/rangeFormatting`)\n-  - [x] On save (`textDocument/willSaveWaitUntil`)\n-  - [ ] As you type (`textDocument/onTypeFormatting`)\n-* Code assistance:\n-  - [x] Auto-complete symbols in scope as you type (`textDocument/completions`)\n-  - [ ] Auto-complete global symbol and insert missing imports (`textDocument/completions`)\n-  - [x] Show parameter list as you type (`textDocument/signatureHelp`)\n-  - [x] Show type at position (`textDocument/hover`)\n-* Go to definition with SemanticDB (`textDocument/definition`):\n-  - [x] Inside the project\n-  - [x] From project files to Scala dependency source files\n-  - [x] From project files to Java dependency source files\n-  - [ ] From project dependency to project dependency\n-* Find references with SemanticDB (`textDocument/references`):\n-  - [x] In file (`textDocument/documentHighlight`)\n-  - [x] In project\n-  - [ ] In dependencies\n-* Lookup symbol definition by name:\n-  - [x] In file (`textDocument/documentSymbol`)\n-  - [x] In workspace (`workspace/symbol`)\n-* Symbol outline:\n-  - [x] In file as you type (`textDocument/documentSymbol`)\n+* simple installation\n+* correct diagnostics (red squiggles)\n+* robust navigation (goto definition anywhere)\n+* fast completions"
  },
  {
    "id" : "4039f72c-5f3e-45d5-a7dd-1a0d3ac0d19d",
    "prId" : 214,
    "comments" : [
      {
        "id" : "1d35cd49-ae31-4cc4-84f4-19d27d68fa4a",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I'm OK with moving away the roadmap, but I think readme should at least link to it.",
        "createdAt" : "2018-03-31T14:31:07Z",
        "updatedAt" : "2018-03-31T22:01:15Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "10f5e8a3-42b4-4246-ace2-4dde9d368b2f",
        "parentId" : "1d35cd49-ae31-4cc4-84f4-19d27d68fa4a",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Done",
        "createdAt" : "2018-03-31T15:40:22Z",
        "updatedAt" : "2018-03-31T22:01:15Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d3146fa5e1de6aea4434fb7ac94da886a8657feb",
    "line" : 33,
    "diffHunk" : "@@ -1,73 +1,32 @@\n # Metals\n \n+[![Join the chat at https://gitter.im/scalameta/scalameta](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/scalameta/scalameta)\n [![](https://travis-ci.org/scalameta/metals.svg?branch=master)](https://travis-ci.org/scalameta/metals)\n \n-This project is an experiment to implement a [Language Server](https://github.com/Microsoft/language-server-protocol)\n-for Scala using Scalameta semanticdb and the Scala presentation compiler.\n+This project is an experiment to implement a\n+[Language Server](https://github.com/Microsoft/language-server-protocol) for\n+Scala using [Scalameta](http://scalameta.org/)-related technologies.\n \n-:warning: This project is very alpha stage.\n-Expect bugs and surprising behavior.\n-Ticket reports and patches are welcome!\n+:warning: This project is under development and is not intended to be used for\n+day-to-day coding. Expect bugs and incomplete documentation. Installation\n+instructions are primarily intended for project contributors.\n \n ## Project Goals\n \n-This project has the following goals:\n-\n-- a good UX for the final users, including simple installation and setup\n-- low memory requirements\n-- integration with scalameta-based tools, such as [Scalafix](https://github.com/scalacenter/scalafix) and [Scalafmt](https://github.com/scalameta/scalafmt)\n-\n-## Roadmap"
  },
  {
    "id" : "4149dc0b-0e7e-4d3f-910c-b179a8acedc8",
    "prId" : 226,
    "comments" : [
      {
        "id" : "ecfc4571-7e97-401f-b20a-f88dbbea3618",
        "parentId" : null,
        "author" : {
          "login" : "xeno-by",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "body" : "\"...and what features we're planning to work on next\"?",
        "createdAt" : "2018-04-02T16:04:09Z",
        "updatedAt" : "2018-04-02T21:54:11Z",
        "lastEditedBy" : {
          "login" : "xeno-by",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/609152?u=20bb3a58b554d0984a33eaa519c5cf3fd09e88fc&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "eb53887b-73ce-45bd-b419-3b79c320ef83",
        "parentId" : "ecfc4571-7e97-401f-b20a-f88dbbea3618",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Done.",
        "createdAt" : "2018-04-02T17:00:04Z",
        "updatedAt" : "2018-04-02T21:54:11Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "774cbf430ac6829db5d40bd97995fc3a6d38bab0",
    "line" : null,
    "diffHunk" : "@@ -5,30 +5,24 @@\n \n This project is an experiment to implement a\n [Language Server](https://github.com/Microsoft/language-server-protocol) for\n-Scala using [Scalameta](http://scalameta.org/)-related technologies.\n+Scala using [Scalameta](http://scalameta.org/) projects such as\n+[Scalafmt](http://scalameta.org/scalafmt/),\n+[Scalafix](https://scalacenter.github.io/scalafix/) and\n+[SemanticDB](https://github.com/scalameta/scalameta/blob/master/semanticdb/semanticdb3/semanticdb3.md).\n \n :warning: This project is under development and is not intended to be used for\n day-to-day coding. Expect bugs and incomplete documentation. Installation\n instructions are primarily intended for project contributors.\n \n-## Project Goals\n-\n-* simple installation\n-* correct diagnostics (red squiggles)\n-* robust navigation (goto definition anywhere)\n-* fast completions\n-* low CPU and memory usage\n-* refactoring (rename, organize imports, move class, insert type annotation)\n-\n ## Contributing\n \n-See the [installation instructions](BETA.md) and\n+See the [installation instructions](docs/installation.md) and\n [contributing guide](CONTRIBUTING.md).\n \n ## Roadmap\n \n-See the [roadmap](roadmap.md) for a rough summary of what has been implemented\n-so far.\n+See the [roadmap](docs/roadmap.md) for an overview of what features have been\n+implemented."
  },
  {
    "id" : "f412a321-e1cc-470c-a5ee-9a992d78bd9f",
    "prId" : 226,
    "comments" : [
      {
        "id" : "cac46d56-6fcb-4550-a8c4-3216a9b238b7",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "\"Intellij IDEA\"?",
        "createdAt" : "2018-04-02T18:31:27Z",
        "updatedAt" : "2018-04-02T21:54:11Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "226dce6e-6667-465c-bc93-6538f3bd3a4f",
        "parentId" : "cac46d56-6fcb-4550-a8c4-3216a9b238b7",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Done, note it's IntellIj instead of Intellij 😜 ",
        "createdAt" : "2018-04-02T18:51:21Z",
        "updatedAt" : "2018-04-02T21:54:11Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2f0254f7-426d-494e-9015-685ae8ec4ac5",
        "parentId" : "cac46d56-6fcb-4550-a8c4-3216a9b238b7",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I guess, you meant Intelli**J**, but I literally copy-pasted the name from title of the linked article 😆 They use these two spellings inconsistently on the same page: \r\n\r\n<img width=\"994\" alt=\"screen_shot_2018-04-02_at_21_20_32\" src=\"https://user-images.githubusercontent.com/766656/38211944-618c2d76-36bc-11e8-93f4-121fe40ffaf7.png\">\r\n\r\nI personally couldn't care less, but I think it's funny 😂 ",
        "createdAt" : "2018-04-02T19:26:16Z",
        "updatedAt" : "2018-04-02T21:54:11Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "774cbf430ac6829db5d40bd97995fc3a6d38bab0",
    "line" : null,
    "diffHunk" : "@@ -48,11 +42,15 @@ This project helped us get quickly started with LSP. Since then, we have\n refactored the project's original sources to the point where only a few simple\n case classes remain.\n \n-## Related work\n+## Alternatives\n \n-* [ENSIME](http://ensime.org): a tool for providing IDE-like features to text\n-  editors, that\n-  [recently added LSP support](https://github.com/ensime/ensime-server/pull/1888)\n+* [IntelliJ](https://www.jetbrains.com/help/idea/discover-intellij-idea-for-scala.html):"
  },
  {
    "id" : "2ec065d5-a5b3-4478-9011-a6df0f3da9e5",
    "prId" : 226,
    "comments" : [
      {
        "id" : "8d130848-2b51-4366-9bf8-acfc0d26e83c",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "~~a~~?",
        "createdAt" : "2018-04-02T19:21:40Z",
        "updatedAt" : "2018-04-02T21:54:11Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "774cbf430ac6829db5d40bd97995fc3a6d38bab0",
    "line" : null,
    "diffHunk" : "@@ -19,10 +19,10 @@ instructions are primarily intended for project contributors.\n See the [installation instructions](docs/installation.md) and\n [contributing guide](CONTRIBUTING.md).\n \n-## Roadmap\n+## Overview\n \n-See the [roadmap](docs/roadmap.md) for an overview of what features have been\n-implemented and what features we're planning to work on next.\n+See [here](docs/overview.md) for an overview of a what features are supported or"
  },
  {
    "id" : "0e29e911-45ac-49e2-af0d-caf22f0393d2",
    "prId" : 2055,
    "comments" : [
      {
        "id" : "6358c29d-8495-44f0-9400-c7f0cffb4c75",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Super nitpicky, but we had different types of icons, and this aligns them to all be the same 😬 ",
        "createdAt" : "2020-09-07T08:37:03Z",
        "updatedAt" : "2020-09-07T08:37:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f002a8fc4fb229add86f71dbb27d249d79640b6d",
    "line" : 7,
    "diffHunk" : "@@ -1,16 +1,13 @@\n # Metals\n \n-<a href=\"https://travis-ci.org/scalameta/metals\">\n-<img src=\"https://img.shields.io/travis/scalameta/metals/main.svg?style=flat-square\" />\n-</a>\n <a href=\"https://gitter.im/scalameta/metals\">\n-<img alt=\"Join the chat on Gitter\" src=\"https://img.shields.io/gitter/room/scalameta/metals.svg?logo=gitter&style=flat-square&color=F71263\" />"
  }
]