[
  {
    "id" : "125a0a0b-f02b-48f9-a7f9-33539e9e0309",
    "prId" : 195,
    "comments" : [
      {
        "id" : "36e2e05b-22a9-41e9-99c3-a27bbce1797c",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "How is this different from `  \"editor.formatOnSave\": false`? I guess that's vscode specific and this LSP?\r\n\r\n",
        "createdAt" : "2018-02-11T15:55:06Z",
        "updatedAt" : "2018-02-11T19:15:09Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "070d38d7-f5b7-4288-b5df-43f00c199f52",
        "parentId" : "36e2e05b-22a9-41e9-99c3-a27bbce1797c",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Yes, `editor.formatOnSave` is VSCode specific. Also I think it formats after saving the file. I'll clarify it in the description. ",
        "createdAt" : "2018-02-11T19:12:39Z",
        "updatedAt" : "2018-02-11T19:17:47Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "37ef516caf63a83cb2af533a23f0de32c02ba087",
    "line" : null,
    "diffHunk" : "@@ -34,6 +34,11 @@\n           \"default\": true,\n           \"description\": \"Enable formatting with scalafmt\"\n         },\n+        \"scalameta.scalafmt.onSave\": {\n+          \"type\": \"boolean\",\n+          \"default\": false,\n+          \"description\": \"Format file on save\""
  },
  {
    "id" : "e703b2d8-b59b-4259-8b20-788a381330fe",
    "prId" : 195,
    "comments" : [
      {
        "id" : "a157cb8e-07ea-4a0c-82f1-b16604da3410",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "this is a bit strange in VSCode (because there's already a `formatOnSave` option from VSCode itself), but I guess VSCode users can just ignore it.",
        "createdAt" : "2018-02-11T20:06:18Z",
        "updatedAt" : "2018-02-11T20:06:18Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "205c5315-e87a-40d3-b984-ad46c8c3ae60",
        "parentId" : "a157cb8e-07ea-4a0c-82f1-b16604da3410",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "See https://github.com/scalameta/metals/pull/195#discussion_r167445526. There's a difference between them and we cannot rely on it, because it's VSCode specific.\r\n\r\nA possible improvement to this situation: VSCode extension could check the state of these two options and warn user when both are on (which means that formatting (probably) will be done twice)",
        "createdAt" : "2018-02-11T21:26:12Z",
        "updatedAt" : "2018-02-11T21:26:12Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "37ef516caf63a83cb2af533a23f0de32c02ba087",
    "line" : 8,
    "diffHunk" : "@@ -35,6 +35,11 @@\n           \"default\": true,\n           \"description\": \"Enable formatting with scalafmt\"\n         },\n+        \"metals.scalafmt.onSave\": {\n+          \"type\": \"boolean\",\n+          \"default\": false,\n+          \"description\": \"Format file before saving it\"\n+        },"
  },
  {
    "id" : "69bdd92c-c1fa-4728-9e75-53bc4882a16d",
    "prId" : 218,
    "comments" : [
      {
        "id" : "c4b34e35-8f00-491f-8f02-05be12d78a9a",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "these prebuild/postbuild tricks are needed to include README/LICENSE in the extension package, so that they're displayed on the Marketplace page.\r\n\r\nI've tried other approaches involving relative paths and symlinks but none worked.",
        "createdAt" : "2018-04-02T10:38:27Z",
        "updatedAt" : "2018-04-02T13:59:00Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "068a26e77742148e377252e19071478495c26d1e",
    "line" : 120,
    "diffHunk" : "@@ -120,19 +157,20 @@\n   \"main\": \"./out/extension\",\n   \"scripts\": {\n     \"vscode:prepublish\": \"npm run download-coursier && npm run compile\",\n-    \"download-coursier\":\n-      \"curl -L -o coursier https://github.com/coursier/coursier/raw/v1.0.0-RC13/coursier\",\n+    \"download-coursier\": \"curl -L -o coursier https://github.com/coursier/coursier/raw/v1.0.0-RC13/coursier\",\n     \"compile\": \"tsc -p ./\",\n     \"watch\": \"tsc -watch -p ./\",\n     \"postinstall\": \"node ./node_modules/vscode/bin/install\",\n     \"test\": \"npm run compile && node ./node_modules/vscode/bin/test\",\n-    \"build\": \"vsce package\"\n+    \"prebuild\": \"cp ../README.md . && cp ../LICENSE LICENSE.md\",\n+    \"build\": \"vsce package\",\n+    \"postbuild\": \"rm README.md && rm LICENSE.md\""
  },
  {
    "id" : "50f81c91-5113-4a9a-998d-bb57640d8ece",
    "prId" : 218,
    "comments" : [
      {
        "id" : "956604f8-b13a-4844-81af-d84d7c90be1d",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "ðŸ˜¬ðŸ¤˜ ",
        "createdAt" : "2018-04-02T15:28:28Z",
        "updatedAt" : "2018-04-02T15:32:14Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "068a26e77742148e377252e19071478495c26d1e",
    "line" : 39,
    "diffHunk" : "@@ -1,23 +1,58 @@\n {\n-  \"name\": \"vscode-metals\",\n+  \"name\": \"metals\",\n   \"displayName\": \"Metals\",\n-  \"description\": \"\",\n-  \"version\": \"0.0.1\",\n-  \"publisher\": \"gabro\",\n+  \"description\": \"EXPERIMENTAL Language Server for Scala based on Scalameta\",\n+  \"keywords\": [\n+    \"scala\",\n+    \"lsp\",\n+    \"language server\",\n+    \"scalameta\"\n+  ],\n+  \"version\": \"0.1.0\",\n+  \"publisher\": \"scalameta\",\n+  \"contributors\": [\n+    {\n+      \"name\": \"Alexey Alekhin\",\n+      \"url\": \"https://github.com/laughedelic\"\n+    },\n+    {\n+      \"name\": \"Gabriele Petronella\",\n+      \"url\": \"https://github.com/gabro\"\n+    },\n+    {\n+      \"name\": \"Ã“lafur PÃ¡ll Geirsson\",\n+      \"url\": \"https://github.com/olafurpg\"\n+    }\n+  ],\n+  \"license\": \"Apache-2.0\",\n+  \"bugs\": {\n+    \"url\": \"https://github.com/scalameta/metals/issues\"\n+  },\n+  \"repository\": {\n+    \"type\": \"git\",\n+    \"url\": \"https://github.com/scalameta/metals.git\"\n+  },\n+  \"homepage\": \"http://metals.rocks\","
  },
  {
    "id" : "0d574688-6e91-436d-b928-475b9fc303c2",
    "prId" : 218,
    "comments" : [
      {
        "id" : "8da958b0-71ff-4f20-8073-8ecd55986a07",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "How about setting it to the latest published version (`e1b3a1fa`)? Then we can update it once `0.1.0` is out.",
        "createdAt" : "2018-04-02T15:30:25Z",
        "updatedAt" : "2018-04-02T15:32:14Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "05e80464-6d64-4891-82c9-0822ec9ec0e5",
        "parentId" : "8da958b0-71ff-4f20-8073-8ecd55986a07",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "We could, but I don't intend to publish this until 0.1.0 is out, and I expect metals devs to override this to point to a local snapshot.\r\n\r\nSo I think it's not an important change now.\r\n\r\nDoes it make sense?",
        "createdAt" : "2018-04-02T15:34:08Z",
        "updatedAt" : "2018-04-02T15:34:08Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "73b1b4b4-fbfe-4648-99b1-150921aedd86",
        "parentId" : "8da958b0-71ff-4f20-8073-8ecd55986a07",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "It's up to you. I'd publish it before _and_ after 0.1.0 release ðŸ˜„ ",
        "createdAt" : "2018-04-02T15:37:00Z",
        "updatedAt" : "2018-04-02T15:37:00Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "318ce588-476c-4bb0-812d-5337085155e1",
        "parentId" : "8da958b0-71ff-4f20-8073-8ecd55986a07",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Ideally we should be able to publish betas on every commit, but there's no such thing on the Marketplace :( See https://github.com/Microsoft/vscode/issues/15756 and also the lack of API for publishing.\r\n\r\nSo every time we'll be publishing an extension to the store, it will be in correspondence of a new stable release. That's why I think we should default to the latest (in this case the first) stable release.",
        "createdAt" : "2018-04-02T15:40:54Z",
        "updatedAt" : "2018-04-02T15:41:14Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "068a26e77742148e377252e19071478495c26d1e",
    "line" : 101,
    "diffHunk" : "@@ -91,6 +123,11 @@\n           \"type\": \"boolean\",\n           \"default\": true,\n           \"description\": \"Enable renaming symbols\"\n+        },\n+        \"metals.serverVersion\": {\n+          \"type\": \"string\",\n+          \"default\": \"0.1.0\","
  },
  {
    "id" : "e5c469a3-c84b-4061-8b45-8827f3320bbb",
    "prId" : 263,
    "comments" : [
      {
        "id" : "eef23795-7f31-4a97-b551-298e20aacabd",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "s/and report diagnostics//\r\n\r\nIn what situation would you want this enabled when `command=\"\"` and `diagnostics=disabled`?",
        "createdAt" : "2018-04-07T11:09:23Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dc789d9f-3660-4f24-88a0-032b826762cc",
        "parentId" : "eef23795-7f31-4a97-b551-298e20aacabd",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "That's probably not a realistic scenario. An alternative approach would be to derive the `sbt.enabled` by the other settings i.e. when `command=\"\"` and `diagnostic.enabled=false` then don't try to connect to sbt server.\r\n\r\nThat said, I'm not super into this solution, since it seems we would be mixing concerns.",
        "createdAt" : "2018-04-07T12:08:28Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "26bc0718-e0f1-4d4c-8c65-c8e14456a9ac",
        "parentId" : "eef23795-7f31-4a97-b551-298e20aacabd",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "We can go with this approach if we want to enable sbt integration by default, because `sbt.command` shouldn't be empty by default. \r\n\r\nCurrently user just ticks one checkbox (`sbt.enabled`) and gets expected behaviour: compile on save and get diagnostics. If we set `sbt.diagnostics.enabled = false` + `sbt.command = \"\"`, then user will have to enter a command (which is not absolutely obvious IMO) and then still won't get diagnostics, because they didn't check the `sbt.diagnostics` setting. I think this can be easily confusing. So in the end I vote for leaving `sbt.enabled` setting. ",
        "createdAt" : "2018-04-07T16:08:44Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5df26eb1-edeb-4604-a345-1f4f9fe0f594",
        "parentId" : "eef23795-7f31-4a97-b551-298e20aacabd",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I think it might be good to\r\n\r\n* make `sbt.command` empty by default, I don't see another reasonable default. `test:compile` is a suicide in large builds like scalameta/scalameta\r\n* don't try to automatically connect to sbt server, user must trigger \"Connect to sbt server\" command to get error message about connection problems. We might try to connect in the background if there is a `project/target/active.json` and silently fail if there is no sbt server.\r\n* `sbt.diagnostics.enabled=true` by default.\r\n* remove unnecessary `sbt.enabled` setting\r\n\r\n\r\nI think sbt server broadcasts diagnostics (not 100% sure), so the default would mean error messages from the console appear in the editor with no special setup. The user needs to define a command to run on file save.\r\n\r\n",
        "createdAt" : "2018-04-08T17:23:08Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e1a1503b-5022-45df-afe4-788815ad6c7e",
        "parentId" : "eef23795-7f31-4a97-b551-298e20aacabd",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "> don't try to automatically connect to sbt server, user must trigger \"Connect to sbt server\" command to get error message about connection problems. We might try to connect in the background if there is a project/target/active.json and silently fail if there is no sbt server.\r\n\r\nThis is https://github.com/scalameta/metals/issues/253.\r\n\r\nI'm fine with the proposed solution, but I'd like to minimize changes in this PR and leave the behaviour described in #253 for another PR:\r\n\r\n* set `sbt.command = \"\"` and `sbt.diagnostics.enabled = true`\r\n* remove `sbt.enabled`\r\n* remove auto-connection\r\n\r\nwould this be enough?",
        "createdAt" : "2018-04-08T22:44:43Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c0a334bd-711b-4f6c-b830-dd08d38a44bb",
        "parentId" : "eef23795-7f31-4a97-b551-298e20aacabd",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Those proposed changes sound good. The smart detection can be delegated to #253 ",
        "createdAt" : "2018-04-09T12:00:59Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "52c2c299-b7c5-4f80-90cc-a44696501090",
        "parentId" : "eef23795-7f31-4a97-b551-298e20aacabd",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Done in 2f1ad16. And I think it works as expected:\r\n* doesn't auto-connect\r\n* if you connect, but have empty `sbt.command`, nothing happens on save\r\n* if you set `sbt.command`, it runs it on save\r\n* if you don't set it, but run manually, say `~metals/compile`, it will broadcast diagnostics (and you will receive them in the client if `sbt.diagnostics` is enabled)\r\n\r\nI like it more than before: it feels like you get more control and it doesn't annoy you with the connection error when you forgot to launch sbt before opening the project. But #253 will improve it even more.",
        "createdAt" : "2018-04-09T15:15:34Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "eb9717ef4d08ec6934f78ba760a875a8bf64e77a",
    "line" : null,
    "diffHunk" : "@@ -52,7 +52,12 @@\n         \"metals.sbt.enabled\": {\n           \"type\": \"boolean\",\n           \"default\": false,\n-          \"description\": \"EXPERIMENTAL. Use sbt language server to compile on file save and report diagnostics. Requires sbt 1.1.0\"\n+          \"description\": \"EXPERIMENTAL. Use sbt language server to compile on file save and report diagnostics. Requires sbt 1.1+.\""
  },
  {
    "id" : "dd2b1a18-b41f-4290-adcc-cdacb562c1c7",
    "prId" : 263,
    "comments" : [
      {
        "id" : "2b81a5a1-bd0d-4e7b-8cfb-29236d639470",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "No longer experimental.",
        "createdAt" : "2018-04-09T15:28:21Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "503a4c4a-a831-4ab7-b87f-eb90d9512252",
        "parentId" : "2b81a5a1-bd0d-4e7b-8cfb-29236d639470",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I thought it's experimental because it's \"sbt-1.x-only\", but I agree that it's stable enough.",
        "createdAt" : "2018-04-09T15:49:03Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "eb9717ef4d08ec6934f78ba760a875a8bf64e77a",
    "line" : null,
    "diffHunk" : "@@ -49,15 +49,15 @@\n     \"configuration\": {\n       \"title\": \"Metals\",\n       \"properties\": {\n-        \"metals.sbt.enabled\": {\n+        \"metals.sbt.diagnostics.enabled\": {\n           \"type\": \"boolean\",\n-          \"default\": false,\n-          \"description\": \"EXPERIMENTAL. Use sbt language server to compile on file save and report diagnostics. Requires sbt 1.1.0\"\n+          \"default\": true,\n+          \"description\": \"EXPERIMENTAL. Enable diagnostics from the sbt server. Requires a running sbt 1.1+ instance.\""
  },
  {
    "id" : "bf4f5a4b-fe82-4d48-b9ec-185e58fa60df",
    "prId" : 263,
    "comments" : [
      {
        "id" : "400e726d-f899-433f-951f-4859e68b3b76",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "No longer experimental.",
        "createdAt" : "2018-04-09T15:28:30Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "eb9717ef4d08ec6934f78ba760a875a8bf64e77a",
    "line" : null,
    "diffHunk" : "@@ -49,15 +49,15 @@\n     \"configuration\": {\n       \"title\": \"Metals\",\n       \"properties\": {\n-        \"metals.sbt.enabled\": {\n+        \"metals.sbt.diagnostics.enabled\": {\n           \"type\": \"boolean\",\n-          \"default\": false,\n-          \"description\": \"EXPERIMENTAL. Use sbt language server to compile on file save and report diagnostics. Requires sbt 1.1.0\"\n+          \"default\": true,\n+          \"description\": \"EXPERIMENTAL. Enable diagnostics from the sbt server. Requires a running sbt 1.1+ instance.\"\n         },\n         \"metals.sbt.command\": {\n           \"type\": \"string\",\n-          \"default\": \"test:compile\",\n-          \"description\": \"Which sbt command to run on file save.\"\n+          \"default\": \"\",\n+          \"description\": \"EXPERIMENTAL. Which sbt command to run on file save. Requires a running sbt 1.1+ instance.\""
  },
  {
    "id" : "80d50176-26b5-4be5-8fbf-c4f8534ca0ec",
    "prId" : 274,
    "comments" : [
      {
        "id" : "2ae92866-f9ff-4a03-b7d1-32d1b33a18bc",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "> Generate debug zip file to report issue\r\n\r\n?",
        "createdAt" : "2018-04-20T19:28:46Z",
        "updatedAt" : "2018-09-27T11:32:08Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "4131c4727560c4849e4a0b6eb1b5270a23a01ddd",
    "line" : 8,
    "diffHunk" : "@@ -146,6 +146,11 @@\n         \"command\": \"metals.resetPresentationCompiler\",\n         \"category\": \"Metals\",\n         \"title\": \"Reset presentation compilers\"\n+      },\n+      {\n+        \"command\": \"metals.downloadDebugPayload\",\n+        \"category\": \"Metals\",\n+        \"title\": \"Download debug payload\""
  }
]