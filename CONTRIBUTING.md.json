[
  {
    "id" : "4b920273-ba2e-4b5e-babb-6d661465d0f2",
    "prId" : 14,
    "comments" : [
      {
        "id" : "6e15b30d-a784-453e-8357-f5b9309f4861",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "What do you think about moving features section to the readme? It looks like a roadmap (btw, it could link to #2) and makes people interested in the project",
        "createdAt" : "2017-11-08T14:36:47Z",
        "updatedAt" : "2017-11-08T18:17:00Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "86cb7276-8a7e-47ba-bf54-5108b66518eb",
        "parentId" : "6e15b30d-a784-453e-8357-f5b9309f4861",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I agree with this üëç ",
        "createdAt" : "2017-11-08T15:04:56Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cfa5b1d1-03b3-4e02-8e0e-627621b90151",
        "parentId" : "6e15b30d-a784-453e-8357-f5b9309f4861",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Done.",
        "createdAt" : "2017-11-08T17:26:10Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7939bde0a143d3f1f5ebc5076a377ad6baafa86b",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,85 @@\n+# Contributing\n+\n+:warning: This project is very alpha, expect bugs!\n+These instructions are intended for contributors to get a productive workflow when developing the plugin.\n+\n+This project follows [scalameta's contribution guidelines].\n+Please read them for information about how to create good bug reports and submit pull requests.\n+\n+## Features\n+\n+- [x] Lint with Scalafix on compile\n+- [x] Formatting with Scalafmt\n+- [x] Go to definition in project sources using Semanticdb\n+- [ ] Go to definition in dependencies\n+- [ ] Red squigglies as you type\n+- [ ] Auto completions\n+- [ ] Signature helper (show parameter list)\n+- [ ] Show type at position\n+- [ ] Find references\n+- [ ] Show docstring"
  },
  {
    "id" : "7a7aeda4-d479-434b-bde0-2c0ab811d1eb",
    "prId" : 14,
    "comments" : [
      {
        "id" : "73be08f9-7eeb-454f-9866-bdc917f20c95",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I think that there should be also `npm run download-coursier` or `vscode:prepublish`, because coursier jar is assumed to be in the plugin's directory. \r\n\r\nI don't know about other npm scripts, what's `postinstall` for?",
        "createdAt" : "2017-11-08T14:40:03Z",
        "updatedAt" : "2017-11-08T18:17:00Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "362ea40e-786f-4603-a37f-62c1cd11634c",
        "parentId" : "73be08f9-7eeb-454f-9866-bdc917f20c95",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "For contributing, it's also useful to know how to run tests and what to expect from it. Sorry if it's something obvious in the npm/js/ts context, I'm just totally new to it üòÖ ",
        "createdAt" : "2017-11-08T14:55:22Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e5bf0d62-a669-4354-847a-cc61189773e8",
        "parentId" : "73be08f9-7eeb-454f-9866-bdc917f20c95",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "We currently don't have any test (currently trying to get them running in #12).\r\n\r\n`postinstall` allows the vscode to setup itself after it has been installed. It's an automatic step that runs after `install` so it's not essential in the contribution guide I think.",
        "createdAt" : "2017-11-08T15:00:34Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "33e55d55-c8f6-4d38-9582-6749515a4cc1",
        "parentId" : "73be08f9-7eeb-454f-9866-bdc917f20c95",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "OK, I see. So no other npm tasks are of interest for a contributor?",
        "createdAt" : "2017-11-08T15:15:39Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "01e5f893-8939-4ad4-ad9b-7797a655092d",
        "parentId" : "73be08f9-7eeb-454f-9866-bdc917f20c95",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I would say that `npm install` and `npm run build` are enough for most cases.",
        "createdAt" : "2017-11-08T15:37:16Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c7467332-30ac-4e77-a582-548e34f1d4cb",
        "parentId" : "73be08f9-7eeb-454f-9866-bdc917f20c95",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "@olafurpg could you still add `npm run download-coursier` before `npm install`? Because I think without it coursier will be missing.",
        "createdAt" : "2017-11-08T18:03:58Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9019051e-6f85-46b0-ace8-934464d1d7b1",
        "parentId" : "73be08f9-7eeb-454f-9866-bdc917f20c95",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Done @laughedelic I didn't need to run that command, but it's better to include more than too little üòÑ ",
        "createdAt" : "2017-11-08T18:11:55Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3f7533fb-f963-4f0f-997d-f29d7a039bb9",
        "parentId" : "73be08f9-7eeb-454f-9866-bdc917f20c95",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I think that coursier should be downloaded by the client on the first launch, so this pre-installation step won't be needed.",
        "createdAt" : "2017-11-08T18:15:15Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "517c2afa-63f3-482f-a546-caa316cdbf3a",
        "parentId" : "73be08f9-7eeb-454f-9866-bdc917f20c95",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I just added the coursier binary to the repo (it's only 20kb) so this step should no longer be needed. The binary was excluded for some reason",
        "createdAt" : "2017-11-08T18:18:34Z",
        "updatedAt" : "2017-11-08T18:18:34Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "26132c2c-5309-448b-aebb-cebee2065187",
        "parentId" : "73be08f9-7eeb-454f-9866-bdc917f20c95",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I just noticed that you added coursier to the repo",
        "createdAt" : "2017-11-08T18:18:38Z",
        "updatedAt" : "2017-11-08T18:18:38Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7939bde0a143d3f1f5ebc5076a377ad6baafa86b",
    "line" : 46,
    "diffHunk" : "@@ -0,0 +1,85 @@\n+# Contributing\n+\n+:warning: This project is very alpha, expect bugs!\n+These instructions are intended for contributors to get a productive workflow when developing the plugin.\n+\n+This project follows [scalameta's contribution guidelines].\n+Please read them for information about how to create good bug reports and submit pull requests.\n+\n+## Features\n+\n+- [x] Lint with Scalafix on compile\n+- [x] Formatting with Scalafmt\n+- [x] Go to definition in project sources using Semanticdb\n+- [ ] Go to definition in dependencies\n+- [ ] Red squigglies as you type\n+- [ ] Auto completions\n+- [ ] Signature helper (show parameter list)\n+- [ ] Show type at position\n+- [ ] Find references\n+- [ ] Show docstring\n+\n+\n+## Project structure\n+- `language-server` contains a Scala implementation of a language server\n+- `vscode-extension` contains a Visual Studio Code extension, implementing a client for the language server\n+- `test-workspace` directory for manually testing the plugin locally\n+\n+\n+## Running locally\n+\n+First you need to have the following applications installed\n+\n+- `git`\n+- `sbt`\n+- Visual Studio Code (`code` from the console)\n+- `npm`\n+\n+To try out the language-server locally, it's best to keep two open terminal\n+windows.\n+\n+```\n+git clone https://github.com/scalameta/language-server.git\n+cd language-server\n+\n+########\n+# Step 1\n+########\n+sbt\n+> language-server/publishLocal # publish your latest changes locally\n+                               # keep this sbt shell session open, and\n+                               # re-run publishLocal every time you\n+                               # edit *.scala sources.\n+\n+########\n+# Step 2\n+########\n+# Inside a new terminal window\n+cd vscode-extension\n+npm install"
  },
  {
    "id" : "756a4b24-1e37-48c7-883f-10dd0edfae62",
    "prId" : 14,
    "comments" : [
      {
        "id" : "6d030f87-bc14-4e28-9fad-2df61e966a09",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "What about scalafix? In my test project I first added these settings, then added scalafix sbt plugin and it wasn't immediately obvious that scalafix plugin includes semanticdb-scalac plugin and settings. So probably it's better to recommend here to use scalafix plugin which will also allow to try linter feature (and mention semanticdb-scalac plugin as a minimalistic alternative setting).",
        "createdAt" : "2017-11-08T14:48:17Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8fd47cd8-225a-4c76-9959-386f7575d7d5",
        "parentId" : "6d030f87-bc14-4e28-9fad-2df61e966a09",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "It's surely worth mentioning that `sbt-scalafix` enables `semanticdb-scalac`. I would tend not to recommend this way though, as it's quite confusing.\r\n\r\nI would document how to enable `semanticdb-scalac` (as it's written now) and just note that this is the same plugin used by scalafix, so if you already have that one you can skip this step.",
        "createdAt" : "2017-11-08T15:04:36Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "39a81f5d-c02b-4e4b-84ed-5c33d52b563b",
        "parentId" : "6d030f87-bc14-4e28-9fad-2df61e966a09",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Added a note on sbt-scalafix.",
        "createdAt" : "2017-11-08T17:39:16Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7939bde0a143d3f1f5ebc5076a377ad6baafa86b",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,85 @@\n+# Contributing\n+\n+:warning: This project is very alpha, expect bugs!\n+These instructions are intended for contributors to get a productive workflow when developing the plugin.\n+\n+This project follows [scalameta's contribution guidelines].\n+Please read them for information about how to create good bug reports and submit pull requests.\n+\n+## Features\n+\n+- [x] Lint with Scalafix on compile\n+- [x] Formatting with Scalafmt\n+- [x] Go to definition in project sources using Semanticdb\n+- [ ] Go to definition in dependencies\n+- [ ] Red squigglies as you type\n+- [ ] Auto completions\n+- [ ] Signature helper (show parameter list)\n+- [ ] Show type at position\n+- [ ] Find references\n+- [ ] Show docstring\n+\n+\n+## Project structure\n+- `language-server` contains a Scala implementation of a language server\n+- `vscode-extension` contains a Visual Studio Code extension, implementing a client for the language server\n+- `test-workspace` directory for manually testing the plugin locally\n+\n+\n+## Running locally\n+\n+First you need to have the following applications installed\n+\n+- `git`\n+- `sbt`\n+- Visual Studio Code (`code` from the console)\n+- `npm`\n+\n+To try out the language-server locally, it's best to keep two open terminal\n+windows.\n+\n+```\n+git clone https://github.com/scalameta/language-server.git\n+cd language-server\n+\n+########\n+# Step 1\n+########\n+sbt\n+> language-server/publishLocal # publish your latest changes locally\n+                               # keep this sbt shell session open, and\n+                               # re-run publishLocal every time you\n+                               # edit *.scala sources.\n+\n+########\n+# Step 2\n+########\n+# Inside a new terminal window\n+cd vscode-extension\n+npm install\n+code vscode-extension\n+> Debug > \"Start debugging\" (shortcut: F5)\n+          # Inside vscode, F5 will open a new window with the latest\n+          # language-server/publishLocal of the plugin installed.\n+          # Close the window and run F5 again after every\n+          # language-server/publishLocal\n+> File > Open > language-server/test-workspace (shortcut Cmd+O on MacOS)\n+          # Open the test-workspace folder in the debugging window\n+          # of vscode. Open a file in the project.\n+\n+########\n+# Step 3\n+########\n+# Inside the same terminal window as step 2\n+cd ../test-workspace\n+sbt        # Open up long running sbt shell\n+> ~compile # Compile sources on file edit\n+```\n+\n+To test the plugin on another project than `test-workspace`, you must\n+have the Scalameta `semanticdb-scalac` compiler plugin enabled.\n+See example installation in `test-workspace/build.sbt` or\n+http://scalameta.org/tutorial/#sbt"
  },
  {
    "id" : "662a5136-76b9-4128-a518-966edd254656",
    "prId" : 14,
    "comments" : [
      {
        "id" : "1637224b-f6d0-4e77-b66d-5f8387cf9a27",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I think this is  not essential, because once you run `sbt language-server/publishLocal`, you can forget about it and continue with the vscode extension.",
        "createdAt" : "2017-11-08T14:50:09Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1c89d79e-24d3-4e6d-8319-be1d9116668f",
        "parentId" : "1637224b-f6d0-4e77-b66d-5f8387cf9a27",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I'm hesitant to advertise that workflow since this guide is primarily intended for local development of the plugin. This plugin requires more work to be usable for day-to-day for novice Scala users.",
        "createdAt" : "2017-11-08T15:57:24Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "40fc840c-d634-49a4-97e4-ede11159cc44",
        "parentId" : "1637224b-f6d0-4e77-b66d-5f8387cf9a27",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I personally use two terminal windows since it avoids exiting/starting sbt between the test workspace and language-server project.",
        "createdAt" : "2017-11-08T17:26:52Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4c33b77d-8f5a-4ffe-87fa-d15b97359c29",
        "parentId" : "1637224b-f6d0-4e77-b66d-5f8387cf9a27",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Don't mind my comment, I realised that it makes sense when you simultaneously change the server code and test the client.",
        "createdAt" : "2017-11-08T18:02:42Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7939bde0a143d3f1f5ebc5076a377ad6baafa86b",
    "line" : 26,
    "diffHunk" : "@@ -0,0 +1,85 @@\n+# Contributing\n+\n+:warning: This project is very alpha, expect bugs!\n+These instructions are intended for contributors to get a productive workflow when developing the plugin.\n+\n+This project follows [scalameta's contribution guidelines].\n+Please read them for information about how to create good bug reports and submit pull requests.\n+\n+## Features\n+\n+- [x] Lint with Scalafix on compile\n+- [x] Formatting with Scalafmt\n+- [x] Go to definition in project sources using Semanticdb\n+- [ ] Go to definition in dependencies\n+- [ ] Red squigglies as you type\n+- [ ] Auto completions\n+- [ ] Signature helper (show parameter list)\n+- [ ] Show type at position\n+- [ ] Find references\n+- [ ] Show docstring\n+\n+\n+## Project structure\n+- `language-server` contains a Scala implementation of a language server\n+- `vscode-extension` contains a Visual Studio Code extension, implementing a client for the language server\n+- `test-workspace` directory for manually testing the plugin locally\n+\n+\n+## Running locally\n+\n+First you need to have the following applications installed\n+\n+- `git`\n+- `sbt`\n+- Visual Studio Code (`code` from the console)\n+- `npm`\n+\n+To try out the language-server locally, it's best to keep two open terminal\n+windows."
  },
  {
    "id" : "0accb66f-8b09-40c6-abe0-4da98d31e824",
    "prId" : 14,
    "comments" : [
      {
        "id" : "8d3eb64a-0022-4b77-af7b-356be066ff93",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "How can I install the plugin locally, so that I don't need to open it in debug mode every time? I guess it's some combination of the npm tasks/scripts?",
        "createdAt" : "2017-11-08T14:53:57Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "dea74766-52dc-4f22-800c-7290fb5e5430",
        "parentId" : "8d3eb64a-0022-4b77-af7b-356be066ff93",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Good point, it should as easy as\r\n\r\n```js\r\nnpm install\r\nnpm run build // produces a .vsxi file\r\n```\r\n\r\nThen use VSCode to install the .vsxi file.\r\n\r\nWe can add this.",
        "createdAt" : "2017-11-08T15:02:28Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1a23aa3a-565f-43ae-90bd-0af26d6e6bde",
        "parentId" : "8d3eb64a-0022-4b77-af7b-356be066ff93",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I see that `npm run build` also downloads coursier. \r\n\r\n> Then use VSCode to install the .vsxi file.\r\n\r\nI found how to do it in the GUI, but it's not very convenient. Is there a way to do it with the command line? ",
        "createdAt" : "2017-11-08T15:19:24Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bbf41de1-21cb-416b-831d-ec8931be1759",
        "parentId" : "8d3eb64a-0022-4b77-af7b-356be066ff93",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "good point, I just found out that\r\n\r\n```\r\ncode --install-extension myextension.vsix\r\n```\r\n\r\nshould work!",
        "createdAt" : "2017-11-08T15:36:40Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e626e7c5-d194-40a5-b0d2-196fcbb0bc8b",
        "parentId" : "8d3eb64a-0022-4b77-af7b-356be066ff93",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Updated.",
        "createdAt" : "2017-11-08T17:33:51Z",
        "updatedAt" : "2017-11-08T18:17:01Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7939bde0a143d3f1f5ebc5076a377ad6baafa86b",
    "line" : 55,
    "diffHunk" : "@@ -0,0 +1,85 @@\n+# Contributing\n+\n+:warning: This project is very alpha, expect bugs!\n+These instructions are intended for contributors to get a productive workflow when developing the plugin.\n+\n+This project follows [scalameta's contribution guidelines].\n+Please read them for information about how to create good bug reports and submit pull requests.\n+\n+## Features\n+\n+- [x] Lint with Scalafix on compile\n+- [x] Formatting with Scalafmt\n+- [x] Go to definition in project sources using Semanticdb\n+- [ ] Go to definition in dependencies\n+- [ ] Red squigglies as you type\n+- [ ] Auto completions\n+- [ ] Signature helper (show parameter list)\n+- [ ] Show type at position\n+- [ ] Find references\n+- [ ] Show docstring\n+\n+\n+## Project structure\n+- `language-server` contains a Scala implementation of a language server\n+- `vscode-extension` contains a Visual Studio Code extension, implementing a client for the language server\n+- `test-workspace` directory for manually testing the plugin locally\n+\n+\n+## Running locally\n+\n+First you need to have the following applications installed\n+\n+- `git`\n+- `sbt`\n+- Visual Studio Code (`code` from the console)\n+- `npm`\n+\n+To try out the language-server locally, it's best to keep two open terminal\n+windows.\n+\n+```\n+git clone https://github.com/scalameta/language-server.git\n+cd language-server\n+\n+########\n+# Step 1\n+########\n+sbt\n+> language-server/publishLocal # publish your latest changes locally\n+                               # keep this sbt shell session open, and\n+                               # re-run publishLocal every time you\n+                               # edit *.scala sources.\n+\n+########\n+# Step 2\n+########\n+# Inside a new terminal window\n+cd vscode-extension\n+npm install\n+code vscode-extension\n+> Debug > \"Start debugging\" (shortcut: F5)\n+          # Inside vscode, F5 will open a new window with the latest\n+          # language-server/publishLocal of the plugin installed.\n+          # Close the window and run F5 again after every\n+          # language-server/publishLocal\n+> File > Open > language-server/test-workspace (shortcut Cmd+O on MacOS)\n+          # Open the test-workspace folder in the debugging window\n+          # of vscode. Open a file in the project."
  },
  {
    "id" : "69ba51cc-4f69-49bc-b99d-a4cdbeaec297",
    "prId" : 196,
    "comments" : [
      {
        "id" : "e1d4526d-c20d-442f-9810-d5b22d6d0564",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "unrelated to this PR, but guess lsp4s is barely a fork anymore",
        "createdAt" : "2018-02-12T20:11:41Z",
        "updatedAt" : "2018-02-13T09:34:28Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "71b2c0246d19b6de4f086cbf655f0def15283b13",
    "line" : 6,
    "diffHunk" : "@@ -8,8 +8,8 @@ Please read them for information about how to create good bug reports and submit\n \n \n ## Project structure\n-- `languageserver` contains a Scala implementation of the [Language Server Protocol specification](https://github.com/Microsoft/language-server-protocol/blob/master/protocol.md) (this is a fork of https://github.com/dragos/dragos-vscode-scala)\n-- `metaserver` contains a Scala implementation of a language server based on Scalameta, which uses `languageserver`\n+- `lsp4s` contains a Scala implementation of the [Language Server Protocol specification](https://github.com/Microsoft/language-server-protocol/blob/master/protocol.md) (this is a fork of https://github.com/dragos/dragos-vscode-scala)"
  },
  {
    "id" : "18f605bf-0caa-45ec-8787-0833bff08417",
    "prId" : 214,
    "comments" : [
      {
        "id" : "796d31d4-cf9e-4137-be8e-cd2153e3a9b9",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "üëç ",
        "createdAt" : "2018-03-31T14:21:38Z",
        "updatedAt" : "2018-03-31T22:01:15Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "96e34e0a-03b4-44ef-b893-e89c255bf6f1",
        "parentId" : "796d31d4-cf9e-4137-be8e-cd2153e3a9b9",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "VSCode-specific part should mention that you need to install some basic Scala extension first, without it Metals extension won't get activated.",
        "createdAt" : "2018-03-31T14:25:51Z",
        "updatedAt" : "2018-03-31T22:01:15Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "db1fb19a-34ef-4d2b-88b0-1c62dff136e9",
        "parentId" : "796d31d4-cf9e-4137-be8e-cd2153e3a9b9",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Done.",
        "createdAt" : "2018-03-31T15:38:50Z",
        "updatedAt" : "2018-03-31T22:01:15Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d797e3a1-4c72-41e7-8b0a-560372713dbe",
        "parentId" : "796d31d4-cf9e-4137-be8e-cd2153e3a9b9",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "That may explain some setup issues I've had with some colleagues! Very nice catch, @laughedelic!",
        "createdAt" : "2018-03-31T17:52:07Z",
        "updatedAt" : "2018-03-31T22:01:15Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d3146fa5e1de6aea4434fb7ac94da886a8657feb",
    "line" : 57,
    "diffHunk" : "@@ -46,7 +52,7 @@ sbt\n # Inside a new terminal window\n cd vscode-extension\n npm install\n-code vscode-extension\n+code ."
  },
  {
    "id" : "9945fb94-c395-4022-b236-f886e31c161f",
    "prId" : 254,
    "comments" : [
      {
        "id" : "588f7b7f-3d37-40bf-916c-e158bbb1d0d8",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "`clean` is no longer needed",
        "createdAt" : "2018-04-05T21:58:37Z",
        "updatedAt" : "2018-04-06T14:20:48Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d7756c38-51d1-42e2-a426-7afc80cd4cc6",
        "parentId" : "588f7b7f-3d37-40bf-916c-e158bbb1d0d8",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "It could say that you should rerun it after `git pull`, because something in project build could have changed..",
        "createdAt" : "2018-04-05T22:44:08Z",
        "updatedAt" : "2018-04-06T14:20:48Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0ef699a957a5f3df25728c93719c936848a33cb4",
    "line" : null,
    "diffHunk" : "@@ -112,6 +106,7 @@ cache directory to re-trigger indexing for some reason.\n * If SymbolIndexerTest.classpath tests fail with missing definitions for `List`\n   or `CharRef`, try to run `metalsSetup` from the sbt shell and then re-run.\n   This command must be re-run after every `clean`."
  },
  {
    "id" : "87235b71-5e21-486e-a338-f9bbdf8597f0",
    "prId" : 254,
    "comments" : [
      {
        "id" : "d18ef293-3037-4b21-9f9f-4b014c65cfe1",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "üëç ",
        "createdAt" : "2018-04-05T21:59:14Z",
        "updatedAt" : "2018-04-06T14:20:48Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "73419fc3-2c61-48f8-8e15-0b13996ed1a3",
        "parentId" : "d18ef293-3037-4b21-9f9f-4b014c65cfe1",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "<kbd>‚åò</kbd> <kbd>,</kbd> on macOS üòõ (kidding, but why not: `<kbd>‚åò</kbd> <kbd>,</kbd>`)",
        "createdAt" : "2018-04-05T22:48:56Z",
        "updatedAt" : "2018-04-06T14:20:48Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0ef699a957a5f3df25728c93719c936848a33cb4",
    "line" : null,
    "diffHunk" : "@@ -121,3 +116,7 @@ cache directory to re-trigger indexing for some reason.\n   running the test suite locally. We hope to address this in the future by for\n   example moving the cache to each workspace directory or use an alternative\n   storing mechanism.\n+\n+* If you encounter \"Error: Channel has been closed\" in VSCode, open Settings (Cmd+, on macOS)"
  },
  {
    "id" : "bb49d386-8069-4a3f-9e84-fce5bcdd04e5",
    "prId" : 254,
    "comments" : [
      {
        "id" : "57d77df0-ea24-41ae-8ded-51284649f15e",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "How about making these comments a normal text? Something like this:\r\n\r\n----\r\n\r\nPublish your latest changes locally. Keep this sbt shell session open and re-run `publishLocal` every time you edit `*.scala` sources:\r\n\r\n```\r\n> metals/publishLocal\r\n```\r\n\r\n----\r\n\r\nAlso, shouldn't it be just `publishLocal` to publish also dependent modules?",
        "createdAt" : "2018-04-05T22:36:43Z",
        "updatedAt" : "2018-04-06T14:20:48Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "9248c3ce-9eeb-4d57-88ea-2c71ce0b91b2",
        "parentId" : "57d77df0-ea24-41ae-8ded-51284649f15e",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Yeah, I think text is better too (I copy pasted it from the previous guide)\r\n\r\nDoesn't `metals/publishLocal` effectively publishes also its dependencies? If not, it should definitely be `publishLocal`",
        "createdAt" : "2018-04-06T11:38:39Z",
        "updatedAt" : "2018-04-06T14:20:48Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0ef699a957a5f3df25728c93719c936848a33cb4",
    "line" : null,
    "diffHunk" : "@@ -21,35 +21,39 @@ pull requests.\n   client for the language server\n * `test-workspace` directory for manually testing the plugin locally\n \n-## Running locally\n-\n-First you need to have the following applications installed\n+## Running a local version of the server\n+You will need the following applications installed:\n \n * `git`\n * `sbt`\n * Visual Studio Code (`code` from the console)\n-* `npm`\n-\n-To try out metals locally, it's best to keep two open terminal windows.\n \n ```\n-git clone https://github.com/scalameta/metals.git\n-cd metals\n-\n-########\n-# Step 1\n-########\n sbt\n-> metals/publishLocal # publish your latest changes locally\n+> metals/publishLocal     # publish your latest changes locally\n                           # keep this sbt shell session open, and\n                           # re-run publishLocal every time you\n                           # edit *.scala sources.\n > ~testWorkspace/test:compile # compile the sources in test-workspace"
  },
  {
    "id" : "b3c6ee5f-2bb6-4dfb-9109-1a5f5a90fae5",
    "prId" : 254,
    "comments" : [
      {
        "id" : "74da1a60-089d-491b-a651-6edd5914909b",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "\"open test workspace\"? it's not metals root, right?",
        "createdAt" : "2018-04-05T22:37:51Z",
        "updatedAt" : "2018-04-06T14:20:48Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "755880be-63a0-4466-a52c-1ffd9da9bc1c",
        "parentId" : "74da1a60-089d-491b-a651-6edd5914909b",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "right, I've changed this mid-sentence",
        "createdAt" : "2018-04-06T11:38:55Z",
        "updatedAt" : "2018-04-06T14:20:48Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0ef699a957a5f3df25728c93719c936848a33cb4",
    "line" : null,
    "diffHunk" : "@@ -21,35 +21,39 @@ pull requests.\n   client for the language server\n * `test-workspace` directory for manually testing the plugin locally\n \n-## Running locally\n-\n-First you need to have the following applications installed\n+## Running a local version of the server\n+You will need the following applications installed:\n \n * `git`\n * `sbt`\n * Visual Studio Code (`code` from the console)\n-* `npm`\n-\n-To try out metals locally, it's best to keep two open terminal windows.\n \n ```\n-git clone https://github.com/scalameta/metals.git\n-cd metals\n-\n-########\n-# Step 1\n-########\n sbt\n-> metals/publishLocal # publish your latest changes locally\n+> metals/publishLocal     # publish your latest changes locally\n                           # keep this sbt shell session open, and\n                           # re-run publishLocal every time you\n                           # edit *.scala sources.\n > ~testWorkspace/test:compile # compile the sources in test-workspace\n+```\n+\n+You can then use the Metals VSCode extension published on the Marketplace, and point it to the local\n+snapshot version of the server you've just published by changing the settings:\n \n-########\n-# Step 2\n-########\n-# Inside a new terminal window\n+```json\n+\"metals.serverVersion\": \"0.2.0-SNAPSHOT\"\n+```\n+\n+Then open the metals root with VSCode (`code test-workspace` from the console) and try your changes."
  },
  {
    "id" : "34d42ce8-d1f8-4ed2-b795-0472b153a08a",
    "prId" : 254,
    "comments" : [
      {
        "id" : "596368ae-7bb1-4da7-bfbc-ddf6aff22841",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "This repeats exactly the requirements above. It could be placed above as a common \"Requirements\" section.",
        "createdAt" : "2018-04-05T22:39:53Z",
        "updatedAt" : "2018-04-06T14:20:48Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3fd318e8-4186-4b80-ba42-92577c181fb3",
        "parentId" : "596368ae-7bb1-4da7-bfbc-ddf6aff22841",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "The difference is `npm` vs `sbt`, but I guess we can factor them out.",
        "createdAt" : "2018-04-06T11:39:26Z",
        "updatedAt" : "2018-04-06T14:20:48Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0ef699a957a5f3df25728c93719c936848a33cb4",
    "line" : null,
    "diffHunk" : "@@ -21,35 +21,39 @@ pull requests.\n   client for the language server\n * `test-workspace` directory for manually testing the plugin locally\n \n-## Running locally\n-\n-First you need to have the following applications installed\n+## Running a local version of the server\n+You will need the following applications installed:\n \n * `git`\n * `sbt`\n * Visual Studio Code (`code` from the console)\n-* `npm`\n-\n-To try out metals locally, it's best to keep two open terminal windows.\n \n ```\n-git clone https://github.com/scalameta/metals.git\n-cd metals\n-\n-########\n-# Step 1\n-########\n sbt\n-> metals/publishLocal # publish your latest changes locally\n+> metals/publishLocal     # publish your latest changes locally\n                           # keep this sbt shell session open, and\n                           # re-run publishLocal every time you\n                           # edit *.scala sources.\n > ~testWorkspace/test:compile # compile the sources in test-workspace\n+```\n+\n+You can then use the Metals VSCode extension published on the Marketplace, and point it to the local\n+snapshot version of the server you've just published by changing the settings:\n \n-########\n-# Step 2\n-########\n-# Inside a new terminal window\n+```json\n+\"metals.serverVersion\": \"0.2.0-SNAPSHOT\"\n+```\n+\n+Then open the metals root with VSCode (`code test-workspace` from the console) and try your changes.\n+\n+## Running a local version of the VSCode extension\n+You will need the following applications installed:\n+\n+* `git`\n+* `npm`\n+* Visual Studio Code (`code` from the console)"
  },
  {
    "id" : "d0c64caf-2f95-4001-a48e-1df298919f38",
    "prId" : 254,
    "comments" : [
      {
        "id" : "30b388d8-d9cd-48a9-9dd4-8f402862a398",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Same as about sbt instructions: how about making these comments normal text?",
        "createdAt" : "2018-04-05T22:40:46Z",
        "updatedAt" : "2018-04-06T14:20:48Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0ef699a957a5f3df25728c93719c936848a33cb4",
    "line" : null,
    "diffHunk" : "@@ -61,28 +65,18 @@ code .\n > File > Open > metals/test-workspace (shortcut Cmd+O on macOS)\n           # Open the test-workspace folder in the debugging window\n           # of vscode. Open a file in the project.\n+```"
  },
  {
    "id" : "30eae3f0-43f9-4192-b556-92a7b7aff6a0",
    "prId" : 254,
    "comments" : [
      {
        "id" : "ae59d88f-6b35-4441-b139-156e42ef03d8",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "keep this ~~keep this~~",
        "createdAt" : "2018-04-06T12:46:43Z",
        "updatedAt" : "2018-04-06T14:20:48Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "882a6129-2327-402b-8486-0537b78f0f6e",
        "parentId" : "ae59d88f-6b35-4441-b139-156e42ef03d8",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "keep this keep this keep this keep this",
        "createdAt" : "2018-04-06T13:08:12Z",
        "updatedAt" : "2018-04-06T14:20:48Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0ef699a957a5f3df25728c93719c936848a33cb4",
    "line" : null,
    "diffHunk" : "@@ -21,55 +21,76 @@ pull requests.\n   client for the language server\n * `test-workspace` directory for manually testing the plugin locally\n \n-## Running a local version of the server\n+## Prerequisites\n You will need the following applications installed:\n \n * `git`\n-* `sbt`\n+* `sbt` (for building a local version of the server)\n+* `npm` (for building a local version of the VSCode extension)\n * Visual Studio Code (`code` from the console)\n \n+## Running a local version of the server\n+Open a sbt shell session with\n+\n ```\n sbt\n-> metals/publishLocal     # publish your latest changes locally\n-                          # keep this sbt shell session open, and\n-                          # re-run publishLocal every time you\n-                          # edit *.scala sources.\n-> ~testWorkspace/test:compile # compile the sources in test-workspace\n ```\n \n-You can then use the Metals VSCode extension published on the Marketplace, and point it to the local\n-snapshot version of the server you've just published by changing the settings:\n+We recommend to keep this keep this sbt shell session open."
  },
  {
    "id" : "076c91e3-e63a-41f3-94e5-329b20c1e1f4",
    "prId" : 254,
    "comments" : [
      {
        "id" : "43b923d5-876e-4e46-9d80-0f38d4f00076",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Sure not `bash`? :trollface: ",
        "createdAt" : "2018-04-06T12:48:02Z",
        "updatedAt" : "2018-04-06T14:20:48Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0ef699a957a5f3df25728c93719c936848a33cb4",
    "line" : null,
    "diffHunk" : "@@ -21,55 +21,76 @@ pull requests.\n   client for the language server\n * `test-workspace` directory for manually testing the plugin locally\n \n-## Running a local version of the server\n+## Prerequisites\n You will need the following applications installed:\n \n * `git`\n-* `sbt`\n+* `sbt` (for building a local version of the server)\n+* `npm` (for building a local version of the VSCode extension)\n * Visual Studio Code (`code` from the console)\n \n+## Running a local version of the server\n+Open a sbt shell session with\n+\n ```\n sbt\n-> metals/publishLocal     # publish your latest changes locally\n-                          # keep this sbt shell session open, and\n-                          # re-run publishLocal every time you\n-                          # edit *.scala sources.\n-> ~testWorkspace/test:compile # compile the sources in test-workspace\n ```\n \n-You can then use the Metals VSCode extension published on the Marketplace, and point it to the local\n-snapshot version of the server you've just published by changing the settings:\n+We recommend to keep this keep this sbt shell session open.\n+\n+Publish your latest changes locally and re-run every time you edit *.scala sources.\n+```\n+sbt\n+> ~publishLocal\n+```\n+\n+When you're ready to try your new server, compile the sources in test-workspace\n+\n+```\n+> ~testWorkspace/test:compile\n+```\n+\n+You can then use the Metals VSCode extension [published on the Marketplace](https://marketplace.visualstudio.com/items?itemName=scalameta.metals),\n+and point it to the local snapshot version of the server you've just published by changing the\n+setting (<kbd>CMD</kbd> + <kbd>,</kbd> on macOS):\n \n ```json\n-\"metals.serverVersion\": \"0.2.0-SNAPSHOT\"\n+\"metals.serverVersion\": \"<SNAPSHOT_VERSION>\"\n ```\n \n-Then open the metals root with VSCode (`code test-workspace` from the console) and try your changes.\n+Change `<SNAPSHOT_VERSION>` according to the published snapshot on your machine.\n+\n+Then open the `test-workspace` project with VSCode (`code test-workspace` from the console)\n+and try your changes.\n \n ## Running a local version of the VSCode extension\n-You will need the following applications installed:\n \n-* `git`\n-* `npm`\n-* Visual Studio Code (`code` from the console)\n+Install the extension dependencies\n \n-```\n+```sh"
  },
  {
    "id" : "8bc4dd09-0315-40d8-b2cf-df1ae28b3f54",
    "prId" : 294,
    "comments" : [
      {
        "id" : "464c4908-237a-4791-89f8-fdacc795370b",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "üëç ",
        "createdAt" : "2018-05-08T07:21:29Z",
        "updatedAt" : "2018-05-08T16:31:25Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c40a1413bb611d9c7cbe341adbcd54306b22398b",
    "line" : 144,
    "diffHunk" : "@@ -1,143 +1,3 @@\n # Contributing\n \n-:warning: This project is very alpha, expect bugs! These instructions are\n-intended for contributors to get a productive workflow when developing the\n-plugin.\n-\n-If anything isn't clear, please open an issue or\n-[ask on [gitter](https://gitter.im/scalameta/metals)].\n-\n-This project follows\n-[Scalameta's contribution guidelines](https://github.com/scalameta/scalameta/blob/master/CONTRIBUTING.md).\n-Please read them for information about how to create good bug reports and submit\n-pull requests.\n-\n-## Project structure\n-\n-* `lsp4s` contains a Scala implementation of the\n-  [Language Server Protocol specification](https://github.com/Microsoft/language-server-protocol/blob/master/protocol.md)\n-* `metals` contains a Scala implementation of a language server based on\n-  Scalameta, which uses `lsp4s`\n-* `vscode-extension` contains a Visual Studio Code extension, implementing a\n-  client for the language server\n-* `test-workspace` directory for manually testing the plugin locally\n-\n-## Prerequisites\n-You will need the following applications installed:\n-\n-* `git`\n-* `sbt` (for building a local version of the server)\n-* `npm` (for building a local version of the VSCode extension)\n-* Visual Studio Code (`code` from the console)\n-\n-## Running a local version of the server\n-Open a sbt shell session with\n-\n-```\n-sbt\n-```\n-\n-We recommend to keep this sbt shell session open.\n-\n-Publish your latest changes locally and re-run every time you edit *.scala sources.\n-```\n-sbt\n-> ~publishLocal\n-```\n-\n-When you're ready to try your new server, compile the sources in test-workspace\n-\n-```\n-> ~testWorkspace/test:compile\n-```\n-\n-You can then use the Metals VSCode extension [published on the Marketplace](https://marketplace.visualstudio.com/items?itemName=scalameta.metals),\n-and point it to the local snapshot version of the server you've just published by changing the\n-setting (<kbd>CMD</kbd> + <kbd>,</kbd> on macOS):\n-\n-```json\n-\"metals.serverVersion\": \"SNAPSHOT\"\n-```\n-\n-Then open the `test-workspace` project with VSCode (`code test-workspace` from the console)\n-and try your changes.\n-\n-## Running a local version of the VSCode extension\n-\n-Install the extension dependencies\n-\n-```sh\n-cd vscode-extension\n-npm install\n-```\n-\n-Then open the project\n-\n-```sh\n-code .\n-```\n-\n-and start a debugging session (`Debug > Start debuggin` or `F5`)\n-\n-This will open new VSCode window with the latest version of the plugin installed.\n-(If you also have the plugin from the Marketplace installed, you will get a warning. This is normal)\n-\n-Then open the `test-workspace` directory (<kbd>CMD</kbd> + <kbd>O</kdb> on macOS) and open a Scala\n-file. Metals will now start, and you should see the features working after a few seconds.\n-\n-Close the window and run F5 again after every `publishLocal` of the server.\n-\n-You can optionally build the modified extension and install it for your regular VSCode.\n-\n-```sh\n-npm run build # builds a .vsix extension file\n-code --install-extension metals-0.1.0.vsix # or whatever the name is\n-```\n-\n-To test the plugin on another project than `test-workspace`, you must have the\n-Scalameta `semanticdb-scalac` compiler plugin enabled.\n-Refer to the [installation instructions](/docs/installation.md) for details on how to enable it.\n-\n-## Unit tests\n-\n-So far, we manually test the integration with vscode/LSP. However, we have a few\n-unit tests for the parts unrelated to LSP or vscode. To run these tests,\n-\n-```\n-sbt\n-> metals/test                     # Run all unit tests\n-> metals/testOnly -- tests.mtags  # Only test the mtags tests\n-> metals/testOnly -- tests.search # Only test the symbol indexer tests\n-```\n-\n-## Clearing index cache\n-\n-This project caches globally in the computed symbol indices from your source\n-classpath. This is done to prevent reindexing large dependencies like the JDK\n-(which has ~2.5 million lines of code) on every editor startup. This directory\n-where this cache is stored depends on your OS and is computed using\n-[soc/directories](https://github.com/soc/directories) using the project name\n-\"metals\". For example, on a Mac this directory is ~/Library/Caches/metals/.\n-While developing this project, you may encounter the need to need `rm -rf` this\n-cache directory to re-trigger indexing for some reason.\n-\n-## Troubleshooting\n-\n-* To view errors logs in VSCode, go to Help > Toggle Developer Tools > Console.\n-\n-* If SymbolIndexerTest.classpath tests fail with missing definitions for `List`\n-  or `CharRef`, try to run `metalsSetup` from the sbt shell and then re-run.\n-\n-* If you get the following error\n-\n-      org.fusesource.leveldbjni.internal.NativeDB$DBException: IO error: lock /path/to/Library/Cache/metals\n-\n-  that means you are running two metals instances that are competing for the\n-  same lock on the global cache. Try to turn off your editor (vscode/atom) while\n-  running the test suite locally. We hope to address this in the future by for\n-  example moving the cache to each workspace directory or use an alternative\n-  storing mechanism.\n-\n-* If you encounter `Error: Channel has been closed` in VSCode console and nothing seems to be working, open Settings\n-(<kbd>CMD</kbd> + <kbd>,</kbd> on macOS)\n-and make sure the `\"metals.serverVersion\"` setting points to full version string of the server you have installed, or another existing version of the server (either locally or remotely published).\n+Please refer to the documentation for contributors [on our website](https://scalameta.org/metals/docs/getting-started-contributors.html#troubleshooting)."
  }
]