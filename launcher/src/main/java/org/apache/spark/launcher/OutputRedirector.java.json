[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "This module shouldn't really depend on any 3rd-party libraries... there's an oddity in the current parent pom that causes this dependency to be available but I think we should instead fix that by adding this property to launcher/pom.xml:\r\n\r\n```\r\n    <hadoop.deps.scope>test</hadoop.deps.scope>\r\n```\r\n\r\n`containsIgnoreCase` shouldn't really be hard to replicate. Although, if you really want to simplify things, I'd just set the error in this case to a generic \"Spark exited with error code X. Please check logs.\".",
    "commit": "9240b77078936dceaaa4a68f6a54c5c0c16aab73",
    "createdAt": "2018-08-14T22:15:36Z",
    "diffHunk": "@@ -17,6 +17,8 @@\n \n package org.apache.spark.launcher;\n \n+import org.apache.commons.lang.StringUtils;"
  }, {
    "author": {
      "login": "sahilTakiar"
    },
    "body": "copied the code into a helper method",
    "commit": "9240b77078936dceaaa4a68f6a54c5c0c16aab73",
    "createdAt": "2018-08-30T17:10:42Z",
    "diffHunk": "@@ -17,6 +17,8 @@\n \n package org.apache.spark.launcher;\n \n+import org.apache.commons.lang.StringUtils;"
  }],
  "prId": 21849
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "nit: group the conditions so people don't have to remember how precedence work. Also it looks better if you keep the whole call to `containsIgnoreCase` in the same line.\r\n\r\nWouldn't you want to keep the last error, though, instead of the first one?",
    "commit": "9240b77078936dceaaa4a68f6a54c5c0c16aab73",
    "createdAt": "2018-09-07T19:06:27Z",
    "diffHunk": "@@ -61,6 +62,10 @@ private void redirect() {\n       while ((line = reader.readLine()) != null) {\n         if (active) {\n           sink.info(line.replaceFirst(\"\\\\s*$\", \"\"));\n+          if (error == null && containsIgnoreCase(line, \"Error\") || containsIgnoreCase(line,",
    "line": 12
  }],
  "prId": 21849
}]