[{
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "please add description\n",
    "commit": "10513ec4a1cee2de26104945dc2eae54efeed9d2",
    "createdAt": "2016-09-12T14:10:10Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.launcher;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.List;\n+",
    "line": 23
  }, {
    "author": {
      "login": "kishorvpatil"
    },
    "body": "Done\n",
    "commit": "10513ec4a1cee2de26104945dc2eae54efeed9d2",
    "createdAt": "2016-10-19T22:33:06Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.launcher;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.List;\n+",
    "line": 23
  }],
  "prId": 15009
}, {
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "add newline above javadoc\n",
    "commit": "10513ec4a1cee2de26104945dc2eae54efeed9d2",
    "createdAt": "2016-09-12T14:10:45Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.launcher;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.List;\n+\n+class SparkSubmitRunner implements Runnable {\n+  private Method main;\n+  private final List<String> args;\n+\n+  SparkSubmitRunner(Method main, List<String> args) {\n+    this.main = main;\n+    this.args = args;\n+  }\n+  /**"
  }],
  "prId": 15009
}, {
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "space after if\n",
    "commit": "10513ec4a1cee2de26104945dc2eae54efeed9d2",
    "createdAt": "2016-09-12T14:11:15Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.launcher;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.List;\n+\n+class SparkSubmitRunner implements Runnable {\n+  private Method main;\n+  private final List<String> args;\n+\n+  SparkSubmitRunner(Method main, List<String> args) {\n+    this.main = main;\n+    this.args = args;\n+  }\n+  /**\n+   *  Trying to see if method is available in the classpath.\n+   */\n+  protected static Method getSparkSubmitMain() throws ClassNotFoundException, NoSuchMethodException {\n+      Class<?> cls = Class.forName(\"org.apache.spark.deploy.SparkSubmit\");\n+      return cls.getDeclaredMethod(\"main\", String[].class);\n+  }\n+\n+  @Override\n+  public void run() {\n+    try {\n+      if(main == null) {"
  }],
  "prId": 15009
}, {
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "specify what method is (\"org.apache.spark.deploy.SparkSubmit\"\n",
    "commit": "10513ec4a1cee2de26104945dc2eae54efeed9d2",
    "createdAt": "2016-09-12T14:11:34Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.launcher;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.List;\n+\n+class SparkSubmitRunner implements Runnable {\n+  private Method main;\n+  private final List<String> args;\n+\n+  SparkSubmitRunner(Method main, List<String> args) {\n+    this.main = main;\n+    this.args = args;\n+  }\n+  /**\n+   *  Trying to see if method is available in the classpath."
  }],
  "prId": 15009
}, {
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "is there a reason to catch these since we are catching all Exception below and doing same thign?\n",
    "commit": "10513ec4a1cee2de26104945dc2eae54efeed9d2",
    "createdAt": "2016-09-12T14:56:07Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.launcher;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.List;\n+\n+class SparkSubmitRunner implements Runnable {\n+  private Method main;\n+  private final List<String> args;\n+\n+  SparkSubmitRunner(Method main, List<String> args) {\n+    this.main = main;\n+    this.args = args;\n+  }\n+  /**\n+   *  Trying to see if method is available in the classpath.\n+   */\n+  protected static Method getSparkSubmitMain() throws ClassNotFoundException, NoSuchMethodException {\n+      Class<?> cls = Class.forName(\"org.apache.spark.deploy.SparkSubmit\");\n+      return cls.getDeclaredMethod(\"main\", String[].class);\n+  }\n+\n+  @Override\n+  public void run() {\n+    try {\n+      if(main == null) {\n+        main = getSparkSubmitMain();\n+      }\n+      Object argsObj = args.toArray(new String[args.size()]);\n+      main.invoke(null, argsObj);\n+    } catch (IllegalAccessException illAcEx) {"
  }, {
    "author": {
      "login": "kishorvpatil"
    },
    "body": "This is to simply enable early fail is `SparkSubmit` is not in classpath, instead of launched `SparkSubmitRunner` thread finding the classpath issue.\n",
    "commit": "10513ec4a1cee2de26104945dc2eae54efeed9d2",
    "createdAt": "2016-10-19T22:12:52Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.launcher;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.List;\n+\n+class SparkSubmitRunner implements Runnable {\n+  private Method main;\n+  private final List<String> args;\n+\n+  SparkSubmitRunner(Method main, List<String> args) {\n+    this.main = main;\n+    this.args = args;\n+  }\n+  /**\n+   *  Trying to see if method is available in the classpath.\n+   */\n+  protected static Method getSparkSubmitMain() throws ClassNotFoundException, NoSuchMethodException {\n+      Class<?> cls = Class.forName(\"org.apache.spark.deploy.SparkSubmit\");\n+      return cls.getDeclaredMethod(\"main\", String[].class);\n+  }\n+\n+  @Override\n+  public void run() {\n+    try {\n+      if(main == null) {\n+        main = getSparkSubmitMain();\n+      }\n+      Object argsObj = args.toArray(new String[args.size()]);\n+      main.invoke(null, argsObj);\n+    } catch (IllegalAccessException illAcEx) {"
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "You can simplify all this by doing:\n\n```\ncatch (RuntimeException re) {\n  throw re;\n} catch (Exception e) {\n  throw new RuntimeException(e);\n}\n```\n",
    "commit": "10513ec4a1cee2de26104945dc2eae54efeed9d2",
    "createdAt": "2016-10-24T21:43:58Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.launcher;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.List;\n+\n+class SparkSubmitRunner implements Runnable {\n+  private Method main;\n+  private final List<String> args;\n+\n+  SparkSubmitRunner(Method main, List<String> args) {\n+    this.main = main;\n+    this.args = args;\n+  }\n+  /**\n+   *  Trying to see if method is available in the classpath.\n+   */\n+  protected static Method getSparkSubmitMain() throws ClassNotFoundException, NoSuchMethodException {\n+      Class<?> cls = Class.forName(\"org.apache.spark.deploy.SparkSubmit\");\n+      return cls.getDeclaredMethod(\"main\", String[].class);\n+  }\n+\n+  @Override\n+  public void run() {\n+    try {\n+      if(main == null) {\n+        main = getSparkSubmitMain();\n+      }\n+      Object argsObj = args.toArray(new String[args.size()]);\n+      main.invoke(null, argsObj);\n+    } catch (IllegalAccessException illAcEx) {"
  }],
  "prId": 15009
}, {
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "relies on the SparkSubmit main class being in the classpath.",
    "commit": "10513ec4a1cee2de26104945dc2eae54efeed9d2",
    "createdAt": "2017-02-09T14:32:10Z",
    "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.launcher;\n+\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import java.util.List;\n+\n+/**\n+ * This class used to by {@link SparkLauncher#startApplicationAsThread(SparkAppHandle.Listener...)}\n+ * <p>\n+ * This class to start Spark applications programmatically as a Thread. This uses reflection and relies\n+ * on find SparkSubmit main class."
  }],
  "prId": 15009
}]