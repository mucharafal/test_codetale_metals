[{
  "comments": [{
    "author": {
      "login": "rezasafi"
    },
    "body": "Just maybe a LOG.debug that shows an in-process app is started will be useful.",
    "commit": "5dd5b5db112ac99f3e70ce50db5e5196379c3610",
    "createdAt": "2017-12-13T00:25:22Z",
    "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.launcher;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Modifier;\n+import java.util.List;\n+import java.util.logging.Logger;\n+\n+/**\n+ * In-process launcher for Spark applications.\n+ * <p>\n+ * Use this class to start Spark applications programmatically. Applications launched using this\n+ * class will run in the same process as the caller.\n+ * <p>\n+ * Because Spark only supports a single active instance of <code>SparkContext</code> per JVM, code\n+ * that uses this class should be careful about which applications are launched. It's recommended\n+ * that this launcher only be used to launch applications in cluster mode.\n+ * <p>\n+ * Also note that, when running applications in client mode, JVM-related configurations (like\n+ * driver memory or configs which modify the driver's class path) do not take effect. Logging\n+ * configuration is also inherited from the parent application.\n+ *\n+ * @since Spark 2.3.0\n+ */\n+public class InProcessLauncher extends AbstractLauncher<InProcessLauncher> {\n+\n+  private static final Logger LOG = Logger.getLogger(InProcessLauncher.class.getName());\n+\n+  /**\n+   * Starts a Spark application.\n+   *\n+   * @see AbstractLauncher#startApplication(SparkAppHandle.Listener...)\n+   * @param listeners Listeners to add to the handle before the app is launched.\n+   * @return A handle for the launched application.\n+   */\n+  @Override\n+  public SparkAppHandle startApplication(SparkAppHandle.Listener... listeners) throws IOException {\n+    if (builder.isClientMode(builder.getEffectiveConfig())) {\n+      LOG.warning(\"It's not recommended to run client-mode applications using InProcessLauncher.\");\n+    }\n+",
    "line": 58
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "You'll already get a ton of logs from SparkSubmit (or an exception if it doesn't run).",
    "commit": "5dd5b5db112ac99f3e70ce50db5e5196379c3610",
    "createdAt": "2017-12-13T18:42:43Z",
    "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.launcher;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.Modifier;\n+import java.util.List;\n+import java.util.logging.Logger;\n+\n+/**\n+ * In-process launcher for Spark applications.\n+ * <p>\n+ * Use this class to start Spark applications programmatically. Applications launched using this\n+ * class will run in the same process as the caller.\n+ * <p>\n+ * Because Spark only supports a single active instance of <code>SparkContext</code> per JVM, code\n+ * that uses this class should be careful about which applications are launched. It's recommended\n+ * that this launcher only be used to launch applications in cluster mode.\n+ * <p>\n+ * Also note that, when running applications in client mode, JVM-related configurations (like\n+ * driver memory or configs which modify the driver's class path) do not take effect. Logging\n+ * configuration is also inherited from the parent application.\n+ *\n+ * @since Spark 2.3.0\n+ */\n+public class InProcessLauncher extends AbstractLauncher<InProcessLauncher> {\n+\n+  private static final Logger LOG = Logger.getLogger(InProcessLauncher.class.getName());\n+\n+  /**\n+   * Starts a Spark application.\n+   *\n+   * @see AbstractLauncher#startApplication(SparkAppHandle.Listener...)\n+   * @param listeners Listeners to add to the handle before the app is launched.\n+   * @return A handle for the launched application.\n+   */\n+  @Override\n+  public SparkAppHandle startApplication(SparkAppHandle.Listener... listeners) throws IOException {\n+    if (builder.isClientMode(builder.getEffectiveConfig())) {\n+      LOG.warning(\"It's not recommended to run client-mode applications using InProcessLauncher.\");\n+    }\n+",
    "line": 58
  }],
  "prId": 19591
}]