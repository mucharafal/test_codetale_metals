[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "so we should set the state to `KILLED` once the `kill` method is called? Even the code below fails(throw exception), the state should still be `KILLED`?",
    "commit": "95bac2773ee7adab9f57aa4377ff2e998353f02f",
    "createdAt": "2018-01-19T02:26:18Z",
    "diffHunk": "@@ -48,14 +48,16 @@ public synchronized void disconnect() {\n \n   @Override\n   public synchronized void kill() {\n-    disconnect();\n-    if (childProc != null) {\n-      if (childProc.isAlive()) {\n-        childProc.destroyForcibly();\n+    if (!isDisposed()) {\n+      setState(State.KILLED);",
    "line": 9
  }, {
    "author": {
      "login": "gengliangwang"
    },
    "body": "+1ï¼ŒI have the same question in last review. We should figure it out.",
    "commit": "95bac2773ee7adab9f57aa4377ff2e998353f02f",
    "createdAt": "2018-01-19T07:12:45Z",
    "diffHunk": "@@ -48,14 +48,16 @@ public synchronized void disconnect() {\n \n   @Override\n   public synchronized void kill() {\n-    disconnect();\n-    if (childProc != null) {\n-      if (childProc.isAlive()) {\n-        childProc.destroyForcibly();\n+    if (!isDisposed()) {\n+      setState(State.KILLED);",
    "line": 9
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "None of the calls below should raise exceptions. Even the socket close is wrapped in a try..catch.",
    "commit": "95bac2773ee7adab9f57aa4377ff2e998353f02f",
    "createdAt": "2018-01-19T18:13:51Z",
    "diffHunk": "@@ -48,14 +48,16 @@ public synchronized void disconnect() {\n \n   @Override\n   public synchronized void kill() {\n-    disconnect();\n-    if (childProc != null) {\n-      if (childProc.isAlive()) {\n-        childProc.destroyForcibly();\n+    if (!isDisposed()) {\n+      setState(State.KILLED);",
    "line": 9
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "Even the order doesn't matter, I think it's more conventional to set the state at the end.",
    "commit": "95bac2773ee7adab9f57aa4377ff2e998353f02f",
    "createdAt": "2018-01-22T05:31:04Z",
    "diffHunk": "@@ -48,14 +48,16 @@ public synchronized void disconnect() {\n \n   @Override\n   public synchronized void kill() {\n-    disconnect();\n-    if (childProc != null) {\n-      if (childProc.isAlive()) {\n-        childProc.destroyForcibly();\n+    if (!isDisposed()) {\n+      setState(State.KILLED);",
    "line": 9
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "Then the comment I made in the previous PR applies. Closing the socket / killing the child can have other implications (like changing the state) and it's easier to reason about what happens if the desired state change happens first.",
    "commit": "95bac2773ee7adab9f57aa4377ff2e998353f02f",
    "createdAt": "2018-01-22T17:47:20Z",
    "diffHunk": "@@ -48,14 +48,16 @@ public synchronized void disconnect() {\n \n   @Override\n   public synchronized void kill() {\n-    disconnect();\n-    if (childProc != null) {\n-      if (childProc.isAlive()) {\n-        childProc.destroyForcibly();\n+    if (!isDisposed()) {\n+      setState(State.KILLED);",
    "line": 9
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "ok makes sense.",
    "commit": "95bac2773ee7adab9f57aa4377ff2e998353f02f",
    "createdAt": "2018-01-23T01:15:44Z",
    "diffHunk": "@@ -48,14 +48,16 @@ public synchronized void disconnect() {\n \n   @Override\n   public synchronized void kill() {\n-    disconnect();\n-    if (childProc != null) {\n-      if (childProc.isAlive()) {\n-        childProc.destroyForcibly();\n+    if (!isDisposed()) {\n+      setState(State.KILLED);",
    "line": 9
  }],
  "prId": 20297
}]