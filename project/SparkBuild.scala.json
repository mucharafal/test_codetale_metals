[{
  "comments": [{
    "author": {
      "login": "markhamstra"
    },
    "body": "https://cwiki.apache.org/confluence/display/SPARK/Spark+Code+Style+Guide#SparkCodeStyleGuide-Imports\n",
    "commit": "5d3d8a889cb788de0a7570e2e59b211818453a86",
    "createdAt": "2014-05-09T18:24:58Z",
    "diffHunk": "@@ -16,17 +16,18 @@\n  */\n \n import sbt._\n-import sbt.Classpaths.publishTask\n-import sbt.Keys._\n+import Keys._\n+import Classpaths.publishTask\n import sbtassembly.Plugin._\n import AssemblyKeys._\n-import scala.util.Properties\n+import util.Properties"
  }, {
    "author": {
      "login": "jaceklaskowski"
    },
    "body": "Thanks! Will keep that in mind when sending patches in the future.\n",
    "commit": "5d3d8a889cb788de0a7570e2e59b211818453a86",
    "createdAt": "2014-05-09T18:51:09Z",
    "diffHunk": "@@ -16,17 +16,18 @@\n  */\n \n import sbt._\n-import sbt.Classpaths.publishTask\n-import sbt.Keys._\n+import Keys._\n+import Classpaths.publishTask\n import sbtassembly.Plugin._\n import AssemblyKeys._\n-import scala.util.Properties\n+import util.Properties"
  }, {
    "author": {
      "login": "jaceklaskowski"
    },
    "body": "Fixed\n",
    "commit": "5d3d8a889cb788de0a7570e2e59b211818453a86",
    "createdAt": "2014-05-11T10:29:17Z",
    "diffHunk": "@@ -16,17 +16,18 @@\n  */\n \n import sbt._\n-import sbt.Classpaths.publishTask\n-import sbt.Keys._\n+import Keys._\n+import Classpaths.publishTask\n import sbtassembly.Plugin._\n import AssemblyKeys._\n-import scala.util.Properties\n+import util.Properties"
  }],
  "prId": 706
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "This is a tangential question. Is this more idiomatic scala? I've seen fold as an alternative to if-else or use of Option, but had thought it harder to understand.\n",
    "commit": "5d3d8a889cb788de0a7570e2e59b211818453a86",
    "createdAt": "2014-05-11T10:45:11Z",
    "diffHunk": "@@ -297,7 +273,7 @@ object SparkBuild extends Build {\n   val chillVersion = \"0.3.6\"\n   val codahaleMetricsVersion = \"3.0.0\"\n   val jblasVersion = \"1.2.3\"\n-  val jets3tVersion = if (\"^2\\\\.[3-9]+\".r.findFirstIn(hadoopVersion).isDefined) \"0.9.0\" else \"0.7.1\"\n+  val jets3tVersion = \"^2\\\\.[3-9]+\".r.findFirstIn(hadoopVersion).fold(\"0.7.1\")(_ => \"0.9.0\")",
    "line": 265
  }, {
    "author": {
      "login": "jaceklaskowski"
    },
    "body": "I myself learnt it not so long ago and noticed it spurred some discussions about it in the Scala community (with [Martin Ordersky himself](http://stackoverflow.com/a/5332657/1305344)).\n\n[Functional Programming in Scala](http://www.manning.com/bjarnason/) reads on page 69 (in the pdf version):\n\n_\"Itâ€™s fine to use pattern matching, though you should be able to implement all the functions besides map and getOrElse without resorting to pattern matching.\"_\n\nSo I followed the advice and applied `Option.map(...).getOrElse(...)` quite intensively, but...IntelliJ IDEA just before I committed the change had suggested to replace it with `fold`. I thought I needed to change my habits once more and sent the PR with what IDEA offered.\n\nWith all that said, it's not clear what's the most idiomatic approach, but [pattern matching is in my opinion a step back from map/getOrElse](https://github.com/scala/scala/blob/2.12.x/src/library/scala/Option.scala#L156) and there's no need for it.\n\nI'd appreciate being corrected and could even replace `Option.fold` with `Option.map`/`Option.getOrElse` if that would make the PR better for more committers.\n",
    "commit": "5d3d8a889cb788de0a7570e2e59b211818453a86",
    "createdAt": "2014-05-11T11:15:29Z",
    "diffHunk": "@@ -297,7 +273,7 @@ object SparkBuild extends Build {\n   val chillVersion = \"0.3.6\"\n   val codahaleMetricsVersion = \"3.0.0\"\n   val jblasVersion = \"1.2.3\"\n-  val jets3tVersion = if (\"^2\\\\.[3-9]+\".r.findFirstIn(hadoopVersion).isDefined) \"0.9.0\" else \"0.7.1\"\n+  val jets3tVersion = \"^2\\\\.[3-9]+\".r.findFirstIn(hadoopVersion).fold(\"0.7.1\")(_ => \"0.9.0\")",
    "line": 265
  }, {
    "author": {
      "login": "markhamstra"
    },
    "body": "We discussed this a while ago, soon after Spark development moved to Scala 2.10.  The overwhelming preference was that we use map/getOrElse instead of fold.  When working on Spark, consider turning off that particular inspection and warning in the IntelliJ preferences.\n",
    "commit": "5d3d8a889cb788de0a7570e2e59b211818453a86",
    "createdAt": "2014-05-11T15:56:30Z",
    "diffHunk": "@@ -297,7 +273,7 @@ object SparkBuild extends Build {\n   val chillVersion = \"0.3.6\"\n   val codahaleMetricsVersion = \"3.0.0\"\n   val jblasVersion = \"1.2.3\"\n-  val jets3tVersion = if (\"^2\\\\.[3-9]+\".r.findFirstIn(hadoopVersion).isDefined) \"0.9.0\" else \"0.7.1\"\n+  val jets3tVersion = \"^2\\\\.[3-9]+\".r.findFirstIn(hadoopVersion).fold(\"0.7.1\")(_ => \"0.9.0\")",
    "line": 265
  }],
  "prId": 706
}, {
  "comments": [{
    "author": {
      "login": "pwendell"
    },
    "body": "Hm actually let me step back. Is this change purporting to make the style better, or is there a functionality change?\n",
    "commit": "5d3d8a889cb788de0a7570e2e59b211818453a86",
    "createdAt": "2014-05-13T01:43:00Z",
    "diffHunk": "@@ -55,81 +58,77 @@ object SparkBuild extends Build {\n   val SCALAC_JVM_VERSION = \"jvm-1.6\"\n   val JAVAC_JVM_VERSION = \"1.6\"\n \n-  lazy val root = Project(\"root\", file(\".\"), settings = rootSettings) aggregate(allProjects: _*)\n+  lazy val root = project in file(\".\") settings (rootSettings: _*) aggregate(allProjects: _*)",
    "line": 33
  }],
  "prId": 706
}]