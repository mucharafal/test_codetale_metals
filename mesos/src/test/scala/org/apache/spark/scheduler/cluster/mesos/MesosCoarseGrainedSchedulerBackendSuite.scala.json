[{
  "comments": [{
    "author": {
      "login": "tnachen"
    },
    "body": "s/supports setting fetcher/supports setting fetcher cache/g\n",
    "commit": "7195c6e76164dc01f71e78e98cb2a6438497266d",
    "createdAt": "2016-10-10T22:36:08Z",
    "diffHunk": "@@ -463,6 +463,21 @@ class MesosCoarseGrainedSchedulerBackendSuite extends SparkFunSuite\n     assert(launchedTasks.head.getCommand.getUrisList.asScala(0).getValue == url)\n   }\n \n+  test(\"mesos supports setting fetcher\") {"
  }, {
    "author": {
      "login": "drcrallen"
    },
    "body": "fixed\n",
    "commit": "7195c6e76164dc01f71e78e98cb2a6438497266d",
    "createdAt": "2016-10-11T02:15:55Z",
    "diffHunk": "@@ -463,6 +463,21 @@ class MesosCoarseGrainedSchedulerBackendSuite extends SparkFunSuite\n     assert(launchedTasks.head.getCommand.getUrisList.asScala(0).getValue == url)\n   }\n \n+  test(\"mesos supports setting fetcher\") {"
  }],
  "prId": 13713
}, {
  "comments": [{
    "author": {
      "login": "mgummelt"
    },
    "body": "??\n",
    "commit": "7195c6e76164dc01f71e78e98cb2a6438497266d",
    "createdAt": "2016-10-11T17:34:11Z",
    "diffHunk": "@@ -463,6 +463,21 @@ class MesosCoarseGrainedSchedulerBackendSuite extends SparkFunSuite\n     assert(launchedTasks.head.getCommand.getUrisList.asScala(0).getValue == url)\n   }\n \n+  test(\"mesos supports setting fetcher cache\") {\n+    val url = \"spark.spark.spark.com\"\n+    setBackend(Map(\n+      \"spark.mesos.fetchCache.enable\" -> \"true\",\n+      \"spark.executor.uri\" -> url\n+    ), false)\n+    val offers = List(Resources(backend.executorMemory(sc), 1))\n+    offerResources(offers)\n+    // Don't crash!"
  }, {
    "author": {
      "login": "drcrallen"
    },
    "body": "it originally didn't do much except check that it didn't fail. I have since added proper checking of the task info for if the fetcher cache was enabled. Will remove\n",
    "commit": "7195c6e76164dc01f71e78e98cb2a6438497266d",
    "createdAt": "2016-10-12T22:30:05Z",
    "diffHunk": "@@ -463,6 +463,21 @@ class MesosCoarseGrainedSchedulerBackendSuite extends SparkFunSuite\n     assert(launchedTasks.head.getCommand.getUrisList.asScala(0).getValue == url)\n   }\n \n+  test(\"mesos supports setting fetcher cache\") {\n+    val url = \"spark.spark.spark.com\"\n+    setBackend(Map(\n+      \"spark.mesos.fetchCache.enable\" -> \"true\",\n+      \"spark.executor.uri\" -> url\n+    ), false)\n+    val offers = List(Resources(backend.executorMemory(sc), 1))\n+    offerResources(offers)\n+    // Don't crash!"
  }],
  "prId": 13713
}]