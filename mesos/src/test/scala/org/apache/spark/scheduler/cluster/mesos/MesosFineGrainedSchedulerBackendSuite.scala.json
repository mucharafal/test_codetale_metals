[{
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "nit: with so many args, all with pretty generic types, its really helpful to name each one, eg\r\n```\r\nTaskDescription(\r\n  taskId=1L,\r\n  attemptNumber = 0,\r\n...\r\n```\r\n\r\n(here and elsewhere)",
    "commit": "b2b1eec3c41873eb217cf041f3cf6d71d4cfa265",
    "createdAt": "2016-11-22T17:23:51Z",
    "diffHunk": "@@ -345,7 +374,17 @@ class MesosFineGrainedSchedulerBackendSuite\n       2 // Deducting 1 for executor\n     )\n \n-    val taskDesc = new TaskDescription(1L, 0, \"s1\", \"n1\", 0, ByteBuffer.wrap(new Array[Byte](0)))\n+    val taskMetrics = TaskMetrics.empty\n+    val taskContextImpl = mock[org.apache.spark.TaskContextImpl]\n+    val task = new org.apache.spark.scheduler.Task[Int](0, 0, 0) {\n+      context = taskContextImpl\n+      taskMetrics.incMemoryBytesSpilled(10)\n+      override def runTask(tc: TaskContext): Int = 0\n+    }\n+    val taskDesc = new TaskDescription(1L, 0, \"s1\", \"n1\", 0,"
  }, {
    "author": {
      "login": "witgo"
    },
    "body": "Okay I'll change it",
    "commit": "b2b1eec3c41873eb217cf041f3cf6d71d4cfa265",
    "createdAt": "2016-11-23T01:51:25Z",
    "diffHunk": "@@ -345,7 +374,17 @@ class MesosFineGrainedSchedulerBackendSuite\n       2 // Deducting 1 for executor\n     )\n \n-    val taskDesc = new TaskDescription(1L, 0, \"s1\", \"n1\", 0, ByteBuffer.wrap(new Array[Byte](0)))\n+    val taskMetrics = TaskMetrics.empty\n+    val taskContextImpl = mock[org.apache.spark.TaskContextImpl]\n+    val task = new org.apache.spark.scheduler.Task[Int](0, 0, 0) {\n+      context = taskContextImpl\n+      taskMetrics.incMemoryBytesSpilled(10)\n+      override def runTask(tc: TaskContext): Int = 0\n+    }\n+    val taskDesc = new TaskDescription(1L, 0, \"s1\", \"n1\", 0,"
  }],
  "prId": 15505
}]