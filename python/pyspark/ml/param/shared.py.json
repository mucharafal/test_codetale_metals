[{
  "comments": [{
    "author": {
      "login": "BryanCutler"
    },
    "body": "I could be wrong, but I think if the `Param` var is a `Long` on the Scala side, Py4j will convert a `None` to 0.  Does this sound right @holdenk ?\n",
    "commit": "ceebf7c791f4a9682cc01c97e61b30ee444a4622",
    "createdAt": "2016-08-09T22:50:26Z",
    "diffHunk": "@@ -311,7 +311,7 @@ class HasSeed(Params):\n \n     def __init__(self):\n         super(HasSeed, self).__init__()\n-        self._setDefault(seed=hash(type(self).__name__))\n+        self._setDefault(seed=None)",
    "line": 5
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Hm you may be right (looks like it converts to an Int actually? same point). I looked over the Python code, and virtually every class that extends HasSeed also appears to set seed=None by default. So in a way this change doesn't do much at all.\n\nI'm going to correct the test I missed, and change one class that fixes an odd seed in its API, and propose that. It would at least change behavior on the Scala side, and make the Python side internally consistent and consistent with Scala.\n",
    "commit": "ceebf7c791f4a9682cc01c97e61b30ee444a4622",
    "createdAt": "2016-08-14T11:35:15Z",
    "diffHunk": "@@ -311,7 +311,7 @@ class HasSeed(Params):\n \n     def __init__(self):\n         super(HasSeed, self).__init__()\n-        self._setDefault(seed=hash(type(self).__name__))\n+        self._setDefault(seed=None)",
    "line": 5
  }],
  "prId": 14524
}]