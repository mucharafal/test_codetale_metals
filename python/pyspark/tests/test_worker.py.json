[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Can you please make a separate test for such tests?",
    "commit": "4868e82256c08679e081dd9e92d5454056686de8",
    "createdAt": "2019-01-08T05:06:53Z",
    "diffHunk": "@@ -144,6 +144,15 @@ def test_with_different_versions_of_python(self):\n         finally:\n             self.sc.pythonVer = version\n \n+    def test_reuse_worker_of_parallelize_xrange(self):",
    "line": 15
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "I mean, separate class. It's best to avoid reusing Spark context.",
    "commit": "4868e82256c08679e081dd9e92d5454056686de8",
    "createdAt": "2019-01-08T05:08:35Z",
    "diffHunk": "@@ -144,6 +144,15 @@ def test_with_different_versions_of_python(self):\n         finally:\n             self.sc.pythonVer = version\n \n+    def test_reuse_worker_of_parallelize_xrange(self):",
    "line": 15
  }, {
    "author": {
      "login": "xuanyuanking"
    },
    "body": "No problem, done in 4868e82.",
    "commit": "4868e82256c08679e081dd9e92d5454056686de8",
    "createdAt": "2019-01-09T03:14:53Z",
    "diffHunk": "@@ -144,6 +144,15 @@ def test_with_different_versions_of_python(self):\n         finally:\n             self.sc.pythonVer = version\n \n+    def test_reuse_worker_of_parallelize_xrange(self):",
    "line": 15
  }],
  "prId": 23470
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Let's just call `.map(lambda x: os.getpid()).collect()` twice. It's oneliner anyway.",
    "commit": "4868e82256c08679e081dd9e92d5454056686de8",
    "createdAt": "2019-01-08T18:20:50Z",
    "diffHunk": "@@ -144,6 +144,15 @@ def test_with_different_versions_of_python(self):\n         finally:\n             self.sc.pythonVer = version\n \n+    def test_reuse_worker_of_parallelize_xrange(self):\n+        def get_worker_pid(input_rdd):\n+            return input_rdd.map(lambda x: os.getpid()).collect()"
  }, {
    "author": {
      "login": "xuanyuanking"
    },
    "body": "Copy, done in 4868e82.",
    "commit": "4868e82256c08679e081dd9e92d5454056686de8",
    "createdAt": "2019-01-09T03:15:47Z",
    "diffHunk": "@@ -144,6 +144,15 @@ def test_with_different_versions_of_python(self):\n         finally:\n             self.sc.pythonVer = version\n \n+    def test_reuse_worker_of_parallelize_xrange(self):\n+        def get_worker_pid(input_rdd):\n+            return input_rdd.map(lambda x: os.getpid()).collect()"
  }],
  "prId": 23470
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "nit; I would name the variables `previous_pids` and `current_pids`.",
    "commit": "4868e82256c08679e081dd9e92d5454056686de8",
    "createdAt": "2019-01-08T18:22:21Z",
    "diffHunk": "@@ -144,6 +144,15 @@ def test_with_different_versions_of_python(self):\n         finally:\n             self.sc.pythonVer = version\n \n+    def test_reuse_worker_of_parallelize_xrange(self):\n+        def get_worker_pid(input_rdd):\n+            return input_rdd.map(lambda x: os.getpid()).collect()\n+        rdd = self.sc.parallelize(xrange(20), 20)\n+        worker_pids = get_worker_pid(rdd)"
  }, {
    "author": {
      "login": "xuanyuanking"
    },
    "body": "Thanks, done in 4868e82.",
    "commit": "4868e82256c08679e081dd9e92d5454056686de8",
    "createdAt": "2019-01-09T03:15:59Z",
    "diffHunk": "@@ -144,6 +144,15 @@ def test_with_different_versions_of_python(self):\n         finally:\n             self.sc.pythonVer = version\n \n+    def test_reuse_worker_of_parallelize_xrange(self):\n+        def get_worker_pid(input_rdd):\n+            return input_rdd.map(lambda x: os.getpid()).collect()\n+        rdd = self.sc.parallelize(xrange(20), 20)\n+        worker_pids = get_worker_pid(rdd)"
  }],
  "prId": 23470
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Not a big deal but doesn't need to be 20.",
    "commit": "4868e82256c08679e081dd9e92d5454056686de8",
    "createdAt": "2019-01-08T18:23:09Z",
    "diffHunk": "@@ -144,6 +144,15 @@ def test_with_different_versions_of_python(self):\n         finally:\n             self.sc.pythonVer = version\n \n+    def test_reuse_worker_of_parallelize_xrange(self):\n+        def get_worker_pid(input_rdd):\n+            return input_rdd.map(lambda x: os.getpid()).collect()\n+        rdd = self.sc.parallelize(xrange(20), 20)"
  }, {
    "author": {
      "login": "xuanyuanking"
    },
    "body": "Copy that, change the slices number to 8 cause it needs little larger than 4 to make sure this is not a flaky test.",
    "commit": "4868e82256c08679e081dd9e92d5454056686de8",
    "createdAt": "2019-01-09T03:17:32Z",
    "diffHunk": "@@ -144,6 +144,15 @@ def test_with_different_versions_of_python(self):\n         finally:\n             self.sc.pythonVer = version\n \n+    def test_reuse_worker_of_parallelize_xrange(self):\n+        def get_worker_pid(input_rdd):\n+            return input_rdd.map(lambda x: os.getpid()).collect()\n+        rdd = self.sc.parallelize(xrange(20), 20)"
  }],
  "prId": 23470
}]