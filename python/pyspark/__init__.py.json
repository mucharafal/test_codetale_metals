[{
  "comments": [{
    "author": {
      "login": "noel-smith"
    },
    "body": "Would it be OK to add a clause to handle situations where f.__doc__ is None? There are a handful of methods without docstrings. Thanks!\n",
    "commit": "6548f25cf529c3102edebb8bcf9669ce87214c24",
    "createdAt": "2015-09-08T23:01:31Z",
    "diffHunk": "@@ -48,6 +48,22 @@\n from pyspark.status import *\n from pyspark.profiler import Profiler, BasicProfiler\n \n+\n+def since(version):\n+    \"\"\"\n+    A decorator that annotates a function to append the version of Spark the function was added.\n+    \"\"\"\n+    import re\n+    indent_p = re.compile(r'\\n( +)')\n+\n+    def deco(f):",
    "line": 12
  }, {
    "author": {
      "login": "davies"
    },
    "body": "I think it's better to have some docs for public APIs.\n",
    "commit": "6548f25cf529c3102edebb8bcf9669ce87214c24",
    "createdAt": "2015-09-08T23:08:25Z",
    "diffHunk": "@@ -48,6 +48,22 @@\n from pyspark.status import *\n from pyspark.profiler import Profiler, BasicProfiler\n \n+\n+def since(version):\n+    \"\"\"\n+    A decorator that annotates a function to append the version of Spark the function was added.\n+    \"\"\"\n+    import re\n+    indent_p = re.compile(r'\\n( +)')\n+\n+    def deco(f):",
    "line": 12
  }, {
    "author": {
      "login": "noel-smith"
    },
    "body": "You're right, that makes more sense. Ignore the comment above.\n",
    "commit": "6548f25cf529c3102edebb8bcf9669ce87214c24",
    "createdAt": "2015-09-08T23:25:16Z",
    "diffHunk": "@@ -48,6 +48,22 @@\n from pyspark.status import *\n from pyspark.profiler import Profiler, BasicProfiler\n \n+\n+def since(version):\n+    \"\"\"\n+    A decorator that annotates a function to append the version of Spark the function was added.\n+    \"\"\"\n+    import re\n+    indent_p = re.compile(r'\\n( +)')\n+\n+    def deco(f):",
    "line": 12
  }],
  "prId": 8657
}]