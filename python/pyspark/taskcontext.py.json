[{
  "comments": [{
    "author": {
      "login": "BryanCutler"
    },
    "body": "If it's missing it will result in a `KeyError`, maybe you want `return self._localProperties.get(key)` which returns `None` as the default?  That seems better to me too, although you might want to add an optional `default` value.",
    "commit": "6fef2f1808c559dfcf73a7678e655ba4a9aff62a",
    "createdAt": "2018-05-29T22:08:23Z",
    "diffHunk": "@@ -88,3 +89,9 @@ def taskAttemptId(self):\n         TaskAttemptID.\n         \"\"\"\n         return self._taskAttemptId\n+\n+    def getLocalProperty(self, key):\n+        \"\"\"\n+        Get a local property set upstream in the driver, or None if it is missing.",
    "line": 15
  }, {
    "author": {
      "login": "tdas"
    },
    "body": "Right. ",
    "commit": "6fef2f1808c559dfcf73a7678e655ba4a9aff62a",
    "createdAt": "2018-05-29T22:42:26Z",
    "diffHunk": "@@ -88,3 +89,9 @@ def taskAttemptId(self):\n         TaskAttemptID.\n         \"\"\"\n         return self._taskAttemptId\n+\n+    def getLocalProperty(self, key):\n+        \"\"\"\n+        Get a local property set upstream in the driver, or None if it is missing.",
    "line": 15
  }, {
    "author": {
      "login": "tdas"
    },
    "body": "Thanks @BryanCutler for catching this stupid stuff. not at all comfortable with python. ",
    "commit": "6fef2f1808c559dfcf73a7678e655ba4a9aff62a",
    "createdAt": "2018-05-30T00:11:59Z",
    "diffHunk": "@@ -88,3 +89,9 @@ def taskAttemptId(self):\n         TaskAttemptID.\n         \"\"\"\n         return self._taskAttemptId\n+\n+    def getLocalProperty(self, key):\n+        \"\"\"\n+        Get a local property set upstream in the driver, or None if it is missing.",
    "line": 15
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "get(key) would return `None` tho if it's missing.",
    "commit": "6fef2f1808c559dfcf73a7678e655ba4a9aff62a",
    "createdAt": "2018-05-30T01:36:56Z",
    "diffHunk": "@@ -88,3 +89,9 @@ def taskAttemptId(self):\n         TaskAttemptID.\n         \"\"\"\n         return self._taskAttemptId\n+\n+    def getLocalProperty(self, key):\n+        \"\"\"\n+        Get a local property set upstream in the driver, or None if it is missing.",
    "line": 15
  }, {
    "author": {
      "login": "tdas"
    },
    "body": "yeah. I added the default=None to make it super obvious. i see no harm in making the code more intuitive.",
    "commit": "6fef2f1808c559dfcf73a7678e655ba4a9aff62a",
    "createdAt": "2018-05-30T01:46:04Z",
    "diffHunk": "@@ -88,3 +89,9 @@ def taskAttemptId(self):\n         TaskAttemptID.\n         \"\"\"\n         return self._taskAttemptId\n+\n+    def getLocalProperty(self, key):\n+        \"\"\"\n+        Get a local property set upstream in the driver, or None if it is missing.",
    "line": 15
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Wait .. it's a dictionary. Does a dictionary's `get` has `default` keyword argument?",
    "commit": "6fef2f1808c559dfcf73a7678e655ba4a9aff62a",
    "createdAt": "2018-05-30T01:50:49Z",
    "diffHunk": "@@ -88,3 +89,9 @@ def taskAttemptId(self):\n         TaskAttemptID.\n         \"\"\"\n         return self._taskAttemptId\n+\n+    def getLocalProperty(self, key):\n+        \"\"\"\n+        Get a local property set upstream in the driver, or None if it is missing.",
    "line": 15
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "No, it seems not. Shall we change it to `get(key)` or `get(key, None)`?",
    "commit": "6fef2f1808c559dfcf73a7678e655ba4a9aff62a",
    "createdAt": "2018-05-30T02:04:34Z",
    "diffHunk": "@@ -88,3 +89,9 @@ def taskAttemptId(self):\n         TaskAttemptID.\n         \"\"\"\n         return self._taskAttemptId\n+\n+    def getLocalProperty(self, key):\n+        \"\"\"\n+        Get a local property set upstream in the driver, or None if it is missing.",
    "line": 15
  }, {
    "author": {
      "login": "JoshRosen"
    },
    "body": "The Java / Scala equivalents of this API return `null` for missing keys, so on the one hand returning `None` is kinda consistent with that.\r\n\r\nOn the other hand, consider a case where you want to specify an alternative in case a key is not set:\r\n\r\nWith this API, you might think of doing something like `tc.getLocalProperty('key') or 'defaultValue'`, which potentially could be a problem in case a non-None key could have a `False`-y value. I suppose we're only dealing with strings here, though, and that'd only happen for empty strings. If we allowed non-strings to be returned here, though, then we'd have problems if we're returning values like `0`. For that case, having a `getLocalProperty('key', 'defaultValue')` is a bit more useful.",
    "commit": "6fef2f1808c559dfcf73a7678e655ba4a9aff62a",
    "createdAt": "2018-05-30T18:37:17Z",
    "diffHunk": "@@ -88,3 +89,9 @@ def taskAttemptId(self):\n         TaskAttemptID.\n         \"\"\"\n         return self._taskAttemptId\n+\n+    def getLocalProperty(self, key):\n+        \"\"\"\n+        Get a local property set upstream in the driver, or None if it is missing.",
    "line": 15
  }, {
    "author": {
      "login": "tdas"
    },
    "body": "I am trying to match the Java TaskContext API, which only has a `TaskContext.getLocalProperty(key)`",
    "commit": "6fef2f1808c559dfcf73a7678e655ba4a9aff62a",
    "createdAt": "2018-05-30T18:43:05Z",
    "diffHunk": "@@ -88,3 +89,9 @@ def taskAttemptId(self):\n         TaskAttemptID.\n         \"\"\"\n         return self._taskAttemptId\n+\n+    def getLocalProperty(self, key):\n+        \"\"\"\n+        Get a local property set upstream in the driver, or None if it is missing.",
    "line": 15
  }, {
    "author": {
      "login": "JoshRosen"
    },
    "body": "FWIW we can always evolve what you have here towards the `getLocalProperty(key, default=None)` case; that evolution would maintain behavior and source compatibility. Therefore maybe it's fine to defer that until later if we're not sure whether that variant is useful.",
    "commit": "6fef2f1808c559dfcf73a7678e655ba4a9aff62a",
    "createdAt": "2018-05-30T18:47:12Z",
    "diffHunk": "@@ -88,3 +89,9 @@ def taskAttemptId(self):\n         TaskAttemptID.\n         \"\"\"\n         return self._taskAttemptId\n+\n+    def getLocalProperty(self, key):\n+        \"\"\"\n+        Get a local property set upstream in the driver, or None if it is missing.",
    "line": 15
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Makes sense but +1 for leaving it out since I either don't know how commonly it will be used for now.",
    "commit": "6fef2f1808c559dfcf73a7678e655ba4a9aff62a",
    "createdAt": "2018-05-31T01:46:19Z",
    "diffHunk": "@@ -88,3 +89,9 @@ def taskAttemptId(self):\n         TaskAttemptID.\n         \"\"\"\n         return self._taskAttemptId\n+\n+    def getLocalProperty(self, key):\n+        \"\"\"\n+        Get a local property set upstream in the driver, or None if it is missing.",
    "line": 15
  }, {
    "author": {
      "login": "BryanCutler"
    },
    "body": "Sounds good to me since this matches the Scala API",
    "commit": "6fef2f1808c559dfcf73a7678e655ba4a9aff62a",
    "createdAt": "2018-05-31T17:20:43Z",
    "diffHunk": "@@ -88,3 +89,9 @@ def taskAttemptId(self):\n         TaskAttemptID.\n         \"\"\"\n         return self._taskAttemptId\n+\n+    def getLocalProperty(self, key):\n+        \"\"\"\n+        Get a local property set upstream in the driver, or None if it is missing.",
    "line": 15
  }],
  "prId": 21437
}]