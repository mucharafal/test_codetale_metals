[{
  "comments": [{
    "author": {
      "login": "BryanCutler"
    },
    "body": "remove blank lines here, and around other \"Allowed values\"\n",
    "commit": "bf8f8a0b82b49b9144449cd00872345dba3bf061",
    "createdAt": "2016-01-05T19:34:46Z",
    "diffHunk": "@@ -323,38 +330,45 @@ def train(cls, data, iterations=100, initialWeights=None, regParam=0.01, regType\n         \"\"\"\n         Train a logistic regression model on the given data.\n \n-        :param data:           The training data, an RDD of\n-                               LabeledPoint.\n-        :param iterations:     The number of iterations\n-                               (default: 100).\n-        :param initialWeights: The initial weights (default: None).\n-        :param regParam:       The regularizer parameter\n-                               (default: 0.01).\n-        :param regType:        The type of regularizer used for\n-                               training our model.\n-\n-                               :Allowed values:\n-                                 - \"l1\" for using L1 regularization\n-                                 - \"l2\" for using L2 regularization\n-                                 - None for no regularization\n-\n-                                 (default: \"l2\")\n-\n-        :param intercept:      Boolean parameter which indicates the\n-                               use or not of the augmented representation\n-                               for training data (i.e. whether bias\n-                               features are activated or not,\n-                               default: False).\n-        :param corrections:    The number of corrections used in the\n-                               LBFGS update (default: 10).\n-        :param tolerance:      The convergence tolerance of iterations\n-                               for L-BFGS (default: 1e-4).\n-        :param validateData:   Boolean parameter which indicates if the\n-                               algorithm should validate data before\n-                               training. (default: True)\n-        :param numClasses:     The number of classes (i.e., outcomes) a\n-                               label can take in Multinomial Logistic\n-                               Regression (default: 2).\n+        :param data:\n+          The training data, an RDD of LabeledPoint.\n+        :param iterations:\n+          The number of iterations\n+          (default: 100).\n+        :param initialWeights:\n+          The initial weights\n+          (default: None).\n+        :param regParam:\n+          The regularizer parameter\n+          (default: 0.01).\n+        :param regType:\n+          The type of regularizer used for training our model.\n+"
  }],
  "prId": 10598
}, {
  "comments": [{
    "author": {
      "login": "BryanCutler"
    },
    "body": "remove blank lines\n",
    "commit": "bf8f8a0b82b49b9144449cd00872345dba3bf061",
    "createdAt": "2016-01-05T19:35:36Z",
    "diffHunk": "@@ -490,37 +506,45 @@ def train(cls, data, iterations=100, step=1.0, regParam=0.01,\n         \"\"\"\n         Train a support vector machine on the given data.\n \n-        :param data:              The training data, an RDD of\n-                                  LabeledPoint.\n-        :param iterations:        The number of iterations\n-                                  (default: 100).\n-        :param step:              The step parameter used in SGD\n-                                  (default: 1.0).\n-        :param regParam:          The regularizer parameter\n-                                  (default: 0.01).\n-        :param miniBatchFraction: Fraction of data to be used for each\n-                                  SGD iteration (default: 1.0).\n-        :param initialWeights:    The initial weights (default: None).\n-        :param regType:           The type of regularizer used for\n-                                  training our model.\n-\n-                                  :Allowed values:\n-                                     - \"l1\" for using L1 regularization\n-                                     - \"l2\" for using L2 regularization\n-                                     - None for no regularization\n-\n-                                     (default: \"l2\")\n-\n-        :param intercept:         Boolean parameter which indicates the\n-                                  use or not of the augmented representation\n-                                  for training data (i.e. whether bias\n-                                  features are activated or not,\n-                                  default: False).\n-        :param validateData:      Boolean parameter which indicates if\n-                                  the algorithm should validate data\n-                                  before training. (default: True)\n-        :param convergenceTol:    A condition which decides iteration termination.\n-                                  (default: 0.001)\n+        :param data:\n+          The training data, an RDD of LabeledPoint.\n+        :param iterations:\n+          The number of iterations.\n+          (default: 100)\n+        :param step:\n+          The step parameter used in SGD.\n+          (default: 1.0)\n+        :param regParam:\n+          The regularizer parameter.\n+          (default: 0.01)\n+        :param miniBatchFraction:\n+          Fraction of data to be used for each SGD iteration.\n+          (default: 1.0)\n+        :param initialWeights:\n+          The initial weights.\n+          (default: None)\n+        :param regType:\n+          The type of regularizer used for training our model.\n+\n+          :Allowed values:\n+            - \"l1\" for using L1 regularization\n+            - \"l2\" for using L2 regularization\n+            - None for no regularization\n+\n+          (default: \"l2\")\n+"
  }],
  "prId": 10598
}, {
  "comments": [{
    "author": {
      "login": "BryanCutler"
    },
    "body": "Line length can go up to 100 characters, can you please combine these lines and other multi-line descriptions to that limit?  There might have been a different limit before, but no reason to use so many lines now.  The :Allowed values: looks fine though.\n",
    "commit": "bf8f8a0b82b49b9144449cd00872345dba3bf061",
    "createdAt": "2016-01-05T19:40:19Z",
    "diffHunk": "@@ -272,37 +274,42 @@ def train(cls, data, iterations=100, step=1.0, miniBatchFraction=1.0,\n         \"\"\"\n         Train a logistic regression model on the given data.\n \n-        :param data:              The training data, an RDD of\n-                                  LabeledPoint.\n-        :param iterations:        The number of iterations\n-                                  (default: 100).\n-        :param step:              The step parameter used in SGD\n-                                  (default: 1.0).\n-        :param miniBatchFraction: Fraction of data to be used for each\n-                                  SGD iteration (default: 1.0).\n-        :param initialWeights:    The initial weights (default: None).\n-        :param regParam:          The regularizer parameter\n-                                  (default: 0.01).\n-        :param regType:           The type of regularizer used for\n-                                  training our model.\n-\n-                                  :Allowed values:\n-                                     - \"l1\" for using L1 regularization\n-                                     - \"l2\" for using L2 regularization\n-                                     - None for no regularization\n-\n-                                     (default: \"l2\")\n-\n-        :param intercept:         Boolean parameter which indicates the\n-                                  use or not of the augmented representation\n-                                  for training data (i.e. whether bias\n-                                  features are activated or not,\n-                                  default: False).\n-        :param validateData:      Boolean parameter which indicates if\n-                                  the algorithm should validate data\n-                                  before training. (default: True)\n-        :param convergenceTol:    A condition which decides iteration termination.\n-                                  (default: 0.001)\n+        :param data:\n+          The training data, an RDD of LabeledPoint.\n+        :param iterations:\n+          The number of iterations.\n+          (default: 100)\n+        :param step:\n+          The step parameter used in SGD.\n+          (default: 1.0)\n+        :param miniBatchFraction:\n+          Fraction of data to be used for each SGD iteration.\n+          (default: 1.0)\n+        :param initialWeights:\n+          The initial weights.\n+          (default: None)\n+        :param regParam:\n+          The regularizer parameter.\n+          (default: 0.01)\n+        :param regType:\n+          The type of regularizer used for training our model.\n+          :Allowed values:\n+            - \"l1\" for using L1 regularization\n+            - \"l2\" for using L2 regularization\n+            - None for no regularization\n+          (default: \"l2\")\n+        :param intercept:\n+          Boolean parameter which indicates the use or not of the augmented\n+          representation for training data (i.e. whether bias features are\n+          activated or not)."
  }],
  "prId": 10598
}, {
  "comments": [{
    "author": {
      "login": "BryanCutler"
    },
    "body": "there is an extra space indentation here\n",
    "commit": "bf8f8a0b82b49b9144449cd00872345dba3bf061",
    "createdAt": "2016-01-05T19:45:21Z",
    "diffHunk": "@@ -323,38 +330,45 @@ def train(cls, data, iterations=100, initialWeights=None, regParam=0.01, regType\n         \"\"\"\n         Train a logistic regression model on the given data.\n \n-        :param data:           The training data, an RDD of\n-                               LabeledPoint.\n-        :param iterations:     The number of iterations\n-                               (default: 100).\n-        :param initialWeights: The initial weights (default: None).\n-        :param regParam:       The regularizer parameter\n-                               (default: 0.01).\n-        :param regType:        The type of regularizer used for\n-                               training our model.\n-\n-                               :Allowed values:\n-                                 - \"l1\" for using L1 regularization\n-                                 - \"l2\" for using L2 regularization\n-                                 - None for no regularization\n-\n-                                 (default: \"l2\")\n-\n-        :param intercept:      Boolean parameter which indicates the\n-                               use or not of the augmented representation\n-                               for training data (i.e. whether bias\n-                               features are activated or not,\n-                               default: False).\n-        :param corrections:    The number of corrections used in the\n-                               LBFGS update (default: 10).\n-        :param tolerance:      The convergence tolerance of iterations\n-                               for L-BFGS (default: 1e-4).\n-        :param validateData:   Boolean parameter which indicates if the\n-                               algorithm should validate data before\n-                               training. (default: True)\n-        :param numClasses:     The number of classes (i.e., outcomes) a\n-                               label can take in Multinomial Logistic\n-                               Regression (default: 2).\n+        :param data:\n+          The training data, an RDD of LabeledPoint.\n+        :param iterations:\n+          The number of iterations\n+          (default: 100).\n+        :param initialWeights:\n+          The initial weights\n+          (default: None).\n+        :param regParam:\n+          The regularizer parameter\n+          (default: 0.01).\n+        :param regType:\n+          The type of regularizer used for training our model.\n+\n+          :Allowed values:\n+            - \"l1\" for using L1 regularization\n+            - \"l2\" for using L2 regularization\n+            - None for no regularization\n+          (default: \"l2\")\n+\n+        :param intercept:\n+          Boolean parameter which indicates the use or not of the augmented\n+          representation for training data (i.e. whether bias features are\n+          activated or not)\n+         (default: False)\n+        :param corrections:\n+           The number of corrections used in the LBFGS update."
  }],
  "prId": 10598
}, {
  "comments": [{
    "author": {
      "login": "BryanCutler"
    },
    "body": "this is not aligned properly\n",
    "commit": "bf8f8a0b82b49b9144449cd00872345dba3bf061",
    "createdAt": "2016-01-05T19:45:42Z",
    "diffHunk": "@@ -323,38 +330,45 @@ def train(cls, data, iterations=100, initialWeights=None, regParam=0.01, regType\n         \"\"\"\n         Train a logistic regression model on the given data.\n \n-        :param data:           The training data, an RDD of\n-                               LabeledPoint.\n-        :param iterations:     The number of iterations\n-                               (default: 100).\n-        :param initialWeights: The initial weights (default: None).\n-        :param regParam:       The regularizer parameter\n-                               (default: 0.01).\n-        :param regType:        The type of regularizer used for\n-                               training our model.\n-\n-                               :Allowed values:\n-                                 - \"l1\" for using L1 regularization\n-                                 - \"l2\" for using L2 regularization\n-                                 - None for no regularization\n-\n-                                 (default: \"l2\")\n-\n-        :param intercept:      Boolean parameter which indicates the\n-                               use or not of the augmented representation\n-                               for training data (i.e. whether bias\n-                               features are activated or not,\n-                               default: False).\n-        :param corrections:    The number of corrections used in the\n-                               LBFGS update (default: 10).\n-        :param tolerance:      The convergence tolerance of iterations\n-                               for L-BFGS (default: 1e-4).\n-        :param validateData:   Boolean parameter which indicates if the\n-                               algorithm should validate data before\n-                               training. (default: True)\n-        :param numClasses:     The number of classes (i.e., outcomes) a\n-                               label can take in Multinomial Logistic\n-                               Regression (default: 2).\n+        :param data:\n+          The training data, an RDD of LabeledPoint.\n+        :param iterations:\n+          The number of iterations\n+          (default: 100).\n+        :param initialWeights:\n+          The initial weights\n+          (default: None).\n+        :param regParam:\n+          The regularizer parameter\n+          (default: 0.01).\n+        :param regType:\n+          The type of regularizer used for training our model.\n+\n+          :Allowed values:\n+            - \"l1\" for using L1 regularization\n+            - \"l2\" for using L2 regularization\n+            - None for no regularization\n+          (default: \"l2\")\n+\n+        :param intercept:\n+          Boolean parameter which indicates the use or not of the augmented\n+          representation for training data (i.e. whether bias features are\n+          activated or not)\n+         (default: False)"
  }],
  "prId": 10598
}, {
  "comments": [{
    "author": {
      "login": "BryanCutler"
    },
    "body": "nit: no period after the ending parenthesis in default line\n",
    "commit": "bf8f8a0b82b49b9144449cd00872345dba3bf061",
    "createdAt": "2016-01-05T23:53:08Z",
    "diffHunk": "@@ -323,38 +330,45 @@ def train(cls, data, iterations=100, initialWeights=None, regParam=0.01, regType\n         \"\"\"\n         Train a logistic regression model on the given data.\n \n-        :param data:           The training data, an RDD of\n-                               LabeledPoint.\n-        :param iterations:     The number of iterations\n-                               (default: 100).\n-        :param initialWeights: The initial weights (default: None).\n-        :param regParam:       The regularizer parameter\n-                               (default: 0.01).\n-        :param regType:        The type of regularizer used for\n-                               training our model.\n-\n-                               :Allowed values:\n-                                 - \"l1\" for using L1 regularization\n-                                 - \"l2\" for using L2 regularization\n-                                 - None for no regularization\n-\n-                                 (default: \"l2\")\n-\n-        :param intercept:      Boolean parameter which indicates the\n-                               use or not of the augmented representation\n-                               for training data (i.e. whether bias\n-                               features are activated or not,\n-                               default: False).\n-        :param corrections:    The number of corrections used in the\n-                               LBFGS update (default: 10).\n-        :param tolerance:      The convergence tolerance of iterations\n-                               for L-BFGS (default: 1e-4).\n-        :param validateData:   Boolean parameter which indicates if the\n-                               algorithm should validate data before\n-                               training. (default: True)\n-        :param numClasses:     The number of classes (i.e., outcomes) a\n-                               label can take in Multinomial Logistic\n-                               Regression (default: 2).\n+        :param data:\n+          The training data, an RDD of LabeledPoint.\n+        :param iterations:\n+          The number of iterations\n+          (default: 100)."
  }],
  "prId": 10598
}, {
  "comments": [{
    "author": {
      "login": "BryanCutler"
    },
    "body": "nit:  capitalize the first word in the description sentence\n",
    "commit": "bf8f8a0b82b49b9144449cd00872345dba3bf061",
    "createdAt": "2016-01-05T23:54:04Z",
    "diffHunk": "@@ -94,16 +94,18 @@ class LogisticRegressionModel(LinearClassificationModel):\n     Classification model trained using Multinomial/Binary Logistic\n     Regression.\n \n-    :param weights: Weights computed for every feature.\n-    :param intercept: Intercept computed for this model. (Only used\n-            in Binary Logistic Regression. In Multinomial Logistic\n-            Regression, the intercepts will not be a single value,\n-            so the intercepts will be part of the weights.)\n-    :param numFeatures: the dimension of the features.\n-    :param numClasses: the number of possible outcomes for k classes\n-            classification problem in Multinomial Logistic Regression.\n-            By default, it is binary logistic regression so numClasses\n-            will be set to 2.\n+    :param weights:\n+      Weights computed for every feature.\n+    :param intercept:\n+      Intercept computed for this model. (Only used in Binary Logistic\n+      Regression. In Multinomial Logistic Regression, the intercepts will not\n+      be a single value, so the intercepts will be part of the weights.)\n+    :param numFeatures:\n+      the dimension of the features."
  }],
  "prId": 10598
}, {
  "comments": [{
    "author": {
      "login": "BryanCutler"
    },
    "body": "This line is over the 74 char limit\n",
    "commit": "bf8f8a0b82b49b9144449cd00872345dba3bf061",
    "createdAt": "2016-01-22T20:26:39Z",
    "diffHunk": "@@ -91,19 +91,21 @@ def predict(self, test):\n class LogisticRegressionModel(LinearClassificationModel):\n \n     \"\"\"\n-    Classification model trained using Multinomial/Binary Logistic\n-    Regression.\n-\n-    :param weights: Weights computed for every feature.\n-    :param intercept: Intercept computed for this model. (Only used\n-            in Binary Logistic Regression. In Multinomial Logistic\n-            Regression, the intercepts will not be a single value,\n-            so the intercepts will be part of the weights.)\n-    :param numFeatures: the dimension of the features.\n-    :param numClasses: the number of possible outcomes for k classes\n-            classification problem in Multinomial Logistic Regression.\n-            By default, it is binary logistic regression so numClasses\n-            will be set to 2.\n+    Classification model trained using Multinomial/Binary Logistic Regression."
  }],
  "prId": 10598
}, {
  "comments": [{
    "author": {
      "login": "BryanCutler"
    },
    "body": "It looks like we have a problem with the formatting of this param.  If we want the html to look the same and get rid of any warnings, then I think it has to be written like this\n\n```\n:param regType:\n  The type of regularizer used for training our model.\n\n  :Allowed values:\n    - \"l1\" for using L1 regularization\n    - \"l2\" for using L2 regularization\n    - None for no regularization\n\n  (default: \"l2\")\n```\n\nwhich, I think, looks ugly in the code and not even that great in the html.  Alternatively, we could rewrite it inline similar to how some other params have it, like this\n\n```\n:param regType:\n  The type of regularizer used for training our model.\n  Allowed values: \"l1\" for using L1 regularization;\n  \"l2\" for using L2 regularization; None for no\n  regularization.\n  (default: \"l2\")\n```\n\nNot perfect, but both code and html look decent, imho.\n@mengxr , would you be ok with the second inline format?\n",
    "commit": "bf8f8a0b82b49b9144449cd00872345dba3bf061",
    "createdAt": "2016-02-02T21:55:28Z",
    "diffHunk": "@@ -272,37 +275,42 @@ def train(cls, data, iterations=100, step=1.0, miniBatchFraction=1.0,\n         \"\"\"\n         Train a logistic regression model on the given data.\n \n-        :param data:              The training data, an RDD of\n-                                  LabeledPoint.\n-        :param iterations:        The number of iterations\n-                                  (default: 100).\n-        :param step:              The step parameter used in SGD\n-                                  (default: 1.0).\n-        :param miniBatchFraction: Fraction of data to be used for each\n-                                  SGD iteration (default: 1.0).\n-        :param initialWeights:    The initial weights (default: None).\n-        :param regParam:          The regularizer parameter\n-                                  (default: 0.01).\n-        :param regType:           The type of regularizer used for\n-                                  training our model.\n-\n-                                  :Allowed values:\n-                                     - \"l1\" for using L1 regularization\n-                                     - \"l2\" for using L2 regularization\n-                                     - None for no regularization\n-\n-                                     (default: \"l2\")\n-\n-        :param intercept:         Boolean parameter which indicates the\n-                                  use or not of the augmented representation\n-                                  for training data (i.e. whether bias\n-                                  features are activated or not,\n-                                  default: False).\n-        :param validateData:      Boolean parameter which indicates if\n-                                  the algorithm should validate data\n-                                  before training. (default: True)\n-        :param convergenceTol:    A condition which decides iteration termination.\n-                                  (default: 0.001)\n+        :param data:\n+          The training data, an RDD of LabeledPoint.\n+        :param iterations:\n+          The number of iterations.\n+          (default: 100)\n+        :param step:\n+          The step parameter used in SGD.\n+          (default: 1.0)\n+        :param miniBatchFraction:\n+          Fraction of data to be used for each SGD iteration.\n+          (default: 1.0)\n+        :param initialWeights:\n+          The initial weights.\n+          (default: None)\n+        :param regParam:\n+          The regularizer parameter.\n+          (default: 0.01)\n+        :param regType:\n+          The type of regularizer used for training our model.\n+          :Allowed values:\n+            - \"l1\" for using L1 regularization\n+            - \"l2\" for using L2 regularization\n+            - None for no regularization\n+          (default: \"l2\")",
    "line": 99
  }, {
    "author": {
      "login": "mengxr"
    },
    "body": "The first one looks better but no strong preference. I tried the following that also works:\n\n```\n        :param regType:\n          The type of regularizer used for training our model.\n          Allowed values:\n\n            - \"l1\" for using L1 regularization\n            - \"l2\" for using L2 regularization (default)\n            - None for no regularization\n```\n\nNote `Allow values` is not a Sphinx keyword.\n",
    "commit": "bf8f8a0b82b49b9144449cd00872345dba3bf061",
    "createdAt": "2016-02-11T18:30:52Z",
    "diffHunk": "@@ -272,37 +275,42 @@ def train(cls, data, iterations=100, step=1.0, miniBatchFraction=1.0,\n         \"\"\"\n         Train a logistic regression model on the given data.\n \n-        :param data:              The training data, an RDD of\n-                                  LabeledPoint.\n-        :param iterations:        The number of iterations\n-                                  (default: 100).\n-        :param step:              The step parameter used in SGD\n-                                  (default: 1.0).\n-        :param miniBatchFraction: Fraction of data to be used for each\n-                                  SGD iteration (default: 1.0).\n-        :param initialWeights:    The initial weights (default: None).\n-        :param regParam:          The regularizer parameter\n-                                  (default: 0.01).\n-        :param regType:           The type of regularizer used for\n-                                  training our model.\n-\n-                                  :Allowed values:\n-                                     - \"l1\" for using L1 regularization\n-                                     - \"l2\" for using L2 regularization\n-                                     - None for no regularization\n-\n-                                     (default: \"l2\")\n-\n-        :param intercept:         Boolean parameter which indicates the\n-                                  use or not of the augmented representation\n-                                  for training data (i.e. whether bias\n-                                  features are activated or not,\n-                                  default: False).\n-        :param validateData:      Boolean parameter which indicates if\n-                                  the algorithm should validate data\n-                                  before training. (default: True)\n-        :param convergenceTol:    A condition which decides iteration termination.\n-                                  (default: 0.001)\n+        :param data:\n+          The training data, an RDD of LabeledPoint.\n+        :param iterations:\n+          The number of iterations.\n+          (default: 100)\n+        :param step:\n+          The step parameter used in SGD.\n+          (default: 1.0)\n+        :param miniBatchFraction:\n+          Fraction of data to be used for each SGD iteration.\n+          (default: 1.0)\n+        :param initialWeights:\n+          The initial weights.\n+          (default: None)\n+        :param regParam:\n+          The regularizer parameter.\n+          (default: 0.01)\n+        :param regType:\n+          The type of regularizer used for training our model.\n+          :Allowed values:\n+            - \"l1\" for using L1 regularization\n+            - \"l2\" for using L2 regularization\n+            - None for no regularization\n+          (default: \"l2\")",
    "line": 99
  }, {
    "author": {
      "login": "BryanCutler"
    },
    "body": "It's not a huge deal so I'm ok with either, but my issue with the additional blank lines is that in the context of the already large param list, the extra blank lines seem like a little much and the rendered html looks sloppy to me too.  Since I noticed other parts describing allowed values in a single paragraph, I thought maybe we should stick to that.\n",
    "commit": "bf8f8a0b82b49b9144449cd00872345dba3bf061",
    "createdAt": "2016-02-11T20:21:28Z",
    "diffHunk": "@@ -272,37 +275,42 @@ def train(cls, data, iterations=100, step=1.0, miniBatchFraction=1.0,\n         \"\"\"\n         Train a logistic regression model on the given data.\n \n-        :param data:              The training data, an RDD of\n-                                  LabeledPoint.\n-        :param iterations:        The number of iterations\n-                                  (default: 100).\n-        :param step:              The step parameter used in SGD\n-                                  (default: 1.0).\n-        :param miniBatchFraction: Fraction of data to be used for each\n-                                  SGD iteration (default: 1.0).\n-        :param initialWeights:    The initial weights (default: None).\n-        :param regParam:          The regularizer parameter\n-                                  (default: 0.01).\n-        :param regType:           The type of regularizer used for\n-                                  training our model.\n-\n-                                  :Allowed values:\n-                                     - \"l1\" for using L1 regularization\n-                                     - \"l2\" for using L2 regularization\n-                                     - None for no regularization\n-\n-                                     (default: \"l2\")\n-\n-        :param intercept:         Boolean parameter which indicates the\n-                                  use or not of the augmented representation\n-                                  for training data (i.e. whether bias\n-                                  features are activated or not,\n-                                  default: False).\n-        :param validateData:      Boolean parameter which indicates if\n-                                  the algorithm should validate data\n-                                  before training. (default: True)\n-        :param convergenceTol:    A condition which decides iteration termination.\n-                                  (default: 0.001)\n+        :param data:\n+          The training data, an RDD of LabeledPoint.\n+        :param iterations:\n+          The number of iterations.\n+          (default: 100)\n+        :param step:\n+          The step parameter used in SGD.\n+          (default: 1.0)\n+        :param miniBatchFraction:\n+          Fraction of data to be used for each SGD iteration.\n+          (default: 1.0)\n+        :param initialWeights:\n+          The initial weights.\n+          (default: None)\n+        :param regParam:\n+          The regularizer parameter.\n+          (default: 0.01)\n+        :param regType:\n+          The type of regularizer used for training our model.\n+          :Allowed values:\n+            - \"l1\" for using L1 regularization\n+            - \"l2\" for using L2 regularization\n+            - None for no regularization\n+          (default: \"l2\")",
    "line": 99
  }, {
    "author": {
      "login": "mengxr"
    },
    "body": "If we use `:Allowed values:`, it shows up as `:Allowed values:` in html, which is weird. We should change existing ones instead of repeating the mistakes, in a separate PR. I don't think the rendered html changes due to that additional blank line. It is just control by top margin of a list, which could be configured via CSS. This is how it looks in html for my proposal, which looks good to me:\n\n![screen shot 2016-02-11 at 2 21 41 pm](https://cloud.githubusercontent.com/assets/829644/12992699/cb339390-d0ca-11e5-980f-779b0b97c97a.png)\n\nLet's quickly fix this one and merge this PR.\n",
    "commit": "bf8f8a0b82b49b9144449cd00872345dba3bf061",
    "createdAt": "2016-02-11T22:23:24Z",
    "diffHunk": "@@ -272,37 +275,42 @@ def train(cls, data, iterations=100, step=1.0, miniBatchFraction=1.0,\n         \"\"\"\n         Train a logistic regression model on the given data.\n \n-        :param data:              The training data, an RDD of\n-                                  LabeledPoint.\n-        :param iterations:        The number of iterations\n-                                  (default: 100).\n-        :param step:              The step parameter used in SGD\n-                                  (default: 1.0).\n-        :param miniBatchFraction: Fraction of data to be used for each\n-                                  SGD iteration (default: 1.0).\n-        :param initialWeights:    The initial weights (default: None).\n-        :param regParam:          The regularizer parameter\n-                                  (default: 0.01).\n-        :param regType:           The type of regularizer used for\n-                                  training our model.\n-\n-                                  :Allowed values:\n-                                     - \"l1\" for using L1 regularization\n-                                     - \"l2\" for using L2 regularization\n-                                     - None for no regularization\n-\n-                                     (default: \"l2\")\n-\n-        :param intercept:         Boolean parameter which indicates the\n-                                  use or not of the augmented representation\n-                                  for training data (i.e. whether bias\n-                                  features are activated or not,\n-                                  default: False).\n-        :param validateData:      Boolean parameter which indicates if\n-                                  the algorithm should validate data\n-                                  before training. (default: True)\n-        :param convergenceTol:    A condition which decides iteration termination.\n-                                  (default: 0.001)\n+        :param data:\n+          The training data, an RDD of LabeledPoint.\n+        :param iterations:\n+          The number of iterations.\n+          (default: 100)\n+        :param step:\n+          The step parameter used in SGD.\n+          (default: 1.0)\n+        :param miniBatchFraction:\n+          Fraction of data to be used for each SGD iteration.\n+          (default: 1.0)\n+        :param initialWeights:\n+          The initial weights.\n+          (default: None)\n+        :param regParam:\n+          The regularizer parameter.\n+          (default: 0.01)\n+        :param regType:\n+          The type of regularizer used for training our model.\n+          :Allowed values:\n+            - \"l1\" for using L1 regularization\n+            - \"l2\" for using L2 regularization\n+            - None for no regularization\n+          (default: \"l2\")",
    "line": 99
  }, {
    "author": {
      "login": "BryanCutler"
    },
    "body": "I believe that `:Allowed values:` would need to be preceded by a blank line for Sphinx to interpret it in bold like before, but I don't think that needs to be done here.  What @mengxr proposed above looks fine with me too.\n\n@vijaykiran , will you be able to make this fix soon?  I could take over and finish this last little bit if you can't.\n",
    "commit": "bf8f8a0b82b49b9144449cd00872345dba3bf061",
    "createdAt": "2016-02-11T22:49:03Z",
    "diffHunk": "@@ -272,37 +275,42 @@ def train(cls, data, iterations=100, step=1.0, miniBatchFraction=1.0,\n         \"\"\"\n         Train a logistic regression model on the given data.\n \n-        :param data:              The training data, an RDD of\n-                                  LabeledPoint.\n-        :param iterations:        The number of iterations\n-                                  (default: 100).\n-        :param step:              The step parameter used in SGD\n-                                  (default: 1.0).\n-        :param miniBatchFraction: Fraction of data to be used for each\n-                                  SGD iteration (default: 1.0).\n-        :param initialWeights:    The initial weights (default: None).\n-        :param regParam:          The regularizer parameter\n-                                  (default: 0.01).\n-        :param regType:           The type of regularizer used for\n-                                  training our model.\n-\n-                                  :Allowed values:\n-                                     - \"l1\" for using L1 regularization\n-                                     - \"l2\" for using L2 regularization\n-                                     - None for no regularization\n-\n-                                     (default: \"l2\")\n-\n-        :param intercept:         Boolean parameter which indicates the\n-                                  use or not of the augmented representation\n-                                  for training data (i.e. whether bias\n-                                  features are activated or not,\n-                                  default: False).\n-        :param validateData:      Boolean parameter which indicates if\n-                                  the algorithm should validate data\n-                                  before training. (default: True)\n-        :param convergenceTol:    A condition which decides iteration termination.\n-                                  (default: 0.001)\n+        :param data:\n+          The training data, an RDD of LabeledPoint.\n+        :param iterations:\n+          The number of iterations.\n+          (default: 100)\n+        :param step:\n+          The step parameter used in SGD.\n+          (default: 1.0)\n+        :param miniBatchFraction:\n+          Fraction of data to be used for each SGD iteration.\n+          (default: 1.0)\n+        :param initialWeights:\n+          The initial weights.\n+          (default: None)\n+        :param regParam:\n+          The regularizer parameter.\n+          (default: 0.01)\n+        :param regType:\n+          The type of regularizer used for training our model.\n+          :Allowed values:\n+            - \"l1\" for using L1 regularization\n+            - \"l2\" for using L2 regularization\n+            - None for no regularization\n+          (default: \"l2\")",
    "line": 99
  }],
  "prId": 10598
}]