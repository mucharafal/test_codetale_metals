[{
  "comments": [{
    "author": {
      "login": "josepablocam"
    },
    "body": "suuported -> supported\n",
    "commit": "2dd009dcf76639db46332f4b3bd29925e7e27898",
    "createdAt": "2015-07-16T20:13:02Z",
    "diffHunk": "@@ -238,6 +242,54 @@ def chiSqTest(observed, expected=None):\n             jmodel = callMLlibFunc(\"chiSqTest\", _convert_to_vector(observed), expected)\n         return ChiSqTestResult(jmodel)\n \n+    @staticmethod\n+    @ignore_unicode_prefix\n+    def kolmogorovSmirnovTest(data, distName=\"norm\", *params):\n+        \"\"\"\n+        .. note:: Experimental\n+\n+        Performs the Kolmogorov Smirnov (KS) test for data sampled from a continuous\n+        distribution. It tests the null hypothesis that the data is generated from a\n+        particular distribution.\n+\n+        The given data is sorted, the Empirical Cumulative Distribution Function (ECDF)\n+        is calculated which is the number of points having a CDF value lesser than a given point\n+        divided by the total number of points. Since the data is sorted, this is a step function\n+        that rises by (1 / length of data) for every ordered point.\n+\n+        The KS statistic gives us the maximum distance between the ECDF and the CDF. Intuitively\n+        if this value is large, the probabilty that the null hypothesis is true becomes small.\n+        For specific details of the implementation, please have a look at the Scala documentation.\n+\n+        :param data: RDD, samples from the data\n+        :param distName: string, currently only \"norm\" is suuported. (Normal distribution)"
  }],
  "prId": 7430
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "pydoc should have max line width 72 per PEP8.\n",
    "commit": "2dd009dcf76639db46332f4b3bd29925e7e27898",
    "createdAt": "2015-07-17T05:33:59Z",
    "diffHunk": "@@ -238,6 +242,54 @@ def chiSqTest(observed, expected=None):\n             jmodel = callMLlibFunc(\"chiSqTest\", _convert_to_vector(observed), expected)\n         return ChiSqTestResult(jmodel)\n \n+    @staticmethod\n+    @ignore_unicode_prefix\n+    def kolmogorovSmirnovTest(data, distName=\"norm\", *params):\n+        \"\"\"\n+        .. note:: Experimental\n+\n+        Performs the Kolmogorov Smirnov (KS) test for data sampled from a continuous\n+        distribution. It tests the null hypothesis that the data is generated from a\n+        particular distribution.\n+\n+        The given data is sorted, the Empirical Cumulative Distribution Function (ECDF)"
  }],
  "prId": 7430
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "`Kolmogorov Smirnov` -> `Kolmogorov-Smirnov`\n",
    "commit": "2dd009dcf76639db46332f4b3bd29925e7e27898",
    "createdAt": "2015-07-17T16:01:51Z",
    "diffHunk": "@@ -238,6 +242,60 @@ def chiSqTest(observed, expected=None):\n             jmodel = callMLlibFunc(\"chiSqTest\", _convert_to_vector(observed), expected)\n         return ChiSqTestResult(jmodel)\n \n+    @staticmethod\n+    @ignore_unicode_prefix\n+    def kolmogorovSmirnovTest(data, distName=\"norm\", *params):\n+        \"\"\"\n+        .. note:: Experimental\n+\n+        Performs the Kolmogorov Smirnov (KS) test for data sampled from"
  }],
  "prId": 7430
}, {
  "comments": [{
    "author": {
      "login": "sryza"
    },
    "body": "Small thing: can we include an example that passes parameters in?\n",
    "commit": "2dd009dcf76639db46332f4b3bd29925e7e27898",
    "createdAt": "2015-07-17T17:13:09Z",
    "diffHunk": "@@ -238,6 +242,60 @@ def chiSqTest(observed, expected=None):\n             jmodel = callMLlibFunc(\"chiSqTest\", _convert_to_vector(observed), expected)\n         return ChiSqTestResult(jmodel)\n \n+    @staticmethod\n+    @ignore_unicode_prefix\n+    def kolmogorovSmirnovTest(data, distName=\"norm\", *params):\n+        \"\"\"\n+        .. note:: Experimental\n+\n+        Performs the Kolmogorov Smirnov (KS) test for data sampled from\n+        a continuous distribution. It tests the null hypothesis that\n+        the data is generated from a particular distribution.\n+\n+        The given data is sorted and the Empirical Cumulative\n+        Distribution Function (ECDF) is calculated\n+        which for a given point is the number of points having a CDF\n+        value lesser than it divided by the total number of points.\n+\n+        Since the data is sorted, this is a step function\n+        that rises by (1 / length of data) for every ordered point.\n+\n+        The KS statistic gives us the maximum distance between the\n+        ECDF and the CDF. Intuitively if this statistic is large, the\n+        probabilty that the null hypothesis is true becomes small.\n+        For specific details of the implementation, please have a look\n+        at the Scala documentation.\n+\n+        :param data: RDD, samples from the data\n+        :param distName: string, currently only \"norm\" is supported.\n+                         (Normal distribution) to calculate the\n+                         theoretical distribution of the data.\n+        :param params: additional values which need to be provided for\n+                       a certain distribution.\n+                       If not provided, the default values are used.\n+        :return: KolmogorovSmirnovTestResult object containing the test\n+                 statistic, degrees of freedom, p-value,\n+                 the method used, and the null hypothesis.\n+\n+        >>> kstest = Statistics.kolmogorovSmirnovTest",
    "line": 56
  }],
  "prId": 7430
}]