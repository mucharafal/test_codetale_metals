[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Shall we rename `item` to `index`?\n",
    "commit": "07d0f2687193fae7fd075eac04d7d65a62c8227a",
    "createdAt": "2015-01-13T20:42:27Z",
    "diffHunk": "@@ -510,6 +510,22 @@ def __eq__(self, other):\n                 and np.array_equal(other.indices, self.indices)\n                 and np.array_equal(other.values, self.values))\n \n+    def __getitem__(self, item):"
  }],
  "prId": 4025
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Include `type(item)` in the error message.\n",
    "commit": "07d0f2687193fae7fd075eac04d7d65a62c8227a",
    "createdAt": "2015-01-13T20:42:29Z",
    "diffHunk": "@@ -510,6 +510,22 @@ def __eq__(self, other):\n                 and np.array_equal(other.indices, self.indices)\n                 and np.array_equal(other.values, self.values))\n \n+    def __getitem__(self, item):\n+        inds = self.indices\n+        vals = self.values\n+        if not isinstance(item, int):\n+            raise ValueError(\"Indices must be of type integer\")"
  }],
  "prId": 4025
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Include the input index in the error message.\n",
    "commit": "07d0f2687193fae7fd075eac04d7d65a62c8227a",
    "createdAt": "2015-01-13T20:42:30Z",
    "diffHunk": "@@ -510,6 +510,22 @@ def __eq__(self, other):\n                 and np.array_equal(other.indices, self.indices)\n                 and np.array_equal(other.values, self.values))\n \n+    def __getitem__(self, item):\n+        inds = self.indices\n+        vals = self.values\n+        if not isinstance(item, int):\n+            raise ValueError(\"Indices must be of type integer\")\n+        if item < 0:\n+            item += self.size\n+        if item >= self.size or item < 0:\n+            raise ValueError(\"Index out of bounds.\")"
  }],
  "prId": 4025
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Similarly, `insert_item` -> `insert_index` or `insert_position`?\n",
    "commit": "07d0f2687193fae7fd075eac04d7d65a62c8227a",
    "createdAt": "2015-01-13T20:42:32Z",
    "diffHunk": "@@ -510,6 +510,22 @@ def __eq__(self, other):\n                 and np.array_equal(other.indices, self.indices)\n                 and np.array_equal(other.values, self.values))\n \n+    def __getitem__(self, item):\n+        inds = self.indices\n+        vals = self.values\n+        if not isinstance(item, int):\n+            raise ValueError(\"Indices must be of type integer\")\n+        if item < 0:\n+            item += self.size\n+        if item >= self.size or item < 0:\n+            raise ValueError(\"Index out of bounds.\")\n+\n+        insert_item = np.searchsorted(inds, item)"
  }],
  "prId": 4025
}]