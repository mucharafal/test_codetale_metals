[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "I simplified this logic and tested each if-else branch.",
    "commit": "8c539a48d41e39cd6e12426340dea026acd59f33",
    "createdAt": "2018-11-15T12:53:14Z",
    "diffHunk": "@@ -0,0 +1,189 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+import glob\n+import os\n+import tempfile\n+import time\n+import unittest\n+\n+from pyspark import SparkConf, SparkContext, RDD\n+from pyspark.streaming import StreamingContext\n+\n+\n+def search_kinesis_asl_assembly_jar():\n+    kinesis_asl_assembly_dir = os.path.join(\n+        os.environ[\"SPARK_HOME\"], \"external/kinesis-asl-assembly\")\n+\n+    # We should ignore the following jars\n+    ignored_jar_suffixes = (\"javadoc.jar\", \"sources.jar\", \"test-sources.jar\", \"tests.jar\")\n+\n+    # Search jar in the project dir using the jar name_prefix for both sbt build and maven\n+    # build because the artifact jars are in different directories.\n+    name_prefix = \"spark-streaming-kinesis-asl-assembly\"\n+    sbt_build = glob.glob(os.path.join(\n+        kinesis_asl_assembly_dir, \"target/scala-*/%s-*.jar\" % name_prefix))\n+    maven_build = glob.glob(os.path.join(\n+        kinesis_asl_assembly_dir, \"target/%s_*.jar\" % name_prefix))\n+    jar_paths = sbt_build + maven_build\n+    jars = [jar for jar in jar_paths if not jar.endswith(ignored_jar_suffixes)]\n+\n+    if not jars:\n+        return None\n+    elif len(jars) > 1:\n+        raise Exception((\"Found multiple Spark Streaming Kinesis ASL assembly JARs: %s; please \"\n+                         \"remove all but one\") % (\", \".join(jars)))\n+    else:\n+        return jars[0]\n+\n+\n+# Must be same as the variable and condition defined in KinesisTestUtils.scala and modules.py\n+kinesis_test_environ_var = \"ENABLE_KINESIS_TESTS\"\n+should_skip_kinesis_tests = not os.environ.get(kinesis_test_environ_var) == '1'\n+kinesis_asl_assembly_jar = search_kinesis_asl_assembly_jar()\n+\n+if should_skip_kinesis_tests:",
    "line": 57
  }],
  "prId": 23034
}]