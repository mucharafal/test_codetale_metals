[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "`less then` -> `less than`.",
    "commit": "2e1e7da3111129907704f02e8d20a2894f22465d",
    "createdAt": "2018-06-28T17:48:37Z",
    "diffHunk": "@@ -1,19 +1,36 @@\n # Makefile for Sphinx documentation\n #\n \n+# You can set this variable from command line to force Sphinx to use the Python executable.\n+SPHINXPYTHON ?= python\n+\n+ifndef SPHINXBUILD\n+# Note that there is an issue with Python version and Sphinx in PySpark documentation generation.\n+# Please remove this check below when this issue is fixed. See SPARK-24530 for more details.\n+PYTHON_VERSION_CHECK = $(shell $(SPHINXPYTHON) -c 'import sys; print(sys.version_info < (3, 0, 0))')\n+ifeq ($(PYTHON_VERSION_CHECK), True)\n+$(warning Note that Python 3 is required to generate PySpark documentation correctly for now. Current Python executable was less then Python 3. See SPARK-24530. To force Sphinx to use a specific Python executable, please set SPHINXPYTHON to point to the Python 3 executable.)"
  }],
  "prId": 21659
}, {
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "<del>Put in `SPHINXOPTS`?</del>",
    "commit": "2e1e7da3111129907704f02e8d20a2894f22465d",
    "createdAt": "2018-06-29T04:58:01Z",
    "diffHunk": "@@ -1,19 +1,36 @@\n # Makefile for Sphinx documentation\n #\n \n+# You can set this variable from command line to force Sphinx to use the Python executable.\n+SPHINXPYTHON ?= python\n+\n+ifndef SPHINXBUILD\n+# Note that there is an issue with Python version and Sphinx in PySpark documentation generation.\n+# Please remove this check below when this issue is fixed. See SPARK-24530 for more details.\n+PYTHON_VERSION_CHECK = $(shell $(SPHINXPYTHON) -c 'import sys; print(sys.version_info < (3, 0, 0))')\n+ifeq ($(PYTHON_VERSION_CHECK), True)\n+$(warning Note that Python 3 is required to generate PySpark documentation correctly for now. Current Python executable was less than Python 3. See SPARK-24530. To force Sphinx to use a specific Python executable, please set SPHINXPYTHON to point to the Python 3 executable.)\n+endif\n+# Check if Sphinx is installed.\n+ifeq ($(shell $(SPHINXPYTHON) -c 'import sphinx' >/dev/null 2>&1; echo $$?), 1)\n+$(error Python executable '$(SPHINXPYTHON)' did not have Sphinx installed. Make sure you have Sphinx installed, then set the SPHINXPYTHON environment variable to point to the Python executable having Sphinx installed. If you don't have Sphinx installed, grab it from http://sphinx-doc.org/)\n+endif\n+else\n+# User-friendly check for sphinx-build if explicitly specified.\n+ifeq ($(shell which $(SPHINXBUILD) >/dev/null 2>&1; echo $$?), 1)\n+$(error The '$(SPHINXBUILD)' command was not found. Make sure you have Sphinx installed, then set the SPHINXBUILD environment variable to point to the full path of the '$(SPHINXBUILD)' executable. Alternatively you can add the directory with the executable to your PATH. If you don't have Sphinx installed, grab it from http://sphinx-doc.org/)\n+endif\n+endif\n+\n # You can set these variables from the command line.\n SPHINXOPTS    ?=\n-SPHINXBUILD   ?= sphinx-build\n+# Use 'SPHINXPYTHON -msphinx' instead of 'sphinx-build' by default. See https://github.com/sphinx-doc/sphinx/pull/3523 for more details.\n+SPHINXBUILD   ?= $(SPHINXPYTHON) -msphinx"
  }],
  "prId": 21659
}, {
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "If both are set, we prefer `SPHINXPYTHON`?",
    "commit": "2e1e7da3111129907704f02e8d20a2894f22465d",
    "createdAt": "2018-06-29T08:55:24Z",
    "diffHunk": "@@ -1,19 +1,35 @@\n # Makefile for Sphinx documentation\n #\n \n+ifndef SPHINXPYTHON\n+SPHINXBUILD ?= sphinx-build"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "yup, I updated the manual tests above. There are commands executed in the logs.",
    "commit": "2e1e7da3111129907704f02e8d20a2894f22465d",
    "createdAt": "2018-06-29T09:04:06Z",
    "diffHunk": "@@ -1,19 +1,35 @@\n # Makefile for Sphinx documentation\n #\n \n+ifndef SPHINXPYTHON\n+SPHINXBUILD ?= sphinx-build"
  }],
  "prId": 21659
}, {
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "If `SPHINXPYTHON -msphinx' is preferred instead of 'sphinx-build'` by default, should we go for a default `SPHINXPYTHON` + `-msphinx` instead of a default `SPHINXBUILD` if both are not set?",
    "commit": "2e1e7da3111129907704f02e8d20a2894f22465d",
    "createdAt": "2018-06-29T08:57:56Z",
    "diffHunk": "@@ -1,19 +1,35 @@\n # Makefile for Sphinx documentation\n #\n \n+ifndef SPHINXPYTHON\n+SPHINXBUILD ?= sphinx-build\n+# User-friendly check for sphinx-build if explicitly specified.\n+ifeq ($(shell which $(SPHINXBUILD) >/dev/null 2>&1; echo $$?), 1)\n+$(error The '$(SPHINXBUILD)' command was not found. Make sure you have Sphinx installed, then set the SPHINXBUILD environment variable to point to the full path of the '$(SPHINXBUILD)' executable. Alternatively you can add the directory with the executable to your PATH. If you don't have Sphinx installed, grab it from http://sphinx-doc.org/)\n+endif"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Yea... that was the problem I faced.. Probably we should change but seems it needs some changes in Jenkins environment .. FYI there are some discussion about the potential effect by setting that as a default in the PR link of the comments.\r\n\r\nI was thinking we set `SPHINXPYTHON` manually when we make a release for now.",
    "commit": "2e1e7da3111129907704f02e8d20a2894f22465d",
    "createdAt": "2018-06-29T09:08:29Z",
    "diffHunk": "@@ -1,19 +1,35 @@\n # Makefile for Sphinx documentation\n #\n \n+ifndef SPHINXPYTHON\n+SPHINXBUILD ?= sphinx-build\n+# User-friendly check for sphinx-build if explicitly specified.\n+ifeq ($(shell which $(SPHINXBUILD) >/dev/null 2>&1; echo $$?), 1)\n+$(error The '$(SPHINXBUILD)' command was not found. Make sure you have Sphinx installed, then set the SPHINXBUILD environment variable to point to the full path of the '$(SPHINXBUILD)' executable. Alternatively you can add the directory with the executable to your PATH. If you don't have Sphinx installed, grab it from http://sphinx-doc.org/)\n+endif"
  }, {
    "author": {
      "login": "holdenk"
    },
    "body": "That seems error prone - why not pick a good default of python3 and allow overriding?",
    "commit": "2e1e7da3111129907704f02e8d20a2894f22465d",
    "createdAt": "2018-07-02T04:45:24Z",
    "diffHunk": "@@ -1,19 +1,35 @@\n # Makefile for Sphinx documentation\n #\n \n+ifndef SPHINXPYTHON\n+SPHINXBUILD ?= sphinx-build\n+# User-friendly check for sphinx-build if explicitly specified.\n+ifeq ($(shell which $(SPHINXBUILD) >/dev/null 2>&1; echo $$?), 1)\n+$(error The '$(SPHINXBUILD)' command was not found. Make sure you have Sphinx installed, then set the SPHINXBUILD environment variable to point to the full path of the '$(SPHINXBUILD)' executable. Alternatively you can add the directory with the executable to your PATH. If you don't have Sphinx installed, grab it from http://sphinx-doc.org/)\n+endif"
  }],
  "prId": 21659
}, {
  "comments": [{
    "author": {
      "login": "holdenk"
    },
    "body": "Specify the priority here.",
    "commit": "2e1e7da3111129907704f02e8d20a2894f22465d",
    "createdAt": "2018-07-02T04:43:10Z",
    "diffHunk": "@@ -1,19 +1,35 @@\n # Makefile for Sphinx documentation\n #\n \n+ifndef SPHINXPYTHON\n+SPHINXBUILD ?= sphinx-build\n+# User-friendly check for sphinx-build if explicitly specified.\n+ifeq ($(shell which $(SPHINXBUILD) >/dev/null 2>&1; echo $$?), 1)\n+$(error The '$(SPHINXBUILD)' command was not found. Make sure you have Sphinx installed, then set the SPHINXBUILD environment variable to point to the full path of the '$(SPHINXBUILD)' executable. Alternatively you can add the directory with the executable to your PATH. If you don't have Sphinx installed, grab it from http://sphinx-doc.org/)\n+endif\n+else\n+# Note that there is an issue with Python version and Sphinx in PySpark documentation generation.\n+# Please remove this check below when this issue is fixed. See SPARK-24530 for more details.\n+PYTHON_VERSION_CHECK = $(shell $(SPHINXPYTHON) -c 'import sys; print(sys.version_info < (3, 0, 0))')\n+ifeq ($(PYTHON_VERSION_CHECK), True)\n+$(warning Note that Python 3 is required to generate PySpark documentation correctly for now. Current Python executable was less than Python 3. See SPARK-24530. To force Sphinx to use a specific Python executable, please set SPHINXPYTHON to point to the Python 3 executable.)\n+endif\n+# Check if Sphinx is installed.\n+ifeq ($(shell $(SPHINXPYTHON) -c 'import sphinx' >/dev/null 2>&1; echo $$?), 1)\n+$(error Python executable '$(SPHINXPYTHON)' did not have Sphinx installed. Make sure you have Sphinx installed, then set the SPHINXPYTHON environment variable to point to the Python executable having Sphinx installed. If you don't have Sphinx installed, grab it from http://sphinx-doc.org/)\n+endif\n+# Use 'SPHINXPYTHON -msphinx' instead of 'sphinx-build' by default. See https://github.com/sphinx-doc/sphinx/pull/3523 for more details.\n+SPHINXBUILD = $(SPHINXPYTHON) -msphinx\n+endif\n+\n # You can set these variables from the command line.\n SPHINXOPTS    ?=\n-SPHINXBUILD   ?= sphinx-build\n PAPER         ?=\n BUILDDIR      ?= _build\n+# Also, you can set SPHINXBUILD to specify Sphinx build executable or SPHINXPYTHON to specify the Python executable used in Sphinx."
  }],
  "prId": 21659
}, {
  "comments": [{
    "author": {
      "login": "holdenk"
    },
    "body": "Is there a way to check that Sphinx build is running with Py3 as done bellow?",
    "commit": "2e1e7da3111129907704f02e8d20a2894f22465d",
    "createdAt": "2018-07-03T18:51:37Z",
    "diffHunk": "@@ -1,19 +1,44 @@\n # Makefile for Sphinx documentation\n #\n \n+ifndef SPHINXBUILD\n+ifndef SPHINXPYTHON\n+SPHINXBUILD = sphinx-build\n+endif\n+endif\n+\n+ifdef SPHINXBUILD",
    "line": 10
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "I couldn't find an easy way.",
    "commit": "2e1e7da3111129907704f02e8d20a2894f22465d",
    "createdAt": "2018-07-04T01:36:44Z",
    "diffHunk": "@@ -1,19 +1,44 @@\n # Makefile for Sphinx documentation\n #\n \n+ifndef SPHINXBUILD\n+ifndef SPHINXPYTHON\n+SPHINXBUILD = sphinx-build\n+endif\n+endif\n+\n+ifdef SPHINXBUILD",
    "line": 10
  }],
  "prId": 21659
}, {
  "comments": [{
    "author": {
      "login": "jerryshao"
    },
    "body": "Can we fix the `SPHINXPYTHON` to python3 in release script `release-build.sh`?",
    "commit": "2e1e7da3111129907704f02e8d20a2894f22465d",
    "createdAt": "2018-07-09T02:37:58Z",
    "diffHunk": "@@ -1,19 +1,44 @@\n # Makefile for Sphinx documentation\n #\n \n+ifndef SPHINXBUILD\n+ifndef SPHINXPYTHON\n+SPHINXBUILD = sphinx-build\n+endif\n+endif\n+\n+ifdef SPHINXBUILD\n+# User-friendly check for sphinx-build.\n+ifeq ($(shell which $(SPHINXBUILD) >/dev/null 2>&1; echo $$?), 1)\n+$(error The '$(SPHINXBUILD)' command was not found. Make sure you have Sphinx installed, then set the SPHINXBUILD environment variable to point to the full path of the '$(SPHINXBUILD)' executable. Alternatively you can add the directory with the executable to your PATH. If you don't have Sphinx installed, grab it from http://sphinx-doc.org/)\n+endif\n+else\n+# Note that there is an issue with Python version and Sphinx in PySpark documentation generation.\n+# Please remove this check below when this issue is fixed. See SPARK-24530 for more details.\n+PYTHON_VERSION_CHECK = $(shell $(SPHINXPYTHON) -c 'import sys; print(sys.version_info < (3, 0, 0))')",
    "line": 18
  }, {
    "author": {
      "login": "jerryshao"
    },
    "body": "Or add some options/outputs in release script to let others know how to workaround this issue.",
    "commit": "2e1e7da3111129907704f02e8d20a2894f22465d",
    "createdAt": "2018-07-09T02:39:36Z",
    "diffHunk": "@@ -1,19 +1,44 @@\n # Makefile for Sphinx documentation\n #\n \n+ifndef SPHINXBUILD\n+ifndef SPHINXPYTHON\n+SPHINXBUILD = sphinx-build\n+endif\n+endif\n+\n+ifdef SPHINXBUILD\n+# User-friendly check for sphinx-build.\n+ifeq ($(shell which $(SPHINXBUILD) >/dev/null 2>&1; echo $$?), 1)\n+$(error The '$(SPHINXBUILD)' command was not found. Make sure you have Sphinx installed, then set the SPHINXBUILD environment variable to point to the full path of the '$(SPHINXBUILD)' executable. Alternatively you can add the directory with the executable to your PATH. If you don't have Sphinx installed, grab it from http://sphinx-doc.org/)\n+endif\n+else\n+# Note that there is an issue with Python version and Sphinx in PySpark documentation generation.\n+# Please remove this check below when this issue is fixed. See SPARK-24530 for more details.\n+PYTHON_VERSION_CHECK = $(shell $(SPHINXPYTHON) -c 'import sys; print(sys.version_info < (3, 0, 0))')",
    "line": 18
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Forcing `SPHINXPYTHON` to python3 by default will probably break the distribution builder in Jenkins if they are tried ... Seems there's an issue to force Sphinx to use Python 3 in Jenkins environment. This was the problem I struggled to tweak :(.\r\n\r\nAm trying to update the release process - https://github.com/apache/spark-website/pull/122. Would this be enough to address your concern?\r\n\r\n",
    "commit": "2e1e7da3111129907704f02e8d20a2894f22465d",
    "createdAt": "2018-07-09T02:53:01Z",
    "diffHunk": "@@ -1,19 +1,44 @@\n # Makefile for Sphinx documentation\n #\n \n+ifndef SPHINXBUILD\n+ifndef SPHINXPYTHON\n+SPHINXBUILD = sphinx-build\n+endif\n+endif\n+\n+ifdef SPHINXBUILD\n+# User-friendly check for sphinx-build.\n+ifeq ($(shell which $(SPHINXBUILD) >/dev/null 2>&1; echo $$?), 1)\n+$(error The '$(SPHINXBUILD)' command was not found. Make sure you have Sphinx installed, then set the SPHINXBUILD environment variable to point to the full path of the '$(SPHINXBUILD)' executable. Alternatively you can add the directory with the executable to your PATH. If you don't have Sphinx installed, grab it from http://sphinx-doc.org/)\n+endif\n+else\n+# Note that there is an issue with Python version and Sphinx in PySpark documentation generation.\n+# Please remove this check below when this issue is fixed. See SPARK-24530 for more details.\n+PYTHON_VERSION_CHECK = $(shell $(SPHINXPYTHON) -c 'import sys; print(sys.version_info < (3, 0, 0))')",
    "line": 18
  }],
  "prId": 21659
}]