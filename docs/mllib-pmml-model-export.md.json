[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Remove `\"PMML export = \" +` or change it to `PMML Model:\\n\". It is hard to think of a use case that mixes some strings with the XML content in the same line.\n",
    "commit": "c866fb8eaa287ea70d619ffb183439f6b4f0a5d4",
    "createdAt": "2015-05-17T21:22:26Z",
    "diffHunk": "@@ -0,0 +1,86 @@\n+---\n+layout: global\n+title: PMML model export - MLlib\n+displayTitle: <a href=\"mllib-guide.html\">MLlib</a> - PMML model export\n+---\n+\n+* Table of contents\n+{:toc}\n+\n+## MLlib supported models\n+\n+MLlib supports model export to Predictive Model Markup Language ([PMML](http://en.wikipedia.org/wiki/Predictive_Model_Markup_Language)).\n+\n+The table below outlines the MLlib models that can be exported to PMML and their equivalent PMML model.\n+\n+<table class=\"table\">\n+  <thead>\n+    <tr><th>MLlib model</th><th>PMML model</th></tr>\n+  </thead>\n+  <tbody>\n+    <tr>\n+      <td>KMeansModel</td><td>ClusteringModel</td>\n+    </tr>    \n+    <tr>\n+      <td>LinearRegressionModel</td><td>RegressionModel (functionName=\"regression\")</td>\n+    </tr>\n+    <tr>\n+      <td>RidgeRegressionModel</td><td>RegressionModel (functionName=\"regression\")</td>\n+    </tr>\n+    <tr>\n+      <td>LassoModel</td><td>RegressionModel (functionName=\"regression\")</td>\n+    </tr>\n+    <tr>\n+      <td>SVMModel</td><td>RegressionModel (functionName=\"classification\" normalizationMethod=\"none\")</td>\n+    </tr>\n+    <tr>\n+      <td>Binary LogisticRegressionModel</td><td>RegressionModel (functionName=\"classification\" normalizationMethod=\"logit\")</td>\n+    </tr>\n+  </tbody>\n+</table>\n+\n+## Examples\n+<div class=\"codetabs\">\n+\n+<div data-lang=\"scala\" markdown=\"1\">\n+To export a supported `model` (see table above) to PMML, simply call `model.toPMML`.\n+\n+Here a complete example of building a KMeansModel and print it out in PMML format:\n+{% highlight scala %}\n+import org.apache.spark.mllib.clustering.KMeans\n+import org.apache.spark.mllib.linalg.Vectors\n+\n+// Load and parse the data\n+val data = sc.textFile(\"data/mllib/kmeans_data.txt\")\n+val parsedData = data.map(s => Vectors.dense(s.split(' ').map(_.toDouble))).cache()\n+\n+// Cluster the data into two classes using KMeans\n+val numClusters = 2\n+val numIterations = 20\n+val clusters = KMeans.train(parsedData, numClusters, numIterations)\n+\n+// Export to PMML\n+println(\"PMML export = \" + clusters.toPMML)"
  }],
  "prId": 6219
}]