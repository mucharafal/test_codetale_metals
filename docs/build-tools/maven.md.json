[
  {
    "id" : "c00a31d2-51e2-44ef-b3e1-c0f9122a7c54",
    "prId" : 744,
    "comments" : [
      {
        "id" : "b4969d8a-f46c-4054-bc53-09e07cc11cc9",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "```suggestion\r\n      <version>@@SCALAMETA_VERSION@@</version>\r\n```",
        "createdAt" : "2019-06-06T16:14:27Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7eab01d0f08e38cd6625f0f616ebfa564ddd981f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,80 @@\n+---\n+id: maven\n+title: maven\n+---\n+\n+Maven is one of the most common build tools in the JVM ecosystem and it also allows for using scala through the [scala-maven-plugin](https://davidb.github.io/scala-maven-plugin/usage.html)\n+\n+## Automatic installation\n+\n+The first time you open Metals in a new workspace it prompts you to import the\n+build. Select \"Import build\" to start automatic installation.\n+\n+This will create all the needed bloop files, however there will be a warning, since the semanticDB plugin was not added. Most features should work without it, however some require semanticDB files to be provided alongside compiled data. To do that we need a couple of steps that are explained in the manual instalation section.\n+\n+## Manual instalation\n+\n+First, add the following in the project's `pom.xml` `<dependencies>` section:\n+\n+```xml\n+    <dependency>\n+      <groupId>org.scalameta</groupId>\n+      <artifactId>semanticdb-scalac_${scala.version}</artifactId>\n+      <version>4.1.4</version>"
  },
  {
    "id" : "db9c8d68-3314-451e-ba46-522b7d7a2c32",
    "prId" : 744,
    "comments" : [
      {
        "id" : "7bf4dd43-5965-41bc-a06e-c12e65744034",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Using the absolute local path seems fragile, is there a Scala maven plugin that makes it easier to add a compiler plugin?",
        "createdAt" : "2019-06-06T16:15:22Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "88545394-48cc-4966-892b-00b74231a20b",
        "parentId" : "7bf4dd43-5965-41bc-a06e-c12e65744034",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "scalor-maven-plugin: https://random-maven.github.io/scalor-maven-plugin/2.12/eclipse-config-mojo.html#definePluginList\r\n\r\nscala-maven-plugin: http://davidb.github.io/scala-maven-plugin/example_scalac_plugins.html (see \"using a scalac plugin\"",
        "createdAt" : "2019-06-06T16:17:30Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d1893715-bffe-40c0-b807-8f2749e889b1",
        "parentId" : "7bf4dd43-5965-41bc-a06e-c12e65744034",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Och alright, I haven't noticed this solution. That makes it much easier now.",
        "createdAt" : "2019-06-06T16:29:09Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7eab01d0f08e38cd6625f0f616ebfa564ddd981f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,80 @@\n+---\n+id: maven\n+title: maven\n+---\n+\n+Maven is one of the most common build tools in the JVM ecosystem and it also allows for using scala through the [scala-maven-plugin](https://davidb.github.io/scala-maven-plugin/usage.html)\n+\n+## Automatic installation\n+\n+The first time you open Metals in a new workspace it prompts you to import the\n+build. Select \"Import build\" to start automatic installation.\n+\n+This will create all the needed bloop files, however there will be a warning, since the semanticDB plugin was not added. Most features should work without it, however some require semanticDB files to be provided alongside compiled data. To do that we need a couple of steps that are explained in the manual instalation section.\n+\n+## Manual instalation\n+\n+First, add the following in the project's `pom.xml` `<dependencies>` section:\n+\n+```xml\n+    <dependency>\n+      <groupId>org.scalameta</groupId>\n+      <artifactId>semanticdb-scalac_${scala.version}</artifactId>\n+      <version>4.1.4</version>\n+    </dependency>\n+```\n+`4.1.4` version can be replaced with whatever is the newest version.\n+\n+Now, run `mvn compile`, which will download the needed scalac plugin. The jar should be available in your repository, which usually is `<user_dir>/.m2`.\n+\n+Next, we need to add a couple of options to the compiler, that's why we will have to modify the configuration section of the plugin:\n+\n+```xml\n+  <plugin>\n+    <groupId>net.alchim31.maven</groupId>\n+    <artifactId>scala-maven-plugin</artifactId>\n+    <version>4.0.2</version>\n+    <configuration>\n+      <args>\n+        <arg>-Xplugin:@@replace_with_semanticDB_path@@</arg>"
  },
  {
    "id" : "873a5d8c-f273-4fe1-ba06-101b25588a52",
    "prId" : 744,
    "comments" : [
      {
        "id" : "16fea3be-e020-4320-8946-1021185bf6ed",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Is `project.basedir` the root directory of the build or the base directory of the project? I'm wondering if there is actually such as thing as `baseDirectory.in(ThisBuild).value` in Maven ðŸ¤” We might need built-in support for automatically setting the sourceroot in Bloop, cc/ @jvican ",
        "createdAt" : "2019-06-06T16:20:01Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a1646cab-c3d0-418f-9ec8-11ba537770fe",
        "parentId" : "16fea3be-e020-4320-8946-1021185bf6ed",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "`project.basedir: The directory that the current project resides in.`",
        "createdAt" : "2019-06-06T16:30:15Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1226cc6c-9cd7-4baf-a304-7bd8a7747d50",
        "parentId" : "16fea3be-e020-4320-8946-1021185bf6ed",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "For most common Maven builds I suspect we need the sourceroot to match the parent of `project.basedir`. ",
        "createdAt" : "2019-06-06T16:31:41Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8ac65cdf-a228-448e-a1a8-5c67276b084f",
        "parentId" : "16fea3be-e020-4320-8946-1021185bf6ed",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Plugin is usually defined in the root project, so this should point to the correct location.",
        "createdAt" : "2019-06-06T16:42:29Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "40fc38f8-239f-43bd-a157-06c723caa391",
        "parentId" : "16fea3be-e020-4320-8946-1021185bf6ed",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Have you double checked? It might be worth adding a test case to confirm",
        "createdAt" : "2019-06-07T10:52:53Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "be5e976a-c634-4095-9110-05148d841062",
        "parentId" : "16fea3be-e020-4320-8946-1021185bf6ed",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Changed to `maven.multiModuleProjectDirectory` - that seems to be the root dir for all of the projects. Checked it and looks to be working.",
        "createdAt" : "2019-06-07T12:29:35Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7eab01d0f08e38cd6625f0f616ebfa564ddd981f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,80 @@\n+---\n+id: maven\n+title: maven\n+---\n+\n+Maven is one of the most common build tools in the JVM ecosystem and it also allows for using scala through the [scala-maven-plugin](https://davidb.github.io/scala-maven-plugin/usage.html)\n+\n+## Automatic installation\n+\n+The first time you open Metals in a new workspace it prompts you to import the\n+build. Select \"Import build\" to start automatic installation.\n+\n+This will create all the needed bloop files, however there will be a warning, since the semanticDB plugin was not added. Most features should work without it, however some require semanticDB files to be provided alongside compiled data. To do that we need a couple of steps that are explained in the manual instalation section.\n+\n+## Manual instalation\n+\n+First, add the following in the project's `pom.xml` `<dependencies>` section:\n+\n+```xml\n+    <dependency>\n+      <groupId>org.scalameta</groupId>\n+      <artifactId>semanticdb-scalac_${scala.version}</artifactId>\n+      <version>4.1.4</version>\n+    </dependency>\n+```\n+`4.1.4` version can be replaced with whatever is the newest version.\n+\n+Now, run `mvn compile`, which will download the needed scalac plugin. The jar should be available in your repository, which usually is `<user_dir>/.m2`.\n+\n+Next, we need to add a couple of options to the compiler, that's why we will have to modify the configuration section of the plugin:\n+\n+```xml\n+  <plugin>\n+    <groupId>net.alchim31.maven</groupId>\n+    <artifactId>scala-maven-plugin</artifactId>\n+    <version>4.0.2</version>\n+    <configuration>\n+      <args>\n+        <arg>-Xplugin:@@replace_with_semanticDB_path@@</arg>\n+        <arg>-P:semanticdb:synthetics:on</arg>\n+        <arg>-P:semanticdb:failures:warning</arg>\n+        <arg>-P:semanticdb:sourceroot:${project.basedir}</arg>"
  },
  {
    "id" : "db01d3ee-390a-4f7f-8b1f-8dd82983980b",
    "prId" : 744,
    "comments" : [
      {
        "id" : "41dc322a-98a8-4ca5-bb16-19c12c223bbb",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "```suggestion\r\nMaven is one of the most common build tools in the JVM ecosystem and it also allows for using Scala through [scala-maven-plugin](https://davidb.github.io/scala-maven-plugin/usage.html) and [scalor-maven-plugin](https://github.com/random-maven/scalor-maven-plugin).\r\n```",
        "createdAt" : "2019-06-07T10:49:26Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "31eede03-405f-4767-9735-c8a771c1f7ef",
        "parentId" : "41dc322a-98a8-4ca5-bb16-19c12c223bbb",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I don't think bloop plugin works with scalor, so maybe we shouldn't mention it?",
        "createdAt" : "2019-06-07T12:10:20Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f94793c6-b2e9-4e3e-8814-b357ebf31e92",
        "parentId" : "41dc322a-98a8-4ca5-bb16-19c12c223bbb",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I didn't know. Is there a something we can link to for scalor-maven-plugin users? It seems like an actively maintained project with fairly rich features. If so, we can add a new sentence\r\n```\r\nalso allows for using scala through the [scala-maven-plugin](https://davidb.github.io/scala-maven-plugin/usage.html).\r\nThe [scalor-maven-plugin](https://github.com/random-maven/scalor-maven-plugin) is not supported, see $LINK for more information.\r\n```",
        "createdAt" : "2019-06-07T12:29:09Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "33de4f42-d1fe-4380-9561-68410721c42c",
        "parentId" : "41dc322a-98a8-4ca5-bb16-19c12c223bbb",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "> I didn't know. Is there a something we can link to for scalor-maven-plugin users?\r\n\r\nI don't think we have anything to point to right now - maybe add a comment that we would appreciate a contribution to bloop? \r\n\r\n\r\n",
        "createdAt" : "2019-06-07T12:43:39Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fd5961dc-cab7-49a4-bc0e-9d484e667e2a",
        "parentId" : "41dc322a-98a8-4ca5-bb16-19c12c223bbb",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Fair enough, we can skip mentioning scalor-maven-plugin in that case and if somebody asks we'll point to Bloop.",
        "createdAt" : "2019-06-07T13:04:26Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7eab01d0f08e38cd6625f0f616ebfa564ddd981f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,61 @@\n+---\n+id: maven\n+title: Maven\n+---\n+\n+Maven is one of the most common build tools in the JVM ecosystem and it also allows for using scala through the [scala-maven-plugin](https://davidb.github.io/scala-maven-plugin/usage.html)."
  },
  {
    "id" : "770079d6-09ea-4327-9dcf-1fbefe2b7278",
    "prId" : 744,
    "comments" : [
      {
        "id" : "db265a3c-162a-4138-8a6e-afa74b933dd2",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I recommend formatting markdown files with prettier even if we don't enforce this in CI. Prettier provides automatic line-wrapping which makes reviewing a bit easier.",
        "createdAt" : "2019-06-07T10:50:20Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "951cb8a1-aad9-4e89-8861-dd12226fafeb",
        "parentId" : "db265a3c-162a-4138-8a6e-afa74b933dd2",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "```suggestion\r\nThis will create all the needed Bloop files, however there will be a warning, since the SemanticDB plugin was not added yet in the automatic import. This will be added later. Most features should work without it, however some require SemanticDB files to be provided alongside compiled data. To do that we need a couple of steps that are explained in the manual installation section.\r\n```",
        "createdAt" : "2019-06-07T10:50:50Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7eab01d0f08e38cd6625f0f616ebfa564ddd981f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,61 @@\n+---\n+id: maven\n+title: Maven\n+---\n+\n+Maven is one of the most common build tools in the JVM ecosystem and it also allows for using scala through the [scala-maven-plugin](https://davidb.github.io/scala-maven-plugin/usage.html).\n+\n+## Automatic installation\n+\n+The first time you open Metals in a new workspace it prompts you to import the\n+build. Select \"Import build\" to start automatic installation.\n+\n+This will create all the needed bloop files, however there will be a warning, since the semanticDB plugin was not added yet in the automatic import. This will be added later. Most features should work without it, however some require semanticDB files to be provided alongside compiled data. To do that we need a couple of steps that are explained in the manual instalation section."
  },
  {
    "id" : "6cac662a-8fd0-40d1-a250-273e1e9096ce",
    "prId" : 744,
    "comments" : [
      {
        "id" : "1a1643cc-fa07-4ed1-b792-914593bc3dd0",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "```suggestion\r\nFirst, we need to add a couple of options to the Scala compiler in the configuration section:\r\n```",
        "createdAt" : "2019-06-07T10:52:11Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7eab01d0f08e38cd6625f0f616ebfa564ddd981f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,61 @@\n+---\n+id: maven\n+title: Maven\n+---\n+\n+Maven is one of the most common build tools in the JVM ecosystem and it also allows for using scala through the [scala-maven-plugin](https://davidb.github.io/scala-maven-plugin/usage.html).\n+\n+## Automatic installation\n+\n+The first time you open Metals in a new workspace it prompts you to import the\n+build. Select \"Import build\" to start automatic installation.\n+\n+This will create all the needed bloop files, however there will be a warning, since the semanticDB plugin was not added yet in the automatic import. This will be added later. Most features should work without it, however some require semanticDB files to be provided alongside compiled data. To do that we need a couple of steps that are explained in the manual instalation section.\n+\n+## Manual instalation\n+\n+First, we need to add a couple of options to the scala compiler in the configuration section:"
  },
  {
    "id" : "f6bd5e73-81f3-4b28-8a23-1120eec19625",
    "prId" : 744,
    "comments" : [
      {
        "id" : "3a1a1b51-954d-48ff-9b09-d05ec611dcea",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "```suggestion\r\n\r\n```\r\n\r\nNot needed, `@@SCALAMETA_VERSION@@` is automatically replaced by mdoc.",
        "createdAt" : "2019-06-07T10:53:25Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7eab01d0f08e38cd6625f0f616ebfa564ddd981f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,61 @@\n+---\n+id: maven\n+title: Maven\n+---\n+\n+Maven is one of the most common build tools in the JVM ecosystem and it also allows for using scala through the [scala-maven-plugin](https://davidb.github.io/scala-maven-plugin/usage.html).\n+\n+## Automatic installation\n+\n+The first time you open Metals in a new workspace it prompts you to import the\n+build. Select \"Import build\" to start automatic installation.\n+\n+This will create all the needed bloop files, however there will be a warning, since the semanticDB plugin was not added yet in the automatic import. This will be added later. Most features should work without it, however some require semanticDB files to be provided alongside compiled data. To do that we need a couple of steps that are explained in the manual instalation section.\n+\n+## Manual instalation\n+\n+First, we need to add a couple of options to the scala compiler in the configuration section:\n+\n+```xml\n+<plugin>\n+<groupId>net.alchim31.maven</groupId>\n+<artifactId>scala-maven-plugin</artifactId>\n+<version>4.0.2</version>\n+...\n+<configuration>\n+    <compilerPlugins>\n+        <compilerPlugin>\n+            <groupId>org.scalameta</groupId>\n+            <artifactId>semanticdb-scalac_${scala.version}</artifactId>\n+            <version>@@SCALAMETA_VERSION@@</version>\n+        </compilerPlugin>\n+    </compilerPlugins>\n+    <args>\n+        <arg>-P:semanticdb:synthetics:on</arg>\n+        <arg>-P:semanticdb:failures:warning</arg>\n+        <arg>-P:semanticdb:sourceroot:${project.basedir}</arg>\n+        <arg>-Yrangepos</arg>\n+        <arg>-Xplugin-require:semanticdb</arg>\n+    </args>\n+</configuration>\n+...\n+</plugin>\n+```\n+\n+`@@SCALAMETA_VERSION@@` version can be replaced with whatever is the newest semanticDB version."
  },
  {
    "id" : "8cdd645d-8689-4993-8fcd-216c4496e968",
    "prId" : 744,
    "comments" : [
      {
        "id" : "0873f3fb-1073-4ecd-9915-c45842b53208",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "\r\n```suggestion\r\n`mvn ch.epfl.scala:maven-bloop_2.10:@@BLOOP_VERSION@@:bloopInstall -DdownloadSources=true`\r\n```",
        "createdAt" : "2019-06-07T10:53:43Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7eab01d0f08e38cd6625f0f616ebfa564ddd981f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,61 @@\n+---\n+id: maven\n+title: Maven\n+---\n+\n+Maven is one of the most common build tools in the JVM ecosystem and it also allows for using scala through the [scala-maven-plugin](https://davidb.github.io/scala-maven-plugin/usage.html).\n+\n+## Automatic installation\n+\n+The first time you open Metals in a new workspace it prompts you to import the\n+build. Select \"Import build\" to start automatic installation.\n+\n+This will create all the needed bloop files, however there will be a warning, since the semanticDB plugin was not added yet in the automatic import. This will be added later. Most features should work without it, however some require semanticDB files to be provided alongside compiled data. To do that we need a couple of steps that are explained in the manual instalation section.\n+\n+## Manual instalation\n+\n+First, we need to add a couple of options to the scala compiler in the configuration section:\n+\n+```xml\n+<plugin>\n+<groupId>net.alchim31.maven</groupId>\n+<artifactId>scala-maven-plugin</artifactId>\n+<version>4.0.2</version>\n+...\n+<configuration>\n+    <compilerPlugins>\n+        <compilerPlugin>\n+            <groupId>org.scalameta</groupId>\n+            <artifactId>semanticdb-scalac_${scala.version}</artifactId>\n+            <version>@@SCALAMETA_VERSION@@</version>\n+        </compilerPlugin>\n+    </compilerPlugins>\n+    <args>\n+        <arg>-P:semanticdb:synthetics:on</arg>\n+        <arg>-P:semanticdb:failures:warning</arg>\n+        <arg>-P:semanticdb:sourceroot:${project.basedir}</arg>\n+        <arg>-Yrangepos</arg>\n+        <arg>-Xplugin-require:semanticdb</arg>\n+    </args>\n+</configuration>\n+...\n+</plugin>\n+```\n+\n+`@@SCALAMETA_VERSION@@` version can be replaced with whatever is the newest semanticDB version.\n+\n+Next, we need to do run bloopInstall via maven, which can be done easily through:\n+\n+`mvn ch.epfl.scala:maven-bloop_2.10:1.3.0:bloopInstall -DdownloadSources=true`"
  },
  {
    "id" : "3d7f4f50-50d7-41f4-b61a-8d14f83c4609",
    "prId" : 744,
    "comments" : [
      {
        "id" : "ca3f2c51-374d-46a1-9a2b-4771d3caab96",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "```suggestion\r\n```",
        "createdAt" : "2019-06-07T10:54:19Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7eab01d0f08e38cd6625f0f616ebfa564ddd981f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,61 @@\n+---\n+id: maven\n+title: Maven\n+---\n+\n+Maven is one of the most common build tools in the JVM ecosystem and it also allows for using scala through the [scala-maven-plugin](https://davidb.github.io/scala-maven-plugin/usage.html).\n+\n+## Automatic installation\n+\n+The first time you open Metals in a new workspace it prompts you to import the\n+build. Select \"Import build\" to start automatic installation.\n+\n+This will create all the needed bloop files, however there will be a warning, since the semanticDB plugin was not added yet in the automatic import. This will be added later. Most features should work without it, however some require semanticDB files to be provided alongside compiled data. To do that we need a couple of steps that are explained in the manual instalation section.\n+\n+## Manual instalation\n+\n+First, we need to add a couple of options to the scala compiler in the configuration section:\n+\n+```xml\n+<plugin>\n+<groupId>net.alchim31.maven</groupId>\n+<artifactId>scala-maven-plugin</artifactId>\n+<version>4.0.2</version>\n+...\n+<configuration>\n+    <compilerPlugins>\n+        <compilerPlugin>\n+            <groupId>org.scalameta</groupId>\n+            <artifactId>semanticdb-scalac_${scala.version}</artifactId>\n+            <version>@@SCALAMETA_VERSION@@</version>\n+        </compilerPlugin>\n+    </compilerPlugins>\n+    <args>\n+        <arg>-P:semanticdb:synthetics:on</arg>\n+        <arg>-P:semanticdb:failures:warning</arg>\n+        <arg>-P:semanticdb:sourceroot:${project.basedir}</arg>\n+        <arg>-Yrangepos</arg>\n+        <arg>-Xplugin-require:semanticdb</arg>\n+    </args>\n+</configuration>\n+...\n+</plugin>\n+```\n+\n+`@@SCALAMETA_VERSION@@` version can be replaced with whatever is the newest semanticDB version.\n+\n+Next, we need to do run bloopInstall via maven, which can be done easily through:\n+\n+`mvn ch.epfl.scala:maven-bloop_2.10:1.3.0:bloopInstall -DdownloadSources=true`\n+\n+where `1.3.0` can be replaced with newer bloop version."
  },
  {
    "id" : "49e6716a-6e52-4c88-9900-e6e820642f43",
    "prId" : 744,
    "comments" : [
      {
        "id" : "4da4af26-407b-42b1-b27f-c1a9d097af2b",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "````suggestion\r\n```\r\nmvn ch.epfl.scala:maven-bloop_2.10:@@BLOOP_VERSION@@:bloopInstall -DdownloadSources=true -DaddScalacArgs=-Xplugin:/path/to/semanticdb-scalac.jar|-P:semanticdb:synthetics:on|-P:semanticdb:failures:warning|-P:semanticdb:sourceroot:/path/to/workspace|-Yrangepos|-Xplugin-require:semanticdb'\r\n```\r\n````",
        "createdAt" : "2019-06-07T10:55:57Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7eab01d0f08e38cd6625f0f616ebfa564ddd981f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,61 @@\n+---\n+id: maven\n+title: Maven\n+---\n+\n+Maven is one of the most common build tools in the JVM ecosystem and it also allows for using scala through the [scala-maven-plugin](https://davidb.github.io/scala-maven-plugin/usage.html).\n+\n+## Automatic installation\n+\n+The first time you open Metals in a new workspace it prompts you to import the\n+build. Select \"Import build\" to start automatic installation.\n+\n+This will create all the needed bloop files, however there will be a warning, since the semanticDB plugin was not added yet in the automatic import. This will be added later. Most features should work without it, however some require semanticDB files to be provided alongside compiled data. To do that we need a couple of steps that are explained in the manual instalation section.\n+\n+## Manual instalation\n+\n+First, we need to add a couple of options to the scala compiler in the configuration section:\n+\n+```xml\n+<plugin>\n+<groupId>net.alchim31.maven</groupId>\n+<artifactId>scala-maven-plugin</artifactId>\n+<version>4.0.2</version>\n+...\n+<configuration>\n+    <compilerPlugins>\n+        <compilerPlugin>\n+            <groupId>org.scalameta</groupId>\n+            <artifactId>semanticdb-scalac_${scala.version}</artifactId>\n+            <version>@@SCALAMETA_VERSION@@</version>\n+        </compilerPlugin>\n+    </compilerPlugins>\n+    <args>\n+        <arg>-P:semanticdb:synthetics:on</arg>\n+        <arg>-P:semanticdb:failures:warning</arg>\n+        <arg>-P:semanticdb:sourceroot:${project.basedir}</arg>\n+        <arg>-Yrangepos</arg>\n+        <arg>-Xplugin-require:semanticdb</arg>\n+    </args>\n+</configuration>\n+...\n+</plugin>\n+```\n+\n+`@@SCALAMETA_VERSION@@` version can be replaced with whatever is the newest semanticDB version.\n+\n+Next, we need to do run bloopInstall via maven, which can be done easily through:\n+\n+`mvn ch.epfl.scala:maven-bloop_2.10:1.3.0:bloopInstall -DdownloadSources=true`\n+\n+where `1.3.0` can be replaced with newer bloop version.\n+\n+Everything should now be correctly configured and work even when reimporting the project.\n+\n+If you don't want to modify the `pom.xml` you can also run bloopInstall with an additional parameter:\n+\n+`mvn ch.epfl.scala:maven-bloop_2.10:1.3.0-RC1:bloopInstall -DdownloadSources=true -DaddScalacArgs=-Xplugin:@@semantic_DB_plugin_jar@@|-P:semanticdb:synthetics:on|-P:semanticdb:failures:warning|-P:semanticdb:sourceroot:/home/tgodzik/Documents/maven-test-repo|-Yrangepos|-Xplugin-require:semanticdb'`"
  },
  {
    "id" : "374560a4-ffb2-4359-8b5f-7027f5d49ab7",
    "prId" : 744,
    "comments" : [
      {
        "id" : "342cef91-508c-48d6-8385-acf72cbc2da3",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "```suggestion\r\nIf you choose this option though you should select \"Don't show again\" when Metals prompts to import the build.\r\n```",
        "createdAt" : "2019-06-07T10:57:20Z",
        "updatedAt" : "2019-06-07T14:18:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7eab01d0f08e38cd6625f0f616ebfa564ddd981f",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,61 @@\n+---\n+id: maven\n+title: Maven\n+---\n+\n+Maven is one of the most common build tools in the JVM ecosystem and it also allows for using scala through the [scala-maven-plugin](https://davidb.github.io/scala-maven-plugin/usage.html).\n+\n+## Automatic installation\n+\n+The first time you open Metals in a new workspace it prompts you to import the\n+build. Select \"Import build\" to start automatic installation.\n+\n+This will create all the needed bloop files, however there will be a warning, since the semanticDB plugin was not added yet in the automatic import. This will be added later. Most features should work without it, however some require semanticDB files to be provided alongside compiled data. To do that we need a couple of steps that are explained in the manual instalation section.\n+\n+## Manual instalation\n+\n+First, we need to add a couple of options to the scala compiler in the configuration section:\n+\n+```xml\n+<plugin>\n+<groupId>net.alchim31.maven</groupId>\n+<artifactId>scala-maven-plugin</artifactId>\n+<version>4.0.2</version>\n+...\n+<configuration>\n+    <compilerPlugins>\n+        <compilerPlugin>\n+            <groupId>org.scalameta</groupId>\n+            <artifactId>semanticdb-scalac_${scala.version}</artifactId>\n+            <version>@@SCALAMETA_VERSION@@</version>\n+        </compilerPlugin>\n+    </compilerPlugins>\n+    <args>\n+        <arg>-P:semanticdb:synthetics:on</arg>\n+        <arg>-P:semanticdb:failures:warning</arg>\n+        <arg>-P:semanticdb:sourceroot:${project.basedir}</arg>\n+        <arg>-Yrangepos</arg>\n+        <arg>-Xplugin-require:semanticdb</arg>\n+    </args>\n+</configuration>\n+...\n+</plugin>\n+```\n+\n+`@@SCALAMETA_VERSION@@` version can be replaced with whatever is the newest semanticDB version.\n+\n+Next, we need to do run bloopInstall via maven, which can be done easily through:\n+\n+`mvn ch.epfl.scala:maven-bloop_2.10:1.3.0:bloopInstall -DdownloadSources=true`\n+\n+where `1.3.0` can be replaced with newer bloop version.\n+\n+Everything should now be correctly configured and work even when reimporting the project.\n+\n+If you don't want to modify the `pom.xml` you can also run bloopInstall with an additional parameter:\n+\n+`mvn ch.epfl.scala:maven-bloop_2.10:1.3.0-RC1:bloopInstall -DdownloadSources=true -DaddScalacArgs=-Xplugin:@@semantic_DB_plugin_jar@@|-P:semanticdb:synthetics:on|-P:semanticdb:failures:warning|-P:semanticdb:sourceroot:/home/tgodzik/Documents/maven-test-repo|-Yrangepos|-Xplugin-require:semanticdb'`\n+\n+`-DaddScalacArgs` takes a string with additional scalac options separated by `|`. You would need to download the correct plugin first and manually replace `@@semantic_DB_plugin_jar@@` with the path to the semanticDB plugin jar.\n+\n+If you choose this option though you should disable automatic import, because it will override the changes."
  },
  {
    "id" : "6af42197-1415-4d47-8ec9-1fe90e13e5b4",
    "prId" : 963,
    "comments" : [
      {
        "id" : "6ec8f457-06dc-414f-97ac-fbb1e881221a",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "installation",
        "createdAt" : "2019-10-05T11:26:51Z",
        "updatedAt" : "2019-10-05T12:07:01Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bd6877c7-772c-405e-856e-4a451f73373f",
        "parentId" : "6ec8f457-06dc-414f-97ac-fbb1e881221a",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : ":fearful: I knew something was wrong",
        "createdAt" : "2019-10-05T11:54:34Z",
        "updatedAt" : "2019-10-05T12:07:01Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2200127a063c59fcfca5f27a2ea49e72149984b5",
    "line" : null,
    "diffHunk" : "@@ -22,6 +23,13 @@ couple of steps that are explained in the manual installation section.\n \n ## Manual instalation\n \n+For current Metals snapshots all you need to run the manual instalation is:"
  }
]