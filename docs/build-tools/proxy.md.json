[
  {
    "id" : "02aa1887-8fea-4223-bb8f-c3b2e6404c54",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "472b87d4-0d9c-41e1-8157-cbf6f6970e2b",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nThere are multiple ways of fixing these issues, but not all of them work in all\r\n```",
        "createdAt" : "2020-01-27T15:18:07Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all"
  },
  {
    "id" : "f8214dbb-e7c0-427a-97f1-9a68005cb7a8",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "29dc791f-840c-4396-a552-f55d53b5543b",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nsituations.  While we are trying to make it as painless as possible to setup\r\n```",
        "createdAt" : "2020-01-27T15:18:39Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all\n+situations and while we are trying to make it as painless as possible to setup"
  },
  {
    "id" : "96293f87-b35b-45e3-ab43-637587ddc725",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "861a7300-fe7f-4a85-8f9d-ea696d485ce0",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- The Visual Studio Code and coc-metals extensions use Coursier bootstrap to download Metals\r\n```",
        "createdAt" : "2020-01-27T15:19:43Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all\n+situations and while we are trying to make it as painless as possible to setup\n+everything, there are some steps that might need to be done manually.\n+\n+Everything inside Metals uses Coursier to download its dependencies:\n+\n+- Visual Studio Code extension uses Coursier bootstrap to download Metals"
  },
  {
    "id" : "72bbc2ab-4743-43c5-81ce-109f682644cf",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "d476290a-640e-4809-9110-4d873b952ddf",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nYou can find some more information about particular topics on\r\n```",
        "createdAt" : "2020-01-27T15:20:21Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all\n+situations and while we are trying to make it as painless as possible to setup\n+everything, there are some steps that might need to be done manually.\n+\n+Everything inside Metals uses Coursier to download its dependencies:\n+\n+- Visual Studio Code extension uses Coursier bootstrap to download Metals\n+  server - Coursier boostrap is a minimal file, which only purpose is to\n+  download a full Coursier version. It's used to keep the extension size down to\n+  a minimum.\n+- Metals uses Coursier api to download dependencies needed for a particular\n+  Scala version\n+- Bloop uses Coursier api to download the SemanticDB plugin\n+\n+You can find some more information about particular topics on the"
  },
  {
    "id" : "a9d10326-2f2d-40da-b856-1a2b1bdd844e",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "3eb1ee6b-d3ed-417f-a16e-4210e206304b",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nsummarize the most useful solutions here.\r\n```",
        "createdAt" : "2020-01-27T15:20:35Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all\n+situations and while we are trying to make it as painless as possible to setup\n+everything, there are some steps that might need to be done manually.\n+\n+Everything inside Metals uses Coursier to download its dependencies:\n+\n+- Visual Studio Code extension uses Coursier bootstrap to download Metals\n+  server - Coursier boostrap is a minimal file, which only purpose is to\n+  download a full Coursier version. It's used to keep the extension size down to\n+  a minimum.\n+- Metals uses Coursier api to download dependencies needed for a particular\n+  Scala version\n+- Bloop uses Coursier api to download the SemanticDB plugin\n+\n+You can find some more information about particular topics on the\n+[Coursier's website](https://get-coursier.io/docs/overview), but we will try to\n+summarize most useful solutions here."
  },
  {
    "id" : "a346f027-82fc-4a2b-8047-ec62ce4daaa2",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "b960681e-0b10-480c-be45-4e67984197c0",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nCoursier's mirrors. Especially since Coursier boostrap tries to download the\r\n```",
        "createdAt" : "2020-01-27T15:21:02Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all\n+situations and while we are trying to make it as painless as possible to setup\n+everything, there are some steps that might need to be done manually.\n+\n+Everything inside Metals uses Coursier to download its dependencies:\n+\n+- Visual Studio Code extension uses Coursier bootstrap to download Metals\n+  server - Coursier boostrap is a minimal file, which only purpose is to\n+  download a full Coursier version. It's used to keep the extension size down to\n+  a minimum.\n+- Metals uses Coursier api to download dependencies needed for a particular\n+  Scala version\n+- Bloop uses Coursier api to download the SemanticDB plugin\n+\n+You can find some more information about particular topics on the\n+[Coursier's website](https://get-coursier.io/docs/overview), but we will try to\n+summarize most useful solutions here.\n+\n+## Mirrors\n+\n+If Maven Central is not available for your workspace it might be best to use\n+Coursier's mirrors. Especially that the Coursier boostrap tries to download the"
  },
  {
    "id" : "67ad0de4-5e39-49a9-a028-472ea2ca8009",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "d41e34b3-bd67-4f2c-9799-b6c57690ef83",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nCoursier, which is especially important in the case of the Bloop server, which when\r\n```",
        "createdAt" : "2020-01-27T15:21:57Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all\n+situations and while we are trying to make it as painless as possible to setup\n+everything, there are some steps that might need to be done manually.\n+\n+Everything inside Metals uses Coursier to download its dependencies:\n+\n+- Visual Studio Code extension uses Coursier bootstrap to download Metals\n+  server - Coursier boostrap is a minimal file, which only purpose is to\n+  download a full Coursier version. It's used to keep the extension size down to\n+  a minimum.\n+- Metals uses Coursier api to download dependencies needed for a particular\n+  Scala version\n+- Bloop uses Coursier api to download the SemanticDB plugin\n+\n+You can find some more information about particular topics on the\n+[Coursier's website](https://get-coursier.io/docs/overview), but we will try to\n+summarize most useful solutions here.\n+\n+## Mirrors\n+\n+If Maven Central is not available for your workspace it might be best to use\n+Coursier's mirrors. Especially that the Coursier boostrap tries to download the\n+core of Coursier from Maven Central directly, which can only be changed using\n+the mirrors. Not all functionalities are yet available for the boostrapped\n+Coursier version, including custom repositories, so mirrors are really the only\n+way to fix this.\n+\n+There are different ways to setup mirrors:\n+\n+### Via global properties file\n+\n+Create `mirror.properties` file with the contents:\n+\n+```\n+central.from=https://repo1.maven.org/maven2\n+central.to=http://exmaple.com:8080/nexus/content/groups/public\n+```\n+\n+You need to replace the uri after `central.to=` with your private repository.\n+\n+The location of the mirror file varies depending on the operating system:\n+\n+- Windows:\n+  `C:\\Users\\<user_name>\\AppData\\Roaming\\Coursier\\config\\mirror.properties`\n+- Linux: `~/.config/coursier/mirror.properties`\n+- MacOS: `~/Library/Preferences/Coursier/mirror.properties`\n+\n+This solution will work in most cases for all previously mentioned usages of\n+Coursier, which is especially important in case of the Bloop server, which when"
  },
  {
    "id" : "36003d27-17bb-4190-b3a2-d21ff54b61ef",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "01acc00b-5fa4-4100-92f3-009c260c43df",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\navailable either locally or globally for the Metals server. In case of the\r\n```",
        "createdAt" : "2020-01-27T15:23:10Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all\n+situations and while we are trying to make it as painless as possible to setup\n+everything, there are some steps that might need to be done manually.\n+\n+Everything inside Metals uses Coursier to download its dependencies:\n+\n+- Visual Studio Code extension uses Coursier bootstrap to download Metals\n+  server - Coursier boostrap is a minimal file, which only purpose is to\n+  download a full Coursier version. It's used to keep the extension size down to\n+  a minimum.\n+- Metals uses Coursier api to download dependencies needed for a particular\n+  Scala version\n+- Bloop uses Coursier api to download the SemanticDB plugin\n+\n+You can find some more information about particular topics on the\n+[Coursier's website](https://get-coursier.io/docs/overview), but we will try to\n+summarize most useful solutions here.\n+\n+## Mirrors\n+\n+If Maven Central is not available for your workspace it might be best to use\n+Coursier's mirrors. Especially that the Coursier boostrap tries to download the\n+core of Coursier from Maven Central directly, which can only be changed using\n+the mirrors. Not all functionalities are yet available for the boostrapped\n+Coursier version, including custom repositories, so mirrors are really the only\n+way to fix this.\n+\n+There are different ways to setup mirrors:\n+\n+### Via global properties file\n+\n+Create `mirror.properties` file with the contents:\n+\n+```\n+central.from=https://repo1.maven.org/maven2\n+central.to=http://exmaple.com:8080/nexus/content/groups/public\n+```\n+\n+You need to replace the uri after `central.to=` with your private repository.\n+\n+The location of the mirror file varies depending on the operating system:\n+\n+- Windows:\n+  `C:\\Users\\<user_name>\\AppData\\Roaming\\Coursier\\config\\mirror.properties`\n+- Linux: `~/.config/coursier/mirror.properties`\n+- MacOS: `~/Library/Preferences/Coursier/mirror.properties`\n+\n+This solution will work in most cases for all previously mentioned usages of\n+Coursier, which is especially important in case of the Bloop server, which when\n+started by Metals will not have any system properties forwarded.\n+\n+### Via environment variable\n+\n+You can set the environment variable `COURSIER_MIRRORS` with the location of the\n+file containing the mirror definition. That environment variable will need to\n+either global or available for invocation of the Metals server. In case of the"
  },
  {
    "id" : "93ce2f14-22ff-4810-be68-659573f3e045",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "81ac9e99-e5d9-4115-9308-3d54d8a790fc",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nThis is also available as a setting in the Metals Visual Studio Code and coc-metals extensions.\r\n```",
        "createdAt" : "2020-01-27T15:24:11Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all\n+situations and while we are trying to make it as painless as possible to setup\n+everything, there are some steps that might need to be done manually.\n+\n+Everything inside Metals uses Coursier to download its dependencies:\n+\n+- Visual Studio Code extension uses Coursier bootstrap to download Metals\n+  server - Coursier boostrap is a minimal file, which only purpose is to\n+  download a full Coursier version. It's used to keep the extension size down to\n+  a minimum.\n+- Metals uses Coursier api to download dependencies needed for a particular\n+  Scala version\n+- Bloop uses Coursier api to download the SemanticDB plugin\n+\n+You can find some more information about particular topics on the\n+[Coursier's website](https://get-coursier.io/docs/overview), but we will try to\n+summarize most useful solutions here.\n+\n+## Mirrors\n+\n+If Maven Central is not available for your workspace it might be best to use\n+Coursier's mirrors. Especially that the Coursier boostrap tries to download the\n+core of Coursier from Maven Central directly, which can only be changed using\n+the mirrors. Not all functionalities are yet available for the boostrapped\n+Coursier version, including custom repositories, so mirrors are really the only\n+way to fix this.\n+\n+There are different ways to setup mirrors:\n+\n+### Via global properties file\n+\n+Create `mirror.properties` file with the contents:\n+\n+```\n+central.from=https://repo1.maven.org/maven2\n+central.to=http://exmaple.com:8080/nexus/content/groups/public\n+```\n+\n+You need to replace the uri after `central.to=` with your private repository.\n+\n+The location of the mirror file varies depending on the operating system:\n+\n+- Windows:\n+  `C:\\Users\\<user_name>\\AppData\\Roaming\\Coursier\\config\\mirror.properties`\n+- Linux: `~/.config/coursier/mirror.properties`\n+- MacOS: `~/Library/Preferences/Coursier/mirror.properties`\n+\n+This solution will work in most cases for all previously mentioned usages of\n+Coursier, which is especially important in case of the Bloop server, which when\n+started by Metals will not have any system properties forwarded.\n+\n+### Via environment variable\n+\n+You can set the environment variable `COURSIER_MIRRORS` with the location of the\n+file containing the mirror definition. That environment variable will need to\n+either global or available for invocation of the Metals server. In case of the\n+Visual Studio Code extension it means you will need to start it from command\n+line with that variable in scope.\n+\n+### Via properties\n+\n+You can also use properties to specify the location of the mirror file, for\n+example:\n+\n+```\n+-Dcoursier.mirrors=~/.config/coursier/mirror.properties\n+```\n+\n+This property needs to be added to the Metals server and Coursier invocation.\n+However, this solution will not work for Bloop, because properties are not\n+forwarded to the invocation of the Bloop server. You will need to use a\n+different method for Bloop in this case or you can run the build server manually\n+with everything specified separately.\n+\n+## Custom artifact repositories (Maven or Ivy resolvers)\n+\n+In case you need to add custom repositories to resolve Metals server artifacts\n+you can use the `COURSIER_REPOSITORIES` environment variable. This will tell\n+Coursier to try to download artifacts from your private artifact repository.\n+This is also available as a setting in the Metals Visual Studio Code extension."
  },
  {
    "id" : "5a992b10-ce7b-4549-9ede-f0acef86eb91",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "e43c1e3c-d219-4171-baf4-5834e944204b",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nIn some cases, workspaces might require a proxy in order to resolve the needed\r\n```",
        "createdAt" : "2020-01-27T15:24:24Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all\n+situations and while we are trying to make it as painless as possible to setup\n+everything, there are some steps that might need to be done manually.\n+\n+Everything inside Metals uses Coursier to download its dependencies:\n+\n+- Visual Studio Code extension uses Coursier bootstrap to download Metals\n+  server - Coursier boostrap is a minimal file, which only purpose is to\n+  download a full Coursier version. It's used to keep the extension size down to\n+  a minimum.\n+- Metals uses Coursier api to download dependencies needed for a particular\n+  Scala version\n+- Bloop uses Coursier api to download the SemanticDB plugin\n+\n+You can find some more information about particular topics on the\n+[Coursier's website](https://get-coursier.io/docs/overview), but we will try to\n+summarize most useful solutions here.\n+\n+## Mirrors\n+\n+If Maven Central is not available for your workspace it might be best to use\n+Coursier's mirrors. Especially that the Coursier boostrap tries to download the\n+core of Coursier from Maven Central directly, which can only be changed using\n+the mirrors. Not all functionalities are yet available for the boostrapped\n+Coursier version, including custom repositories, so mirrors are really the only\n+way to fix this.\n+\n+There are different ways to setup mirrors:\n+\n+### Via global properties file\n+\n+Create `mirror.properties` file with the contents:\n+\n+```\n+central.from=https://repo1.maven.org/maven2\n+central.to=http://exmaple.com:8080/nexus/content/groups/public\n+```\n+\n+You need to replace the uri after `central.to=` with your private repository.\n+\n+The location of the mirror file varies depending on the operating system:\n+\n+- Windows:\n+  `C:\\Users\\<user_name>\\AppData\\Roaming\\Coursier\\config\\mirror.properties`\n+- Linux: `~/.config/coursier/mirror.properties`\n+- MacOS: `~/Library/Preferences/Coursier/mirror.properties`\n+\n+This solution will work in most cases for all previously mentioned usages of\n+Coursier, which is especially important in case of the Bloop server, which when\n+started by Metals will not have any system properties forwarded.\n+\n+### Via environment variable\n+\n+You can set the environment variable `COURSIER_MIRRORS` with the location of the\n+file containing the mirror definition. That environment variable will need to\n+either global or available for invocation of the Metals server. In case of the\n+Visual Studio Code extension it means you will need to start it from command\n+line with that variable in scope.\n+\n+### Via properties\n+\n+You can also use properties to specify the location of the mirror file, for\n+example:\n+\n+```\n+-Dcoursier.mirrors=~/.config/coursier/mirror.properties\n+```\n+\n+This property needs to be added to the Metals server and Coursier invocation.\n+However, this solution will not work for Bloop, because properties are not\n+forwarded to the invocation of the Bloop server. You will need to use a\n+different method for Bloop in this case or you can run the build server manually\n+with everything specified separately.\n+\n+## Custom artifact repositories (Maven or Ivy resolvers)\n+\n+In case you need to add custom repositories to resolve Metals server artifacts\n+you can use the `COURSIER_REPOSITORIES` environment variable. This will tell\n+Coursier to try to download artifacts from your private artifact repository.\n+This is also available as a setting in the Metals Visual Studio Code extension.\n+\n+## Proxy settings\n+\n+In some cases, workspaces might require proxy in order to resolve the needed"
  },
  {
    "id" : "f89c1f92-f824-4bf7-a3ba-2a6ac97e737d",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "c1b10818-bdd2-47af-988c-9e7537f85091",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nartifacts. Depending on the way Metals server is started, proxy settings can be\r\n```",
        "createdAt" : "2020-01-27T15:24:44Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all\n+situations and while we are trying to make it as painless as possible to setup\n+everything, there are some steps that might need to be done manually.\n+\n+Everything inside Metals uses Coursier to download its dependencies:\n+\n+- Visual Studio Code extension uses Coursier bootstrap to download Metals\n+  server - Coursier boostrap is a minimal file, which only purpose is to\n+  download a full Coursier version. It's used to keep the extension size down to\n+  a minimum.\n+- Metals uses Coursier api to download dependencies needed for a particular\n+  Scala version\n+- Bloop uses Coursier api to download the SemanticDB plugin\n+\n+You can find some more information about particular topics on the\n+[Coursier's website](https://get-coursier.io/docs/overview), but we will try to\n+summarize most useful solutions here.\n+\n+## Mirrors\n+\n+If Maven Central is not available for your workspace it might be best to use\n+Coursier's mirrors. Especially that the Coursier boostrap tries to download the\n+core of Coursier from Maven Central directly, which can only be changed using\n+the mirrors. Not all functionalities are yet available for the boostrapped\n+Coursier version, including custom repositories, so mirrors are really the only\n+way to fix this.\n+\n+There are different ways to setup mirrors:\n+\n+### Via global properties file\n+\n+Create `mirror.properties` file with the contents:\n+\n+```\n+central.from=https://repo1.maven.org/maven2\n+central.to=http://exmaple.com:8080/nexus/content/groups/public\n+```\n+\n+You need to replace the uri after `central.to=` with your private repository.\n+\n+The location of the mirror file varies depending on the operating system:\n+\n+- Windows:\n+  `C:\\Users\\<user_name>\\AppData\\Roaming\\Coursier\\config\\mirror.properties`\n+- Linux: `~/.config/coursier/mirror.properties`\n+- MacOS: `~/Library/Preferences/Coursier/mirror.properties`\n+\n+This solution will work in most cases for all previously mentioned usages of\n+Coursier, which is especially important in case of the Bloop server, which when\n+started by Metals will not have any system properties forwarded.\n+\n+### Via environment variable\n+\n+You can set the environment variable `COURSIER_MIRRORS` with the location of the\n+file containing the mirror definition. That environment variable will need to\n+either global or available for invocation of the Metals server. In case of the\n+Visual Studio Code extension it means you will need to start it from command\n+line with that variable in scope.\n+\n+### Via properties\n+\n+You can also use properties to specify the location of the mirror file, for\n+example:\n+\n+```\n+-Dcoursier.mirrors=~/.config/coursier/mirror.properties\n+```\n+\n+This property needs to be added to the Metals server and Coursier invocation.\n+However, this solution will not work for Bloop, because properties are not\n+forwarded to the invocation of the Bloop server. You will need to use a\n+different method for Bloop in this case or you can run the build server manually\n+with everything specified separately.\n+\n+## Custom artifact repositories (Maven or Ivy resolvers)\n+\n+In case you need to add custom repositories to resolve Metals server artifacts\n+you can use the `COURSIER_REPOSITORIES` environment variable. This will tell\n+Coursier to try to download artifacts from your private artifact repository.\n+This is also available as a setting in the Metals Visual Studio Code extension.\n+\n+## Proxy settings\n+\n+In some cases, workspaces might require proxy in order to resolve the needed\n+artifacts. Depending on the way Metals server is started proxy settings can be"
  },
  {
    "id" : "5684daaf-3309-4d16-899c-6dfb375db385",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "613da4fa-e5a6-4553-aaa9-ca6e257e043f",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nspecified using properties inside a `.jvmopts` file and `metals.serverProperties`\r\n```",
        "createdAt" : "2020-01-27T15:25:03Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all\n+situations and while we are trying to make it as painless as possible to setup\n+everything, there are some steps that might need to be done manually.\n+\n+Everything inside Metals uses Coursier to download its dependencies:\n+\n+- Visual Studio Code extension uses Coursier bootstrap to download Metals\n+  server - Coursier boostrap is a minimal file, which only purpose is to\n+  download a full Coursier version. It's used to keep the extension size down to\n+  a minimum.\n+- Metals uses Coursier api to download dependencies needed for a particular\n+  Scala version\n+- Bloop uses Coursier api to download the SemanticDB plugin\n+\n+You can find some more information about particular topics on the\n+[Coursier's website](https://get-coursier.io/docs/overview), but we will try to\n+summarize most useful solutions here.\n+\n+## Mirrors\n+\n+If Maven Central is not available for your workspace it might be best to use\n+Coursier's mirrors. Especially that the Coursier boostrap tries to download the\n+core of Coursier from Maven Central directly, which can only be changed using\n+the mirrors. Not all functionalities are yet available for the boostrapped\n+Coursier version, including custom repositories, so mirrors are really the only\n+way to fix this.\n+\n+There are different ways to setup mirrors:\n+\n+### Via global properties file\n+\n+Create `mirror.properties` file with the contents:\n+\n+```\n+central.from=https://repo1.maven.org/maven2\n+central.to=http://exmaple.com:8080/nexus/content/groups/public\n+```\n+\n+You need to replace the uri after `central.to=` with your private repository.\n+\n+The location of the mirror file varies depending on the operating system:\n+\n+- Windows:\n+  `C:\\Users\\<user_name>\\AppData\\Roaming\\Coursier\\config\\mirror.properties`\n+- Linux: `~/.config/coursier/mirror.properties`\n+- MacOS: `~/Library/Preferences/Coursier/mirror.properties`\n+\n+This solution will work in most cases for all previously mentioned usages of\n+Coursier, which is especially important in case of the Bloop server, which when\n+started by Metals will not have any system properties forwarded.\n+\n+### Via environment variable\n+\n+You can set the environment variable `COURSIER_MIRRORS` with the location of the\n+file containing the mirror definition. That environment variable will need to\n+either global or available for invocation of the Metals server. In case of the\n+Visual Studio Code extension it means you will need to start it from command\n+line with that variable in scope.\n+\n+### Via properties\n+\n+You can also use properties to specify the location of the mirror file, for\n+example:\n+\n+```\n+-Dcoursier.mirrors=~/.config/coursier/mirror.properties\n+```\n+\n+This property needs to be added to the Metals server and Coursier invocation.\n+However, this solution will not work for Bloop, because properties are not\n+forwarded to the invocation of the Bloop server. You will need to use a\n+different method for Bloop in this case or you can run the build server manually\n+with everything specified separately.\n+\n+## Custom artifact repositories (Maven or Ivy resolvers)\n+\n+In case you need to add custom repositories to resolve Metals server artifacts\n+you can use the `COURSIER_REPOSITORIES` environment variable. This will tell\n+Coursier to try to download artifacts from your private artifact repository.\n+This is also available as a setting in the Metals Visual Studio Code extension.\n+\n+## Proxy settings\n+\n+In some cases, workspaces might require proxy in order to resolve the needed\n+artifacts. Depending on the way Metals server is started proxy settings can be\n+specified using properties inside `.jvmopts` file and `metals.serverProperties`"
  },
  {
    "id" : "734f3a20-5486-4f9f-a834-265bd2f00f7b",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "fbb9704e-e1b6-465f-9e54-5182e368e346",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n(for Visual Studio Code or coc-metals extensions) or via properties for Coursier and Metals\r\n```",
        "createdAt" : "2020-01-27T15:25:23Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all\n+situations and while we are trying to make it as painless as possible to setup\n+everything, there are some steps that might need to be done manually.\n+\n+Everything inside Metals uses Coursier to download its dependencies:\n+\n+- Visual Studio Code extension uses Coursier bootstrap to download Metals\n+  server - Coursier boostrap is a minimal file, which only purpose is to\n+  download a full Coursier version. It's used to keep the extension size down to\n+  a minimum.\n+- Metals uses Coursier api to download dependencies needed for a particular\n+  Scala version\n+- Bloop uses Coursier api to download the SemanticDB plugin\n+\n+You can find some more information about particular topics on the\n+[Coursier's website](https://get-coursier.io/docs/overview), but we will try to\n+summarize most useful solutions here.\n+\n+## Mirrors\n+\n+If Maven Central is not available for your workspace it might be best to use\n+Coursier's mirrors. Especially that the Coursier boostrap tries to download the\n+core of Coursier from Maven Central directly, which can only be changed using\n+the mirrors. Not all functionalities are yet available for the boostrapped\n+Coursier version, including custom repositories, so mirrors are really the only\n+way to fix this.\n+\n+There are different ways to setup mirrors:\n+\n+### Via global properties file\n+\n+Create `mirror.properties` file with the contents:\n+\n+```\n+central.from=https://repo1.maven.org/maven2\n+central.to=http://exmaple.com:8080/nexus/content/groups/public\n+```\n+\n+You need to replace the uri after `central.to=` with your private repository.\n+\n+The location of the mirror file varies depending on the operating system:\n+\n+- Windows:\n+  `C:\\Users\\<user_name>\\AppData\\Roaming\\Coursier\\config\\mirror.properties`\n+- Linux: `~/.config/coursier/mirror.properties`\n+- MacOS: `~/Library/Preferences/Coursier/mirror.properties`\n+\n+This solution will work in most cases for all previously mentioned usages of\n+Coursier, which is especially important in case of the Bloop server, which when\n+started by Metals will not have any system properties forwarded.\n+\n+### Via environment variable\n+\n+You can set the environment variable `COURSIER_MIRRORS` with the location of the\n+file containing the mirror definition. That environment variable will need to\n+either global or available for invocation of the Metals server. In case of the\n+Visual Studio Code extension it means you will need to start it from command\n+line with that variable in scope.\n+\n+### Via properties\n+\n+You can also use properties to specify the location of the mirror file, for\n+example:\n+\n+```\n+-Dcoursier.mirrors=~/.config/coursier/mirror.properties\n+```\n+\n+This property needs to be added to the Metals server and Coursier invocation.\n+However, this solution will not work for Bloop, because properties are not\n+forwarded to the invocation of the Bloop server. You will need to use a\n+different method for Bloop in this case or you can run the build server manually\n+with everything specified separately.\n+\n+## Custom artifact repositories (Maven or Ivy resolvers)\n+\n+In case you need to add custom repositories to resolve Metals server artifacts\n+you can use the `COURSIER_REPOSITORIES` environment variable. This will tell\n+Coursier to try to download artifacts from your private artifact repository.\n+This is also available as a setting in the Metals Visual Studio Code extension.\n+\n+## Proxy settings\n+\n+In some cases, workspaces might require proxy in order to resolve the needed\n+artifacts. Depending on the way Metals server is started proxy settings can be\n+specified using properties inside `.jvmopts` file and `metals.serverProperties`\n+(for Visual Studio Code extension) or via properties for Coursier and Metals"
  },
  {
    "id" : "91405fed-dc35-47ab-8c89-55dbc533e6b5",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "f695dd21-3f23-40f7-a4d1-13849364d3e3",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n- via copying the correct `.jvmopts` file to the `~/.bloop` directory, which will\r\n```",
        "createdAt" : "2020-01-27T15:25:57Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all\n+situations and while we are trying to make it as painless as possible to setup\n+everything, there are some steps that might need to be done manually.\n+\n+Everything inside Metals uses Coursier to download its dependencies:\n+\n+- Visual Studio Code extension uses Coursier bootstrap to download Metals\n+  server - Coursier boostrap is a minimal file, which only purpose is to\n+  download a full Coursier version. It's used to keep the extension size down to\n+  a minimum.\n+- Metals uses Coursier api to download dependencies needed for a particular\n+  Scala version\n+- Bloop uses Coursier api to download the SemanticDB plugin\n+\n+You can find some more information about particular topics on the\n+[Coursier's website](https://get-coursier.io/docs/overview), but we will try to\n+summarize most useful solutions here.\n+\n+## Mirrors\n+\n+If Maven Central is not available for your workspace it might be best to use\n+Coursier's mirrors. Especially that the Coursier boostrap tries to download the\n+core of Coursier from Maven Central directly, which can only be changed using\n+the mirrors. Not all functionalities are yet available for the boostrapped\n+Coursier version, including custom repositories, so mirrors are really the only\n+way to fix this.\n+\n+There are different ways to setup mirrors:\n+\n+### Via global properties file\n+\n+Create `mirror.properties` file with the contents:\n+\n+```\n+central.from=https://repo1.maven.org/maven2\n+central.to=http://exmaple.com:8080/nexus/content/groups/public\n+```\n+\n+You need to replace the uri after `central.to=` with your private repository.\n+\n+The location of the mirror file varies depending on the operating system:\n+\n+- Windows:\n+  `C:\\Users\\<user_name>\\AppData\\Roaming\\Coursier\\config\\mirror.properties`\n+- Linux: `~/.config/coursier/mirror.properties`\n+- MacOS: `~/Library/Preferences/Coursier/mirror.properties`\n+\n+This solution will work in most cases for all previously mentioned usages of\n+Coursier, which is especially important in case of the Bloop server, which when\n+started by Metals will not have any system properties forwarded.\n+\n+### Via environment variable\n+\n+You can set the environment variable `COURSIER_MIRRORS` with the location of the\n+file containing the mirror definition. That environment variable will need to\n+either global or available for invocation of the Metals server. In case of the\n+Visual Studio Code extension it means you will need to start it from command\n+line with that variable in scope.\n+\n+### Via properties\n+\n+You can also use properties to specify the location of the mirror file, for\n+example:\n+\n+```\n+-Dcoursier.mirrors=~/.config/coursier/mirror.properties\n+```\n+\n+This property needs to be added to the Metals server and Coursier invocation.\n+However, this solution will not work for Bloop, because properties are not\n+forwarded to the invocation of the Bloop server. You will need to use a\n+different method for Bloop in this case or you can run the build server manually\n+with everything specified separately.\n+\n+## Custom artifact repositories (Maven or Ivy resolvers)\n+\n+In case you need to add custom repositories to resolve Metals server artifacts\n+you can use the `COURSIER_REPOSITORIES` environment variable. This will tell\n+Coursier to try to download artifacts from your private artifact repository.\n+This is also available as a setting in the Metals Visual Studio Code extension.\n+\n+## Proxy settings\n+\n+In some cases, workspaces might require proxy in order to resolve the needed\n+artifacts. Depending on the way Metals server is started proxy settings can be\n+specified using properties inside `.jvmopts` file and `metals.serverProperties`\n+(for Visual Studio Code extension) or via properties for Coursier and Metals\n+invocations.\n+\n+However, because proxy properties might vary between workspaces and a Bloop\n+server must work for multiple clients at the same time they are not forwarded to\n+the Bloop itself. To make sure that Bloop uses the correct proxy settings, you\n+can specify them in two ways:\n+\n+- via copying the correct `.jvmopts` file to `~/.bloop` directory, which will"
  },
  {
    "id" : "cb7bf474-d916-4a1a-901f-7a0490d02612",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "2a80f333-9589-4519-a42f-a91b1c865cac",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nThere has already been a couple of issues surrounding this topic, if you are\r\n```",
        "createdAt" : "2020-01-27T15:26:22Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all\n+situations and while we are trying to make it as painless as possible to setup\n+everything, there are some steps that might need to be done manually.\n+\n+Everything inside Metals uses Coursier to download its dependencies:\n+\n+- Visual Studio Code extension uses Coursier bootstrap to download Metals\n+  server - Coursier boostrap is a minimal file, which only purpose is to\n+  download a full Coursier version. It's used to keep the extension size down to\n+  a minimum.\n+- Metals uses Coursier api to download dependencies needed for a particular\n+  Scala version\n+- Bloop uses Coursier api to download the SemanticDB plugin\n+\n+You can find some more information about particular topics on the\n+[Coursier's website](https://get-coursier.io/docs/overview), but we will try to\n+summarize most useful solutions here.\n+\n+## Mirrors\n+\n+If Maven Central is not available for your workspace it might be best to use\n+Coursier's mirrors. Especially that the Coursier boostrap tries to download the\n+core of Coursier from Maven Central directly, which can only be changed using\n+the mirrors. Not all functionalities are yet available for the boostrapped\n+Coursier version, including custom repositories, so mirrors are really the only\n+way to fix this.\n+\n+There are different ways to setup mirrors:\n+\n+### Via global properties file\n+\n+Create `mirror.properties` file with the contents:\n+\n+```\n+central.from=https://repo1.maven.org/maven2\n+central.to=http://exmaple.com:8080/nexus/content/groups/public\n+```\n+\n+You need to replace the uri after `central.to=` with your private repository.\n+\n+The location of the mirror file varies depending on the operating system:\n+\n+- Windows:\n+  `C:\\Users\\<user_name>\\AppData\\Roaming\\Coursier\\config\\mirror.properties`\n+- Linux: `~/.config/coursier/mirror.properties`\n+- MacOS: `~/Library/Preferences/Coursier/mirror.properties`\n+\n+This solution will work in most cases for all previously mentioned usages of\n+Coursier, which is especially important in case of the Bloop server, which when\n+started by Metals will not have any system properties forwarded.\n+\n+### Via environment variable\n+\n+You can set the environment variable `COURSIER_MIRRORS` with the location of the\n+file containing the mirror definition. That environment variable will need to\n+either global or available for invocation of the Metals server. In case of the\n+Visual Studio Code extension it means you will need to start it from command\n+line with that variable in scope.\n+\n+### Via properties\n+\n+You can also use properties to specify the location of the mirror file, for\n+example:\n+\n+```\n+-Dcoursier.mirrors=~/.config/coursier/mirror.properties\n+```\n+\n+This property needs to be added to the Metals server and Coursier invocation.\n+However, this solution will not work for Bloop, because properties are not\n+forwarded to the invocation of the Bloop server. You will need to use a\n+different method for Bloop in this case or you can run the build server manually\n+with everything specified separately.\n+\n+## Custom artifact repositories (Maven or Ivy resolvers)\n+\n+In case you need to add custom repositories to resolve Metals server artifacts\n+you can use the `COURSIER_REPOSITORIES` environment variable. This will tell\n+Coursier to try to download artifacts from your private artifact repository.\n+This is also available as a setting in the Metals Visual Studio Code extension.\n+\n+## Proxy settings\n+\n+In some cases, workspaces might require proxy in order to resolve the needed\n+artifacts. Depending on the way Metals server is started proxy settings can be\n+specified using properties inside `.jvmopts` file and `metals.serverProperties`\n+(for Visual Studio Code extension) or via properties for Coursier and Metals\n+invocations.\n+\n+However, because proxy properties might vary between workspaces and a Bloop\n+server must work for multiple clients at the same time they are not forwarded to\n+the Bloop itself. To make sure that Bloop uses the correct proxy settings, you\n+can specify them in two ways:\n+\n+- via copying the correct `.jvmopts` file to `~/.bloop` directory, which will\n+  make them global\n+- specifying environment variable for a correct proxy type:\n+  - `http_proxy=<hostname>:<port>`\n+  - `https_proxy=<hostname>:<port>`\n+  - `ftp_proxy=<hostname>:<port>`\n+  - `socket_proxy=<hostname>:<port>`\n+\n+## Troubleshooting\n+\n+There has been already a couple of issues surrounding this topic, if you are"
  },
  {
    "id" : "661e0823-3f7d-4749-9fb6-bb5c83d68ee2",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "50343e9d-34a2-4d1e-99db-8c77833d6116",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nThis might mean that you don't have your java installation on your PATH and Bloop was\r\n```",
        "createdAt" : "2020-01-27T15:26:46Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There a multiple ways of fixing these issues, but not all of them work in all\n+situations and while we are trying to make it as painless as possible to setup\n+everything, there are some steps that might need to be done manually.\n+\n+Everything inside Metals uses Coursier to download its dependencies:\n+\n+- Visual Studio Code extension uses Coursier bootstrap to download Metals\n+  server - Coursier boostrap is a minimal file, which only purpose is to\n+  download a full Coursier version. It's used to keep the extension size down to\n+  a minimum.\n+- Metals uses Coursier api to download dependencies needed for a particular\n+  Scala version\n+- Bloop uses Coursier api to download the SemanticDB plugin\n+\n+You can find some more information about particular topics on the\n+[Coursier's website](https://get-coursier.io/docs/overview), but we will try to\n+summarize most useful solutions here.\n+\n+## Mirrors\n+\n+If Maven Central is not available for your workspace it might be best to use\n+Coursier's mirrors. Especially that the Coursier boostrap tries to download the\n+core of Coursier from Maven Central directly, which can only be changed using\n+the mirrors. Not all functionalities are yet available for the boostrapped\n+Coursier version, including custom repositories, so mirrors are really the only\n+way to fix this.\n+\n+There are different ways to setup mirrors:\n+\n+### Via global properties file\n+\n+Create `mirror.properties` file with the contents:\n+\n+```\n+central.from=https://repo1.maven.org/maven2\n+central.to=http://exmaple.com:8080/nexus/content/groups/public\n+```\n+\n+You need to replace the uri after `central.to=` with your private repository.\n+\n+The location of the mirror file varies depending on the operating system:\n+\n+- Windows:\n+  `C:\\Users\\<user_name>\\AppData\\Roaming\\Coursier\\config\\mirror.properties`\n+- Linux: `~/.config/coursier/mirror.properties`\n+- MacOS: `~/Library/Preferences/Coursier/mirror.properties`\n+\n+This solution will work in most cases for all previously mentioned usages of\n+Coursier, which is especially important in case of the Bloop server, which when\n+started by Metals will not have any system properties forwarded.\n+\n+### Via environment variable\n+\n+You can set the environment variable `COURSIER_MIRRORS` with the location of the\n+file containing the mirror definition. That environment variable will need to\n+either global or available for invocation of the Metals server. In case of the\n+Visual Studio Code extension it means you will need to start it from command\n+line with that variable in scope.\n+\n+### Via properties\n+\n+You can also use properties to specify the location of the mirror file, for\n+example:\n+\n+```\n+-Dcoursier.mirrors=~/.config/coursier/mirror.properties\n+```\n+\n+This property needs to be added to the Metals server and Coursier invocation.\n+However, this solution will not work for Bloop, because properties are not\n+forwarded to the invocation of the Bloop server. You will need to use a\n+different method for Bloop in this case or you can run the build server manually\n+with everything specified separately.\n+\n+## Custom artifact repositories (Maven or Ivy resolvers)\n+\n+In case you need to add custom repositories to resolve Metals server artifacts\n+you can use the `COURSIER_REPOSITORIES` environment variable. This will tell\n+Coursier to try to download artifacts from your private artifact repository.\n+This is also available as a setting in the Metals Visual Studio Code extension.\n+\n+## Proxy settings\n+\n+In some cases, workspaces might require proxy in order to resolve the needed\n+artifacts. Depending on the way Metals server is started proxy settings can be\n+specified using properties inside `.jvmopts` file and `metals.serverProperties`\n+(for Visual Studio Code extension) or via properties for Coursier and Metals\n+invocations.\n+\n+However, because proxy properties might vary between workspaces and a Bloop\n+server must work for multiple clients at the same time they are not forwarded to\n+the Bloop itself. To make sure that Bloop uses the correct proxy settings, you\n+can specify them in two ways:\n+\n+- via copying the correct `.jvmopts` file to `~/.bloop` directory, which will\n+  make them global\n+- specifying environment variable for a correct proxy type:\n+  - `http_proxy=<hostname>:<port>`\n+  - `https_proxy=<hostname>:<port>`\n+  - `ftp_proxy=<hostname>:<port>`\n+  - `socket_proxy=<hostname>:<port>`\n+\n+## Troubleshooting\n+\n+There has been already a couple of issues surrounding this topic, if you are\n+still having issues you can take a look at some of them:\n+\n+- https://github.com/scalameta/metals/issues/1315\n+- https://github.com/scalameta/metals/issues/1301\n+- https://github.com/scalameta/metals/issues/1306\n+\n+### The server did not start, got FailedToOpenBspConnection\n+\n+```\n+error: The command bsp --protocol tcp --port 44559 returned with an error\n+>\n+error: The launcher failed to establish a bsp connection, aborting...\n+ERROR Failed to connect with build server, no functionality will work.\n+java.lang.RuntimeException: The server did not start, got FailedToOpenBspConnection\n+\tat bloop.launcher.LauncherMain.failPromise$1(Launcher.scala:92)\n+\tat bloop.launcher.LauncherMain.runLauncher(Launcher.scala:119)\n+\tat scala.meta.internal.metals.BloopServers$$anon$1.run(BloopServers.scala:101)\n+\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\n+\tat java.util.concurrent.FutureTask.run(FutureTask.java:264)\n+\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n+\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n+\tat java.lang.Thread.run(Thread.java:834)\n+```\n+\n+```\n+Exception in thread \"bloop-server-background\" java.io.IOException: Cannot run program \"java\" (in directory \"<some path here ...>\"): error=2, No such file or directory\n+        at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)\n+```\n+\n+This might mean that you don't have your java installation on PATH and Bloop was"
  },
  {
    "id" : "87b3498f-4d15-406c-9757-fafb1dcae45f",
    "prId" : 1356,
    "comments" : [
      {
        "id" : "b5c09811-f352-41cb-9b42-43f7d835c861",
        "parentId" : null,
        "author" : {
          "login" : "jvican",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2462974?u=247f9a0cfd142440687595dce462fabed087e912&v=4"
        },
        "body" : "What about just recommending this option? When the server is started, proxy settings should just work. I would then tell users that if they have different proxy settings per workspace, every time they run `bloop` on those will reapply the proxy settings as they are global. This shouldn't be a big deal in most cases because Bloop only uses these settings to download the compiler bridges and the semanticdb, which are usually downloaded the first time a compilation happens. ",
        "createdAt" : "2020-01-27T19:12:37Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "jvican",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2462974?u=247f9a0cfd142440687595dce462fabed087e912&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c23ffab4-f962-4a34-826e-57d28e487490",
        "parentId" : "b5c09811-f352-41cb-9b42-43f7d835c861",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Thanks! I left the single way to define proxy settings and added more details about it.",
        "createdAt" : "2020-01-28T12:46:22Z",
        "updatedAt" : "2020-01-28T14:12:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a063e968c0d20c46d404938bd55884585b6fef24",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,176 @@\n+---\n+id: proxy\n+title: Proxy and mirrors\n+---\n+\n+There are several parts inside Metals and Bloop that require resolving\n+additional dependencies from the internet. Inside environments behind a proxy or\n+with private artifact repositories Metals might not be able to start, because it\n+cannot easily download the needed dependencies.\n+\n+There are multiple ways of fixing these issues, but not all of them work in all\n+situations.  While we are trying to make it as painless as possible to setup\n+everything, there are some steps that might need to be done manually.\n+\n+Everything inside Metals uses Coursier to download its dependencies:\n+\n+- The Visual Studio Code and coc-metals extensions use Coursier bootstrap to download Metals\n+  server - Coursier boostrap is a minimal file, which only purpose is to\n+  download a full Coursier version. It's used to keep the extension size down to\n+  a minimum.\n+- Metals uses Coursier api to download dependencies needed for a particular\n+  Scala version\n+- Bloop uses Coursier api to download the SemanticDB plugin\n+\n+You can find some more information about particular topics on\n+[Coursier's website](https://get-coursier.io/docs/overview), but we will try to\n+summarize the most useful solutions here.\n+\n+## Mirrors\n+\n+If Maven Central is not available for your workspace it might be best to use\n+Coursier's mirrors. Especially since Coursier boostrap tries to download the\n+core of Coursier from Maven Central directly, which can only be changed using\n+the mirrors. Not all functionalities are yet available for the boostrapped\n+Coursier version, including custom repositories, so mirrors are really the only\n+way to fix this.\n+\n+There are different ways to setup mirrors:\n+\n+### Via global properties file\n+\n+Create `mirror.properties` file with the contents:\n+\n+```\n+central.from=https://repo1.maven.org/maven2\n+central.to=http://exmaple.com:8080/nexus/content/groups/public\n+```\n+\n+You need to replace the uri after `central.to=` with your private repository.\n+\n+The location of the mirror file varies depending on the operating system:\n+\n+- Windows:\n+  `C:\\Users\\<user_name>\\AppData\\Roaming\\Coursier\\config\\mirror.properties`\n+- Linux: `~/.config/coursier/mirror.properties`\n+- MacOS: `~/Library/Preferences/Coursier/mirror.properties`\n+\n+This solution will work in most cases for all previously mentioned usages of\n+Coursier, which is especially important in the case of the Bloop server, which when\n+started by Metals will not have any system properties forwarded.\n+\n+### Via environment variable\n+\n+You can set the environment variable `COURSIER_MIRRORS` with the location of the\n+file containing the mirror definition. That environment variable will need to\n+available either locally or globally for the Metals server. In case of the\n+Visual Studio Code extension it means you will need to start it from command\n+line with that variable in scope.\n+\n+### Via properties\n+\n+You can also use properties to specify the location of the mirror file, for\n+example:\n+\n+```\n+-Dcoursier.mirrors=~/.config/coursier/mirror.properties\n+```\n+\n+This property needs to be added to the Metals server and Coursier invocation.\n+However, this solution will not work for Bloop, because properties are not\n+forwarded to the invocation of the Bloop server. You will need to use a\n+different method for Bloop in this case or you can run the build server manually\n+with everything specified separately.\n+\n+## Custom artifact repositories (Maven or Ivy resolvers)\n+\n+In case you need to add custom repositories to resolve Metals server artifacts\n+you can use the `COURSIER_REPOSITORIES` environment variable. This will tell\n+Coursier to try to download artifacts from your private artifact repository.\n+This is also available as a setting in the Metals Visual Studio Code and coc-metals extensions.\n+\n+## Proxy settings\n+\n+In some cases, workspaces might require a proxy in order to resolve the needed\n+artifacts. Depending on the way Metals server is started, proxy settings can be\n+specified using properties inside a `.jvmopts` file and `metals.serverProperties`\n+(for Visual Studio Code or coc-metals extensions) or via properties for Coursier and Metals\n+invocations.\n+\n+However, because proxy properties might vary between workspaces and a Bloop\n+server must work for multiple clients at the same time they are not forwarded to\n+the Bloop itself. To make sure that Bloop uses the correct proxy settings, you\n+can specify them in two ways:\n+\n+- via copying the correct `.jvmopts` file to the `~/.bloop` directory, which will"
  }
]