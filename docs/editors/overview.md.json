[
  {
    "id" : "54de09d6-3ad6-49d0-a969-f6a7d703a3ca",
    "prId" : 655,
    "comments" : [
      {
        "id" : "dd42c1b0-c425-40bc-aa08-f2775dda1191",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "```suggestion\r\n**✅ Sublime**: no auto-import.\r\n```",
        "createdAt" : "2019-04-12T14:12:26Z",
        "updatedAt" : "2019-04-12T14:42:21Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b3c4a37c0ebee7f34574c02f07c3021ec6af0693",
    "line" : null,
    "diffHunk" : "@@ -146,18 +175,59 @@ buffer.\n \n ### Known limitations\n \n-- Navigation does not work for identifiers that have just been typed in unsaved\n-  editor buffer. An identifier must compile successfully at least once in order\n-  to resolve to a definition.\n - Navigation does not work for buffers that do not tokenize, for example due to\n   unclosed string literals.\n-- [scalameta/scalameta#1780](https://github.com/scalameta/scalameta/issues/1780)\n-  extension methods sometimes resolve to the implicit conversion method instead\n-  of the extension method.\n - [scalameta/scalameta#1802](https://github.com/scalameta/scalameta/issues/1802)\n   reflective invocations (methods calls on structural types) do not resolve to a\n   definition.\n \n+## Completions\n+\n+**✅ Atom**: no auto-import and string interpolator completions produce invalid\n+code.\n+\n+**✅ Vim**: auto-import and snippets require\n+[coc.nvim](https://github.com/neoclide/coc.nvim) client.\n+\n+**✅Sublime**: no auto-import."
  },
  {
    "id" : "d4da8dc2-d34e-436c-89f8-0df46369d7e8",
    "prId" : 655,
    "comments" : [
      {
        "id" : "19fca200-89f1-4018-a2ce-bb63ddd7af27",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "```suggestion\r\n- **Documentation**: read the docstring for method symbols by pressing\r\n```",
        "createdAt" : "2019-04-12T14:13:00Z",
        "updatedAt" : "2019-04-12T14:42:21Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b3c4a37c0ebee7f34574c02f07c3021ec6af0693",
    "line" : null,
    "diffHunk" : "@@ -146,18 +175,59 @@ buffer.\n \n ### Known limitations\n \n-- Navigation does not work for identifiers that have just been typed in unsaved\n-  editor buffer. An identifier must compile successfully at least once in order\n-  to resolve to a definition.\n - Navigation does not work for buffers that do not tokenize, for example due to\n   unclosed string literals.\n-- [scalameta/scalameta#1780](https://github.com/scalameta/scalameta/issues/1780)\n-  extension methods sometimes resolve to the implicit conversion method instead\n-  of the extension method.\n - [scalameta/scalameta#1802](https://github.com/scalameta/scalameta/issues/1802)\n   reflective invocations (methods calls on structural types) do not resolve to a\n   definition.\n \n+## Completions\n+\n+**✅ Atom**: no auto-import and string interpolator completions produce invalid\n+code.\n+\n+**✅ Vim**: auto-import and snippets require\n+[coc.nvim](https://github.com/neoclide/coc.nvim) client.\n+\n+**✅Sublime**: no auto-import.\n+\n+Use code completions to explore APIs, implement interfaces, generate exhaustive\n+pattern matches and more.\n+\n+![2019-04-12 14 19 39](https://user-images.githubusercontent.com/1408093/56036958-725bac00-5d2e-11e9-9cf7-46249125494a.gif)\n+\n+- **Auto-import**: symbols that are not in scope are automatically imported\n+  locally. Imports still need to be organized manually, we are exploring ways to\n+  automate this workflow in the future.\n+- **Override def**: implement methods from the super class.\n+- **Exhaustive match**: generate an exhaustive pattern match for sealed types.\n+- **String interpolator**: automatically convert string literals into string\n+  interpolators.\n+- **Filename**: complete classnames based on the enclosing file.\n+- **Documentation**: read the docstring for for method symbols by pressing"
  },
  {
    "id" : "0ac54fca-389a-41c8-a9e2-b8e2a0dbb419",
    "prId" : 655,
    "comments" : [
      {
        "id" : "a302bcda-d1b3-4790-92a6-f30d9a2f123c",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "```suggestion\r\n  along with its docstring, if available.\r\n```",
        "createdAt" : "2019-04-12T14:13:39Z",
        "updatedAt" : "2019-04-12T14:42:21Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b3c4a37c0ebee7f34574c02f07c3021ec6af0693",
    "line" : null,
    "diffHunk" : "@@ -146,18 +175,59 @@ buffer.\n \n ### Known limitations\n \n-- Navigation does not work for identifiers that have just been typed in unsaved\n-  editor buffer. An identifier must compile successfully at least once in order\n-  to resolve to a definition.\n - Navigation does not work for buffers that do not tokenize, for example due to\n   unclosed string literals.\n-- [scalameta/scalameta#1780](https://github.com/scalameta/scalameta/issues/1780)\n-  extension methods sometimes resolve to the implicit conversion method instead\n-  of the extension method.\n - [scalameta/scalameta#1802](https://github.com/scalameta/scalameta/issues/1802)\n   reflective invocations (methods calls on structural types) do not resolve to a\n   definition.\n \n+## Completions\n+\n+**✅ Atom**: no auto-import and string interpolator completions produce invalid\n+code.\n+\n+**✅ Vim**: auto-import and snippets require\n+[coc.nvim](https://github.com/neoclide/coc.nvim) client.\n+\n+**✅Sublime**: no auto-import.\n+\n+Use code completions to explore APIs, implement interfaces, generate exhaustive\n+pattern matches and more.\n+\n+![2019-04-12 14 19 39](https://user-images.githubusercontent.com/1408093/56036958-725bac00-5d2e-11e9-9cf7-46249125494a.gif)\n+\n+- **Auto-import**: symbols that are not in scope are automatically imported\n+  locally. Imports still need to be organized manually, we are exploring ways to\n+  automate this workflow in the future.\n+- **Override def**: implement methods from the super class.\n+- **Exhaustive match**: generate an exhaustive pattern match for sealed types.\n+- **String interpolator**: automatically convert string literals into string\n+  interpolators.\n+- **Filename**: complete classnames based on the enclosing file.\n+- **Documentation**: read the docstring for for method symbols by pressing\n+  ctrl+space in VS Code.\n+\n+### Known limitations\n+\n+- completion results don't include symbols that have just been typed in separate\n+  files without a successful compilation in the build tool.\n+\n+## Hover (aka. type at point)\n+\n+See the expression type and symbol signature under the cursor.\n+\n+![](https://i.imgur.com/2MfQvsM.gif)\n+\n+- **Expression type**: shows the non-generic type of the highlighted expression.\n+- **Symbol signature**: shows the generic signature of symbol under the cursor\n+  along with it's docstring, if available."
  },
  {
    "id" : "a0ecb5eb-20d1-4011-ab18-f0e435e9b360",
    "prId" : 655,
    "comments" : [
      {
        "id" : "76d28663-cff5-456b-8135-27dac523a066",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "```suggestion\r\n- Queries containing a semicolon `;` search library dependencies.\r\n```",
        "createdAt" : "2019-04-12T14:14:16Z",
        "updatedAt" : "2019-04-12T14:42:21Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b3c4a37c0ebee7f34574c02f07c3021ec6af0693",
    "line" : null,
    "diffHunk" : "@@ -189,6 +259,7 @@ Fuzzy search a symbol in the workspace of library dependencies by its name.\n \n - All-lowercase queries are treated as case-insensitive searches.\n - Queries ending with a dot `.` list nested symbols.\n+- Queries with a semicolon `;` search library dependencies."
  },
  {
    "id" : "7080420f-1644-4b32-87fa-dc4667ae3adb",
    "prId" : 894,
    "comments" : [
      {
        "id" : "84194d4d-8441-4eb4-b7a5-dff0737f9e78",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Does eclipse LSP support executing commands? If so, running \"Import build\" should do the trick.\r\n\r\nThe \"Requires browser\" option also works for Eclipse as long as the `-Dmetals.http=true` is enabled. I believe this is a better workflow than manually running \"sbt bloopInstall\" because Metals \"import build\" automatically enables downloading of dependency sources + SemanticDB.",
        "createdAt" : "2019-09-03T15:06:24Z",
        "updatedAt" : "2019-09-04T13:20:51Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dcc945c8-7c99-4198-b31a-7097226f7313",
        "parentId" : "84194d4d-8441-4eb4-b7a5-dff0737f9e78",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I haven't found any way to run commands, so probably running from localhost makes sense. I will revert and add the option to the plugin.",
        "createdAt" : "2019-09-03T15:24:27Z",
        "updatedAt" : "2019-09-04T13:20:51Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "db8dc4ec-1b71-4136-a2ed-85be58bc6493",
        "parentId" : "84194d4d-8441-4eb4-b7a5-dff0737f9e78",
        "author" : {
          "login" : "mundacho",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/4747697?u=22e21d283637e501fb809c4d29524d57d4e85116&v=4"
        },
        "body" : "What do you mean by running commands? Do you mean, like running metals from eclipse?",
        "createdAt" : "2019-09-03T15:29:35Z",
        "updatedAt" : "2019-09-04T13:20:51Z",
        "lastEditedBy" : {
          "login" : "mundacho",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/4747697?u=22e21d283637e501fb809c4d29524d57d4e85116&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "578f3aa1-25df-4dc9-8c08-0e50e5eb17d0",
        "parentId" : "84194d4d-8441-4eb4-b7a5-dff0737f9e78",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "The LSP `workspace/executeCommand` request. Here's the list of commands that Metals supports http://scalameta.org/metals/docs/editors/new-editor.html#metals-server-commands",
        "createdAt" : "2019-09-03T15:56:03Z",
        "updatedAt" : "2019-09-04T13:20:51Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "24bbcfdc-e273-47cc-b1ab-6d50cde0a014",
        "parentId" : "84194d4d-8441-4eb4-b7a5-dff0737f9e78",
        "author" : {
          "login" : "mundacho",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/4747697?u=22e21d283637e501fb809c4d29524d57d4e85116&v=4"
        },
        "body" : "ok, thank you, I'll check that out",
        "createdAt" : "2019-09-03T15:56:49Z",
        "updatedAt" : "2019-09-04T13:20:51Z",
        "lastEditedBy" : {
          "login" : "mundacho",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/4747697?u=22e21d283637e501fb809c4d29524d57d4e85116&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "443d317471b55d6325e3a7394a31d95391d28053",
    "line" : null,
    "diffHunk" : "@@ -154,20 +169,14 @@ from source.\n **✅**: it is possible to import a build such as an sbt project directly from\n the editor.\n \n-**Requires browser**: importing a build requires additional steps in a web\n-browser using a localhost server. It is not possible to import a build within\n-the editor.\n+**Manual import**: importing a build requires running `bloopInstall` in one of"
  },
  {
    "id" : "b5dd2af1-d474-4223-ad13-ed8e98760255",
    "prId" : 911,
    "comments" : [
      {
        "id" : "7e0c7cb9-bd27-459d-a565-5c2af631352a",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "It looks a bit weird with list while everything else is not. Maybe just use coma?\r\n`Status bar, Slow task`",
        "createdAt" : "2019-09-11T08:25:27Z",
        "updatedAt" : "2019-09-11T09:41:12Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5e83472ec6821f142661af38ea62447f77feac6b",
    "line" : null,
    "diffHunk" : "@@ -144,7 +144,7 @@ functionality.\n     <td align=\"center\">Status bar</td>\n     <td align=\"center\"></td>\n     <td align=\"center\">Status bar</td>\n-    <td align=\"center\"></td>\n+    <td align=\"center\"><ul><li>Status bar</li><li>Slow task</li></ul></td>"
  },
  {
    "id" : "f5af4316-62de-4cde-85e9-5068f895cdd8",
    "prId" : 1080,
    "comments" : [
      {
        "id" : "ba33118b-8f27-49d1-9ee2-39aae64541f0",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I think we should remove this only once the stable release is out - I have a number of updates that will go together with that.",
        "createdAt" : "2019-11-22T10:38:57Z",
        "updatedAt" : "2019-11-22T11:05:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "fe6a8196-65f6-4efd-b762-1c5fbbd017f7",
        "parentId" : "ba33118b-8f27-49d1-9ee2-39aae64541f0",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Sounds good. I'll add it back in.",
        "createdAt" : "2019-11-22T10:42:27Z",
        "updatedAt" : "2019-11-22T11:05:03Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "f1720fcc98ea4644ed5cd9b4a6164df3890d8fd3",
    "line" : 25,
    "diffHunk" : "@@ -345,7 +338,6 @@ extensions, see [integrating a new editor](new-editor.md).\n \n Metals does not support the following features:\n \n-- Rename symbol"
  },
  {
    "id" : "68789468-3e01-4367-8983-c75612ce4c30",
    "prId" : 1934,
    "comments" : [
      {
        "id" : "29d3f6f6-999a-44be-b65c-02aa59da59e9",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I feel like it will be much easier to find this way. Alternatively we could move it to the top of each editor?",
        "createdAt" : "2020-07-20T13:03:24Z",
        "updatedAt" : "2020-07-21T07:58:00Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "45bd2f57-d3a4-406e-a615-152befa91686",
        "parentId" : "29d3f6f6-999a-44be-b65c-02aa59da59e9",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I think this is fine as long as we don't remove it from the editor page since I feel like some people just skip the overview page and go right to their editor.",
        "createdAt" : "2020-07-20T14:35:04Z",
        "updatedAt" : "2020-07-21T07:58:00Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1f9f20c530b2152a24fddd4618793dbec859f696",
    "line" : 4,
    "diffHunk" : "@@ -4,6 +4,21 @@ title: Text Editors\n sidebar_label: Overview\n ---\n \n+## Latest Metals server versions"
  },
  {
    "id" : "b4bf3d0b-1c06-43fe-8775-fce57f3311ac",
    "prId" : 1934,
    "comments" : [
      {
        "id" : "407a57fe-290e-4e4a-a418-50aac2be0d1a",
        "parentId" : null,
        "author" : {
          "login" : "ayoub-benali",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1632384?u=ac40fd778feded69bd8ab05c77d83d3e469ff7ab&v=4"
        },
        "body" : "```suggestion\r\n    <td align=\"center\">Status bar, Input box</td>\r\n```\r\nSublime plugin support Input Box now: https://github.com/scalameta/metals-sublime/blob/master/plugin.py#L114\r\n",
        "createdAt" : "2020-07-20T13:41:56Z",
        "updatedAt" : "2020-07-21T07:58:00Z",
        "lastEditedBy" : {
          "login" : "ayoub-benali",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1632384?u=ac40fd778feded69bd8ab05c77d83d3e469ff7ab&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f5924596-344a-42b0-8428-9fe31259e8c1",
        "parentId" : "407a57fe-290e-4e4a-a418-50aac2be0d1a",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Thanks! I will add it! Should I add any of the documentation to sublime docs? The new project provider or parent code lenses?",
        "createdAt" : "2020-07-20T13:51:40Z",
        "updatedAt" : "2020-07-21T07:58:00Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d7afa205-d124-4a46-a287-26961c84b87b",
        "parentId" : "407a57fe-290e-4e4a-a418-50aac2be0d1a",
        "author" : {
          "login" : "ayoub-benali",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1632384?u=ac40fd778feded69bd8ab05c77d83d3e469ff7ab&v=4"
        },
        "body" : "These two aren't yet supposed yet :/\r\nBut \"new scala file\" was just released: https://github.com/scalameta/metals-sublime/pull/26",
        "createdAt" : "2020-07-20T13:53:37Z",
        "updatedAt" : "2020-07-21T07:58:00Z",
        "lastEditedBy" : {
          "login" : "ayoub-benali",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1632384?u=ac40fd778feded69bd8ab05c77d83d3e469ff7ab&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1f9f20c530b2152a24fddd4618793dbec859f696",
    "line" : null,
    "diffHunk" : "@@ -187,7 +202,7 @@ functionality.\n     <td>Metals Extensions</td>\n     <td align=\"center\">✅</td>\n     <td align=\"center\">Status bar</td>\n-    <td align=\"center\">Status bar</td>\n+    <td align=\"center\">Status bar, Quick pick</td>\n     <td align=\"center\">Status bar</td>"
  },
  {
    "id" : "42deb910-04d3-413d-83f5-6a614a57ac16",
    "prId" : 1934,
    "comments" : [
      {
        "id" : "3772c4bf-27ac-431c-b98a-c7b9af198505",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "In theory though, this _could_ change moving forward no? Now that everything can be configured via `InitializationOptions`, there is no need to have a `metals-vscode` and `metals-emacs` but a single `metals` for each desired version.",
        "createdAt" : "2020-07-20T14:36:32Z",
        "updatedAt" : "2020-07-21T07:58:00Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "062d134a-d1c8-49bf-b110-791edd89e7d0",
        "parentId" : "3772c4bf-27ac-431c-b98a-c7b9af198505",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Hmm... right. Maybe then I will just remove the section.",
        "createdAt" : "2020-07-20T15:23:52Z",
        "updatedAt" : "2020-07-21T07:58:00Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "faea86c3-43a2-4a67-b5c8-732a30edf6ea",
        "parentId" : "3772c4bf-27ac-431c-b98a-c7b9af198505",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Moved the lower paragraph here.",
        "createdAt" : "2020-07-20T18:13:57Z",
        "updatedAt" : "2020-07-21T07:58:00Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1f9f20c530b2152a24fddd4618793dbec859f696",
    "line" : null,
    "diffHunk" : "@@ -4,6 +4,21 @@ title: Text Editors\n sidebar_label: Overview\n ---\n \n+## Latest Metals server versions\n+\n+All editors use a separate Metals server underneath, which version can be\n+changed idependently. It can be used to checkout newest features from the main\n+branch."
  },
  {
    "id" : "8c57c6ab-09ce-4e3c-97f8-1570e29af00d",
    "prId" : 1994,
    "comments" : [
      {
        "id" : "6a903c42-8204-4bdb-8afd-62f67bec69c0",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Do you think it'd be a good idea to mark these with a `*` and then at the bottom of the table include an explanation of what `parsing errors` means here? I think it may not be super clear for people what exactly this means.",
        "createdAt" : "2020-08-15T08:18:52Z",
        "updatedAt" : "2020-08-15T09:57:45Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5faba485-abe9-4462-b103-2988d66ce2e7",
        "parentId" : "6a903c42-8204-4bdb-8afd-62f67bec69c0",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Changed to a tick with `*` with an explanation below.",
        "createdAt" : "2020-08-15T09:59:21Z",
        "updatedAt" : "2020-08-15T09:59:21Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c459aa1344190279bc63ad595f72dc9272b31217",
    "line" : null,
    "diffHunk" : "@@ -403,6 +402,130 @@ Language Server Protocol (LSP). These extensions are not necessary for Metals to\n function but they improve the user experience. To learn more about Metals\n extensions, see [integrating a new editor](new-editor.md).\n \n+\n+## Additional file types\n+\n+Not all features are supported in all possible scenarios, espacially when it comes to non-standard Scala files like Ammonite scripts, worksheets or sbt scripts.\n+\n+<table>\n+<thead>\n+  <tr>\n+    <td />\n+    <td align=\"center\">Sbt scripts</td>\n+    <td align=\"center\">Worksheets</td>\n+    <td align=\"center\">Ammonite scripts</td>\n+    <td align=\"center\">Standalone Scala files</td>\n+  </tr>\n+</thead>\n+<tbody>\n+   <tr>\n+    <td>Diagnostics</td>\n+    <td align=\"center\">Parsing errors</td>"
  },
  {
    "id" : "93d12394-564b-4ca8-8f96-c584546a857e",
    "prId" : 2026,
    "comments" : [
      {
        "id" : "42762140-bbca-45af-a204-d7ab2d9d6d73",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "This is not rendering correctly now.",
        "createdAt" : "2020-08-26T13:43:30Z",
        "updatedAt" : "2020-08-26T17:38:51Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a9b7341c6a9ccad5b4f42532e7aec5116e41bda3",
    "line" : 4,
    "diffHunk" : "@@ -13,6 +13,7 @@ specific sections.\n \n ```\n \n+"
  }
]