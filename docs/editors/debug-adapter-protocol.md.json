[
  {
    "id" : "6e741530-9165-4526-a04b-6d44df8c01b7",
    "prId" : 1596,
    "comments" : [
      {
        "id" : "2bf2cfe3-9a11-46a0-ab6b-e785e93a4818",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n`buildTarget` is an optional parameter, which might be useful if there are identical\r\n```",
        "createdAt" : "2020-04-09T18:05:04Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "98216b111b90200af63cab4201335bfed979a303",
    "line" : null,
    "diffHunk" : "@@ -18,18 +23,51 @@ activates a code lens. The difference between them is that the former ignores\n all breakpoints being set while the latter respects them. The procedure of\n starting the run/debug session is as follows:\n \n-1. Request the debug adapter uri from metals server using the\n-   [`debug-adapter-start`](https://github.com/scalameta/metals/blob/master/metals/src/main/scala/scala/meta/internal/metals/ServerCommands.scala#L95)\n-   command.\n-2. Connect the debug adapter extension specific to you editor using the\n-   aforementioned uri and let it drive the run/debug session. For reference,\n-   take a look at the\n-   [vscode implementation](https://github.com/scalameta/metals-vscode/blob/master/src/scalaDebugger.ts)\n-   and how it is\n-   [wired up together](https://github.com/scalameta/metals-vscode/blob/master/src/extension.ts#L356)\n+Then we can request the debug adapter uri from metals server using the\n+[`debug-adapter-start`](https://github.com/scalameta/metals/blob/master/metals/src/main/scala/scala/meta/internal/metals/ServerCommands.scala#L95)\n+command.\n+\n+### Via simple commands\n+\n+Apart from using code lenses, users can start a debug session by executing the\n+`debug-adapter-start` command with the following params:\n+\n+- for main class\n+\n+```json\n+{\n+  \"mainClass\": \"com.foo.App\",\n+  \"buildTarget\": \"foo\",\n+  \"args\": [\"bar\"]\n+}\n+```\n+\n+- for test class\n+\n+```json\n+{\n+  \"testClass\": \"com.foo.FooSuite\",\n+  \"buildTarget\": \"foo\"\n+}\n+```\n+\n+`buildTarget` is an optional parameter, which might be useful if there identical"
  },
  {
    "id" : "de0c30d8-e2d4-45a3-b333-8d3c2ae1b213",
    "prId" : 1596,
    "comments" : [
      {
        "id" : "26fccd1d-924e-4fad-a316-74dee56b39b1",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\nNo matter which method you use, you still need to connect the debug adapter\r\n```",
        "createdAt" : "2020-04-09T18:05:25Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "98216b111b90200af63cab4201335bfed979a303",
    "line" : null,
    "diffHunk" : "@@ -18,18 +23,51 @@ activates a code lens. The difference between them is that the former ignores\n all breakpoints being set while the latter respects them. The procedure of\n starting the run/debug session is as follows:\n \n-1. Request the debug adapter uri from metals server using the\n-   [`debug-adapter-start`](https://github.com/scalameta/metals/blob/master/metals/src/main/scala/scala/meta/internal/metals/ServerCommands.scala#L95)\n-   command.\n-2. Connect the debug adapter extension specific to you editor using the\n-   aforementioned uri and let it drive the run/debug session. For reference,\n-   take a look at the\n-   [vscode implementation](https://github.com/scalameta/metals-vscode/blob/master/src/scalaDebugger.ts)\n-   and how it is\n-   [wired up together](https://github.com/scalameta/metals-vscode/blob/master/src/extension.ts#L356)\n+Then we can request the debug adapter uri from metals server using the\n+[`debug-adapter-start`](https://github.com/scalameta/metals/blob/master/metals/src/main/scala/scala/meta/internal/metals/ServerCommands.scala#L95)\n+command.\n+\n+### Via simple commands\n+\n+Apart from using code lenses, users can start a debug session by executing the\n+`debug-adapter-start` command with the following params:\n+\n+- for main class\n+\n+```json\n+{\n+  \"mainClass\": \"com.foo.App\",\n+  \"buildTarget\": \"foo\",\n+  \"args\": [\"bar\"]\n+}\n+```\n+\n+- for test class\n+\n+```json\n+{\n+  \"testClass\": \"com.foo.FooSuite\",\n+  \"buildTarget\": \"foo\"\n+}\n+```\n+\n+`buildTarget` is an optional parameter, which might be useful if there identical\n+class names in different modules. A uri will be returned that can be used by the\n+DAP client.\n+\n+### Wiring it all together\n+\n+No matter which method you used, you still need to connect the debug adapter"
  },
  {
    "id" : "d7255ade-da3f-4b58-9e61-cd887e38edb7",
    "prId" : 1596,
    "comments" : [
      {
        "id" : "e6211871-6389-467c-b0c8-29fc3bf55bde",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n`buildTarget` is an optional parameter, which might be useful if they are identical\r\n```",
        "createdAt" : "2020-04-10T10:09:59Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "84b15de3-03c9-48b5-9208-bbacff4cee10",
        "parentId" : "e6211871-6389-467c-b0c8-29fc3bf55bde",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I think this one should stay:\r\n`there are identical class names in different modules`\r\nwould make the same sense as:\r\n`they are identical class names in different modules`",
        "createdAt" : "2020-04-10T10:15:56Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ea661466-abdf-4a64-91a2-c9010e71c7fc",
        "parentId" : "e6211871-6389-467c-b0c8-29fc3bf55bde",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Ahh yea. Good call. Sorry read it too quickly!",
        "createdAt" : "2020-04-10T10:21:04Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5f309ded-c205-4968-9cb6-4afee9ec5d2e",
        "parentId" : "e6211871-6389-467c-b0c8-29fc3bf55bde",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Maybe `there are identically named classes` ?",
        "createdAt" : "2020-04-10T10:24:14Z",
        "updatedAt" : "2020-04-10T10:34:19Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8030ba9e-0e93-4790-9fee-515e8d39def4",
        "parentId" : "e6211871-6389-467c-b0c8-29fc3bf55bde",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I think the way you have it is good :)",
        "createdAt" : "2020-04-10T11:22:11Z",
        "updatedAt" : "2020-04-10T11:22:11Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "98216b111b90200af63cab4201335bfed979a303",
    "line" : null,
    "diffHunk" : "@@ -18,18 +23,51 @@ activates a code lens. The difference between them is that the former ignores\n all breakpoints being set while the latter respects them. The procedure of\n starting the run/debug session is as follows:\n \n-1. Request the debug adapter uri from metals server using the\n-   [`debug-adapter-start`](https://github.com/scalameta/metals/blob/master/metals/src/main/scala/scala/meta/internal/metals/ServerCommands.scala#L95)\n-   command.\n-2. Connect the debug adapter extension specific to you editor using the\n-   aforementioned uri and let it drive the run/debug session. For reference,\n-   take a look at the\n-   [vscode implementation](https://github.com/scalameta/metals-vscode/blob/master/src/scalaDebugger.ts)\n-   and how it is\n-   [wired up together](https://github.com/scalameta/metals-vscode/blob/master/src/extension.ts#L356)\n+Then we can request the debug adapter uri from metals server using the\n+[`debug-adapter-start`](https://github.com/scalameta/metals/blob/master/metals/src/main/scala/scala/meta/internal/metals/ServerCommands.scala#L95)\n+command.\n+\n+### Via simple commands\n+\n+Apart from using code lenses, users can start a debug session by executing the\n+`debug-adapter-start` command with the following params:\n+\n+- for main class\n+\n+```json\n+{\n+  \"mainClass\": \"com.foo.App\",\n+  \"buildTarget\": \"foo\",\n+  \"args\": [\"bar\"]\n+}\n+```\n+\n+- for test class\n+\n+```json\n+{\n+  \"testClass\": \"com.foo.FooSuite\",\n+  \"buildTarget\": \"foo\"\n+}\n+```\n+\n+`buildTarget` is an optional parameter, which might be useful if there are identical"
  },
  {
    "id" : "c83587c2-3f83-4b50-842b-bf7e87c0ec79",
    "prId" : 1881,
    "comments" : [
      {
        "id" : "709ccd22-7acb-41c9-ac58-ba758bef7e78",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "this line is no longer valid as content was shifted by adding `CleanCompile` command. I know it is completely unrelated to this PR but just noticed it :)",
        "createdAt" : "2020-07-03T10:02:21Z",
        "updatedAt" : "2020-07-04T07:09:39Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "64d449bf-5e2f-4531-98a0-a9c431ed4160",
        "parentId" : "709ccd22-7acb-41c9-ac58-ba758bef7e78",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "ah, good catch. I'm actually planning on spending a bit of time today reading through the docs since there are a few things I noticed weren't small mistakes. I'll include this change in there.",
        "createdAt" : "2020-07-04T07:09:02Z",
        "updatedAt" : "2020-07-04T07:09:39Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "27b426da2f60ddf21276228be65af00a85da39a9",
    "line" : 15,
    "diffHunk" : "@@ -15,16 +15,16 @@ capabilities exposed by the client.\n ### Via code lenses\n \n The editor needs to handle two commands in its language client extension:\n-[`metals-run-session-start`](https://github.com/scalameta/metals/blob/master/metals/src/main/scala/scala/meta/internal/metals/ClientCommands.scala#L56)\n+[`metals-run-session-start`](https://github.com/scalameta/metals/blob/main/metals/src/main/scala/scala/meta/internal/metals/ClientCommands.scala#L56)\n and\n-[`metals-debug-session-start`](https://github.com/scalameta/metals/blob/master/metals/src/main/scala/scala/meta/internal/metals/ClientCommands.scala#L78).\n+[`metals-debug-session-start`](https://github.com/scalameta/metals/blob/main/metals/src/main/scala/scala/meta/internal/metals/ClientCommands.scala#L78).\n Those commands should get executed automatically by the lsp client once the user\n activates a code lens. The difference between them is that the former ignores\n all breakpoints being set while the latter respects them. The procedure of\n starting the run/debug session is as follows:\n \n Then we can request the debug adapter uri from the metals server using the\n-[`debug-adapter-start`](https://github.com/scalameta/metals/blob/master/metals/src/main/scala/scala/meta/internal/metals/ServerCommands.scala#L95)"
  }
]