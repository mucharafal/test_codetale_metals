[
  {
    "id" : "c0c272e0-c350-432a-b857-5bd3fb4ab987",
    "prId" : 353,
    "comments" : [
      {
        "id" : "cb1c2f7a-1044-4a86-8e6a-b84f4b35b0e2",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "is \"to respond to trigger\" intended?",
        "createdAt" : "2018-11-29T13:44:18Z",
        "updatedAt" : "2018-11-29T19:38:12Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "92893936-298a-4c8d-9f0f-f5985ba98da2",
        "parentId" : "cb1c2f7a-1044-4a86-8e6a-b84f4b35b0e2",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Fixed.",
        "createdAt" : "2018-11-29T18:33:51Z",
        "updatedAt" : "2018-11-29T19:38:30Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7d11970afc189b4eed3412876bd160920bfa5338",
    "line" : null,
    "diffHunk" : "@@ -147,6 +147,11 @@ function normally without file watching notifications. However, file watching\n notifications improve the user experience especially when file contents change\n outside of the editor such as during `git checkout`.\n \n+### `workspace/executeCommands`\n+\n+Used to respond to trigger the Metals server to run one of the"
  },
  {
    "id" : "96a3284f-603d-4a04-9eab-2bf59ace7621",
    "prId" : 353,
    "comments" : [
      {
        "id" : "fa0de1b9-9256-4e8e-94fd-f415652a6aaa",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I would add that it relies on the client supporting dynamic capabilities registration.",
        "createdAt" : "2018-11-29T16:31:09Z",
        "updatedAt" : "2018-11-29T19:38:12Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "991f2187-dcd3-410f-94be-e1b9ba8c5d25",
        "parentId" : "fa0de1b9-9256-4e8e-94fd-f415652a6aaa",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "üëç Done",
        "createdAt" : "2018-11-29T18:39:52Z",
        "updatedAt" : "2018-11-29T19:38:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7d11970afc189b4eed3412876bd160920bfa5338",
    "line" : null,
    "diffHunk" : "@@ -269,5 +274,95 @@ focus back to `UserTest.scala` that depends on APIs defined in `User.scala`.\n \n _Notification_:\n \n-- method: `metals/didFocus`\n+- method: `metals/didFocusTextDocument`\n - params: `string`, the URI of the document where the focused was moved to.\n+\n+## Metals server properties\n+\n+The Metals language server is configured through JVM system properties.\n+Configuration options are added to allow customization for particular clients\n+since editors interpret LSP functionality slightly differently. For example, in\n+Vim the `window/logMessage` notification is always visible in the UI while in VS\n+Code logs are hidden by default.\n+\n+### `-Dmetals.file-watcher`\n+\n+Possible values:\n+\n+- `auto` (default): use editor file watcher if supported, otherwise use Metals\n+  built-in file watcher."
  },
  {
    "id" : "b9a64512-af7e-4849-a7c1-d892df828d82",
    "prId" : 353,
    "comments" : [
      {
        "id" : "ad0a9164-d1de-404b-b208-25708d1ec603",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Even if the editor declares that it supports file watching on initialize, it still needs to accept the patterns through an additional dynamic capabilities registration request.",
        "createdAt" : "2018-11-29T16:32:39Z",
        "updatedAt" : "2018-11-29T19:38:12Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b0dc25e6-79a8-4e61-9789-f2dac0956c9a",
        "parentId" : "ad0a9164-d1de-404b-b208-25708d1ec603",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Should I interpret a non-empty `capabilities.workspace.didChangeWatchedFiles` as if the client will send `didChangeWatchedFiles` notifications? Even if `dynamicRegistration=false`\r\n\r\nCurrently we only act if `dynamicRegistration=true` and assume otherwise that file watching is not supported.",
        "createdAt" : "2018-11-29T18:47:29Z",
        "updatedAt" : "2018-11-29T19:38:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4584547d-fc62-4f2d-83cd-4ca2c13fcd89",
        "parentId" : "ad0a9164-d1de-404b-b208-25708d1ec603",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Yes, I think this is what we should do. Because I don't see any other point in this initialization setting: if the client says it supports it, it's going to send the notification.",
        "createdAt" : "2018-11-29T20:21:21Z",
        "updatedAt" : "2018-11-29T20:21:21Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7d11970afc189b4eed3412876bd160920bfa5338",
    "line" : null,
    "diffHunk" : "@@ -269,5 +274,95 @@ focus back to `UserTest.scala` that depends on APIs defined in `User.scala`.\n \n _Notification_:\n \n-- method: `metals/didFocus`\n+- method: `metals/didFocusTextDocument`\n - params: `string`, the URI of the document where the focused was moved to.\n+\n+## Metals server properties\n+\n+The Metals language server is configured through JVM system properties.\n+Configuration options are added to allow customization for particular clients\n+since editors interpret LSP functionality slightly differently. For example, in\n+Vim the `window/logMessage` notification is always visible in the UI while in VS\n+Code logs are hidden by default.\n+\n+### `-Dmetals.file-watcher`\n+\n+Possible values:\n+\n+- `auto` (default): use editor file watcher if supported, otherwise use Metals\n+  built-in file watcher.\n+- `custom`: the client will send `workspace/didChangeWatchedFiles` notifications\n+  even if the editor doesn't declare in the `initialize` hand-shake that it\n+  supports file watching."
  },
  {
    "id" : "361162b1-6d23-4507-8008-53925faa9d6f",
    "prId" : 353,
    "comments" : [
      {
        "id" : "bb66d6f9-225e-4367-b56f-7accd7da739c",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Just a question: is this `$(...)` some kind of common way to use Octicons or is it a VSCode-specific thing? In Atom it has to be an HTML node `<span class='icon icon-foo'></span>`.",
        "createdAt" : "2018-11-29T16:37:57Z",
        "updatedAt" : "2018-11-29T19:38:12Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "79dc99f5-3253-4fac-b912-d3b3add72821",
        "parentId" : "bb66d6f9-225e-4367-b56f-7accd7da739c",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "It's a VS Code specific thing, https://code.visualstudio.com/docs/extensionAPI/vscode-api#StatusBarItem\r\n\r\nI renamed the option to `vscode` and added another option `atom` that formats as `<span class='icon icon-foo'></span>` so you don't have to post-process the text.",
        "createdAt" : "2018-11-29T18:50:30Z",
        "updatedAt" : "2018-11-29T19:38:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fd4cadab-bd4f-4b74-b997-b43992255922",
        "parentId" : "bb66d6f9-225e-4367-b56f-7accd7da739c",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Thanks!",
        "createdAt" : "2018-11-29T20:21:30Z",
        "updatedAt" : "2018-11-29T20:21:30Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7d11970afc189b4eed3412876bd160920bfa5338",
    "line" : null,
    "diffHunk" : "@@ -269,5 +274,95 @@ focus back to `UserTest.scala` that depends on APIs defined in `User.scala`.\n \n _Notification_:\n \n-- method: `metals/didFocus`\n+- method: `metals/didFocusTextDocument`\n - params: `string`, the URI of the document where the focused was moved to.\n+\n+## Metals server properties\n+\n+The Metals language server is configured through JVM system properties.\n+Configuration options are added to allow customization for particular clients\n+since editors interpret LSP functionality slightly differently. For example, in\n+Vim the `window/logMessage` notification is always visible in the UI while in VS\n+Code logs are hidden by default.\n+\n+### `-Dmetals.file-watcher`\n+\n+Possible values:\n+\n+- `auto` (default): use editor file watcher if supported, otherwise use Metals\n+  built-in file watcher.\n+- `custom`: the client will send `workspace/didChangeWatchedFiles` notifications\n+  even if the editor doesn't declare in the `initialize` hand-shake that it\n+  supports file watching.\n+\n+### `-Dmetals.status-bar`\n+\n+Possible values:\n+\n+- `off` (default): the `metals/status` notification is not supported.\n+- `on`: the `metals/status` notification is supported.\n+- `log-message`: translate `metals/status` notifications to `window/logMessage`\n+  notifications. Used by vim-lsc at the moment.\n+\n+### `-Dmetals.slow-task`\n+\n+Possible values:\n+\n+- `off` (default): the `metals/slowTask` request is not supported.\n+- `on`: the `metals/slowTask` request is fully supported.\n+- `status-bar`: the `metals/slowTask` request is not supported, but send updates\n+  about slow tasks via `metals/status`.\n+\n+### `-Dmetals.show-message`\n+\n+Possible values:\n+\n+- `on` (default): send `window/showMessage` notifications like usual\n+- `off`: don't send any `window/showMessage` notifications\n+- `log-message`: send `window/showMessage` notifications as `window/logMessage`\n+  instead. Useful when editor client responds to `window/showMessage`\n+  notification with an intrusive alert.\n+\n+### `-Dmetals.show-message-request`\n+\n+Possible values:\n+\n+- `on` (default): send `window/showMessageRequest` requests like usual\n+- `off`: don't send any `window/showMessageRequest` requests\n+- `log-message`: send `window/showMessageRequest` requests as\n+  `window/logMessage` instead.\n+\n+### `-Dmetals.http`\n+\n+Possible values:\n+\n+- `off` (default): don't start Metals HTTP server.\n+- `on`: start Metals HTTP server to interact with the server through a basic web\n+  UI. This option is needed for editor clients like Sublime Text that don't\n+  support necessary requests such as `window/showMessageRequest`.\n+\n+### `-Dmetals.icons`\n+\n+Possible values:\n+\n+- `none` (default): don't display icons in messages.\n+- `octicons`: use [Octicons](https://octicons.github.com) such as `$(rocket)`\n+  for status bar messages, as supported by VS Code and Atom status bars."
  },
  {
    "id" : "f9570c21-b10e-4a80-b1fc-3df79d308a85",
    "prId" : 353,
    "comments" : [
      {
        "id" : "05ee7ba9-54d7-43f7-9978-c72c42f5ec46",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I would mention these properties above, in the \"Starting the server\" part.",
        "createdAt" : "2018-11-29T16:49:25Z",
        "updatedAt" : "2018-11-29T19:38:12Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d98a7ce0-b8fd-4fd9-a16e-6f0e1555cd10",
        "parentId" : "05ee7ba9-54d7-43f7-9978-c72c42f5ec46",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Good point üëç Done",
        "createdAt" : "2018-11-29T18:35:55Z",
        "updatedAt" : "2018-11-29T19:38:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7d11970afc189b4eed3412876bd160920bfa5338",
    "line" : 231,
    "diffHunk" : "@@ -269,5 +274,95 @@ focus back to `UserTest.scala` that depends on APIs defined in `User.scala`.\n \n _Notification_:\n \n-- method: `metals/didFocus`\n+- method: `metals/didFocusTextDocument`\n - params: `string`, the URI of the document where the focused was moved to.\n+\n+## Metals server properties\n+"
  },
  {
    "id" : "efa37fcc-99f5-407f-bc00-094fe7e1119e",
    "prId" : 363,
    "comments" : [
      {
        "id" : "b7fa7fdd-2896-45b9-abeb-8aa9e0386005",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "A minor thing: this flag has a very generic name, but it only applies to BSP.\r\nMaybe it could be used to control also Metals own logging level?\r\n",
        "createdAt" : "2018-11-30T10:31:53Z",
        "updatedAt" : "2018-11-30T10:32:09Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6785d9d1-fdf8-4eb5-8e20-4c0e9ef88fd3",
        "parentId" : "b7fa7fdd-2896-45b9-abeb-8aa9e0386005",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "We can refine this if users need more refined control over logging specific parts. For now I think it's best to keep it as simple as possible, \"You have a problem? Try `-Dmetals.verbose=on`\".",
        "createdAt" : "2018-11-30T10:33:56Z",
        "updatedAt" : "2018-11-30T10:33:57Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "73e474e14147df48a41bbc0d27d8b90ef217264f",
    "line" : 4,
    "diffHunk" : "@@ -79,6 +79,13 @@ example, in vim-lsc the `window/logMessage` notification is always displayed in\n the UI so `-Dmetals.status-bar=log-message` can be configured to direct\n higher-priority messages to the logs.\n \n+### `-Dmetals.verbose`"
  },
  {
    "id" : "57c5b850-cbb8-4b74-bff2-07892cad0f96",
    "prId" : 427,
    "comments" : [
      {
        "id" : "ee6a8275-366d-4069-98d5-3affc579c915",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Is the deprecation message on the docs useful?\r\n\r\nI would just mention it as a breaking change in the release notes.",
        "createdAt" : "2018-12-18T16:04:53Z",
        "updatedAt" : "2018-12-19T15:27:54Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0fd2367581ea78fe416c15f14ea826d3ce3ff35b",
    "line" : 16,
    "diffHunk" : "@@ -88,16 +88,23 @@ Possible values:\n \n ### `-Dmetals.file-watcher`\n \n+This option is no longer used by Metals."
  },
  {
    "id" : "19844362-a433-4a8c-aecb-4148905501ab",
    "prId" : 427,
    "comments" : [
      {
        "id" : "c2151d1d-314d-4e9d-89d3-7ad04e27412c",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Bikeshedding: IMO the name is not very clear. How about something like `glob-syntax` or `watch-pattern-type` ?",
        "createdAt" : "2018-12-19T01:18:25Z",
        "updatedAt" : "2018-12-19T15:27:54Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d02fff3a-d699-448d-b8b7-15c62c815201",
        "parentId" : "c2151d1d-314d-4e9d-89d3-7ad04e27412c",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I agree that's a better name, updated.",
        "createdAt" : "2018-12-19T15:27:57Z",
        "updatedAt" : "2018-12-19T15:27:57Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0fd2367581ea78fe416c15f14ea826d3ce3ff35b",
    "line" : null,
    "diffHunk" : "@@ -88,16 +88,23 @@ Possible values:\n \n ### `-Dmetals.file-watcher`\n \n+This option is no longer used by Metals.\n+\n+### `-Dmetals.directory-glob`"
  },
  {
    "id" : "14546544-9d1e-49d9-85dc-6975f0147763",
    "prId" : 1041,
    "comments" : [
      {
        "id" : "6a2b7f6e-1464-4939-ae0b-92c8ea44dde0",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "this should be _render_ instead of _rendering_",
        "createdAt" : "2019-11-04T06:03:56Z",
        "updatedAt" : "2019-11-09T20:01:12Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "de707bbb-1532-4bfd-9736-7286ba696088",
        "parentId" : "6a2b7f6e-1464-4939-ae0b-92c8ea44dde0",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Good catch, fixed!",
        "createdAt" : "2019-11-06T06:14:48Z",
        "updatedAt" : "2019-11-09T20:01:12Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a2902a65a77773398f8ac710483906215a06bcf8",
    "line" : null,
    "diffHunk" : "@@ -347,6 +347,12 @@ To enable Metals extensions, start the main process with the system property\n Metals implements several custom JSON-RPC endpoints related to rendering tree\n views in the editor client, the [Tree View Protocol](tree-view-protocol.md).\n \n+### Decoration Protocol\n+\n+Metals implements an LSP extension called the \"Decoration Protocol\" to rendering"
  },
  {
    "id" : "b261d428-7cc9-47e4-924d-d18f27b3e783",
    "prId" : 1041,
    "comments" : [
      {
        "id" : "bfbfb6c1-9617-4ac2-b5de-5b52e87b0c79",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I find the name a bit confusing: does it mean the task has no logs or that the client should not show the logs? ",
        "createdAt" : "2019-11-04T11:40:57Z",
        "updatedAt" : "2019-11-09T20:01:12Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "96afa3cf-fd8e-4463-947e-8ca768c03a55",
        "parentId" : "bfbfb6c1-9617-4ac2-b5de-5b52e87b0c79",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "‚òùÔ∏è @olafurpg what do you think about this?",
        "createdAt" : "2019-11-07T11:34:21Z",
        "updatedAt" : "2019-11-09T20:01:12Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8fc8fabb-aae7-40c3-8fb6-3475707256bc",
        "parentId" : "bfbfb6c1-9617-4ac2-b5de-5b52e87b0c79",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Renamed to `quietLogs` to mean that even if there may be logs from this task, they can be ignored (i.e., the output channel doesn't need to be shown).",
        "createdAt" : "2019-11-09T00:19:08Z",
        "updatedAt" : "2019-11-09T20:01:12Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "74b51c8a-c76c-4f16-b43e-6c7fc20ee078",
        "parentId" : "bfbfb6c1-9617-4ac2-b5de-5b52e87b0c79",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Better?",
        "createdAt" : "2019-11-09T00:19:15Z",
        "updatedAt" : "2019-11-09T20:01:12Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a2902a65a77773398f8ac710483906215a06bcf8",
    "line" : null,
    "diffHunk" : "@@ -369,6 +375,8 @@ _Request_:\n interface MetalsSlowTaskParams {\n   /** The name of this slow task */\n   message: string;\n+  /** If true, don't open the logs output. */\n+  noLogs?: boolean;"
  },
  {
    "id" : "8aa75ee4-f4c5-4636-ad50-b64538cf38d8",
    "prId" : 1218,
    "comments" : [
      {
        "id" : "295c236d-6669-4780-90ef-664a114d5bf2",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Let's add back `This option is needed for editor clients that don't support necessary requests such as\r\n  `window/showMessageRequest`.`",
        "createdAt" : "2019-12-23T08:33:16Z",
        "updatedAt" : "2019-12-24T14:31:29Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "aa1e73980b5c2b5406a7a4f9837ce4018713bc4a",
    "line" : 13,
    "diffHunk" : "@@ -168,9 +168,7 @@ Possible values:\n \n - `off` (default): don't start a server with the Metals HTTP client.\n - `on`: start a server with the [Metals HTTP client] to interact with the server\n-  through a basic web UI. This option is needed for editor clients like Sublime"
  },
  {
    "id" : "30b767de-12b2-4c89-9332-708fb5acfb8d",
    "prId" : 1414,
    "comments" : [
      {
        "id" : "8a10ac7b-6362-4126-bd58-8eb8d57af3a9",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : ":+1:",
        "createdAt" : "2020-02-19T10:31:33Z",
        "updatedAt" : "2020-02-19T14:01:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "2b45c0ea6b216649b70b0a2e98445d20fe09d872",
    "line" : 15,
    "diffHunk" : "@@ -117,6 +119,9 @@ Possible values:\n   `window/showMessage` notifications. Used by coc.nvim and sublime at the\n   moment.\n \n+*Usage of `statusBarProvider` in `ClientCapabilities.experimental` is"
  },
  {
    "id" : "e3be6b44-2295-466d-af3e-cad53f8853ff",
    "prId" : 1447,
    "comments" : [
      {
        "id" : "335da004-e706-4b11-9c0a-8d0c736dc487",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Related to some of the work I started in here: https://github.com/scalameta/metals/pull/1414, is it possible to not introduce this as a property, but rather as a `clientExperimentalCapabilities`? I feel like this would fit well there.",
        "createdAt" : "2020-02-17T19:48:59Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6b47ed50-1335-4e57-8dc0-665546e49cec",
        "parentId" : "335da004-e706-4b11-9c0a-8d0c736dc487",
        "author" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "body" : "Agree, as I said in my previous comment, I would expect it to be a client config, rather then a server one. I've just repeated after `input-box`. If it's to be changed -- then this is to be changed as well :)",
        "createdAt" : "2020-02-17T19:53:10Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "180edbb8-341a-4768-bc3b-3213723cec51",
        "parentId" : "335da004-e706-4b11-9c0a-8d0c736dc487",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Let's use the recently merged way defining capabilities.",
        "createdAt" : "2020-02-20T16:15:13Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "948961c16a2b407e9b6be832f69458537ee4bc93",
    "line" : null,
    "diffHunk" : "@@ -134,6 +134,14 @@ Possible values:\n   Metals tries to fallback to `window/showMessageRequest` when possible.\n - `on`: the `metals/inputBox` request is fully supported.\n \n+### `-Dmetals.pick-input`"
  },
  {
    "id" : "6a164d22-0761-4ab0-ae4f-4b5034ec8498",
    "prId" : 1447,
    "comments" : [
      {
        "id" : "0ef7bc20-2eb2-4748-bfa8-4a5ecb0d19bb",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Are the additional properties needed to match the ones in VSCode API?",
        "createdAt" : "2020-02-19T14:44:56Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6f288a2b-afca-4784-a543-c55d69eb2368",
        "parentId" : "0ef7bc20-2eb2-4748-bfa8-4a5ecb0d19bb",
        "author" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "body" : "good question to discuss.\r\nI've added them to match, yes, to be able to use the most of VSCode API.\r\nBut if we don't want them - we can remove them, they'll be initialized to default values on VSCode side.",
        "createdAt" : "2020-02-20T12:10:50Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5b3ea306-c366-44e7-9dba-77aa37ff6272",
        "parentId" : "0ef7bc20-2eb2-4748-bfa8-4a5ecb0d19bb",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "It should be fine, we can leave it as is. Unless they might cause issues for implementing this in other clients? ",
        "createdAt" : "2020-02-20T12:34:10Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c1ec0449-9f9e-4359-9f88-808e73d01504",
        "parentId" : "0ef7bc20-2eb2-4748-bfa8-4a5ecb0d19bb",
        "author" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "body" : "I think, it won't be no problem, thanks to JS agility. Even now it got implicitly converted from Metals interface to VSCode one.",
        "createdAt" : "2020-02-20T15:31:33Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "948961c16a2b407e9b6be832f69458537ee4bc93",
    "line" : 23,
    "diffHunk" : "@@ -529,6 +537,73 @@ export interface MetalsInputBoxResult {\n }\n ```\n \n+### `metals/pickInput`\n+\n+The Metals pick input request is sent from the server to the client to let the\n+user provide a string value by picking one out of a number of given options. It is similar to `window/showMessageRequest`, but the `metals/pickInput` request has richer parameters, that can be used to filter items to pick, like `description` and `detail`.\n+\n+_Request_:\n+\n+- method: `metals/pickInput`\n+- params: `MetalsPickInputParams` defined as follows. It partially matches [`QuickPickOptions`](https://code.visualstudio.com/api/references/vscode-api#QuickPickOptions) in the Visual Studio Code API, but it also contains `items` of [`MetalsPickItem`](https://code.visualstudio.com/api/references/vscode-api#QuickPickItem), which, in it's turn, partially matches `QuickPickItem`, but these interfaces do not contain options for picking many items:\n+\n+```ts\n+export interface MetalsPickInputParams {\n+  /**\n+   * An array of items that can be selected from.\n+   */\n+  items: MetalsPickItem[];\n+  /**\n+   * An optional flag to include the description when filtering the picks.\n+   */\n+  matchOnDescription?: boolean;"
  },
  {
    "id" : "95b815e3-cacb-4dc2-972e-41ed18e6dd27",
    "prId" : 1447,
    "comments" : [
      {
        "id" : "2d91928b-c2d3-423a-b16f-a375d7b6f52d",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Would it make sense to name this `metals/quickPick`? In general I try to follow the same naming convention as in the VS Code APIs",
        "createdAt" : "2020-02-21T10:49:16Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d7ef5638-f4aa-4f2c-804c-667d4fa6fbc2",
        "parentId" : "2d91928b-c2d3-423a-b16f-a375d7b6f52d",
        "author" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "body" : "Yeah, I was not sure about the name, so if you think, this one's better, okay then. Renamed.",
        "createdAt" : "2020-02-21T12:06:58Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "948961c16a2b407e9b6be832f69458537ee4bc93",
    "line" : null,
    "diffHunk" : "@@ -541,6 +541,73 @@ export interface MetalsInputBoxResult {\n }\n ```\n \n+### `metals/pickInput`"
  },
  {
    "id" : "c5bd5a10-eaf9-49e0-b741-69211d97988f",
    "prId" : 1626,
    "comments" : [
      {
        "id" : "02f522ab-ee33-4c82-b921-86ecfff71e58",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\ninterface or to `InitializationOptions`, this is preferable.\r\n```\r\nI'd say just use **or**. We don't want confusion over whether they should set them both or not.",
        "createdAt" : "2020-04-23T06:41:20Z",
        "updatedAt" : "2020-04-23T07:46:25Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "908719d2-b167-40b5-b7e1-04156c3a02dd",
        "parentId" : "02f522ab-ee33-4c82-b921-86ecfff71e58",
        "author" : {
          "login" : "ayoub-benali",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1632384?u=ac40fd778feded69bd8ab05c77d83d3e469ff7ab&v=4"
        },
        "body" : "I was trying to say that some setting should be part of `InitializationOptions` other in `experimental`",
        "createdAt" : "2020-04-23T07:36:40Z",
        "updatedAt" : "2020-04-23T07:46:25Z",
        "lastEditedBy" : {
          "login" : "ayoub-benali",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1632384?u=ac40fd778feded69bd8ab05c77d83d3e469ff7ab&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "af8a2541-3aa7-463e-8ec4-2f17cf02efb4",
        "parentId" : "02f522ab-ee33-4c82-b921-86ecfff71e58",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Understood üëç ",
        "createdAt" : "2020-04-23T08:58:25Z",
        "updatedAt" : "2020-04-23T08:58:25Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "4753c6c3616bf7eaa6f8d8a9f82b1cce35d9a82a",
    "line" : null,
    "diffHunk" : "@@ -78,7 +78,7 @@ example, in vim-lsc the `window/logMessage` notification is always displayed in\n the UI so `-Dmetals.status-bar=log-message` can be configured to direct\n higher-priority messages to the logs. However, whenever possible, if the client\n supports the ability to add in `experimental` items to the `ClientCapabilities`\n-interface, this is preferable.\n+interface and/or to `InitializationOptions`, this is preferable."
  },
  {
    "id" : "d56c750c-0680-4859-946f-3356fde59af4",
    "prId" : 1688,
    "comments" : [
      {
        "id" : "d3253587-6d27-40a9-981b-8c077e604817",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "```suggestion\r\nThe Metals language server is able to be configured through JVM system\r\n```",
        "createdAt" : "2020-05-06T14:59:38Z",
        "updatedAt" : "2020-05-06T15:10:59Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "044f8b8067873a1bda0e762e941be58cc538fbfb",
    "line" : null,
    "diffHunk" : "@@ -63,8 +63,8 @@ Metals supports two kinds of JSON-RPC endpoints:\n \n ## Metals server properties\n \n-The Metals language server is configured through JVM system properties. A system\n-property is passed to the server like this:\n+The Metals language server is is able to be configured through JVM system"
  },
  {
    "id" : "a210fb57-a6ee-4f5e-a6be-9c4cf447a1f0",
    "prId" : 1688,
    "comments" : [
      {
        "id" : "51aaf298-5600-4ca3-9ff1-ec59cfcb050a",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "```suggestion\r\n      \"openFilesOnRenameProvider\": Boolean,\r\n```",
        "createdAt" : "2020-05-06T15:00:55Z",
        "updatedAt" : "2020-05-06T15:10:59Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "044f8b8067873a1bda0e762e941be58cc538fbfb",
    "line" : null,
    "diffHunk" : "@@ -684,16 +675,39 @@ The currently available settings for `InitializationOptions` are listed below.\n         \"isSignatureHelpDocumentationEnabled\": boolean,\n         \"isCompletionItemResolve\": boolean\n       }\n+      \"debuggingProvider\": boolean,\n+      \"decorationProvider\": boolean,\n+      \"didFocusProvider\": boolean,\n+      \"doctorProvider\": \"json\" | \"html\",\n+      \"executeClientCommandProvider\": boolean,\n+      \"inputBoxProvider\": boolean,\n+      \"isExitOnShutdown\" : boolean,\n+      \"isHttpEnabled\": boolean,\n+      \"openFilesOnRenameProvider: Boolean,"
  },
  {
    "id" : "0897af8f-aa1b-4afe-8ba6-66e9226f7d1d",
    "prId" : 1914,
    "comments" : [
      {
        "id" : "c5bca093-1092-457c-89d9-9cd30924212e",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "`will still work by being configured using properties `?",
        "createdAt" : "2020-07-14T14:49:56Z",
        "updatedAt" : "2020-07-14T17:04:58Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a2c0a2b5-fdae-47f8-8c6a-2d9c56296116",
        "parentId" : "c5bca093-1092-457c-89d9-9cd30924212e",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Ah true, I'll change this to make it clearer.",
        "createdAt" : "2020-07-14T17:04:24Z",
        "updatedAt" : "2020-07-14T17:04:58Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "309e1631-a653-473d-a8b4-48b3020516ce",
        "parentId" : "c5bca093-1092-457c-89d9-9cd30924212e",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Thanks!",
        "createdAt" : "2020-07-14T17:05:46Z",
        "updatedAt" : "2020-07-14T17:05:46Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8532bd9d98d5bdd5b28706c49b489107ba44384d",
    "line" : null,
    "diffHunk" : "@@ -61,35 +61,205 @@ Metals supports two kinds of JSON-RPC endpoints:\n - [Metals extensions](#metals-lsp-extensions): for additional functionality that\n   is missing in LSP but improves the user experience.\n \n-## Metals server properties\n+## Configuring the server\n \n-The Metals language server is able to be configured through JVM system\n-properties. A system property is passed to the server like this:\n+Over time the recommended way to configure Metals has shifted from heavily\n+relying on the [Metals server properties](#metals-server-properties) to being\n+fully able to be configured via `InitializationOptions` which are exchanged\n+during the\n+[`initialize`](https://microsoft.github.io/language-server-protocol/specification#initialize)\n+process. While Metals will still work to be fully configured by server"
  },
  {
    "id" : "597f6ae6-f857-4528-84fe-7190bff6cd4d",
    "prId" : 1934,
    "comments" : [
      {
        "id" : "95c2fe82-0972-4ec5-b18f-38feecab8b76",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "The links here were broken.",
        "createdAt" : "2020-07-20T13:02:54Z",
        "updatedAt" : "2020-07-21T07:58:00Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1f9f20c530b2152a24fddd4618793dbec859f696",
    "line" : 5,
    "diffHunk" : "@@ -235,7 +235,7 @@ Default value: `false`\n ##### `didFocusProvider`\n \n Boolean value to signify that the client supports the\n-[`metals/didFocusTextDocument`](#metalsdid-focus-text-document) extension.\n+[`metals/didFocusTextDocument`](#metalsdidfocustextdocument) extension."
  }
]