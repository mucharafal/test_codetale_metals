[
  {
    "id" : "d97f5504-8c66-4d48-9436-5ead435aae9a",
    "prId" : 392,
    "comments" : [
      {
        "id" : "a2c5031c-0142-47c0-a56e-946990fccd3d",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Run PlugInstall (or the relevant command for your plugin manager)",
        "createdAt" : "2018-12-09T21:29:19Z",
        "updatedAt" : "2018-12-09T21:31:24Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f014e637-b76c-43dd-9fdf-1c6ed1750519",
        "parentId" : "a2c5031c-0142-47c0-a56e-946990fccd3d",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "It already says \"assuming vim-plug above\" and highlights vundle works too. Nobody has complained about these instructions so far so I guess it's been fine. The main improvement in this PR was to move all `~/.vimrc` config into one code listing.",
        "createdAt" : "2018-12-09T21:35:08Z",
        "updatedAt" : "2018-12-09T21:35:08Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cc579357ed746a8f422aba05bcad10e202218f1e",
    "line" : 46,
    "diffHunk" : "@@ -58,6 +45,19 @@ let g:lsc_auto_map = {\n     \\}\n ```\n \n+Run `:PlugInstall` to install the plugin. If you already have `vim-lsc`"
  },
  {
    "id" : "603ed892-e58b-4b4c-a398-d587016ed0e5",
    "prId" : 655,
    "comments" : [
      {
        "id" : "fdb90548-cc16-409c-b410-f241c60d8a38",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "```suggestion\r\n  neovim or Vim v8.1 along with npm. Feature rich, supports all of LSP.\r\n```",
        "createdAt" : "2019-04-12T14:15:23Z",
        "updatedAt" : "2019-04-12T14:42:21Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "b3c4a37c0ebee7f34574c02f07c3021ec6af0693",
    "line" : null,
    "diffHunk" : "@@ -3,8 +3,21 @@ id: vim\n title: Vim\n ---\n \n-Metals works in vim thanks to the the\n-[`vim-lsc`](https://github.com/natebosch/vim-lsc/) extension.\n+Metals works with most LSP clients for Vim:\n+\n+- [`vim-lsc`](https://github.com/natebosch/vim-lsc/): simple installation and\n+  low resource usage but limited functionality (no auto-import, cancellation,\n+  formatting, folding).\n+- [`coc.nvim`](https://github.com/neoclide/coc.nvim): installation requires\n+  neovim or vim v8.1 along with npm. Feature rich, supports all of LSP."
  },
  {
    "id" : "c461f042-064b-40c1-bea0-3a2aeb6f469c",
    "prId" : 665,
    "comments" : [
      {
        "id" : "6c5464e3-3f76-4b36-ba8f-b537e88a5ad7",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "nit: can we use `metals` instead?\r\n\r\n```suggestion\r\n    \"metals\": {\r\n```",
        "createdAt" : "2019-04-15T07:25:00Z",
        "updatedAt" : "2019-04-15T12:55:33Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a0f380e6296eba1dc393d74a247bd36bba2d29b8",
    "line" : null,
    "diffHunk" : "@@ -43,47 +54,143 @@ following settings.\n \n \" Configuration for vim-plug\n Plug 'derekwyatt/vim-scala'\n-Plug 'natebosch/vim-lsc'\n+Plug 'neoclide/coc.nvim', {'do': { -> coc#util#install()}}\n \n \" Configuration for vim-scala\n au BufRead,BufNewFile *.sbt set filetype=scala\n-\n-\" Configuration for vim-lsc\n-let g:lsc_enable_autocomplete = v:false\n-let g:lsc_server_commands = {\n-  \\  'scala': {\n-  \\    'command': 'metals-vim',\n-  \\    'log_level': 'Log'\n-  \\  }\n-  \\}\n-let g:lsc_auto_map = {\n-  \\  'GoToDefinition': 'gd',\n-  \\}\n ```\n \n-Run `:PlugInstall` to install the plugin. If you already have `vim-lsc`\n+Run `:PlugInstall` to install the plugin. If you already have `coc.nvim`\n installed, be sure to update to the latest version with `:PlugUpdate`.\n \n-If you start Vim now then it will fail since the `metals-vim` binary does not\n+### COC Configuration\n+\n+We need to tell `coc.nvim` that our LSP server is going to be `metals`. In order to do so, we need to run `:CocConfig` and\n+input our configuration. Here's the recommended default:\n+\n+```jsonc\n+{\n+  \"languageserver\": {\n+    \"scalametals\": {"
  },
  {
    "id" : "5df6b758-2933-4fd7-9f99-33f35de87a52",
    "prId" : 665,
    "comments" : [
      {
        "id" : "9c01dcec-ce68-412a-9392-72b3a485e392",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I think this section can go, since it's extensively covered by the LSP commands key mapping one",
        "createdAt" : "2019-04-15T07:25:33Z",
        "updatedAt" : "2019-04-15T12:55:33Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a0f380e6296eba1dc393d74a247bd36bba2d29b8",
    "line" : null,
    "diffHunk" : "@@ -43,47 +54,143 @@ following settings.\n \n \" Configuration for vim-plug\n Plug 'derekwyatt/vim-scala'\n-Plug 'natebosch/vim-lsc'\n+Plug 'neoclide/coc.nvim', {'do': { -> coc#util#install()}}\n \n \" Configuration for vim-scala\n au BufRead,BufNewFile *.sbt set filetype=scala\n-\n-\" Configuration for vim-lsc\n-let g:lsc_enable_autocomplete = v:false\n-let g:lsc_server_commands = {\n-  \\  'scala': {\n-  \\    'command': 'metals-vim',\n-  \\    'log_level': 'Log'\n-  \\  }\n-  \\}\n-let g:lsc_auto_map = {\n-  \\  'GoToDefinition': 'gd',\n-  \\}\n ```\n \n-Run `:PlugInstall` to install the plugin. If you already have `vim-lsc`\n+Run `:PlugInstall` to install the plugin. If you already have `coc.nvim`\n installed, be sure to update to the latest version with `:PlugUpdate`.\n \n-If you start Vim now then it will fail since the `metals-vim` binary does not\n+### COC Configuration\n+\n+We need to tell `coc.nvim` that our LSP server is going to be `metals`. In order to do so, we need to run `:CocConfig` and\n+input our configuration. Here's the recommended default:\n+\n+```jsonc\n+{\n+  \"languageserver\": {\n+    \"scalametals\": {\n+      \"command\": \"metals-vim\",\n+      \"rootPatterns\": [\"build.sbt\"],\n+      \"trace.server\": \"verbose\",\n+      \"filetypes\": [\"scala\"]\n+    }\n+  }\n+}\n+```\n+\n+`coc.nvim` uses [jsonc](https://code.visualstudio.com/docs/languages/json) as configuration file format. It's basically json with comments support.\n+\n+In order to get comments highlighting, please add:\n+\n+```vim\n+autocmd FileType json syntax match Comment +\\/\\/.\\+$+\n+```\n+\n+### Generating metals binary\n+\n+If you now start Vim in a Scala project then it will fail since the `metals-vim` binary does not\n exist yet.\n \n-```scala mdoc:bootstrap:metals-vim vim-lsc\n+```scala mdoc:bootstrap:metals-vim coc\n \n ```\n \n-The `-Dmetals.client=vim-lsc` flag is important since it configures Metals for\n-usage with the `vim-lsc` client.\n+The `-Dmetals.client=coc` flag is important since it configures Metals for\n+usage with the `coc.nvim` client.\n \n ```scala mdoc:editor:vim\n \n ```\n \n-## Learn more about vim-lsc\n+### LSP commands key mapping\n+\n+`coc.nvim` doesn't come with a default key mapping for LSP commands, you need to configure it yourself.\n+\n+Here's a recommended configuration:\n+\n+```vim\n+\" ~/.vimrc\n+\" Configuration for coc.nvim\n+\n+\" Smaller updatetime for CursorHold & CursorHoldI\n+set updatetime=300\n+\n+\" don't give |ins-completion-menu| messages.\n+set shortmess+=c\n+\n+\" always show signcolumns\n+set signcolumn=yes\n+\n+\" Some server have issues with backup files, see #649\n+set nobackup\n+set nowritebackup\n+\n+\" Better display for messages\n+set cmdheight=2\n+\n+\" Use <c-space> for trigger completion.\n+inoremap <silent><expr> <c-space> coc#refresh()\n+\n+\" Use <cr> for confirm completion, `<C-g>u` means break undo chain at current position.\n+\" Coc only does snippet and additional edit on confirm.\n+inoremap <expr> <cr> pumvisible() ? \"\\<C-y>\" : \"\\<C-g>u\\<CR>\"\n+\n+\" Use `[c` and `]c` for navigate diagnostics\n+nmap <silent> [c <Plug>(coc-diagnostic-prev)\n+nmap <silent> ]c <Plug>(coc-diagnostic-next)\n+\n+\" Remap keys for gotos\n+nmap <silent> gd <Plug>(coc-definition)\n+nmap <silent> gy <Plug>(coc-type-definition)\n+nmap <silent> gi <Plug>(coc-implementation)\n+nmap <silent> gr <Plug>(coc-references)\n+\n+\" Remap for do codeAction of current line\n+nmap <leader>ac <Plug>(coc-codeaction)\n+\n+\" Remap for do action format\n+nnoremap <silent> F :call CocAction('format')<CR>\n+\n+\" Use K for show documentation in preview window\n+nnoremap <silent> K :call <SID>show_documentation()<CR>\n+\n+function! s:show_documentation()\n+  if &filetype == 'vim'\n+    execute 'h '.expand('<cword>')\n+  else\n+    call CocAction('doHover')\n+  endif\n+endfunction\n+\n+\" Highlight symbol under cursor on CursorHold\n+autocmd CursorHold * silent call CocActionAsync('highlight')\n+\n+\" Remap for rename current word\n+nmap <leader>rn <Plug>(coc-rename)\n+\n+\" Show all diagnostics\n+nnoremap <silent> <space>a  :<C-u>CocList diagnostics<cr>\n+\" Find symbol of current document\n+nnoremap <silent> <space>o  :<C-u>CocList outline<cr>\n+\" Search workspace symbols\n+nnoremap <silent> <space>s  :<C-u>CocList -I symbols<cr>\n+\" Do default action for next item.\n+nnoremap <silent> <space>j  :<C-u>CocNext<CR>\n+\" Do default action for previous item.\n+nnoremap <silent> <space>k  :<C-u>CocPrev<CR>\n+\" Resume latest coc list\n+nnoremap <silent> <space>p  :<C-u>CocListResume<CR>\n+```\n+\n+## Learn more about coc.nvim\n \n-For comprehensive documentation about vim-lsc, run the following command.\n+For comprehensive documentation about `coc.nvim`, run the following command.\n \n ```vim\n-:help lsc\n+:help coc-contents\n ```\n \n ## Customize goto definition"
  },
  {
    "id" : "542a02ce-5cdb-4232-bfa2-2b05a8068173",
    "prId" : 665,
    "comments" : [
      {
        "id" : "5b4c2644-cb59-4b09-98f3-1aff52d994dd",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "If we opt for `metals` (see comment above), also remember to change this\r\n\r\n```suggestion\r\n:call CocRequest('metals', 'workspace/executeCommand', { 'command': 'build-connect' })\r\n```",
        "createdAt" : "2019-04-15T07:26:03Z",
        "updatedAt" : "2019-04-15T12:55:33Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a0f380e6296eba1dc393d74a247bd36bba2d29b8",
    "line" : null,
    "diffHunk" : "@@ -137,46 +244,39 @@ To troubleshoot problems with your build workspace execute the following\n command.\n \n ```vim\n-:call lsc#server#call(&filetype, 'workspace/executeCommand', { 'command': 'doctor-run' }, function('abs'))\n+:call CocRequest('scalametals', 'workspace/executeCommand', { 'command': 'doctor-run' })\n ```\n \n This command opens your browser with a table like this.\n \n ![Run Doctor](https://i.imgur.com/yelm0jd.png)\n \n-The callback `function('abs')` can be replaced with any function that does\n-nothing.\n+Note: the binary `metals-vim` needs to be built using `-Dmetals.http=true` for this command to work.\n \n ## Manually start build import\n \n To manually start the `sbt bloopInstall` step, call the following command below.\n This command works only for sbt builds at the moment.\n \n ```vim\n-:call lsc#server#call(&filetype, 'workspace/executeCommand', { 'command': 'build-import' }, function('abs'))\n+:call CocRequest('scalametals', 'workspace/executeCommand', { 'command': 'build-import' })\n ```\n \n-The callback `function('abs')` can be replaced with any function that does\n-nothing.\n-\n ## Manually connect with build server\n \n To manually tell Metals to establish a connection with the build server, call\n the command below. This command works only at the moment if there is a `.bloop/`\n directory containing JSON files.\n \n ```vim\n-:call lsc#server#call(&filetype, 'workspace/executeCommand', { 'command': 'build-connect' }, function('abs'))\n+:call CocRequest('scalametals', 'workspace/executeCommand', { 'command': 'build-connect' })"
  },
  {
    "id" : "122986bc-3290-426a-91ab-6059f031a4dd",
    "prId" : 665,
    "comments" : [
      {
        "id" : "df20ae91-a691-4f0a-a577-c505355b9ed4",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "```suggestion\r\n`coc.nvim` requires [Node.js](https://nodejs.org/en/download/) in order to work. It also uses [Yarn](https://yarnpkg.com/en/docs/install#debian-stable) to manage extensions but you could opt-out of it and use `vim-plug` instead for example.\r\n```",
        "createdAt" : "2019-04-15T07:28:34Z",
        "updatedAt" : "2019-04-15T12:55:33Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a0f380e6296eba1dc393d74a247bd36bba2d29b8",
    "line" : null,
    "diffHunk" : "@@ -25,11 +25,22 @@ same steps can be adapted to use Metals with other LSP clients.\n \n ```\n \n+**vim >= 8.1 and neovim >= 0.3.1**: Make sure you have the correct supported version.\n+\n ## Installing the plugin\n \n-First, install the following plugins\n+`coc.nvim` requires [node](https://nodejs.org/en/download/) in order to work. It also uses [yarn](https://yarnpkg.com/en/docs/install#debian-stable) to manage extensions but you could opt-out of it and use `vim-plug` instead for example."
  },
  {
    "id" : "880ac9c6-3518-4878-8494-5424ddc5ce13",
    "prId" : 665,
    "comments" : [
      {
        "id" : "9d183ea3-fc1f-4ced-80cc-44aa0f784106",
        "parentId" : null,
        "author" : {
          "login" : "rcarcasses",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/665844?u=85d87efdf3a3e3a38525a62286b42cec40e0d6a0&v=4"
        },
        "body" : "I think this is not really needed but only for debugging.",
        "createdAt" : "2019-04-15T08:11:22Z",
        "updatedAt" : "2019-04-15T12:55:33Z",
        "lastEditedBy" : {
          "login" : "rcarcasses",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/665844?u=85d87efdf3a3e3a38525a62286b42cec40e0d6a0&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a0f380e6296eba1dc393d74a247bd36bba2d29b8",
    "line" : null,
    "diffHunk" : "@@ -43,59 +54,150 @@ following settings.\n \n \" Configuration for vim-plug\n Plug 'derekwyatt/vim-scala'\n-Plug 'natebosch/vim-lsc'\n+Plug 'neoclide/coc.nvim', {'do': { -> coc#util#install()}}\n \n \" Configuration for vim-scala\n au BufRead,BufNewFile *.sbt set filetype=scala\n-\n-\" Configuration for vim-lsc\n-let g:lsc_enable_autocomplete = v:false\n-let g:lsc_server_commands = {\n-  \\  'scala': {\n-  \\    'command': 'metals-vim',\n-  \\    'log_level': 'Log'\n-  \\  }\n-  \\}\n-let g:lsc_auto_map = {\n-  \\  'GoToDefinition': 'gd',\n-  \\}\n ```\n \n-Run `:PlugInstall` to install the plugin. If you already have `vim-lsc`\n+Run `:PlugInstall` to install the plugin. If you already have `coc.nvim`\n installed, be sure to update to the latest version with `:PlugUpdate`.\n \n-If you start Vim now then it will fail since the `metals-vim` binary does not\n+### COC Configuration\n+\n+We need to tell `coc.nvim` that our LSP server is going to be `metals`. In order to do so, we need to run `:CocConfig` and\n+input our configuration. Here's the recommended default:\n+\n+```jsonc\n+{\n+  \"languageserver\": {\n+    \"metals\": {\n+      \"command\": \"metals-vim\",\n+      \"rootPatterns\": [\"build.sbt\"],\n+      \"trace.server\": \"verbose\","
  },
  {
    "id" : "48f995d2-10dd-41f6-99bf-fd42f7232f93",
    "prId" : 665,
    "comments" : [
      {
        "id" : "ef45058d-da86-4dae-91a4-f971564f3c6b",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Nice job figuring this out 👍 ",
        "createdAt" : "2019-04-15T12:38:31Z",
        "updatedAt" : "2019-04-15T12:55:33Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a0f380e6296eba1dc393d74a247bd36bba2d29b8",
    "line" : 251,
    "diffHunk" : "@@ -137,46 +240,39 @@ To troubleshoot problems with your build workspace execute the following\n command.\n \n ```vim\n-:call lsc#server#call(&filetype, 'workspace/executeCommand', { 'command': 'doctor-run' }, function('abs'))\n+:call CocRequest('metals', 'workspace/executeCommand', { 'command': 'doctor-run' })"
  },
  {
    "id" : "f97b0df0-b517-4139-aa26-e5a91c2b2b62",
    "prId" : 1080,
    "comments" : [
      {
        "id" : "d8589666-681b-4da0-981a-287c98bbc4f8",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "projec -> project",
        "createdAt" : "2019-11-22T10:39:43Z",
        "updatedAt" : "2019-11-22T11:05:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f1720fcc98ea4644ed5cd9b4a6164df3890d8fd3",
    "line" : null,
    "diffHunk" : "@@ -103,17 +103,17 @@ recommended default:\n ```\n \n `coc.nvim` uses [jsonc](https://code.visualstudio.com/docs/languages/json) as\n-configuration file format. It's basically json with comments support.\n+a configuration file format. It's basically json with comment support.\n \n-In order to get comments highlighting, please add:\n+In order to get comment highlighting, please add:\n \n ```vim\n autocmd FileType json syntax match Comment +\\/\\/.\\+$+\n ```\n \n ### Generating metals binary\n \n-If you now start Vim in a Scala project then it will fail since the `metals-vim`\n+If you now start Vim in a Scala projec, it will fail since the `metals-vim`"
  },
  {
    "id" : "99fc9028-7ddc-43ae-a4cb-1400a33114ef",
    "prId" : 1197,
    "comments" : [
      {
        "id" : "3c00e51b-d9fa-46cd-866b-be4b83a4c544",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Should we recommend nvim over vim?",
        "createdAt" : "2019-12-18T10:27:53Z",
        "updatedAt" : "2019-12-20T09:44:11Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4bed8d66-376f-4b99-b523-7d2fe70ecf4e",
        "parentId" : "3c00e51b-d9fa-46cd-866b-be4b83a4c544",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "8.2 is working really well right now. All of the same core functionality needed for a pleasant LSP experience is there, albeit I've found some of it to be not as smooth. Either way, coc.nvim promises to work with both, so I'd say for now, we can leave both in.",
        "createdAt" : "2019-12-18T10:49:02Z",
        "updatedAt" : "2019-12-20T09:44:11Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "968aa6191e574d41442ecf5e3205b82234974d58",
    "line" : 33,
    "diffHunk" : "@@ -34,13 +22,12 @@ sure you have the correct version installed.\n ```sh\n # If using Vim\n vim --version | head\n-VIM - Vi IMproved 8.1"
  },
  {
    "id" : "a88ab3b2-ea37-49c6-8bdd-c023b5b0b24a",
    "prId" : 1197,
    "comments" : [
      {
        "id" : "3767023b-2346-4e1d-83c4-fce636767c20",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This table can be automatically generated using mdoc similarly as it's done in `new-editor.md` https://github.com/scalameta/metals/blame/b1cc89c7b6bd081e772057b7bbb45377cc705796/docs/editors/new-editor.md#L312\r\n\r\nIt would be nice to avoid duplicating the descriptions here",
        "createdAt" : "2019-12-18T10:32:02Z",
        "updatedAt" : "2019-12-20T09:44:11Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1cbdc3c3-ebf4-4363-bc3c-010d2872822c",
        "parentId" : "3767023b-2346-4e1d-83c4-fce636767c20",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Ahh, good call. I'll update this to use mdoc.",
        "createdAt" : "2019-12-18T10:49:57Z",
        "updatedAt" : "2019-12-20T09:44:11Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "968aa6191e574d41442ecf5e3205b82234974d58",
    "line" : null,
    "diffHunk" : "@@ -245,70 +220,113 @@ Or use the default recommended mapping `<space> a`.\n This is helpful to see compilation errors in different files from your current\n open buffer.\n \n-## Close buffer without exiting\n+![Diagnostics](https://i.imgur.com/cer22HW.png)\n \n-To close a buffer and return to the previous buffer, run the following command.\n+## Run doctor\n \n-```vim\n-:bd\n-```\n+To troubleshoot problems with your build workspace, open your coc commands by either\n+using `:CocCommand` or the recommend mapping `<space> c`. This will open your command\n+window allowing you to search for `metals.doctor-run` command.\n \n-This command is helpful when navigating in library dependency sources in the\n-`.metals/readonly` directory.\n+![Run Doctor Command](https://i.imgur.com/QaqhxF7.png)\n \n-## Shut down the language server\n+This command opens your browser with a table like this.\n \n-The Metals server is shutdown when you exit vim as usual.\n+![Run Doctor](https://i.imgur.com/yelm0jd.png)\n \n-```vim\n-:wq\n-```\n+## Other Available Command\n \n-This step clean ups resources that are used by the server.\n+  - `metals.restartServer`\n+  - `metals.build-import`\n+  - `metals.build-connect`\n+  - `metals.sources-scan`\n+  - `metals.compile-cascade`\n+  - `metals.compile-cancel`\n+  - `metals.doctor-run`\n \n-## Run doctor\n+## Show document symbols\n \n-To troubleshoot problems with your build workspace, make sure the below snippet\n-is in your `.vimrc` which will allow you to issue a `:MetalsDoctor` command.\n+Run `:CocList outline` to show a symbol outline for the current file or use the\n+default mapping `<space> o`.\n \n-```vim\n-command! -nargs=0 MetalsDoctor :call CocRequestAsync('metals', 'workspace/executeCommand', { 'command': 'doctor-run' })\n-```\n+![Document Symbols](https://i.imgur.com/gEhAXV4.png)\n \n-This command opens your browser with a table like this.\n \n-![Run Doctor](https://i.imgur.com/yelm0jd.png)\n+## Available Configuration Options\n+\n+The following configuration options are currently available. The easiest way to set these configurations is to enter `:CocConfig` or `:CocLocalConfig` to set your global or local configuration settings respectively.\n+If you'd like to get autocompletion help for the configuration values you can install [coc-json](https://github.com/neoclide/coc-json).\n+\n+\n+   Configuration Option     |      Description\n+----------------------------|---------------------------\n+`metals.serverVersion`      | The version of the Metals server artifact. Requires reloading the window."
  },
  {
    "id" : "0cdc4eaf-0477-4c3f-88e8-b194e3d2ce29",
    "prId" : 1227,
    "comments" : [
      {
        "id" : "729e2b19-71ca-4789-927b-e9d02a12378c",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I originally wasn't going to mention anything about a preference for Neovim, but after spending some time with the new Vim 8.2, I feel pretty confident in saying that Neovim is a smoother experience. It's snappier with larger codebases for one, but another thing leading me to say this is that code actions seem sort of unusable at the moment with Vim 8.2 and coc.nvim (see https://github.com/neoclide/coc.nvim/issues/1404)",
        "createdAt" : "2019-12-27T14:48:54Z",
        "updatedAt" : "2019-12-29T22:35:39Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0b8d38ea4e656b6d7a9effa3ab9622d50e9913ca",
    "line" : null,
    "diffHunk" : "@@ -17,7 +16,8 @@ which will provide the most complete implementation of LSP and Metals specific h\n ## Installing Vim\n \n The coc.nvim plugin requires either **Vim >= 8.1** or **Neovim >= 0.3.1**. Make\n-sure you have the correct version installed.\n+sure you have the correct version installed. While it works with both Vim and Neovim, the\n+experience is a bit smoother with Neovim."
  },
  {
    "id" : "298535a8-5049-4fc4-b242-cceb68566a9a",
    "prId" : 1227,
    "comments" : [
      {
        "id" : "f88b10fa-5e12-4007-9b0c-7d2f5c2da83f",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I'm fine with recommending neovim over vim. How about?\r\n```suggestion\r\nWhile it works with both Vim and Neovim, we recommend using Neovim since it provides the most feature-complete experience with Metals.\r\n```\r\n\r\nWe might want to list what features are currently working more smoothly in neovim. You never know, maybe somebody will take on the heroic task of improving the situation for vim.",
        "createdAt" : "2019-12-27T16:45:11Z",
        "updatedAt" : "2019-12-29T22:35:39Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0db22663-fd33-484a-a39a-4b68ad14949a",
        "parentId" : "f88b10fa-5e12-4007-9b0c-7d2f5c2da83f",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "The only thing I don't like about this change is that technically it doesn't provide a more _feature-complete_ experience, since they both allow for the same features. However, in Neovim, they seem to just work smoother without any hangs. Some of it is purely performance related.",
        "createdAt" : "2019-12-27T17:00:44Z",
        "updatedAt" : "2019-12-29T22:35:39Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7325980f-5631-48db-9b01-4ddf26e446bd",
        "parentId" : "f88b10fa-5e12-4007-9b0c-7d2f5c2da83f",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I'll massage this a bit though.",
        "createdAt" : "2019-12-27T17:00:58Z",
        "updatedAt" : "2019-12-29T22:35:39Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0b8d38ea4e656b6d7a9effa3ab9622d50e9913ca",
    "line" : null,
    "diffHunk" : "@@ -17,7 +16,8 @@ which will provide the most complete implementation of LSP and Metals specific h\n ## Installing Vim\n \n The coc.nvim plugin requires either **Vim >= 8.1** or **Neovim >= 0.3.1**. Make\n-sure you have the correct version installed.\n+sure you have the correct version installed. While it works with both Vim and Neovim, the\n+experience is a bit smoother with Neovim."
  },
  {
    "id" : "00cc5056-53f7-4b36-8dcf-08d03e588aca",
    "prId" : 1227,
    "comments" : [
      {
        "id" : "ea48852f-4aa6-4f14-bc5f-e4aa7aa129cb",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : ">  make sure you run `:CocUninstall coc-metals`\r\n\r\nThis is a bit hidden inside the paragraph. It might be good to extract it into a code fence like this\r\n````\r\n```\r\n:CocUninstall coc-metals\r\n```\r\n````",
        "createdAt" : "2019-12-27T16:46:26Z",
        "updatedAt" : "2019-12-29T22:35:39Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0b8d38ea4e656b6d7a9effa3ab9622d50e9913ca",
    "line" : null,
    "diffHunk" : "@@ -165,20 +165,30 @@ inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm()\n \n ### Installing coc-metals\n \n-Once you have `coc.nvim` installed, you can then install Metals by running.\n+Once you have `coc.nvim` installed, you can then install Metals a few different ways. The easiest is\n+by running:\n \n ```vim\n :CocInstall coc-metals\n ```\n-If you'd like to use the latest changes on master, you can also just build from source by using a plugin\n-manager to download the extension. If you do this and you've had `coc-metals` installed before with `:CocInstall`,\n-make sure you run `:CocUninstall coc-metals` to remove it. Then, if you are using [`vim-plug`](https://github.com/junegunn/vim-plug)\n+\n+If you'd like to use the latest changes on master, you can also use the url of the repo in the\n+command like so:\n+\n+```vim\n+:CocInstall https://github.com/ckipp01/coc-metals\n+```\n+If you'd like to use the latest changes on master, but would prefer managing the plugin using a plugin\n+manager to download the extension, make sure you run `:CocUninstall coc-metals` if you've had"
  },
  {
    "id" : "e7aa2c1f-61fe-4766-8ade-43500af54a73",
    "prId" : 1227,
    "comments" : [
      {
        "id" : "98480ffd-7d63-420f-9657-d423b4c0c6a9",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "😻 ",
        "createdAt" : "2019-12-27T16:46:57Z",
        "updatedAt" : "2019-12-29T22:35:39Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0b8d38ea4e656b6d7a9effa3ab9622d50e9913ca",
    "line" : 81,
    "diffHunk" : "@@ -235,9 +245,10 @@ window allowing you to search for `metals.doctor-run` command.\n \n ![Run Doctor Command](https://i.imgur.com/QaqhxF7.png)\n \n-This command opens your browser with a table like this.\n+This command opens an embedded doctor in your preview window. If you're not familiar with\n+having multiple windows, you can use `<C-w> + w` to jump into it.\n \n-![Run Doctor](https://i.imgur.com/yelm0jd.png)\n+![Embedded Doctor](https://i.imgur.com/McaAFv5.png)"
  },
  {
    "id" : "38b4e7a5-b6a7-47b4-81ba-a8133f8d4335",
    "prId" : 1227,
    "comments" : [
      {
        "id" : "83b50b64-6350-4824-9e5b-6ec821894e96",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "What do the triple dots mean?\r\n```suggestion\r\nbuffer.\r\n```",
        "createdAt" : "2019-12-27T16:47:32Z",
        "updatedAt" : "2019-12-29T22:35:39Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "90e2c3fe-b886-428c-b1ac-b3e8098be801",
        "parentId" : "83b50b64-6350-4824-9e5b-6ec821894e96",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Aha, it seems to be to imply the sentence continues. I generally try to avoid letting sentences go over images since it's difficult to read the sentence that way",
        "createdAt" : "2019-12-27T16:48:43Z",
        "updatedAt" : "2019-12-29T22:35:39Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2182f53c-7fc0-4685-8b25-1eb2e2f22a24",
        "parentId" : "83b50b64-6350-4824-9e5b-6ec821894e96",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Sounds good. I'll change this around to not have these.",
        "createdAt" : "2019-12-27T17:06:17Z",
        "updatedAt" : "2019-12-29T22:35:39Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0b8d38ea4e656b6d7a9effa3ab9622d50e9913ca",
    "line" : null,
    "diffHunk" : "@@ -284,23 +296,62 @@ To close a buffer and return to the previous buffer, run the following command.\n \n This command is helpful when navigating in library dependency sources in the .metals/readonly directory.\n \n-### Shut down the language server\n+## Shut down the language server\n \n The Metals server is shutdown when you exit vim as usual.\n \n ```vim\n :wq\n ```\n \n-This step clean ups resources that are used by the server.\n+## Statusline integration\n+\n+`coc.nvim` has multiple ways to integrate with various statusline plugins. You can find instructions\n+for each of them located [here](https://github.com/neoclide/coc.nvim/wiki/Statusline-integration).\n+Two noteworthy things that they add are the ability to see diagnostic information in the current\n+buffer..."
  },
  {
    "id" : "7e3ea7e7-3682-41df-bb23-9a7a54259385",
    "prId" : 1227,
    "comments" : [
      {
        "id" : "6ea1b55f-08b7-430f-bbb7-349e95dc8ea5",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "```suggestion\r\nAdd the following configuration to `:CocConfig` if you'd like to have `:w` format using Metals and Scalafmt\r\n```",
        "createdAt" : "2019-12-27T16:49:28Z",
        "updatedAt" : "2019-12-29T22:35:39Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0b8d38ea4e656b6d7a9effa3ab9622d50e9913ca",
    "line" : null,
    "diffHunk" : "@@ -284,23 +296,62 @@ To close a buffer and return to the previous buffer, run the following command.\n \n This command is helpful when navigating in library dependency sources in the .metals/readonly directory.\n \n-### Shut down the language server\n+## Shut down the language server\n \n The Metals server is shutdown when you exit vim as usual.\n \n ```vim\n :wq\n ```\n \n-This step clean ups resources that are used by the server.\n+## Statusline integration\n+\n+`coc.nvim` has multiple ways to integrate with various statusline plugins. You can find instructions\n+for each of them located [here](https://github.com/neoclide/coc.nvim/wiki/Statusline-integration).\n+Two noteworthy things that they add are the ability to see diagnostic information in the current\n+buffer...\n+\n+![Diagnostic statusline](https://i.imgur.com/7uNYTYl.png)\n+\n+... and also progress information for longer standing processes.\n+\n+![Progress item](https://i.imgur.com/AAWZ4o4.png)\n+\n+If you don't use a statusline integration, but would still like to see this information, the easiest\n+way is to add the following to your `.vimrc`.\n+\n+```vim\n+set statusline^=%{coc#status()}\n+```\n+The `coc#status()` function will display both status and diagnostic information. However, if you are\n+using an integration like I am in the photos that display your diagnostic information in the far\n+right, but you'd like to see the status information in the middle, you can make a small function to\n+just grab that information, and use it in your statusline. Here is an example for lightline to\n+display only the status information in the middle of the statusline (`section_c`).\n+\n+```vim\n+function! CocExtensionStatus() abort\n+  return get(g:, 'coc_status', '')\n+endfunction\n+let g:airline_section_c = '%f%{CocExtensionStatus()}'\n+```\n+## Formatting on save\n+\n+If you'd like to have `:w` format using Metals + Scalafmt, then make sure you have the following in"
  },
  {
    "id" : "9383c502-b35d-4a0d-8a12-0c2b821a63db",
    "prId" : 1289,
    "comments" : [
      {
        "id" : "cd4a6da9-b742-49b0-983c-78969d5186c4",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I was working with `vim-lsc` this morning and realized these points weren't really accurate anymore since a lot of functionality has been updated. Same with `vim-lsp`. I think it might be best to just list what they are, and not really mention features for each one, but rather put a general note to keep in mind that there are varying levels of support.",
        "createdAt" : "2020-01-13T08:58:34Z",
        "updatedAt" : "2020-01-20T12:24:32Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ad476d73e6bcc01a78c333f64c12dc967204df36",
    "line" : 171,
    "diffHunk" : "@@ -375,16 +422,12 @@ This step cleans up resources that are used by the server.\n ## Using an alternative LSP Client\n \n While we recommend using the `coc-metals` extension with `coc.nvim`, Metals will work\n-with these alternative LSP clients.\n-\n-- [`vim-lsc`](https://github.com/natebosch/vim-lsc/): simple installation and\n-  low resource usage but limited functionality (no auto-import, cancellation,\n-  formatting, folding).\n-- [`LanguageClient-neovim`](https://github.com/autozimu/LanguageClient-neovim/):\n-  client written in Rust.\n-- [`vim-lsp`](https://github.com/prabirshrestha/vim-lsp): simple installation\n-  but limited functionality (no auto-import, cancellation and no prompt for\n-  build import).\n+with these alternative LSP clients. Keep in mind that they have varying levels of LSP support."
  },
  {
    "id" : "cf716692-f622-49d6-ba20-0a2eb4693d3e",
    "prId" : 1476,
    "comments" : [
      {
        "id" : "0629c99a-4035-415f-b86e-84112a002084",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "```suggestion\r\nmanually add the coc status information into your statusline. `coc.nvim` has\r\n```",
        "createdAt" : "2020-03-04T14:27:14Z",
        "updatedAt" : "2020-03-04T14:35:46Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1bdc5c3c32a91e2670efd2ded834b7b89a352a22",
    "line" : null,
    "diffHunk" : "@@ -427,35 +427,49 @@ The Metals server is shutdown when you exit vim as usual.\n \n ## Statusline integration\n \n-`coc.nvim` has multiple ways to integrate with various statusline plugins. You can find instructions\n-for each of them located [here](https://github.com/neoclide/coc.nvim/wiki/Statusline-integration).\n-Two noteworthy things that they add are the ability to see diagnostic information in the current\n-buffer.\n+It's recommended to use a statusline integration with `coc-metals` in order to\n+allow messages to be displayed in your status line rather than as a message.\n+This will allow for a better experience as you can continue to get status\n+information while entering a command or responding to a prompt. However, we\n+realize that not everyone by default will have this setup, and since the user\n+needs to see messages about the status of their build, the following is\n+defaulted to false.\n+\n+```json\n+\"metals.statusBarEnabled\": true\n+```\n+\n+Again, it's recommended to make this active, and use a statusline plugin, or\n+manually add the coc status information into your statusline.  `coc.nvim` has"
  },
  {
    "id" : "cdd324da-1f6e-460c-addf-9740e22d20da",
    "prId" : 1476,
    "comments" : [
      {
        "id" : "1b8b2315-9805-46f3-a7e6-c343daaf94b7",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "```suggestion\r\nWith [vim-airline](https://github.com/vim-airline/vim-airline) you'll notice\r\n```",
        "createdAt" : "2020-03-04T14:27:44Z",
        "updatedAt" : "2020-03-04T14:35:46Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1bdc5c3c32a91e2670efd2ded834b7b89a352a22",
    "line" : null,
    "diffHunk" : "@@ -427,35 +427,49 @@ The Metals server is shutdown when you exit vim as usual.\n \n ## Statusline integration\n \n-`coc.nvim` has multiple ways to integrate with various statusline plugins. You can find instructions\n-for each of them located [here](https://github.com/neoclide/coc.nvim/wiki/Statusline-integration).\n-Two noteworthy things that they add are the ability to see diagnostic information in the current\n-buffer.\n+It's recommended to use a statusline integration with `coc-metals` in order to\n+allow messages to be displayed in your status line rather than as a message.\n+This will allow for a better experience as you can continue to get status\n+information while entering a command or responding to a prompt. However, we\n+realize that not everyone by default will have this setup, and since the user\n+needs to see messages about the status of their build, the following is\n+defaulted to false.\n+\n+```json\n+\"metals.statusBarEnabled\": true\n+```\n+\n+Again, it's recommended to make this active, and use a statusline plugin, or\n+manually add the coc status information into your statusline.  `coc.nvim` has\n+multiple ways to integrate with various statusline plugins. You can find\n+instructions for each of them located\n+[here](https://github.com/neoclide/coc.nvim/wiki/Statusline-integration).  If\n+you're unsure of what to use,\n+[vim-airline](https://github.com/vim-airline/vim-airline) is a great minimal\n+choice that will work out of the box.\n+\n+With [vim-airline](https://github.com/vim-airline/vim-airline), you'll notice"
  },
  {
    "id" : "b6a9e59f-96b1-4043-b53e-509650f97a7e",
    "prId" : 1476,
    "comments" : [
      {
        "id" : "5b75eeee-1d31-426e-8556-e618768b8068",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "```suggestion\r\ntwo noteworthy things. The first will be that you'll have diagnostic\r\n```",
        "createdAt" : "2020-03-04T14:27:56Z",
        "updatedAt" : "2020-03-04T14:35:46Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1bdc5c3c32a91e2670efd2ded834b7b89a352a22",
    "line" : null,
    "diffHunk" : "@@ -427,35 +427,49 @@ The Metals server is shutdown when you exit vim as usual.\n \n ## Statusline integration\n \n-`coc.nvim` has multiple ways to integrate with various statusline plugins. You can find instructions\n-for each of them located [here](https://github.com/neoclide/coc.nvim/wiki/Statusline-integration).\n-Two noteworthy things that they add are the ability to see diagnostic information in the current\n-buffer.\n+It's recommended to use a statusline integration with `coc-metals` in order to\n+allow messages to be displayed in your status line rather than as a message.\n+This will allow for a better experience as you can continue to get status\n+information while entering a command or responding to a prompt. However, we\n+realize that not everyone by default will have this setup, and since the user\n+needs to see messages about the status of their build, the following is\n+defaulted to false.\n+\n+```json\n+\"metals.statusBarEnabled\": true\n+```\n+\n+Again, it's recommended to make this active, and use a statusline plugin, or\n+manually add the coc status information into your statusline.  `coc.nvim` has\n+multiple ways to integrate with various statusline plugins. You can find\n+instructions for each of them located\n+[here](https://github.com/neoclide/coc.nvim/wiki/Statusline-integration).  If\n+you're unsure of what to use,\n+[vim-airline](https://github.com/vim-airline/vim-airline) is a great minimal\n+choice that will work out of the box.\n+\n+With [vim-airline](https://github.com/vim-airline/vim-airline), you'll notice\n+two noteworthy, things. The first will be that you'll have diagnostic"
  },
  {
    "id" : "e360de4c-8955-4125-ba8f-1b46710da5cc",
    "prId" : 1651,
    "comments" : [
      {
        "id" : "c54e96b8-199b-49cd-a177-124cb71dd779",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I removed this because of 2 reasons.\r\n\r\n1. The most useful part of this is the syntax highlighting. All modern versions of vim/nvim ship with the syntax highlight from this plugin by default.\r\n2. The only other thing you'd probably use this for is to sort imports, but it's all done via regex. I'd rather have someone use scalafix.",
        "createdAt" : "2020-04-20T18:34:50Z",
        "updatedAt" : "2020-04-21T13:29:59Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "74133fca6a8f760659261d309574fc60a71dc523",
    "line" : 19,
    "diffHunk" : "@@ -44,13 +43,9 @@ curl --compressed -o- -L https://yarnpkg.com/install.sh | bash\n \n ## Installing coc.nvim\n \n-Once the requirements are satisfied, we can now proceed to install the following\n-plugins:\n-\n-- [`neoclide/coc.nvim`](https://github.com/neoclide/coc.nvim/): Language Server\n-  Protocol client to communicate with the Metals language server.\n-- [`derekwyatt/vim-scala`](https://github.com/derekwyatt/vim-scala): for syntax"
  },
  {
    "id" : "6d0039ab-513b-4d47-b64c-8607eada486e",
    "prId" : 1651,
    "comments" : [
      {
        "id" : "d2edd29f-f543-4e2f-a00c-df2f8761403f",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I've started to recommend people not set this especially since the status bar integration.",
        "createdAt" : "2020-04-20T18:35:16Z",
        "updatedAt" : "2020-04-20T18:36:59Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "74133fca6a8f760659261d309574fc60a71dc523",
    "line" : 47,
    "diffHunk" : "@@ -89,15 +83,13 @@ Here's a recommended configuration:\n \" ~/.vimrc\n \" Configuration for coc.nvim\n \n+\" If hidden is not set, TextEdit might fail.\n set hidden\n \n \" Some servers have issues with backup files\n set nobackup\n set nowritebackup\n \n-\" Better display for messages\n-set cmdheight=2"
  },
  {
    "id" : "1c441b94-4cf1-494d-981e-7f422304876b",
    "prId" : 1651,
    "comments" : [
      {
        "id" : "54b11569-ba75-45b5-8593-f2807bbd9800",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I mention this below in the statusline section so I remove this here because if you _are_ enabling the statusline, you would want to use it that way more than likely. If you aren't enabling it, this doesn't do anything for you.",
        "createdAt" : "2020-04-20T18:36:18Z",
        "updatedAt" : "2020-04-20T18:36:59Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "74133fca6a8f760659261d309574fc60a71dc523",
    "line" : 70,
    "diffHunk" : "@@ -185,8 +177,9 @@ command! -nargs=0 Format :call CocAction('format')\n \" Use `:Fold` to fold current buffer\n command! -nargs=? Fold :call     CocAction('fold', <f-args>)\n \n-\" Add status line support, for integration with other plugin, checkout `:h coc-status`\n-set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}"
  },
  {
    "id" : "eee296b0-41db-4809-ad5e-6987aba55fab",
    "prId" : 1651,
    "comments" : [
      {
        "id" : "9d78abc7-e259-42be-8ad6-f5f192cbfb2b",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Needed for super-method stuff.",
        "createdAt" : "2020-04-20T18:36:32Z",
        "updatedAt" : "2020-04-20T18:36:59Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "74133fca6a8f760659261d309574fc60a71dc523",
    "line" : 73,
    "diffHunk" : "@@ -185,8 +177,9 @@ command! -nargs=0 Format :call CocAction('format')\n \" Use `:Fold` to fold current buffer\n command! -nargs=? Fold :call     CocAction('fold', <f-args>)\n \n-\" Add status line support, for integration with other plugin, checkout `:h coc-status`\n-set statusline^=%{coc#status()}%{get(b:,'coc_current_function','')}\n+\" Trigger for code actions\n+\" Make sure `\"codeLens.enable\": true` is set in your coc config\n+nnoremap <leader>cl :<C-u>call CocActionAsync('codeLensAction')<CR>"
  },
  {
    "id" : "995971ee-10ad-4a60-9607-c125c8dc30f4",
    "prId" : 1651,
    "comments" : [
      {
        "id" : "49e6faa5-bbce-4701-b05d-28c8982949cd",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "awesome :+1: ",
        "createdAt" : "2020-04-21T13:22:13Z",
        "updatedAt" : "2020-04-21T13:22:13Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "74133fca6a8f760659261d309574fc60a71dc523",
    "line" : 164,
    "diffHunk" : "@@ -358,6 +360,27 @@ members, and methods are all color coded.\n `metals.treeviews.executeCommandAndOpenSplit`   | Execute command and open node under cursor in horizontal split (if node is class, trait and so on) (default `s`)\n `metals.treeviews.executeCommandAndOpenVSplit`  | Execute command and open node under cursor in horizontal split (if node is class, trait and so on) (default `v`)\n \n+## Goto Super Method"
  },
  {
    "id" : "e7776cff-3833-4496-bd76-639bd3dd4c9d",
    "prId" : 1774,
    "comments" : [
      {
        "id" : "64c7240a-0255-4e7a-aa65-737ff2b2fcbb",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Good catch. Can we actually change the note here to explain a bit as to why it is being done. Something like _Necessary for Vim to recognize sbt, script, and worksheet files as Scala._\r\n\r\nAlso, are then able to move this entire chunk down to the recommended mappings file? It's a bit better fitting there since this isn't related to a specific plugin, but rather a general setting.",
        "createdAt" : "2020-05-22T07:06:49Z",
        "updatedAt" : "2020-05-22T17:32:52Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f9065c9896a65050ad9296bb3ca20b1a55b4fb34",
    "line" : null,
    "diffHunk" : "@@ -58,7 +58,7 @@ following settings.\n Plug 'neoclide/coc.nvim', {'branch': 'release'}\n \n \" Configuration for vim-scala\n-au BufRead,BufNewFile *.sbt set filetype=scala\n+au BufRead,BufNewFile *.sbt,*.sc set filetype=scala"
  },
  {
    "id" : "56af1cb2-d4f3-4118-9521-73a160d0b8b6",
    "prId" : 1774,
    "comments" : [
      {
        "id" : "5aa0fefa-5e3d-4e9e-bc54-8a17d4978f1f",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "So I actually wouldn't change this, or at least not without further explanation. Worksheets actually still work at the root of your project. They won't have access to everything in your package like they would if they were in `src/main/scala`, but the worksheet still works and evaluates. So if you are going to change this at all, you may want to make that distinction.",
        "createdAt" : "2020-05-22T07:09:13Z",
        "updatedAt" : "2020-05-22T17:32:52Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "f9065c9896a65050ad9296bb3ca20b1a55b4fb34",
    "line" : null,
    "diffHunk" : "@@ -303,7 +303,7 @@ open buffer.\n \n ## Worksheets\n \n-Metals allows users to create a `*.worksheet.sc` file and see evaluations right\n+Metals allows users to create a `src/main/scala/*.worksheet.sc` file and see evaluations right"
  },
  {
    "id" : "d95f0240-a3d3-40e5-9797-e9f91ec6b53a",
    "prId" : 1785,
    "comments" : [
      {
        "id" : "1669b33e-b6d5-473d-9989-e42e1f50ddfb",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Everything above is just formatting changes (just text width), and I moved this section from above to here and added the `*.sc`.",
        "createdAt" : "2020-05-28T18:30:25Z",
        "updatedAt" : "2020-05-28T18:30:25Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "47d825c0-2f91-47ca-97b8-70f36126e70b",
        "parentId" : "1669b33e-b6d5-473d-9989-e42e1f50ddfb",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "checking docs: https://scalameta.org/metals/docs/editors/vim.html\r\nshould you not update this?\r\n`au BufRead,BufNewFile *.sbt set filetype=scala` ",
        "createdAt" : "2020-05-28T20:55:47Z",
        "updatedAt" : "2020-05-28T20:56:57Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "d376bb43-5826-42d1-9372-570b20121c4f",
        "parentId" : "1669b33e-b6d5-473d-9989-e42e1f50ddfb",
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "ah nvm you moved it, sry :facepalm: ",
        "createdAt" : "2020-05-28T20:56:35Z",
        "updatedAt" : "2020-05-28T20:56:57Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "d8627a465b78ad8bcc49943fdb2b9e04bd8fff0c",
    "line" : 86,
    "diffHunk" : "@@ -99,6 +97,9 @@ set shortmess+=c\n \" Always show signcolumns\n set signcolumn=yes\n \n+\" Help Vim recognize *.sbt and *.sc as Scala files\n+au BufRead,BufNewFile *.sbt,*.sc set filetype=scala"
  },
  {
    "id" : "65ad7b0a-2d79-46c7-994d-b2f8badbb854",
    "prId" : 1934,
    "comments" : [
      {
        "id" : "8518f294-0767-4e52-9ce2-b5d650b61e75",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Just out of curiosity, since it's the same page this doesn't need to be prefaced with `vim.md` right?",
        "createdAt" : "2020-07-20T14:38:54Z",
        "updatedAt" : "2020-07-21T07:58:00Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f1d3d37f-b499-4707-bb75-d60d58cef7be",
        "parentId" : "8518f294-0767-4e52-9ce2-b5d650b61e75",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "ach, right. I will remove it. I never remember the exact syntax needed, so I experiment a bit.",
        "createdAt" : "2020-07-20T15:24:42Z",
        "updatedAt" : "2020-07-21T07:58:00Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c4b12241-ed03-4f93-a2f9-0f571e543325",
        "parentId" : "8518f294-0767-4e52-9ce2-b5d650b61e75",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Actually, I am getting a warning without it, so I will leave it as is.",
        "createdAt" : "2020-07-20T18:14:16Z",
        "updatedAt" : "2020-07-21T07:58:00Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1f9f20c530b2152a24fddd4618793dbec859f696",
    "line" : 5,
    "diffHunk" : "@@ -323,7 +323,7 @@ Then, when on the line that you'd like to expand the decoration to get the hover\n \n coc-metals has a built-in implementation of the [Tree View\n Protocol](https://scalameta.org/metals/docs/editors/tree-view-protocol.html).\n-If you have the [recommended mappings](coc-mappings.vim) copied, you'll notice\n+If you have the [recommended mappings](vim.md#recommended-cocnvim-mappings) copied, you'll notice"
  },
  {
    "id" : "8c8e5c6a-7f7a-4274-8ad1-a7f910df0cfe",
    "prId" : 1934,
    "comments" : [
      {
        "id" : "ba9d8bd7-bab9-4c94-997e-768ec11a0bac",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I actually have a whole section on this further down. https://scalameta.org/metals/docs/editors/vim.html#goto-super-method\r\n\r\nI'd say remove it and replace it with this, but then my readme and this document becomes quite a bit different. I don't love having them both, but I also don't like not having a detailed readme 🤔 I'm not really sure what would be best for this.",
        "createdAt" : "2020-07-20T14:41:29Z",
        "updatedAt" : "2020-07-21T07:58:00Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "185c9727-4a75-40cd-be51-f6dcab9f2f30",
        "parentId" : "ba9d8bd7-bab9-4c94-997e-768ec11a0bac",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Haven't noticed it. I can just add it to the VS Code section then.",
        "createdAt" : "2020-07-20T15:25:58Z",
        "updatedAt" : "2020-07-21T07:58:00Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a0636226-6185-4047-bc02-c68d7c000a86",
        "parentId" : "ba9d8bd7-bab9-4c94-997e-768ec11a0bac",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Removed from vim section.",
        "createdAt" : "2020-07-20T18:14:28Z",
        "updatedAt" : "2020-07-21T07:58:00Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1f9f20c530b2152a24fddd4618793dbec859f696",
    "line" : null,
    "diffHunk" : "@@ -411,6 +411,14 @@ install [coc-json](https://github.com/neoclide/coc-json).\n ```scala mdoc:user-config:lsp-config-coc\n ```\n \n+```scala mdoc:parent-lenses:vim"
  }
]