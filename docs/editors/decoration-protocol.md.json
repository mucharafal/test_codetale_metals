[
  {
    "id" : "8337324d-bbbf-4e7b-9bfd-66410452a5d1",
    "prId" : 1041,
    "comments" : [
      {
        "id" : "ae4b9db4-9f34-4c47-a4ab-db949288d093",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "the protocol is currently very ad-hoc to support this feature (which is fine), so I expect that other features based on this protocol will need to add functionalties to it.\r\n\r\nWhat do you think about adding a version number to the protocol?",
        "createdAt" : "2019-11-04T11:39:35Z",
        "updatedAt" : "2019-11-09T20:01:12Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "96623232-9acc-420d-8457-e744662d92e6",
        "parentId" : "ae4b9db4-9f34-4c47-a4ab-db949288d093",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Sounds good, I added the version v0.1.0 and a changelog at the bottom of the document. I'm not sure we need to include the version in the actual JSON-RPC communication however ðŸ¤” ",
        "createdAt" : "2019-11-06T06:13:13Z",
        "updatedAt" : "2019-11-09T20:01:12Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a2902a65a77773398f8ac710483906215a06bcf8",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,110 @@\n+---\n+id: decoration-protocol\n+title: Decoration Protocol"
  },
  {
    "id" : "46414a7c-d918-4bbf-b718-1e6ab895e6f9",
    "prId" : 1041,
    "comments" : [
      {
        "id" : "24858d01-eba3-4a98-b3b4-2609cf5eaaf1",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "this looks incomplete, the implementation has more parameters",
        "createdAt" : "2019-11-04T11:44:45Z",
        "updatedAt" : "2019-11-09T20:01:12Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a1d44293-bce7-40e7-b01c-4558730ea72f",
        "parentId" : "24858d01-eba3-4a98-b3b4-2609cf5eaaf1",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Yes, the implementation mirrors the VS Code API but we currently only use a fraction of it. I would prefer to wait with expanding the actual protocol as we start using more parts of it. ",
        "createdAt" : "2019-11-06T06:14:35Z",
        "updatedAt" : "2019-11-09T20:01:12Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a2902a65a77773398f8ac710483906215a06bcf8",
    "line" : 51,
    "diffHunk" : "@@ -0,0 +1,110 @@\n+---\n+id: decoration-protocol\n+title: Decoration Protocol\n+---\n+\n+Metals implements a Language Server Protocol extension called the \"Decoration\n+Protocol\" to display non-editable text in the text editor.\n+\n+## Base data structures\n+\n+The Decoration Protocol has several base data structures that are mostly derived\n+from the [VS Code API](https://code.visualstudio.com/api/references/vscode-api).\n+\n+### Decoration\n+\n+A \"decoration\" represents non-editable code that is display in the text editor\n+alongside editable code. The GIF below demonstrates an example of green\n+decorations that are formatted as comments, which contain the evaluated code.\n+\n+![Example decoration](https://user-images.githubusercontent.com/1408093/68091453-bacbea00-fe77-11e9-80b9-52a9bbd6d98a.gif)\n+\n+Although decorations appear as text inside the editor, they can't be edited by\n+the user. In the GIF above, observe that the decoration can optionally include a\n+message that's displayed on mouse hover.\n+\n+## DecorationOptions\n+\n+```ts\n+export interface DecorationOptions {\n+  /**\n+   * The range position to place the decoration.\n+   * The Range data structure is defined in the Language Server Protocol.\n+   */\n+  range: Range;\n+  /**\n+   * The text to display when the mouse hovers over the decoration.\n+   * The MarkedString data structure is defined in the LanguageServerProtocol\n+   */\n+  hoverMessage?: MarkedString;\n+  /** The URI of the text document to place text decorations */\n+  renderOptions: ThemableDecorationInstanceRenderOption;\n+}\n+```\n+\n+## ThemableDecorationInstanceRenderOption\n+\n+```ts\n+export interface ThemableDecorationInstanceRenderOption {\n+  /** The decoration to display next to the given range. */\n+  after?: ThemableDecorationAttachmentRenderOptions;"
  }
]