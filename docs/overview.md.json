[
  {
    "id" : "28ff14d9-6202-41f6-8797-d258a30c6d93",
    "prId" : 226,
    "comments" : [
      {
        "id" : "f28022b3-1418-4232-bf70-afc152a1b8ee",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I think that here and below with the \"outline in the sidebar\" you kind of rely too much on a particular UI representation of this feature. It may vary from one client to other while LSP defines as\r\n\r\n> a flat list of all symbols found in a given text document\r\n\r\n(which is a bad (but simple) definition if you ask me, but still)\r\n\r\nAnyway, don't mind it, I just wanted to note this nuance.",
        "createdAt" : "2018-04-02T19:38:06Z",
        "updatedAt" : "2018-04-02T21:54:11Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "774cbf430ac6829db5d40bd97995fc3a6d38bab0",
    "line" : null,
    "diffHunk" : "@@ -67,14 +70,13 @@ architecture as [Index-While-Building][] in XCode 9.\n   * [ ] dependency -> dependency.\n * [x] Find references (`textDocument/references`). Works the same as goto\n       definition.\n-  * [x] project -> project.\n-  * [ ] project -> Scala dependency.\n-  * [ ] project -> Java dependency.\n-  * [ ] dependency -> dependency.\n+  * [x] project references\n+  * [ ] Scala dependency references\n+  * [ ] Java dependency references\n * [x] Highlight references to symbol at position\n       (`textDocument/documentHighlight`).\n-* [x] Open symbol in file (`textDocument/documentSymbol`)\n-* [x] Open symbol in workspace (`workspace/symbol`)\n+* [x] Goto symbol in file (`textDocument/documentSymbol`)"
  },
  {
    "id" : "568415f2-d4ff-4a90-9179-864207c8156a",
    "prId" : 330,
    "comments" : [
      {
        "id" : "1d0d2c55-9e2d-4b4c-8c5c-abab264eb3f7",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I think having these checkboxes isn't helpful. Pretty much everything is under exploration so they give a false sense of accomplishment.",
        "createdAt" : "2018-10-01T12:56:22Z",
        "updatedAt" : "2018-10-01T12:59:44Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ba39e1b5-c4e6-4534-a630-14ff539dd176",
        "parentId" : "1d0d2c55-9e2d-4b4c-8c5c-abab264eb3f7",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Good point, I will remove them üëç ",
        "createdAt" : "2018-10-01T12:58:35Z",
        "updatedAt" : "2018-10-01T12:59:44Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "41d6934e27bf5bb3006c8b4f39a0cf8a21ec1571",
    "line" : null,
    "diffHunk" : "@@ -3,60 +3,36 @@ id: overview\n title: Overview\n ---\n \n-This document is an overview of the Metals project. Metals is a community driven\n-project with no official funding or dedicated resources.\n+This document describes the project goals of Metals. This document does not\n+describe existing functionality of Metals but rather what user experience we\n+want Metals to have in the future.\n \n-* [**Simple installation**](#simple-installation): importing a project should be\n+- [**Simple installation**](#simple-installation): importing a project should be\n   simple and require as few steps as possible.\n-* [**Correct diagnostics**](#correct-diagnostics): the editor should not show\n-  spurious red squiggles, even at the cost of higher latency.\n-* [**Robust navigation**](#robust-navigation): goto definition should work\n+- [**Robust navigation**](#robust-navigation): goto definition should work\n   everywhere, even for Java dependencies.\n-* [**Fast completions**](#fast-completions): completions suggestions should\n-  respond in ~200ms, even at the cost of occasionally wrong results.\n-* [**Low CPU and memory usage**](#low-cpu-and-memory-usage): indexing should run\n+- [**Low CPU and memory usage**](#low-cpu-and-memory-usage): indexing should run\n   in the background and not get in your way from coding.\n-* [**Solid refactoring**](#solid-refactoring): rename, organize imports and\n-  insert type annotation should always leave the codebase in a compiling state.\n+\n+We acknowledge that simple installation and robust navigation alone is not\n+enough to make a great language server. A great language server should also\n+support correct diagnostics, fast completions and solid refactorings. However,\n+we believe navigation is an important first milestone that needs full attention\n+before working on other features.\n \n ## Simple installation\n \n The first you do with an IDE is boring but critical: import a project. The\n Language Server Protocol does not provide utilities to extract metadata from a\n-build tool (module source files, dependencies, configuration data), so we are\n-still exploring what is the best option.\n-\n-* [x] sbt-metals: plugin that provides a `metalsSetup` task to export sbt\n-    build metadata.\n-\n-* [ ] [BSP][]: LSP-inspired protocol to standardize on communication between a\n-  language server and build tool. In theory, should enable automatic\n-  importing of projects without custom build plugins or manual installation\n-  steps.\n-\n-## Correct diagnostics\n-\n-Red squiggles are one of the most basic but also difficult-to-support features\n-in an IDE. The Scala compiler was not designed for interactivity, which makes\n-fast and correct diagnostics difficult to support in the editor. We are still\n-unsure what the best model is for diagnostics, so we are still exploring what is\n-the best option.\n-\n-* [x] Scala Presentation Compiler: interactively publish squiggles as you type.\n-      Provides low latency but may get off-sync with build diagnostics.\n-  * Disabled by default. Can be enabled with configuration option\n-    `scalac.diagnostics.enabled=true`.\n-  * Requires [`metalsSetup`](#metalssetup).\n-* [x] sbt server: sbt 1.1 added LSP support so that build errors are reported\n-      directly to the editor. Metals can connect to sbt server as a client to\n-      trigger batch compilation on file save. Guarantees diagnostics are always\n-      in-sync with build diagnostics but at the cost of higher latency.\n-  * Disabled by default. Can be enabled with configuration option\n-    `sbt.enabled=true`.\n-  * Requires a running sbt 1.1 server or later.\n-* [x] Linting with [Scalafix][].\n-  * Requires [semanticdb-scalac](#semanticdb-scalac).\n-  * Supports both built-in and custom linter rules.\n+build tool (source directories, dependencies, compiler flags) so we are still\n+exploring what is the best option.\n+\n+- [x] sbt-metals: plugin that provides a `metalsSetup` task to export sbt build"
  }
]