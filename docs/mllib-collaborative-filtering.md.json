[{
  "comments": [{
    "author": {
      "login": "pwendell"
    },
    "body": "number of blacks -> number of blocks\n",
    "commit": "944e3a9194d198a7c2de7c38984ea510eb4d56c8",
    "createdAt": "2014-04-22T08:06:23Z",
    "diffHunk": "@@ -14,44 +14,43 @@ missing entries of a user-item association matrix.  MLlib currently supports\n model-based collaborative filtering, in which users and products are described\n by a small set of latent factors that can be used to predict missing entries.\n In particular, we implement the [alternating least squares\n-(ALS)](http://www2.research.att.com/~volinsky/papers/ieeecomputer.pdf)\n+(ALS)](http://dl.acm.org/citation.cfm?id=1608614)\n algorithm to learn these latent factors. The implementation in MLlib has the\n following parameters:\n \n-* *numBlocks* is the number of blacks used to parallelize computation (set to -1 to auto-configure). \n+* *numBlocks* is the number of blacks used to parallelize computation (set to -1 to auto-configure)."
  }],
  "prId": 422
}, {
  "comments": [{
    "author": {
      "login": "pwendell"
    },
    "body": "These last two points lack periods, whereas every other point has a period.\n",
    "commit": "944e3a9194d198a7c2de7c38984ea510eb4d56c8",
    "createdAt": "2014-04-22T08:06:54Z",
    "diffHunk": "@@ -14,44 +14,43 @@ missing entries of a user-item association matrix.  MLlib currently supports\n model-based collaborative filtering, in which users and products are described\n by a small set of latent factors that can be used to predict missing entries.\n In particular, we implement the [alternating least squares\n-(ALS)](http://www2.research.att.com/~volinsky/papers/ieeecomputer.pdf)\n+(ALS)](http://dl.acm.org/citation.cfm?id=1608614)\n algorithm to learn these latent factors. The implementation in MLlib has the\n following parameters:\n \n-* *numBlocks* is the number of blacks used to parallelize computation (set to -1 to auto-configure). \n+* *numBlocks* is the number of blacks used to parallelize computation (set to -1 to auto-configure).\n * *rank* is the number of latent factors in our model.\n * *iterations* is the number of iterations to run.\n * *lambda* specifies the regularization parameter in ALS.\n-* *implicitPrefs* specifies whether to use the *explicit feedback* ALS variant or one adapted for *implicit feedback* data\n-* *alpha* is a parameter applicable to the implicit feedback variant of ALS that governs the *baseline* confidence in preference observations\n+* *implicitPrefs* specifies whether to use the *explicit feedback* ALS variant or one adapted for",
    "line": 31
  }, {
    "author": {
      "login": "mengxr"
    },
    "body": "Done.\n",
    "commit": "944e3a9194d198a7c2de7c38984ea510eb4d56c8",
    "createdAt": "2014-04-22T17:58:41Z",
    "diffHunk": "@@ -14,44 +14,43 @@ missing entries of a user-item association matrix.  MLlib currently supports\n model-based collaborative filtering, in which users and products are described\n by a small set of latent factors that can be used to predict missing entries.\n In particular, we implement the [alternating least squares\n-(ALS)](http://www2.research.att.com/~volinsky/papers/ieeecomputer.pdf)\n+(ALS)](http://dl.acm.org/citation.cfm?id=1608614)\n algorithm to learn these latent factors. The implementation in MLlib has the\n following parameters:\n \n-* *numBlocks* is the number of blacks used to parallelize computation (set to -1 to auto-configure). \n+* *numBlocks* is the number of blacks used to parallelize computation (set to -1 to auto-configure).\n * *rank* is the number of latent factors in our model.\n * *iterations* is the number of iterations to run.\n * *lambda* specifies the regularization parameter in ALS.\n-* *implicitPrefs* specifies whether to use the *explicit feedback* ALS variant or one adapted for *implicit feedback* data\n-* *alpha* is a parameter applicable to the implicit feedback variant of ALS that governs the *baseline* confidence in preference observations\n+* *implicitPrefs* specifies whether to use the *explicit feedback* ALS variant or one adapted for",
    "line": 31
  }],
  "prId": 422
}]