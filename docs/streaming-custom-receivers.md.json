[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "This was OK as-is; the rest looks OK. Again, can you batch together more changes? this is a lot of little PRs, and this has been discussed several times before\n",
    "commit": "7f215fcdf4c8682e8ddceb57c25f288272f681dc",
    "createdAt": "2016-01-05T13:32:15Z",
    "diffHunk": "@@ -273,9 +273,9 @@ class CustomActor extends Actor with ActorHelper {\n And a new input stream can be created with this custom actor as\n \n {% highlight scala %}\n-// Assuming ssc is the StreamingContext\n-val lines = ssc.actorStream[String](Props(new CustomActor()), \"CustomReceiver\")\n+val ssc: StreamingContext = ...\n+val lines = ssc.actorStream[String](Props[CustomActor], \"CustomReceiver\")\n {% endhighlight %}\n \n See [ActorWordCount.scala](https://github.com/apache/spark/blob/master/examples/src/main/scala/org/apache/spark/examples/streaming/ActorWordCount.scala)\n-for an end-to-end example.\n+for a complete example."
  }, {
    "author": {
      "login": "jaceklaskowski"
    },
    "body": "It was discussed, but the changes are a result of my daily code reviews and I don't really know where I end up ahead. I'm now in Streaming so I will..._batch_...more changes next time.\n",
    "commit": "7f215fcdf4c8682e8ddceb57c25f288272f681dc",
    "createdAt": "2016-01-05T15:02:23Z",
    "diffHunk": "@@ -273,9 +273,9 @@ class CustomActor extends Actor with ActorHelper {\n And a new input stream can be created with this custom actor as\n \n {% highlight scala %}\n-// Assuming ssc is the StreamingContext\n-val lines = ssc.actorStream[String](Props(new CustomActor()), \"CustomReceiver\")\n+val ssc: StreamingContext = ...\n+val lines = ssc.actorStream[String](Props[CustomActor], \"CustomReceiver\")\n {% endhighlight %}\n \n See [ActorWordCount.scala](https://github.com/apache/spark/blob/master/examples/src/main/scala/org/apache/spark/examples/streaming/ActorWordCount.scala)\n-for an end-to-end example.\n+for a complete example."
  }],
  "prId": 10603
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "linking to current seem like a bad idea given they could have api breaking changes?\n",
    "commit": "7f215fcdf4c8682e8ddceb57c25f288272f681dc",
    "createdAt": "2016-01-07T07:11:09Z",
    "diffHunk": "@@ -257,9 +257,9 @@ The following table summarizes the characteristics of both types of receivers\n \n ## Implementing and Using a Custom Actor-based Receiver\n \n-Custom [Akka Actors](http://doc.akka.io/docs/akka/2.2.4/scala/actors.html) can also be used to\n+Custom [Akka Actors](http://doc.akka.io/docs/akka/current/scala/actors.html) can also be used to"
  }, {
    "author": {
      "login": "jaceklaskowski"
    },
    "body": "It's about actors which are the fundamental concept of Akka so it's of less worry (like RDDs in Spark), but have changed it to the Akka version Spark uses, i.e. `2.3.11`.\n",
    "commit": "7f215fcdf4c8682e8ddceb57c25f288272f681dc",
    "createdAt": "2016-01-07T07:42:48Z",
    "diffHunk": "@@ -257,9 +257,9 @@ The following table summarizes the characteristics of both types of receivers\n \n ## Implementing and Using a Custom Actor-based Receiver\n \n-Custom [Akka Actors](http://doc.akka.io/docs/akka/2.2.4/scala/actors.html) can also be used to\n+Custom [Akka Actors](http://doc.akka.io/docs/akka/current/scala/actors.html) can also be used to"
  }],
  "prId": 10603
}]