[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Hi, @dbtsai . This is a backport of #22801 without `orc.column.encoding.direct`.",
    "commit": "c9d89f4d1b40305e3d3d9d11922280d54ef0421a",
    "createdAt": "2018-10-25T19:36:35Z",
    "diffHunk": "@@ -82,6 +82,49 @@ To load a CSV file you can use:\n </div>\n </div>\n \n+The extra options are also used during write operation.\n+For example, you can control bloom filters and dictionary encodings for ORC data sources.\n+The following ORC example will create bloom filter on `favorite_color` and use dictionary encoding for `name` and `favorite_color`.\n+For Parquet, there exists `parquet.enable.dictionary`, too.\n+To find more detailed information about the extra ORC/Parquet options,\n+visit the official Apache ORC/Parquet websites.\n+\n+<div class=\"codetabs\">\n+\n+<div data-lang=\"scala\"  markdown=\"1\">\n+{% include_example manual_save_options_orc scala/org/apache/spark/examples/sql/SQLDataSourceExample.scala %}\n+</div>\n+\n+<div data-lang=\"java\"  markdown=\"1\">\n+{% include_example manual_save_options_orc java/org/apache/spark/examples/sql/JavaSQLDataSourceExample.java %}\n+</div>\n+\n+<div data-lang=\"python\"  markdown=\"1\">\n+{% include_example manual_save_options_orc python/sql/datasource.py %}\n+</div>\n+\n+<div data-lang=\"r\"  markdown=\"1\">\n+{% include_example manual_save_options_orc r/RSparkSQLExample.R %}\n+</div>\n+\n+<div data-lang=\"sql\"  markdown=\"1\">\n+\n+{% highlight sql %}\n+CREATE TABLE users_with_options (\n+  name STRING,\n+  favorite_color STRING,\n+  favorite_numbers array<integer>\n+) USING ORC\n+OPTIONS (\n+  orc.bloom.filter.columns 'favorite_color',\n+  orc.dictionary.key.threshold '1.0'\n+)\n+{% endhighlight %}",
    "line": 41
  }],
  "prId": 22839
}]