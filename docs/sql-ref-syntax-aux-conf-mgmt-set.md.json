[{
  "comments": [{
    "author": {
      "login": "dilipbiswal"
    },
    "body": "Can we remove the semi colon from the syntax ?",
    "commit": "624b1e10a2bb1d62444a13d50e2a238573418d97",
    "createdAt": "2019-09-12T06:40:09Z",
    "diffHunk": "@@ -19,4 +19,51 @@ license: |\n   limitations under the License.\n ---\n \n-**This page is under construction**\n+### Description\n+The SET command sets a property, returns the value of an existing property or returns all SQLConf properties with value and meaning.\n+\n+### Syntax\n+{% highlight sql %}\n+SET;"
  }],
  "prId": 25606
}, {
  "comments": [{
    "author": {
      "login": "dilipbiswal"
    },
    "body": "ditto",
    "commit": "624b1e10a2bb1d62444a13d50e2a238573418d97",
    "createdAt": "2019-09-12T06:40:35Z",
    "diffHunk": "@@ -19,4 +19,51 @@ license: |\n   limitations under the License.\n ---\n \n-**This page is under construction**\n+### Description\n+The SET command sets a property, returns the value of an existing property or returns all SQLConf properties with value and meaning.\n+\n+### Syntax\n+{% highlight sql %}\n+SET;\n+SET [ -v ];"
  }],
  "prId": 25606
}, {
  "comments": [{
    "author": {
      "login": "dilipbiswal"
    },
    "body": "ditto.  Add a space after equal ?",
    "commit": "624b1e10a2bb1d62444a13d50e2a238573418d97",
    "createdAt": "2019-09-12T06:40:59Z",
    "diffHunk": "@@ -19,4 +19,51 @@ license: |\n   limitations under the License.\n ---\n \n-**This page is under construction**\n+### Description\n+The SET command sets a property, returns the value of an existing property or returns all SQLConf properties with value and meaning.\n+\n+### Syntax\n+{% highlight sql %}\n+SET;\n+SET [ -v ];\n+SET property_key[ =property_value ];"
  }],
  "prId": 25606
}, {
  "comments": [{
    "author": {
      "login": "dilipbiswal"
    },
    "body": "Can we add that , \"The new value overrides any existing value for the specified property key\" ?",
    "commit": "624b1e10a2bb1d62444a13d50e2a238573418d97",
    "createdAt": "2019-09-12T06:43:15Z",
    "diffHunk": "@@ -19,4 +19,51 @@ license: |\n   limitations under the License.\n ---\n \n-**This page is under construction**\n+### Description\n+The SET command sets a property, returns the value of an existing property or returns all SQLConf properties with value and meaning.\n+\n+### Syntax\n+{% highlight sql %}\n+SET;\n+SET [ -v ];\n+SET property_key[ =property_value ];\n+{% endhighlight %}\n+\n+### Parameters\n+<dl>\n+  <dt><code><em>-v</em></code></dt>\n+  <dd>Outputs the key, value and meaning of existing SQLConf properties.</dd>\n+</dl>\n+\n+<dl>\n+  <dt><code><em>property_key</em></code></dt>\n+  <dd>Returns the value of specified property key.</dd>\n+</dl>\n+\n+<dl>\n+  <dt><code><em>property_key=property_value</em></code></dt>\n+  <dd>Sets the value of specified property key.</dd>"
  }],
  "prId": 25606
}, {
  "comments": [{
    "author": {
      "login": "dilipbiswal"
    },
    "body": "@sharangk This makes it sound like it only supports a update op ? How about the following ?\r\n```\r\nSets the value for a given property key. If an old value exists for a given property key, then it gets overridden by the new value.\r\n```",
    "commit": "624b1e10a2bb1d62444a13d50e2a238573418d97",
    "createdAt": "2019-09-17T05:23:19Z",
    "diffHunk": "@@ -42,7 +42,7 @@ SET property_key[ =property_value ];\n \n <dl>\n   <dt><code><em>property_key=property_value</em></code></dt>\n-  <dd>Sets the value of specified property key.</dd>\n+  <dd>The new value overrides any existing value for the specified property key.</dd>"
  }, {
    "author": {
      "login": "sharangk"
    },
    "body": "Done. Thanks.",
    "commit": "624b1e10a2bb1d62444a13d50e2a238573418d97",
    "createdAt": "2019-09-17T11:35:58Z",
    "diffHunk": "@@ -42,7 +42,7 @@ SET property_key[ =property_value ];\n \n <dl>\n   <dt><code><em>property_key=property_value</em></code></dt>\n-  <dd>Sets the value of specified property key.</dd>\n+  <dd>The new value overrides any existing value for the specified property key.</dd>"
  }],
  "prId": 25606
}]