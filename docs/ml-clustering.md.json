[{
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "There is no longer support for multiple parallel runs, at least for now.\n\nAlso, could you include the same links as in the text in mllib-clustering.md?\n",
    "commit": "2ed9b111b29cca09d44c0615359adb7e84617bc1",
    "createdAt": "2015-12-11T19:25:26Z",
    "diffHunk": "@@ -11,6 +11,77 @@ In this section, we introduce the pipeline API for [clustering in mllib](mllib-c\n * This will become a table of contents (this text will be scraped).\n {:toc}\n \n+## K-means\n+\n+K-means clustering with support for multiple parallel runs and a k-means++ like initialization mode "
  }],
  "prId": 10244
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "\"models\" --> \"model\"\n",
    "commit": "2ed9b111b29cca09d44c0615359adb7e84617bc1",
    "createdAt": "2015-12-11T19:25:28Z",
    "diffHunk": "@@ -11,6 +11,77 @@ In this section, we introduce the pipeline API for [clustering in mllib](mllib-c\n * This will become a table of contents (this text will be scraped).\n {:toc}\n \n+## K-means\n+\n+K-means clustering with support for multiple parallel runs and a k-means++ like initialization mode \n+(the k-means|| algorithm by Bahmani et al). When multiple concurrent runs are requested,they are \n+executed together with joint passes over the data for efficiency.\n+\n+`KMeans` is implemented as an `Estimator` and generates a `KMeansModel` as the base models."
  }],
  "prId": 10244
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "\"label\" --> \"cluster center\"\n",
    "commit": "2ed9b111b29cca09d44c0615359adb7e84617bc1",
    "createdAt": "2015-12-11T19:25:30Z",
    "diffHunk": "@@ -11,6 +11,77 @@ In this section, we introduce the pipeline API for [clustering in mllib](mllib-c\n * This will become a table of contents (this text will be scraped).\n {:toc}\n \n+## K-means\n+\n+K-means clustering with support for multiple parallel runs and a k-means++ like initialization mode \n+(the k-means|| algorithm by Bahmani et al). When multiple concurrent runs are requested,they are \n+executed together with joint passes over the data for efficiency.\n+\n+`KMeans` is implemented as an `Estimator` and generates a `KMeansModel` as the base models.\n+\n+### Input Columns\n+\n+<table class=\"table\">\n+  <thead>\n+    <tr>\n+      <th align=\"left\">Param name</th>\n+      <th align=\"left\">Type(s)</th>\n+      <th align=\"left\">Default</th>\n+      <th align=\"left\">Description</th>\n+    </tr>\n+  </thead>\n+  <tbody>\n+    <tr>\n+      <td>featuresCol</td>\n+      <td>Vector</td>\n+      <td>\"features\"</td>\n+      <td>Feature vector</td>\n+    </tr>\n+  </tbody>\n+</table>\n+\n+### Output Columns\n+\n+<table class=\"table\">\n+  <thead>\n+    <tr>\n+      <th align=\"left\">Param name</th>\n+      <th align=\"left\">Type(s)</th>\n+      <th align=\"left\">Default</th>\n+      <th align=\"left\">Description</th>\n+      <th align=\"left\">Notes</th>\n+    </tr>\n+  </thead>\n+  <tbody>\n+    <tr>\n+      <td>predictionCol</td>\n+      <td>Int</td>\n+      <td>\"prediction\"</td>\n+      <td>Predicted label</td>"
  }],
  "prId": 10244
}, {
  "comments": [{
    "author": {
      "login": "jkbradley"
    },
    "body": "Remove the unused \"Notes\" column\n",
    "commit": "2ed9b111b29cca09d44c0615359adb7e84617bc1",
    "createdAt": "2015-12-15T22:52:56Z",
    "diffHunk": "@@ -11,6 +11,79 @@ In this section, we introduce the pipeline API for [clustering in mllib](mllib-c\n * This will become a table of contents (this text will be scraped).\n {:toc}\n \n+## K-means\n+\n+[k-means](http://en.wikipedia.org/wiki/K-means_clustering) is one of the\n+most commonly used clustering algorithms that clusters the data points into a\n+predefined number of clusters. The MLlib implementation includes a parallelized\n+variant of the [k-means++](http://en.wikipedia.org/wiki/K-means%2B%2B) method\n+called [kmeans||](http://theory.stanford.edu/~sergei/papers/vldb12-kmpar.pdf).\n+\n+`KMeans` is implemented as an `Estimator` and generates a `KMeansModel` as the base model.\n+\n+### Input Columns\n+\n+<table class=\"table\">\n+  <thead>\n+    <tr>\n+      <th align=\"left\">Param name</th>\n+      <th align=\"left\">Type(s)</th>\n+      <th align=\"left\">Default</th>\n+      <th align=\"left\">Description</th>\n+    </tr>\n+  </thead>\n+  <tbody>\n+    <tr>\n+      <td>featuresCol</td>\n+      <td>Vector</td>\n+      <td>\"features\"</td>\n+      <td>Feature vector</td>\n+    </tr>\n+  </tbody>\n+</table>\n+\n+### Output Columns\n+\n+<table class=\"table\">\n+  <thead>\n+    <tr>\n+      <th align=\"left\">Param name</th>\n+      <th align=\"left\">Type(s)</th>\n+      <th align=\"left\">Default</th>\n+      <th align=\"left\">Description</th>\n+      <th align=\"left\">Notes</th>"
  }],
  "prId": 10244
}]