[{
  "comments": [{
    "author": {
      "login": "huaxingao"
    },
    "body": "nit: add ; in the end of the sql statement",
    "commit": "7637e2206f17b7939de6e3de87948173582b1ee4",
    "createdAt": "2019-09-10T05:57:10Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+---\n+layout: global\n+title: REFRESH TABLE\n+displayTitle: REFRESH TABLE\n+license: |\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+ \n+     http://www.apache.org/licenses/LICENSE-2.0\n+ \n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+---\n+\n+### Description\n+`REFRESH TABLE` statement first invalidates all the cached entries, which includes data and metadata of the given table \n+or view, then cache lazily when the table is scanned next time.\n+For Hive metastore table, the metadata is refreshed. For data source tables, the schema will not be inferred and \n+refreshed.\n+\n+### Syntax\n+{% highlight sql %}\n+REFRESH TABLE tableIdentifier\n+\n+tableIdentifier:= [db.][table_name]\n+{% endhighlight %}\n+**Note**<br>\n+* table_name is either a qualified or unqualified name that designates a table/view. If no database identifier is \n+provided, it refers to a temporary view or a table/view in the current database.\n+\n+### Examples\n+{% highlight sql %}\n+-- The cached entries of the table will be refreshed  \n+-- The table is resolved from the current database as the table name is unqualified.\n+REFRESH TABLE tbl1"
  }, {
    "author": {
      "login": "kevinyu98"
    },
    "body": "sure",
    "commit": "7637e2206f17b7939de6e3de87948173582b1ee4",
    "createdAt": "2019-09-12T18:24:09Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+---\n+layout: global\n+title: REFRESH TABLE\n+displayTitle: REFRESH TABLE\n+license: |\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+ \n+     http://www.apache.org/licenses/LICENSE-2.0\n+ \n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+---\n+\n+### Description\n+`REFRESH TABLE` statement first invalidates all the cached entries, which includes data and metadata of the given table \n+or view, then cache lazily when the table is scanned next time.\n+For Hive metastore table, the metadata is refreshed. For data source tables, the schema will not be inferred and \n+refreshed.\n+\n+### Syntax\n+{% highlight sql %}\n+REFRESH TABLE tableIdentifier\n+\n+tableIdentifier:= [db.][table_name]\n+{% endhighlight %}\n+**Note**<br>\n+* table_name is either a qualified or unqualified name that designates a table/view. If no database identifier is \n+provided, it refers to a temporary view or a table/view in the current database.\n+\n+### Examples\n+{% highlight sql %}\n+-- The cached entries of the table will be refreshed  \n+-- The table is resolved from the current database as the table name is unqualified.\n+REFRESH TABLE tbl1"
  }],
  "prId": 25549
}, {
  "comments": [{
    "author": {
      "login": "huaxingao"
    },
    "body": "ditto",
    "commit": "7637e2206f17b7939de6e3de87948173582b1ee4",
    "createdAt": "2019-09-10T05:59:14Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+---\n+layout: global\n+title: REFRESH TABLE\n+displayTitle: REFRESH TABLE\n+license: |\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+ \n+     http://www.apache.org/licenses/LICENSE-2.0\n+ \n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+---\n+\n+### Description\n+`REFRESH TABLE` statement first invalidates all the cached entries, which includes data and metadata of the given table \n+or view, then cache lazily when the table is scanned next time.\n+For Hive metastore table, the metadata is refreshed. For data source tables, the schema will not be inferred and \n+refreshed.\n+\n+### Syntax\n+{% highlight sql %}\n+REFRESH TABLE tableIdentifier\n+\n+tableIdentifier:= [db.][table_name]\n+{% endhighlight %}\n+**Note**<br>\n+* table_name is either a qualified or unqualified name that designates a table/view. If no database identifier is \n+provided, it refers to a temporary view or a table/view in the current database.\n+\n+### Examples\n+{% highlight sql %}\n+-- The cached entries of the table will be refreshed  \n+-- The table is resolved from the current database as the table name is unqualified.\n+REFRESH TABLE tbl1\n+-- The cached entries of the view will be refreshed or invalidated\n+-- The view is resolved from tempDB database, as the view name is qualified.\n+REFRESH TABLE tempDB.view1   "
  }, {
    "author": {
      "login": "kevinyu98"
    },
    "body": "ok",
    "commit": "7637e2206f17b7939de6e3de87948173582b1ee4",
    "createdAt": "2019-09-12T18:24:23Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+---\n+layout: global\n+title: REFRESH TABLE\n+displayTitle: REFRESH TABLE\n+license: |\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+ \n+     http://www.apache.org/licenses/LICENSE-2.0\n+ \n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+---\n+\n+### Description\n+`REFRESH TABLE` statement first invalidates all the cached entries, which includes data and metadata of the given table \n+or view, then cache lazily when the table is scanned next time.\n+For Hive metastore table, the metadata is refreshed. For data source tables, the schema will not be inferred and \n+refreshed.\n+\n+### Syntax\n+{% highlight sql %}\n+REFRESH TABLE tableIdentifier\n+\n+tableIdentifier:= [db.][table_name]\n+{% endhighlight %}\n+**Note**<br>\n+* table_name is either a qualified or unqualified name that designates a table/view. If no database identifier is \n+provided, it refers to a temporary view or a table/view in the current database.\n+\n+### Examples\n+{% highlight sql %}\n+-- The cached entries of the table will be refreshed  \n+-- The table is resolved from the current database as the table name is unqualified.\n+REFRESH TABLE tbl1\n+-- The cached entries of the view will be refreshed or invalidated\n+-- The view is resolved from tempDB database, as the view name is qualified.\n+REFRESH TABLE tempDB.view1   "
  }],
  "prId": 25549
}, {
  "comments": [{
    "author": {
      "login": "huaxingao"
    },
    "body": "which include?",
    "commit": "7637e2206f17b7939de6e3de87948173582b1ee4",
    "createdAt": "2019-09-10T06:06:28Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+---\n+layout: global\n+title: REFRESH TABLE\n+displayTitle: REFRESH TABLE\n+license: |\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+ \n+     http://www.apache.org/licenses/LICENSE-2.0\n+ \n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+---\n+\n+### Description\n+`REFRESH TABLE` statement first invalidates all the cached entries, which includes data and metadata of the given table "
  }, {
    "author": {
      "login": "kevinyu98"
    },
    "body": "ok",
    "commit": "7637e2206f17b7939de6e3de87948173582b1ee4",
    "createdAt": "2019-09-12T18:25:14Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+---\n+layout: global\n+title: REFRESH TABLE\n+displayTitle: REFRESH TABLE\n+license: |\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+ \n+     http://www.apache.org/licenses/LICENSE-2.0\n+ \n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+---\n+\n+### Description\n+`REFRESH TABLE` statement first invalidates all the cached entries, which includes data and metadata of the given table "
  }],
  "prId": 25549
}, {
  "comments": [{
    "author": {
      "login": "huaxingao"
    },
    "body": "then caches?",
    "commit": "7637e2206f17b7939de6e3de87948173582b1ee4",
    "createdAt": "2019-09-10T06:07:20Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+---\n+layout: global\n+title: REFRESH TABLE\n+displayTitle: REFRESH TABLE\n+license: |\n+  Licensed to the Apache Software Foundation (ASF) under one or more\n+  contributor license agreements.  See the NOTICE file distributed with\n+  this work for additional information regarding copyright ownership.\n+  The ASF licenses this file to You under the Apache License, Version 2.0\n+  (the \"License\"); you may not use this file except in compliance with\n+  the License.  You may obtain a copy of the License at\n+ \n+     http://www.apache.org/licenses/LICENSE-2.0\n+ \n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+---\n+\n+### Description\n+`REFRESH TABLE` statement first invalidates all the cached entries, which includes data and metadata of the given table \n+or view, then cache lazily when the table is scanned next time."
  }],
  "prId": 25549
}]