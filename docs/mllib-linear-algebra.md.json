[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Does this line fit into the one above?\n",
    "commit": "e298700a69316d9d32bcd1ce3157f22acc4bb585",
    "createdAt": "2014-03-18T20:46:50Z",
    "diffHunk": "@@ -59,3 +59,17 @@ val = decomposed.S.data\n \n println(\"singular values = \" + s.toArray.mkString)\n {% endhighlight %}\n+\n+\n+# Principal Component Analysis\n+\n+Computes the top k principal component coefficients for the m-by-n data matrix X.\n+Rows of X correspond to observations and columns correspond to variables.\n+The coefficient matrix is n-by-k. Each column of the return matrix contains coefficients\n+for one principal component, and the columns are in descending\n+order of component variance.\n+This function centers the data and uses the\n+singular value decomposition (SVD) algorithm."
  }, {
    "author": {
      "login": "rezazadeh"
    },
    "body": "done\n",
    "commit": "e298700a69316d9d32bcd1ce3157f22acc4bb585",
    "createdAt": "2014-03-18T23:58:58Z",
    "diffHunk": "@@ -59,3 +59,17 @@ val = decomposed.S.data\n \n println(\"singular values = \" + s.toArray.mkString)\n {% endhighlight %}\n+\n+\n+# Principal Component Analysis\n+\n+Computes the top k principal component coefficients for the m-by-n data matrix X.\n+Rows of X correspond to observations and columns correspond to variables.\n+The coefficient matrix is n-by-k. Each column of the return matrix contains coefficients\n+for one principal component, and the columns are in descending\n+order of component variance.\n+This function centers the data and uses the\n+singular value decomposition (SVD) algorithm."
  }],
  "prId": 88
}]