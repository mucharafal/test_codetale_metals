[
  {
    "id" : "4ed2e313-dab5-4e47-ac69-7c7976c0801f",
    "prId" : 256,
    "comments" : [
      {
        "id" : "298fae75-dac2-49ba-b31b-07509c2e8e67",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "s/couple of/few ?",
        "createdAt" : "2018-04-06T10:58:31Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "af2c0b54-5c79-4a1d-9164-54b688abab83",
        "parentId" : "298fae75-dac2-49ba-b31b-07509c2e8e67",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Done.",
        "createdAt" : "2018-04-06T12:55:32Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ffb45040378457f2159326840393d913cd081213",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,163 @@\n+# Integrating a new editor\n+\n+Before writing a new editor client, first check if someone else has managed to\n+integrate metals with your favorite text editor.\n+\n+* [VS Code](https://github.com/scalameta/metals/blob/master/vscode-extension/src/extension.ts),\n+  maintained in this repo\n+* [Atom](https://github.com/laughedelic/atom-ide-scala), maintained by\n+  [@laughedelic](https://github.com/laughedelic)\n+* [Emacs](https://github.com/rossabaker/lsp-scala), maintained by\n+  [@rossabaker](https://github.com/rossabaker)\n+* Others, see [#217](https://github.com/scalameta/metals/issues/217). Please\n+  open an issue or ask on [gitter](https://gitter.im/scalameta/scalameta) if you\n+  want to create a new editor client.\n+\n+To integrate metals with a new editor, a couple of things should be kept in mind"
  },
  {
    "id" : "701f7ad1-8a3d-4f6e-bfe2-b21f09f763ff",
    "prId" : 256,
    "comments" : [
      {
        "id" : "9a896a56-ef10-46c7-8cb9-8bef6ee9c508",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I would link to https://github.com/scalameta/metals/blob/master/metals/src/main/scala/scala/meta/metals/Configuration.scala for the server configuration (it's fine to also link to the vscode implemenation as an example)\r\n\r\nAlso, they're not properly \"required\", since there are defaults for everything. The client can not send any configuration and the server will work nonetheless.\r\n\r\n",
        "createdAt" : "2018-04-06T11:02:08Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4b02642e-3d49-4e54-a133-16f597676487",
        "parentId" : "9a896a56-ef10-46c7-8cb9-8bef6ee9c508",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Good idea. Updated.",
        "createdAt" : "2018-04-06T12:59:02Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ffb45040378457f2159326840393d913cd081213",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,163 @@\n+# Integrating a new editor\n+\n+Before writing a new editor client, first check if someone else has managed to\n+integrate metals with your favorite text editor.\n+\n+* [VS Code](https://github.com/scalameta/metals/blob/master/vscode-extension/src/extension.ts),\n+  maintained in this repo\n+* [Atom](https://github.com/laughedelic/atom-ide-scala), maintained by\n+  [@laughedelic](https://github.com/laughedelic)\n+* [Emacs](https://github.com/rossabaker/lsp-scala), maintained by\n+  [@rossabaker](https://github.com/rossabaker)\n+* Others, see [#217](https://github.com/scalameta/metals/issues/217). Please\n+  open an issue or ask on [gitter](https://gitter.im/scalameta/scalameta) if you\n+  want to create a new editor client.\n+\n+To integrate metals with a new editor, a couple of things should be kept in mind\n+\n+<!-- TOC depthFrom:2 depthTo:2 -->\n+\n+* [Launching the server](#launching-the-server)\n+* [Working directory](#working-directory)\n+* [File watching](#file-watching)\n+* [Configuration](#configuration)\n+* [Commands](#commands)\n+* [Code actions](#code-actions)\n+\n+<!-- /TOC -->\n+\n+## Launching the server\n+\n+The server can be launched with\n+[coursier](https://github.com/coursier/coursier/)\n+\n+[ ![Download](https://api.bintray.com/packages/scalameta/maven/metals/images/download.svg) ](https://bintray.com/scalameta/maven/metals/_latestVersion)\n+\n+```\n+coursier launch -r bintray:scalameta/maven org.scalameta:metals_2.12:SERVER_VERSION -M scala.meta.metals.Main\n+```\n+\n+`SERVER_VERSION` can either be a locally published version of the metals server\n+via `sbt metals/publishLocal` or an unsupported pre-release published\n+automatically to Bintray by our Travis CI. There are no stable or officially\n+supported releases of metals.\n+\n+The following Java options are recommended:\n+\n+* `-XX:+UseG1GC -XX:+UseStringDeduplication`: to reduce memory consumption from\n+  navigation indexes. May not be necessary in the future.\n+\n+Refer to the coursier documentation for how to build a fat jar or configure java\n+parameters.\n+\n+## Working directory\n+\n+The server needs to be started in the same directory matching the `rootUri`\n+parameter of the `initialize` request. Goto definition and other\n+SemanticDB-features will not work if the working directory does not match the\n+root directory of the build.\n+\n+NOTE. Discarding `rootUri` is not compliant with LSP, consider contributing to\n+[#216][] if you are affected by this issue.\n+\n+## File watching\n+\n+Metals delegates file watching to the editor client by listening for\n+[`workspace/didChangeWatchedFiles`][] notifications. The server expects the\n+client to send notifications for changes to files matching the following\n+patterns\n+\n+* `.metals/buildinfo/**/*.properties`: build metadata to enable goto definition\n+  for the classpath, completions with the presentation compiler and refactoring\n+  with Scalafix.\n+* `**/*.semanticdb`: artifacts produced by the semanticdb-scalac compiler plugin\n+  during batch compilation in the build. See\n+  [here](https://github.com/scalameta/scalameta/blob/master/semanticdb/semanticdb3/semanticdb3.md)\n+  to learn more about SemanticDB. These files are required for goto definition,\n+  find references, hover and Scalafix to work.\n+\n+See the VS Code plugin\n+[clientOptions](https://github.com/scalameta/metals/blob/fb166f1d81eb77ebd9c6b3ee95e65fb58a907eec/vscode-extension/src/extension.ts#L44-L54)\n+for an example of how file watching is handled in VS Code.\n+\n+The metals server scans the workspace directory for these file patterns on\n+startup regardless of file watching notifications. This means goto definition\n+and other functionality may work to begin with, but quickly degrade for longer\n+running sessions.\n+\n+NOTE. The metals server does not use `DidChangeWatchedFilesRegistrationOptions`\n+to register these particular patterns, consider contributing to [#255][] if you\n+are affected by this issue.\n+\n+## Configuration\n+\n+Metals uses\n+[`workspace/didChangeConfiguration`](https://microsoft.github.io/language-server-protocol/specification#workspace_didChangeWatchedFiles)\n+notifications to allow end-users to control behavior of the server. The editor\n+client is expected to send a `workspace/didChangeConfiguration` notification\n+containing user configuration right after the `initialized` notification.\n+\n+A full list of supported configuration options can be found in the VS Code\n+plugin\n+[package.json](https://github.com/scalameta/metals/blob/master/vscode-extension/package.json)\n+manifest. Some configuration options are required by the server while others\n+should be handled by the client."
  },
  {
    "id" : "a73e8108-e23e-4670-b717-71490dcf5a3b",
    "prId" : 256,
    "comments" : [
      {
        "id" : "ec0d346c-a68d-4144-a425-bb237d71daab",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I would phrase this paragraph differently.\r\n\r\n> Clients are also encouraged to implement this setting:\r\n\r\n> * `serverVersion: String`: allow end-users to easily configure the version of the metals. While metals is still under active development, this option is great for flexibly switching to a custom server version.\r\n\r\n> **Note**: we recommend to implement the `scalafmt.onSave: Boolean` setting only if the editor doesn't already have a more general mechanism for hanlding formatting on save. For example, thi setting is not included in the Visual Studio Code extension, becuase that particular editor has a dedicated API for it.\r\n\r\n",
        "createdAt" : "2018-04-06T11:06:34Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "06549856-e30d-420a-9c7a-67589ff79ba8",
        "parentId" : "ec0d346c-a68d-4144-a425-bb237d71daab",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Thanks for the rephrase, I like it 👍 ",
        "createdAt" : "2018-04-06T13:01:35Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ffb45040378457f2159326840393d913cd081213",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,163 @@\n+# Integrating a new editor\n+\n+Before writing a new editor client, first check if someone else has managed to\n+integrate metals with your favorite text editor.\n+\n+* [VS Code](https://github.com/scalameta/metals/blob/master/vscode-extension/src/extension.ts),\n+  maintained in this repo\n+* [Atom](https://github.com/laughedelic/atom-ide-scala), maintained by\n+  [@laughedelic](https://github.com/laughedelic)\n+* [Emacs](https://github.com/rossabaker/lsp-scala), maintained by\n+  [@rossabaker](https://github.com/rossabaker)\n+* Others, see [#217](https://github.com/scalameta/metals/issues/217). Please\n+  open an issue or ask on [gitter](https://gitter.im/scalameta/scalameta) if you\n+  want to create a new editor client.\n+\n+To integrate metals with a new editor, a couple of things should be kept in mind\n+\n+<!-- TOC depthFrom:2 depthTo:2 -->\n+\n+* [Launching the server](#launching-the-server)\n+* [Working directory](#working-directory)\n+* [File watching](#file-watching)\n+* [Configuration](#configuration)\n+* [Commands](#commands)\n+* [Code actions](#code-actions)\n+\n+<!-- /TOC -->\n+\n+## Launching the server\n+\n+The server can be launched with\n+[coursier](https://github.com/coursier/coursier/)\n+\n+[ ![Download](https://api.bintray.com/packages/scalameta/maven/metals/images/download.svg) ](https://bintray.com/scalameta/maven/metals/_latestVersion)\n+\n+```\n+coursier launch -r bintray:scalameta/maven org.scalameta:metals_2.12:SERVER_VERSION -M scala.meta.metals.Main\n+```\n+\n+`SERVER_VERSION` can either be a locally published version of the metals server\n+via `sbt metals/publishLocal` or an unsupported pre-release published\n+automatically to Bintray by our Travis CI. There are no stable or officially\n+supported releases of metals.\n+\n+The following Java options are recommended:\n+\n+* `-XX:+UseG1GC -XX:+UseStringDeduplication`: to reduce memory consumption from\n+  navigation indexes. May not be necessary in the future.\n+\n+Refer to the coursier documentation for how to build a fat jar or configure java\n+parameters.\n+\n+## Working directory\n+\n+The server needs to be started in the same directory matching the `rootUri`\n+parameter of the `initialize` request. Goto definition and other\n+SemanticDB-features will not work if the working directory does not match the\n+root directory of the build.\n+\n+NOTE. Discarding `rootUri` is not compliant with LSP, consider contributing to\n+[#216][] if you are affected by this issue.\n+\n+## File watching\n+\n+Metals delegates file watching to the editor client by listening for\n+[`workspace/didChangeWatchedFiles`][] notifications. The server expects the\n+client to send notifications for changes to files matching the following\n+patterns\n+\n+* `.metals/buildinfo/**/*.properties`: build metadata to enable goto definition\n+  for the classpath, completions with the presentation compiler and refactoring\n+  with Scalafix.\n+* `**/*.semanticdb`: artifacts produced by the semanticdb-scalac compiler plugin\n+  during batch compilation in the build. See\n+  [here](https://github.com/scalameta/scalameta/blob/master/semanticdb/semanticdb3/semanticdb3.md)\n+  to learn more about SemanticDB. These files are required for goto definition,\n+  find references, hover and Scalafix to work.\n+\n+See the VS Code plugin\n+[clientOptions](https://github.com/scalameta/metals/blob/fb166f1d81eb77ebd9c6b3ee95e65fb58a907eec/vscode-extension/src/extension.ts#L44-L54)\n+for an example of how file watching is handled in VS Code.\n+\n+The metals server scans the workspace directory for these file patterns on\n+startup regardless of file watching notifications. This means goto definition\n+and other functionality may work to begin with, but quickly degrade for longer\n+running sessions.\n+\n+NOTE. The metals server does not use `DidChangeWatchedFilesRegistrationOptions`\n+to register these particular patterns, consider contributing to [#255][] if you\n+are affected by this issue.\n+\n+## Configuration\n+\n+Metals uses\n+[`workspace/didChangeConfiguration`](https://microsoft.github.io/language-server-protocol/specification#workspace_didChangeWatchedFiles)\n+notifications to allow end-users to control behavior of the server. The editor\n+client is expected to send a `workspace/didChangeConfiguration` notification\n+containing user configuration right after the `initialized` notification.\n+\n+A full list of supported configuration options can be found in the VS Code\n+plugin\n+[package.json](https://github.com/scalameta/metals/blob/master/vscode-extension/package.json)\n+manifest. Some configuration options are required by the server while others\n+should be handled by the client.\n+\n+Server side configuration options include settings to enable\n+experimental/unstable features such as completions with the presentation\n+compiler. Observe that even if metals registers the capability for completions\n+during the `initialize` handshake, the end-user must opt-into enabling\n+completions with the configuration setting `scalac.completions.enabled=true`. If\n+completions are disabled in the configuration\n+(`scalac.completions.enabled=false`, default value), then metals responds with\n+an empty list of completion suggestions.\n+\n+Client side configuration options include\n+\n+* `serverVersion: String`: while metals is still under active development, it is\n+  recommended to allow end-users to easily configure the version of the metals\n+  server.\n+* `scalafmt.onSave: Boolean`: if true, runs scalafmt on\n+  [`textDocument/willSaveWaitUntil`][] client requests."
  },
  {
    "id" : "0e9dca51-b2e1-42c1-887f-5121e6169aa9",
    "prId" : 256,
    "comments" : [
      {
        "id" : "6cb71488-fafa-4772-b44a-49bf57df5927",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "s/The metals server/Metals ?",
        "createdAt" : "2018-04-06T11:08:36Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "605f488e-5562-4d57-9c12-a467d484f564",
        "parentId" : "6cb71488-fafa-4772-b44a-49bf57df5927",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "🔥 done",
        "createdAt" : "2018-04-06T13:01:50Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ffb45040378457f2159326840393d913cd081213",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,163 @@\n+# Integrating a new editor\n+\n+Before writing a new editor client, first check if someone else has managed to\n+integrate metals with your favorite text editor.\n+\n+* [VS Code](https://github.com/scalameta/metals/blob/master/vscode-extension/src/extension.ts),\n+  maintained in this repo\n+* [Atom](https://github.com/laughedelic/atom-ide-scala), maintained by\n+  [@laughedelic](https://github.com/laughedelic)\n+* [Emacs](https://github.com/rossabaker/lsp-scala), maintained by\n+  [@rossabaker](https://github.com/rossabaker)\n+* Others, see [#217](https://github.com/scalameta/metals/issues/217). Please\n+  open an issue or ask on [gitter](https://gitter.im/scalameta/scalameta) if you\n+  want to create a new editor client.\n+\n+To integrate metals with a new editor, a couple of things should be kept in mind\n+\n+<!-- TOC depthFrom:2 depthTo:2 -->\n+\n+* [Launching the server](#launching-the-server)\n+* [Working directory](#working-directory)\n+* [File watching](#file-watching)\n+* [Configuration](#configuration)\n+* [Commands](#commands)\n+* [Code actions](#code-actions)\n+\n+<!-- /TOC -->\n+\n+## Launching the server\n+\n+The server can be launched with\n+[coursier](https://github.com/coursier/coursier/)\n+\n+[ ![Download](https://api.bintray.com/packages/scalameta/maven/metals/images/download.svg) ](https://bintray.com/scalameta/maven/metals/_latestVersion)\n+\n+```\n+coursier launch -r bintray:scalameta/maven org.scalameta:metals_2.12:SERVER_VERSION -M scala.meta.metals.Main\n+```\n+\n+`SERVER_VERSION` can either be a locally published version of the metals server\n+via `sbt metals/publishLocal` or an unsupported pre-release published\n+automatically to Bintray by our Travis CI. There are no stable or officially\n+supported releases of metals.\n+\n+The following Java options are recommended:\n+\n+* `-XX:+UseG1GC -XX:+UseStringDeduplication`: to reduce memory consumption from\n+  navigation indexes. May not be necessary in the future.\n+\n+Refer to the coursier documentation for how to build a fat jar or configure java\n+parameters.\n+\n+## Working directory\n+\n+The server needs to be started in the same directory matching the `rootUri`\n+parameter of the `initialize` request. Goto definition and other\n+SemanticDB-features will not work if the working directory does not match the\n+root directory of the build.\n+\n+NOTE. Discarding `rootUri` is not compliant with LSP, consider contributing to\n+[#216][] if you are affected by this issue.\n+\n+## File watching\n+\n+Metals delegates file watching to the editor client by listening for\n+[`workspace/didChangeWatchedFiles`][] notifications. The server expects the\n+client to send notifications for changes to files matching the following\n+patterns\n+\n+* `.metals/buildinfo/**/*.properties`: build metadata to enable goto definition\n+  for the classpath, completions with the presentation compiler and refactoring\n+  with Scalafix.\n+* `**/*.semanticdb`: artifacts produced by the semanticdb-scalac compiler plugin\n+  during batch compilation in the build. See\n+  [here](https://github.com/scalameta/scalameta/blob/master/semanticdb/semanticdb3/semanticdb3.md)\n+  to learn more about SemanticDB. These files are required for goto definition,\n+  find references, hover and Scalafix to work.\n+\n+See the VS Code plugin\n+[clientOptions](https://github.com/scalameta/metals/blob/fb166f1d81eb77ebd9c6b3ee95e65fb58a907eec/vscode-extension/src/extension.ts#L44-L54)\n+for an example of how file watching is handled in VS Code.\n+\n+The metals server scans the workspace directory for these file patterns on\n+startup regardless of file watching notifications. This means goto definition\n+and other functionality may work to begin with, but quickly degrade for longer\n+running sessions.\n+\n+NOTE. The metals server does not use `DidChangeWatchedFilesRegistrationOptions`\n+to register these particular patterns, consider contributing to [#255][] if you\n+are affected by this issue.\n+\n+## Configuration\n+\n+Metals uses\n+[`workspace/didChangeConfiguration`](https://microsoft.github.io/language-server-protocol/specification#workspace_didChangeWatchedFiles)\n+notifications to allow end-users to control behavior of the server. The editor\n+client is expected to send a `workspace/didChangeConfiguration` notification\n+containing user configuration right after the `initialized` notification.\n+\n+A full list of supported configuration options can be found in the VS Code\n+plugin\n+[package.json](https://github.com/scalameta/metals/blob/master/vscode-extension/package.json)\n+manifest. Some configuration options are required by the server while others\n+should be handled by the client.\n+\n+Server side configuration options include settings to enable\n+experimental/unstable features such as completions with the presentation\n+compiler. Observe that even if metals registers the capability for completions\n+during the `initialize` handshake, the end-user must opt-into enabling\n+completions with the configuration setting `scalac.completions.enabled=true`. If\n+completions are disabled in the configuration\n+(`scalac.completions.enabled=false`, default value), then metals responds with\n+an empty list of completion suggestions.\n+\n+Client side configuration options include\n+\n+* `serverVersion: String`: while metals is still under active development, it is\n+  recommended to allow end-users to easily configure the version of the metals\n+  server.\n+* `scalafmt.onSave: Boolean`: if true, runs scalafmt on\n+  [`textDocument/willSaveWaitUntil`][] client requests.\n+\n+## Commands\n+\n+Metals uses [`workspace/executeCommand`][] requests to allow end-users to\n+trigger actions in the server on-demand. The full list of supported commands by\n+the server can be found in [WorkspaceCommand.scala][]. See the VS Code plugin\n+[package.json][] manifest how these commands are configured in VS Code. Observe\n+that `restartServer` must be handled client-side.\n+\n+## Code actions\n+\n+The metals server uses [`textDocument/codeAction`][] requests from the editor"
  },
  {
    "id" : "7d6e7105-fbec-4307-9b34-477ec3e86026",
    "prId" : 256,
    "comments" : [
      {
        "id" : "f00d12e7-8368-4e77-a17f-dd73e0a781e8",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "...and can be triggered with the <kbd>CMD</kbd> + <kbd>.</kbd> shortcut (on macOS)",
        "createdAt" : "2018-04-06T11:10:11Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ffb45040378457f2159326840393d913cd081213",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,163 @@\n+# Integrating a new editor\n+\n+Before writing a new editor client, first check if someone else has managed to\n+integrate metals with your favorite text editor.\n+\n+* [VS Code](https://github.com/scalameta/metals/blob/master/vscode-extension/src/extension.ts),\n+  maintained in this repo\n+* [Atom](https://github.com/laughedelic/atom-ide-scala), maintained by\n+  [@laughedelic](https://github.com/laughedelic)\n+* [Emacs](https://github.com/rossabaker/lsp-scala), maintained by\n+  [@rossabaker](https://github.com/rossabaker)\n+* Others, see [#217](https://github.com/scalameta/metals/issues/217). Please\n+  open an issue or ask on [gitter](https://gitter.im/scalameta/scalameta) if you\n+  want to create a new editor client.\n+\n+To integrate metals with a new editor, a couple of things should be kept in mind\n+\n+<!-- TOC depthFrom:2 depthTo:2 -->\n+\n+* [Launching the server](#launching-the-server)\n+* [Working directory](#working-directory)\n+* [File watching](#file-watching)\n+* [Configuration](#configuration)\n+* [Commands](#commands)\n+* [Code actions](#code-actions)\n+\n+<!-- /TOC -->\n+\n+## Launching the server\n+\n+The server can be launched with\n+[coursier](https://github.com/coursier/coursier/)\n+\n+[ ![Download](https://api.bintray.com/packages/scalameta/maven/metals/images/download.svg) ](https://bintray.com/scalameta/maven/metals/_latestVersion)\n+\n+```\n+coursier launch -r bintray:scalameta/maven org.scalameta:metals_2.12:SERVER_VERSION -M scala.meta.metals.Main\n+```\n+\n+`SERVER_VERSION` can either be a locally published version of the metals server\n+via `sbt metals/publishLocal` or an unsupported pre-release published\n+automatically to Bintray by our Travis CI. There are no stable or officially\n+supported releases of metals.\n+\n+The following Java options are recommended:\n+\n+* `-XX:+UseG1GC -XX:+UseStringDeduplication`: to reduce memory consumption from\n+  navigation indexes. May not be necessary in the future.\n+\n+Refer to the coursier documentation for how to build a fat jar or configure java\n+parameters.\n+\n+## Working directory\n+\n+The server needs to be started in the same directory matching the `rootUri`\n+parameter of the `initialize` request. Goto definition and other\n+SemanticDB-features will not work if the working directory does not match the\n+root directory of the build.\n+\n+NOTE. Discarding `rootUri` is not compliant with LSP, consider contributing to\n+[#216][] if you are affected by this issue.\n+\n+## File watching\n+\n+Metals delegates file watching to the editor client by listening for\n+[`workspace/didChangeWatchedFiles`][] notifications. The server expects the\n+client to send notifications for changes to files matching the following\n+patterns\n+\n+* `.metals/buildinfo/**/*.properties`: build metadata to enable goto definition\n+  for the classpath, completions with the presentation compiler and refactoring\n+  with Scalafix.\n+* `**/*.semanticdb`: artifacts produced by the semanticdb-scalac compiler plugin\n+  during batch compilation in the build. See\n+  [here](https://github.com/scalameta/scalameta/blob/master/semanticdb/semanticdb3/semanticdb3.md)\n+  to learn more about SemanticDB. These files are required for goto definition,\n+  find references, hover and Scalafix to work.\n+\n+See the VS Code plugin\n+[clientOptions](https://github.com/scalameta/metals/blob/fb166f1d81eb77ebd9c6b3ee95e65fb58a907eec/vscode-extension/src/extension.ts#L44-L54)\n+for an example of how file watching is handled in VS Code.\n+\n+The metals server scans the workspace directory for these file patterns on\n+startup regardless of file watching notifications. This means goto definition\n+and other functionality may work to begin with, but quickly degrade for longer\n+running sessions.\n+\n+NOTE. The metals server does not use `DidChangeWatchedFilesRegistrationOptions`\n+to register these particular patterns, consider contributing to [#255][] if you\n+are affected by this issue.\n+\n+## Configuration\n+\n+Metals uses\n+[`workspace/didChangeConfiguration`](https://microsoft.github.io/language-server-protocol/specification#workspace_didChangeWatchedFiles)\n+notifications to allow end-users to control behavior of the server. The editor\n+client is expected to send a `workspace/didChangeConfiguration` notification\n+containing user configuration right after the `initialized` notification.\n+\n+A full list of supported configuration options can be found in the VS Code\n+plugin\n+[package.json](https://github.com/scalameta/metals/blob/master/vscode-extension/package.json)\n+manifest. Some configuration options are required by the server while others\n+should be handled by the client.\n+\n+Server side configuration options include settings to enable\n+experimental/unstable features such as completions with the presentation\n+compiler. Observe that even if metals registers the capability for completions\n+during the `initialize` handshake, the end-user must opt-into enabling\n+completions with the configuration setting `scalac.completions.enabled=true`. If\n+completions are disabled in the configuration\n+(`scalac.completions.enabled=false`, default value), then metals responds with\n+an empty list of completion suggestions.\n+\n+Client side configuration options include\n+\n+* `serverVersion: String`: while metals is still under active development, it is\n+  recommended to allow end-users to easily configure the version of the metals\n+  server.\n+* `scalafmt.onSave: Boolean`: if true, runs scalafmt on\n+  [`textDocument/willSaveWaitUntil`][] client requests.\n+\n+## Commands\n+\n+Metals uses [`workspace/executeCommand`][] requests to allow end-users to\n+trigger actions in the server on-demand. The full list of supported commands by\n+the server can be found in [WorkspaceCommand.scala][]. See the VS Code plugin\n+[package.json][] manifest how these commands are configured in VS Code. Observe\n+that `restartServer` must be handled client-side.\n+\n+## Code actions\n+\n+The metals server uses [`textDocument/codeAction`][] requests from the editor\n+client to provide passive refactoring hints with scalafix. Currently, only the\n+\"removed unused import\" refactoring is supported but more refactorings may be\n+added in the future.\n+\n+<img src=\"img/code-actions.png\" align=\"right\" width=\"150px\" style=\"padding-left: 20px\"/>\n+\n+The sequence diagram for refactoring hints is quite involved.\n+\n+1.  Server publishes warning diagnostics about \"Unused import\"\n+2.  Client sends a code action request with the \"Unused import\" warning as part\n+    of `context.diagnostics`. Server responds with instructions to execute the\n+    `scalafixUnusedImport` command.\n+3.  User triggers the `scalafixUnusedImports` command on-demand.\n+4.  Server sends request to apply a set of text edits. Client responds if edit\n+    was successfully applied or not.\n+5.  Server responds to `workspace/executeCommand` request.\n+\n+In VS Code, code actions are suggested to the user via light bulbs when hovering\n+above the \"Unused import\" warnings."
  },
  {
    "id" : "55cb3e1b-bc13-4dff-89a7-61fafcc064e7",
    "prId" : 256,
    "comments" : [
      {
        "id" : "d2fcc82c-f5d5-49c1-ad32-0f8ce2c85e6c",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "just curious, what is this meta comment for?",
        "createdAt" : "2018-04-06T11:10:32Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cfdd44a7-c5d8-45c6-ab8a-bc55ee8c1078",
        "parentId" : "d2fcc82c-f5d5-49c1-ad32-0f8ce2c85e6c",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "The TOC is automatically generated for me on file save by https://github.com/AlanWalk/Markdown-TOC",
        "createdAt" : "2018-04-06T12:56:04Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1b9c4b59-8fee-46ab-b7ba-eb48b3bf1e20",
        "parentId" : "d2fcc82c-f5d5-49c1-ad32-0f8ce2c85e6c",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "ahh, sweet.",
        "createdAt" : "2018-04-06T13:11:31Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ffb45040378457f2159326840393d913cd081213",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,163 @@\n+# Integrating a new editor\n+\n+Before writing a new editor client, first check if someone else has managed to\n+integrate metals with your favorite text editor.\n+\n+* [VS Code](https://github.com/scalameta/metals/blob/master/vscode-extension/src/extension.ts),\n+  maintained in this repo\n+* [Atom](https://github.com/laughedelic/atom-ide-scala), maintained by\n+  [@laughedelic](https://github.com/laughedelic)\n+* [Emacs](https://github.com/rossabaker/lsp-scala), maintained by\n+  [@rossabaker](https://github.com/rossabaker)\n+* Others, see [#217](https://github.com/scalameta/metals/issues/217). Please\n+  open an issue or ask on [gitter](https://gitter.im/scalameta/scalameta) if you\n+  want to create a new editor client.\n+\n+To integrate metals with a new editor, a couple of things should be kept in mind\n+\n+<!-- TOC depthFrom:2 depthTo:2 -->"
  },
  {
    "id" : "c3642a72-5b83-4fa7-a5da-be7fc75af5ce",
    "prId" : 256,
    "comments" : [
      {
        "id" : "73831cbb-a4d1-4572-93e3-27481751cdb4",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Since this is an \"official\" list, s/VS Code/Visual Studio Code ? It's fine to abbreviate in the rest of the document",
        "createdAt" : "2018-04-06T11:11:10Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2a26c1fd-8098-43fe-ab11-b4bdba419b0e",
        "parentId" : "73831cbb-a4d1-4572-93e3-27481751cdb4",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Done.",
        "createdAt" : "2018-04-06T12:54:31Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ffb45040378457f2159326840393d913cd081213",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,163 @@\n+# Integrating a new editor\n+\n+Before writing a new editor client, first check if someone else has managed to\n+integrate metals with your favorite text editor.\n+\n+* [VS Code](https://github.com/scalameta/metals/blob/master/vscode-extension/src/extension.ts),"
  },
  {
    "id" : "0f432e61-a083-49ea-a5ad-47261dd82ced",
    "prId" : 256,
    "comments" : [
      {
        "id" : "c6615bac-ade5-4a56-9daa-d5d1198b6df2",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Did you ever manage to create a dedicated gitter channel `scalameta/metals`? I find the `scalameta/scalameta` channel a bit noisy to follow some days.",
        "createdAt" : "2018-04-06T11:11:57Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6e945475-026d-4304-acd3-937c98557b3e",
        "parentId" : "c6615bac-ade5-4a56-9daa-d5d1198b6df2",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I finally managed to create a channel! 🎉 it wasn't easy, had to delete my gitter account, revoke scalameta org access, and redo everything from scratch + fiddle a bit with admin settings in scalameta. Behold https://gitter.im/scalameta/metals",
        "createdAt" : "2018-04-06T12:55:26Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b6897451-52f6-494b-b18c-75005291e086",
        "parentId" : "c6615bac-ade5-4a56-9daa-d5d1198b6df2",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "seriously. 😮 ",
        "createdAt" : "2018-04-06T13:12:33Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ffb45040378457f2159326840393d913cd081213",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,163 @@\n+# Integrating a new editor\n+\n+Before writing a new editor client, first check if someone else has managed to\n+integrate metals with your favorite text editor.\n+\n+* [VS Code](https://github.com/scalameta/metals/blob/master/vscode-extension/src/extension.ts),\n+  maintained in this repo\n+* [Atom](https://github.com/laughedelic/atom-ide-scala), maintained by\n+  [@laughedelic](https://github.com/laughedelic)\n+* [Emacs](https://github.com/rossabaker/lsp-scala), maintained by\n+  [@rossabaker](https://github.com/rossabaker)\n+* Others, see [#217](https://github.com/scalameta/metals/issues/217). Please\n+  open an issue or ask on [gitter](https://gitter.im/scalameta/scalameta) if you"
  },
  {
    "id" : "8eb3b79d-66e9-49aa-9e85-cbef82689235",
    "prId" : 256,
    "comments" : [
      {
        "id" : "856d3429-d3aa-45de-9fa7-4f389965ba4f",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "typos: thi**s**, bec**au**se",
        "createdAt" : "2018-04-06T13:14:26Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3f7d4517-bbc3-4b49-9e71-ac286d8007f2",
        "parentId" : "856d3429-d3aa-45de-9fa7-4f389965ba4f",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Woops, that's my typo, sorry @olafurpg 😅 ",
        "createdAt" : "2018-04-06T13:17:17Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ca1fc7d2-f727-4801-a021-b43eac24fb08",
        "parentId" : "856d3429-d3aa-45de-9fa7-4f389965ba4f",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "In general I think this advice is kind of ahead of time. Excluding this option was a very VSCode-specific thing, it's not only about having a more general option, but also about being able to enable it per-language. See discussion in https://github.com/scalameta/metals/pull/235",
        "createdAt" : "2018-04-06T13:18:14Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c84d7d20-b002-42f5-99c3-19912c5eac76",
        "parentId" : "856d3429-d3aa-45de-9fa7-4f389965ba4f",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Right. I don't know the status of the other editors, to be honest. If you feel VSCode is very special in this regard, we can remove it.",
        "createdAt" : "2018-04-06T13:20:42Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d0030d67-ac43-42fb-a633-8cf3ed85c70b",
        "parentId" : "856d3429-d3aa-45de-9fa7-4f389965ba4f",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Copy-pasted blindly, fixed typos.",
        "createdAt" : "2018-04-06T13:25:20Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "147b6eb7-6a56-4a02-899d-93a579d6af0c",
        "parentId" : "856d3429-d3aa-45de-9fa7-4f389965ba4f",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "I suggest to put it a bit differently: \"note that this setting may overlap with your existing editor functionality\" and probably link to #235? ",
        "createdAt" : "2018-04-06T13:26:07Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ffb45040378457f2159326840393d913cd081213",
    "line" : null,
    "diffHunk" : "@@ -112,13 +113,16 @@ completions are disabled in the configuration\n (`scalac.completions.enabled=false`, default value), then metals responds with\n an empty list of completion suggestions.\n \n-Client side configuration options include\n+Clients are also encouraged to implement this setting:\n \n * `serverVersion: String`: while metals is still under active development, it is\n   recommended to allow end-users to easily configure the version of the metals\n   server.\n-* `scalafmt.onSave: Boolean`: if true, runs scalafmt on\n-  [`textDocument/willSaveWaitUntil`][] client requests.\n+\n+Note: we recommend to implement the scalafmt.onSave: Boolean setting only if the\n+editor doesn't already have a more general mechanism for hanlding formatting on\n+save. For example, thi setting is not included in the Visual Studio Code\n+extension, becuase that particular editor has a dedicated API for it."
  },
  {
    "id" : "4c60c49a-2590-4e5b-b019-85ad0487c1fa",
    "prId" : 256,
    "comments" : [
      {
        "id" : "b1fc60ff-2ab9-49e9-8b1b-bd156fe7213b",
        "parentId" : null,
        "author" : {
          "login" : "rossabaker",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/142698?u=1217004f83c6cdee894e9b91f97f9880a9662d68&v=4"
        },
        "body" : "This link is broken.",
        "createdAt" : "2018-04-06T13:22:16Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "rossabaker",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/142698?u=1217004f83c6cdee894e9b91f97f9880a9662d68&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cfafdb6a-b342-4647-b2b4-e49803c95971",
        "parentId" : "b1fc60ff-2ab9-49e9-8b1b-bd156fe7213b",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Good catch, added link at the bottom.",
        "createdAt" : "2018-04-06T13:26:46Z",
        "updatedAt" : "2018-04-06T13:46:43Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ffb45040378457f2159326840393d913cd081213",
    "line" : 101,
    "diffHunk" : "@@ -0,0 +1,168 @@\n+# Integrating a new editor\n+\n+Before writing a new editor client, first check if someone else has managed to\n+integrate metals with your favorite text editor.\n+\n+* [Visual Studio Code](https://github.com/scalameta/metals/blob/master/vscode-extension/src/extension.ts),\n+  maintained in this repo\n+* [Atom](https://github.com/laughedelic/atom-ide-scala), maintained by\n+  [@laughedelic](https://github.com/laughedelic)\n+* [Emacs](https://github.com/rossabaker/lsp-scala), maintained by\n+  [@rossabaker](https://github.com/rossabaker)\n+* Others, see [#217](https://github.com/scalameta/metals/issues/217). Please\n+  open an issue or ask on [gitter](https://gitter.im/scalameta/metals) if you\n+  want to create a new editor client.\n+\n+To integrate metals with a new editor, a few things should be kept in mind\n+\n+<!-- TOC depthFrom:2 depthTo:2 -->\n+\n+* [Launching the server](#launching-the-server)\n+* [Working directory](#working-directory)\n+* [File watching](#file-watching)\n+* [Configuration](#configuration)\n+* [Commands](#commands)\n+* [Code actions](#code-actions)\n+\n+<!-- /TOC -->\n+\n+## Launching the server\n+\n+The server can be launched with\n+[coursier](https://github.com/coursier/coursier/)\n+\n+[ ![Download](https://api.bintray.com/packages/scalameta/maven/metals/images/download.svg) ](https://bintray.com/scalameta/maven/metals/_latestVersion)\n+\n+```\n+coursier launch -r bintray:scalameta/maven org.scalameta:metals_2.12:SERVER_VERSION -M scala.meta.metals.Main\n+```\n+\n+`SERVER_VERSION` can either be a locally published version of the metals server\n+via `sbt metals/publishLocal` or an unsupported pre-release published\n+automatically to Bintray by our Travis CI. There are no stable or officially\n+supported releases of metals.\n+\n+The following Java options are recommended:\n+\n+* `-XX:+UseG1GC -XX:+UseStringDeduplication`: to reduce memory consumption from\n+  navigation indexes. May not be necessary in the future.\n+\n+Refer to the coursier documentation for how to build a fat jar or configure java\n+parameters.\n+\n+## Working directory\n+\n+The server needs to be started in the same directory matching the `rootUri`\n+parameter of the `initialize` request. Goto definition and other\n+SemanticDB-features will not work if the working directory does not match the\n+root directory of the build.\n+\n+NOTE. Discarding `rootUri` is not compliant with LSP, consider contributing to\n+[#216][] if you are affected by this issue.\n+\n+## File watching\n+\n+Metals delegates file watching to the editor client by listening for\n+[`workspace/didChangeWatchedFiles`][] notifications. The server expects the\n+client to send notifications for changes to files matching the following\n+patterns\n+\n+* `.metals/buildinfo/**/*.properties`: build metadata to enable goto definition\n+  for the classpath, completions with the presentation compiler and refactoring\n+  with Scalafix.\n+* `**/*.semanticdb`: artifacts produced by the semanticdb-scalac compiler plugin\n+  during batch compilation in the build. See\n+  [here](https://github.com/scalameta/scalameta/blob/master/semanticdb/semanticdb3/semanticdb3.md)\n+  to learn more about SemanticDB. These files are required for goto definition,\n+  find references, hover and Scalafix to work.\n+\n+See the VS Code plugin\n+[clientOptions](https://github.com/scalameta/metals/blob/fb166f1d81eb77ebd9c6b3ee95e65fb58a907eec/vscode-extension/src/extension.ts#L44-L54)\n+for an example of how file watching is handled in VS Code.\n+\n+The metals server scans the workspace directory for these file patterns on\n+startup regardless of file watching notifications. This means goto definition\n+and other functionality may work to begin with, but quickly degrade for longer\n+running sessions.\n+\n+NOTE. The metals server does not use `DidChangeWatchedFilesRegistrationOptions`\n+to register these particular patterns, consider contributing to [#255][] if you\n+are affected by this issue.\n+\n+## Configuration\n+\n+Metals uses\n+[`workspace/didChangeConfiguration`](https://microsoft.github.io/language-server-protocol/specification#workspace_didChangeWatchedFiles)\n+notifications to allow end-users to control behavior of the server. The editor\n+client is expected to send a `workspace/didChangeConfiguration` notification\n+containing user configuration right after the `initialized` notification.\n+\n+A full list of server configuration options can be found in\n+[Configuration.scala][]. All configuration options have default values. An"
  },
  {
    "id" : "cab7c9b2-6dfd-41e4-81e3-b011ef5d6b91",
    "prId" : 256,
    "comments" : [
      {
        "id" : "028ed581-14c8-4c97-9fbd-f2843eb3471e",
        "parentId" : null,
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "❤️ ",
        "createdAt" : "2018-04-06T13:49:03Z",
        "updatedAt" : "2018-04-06T13:49:11Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ea643804-6904-4e07-a164-c7deb91f6beb",
        "parentId" : "028ed581-14c8-4c97-9fbd-f2843eb3471e",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "perfect 👍 ",
        "createdAt" : "2018-04-06T13:58:35Z",
        "updatedAt" : "2018-04-06T13:58:35Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ffb45040378457f2159326840393d913cd081213",
    "line" : 126,
    "diffHunk" : "@@ -119,10 +119,11 @@ Clients are also encouraged to implement this setting:\n   recommended to allow end-users to easily configure the version of the metals\n   server.\n \n-Note: we recommend to implement the `scalafmt.onSave: Boolean` setting only if\n-the editor does not already have a more general mechanism for handling\n-formatting on save. For example, this setting is not included in the VS Code\n-extension because that particular editor has a dedicated API for it.\n+Note: the `scalafmt.onSave: Boolean` setting may overlap with existing\n+functionality of your editor. For example, in VS Code it's possible to configure\n+`\"editor.formatOnSave\": true` to trigger a `textDocument/formatting` request on\n+file save and for that reason the VS Code metals plugin does not support\n+`scalafmt.onSave`."
  },
  {
    "id" : "76ed8d06-b657-4cce-b888-9f6901209bb6",
    "prId" : 294,
    "comments" : [
      {
        "id" : "38fb56d3-ee8c-4ace-a366-b382091695de",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "tut:passthrough 🙏 it's so good\r\n\r\nAs a general recommendation, I think it's best to keep the code as much as possible in `*.scala` files and call from here. In this case we could implement this body in Configuration.scala to minimize the code in this markdown file. Alternatively, a `object Site { def defaults: String = ... }` that we could call with `Site.default`",
        "createdAt" : "2018-04-26T00:37:04Z",
        "updatedAt" : "2018-05-08T16:31:25Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "c40a1413bb611d9c7cbe341adbcd54306b22398b",
    "line" : null,
    "diffHunk" : "@@ -101,12 +104,24 @@ client is expected to send a `workspace/didChangeConfiguration` notification\n containing user configuration right after the `initialized` notification.\n \n A full list of server configuration options can be found in\n-[Configuration.scala][]. All configuration options have default values. An\n+[Configuration.scala][]. An\n example of how the configuration options are used from the VS Code plugin can be\n seen in the\n [package.json](https://github.com/scalameta/metals/blob/master/vscode-extension/package.json)\n manifest.\n \n+Here are the default values for all the options:\n+\n+```tut:passthrough\n+{\n+  import scala.meta.metals.Configuration\n+  import io.circe.syntax._\n+  println(\"```json\")\n+  println(Configuration().asJson.spaces2)"
  }
]