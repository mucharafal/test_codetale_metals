[{
  "comments": [{
    "author": {
      "login": "pwendell"
    },
    "body": "\"this must match\"\n",
    "commit": "ef3ddae3f9d814c8c7bcf1e02c49d71e5e9aa018",
    "createdAt": "2014-11-05T22:06:24Z",
    "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.sasl;\n+\n+import java.lang.Override;\n+import java.nio.ByteBuffer;\n+import java.nio.charset.Charset;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import org.apache.spark.network.sasl.SecretKeyHolder;\n+\n+/**\n+ * A class that manages shuffle secret used by the external shuffle service.\n+ */\n+public class ShuffleSecretManager implements SecretKeyHolder {\n+  private final Logger logger = LoggerFactory.getLogger(ShuffleSecretManager.class);\n+  private final ConcurrentHashMap<String, String> shuffleSecretMap;\n+\n+  private static final Charset UTF8_CHARSET = Charset.forName(\"UTF-8\");\n+\n+  // Spark user used for authenticating SASL connections\n+  // Note that this should match the value in org.apache.spark.SecurityManager"
  }],
  "prId": 3082
}]