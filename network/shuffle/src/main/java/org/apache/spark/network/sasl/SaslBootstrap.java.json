[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "mark override\n",
    "commit": "3481718baf66f4c02568f08d7011af19a2c47f4b",
    "createdAt": "2014-11-04T08:31:40Z",
    "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.sasl;\n+\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.Unpooled;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import org.apache.spark.network.client.TransportClient;\n+import org.apache.spark.network.client.TransportClientBootstrap;\n+import org.apache.spark.network.util.TransportConf;\n+\n+/**\n+ * Bootstraps a {@link TransportClient} by performing SASL authentication on the connection. The\n+ * server should be setup with a {@link SaslRpcHandler} with matching keys for the given appId.\n+ */\n+public class SaslBootstrap implements TransportClientBootstrap {\n+  private final Logger logger = LoggerFactory.getLogger(SaslBootstrap.class);\n+\n+  private final TransportConf conf;\n+  private final String appId;\n+  private final SecretKeyHolder secretKeyHolder;\n+\n+  public SaslBootstrap(TransportConf conf, String appId, SecretKeyHolder secretKeyHolder) {\n+    this.conf = conf;\n+    this.appId = appId;\n+    this.secretKeyHolder = secretKeyHolder;\n+  }\n+\n+  /**\n+   * Performs SASL authentication by sending a token, and then proceeding with the SASL\n+   * challenge-response tokens until we either successfully authenticate or throw an exception\n+   * due to mismatch.\n+   */\n+  public void doBootstrap(TransportClient client) {"
  }],
  "prId": 3087
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "SaslClientBootstrap \n",
    "commit": "3481718baf66f4c02568f08d7011af19a2c47f4b",
    "createdAt": "2014-11-04T08:34:41Z",
    "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.sasl;\n+\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.Unpooled;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import org.apache.spark.network.client.TransportClient;\n+import org.apache.spark.network.client.TransportClientBootstrap;\n+import org.apache.spark.network.util.TransportConf;\n+\n+/**\n+ * Bootstraps a {@link TransportClient} by performing SASL authentication on the connection. The\n+ * server should be setup with a {@link SaslRpcHandler} with matching keys for the given appId.\n+ */\n+public class SaslBootstrap implements TransportClientBootstrap {"
  }],
  "prId": 3087
}]