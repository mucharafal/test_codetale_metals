[{
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "this is the part that's the most worrying since it touches core stuff. Can you run some end-to-end tests of Spark standalone mode with external shuffle service to ensure that everything continues to work as expected?\n",
    "commit": "3a9914b238d7059982c44359223b7aea2d743107",
    "createdAt": "2016-02-22T19:03:09Z",
    "diffHunk": "@@ -40,7 +41,8 @@\n \n   /** Preceding every serialized message is its type, which allows us to deserialize it. */\n   public static enum Type {\n-    OPEN_BLOCKS(0), UPLOAD_BLOCK(1), REGISTER_EXECUTOR(2), STREAM_HANDLE(3), REGISTER_DRIVER(4);\n+    OPEN_BLOCKS(0), UPLOAD_BLOCK(1), REGISTER_EXECUTOR(2), STREAM_HANDLE(3), REGISTER_DRIVER(4),\n+    HEARTBEAT(5);"
  }, {
    "author": {
      "login": "dragos"
    },
    "body": "I'm doing that now and report back.\n",
    "commit": "3a9914b238d7059982c44359223b7aea2d743107",
    "createdAt": "2016-02-23T15:29:45Z",
    "diffHunk": "@@ -40,7 +41,8 @@\n \n   /** Preceding every serialized message is its type, which allows us to deserialize it. */\n   public static enum Type {\n-    OPEN_BLOCKS(0), UPLOAD_BLOCK(1), REGISTER_EXECUTOR(2), STREAM_HANDLE(3), REGISTER_DRIVER(4);\n+    OPEN_BLOCKS(0), UPLOAD_BLOCK(1), REGISTER_EXECUTOR(2), STREAM_HANDLE(3), REGISTER_DRIVER(4),\n+    HEARTBEAT(5);"
  }, {
    "author": {
      "login": "bbossy"
    },
    "body": "I haven't done extensive testing, but I started a standalone master and some slaves on a test cluster. Started a spark-shell, parallelized some Ints, cached them using `persist(StorageLevel.DISK_ONLY)` and did a `sum` on that. Then I let it idle for a bit, and later performed another transformation on the cached rdd. That worked fine.\n\nI had this in the log of one of the workers:\n\n```\n16/02/23 13:21:58 INFO deploy.ExternalShuffleService: Starting shuffle service on port 7338 with useSasl = false\n...\n16/02/23 13:21:59 INFO shuffle.ExternalShuffleBlockResolver: Registered executor AppExecId{appId=app-20160223131906-0002, execId=0} with ExecutorShuffleInfo{localDirs=[/tmp/spark-117baa2b-aa4f-4c81-9724-f41d96182357/executor-0684a8d3-0996-4d96-8031-b41abd958df4/blockmgr-aa778ad3-43e7-494e-b527-3b1eaf41fdb5], subDirsPerLocalDir=64, shuffleManager=sort}\n16/02/23 13:37:40 INFO worker.Worker: Asked to kill executor app-20160223131906-0002/0\n16/02/23 13:37:40 INFO worker.ExecutorRunner: Runner thread for executor app-20160223131906-0002/0 interrupted\n16/02/23 13:37:40 INFO worker.ExecutorRunner: Killing process!\n16/02/23 13:37:40 INFO worker.Worker: Executor app-20160223131906-0002/0 finished with state KILLED exitStatus 137\n16/02/23 13:37:40 INFO worker.Worker: Cleaning up local directories for application app-20160223131906-0002\n16/02/23 13:37:40 INFO shuffle.ExternalShuffleBlockResolver: Application app-20160223131906-0002 removed, cleanupLocalDirs = true\n16/02/23 13:37:40 INFO shuffle.ExternalShuffleBlockResolver: Cleaning up executor AppExecId{appId=app-20160223131906-0002, execId=0}'s 1 local dirs\n```\n\nAside: Is `sbin/start-shuffle-service.sh` still used somewhere? It seems that in standalone the shuffle service gets started by the worker.\n\nWhat do you have in mind for a serious test?\n",
    "commit": "3a9914b238d7059982c44359223b7aea2d743107",
    "createdAt": "2016-02-23T15:31:36Z",
    "diffHunk": "@@ -40,7 +41,8 @@\n \n   /** Preceding every serialized message is its type, which allows us to deserialize it. */\n   public static enum Type {\n-    OPEN_BLOCKS(0), UPLOAD_BLOCK(1), REGISTER_EXECUTOR(2), STREAM_HANDLE(3), REGISTER_DRIVER(4);\n+    OPEN_BLOCKS(0), UPLOAD_BLOCK(1), REGISTER_EXECUTOR(2), STREAM_HANDLE(3), REGISTER_DRIVER(4),\n+    HEARTBEAT(5);"
  }, {
    "author": {
      "login": "dragos"
    },
    "body": "Thanks @bbossy for testing this. the `sbin/start-shuffle-service` wasn't removed because we didn't want to break people's startup scripts. The Mesos one was added later, with the driver connection, etc. Something to be removed in 2.0!\n",
    "commit": "3a9914b238d7059982c44359223b7aea2d743107",
    "createdAt": "2016-02-23T16:12:14Z",
    "diffHunk": "@@ -40,7 +41,8 @@\n \n   /** Preceding every serialized message is its type, which allows us to deserialize it. */\n   public static enum Type {\n-    OPEN_BLOCKS(0), UPLOAD_BLOCK(1), REGISTER_EXECUTOR(2), STREAM_HANDLE(3), REGISTER_DRIVER(4);\n+    OPEN_BLOCKS(0), UPLOAD_BLOCK(1), REGISTER_EXECUTOR(2), STREAM_HANDLE(3), REGISTER_DRIVER(4),\n+    HEARTBEAT(5);"
  }],
  "prId": 11272
}]