[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "you want epoll for default?\n",
    "commit": "cadfd28f116f0dbca11e580a23caf82060bcf922",
    "createdAt": "2014-10-24T21:12:15Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.util;\n+\n+/**\n+ * A central location that tracks all the settings we expose to users.\n+ */\n+public class SluiceConfig {\n+  private final ConfigProvider conf;\n+\n+  public SluiceConfig(ConfigProvider conf) {\n+    this.conf = conf;\n+  }\n+\n+  /** Port the server listens on. Default to a random port. */\n+  public int serverPort() { return conf.getInt(\"spark.shuffle.io.port\", 0); }\n+\n+  /** IO mode: nio, epoll, or auto (try epoll first and then nio). */\n+  public String ioMode() { return conf.get(\"spark.shuffle.io.mode\", \"NIO\").toUpperCase(); }"
  }, {
    "author": {
      "login": "aarondav"
    },
    "body": "nah, let's do nio since it's more stable. Actually let me get rid of auto for this same reason.\n",
    "commit": "cadfd28f116f0dbca11e580a23caf82060bcf922",
    "createdAt": "2014-10-27T05:24:35Z",
    "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.util;\n+\n+/**\n+ * A central location that tracks all the settings we expose to users.\n+ */\n+public class SluiceConfig {\n+  private final ConfigProvider conf;\n+\n+  public SluiceConfig(ConfigProvider conf) {\n+    this.conf = conf;\n+  }\n+\n+  /** Port the server listens on. Default to a random port. */\n+  public int serverPort() { return conf.getInt(\"spark.shuffle.io.port\", 0); }\n+\n+  /** IO mode: nio, epoll, or auto (try epoll first and then nio). */\n+  public String ioMode() { return conf.get(\"spark.shuffle.io.mode\", \"NIO\").toUpperCase(); }"
  }],
  "prId": 2753
}]