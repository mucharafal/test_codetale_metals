[{
  "comments": [{
    "author": {
      "login": "aarondav"
    },
    "body": "nit: I think we can remove this comment, the new code is straightforward enough.\n",
    "commit": "cf2c086cd7dcdb0f047dd1eca73e1708d812f25a",
    "createdAt": "2015-05-01T15:55:17Z",
    "diffHunk": "@@ -82,10 +75,8 @@ public void exceptionCaught(Throwable cause) {\n \n   @Override\n   public void channelUnregistered() {\n-    // Inform the StreamManager that these streams will no longer be read from.\n-    for (long streamId : streamIds) {\n-      streamManager.connectionTerminated(streamId);\n-    }\n+    // Inform the StreamManager that this channel is unregistered."
  }],
  "prId": 5743
}, {
  "comments": [{
    "author": {
      "login": "aarondav"
    },
    "body": "As we don't know from this point in the code whether the registerChannel method will throw an exception, let's move it inside the try-catch for the getChunk(). Otherwise we could leave a message unresponded-to, which would be bad.\n",
    "commit": "cf2c086cd7dcdb0f047dd1eca73e1708d812f25a",
    "createdAt": "2015-05-01T15:57:09Z",
    "diffHunk": "@@ -102,7 +93,8 @@ public void handle(RequestMessage request) {\n \n   private void processFetchRequest(final ChunkFetchRequest req) {\n     final String client = NettyUtils.getRemoteAddress(channel);\n-    streamIds.add(req.streamChunkId.streamId);\n+\n+    streamManager.registerChannel(channel, req.streamChunkId.streamId);"
  }],
  "prId": 5743
}]