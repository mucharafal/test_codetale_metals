[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "maybe comment on the fact that two things will be added to out.\n",
    "commit": "cadfd28f116f0dbca11e580a23caf82060bcf922",
    "createdAt": "2014-10-14T06:10:50Z",
    "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.protocol.request;\n+\n+import java.util.List;\n+\n+import io.netty.buffer.ByteBuf;\n+import io.netty.channel.ChannelHandler;\n+import io.netty.channel.ChannelHandlerContext;\n+import io.netty.handler.codec.MessageToMessageEncoder;\n+\n+/**\n+ * Encoder for {@link ClientRequest} used in client side.\n+ *\n+ * This encoder is stateless so it is safe to be shared by multiple threads.\n+ */\n+@ChannelHandler.Sharable\n+public final class ClientRequestEncoder extends MessageToMessageEncoder<ClientRequest> {\n+  @Override\n+  public void encode(ChannelHandlerContext ctx, ClientRequest in, List<Object> out) {"
  }],
  "prId": 2753
}]