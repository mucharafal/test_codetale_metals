[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "create a duplicate view of this so caller cannot change the position of the underlying buffer.\n",
    "commit": "cadfd28f116f0dbca11e580a23caf82060bcf922",
    "createdAt": "2014-10-27T21:22:36Z",
    "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.buffer;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.ByteBuffer;\n+\n+import com.google.common.base.Objects;\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.ByteBufInputStream;\n+\n+/**\n+ * A {@link ManagedBuffer} backed by a Netty {@link ByteBuf}.\n+ */\n+public final class NettyManagedBuffer extends ManagedBuffer {\n+  private final ByteBuf buf;\n+\n+  public NettyManagedBuffer(ByteBuf buf) {\n+    this.buf = buf;\n+  }\n+\n+  @Override\n+  public long size() {\n+    return buf.readableBytes();\n+  }\n+\n+  @Override\n+  public ByteBuffer nioByteBuffer() throws IOException {\n+    return buf.nioBuffer();\n+  }\n+\n+  @Override\n+  public InputStream inputStream() throws IOException {\n+    return new ByteBufInputStream(buf);\n+  }\n+\n+  @Override\n+  public ManagedBuffer retain() {\n+    buf.retain();\n+    return this;\n+  }\n+\n+  @Override\n+  public ManagedBuffer release() {\n+    buf.release();\n+    return this;\n+  }\n+\n+  @Override\n+  public Object convertToNetty() throws IOException {\n+    return buf;"
  }],
  "prId": 2753
}]