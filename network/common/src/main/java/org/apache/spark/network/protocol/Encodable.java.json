[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "we should also add here that Encodable must also have a static decode method, in which it should retain the buffer if it wants to use the buffer and pass it somewhere else\n",
    "commit": "cadfd28f116f0dbca11e580a23caf82060bcf922",
    "createdAt": "2014-10-27T22:15:23Z",
    "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.protocol;\n+\n+import io.netty.buffer.ByteBuf;\n+\n+/**\n+ * Interface for an object which can be encoded into a ByteBuf. Multiple Encodable objects are\n+ * stored in a single, pre-allocated ByteBuf, so Encodables must also provide their length.",
    "line": 24
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "also document changes necessary to message type etc\n",
    "commit": "cadfd28f116f0dbca11e580a23caf82060bcf922",
    "createdAt": "2014-10-27T22:15:37Z",
    "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.protocol;\n+\n+import io.netty.buffer.ByteBuf;\n+\n+/**\n+ * Interface for an object which can be encoded into a ByteBuf. Multiple Encodable objects are\n+ * stored in a single, pre-allocated ByteBuf, so Encodables must also provide their length.",
    "line": 24
  }, {
    "author": {
      "login": "aarondav"
    },
    "body": "done\n",
    "commit": "cadfd28f116f0dbca11e580a23caf82060bcf922",
    "createdAt": "2014-10-28T23:26:10Z",
    "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.protocol;\n+\n+import io.netty.buffer.ByteBuf;\n+\n+/**\n+ * Interface for an object which can be encoded into a ByteBuf. Multiple Encodable objects are\n+ * stored in a single, pre-allocated ByteBuf, so Encodables must also provide their length.",
    "line": 24
  }],
  "prId": 2753
}]