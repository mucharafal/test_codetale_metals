[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "hmm probalby shouldn't be using try catch for expected condition\n",
    "commit": "cadfd28f116f0dbca11e580a23caf82060bcf922",
    "createdAt": "2014-10-14T06:32:06Z",
    "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.util;\n+\n+import java.util.NoSuchElementException;\n+\n+/**\n+ * Provides a mechanism for constructing a {@link SluiceConfig} using some sort of configuration.\n+ */\n+public abstract class ConfigProvider {\n+  /** Obtains the value of the given config, throws NoSuchElementException if it doesn't exist. */\n+  public abstract String get(String name);\n+\n+  public String get(String name, String defaultValue) {\n+    try {\n+      return get(name);\n+    } catch (NoSuchElementException e) {",
    "line": 32
  }, {
    "author": {
      "login": "aarondav"
    },
    "body": "Subclasses may override this for a more efficient implementation, but since this is config that probably matters nearly 0. In terms of style, this is suboptimal, but I think offers the simplest (and most SparkConf-compatible) API. :)\n",
    "commit": "cadfd28f116f0dbca11e580a23caf82060bcf922",
    "createdAt": "2014-10-17T02:44:36Z",
    "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.util;\n+\n+import java.util.NoSuchElementException;\n+\n+/**\n+ * Provides a mechanism for constructing a {@link SluiceConfig} using some sort of configuration.\n+ */\n+public abstract class ConfigProvider {\n+  /** Obtains the value of the given config, throws NoSuchElementException if it doesn't exist. */\n+  public abstract String get(String name);\n+\n+  public String get(String name, String defaultValue) {\n+    try {\n+      return get(name);\n+    } catch (NoSuchElementException e) {",
    "line": 32
  }],
  "prId": 2753
}]