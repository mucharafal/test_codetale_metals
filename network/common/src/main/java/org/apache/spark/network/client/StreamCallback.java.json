[{
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "I'm not sure I understand what this means -- are you saying that eg. only one thread will be inside `onData` at a time, but another thread might be in `onComplete`?\n",
    "commit": "4d0ff6768bd9d94e19bd842d13d5dc18b3eae6c6",
    "createdAt": "2015-10-28T16:25:21Z",
    "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.client;\n+\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+/**\n+ * Callback for streaming data. Stream data will be offered to the {@link onData(ByteBuffer)}\n+ * method as it arrives. Once all the stream data is received, {@link onComplete()} will be\n+ * called.\n+ * <p/>\n+ * The network library guarantees that a single thread will call these methods at a time, but\n+ * different call may be made by different threads."
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "I'm saying that only one thread will be calling this code at a time, so it doesn't need to be thread-safe, but different calls can be made from different threads, so don't do crazy things like store state in ThreadLocals.\n",
    "commit": "4d0ff6768bd9d94e19bd842d13d5dc18b3eae6c6",
    "createdAt": "2015-10-29T00:06:18Z",
    "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.client;\n+\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+/**\n+ * Callback for streaming data. Stream data will be offered to the {@link onData(ByteBuffer)}\n+ * method as it arrives. Once all the stream data is received, {@link onComplete()} will be\n+ * called.\n+ * <p/>\n+ * The network library guarantees that a single thread will call these methods at a time, but\n+ * different call may be made by different threads."
  }],
  "prId": 9206
}]