[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "we should probably pass the chunkIndex into the exception message, either override getMessage, or just put it as part of the message.\n",
    "commit": "cadfd28f116f0dbca11e580a23caf82060bcf922",
    "createdAt": "2014-10-27T21:26:17Z",
    "diffHunk": "@@ -15,18 +15,23 @@\n  * limitations under the License.\n  */\n \n-package org.apache.spark.network.netty.server\n+package org.apache.spark.network.client;\n \n /**\n- * Header describing a block. This is used only in the server pipeline.\n- *\n- * [[BlockServerHandler]] creates this, and [[BlockHeaderEncoder]] encodes it.\n- *\n- * @param blockSize length of the block content, excluding the length itself.\n- *                 If positive, this is the header for a block (not part of the header).\n- *                 If negative, this is the header and content for an error message.\n- * @param blockId block id\n- * @param error some error message from reading the block\n+ * General exception caused by a remote exception while fetching a chunk.\n  */\n-private[server]\n-class BlockHeader(val blockSize: Int, val blockId: String, val error: Option[String] = None)\n+public class ChunkFetchFailureException extends RuntimeException {"
  }, {
    "author": {
      "login": "aarondav"
    },
    "body": "removed it, it's already part of the message\n",
    "commit": "cadfd28f116f0dbca11e580a23caf82060bcf922",
    "createdAt": "2014-10-28T17:28:47Z",
    "diffHunk": "@@ -15,18 +15,23 @@\n  * limitations under the License.\n  */\n \n-package org.apache.spark.network.netty.server\n+package org.apache.spark.network.client;\n \n /**\n- * Header describing a block. This is used only in the server pipeline.\n- *\n- * [[BlockServerHandler]] creates this, and [[BlockHeaderEncoder]] encodes it.\n- *\n- * @param blockSize length of the block content, excluding the length itself.\n- *                 If positive, this is the header for a block (not part of the header).\n- *                 If negative, this is the header and content for an error message.\n- * @param blockId block id\n- * @param error some error message from reading the block\n+ * General exception caused by a remote exception while fetching a chunk.\n  */\n-private[server]\n-class BlockHeader(val blockSize: Int, val blockId: String, val error: Option[String] = None)\n+public class ChunkFetchFailureException extends RuntimeException {"
  }],
  "prId": 2753
}]