[{
  "comments": [{
    "author": {
      "login": "zsxwing"
    },
    "body": "Why need `retain` here? \n",
    "commit": "014ca9be204edb9428fae569921571012d3fdbde",
    "createdAt": "2016-02-15T06:48:51Z",
    "diffHunk": "@@ -44,7 +44,7 @@ public TestManagedBuffer(int len) {\n     for (int i = 0; i < len; i ++) {\n       byteArray[i] = (byte) i;\n     }\n-    this.underlying = new NettyManagedBuffer(Unpooled.wrappedBuffer(byteArray));\n+    this.underlying = new NettyManagedBuffer(Unpooled.wrappedBuffer(byteArray).retain());"
  }, {
    "author": {
      "login": "JoshRosen"
    },
    "body": "I think that the issue here is that other parts of the code were assuming that the buffer passed to `NettyManagedBuffer` had a non-zero retain count; if we don't add this `retain()` here then Netty will complain about calling release() without holding any references.\n",
    "commit": "014ca9be204edb9428fae569921571012d3fdbde",
    "createdAt": "2016-02-16T00:48:11Z",
    "diffHunk": "@@ -44,7 +44,7 @@ public TestManagedBuffer(int len) {\n     for (int i = 0; i < len; i ++) {\n       byteArray[i] = (byte) i;\n     }\n-    this.underlying = new NettyManagedBuffer(Unpooled.wrappedBuffer(byteArray));\n+    this.underlying = new NettyManagedBuffer(Unpooled.wrappedBuffer(byteArray).retain());"
  }],
  "prId": 11193
}]