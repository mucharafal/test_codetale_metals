[{
  "comments": [{
    "author": {
      "login": "juliuszsompolski"
    },
    "body": "what are the changes in CookieSigner and why it needs to be translated to scala?",
    "commit": "d0de49f814a896bbfa4f2c1fbd074e7ac5e354ec",
    "createdAt": "2019-10-31T11:47:51Z",
    "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.thriftserver\n+\n+import java.security.{MessageDigest, NoSuchAlgorithmException}\n+\n+import org.apache.commons.codec.binary.Base64\n+\n+import org.apache.spark.internal.Logging\n+\n+/**\n+ * The cookie signer generates a signature based on SHA digest\n+ * and appends it to the cookie value generated at the\n+ * server side. It uses SHA digest algorithm to sign and verify signatures.\n+ */\n+private[thriftserver] object CookieSigner {\n+  private val SIGNATURE = \"&s=\"\n+  private val SHA_STRING = \"SHA\"\n+}\n+\n+private[thriftserver] class CookieSigner extends Logging {"
  }],
  "prId": 26340
}]