[{
  "comments": [{
    "author": {
      "login": "juliuszsompolski"
    },
    "body": "The org.apache.hive.service package was coming because it was in the hive-service module in Hive.\r\nSince now it's all in one spark-thriftserver module, maybe change the package to `org.apache.spark.sql.thriftserver.cli.thrift` (as I suppose the other code will be in `org.apache.spark.sql.thriftserver`)",
    "commit": "6f7d48a987fd0cabef7e0cd4ee8af54197d66eaa",
    "createdAt": "2019-10-23T10:20:32Z",
    "diffHunk": "@@ -0,0 +1,1298 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Coding Conventions for this file:\n+//\n+// Structs/Enums/Unions\n+// * Struct, Enum, and Union names begin with a \"T\",\n+//   and use a capital letter for each new word, with no underscores.\n+// * All fields should be declared as either optional or required.\n+//\n+// Functions\n+// * Function names start with a capital letter and have a capital letter for\n+//   each new word, with no underscores.\n+// * Each function should take exactly one parameter, named TFunctionNameReq,\n+//   and should return either void or TFunctionNameResp. This convention allows\n+//   incremental updates.\n+//\n+// Services\n+// * Service names begin with the letter \"T\", use a capital letter for each\n+//   new word (with no underscores), and end with the word \"Service\".\n+\n+namespace java org.apache.spark.service.rpc.thrift\n+namespace cpp apache.spark.service.rpc.thrift"
  }, {
    "author": {
      "login": "AngersZhuuuu"
    },
    "body": "> The org.apache.hive.service package was coming because it was in the hive-service module in Hive.\r\n> Since now it's all in one spark-thriftserver module, maybe change the package to `org.apache.spark.sql.thriftserver.cli.thrift` (as I suppose the other code will be in `org.apache.spark.sql.thriftserver`)\r\n\r\n\r\nIn hive-2.3.x, thrift protocol code have been separated from package name `org.apache.hive.service.cli.thrift`, now is `org.apache.spark.service.rpc.thrift`. \r\nbecause under package `org.apache.spark.service.rpc.thrift`, there are some other classes based on these generated thrift code.",
    "commit": "6f7d48a987fd0cabef7e0cd4ee8af54197d66eaa",
    "createdAt": "2019-10-23T10:35:08Z",
    "diffHunk": "@@ -0,0 +1,1298 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Coding Conventions for this file:\n+//\n+// Structs/Enums/Unions\n+// * Struct, Enum, and Union names begin with a \"T\",\n+//   and use a capital letter for each new word, with no underscores.\n+// * All fields should be declared as either optional or required.\n+//\n+// Functions\n+// * Function names start with a capital letter and have a capital letter for\n+//   each new word, with no underscores.\n+// * Each function should take exactly one parameter, named TFunctionNameReq,\n+//   and should return either void or TFunctionNameResp. This convention allows\n+//   incremental updates.\n+//\n+// Services\n+// * Service names begin with the letter \"T\", use a capital letter for each\n+//   new word (with no underscores), and end with the word \"Service\".\n+\n+namespace java org.apache.spark.service.rpc.thrift\n+namespace cpp apache.spark.service.rpc.thrift"
  }, {
    "author": {
      "login": "wangyum"
    },
    "body": "Does `hive-jdbc` still support it if we rename the package to `org.apache.spark.service.rpc.thrift`?",
    "commit": "6f7d48a987fd0cabef7e0cd4ee8af54197d66eaa",
    "createdAt": "2019-10-24T14:13:47Z",
    "diffHunk": "@@ -0,0 +1,1298 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Coding Conventions for this file:\n+//\n+// Structs/Enums/Unions\n+// * Struct, Enum, and Union names begin with a \"T\",\n+//   and use a capital letter for each new word, with no underscores.\n+// * All fields should be declared as either optional or required.\n+//\n+// Functions\n+// * Function names start with a capital letter and have a capital letter for\n+//   each new word, with no underscores.\n+// * Each function should take exactly one parameter, named TFunctionNameReq,\n+//   and should return either void or TFunctionNameResp. This convention allows\n+//   incremental updates.\n+//\n+// Services\n+// * Service names begin with the letter \"T\", use a capital letter for each\n+//   new word (with no underscores), and end with the word \"Service\".\n+\n+namespace java org.apache.spark.service.rpc.thrift\n+namespace cpp apache.spark.service.rpc.thrift"
  }, {
    "author": {
      "login": "juliuszsompolski"
    },
    "body": "@wangyum `hive-jdbc` will then not pickup this code, but instead use the code from the `hive-service` dependency.\r\nOne may say that it is bad, because it makes the client and server run different code, but I'd say is actually good - most people would use a standalone hive jdbc client jar that uses `hive-service` code from Hive. When we use it here, we test that the code in Spark does not break compatibility with Hive client, even if in the future we decide to make some changes to it.",
    "commit": "6f7d48a987fd0cabef7e0cd4ee8af54197d66eaa",
    "createdAt": "2019-10-24T14:28:58Z",
    "diffHunk": "@@ -0,0 +1,1298 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Coding Conventions for this file:\n+//\n+// Structs/Enums/Unions\n+// * Struct, Enum, and Union names begin with a \"T\",\n+//   and use a capital letter for each new word, with no underscores.\n+// * All fields should be declared as either optional or required.\n+//\n+// Functions\n+// * Function names start with a capital letter and have a capital letter for\n+//   each new word, with no underscores.\n+// * Each function should take exactly one parameter, named TFunctionNameReq,\n+//   and should return either void or TFunctionNameResp. This convention allows\n+//   incremental updates.\n+//\n+// Services\n+// * Service names begin with the letter \"T\", use a capital letter for each\n+//   new word (with no underscores), and end with the word \"Service\".\n+\n+namespace java org.apache.spark.service.rpc.thrift\n+namespace cpp apache.spark.service.rpc.thrift"
  }, {
    "author": {
      "login": "AngersZhuuuu"
    },
    "body": "> @wangyum `hive-jdbc` will then not pickup this code, but instead use the code from the `hive-service` dependency.\r\n> One may say that it is bad, because it makes the client and server run different code, but I'd say is actually good - most people would use a standalone hive jdbc client jar that uses `hive-service` code from Hive. When we use it here, we test that the code in Spark does not break compatibility with Hive client, even if in the future we decide to make some changes to it.\r\n\r\nYea, it is feasible if it meets the standards of the protocol and is backwards compatible. We are use a server implement  thriftserver based on v9, and it works well.",
    "commit": "6f7d48a987fd0cabef7e0cd4ee8af54197d66eaa",
    "createdAt": "2019-10-24T14:37:13Z",
    "diffHunk": "@@ -0,0 +1,1298 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Coding Conventions for this file:\n+//\n+// Structs/Enums/Unions\n+// * Struct, Enum, and Union names begin with a \"T\",\n+//   and use a capital letter for each new word, with no underscores.\n+// * All fields should be declared as either optional or required.\n+//\n+// Functions\n+// * Function names start with a capital letter and have a capital letter for\n+//   each new word, with no underscores.\n+// * Each function should take exactly one parameter, named TFunctionNameReq,\n+//   and should return either void or TFunctionNameResp. This convention allows\n+//   incremental updates.\n+//\n+// Services\n+// * Service names begin with the letter \"T\", use a capital letter for each\n+//   new word (with no underscores), and end with the word \"Service\".\n+\n+namespace java org.apache.spark.service.rpc.thrift\n+namespace cpp apache.spark.service.rpc.thrift"
  }, {
    "author": {
      "login": "juliuszsompolski"
    },
    "body": "> In hive-2.3.x, thrift protocol code have been separated from package name org.apache.hive.service.cli.thrift, now is org.apache.spark.service.rpc.thrift.\r\nbecause under package org.apache.spark.service.rpc.thrift, there are some other classes based on these generated thrift code.\r\n\r\nCould we use `org.apache.spark.thriftserver` everywhere instead of `org.apache.spark.service`? the `org.apache.hive.service` was coming from that `hive-service` was a separate module, but we don't have it here.",
    "commit": "6f7d48a987fd0cabef7e0cd4ee8af54197d66eaa",
    "createdAt": "2019-10-24T14:45:48Z",
    "diffHunk": "@@ -0,0 +1,1298 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Coding Conventions for this file:\n+//\n+// Structs/Enums/Unions\n+// * Struct, Enum, and Union names begin with a \"T\",\n+//   and use a capital letter for each new word, with no underscores.\n+// * All fields should be declared as either optional or required.\n+//\n+// Functions\n+// * Function names start with a capital letter and have a capital letter for\n+//   each new word, with no underscores.\n+// * Each function should take exactly one parameter, named TFunctionNameReq,\n+//   and should return either void or TFunctionNameResp. This convention allows\n+//   incremental updates.\n+//\n+// Services\n+// * Service names begin with the letter \"T\", use a capital letter for each\n+//   new word (with no underscores), and end with the word \"Service\".\n+\n+namespace java org.apache.spark.service.rpc.thrift\n+namespace cpp apache.spark.service.rpc.thrift"
  }, {
    "author": {
      "login": "AngersZhuuuu"
    },
    "body": "> Could we use `org.apache.spark.thriftserver` everywhere instead of `org.apache.spark.service`? the `org.apache.hive.service` was coming from that `hive-service` was a separate module, but we don't have it here.\r\n\r\nIt is easy after  https://github.com/apache/spark/pull/26221#discussion_r338677057\r\nIt is ok to do like this since our package is `thriftserver` not `service`",
    "commit": "6f7d48a987fd0cabef7e0cd4ee8af54197d66eaa",
    "createdAt": "2019-10-24T16:44:44Z",
    "diffHunk": "@@ -0,0 +1,1298 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Coding Conventions for this file:\n+//\n+// Structs/Enums/Unions\n+// * Struct, Enum, and Union names begin with a \"T\",\n+//   and use a capital letter for each new word, with no underscores.\n+// * All fields should be declared as either optional or required.\n+//\n+// Functions\n+// * Function names start with a capital letter and have a capital letter for\n+//   each new word, with no underscores.\n+// * Each function should take exactly one parameter, named TFunctionNameReq,\n+//   and should return either void or TFunctionNameResp. This convention allows\n+//   incremental updates.\n+//\n+// Services\n+// * Service names begin with the letter \"T\", use a capital letter for each\n+//   new word (with no underscores), and end with the word \"Service\".\n+\n+namespace java org.apache.spark.service.rpc.thrift\n+namespace cpp apache.spark.service.rpc.thrift"
  }],
  "prId": 26221
}, {
  "comments": [{
    "author": {
      "login": "AngersZhuuuu"
    },
    "body": "@juliuszsompolski Ok with this package name?",
    "commit": "6f7d48a987fd0cabef7e0cd4ee8af54197d66eaa",
    "createdAt": "2019-10-27T03:37:35Z",
    "diffHunk": "@@ -0,0 +1,1298 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Coding Conventions for this file:\n+//\n+// Structs/Enums/Unions\n+// * Struct, Enum, and Union names begin with a \"T\",\n+//   and use a capital letter for each new word, with no underscores.\n+// * All fields should be declared as either optional or required.\n+//\n+// Functions\n+// * Function names start with a capital letter and have a capital letter for\n+//   each new word, with no underscores.\n+// * Each function should take exactly one parameter, named TFunctionNameReq,\n+//   and should return either void or TFunctionNameResp. This convention allows\n+//   incremental updates.\n+//\n+// Services\n+// * Service names begin with the letter \"T\", use a capital letter for each\n+//   new word (with no underscores), and end with the word \"Service\".\n+\n+namespace java org.apache.spark.sql.thriftserver.cli.thrift\n+namespace cpp apache.spark.sql.thriftserver.cli.thrift\n+\n+// List of protocol versions. A new token should be\n+// added to the end of this list every time a change is made.",
    "line": 39
  }, {
    "author": {
      "login": "juliuszsompolski"
    },
    "body": ":+1: ",
    "commit": "6f7d48a987fd0cabef7e0cd4ee8af54197d66eaa",
    "createdAt": "2019-10-28T11:41:12Z",
    "diffHunk": "@@ -0,0 +1,1298 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Coding Conventions for this file:\n+//\n+// Structs/Enums/Unions\n+// * Struct, Enum, and Union names begin with a \"T\",\n+//   and use a capital letter for each new word, with no underscores.\n+// * All fields should be declared as either optional or required.\n+//\n+// Functions\n+// * Function names start with a capital letter and have a capital letter for\n+//   each new word, with no underscores.\n+// * Each function should take exactly one parameter, named TFunctionNameReq,\n+//   and should return either void or TFunctionNameResp. This convention allows\n+//   incremental updates.\n+//\n+// Services\n+// * Service names begin with the letter \"T\", use a capital letter for each\n+//   new word (with no underscores), and end with the word \"Service\".\n+\n+namespace java org.apache.spark.sql.thriftserver.cli.thrift\n+namespace cpp apache.spark.sql.thriftserver.cli.thrift\n+\n+// List of protocol versions. A new token should be\n+// added to the end of this list every time a change is made.",
    "line": 39
  }, {
    "author": {
      "login": "AngersZhuuuu"
    },
    "body": "> 👍\r\n\r\nNew code in https://github.com/AngersZhuuuu/spark/tree/SPARK-29018-V11-STEP2\r\n\r\nCurrent change list:\r\n1. Impelemnt `Type` in scala since spark con't support all type of hive\r\n2. Implement `Service/AbstractService` prepare for remove hive conf in future\r\n3. Construct RowSet with StructType and Row\r\n4. Implement `HiveAuthFactory` since between 1.2.1/2.3.5, their delegation token managerment changed. Impelment on DelegationTokenMnagerment by scala\r\n5. MV `tableTypeString` from `SparkMetadataOperationUtils` to `SparkMetadataOperation`\r\n5. Since there are `tableTypeString` in `SparkMetadataOperation` remove `ClassicTypeMapping`, `HiveTableTypeMapping`, `TableTypeMapping` and `TableTypeMappingFactory`\r\n6. Implement all operation for spark since it execute in different way\r\n7. Add new method `GetQueryId`, `SetClientInfo` for thrift version v11 in `ThriftCLIService`\r\n8. Add `statementid` to `Operation` for implement `GetQueryId`\r\n9. Remove `GlobalHivercFileProcessor` `setFetchSize` `processGlobalInitFile`etc\r\n\r\n\r\nStill working on this. ",
    "commit": "6f7d48a987fd0cabef7e0cd4ee8af54197d66eaa",
    "createdAt": "2019-10-28T14:46:31Z",
    "diffHunk": "@@ -0,0 +1,1298 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//     http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Coding Conventions for this file:\n+//\n+// Structs/Enums/Unions\n+// * Struct, Enum, and Union names begin with a \"T\",\n+//   and use a capital letter for each new word, with no underscores.\n+// * All fields should be declared as either optional or required.\n+//\n+// Functions\n+// * Function names start with a capital letter and have a capital letter for\n+//   each new word, with no underscores.\n+// * Each function should take exactly one parameter, named TFunctionNameReq,\n+//   and should return either void or TFunctionNameResp. This convention allows\n+//   incremental updates.\n+//\n+// Services\n+// * Service names begin with the letter \"T\", use a capital letter for each\n+//   new word (with no underscores), and end with the word \"Service\".\n+\n+namespace java org.apache.spark.sql.thriftserver.cli.thrift\n+namespace cpp apache.spark.sql.thriftserver.cli.thrift\n+\n+// List of protocol versions. A new token should be\n+// added to the end of this list every time a change is made.",
    "line": 39
  }],
  "prId": 26221
}]