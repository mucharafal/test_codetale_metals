[{
  "comments": [{
    "author": {
      "login": "yhuai"
    },
    "body": "Since there is already a global singleton, this probably will not work because of the derby connection limitation (inside the JVM, we can have a single connection to a given derby). \n",
    "commit": "350bd2ebc2b44a5e6d3f58325aa9272f13201af6",
    "createdAt": "2016-03-23T04:51:15Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+\n+package org.apache.spark.sql.hive\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.hive.test.TestHive\n+\n+\n+class HiveContextSuite extends SparkFunSuite {\n+\n+  test(\"HiveContext can access `spark.sql.*` configs\") {\n+    // Avoid creating another SparkContext in the same JVM\n+    val sc = TestHive.sparkContext\n+    val hiveContext = new HiveContext(sc)"
  }, {
    "author": {
      "login": "andrewor14"
    },
    "body": "using `TestHive` doesn't work either. I'm just going to ignore the test again...\n",
    "commit": "350bd2ebc2b44a5e6d3f58325aa9272f13201af6",
    "createdAt": "2016-03-23T05:19:54Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+\n+package org.apache.spark.sql.hive\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.hive.test.TestHive\n+\n+\n+class HiveContextSuite extends SparkFunSuite {\n+\n+  test(\"HiveContext can access `spark.sql.*` configs\") {\n+    // Avoid creating another SparkContext in the same JVM\n+    val sc = TestHive.sparkContext\n+    val hiveContext = new HiveContext(sc)"
  }],
  "prId": 11836
}]