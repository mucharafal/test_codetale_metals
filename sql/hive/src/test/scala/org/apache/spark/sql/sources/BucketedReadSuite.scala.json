[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "isn't it just `val joinPredicates = left(col) === right(col)`?\n",
    "commit": "d84a15fad21b21992c8f12583b5367afbf854373",
    "createdAt": "2016-10-20T12:18:51Z",
    "diffHunk": "@@ -408,6 +467,25 @@ class BucketedReadSuite extends QueryTest with SQLTestUtils with TestHiveSinglet\n     }\n   }\n \n+  test(\"SPARK-17698 Join predicates should not contain filter clauses\") {\n+    val bucketSpec = Some(BucketSpec(8, Seq(\"i\"), Seq(\"i\")))\n+    testBucketing(\n+      bucketSpecLeft = bucketSpec,\n+      bucketSpecRight = bucketSpec,\n+      joinType = \"fullouter\",\n+      joinCondition = (left: DataFrame, right: DataFrame) => {\n+        val joinPredicates = Seq(\"i\").map(col => left(col) === right(col)).reduce(_ && _)",
    "line": 201
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "yea @tejasapatil mind fixing this? We can merge it then.\n",
    "commit": "d84a15fad21b21992c8f12583b5367afbf854373",
    "createdAt": "2016-10-20T16:35:52Z",
    "diffHunk": "@@ -408,6 +467,25 @@ class BucketedReadSuite extends QueryTest with SQLTestUtils with TestHiveSinglet\n     }\n   }\n \n+  test(\"SPARK-17698 Join predicates should not contain filter clauses\") {\n+    val bucketSpec = Some(BucketSpec(8, Seq(\"i\"), Seq(\"i\")))\n+    testBucketing(\n+      bucketSpecLeft = bucketSpec,\n+      bucketSpecRight = bucketSpec,\n+      joinType = \"fullouter\",\n+      joinCondition = (left: DataFrame, right: DataFrame) => {\n+        val joinPredicates = Seq(\"i\").map(col => left(col) === right(col)).reduce(_ && _)",
    "line": 201
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "Actually @tejasapatil given there is a need for backport, I'd let you fix this in your other prs since this is fairly cosmetic.\n",
    "commit": "d84a15fad21b21992c8f12583b5367afbf854373",
    "createdAt": "2016-10-20T16:54:43Z",
    "diffHunk": "@@ -408,6 +467,25 @@ class BucketedReadSuite extends QueryTest with SQLTestUtils with TestHiveSinglet\n     }\n   }\n \n+  test(\"SPARK-17698 Join predicates should not contain filter clauses\") {\n+    val bucketSpec = Some(BucketSpec(8, Seq(\"i\"), Seq(\"i\")))\n+    testBucketing(\n+      bucketSpecLeft = bucketSpec,\n+      bucketSpecRight = bucketSpec,\n+      joinType = \"fullouter\",\n+      joinCondition = (left: DataFrame, right: DataFrame) => {\n+        val joinPredicates = Seq(\"i\").map(col => left(col) === right(col)).reduce(_ && _)",
    "line": 201
  }],
  "prId": 15272
}]