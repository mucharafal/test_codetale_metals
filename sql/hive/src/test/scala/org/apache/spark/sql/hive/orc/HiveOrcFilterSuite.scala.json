[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Would this actually also pass on Hive 1? meaning would the replace just do nothing? if so this wouldn't need to be special case, but I don't know what the test output is like",
    "commit": "27e5b6e73fd3ede76219c477270b56e0f849fac2",
    "createdAt": "2019-05-10T09:16:35Z",
    "diffHunk": "@@ -76,15 +77,27 @@ class HiveOrcFilterSuite extends OrcTest with TestHiveSingleton {\n     checkFilterPredicate(df, predicate, checkComparisonOperator)\n   }\n \n-  private def checkFilterPredicate\n+  private def checkFilterPredicateWithDiffHiveVersion\n       (predicate: Predicate, stringExpr: String)\n       (implicit df: DataFrame): Unit = {\n     def checkLogicalOperator(filter: SearchArgument) = {\n-      assert(filter.toString == stringExpr)\n+      if (HiveUtils.isHive23) {\n+        assert(filter.toString == stringExpr.replace(\"\\n\", \", \"))",
    "line": 19
  }, {
    "author": {
      "login": "wangyum"
    },
    "body": "No. It wont pass on Hive 1.",
    "commit": "27e5b6e73fd3ede76219c477270b56e0f849fac2",
    "createdAt": "2019-05-10T09:40:43Z",
    "diffHunk": "@@ -76,15 +77,27 @@ class HiveOrcFilterSuite extends OrcTest with TestHiveSingleton {\n     checkFilterPredicate(df, predicate, checkComparisonOperator)\n   }\n \n-  private def checkFilterPredicate\n+  private def checkFilterPredicateWithDiffHiveVersion\n       (predicate: Predicate, stringExpr: String)\n       (implicit df: DataFrame): Unit = {\n     def checkLogicalOperator(filter: SearchArgument) = {\n-      assert(filter.toString == stringExpr)\n+      if (HiveUtils.isHive23) {\n+        assert(filter.toString == stringExpr.replace(\"\\n\", \", \"))",
    "line": 19
  }],
  "prId": 24391
}]