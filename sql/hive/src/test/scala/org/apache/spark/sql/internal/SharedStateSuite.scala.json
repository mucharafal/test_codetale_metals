[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "`should shared` -> `should be shared`?",
    "commit": "748821c86d063e4b57c8297ae3e259934db544c2",
    "createdAt": "2019-02-01T02:10:18Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.internal\n+\n+import org.apache.spark.{SparkConf, SparkContext, SparkFunSuite}\n+import org.apache.spark.sql.SparkSession\n+\n+class SharedStateSuite extends SparkFunSuite {\n+\n+  test(\"the catalog should be determined at the very first\") {\n+    val conf = new SparkConf().setMaster(\"local\").setAppName(\"SharedState Test\")\n+    val sc = new SparkContext(conf)\n+    val ss = SparkSession.builder().enableHiveSupport().getOrCreate()\n+    assert(ss.sharedState.externalCatalog.unwrapped.getClass.getName ===\n+      \"org.apache.spark.sql.hive.HiveExternalCatalog\", \"The catalog should be hive \")\n+    val ss2 = SparkSession.builder().getOrCreate()\n+\n+    assert(ss2.sharedState.externalCatalog.unwrapped.getClass.getName ===\n+      \"org.apache.spark.sql.hive.HiveExternalCatalog\", \"The catalog should shared across sessions\")"
  }, {
    "author": {
      "login": "yaooqinn"
    },
    "body": "thanks dongjoon",
    "commit": "748821c86d063e4b57c8297ae3e259934db544c2",
    "createdAt": "2019-02-01T03:01:38Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.internal\n+\n+import org.apache.spark.{SparkConf, SparkContext, SparkFunSuite}\n+import org.apache.spark.sql.SparkSession\n+\n+class SharedStateSuite extends SparkFunSuite {\n+\n+  test(\"the catalog should be determined at the very first\") {\n+    val conf = new SparkConf().setMaster(\"local\").setAppName(\"SharedState Test\")\n+    val sc = new SparkContext(conf)\n+    val ss = SparkSession.builder().enableHiveSupport().getOrCreate()\n+    assert(ss.sharedState.externalCatalog.unwrapped.getClass.getName ===\n+      \"org.apache.spark.sql.hive.HiveExternalCatalog\", \"The catalog should be hive \")\n+    val ss2 = SparkSession.builder().getOrCreate()\n+\n+    assert(ss2.sharedState.externalCatalog.unwrapped.getClass.getName ===\n+      \"org.apache.spark.sql.hive.HiveExternalCatalog\", \"The catalog should shared across sessions\")"
  }],
  "prId": 23709
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Please switch line 31 and 32.",
    "commit": "748821c86d063e4b57c8297ae3e259934db544c2",
    "createdAt": "2019-02-01T02:10:41Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.internal\n+\n+import org.apache.spark.{SparkConf, SparkContext, SparkFunSuite}\n+import org.apache.spark.sql.SparkSession\n+\n+class SharedStateSuite extends SparkFunSuite {\n+\n+  test(\"the catalog should be determined at the very first\") {\n+    val conf = new SparkConf().setMaster(\"local\").setAppName(\"SharedState Test\")\n+    val sc = new SparkContext(conf)\n+    val ss = SparkSession.builder().enableHiveSupport().getOrCreate()\n+    assert(ss.sharedState.externalCatalog.unwrapped.getClass.getName ===\n+      \"org.apache.spark.sql.hive.HiveExternalCatalog\", \"The catalog should be hive \")\n+    val ss2 = SparkSession.builder().getOrCreate()\n+"
  }, {
    "author": {
      "login": "yaooqinn"
    },
    "body": "ok",
    "commit": "748821c86d063e4b57c8297ae3e259934db544c2",
    "createdAt": "2019-02-01T03:01:45Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.internal\n+\n+import org.apache.spark.{SparkConf, SparkContext, SparkFunSuite}\n+import org.apache.spark.sql.SparkSession\n+\n+class SharedStateSuite extends SparkFunSuite {\n+\n+  test(\"the catalog should be determined at the very first\") {\n+    val conf = new SparkConf().setMaster(\"local\").setAppName(\"SharedState Test\")\n+    val sc = new SparkContext(conf)\n+    val ss = SparkSession.builder().enableHiveSupport().getOrCreate()\n+    assert(ss.sharedState.externalCatalog.unwrapped.getClass.getName ===\n+      \"org.apache.spark.sql.hive.HiveExternalCatalog\", \"The catalog should be hive \")\n+    val ss2 = SparkSession.builder().getOrCreate()\n+"
  }],
  "prId": 23709
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "We do have HiveSessionStateSuite. Move it to the same package and directory like HiveSessionStateSuite? Also rename it to  HiveSharedStateSuite",
    "commit": "748821c86d063e4b57c8297ae3e259934db544c2",
    "createdAt": "2019-02-01T07:20:39Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.internal"
  }, {
    "author": {
      "login": "yaooqinn"
    },
    "body": "moved",
    "commit": "748821c86d063e4b57c8297ae3e259934db544c2",
    "createdAt": "2019-02-01T09:11:52Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.internal"
  }],
  "prId": 23709
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Is this being used?",
    "commit": "748821c86d063e4b57c8297ae3e259934db544c2",
    "createdAt": "2019-02-01T07:21:56Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.internal\n+\n+import org.apache.spark.{SparkConf, SparkContext, SparkFunSuite}\n+import org.apache.spark.sql.SparkSession\n+\n+class SharedStateSuite extends SparkFunSuite {\n+\n+  test(\"the catalog should be determined at the very first\") {\n+    val conf = new SparkConf().setMaster(\"local\").setAppName(\"SharedState Test\")\n+    val sc = SparkContext.getOrCreate(conf)"
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "```\r\n// Create a spark context first\r\nSparkContext.getOrCreate(conf)\r\n```",
    "commit": "748821c86d063e4b57c8297ae3e259934db544c2",
    "createdAt": "2019-02-01T07:38:10Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.internal\n+\n+import org.apache.spark.{SparkConf, SparkContext, SparkFunSuite}\n+import org.apache.spark.sql.SparkSession\n+\n+class SharedStateSuite extends SparkFunSuite {\n+\n+  test(\"the catalog should be determined at the very first\") {\n+    val conf = new SparkConf().setMaster(\"local\").setAppName(\"SharedState Test\")\n+    val sc = SparkContext.getOrCreate(conf)"
  }],
  "prId": 23709
}]