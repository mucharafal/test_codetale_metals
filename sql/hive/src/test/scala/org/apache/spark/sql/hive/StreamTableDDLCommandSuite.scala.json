[{
  "comments": [{
    "author": {
      "login": "xuanyuanking"
    },
    "body": "nit: indent here.",
    "commit": "45acfb5a171979ad0d16871034f98236237a57d4",
    "createdAt": "2018-10-17T16:10:56Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.hive\n+\n+import org.apache.spark.sql.catalyst.TableIdentifier\n+import org.apache.spark.sql.hive.test.TestHiveSingleton\n+import org.apache.spark.sql.test.SQLTestUtils\n+\n+class StreamTableDDLCommandSuite extends SQLTestUtils with TestHiveSingleton {\n+  private val catalog = spark.sessionState.catalog\n+\n+  test(\"CTAS: create data source stream table\") {\n+    withTempPath { dir =>\n+      withTable(\"t\") {\n+        sql(\n+          s\"\"\"CREATE TABLE t USING PARQUET\n+             |OPTIONS (\n+             |PATH = '${dir.toURI}',\n+        |location = '${dir.toURI}',"
  }, {
    "author": {
      "login": "stczwd"
    },
    "body": "Thanks",
    "commit": "45acfb5a171979ad0d16871034f98236237a57d4",
    "createdAt": "2018-10-21T08:52:12Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.hive\n+\n+import org.apache.spark.sql.catalyst.TableIdentifier\n+import org.apache.spark.sql.hive.test.TestHiveSingleton\n+import org.apache.spark.sql.test.SQLTestUtils\n+\n+class StreamTableDDLCommandSuite extends SQLTestUtils with TestHiveSingleton {\n+  private val catalog = spark.sessionState.catalog\n+\n+  test(\"CTAS: create data source stream table\") {\n+    withTempPath { dir =>\n+      withTable(\"t\") {\n+        sql(\n+          s\"\"\"CREATE TABLE t USING PARQUET\n+             |OPTIONS (\n+             |PATH = '${dir.toURI}',\n+        |location = '${dir.toURI}',"
  }],
  "prId": 22575
}, {
  "comments": [{
    "author": {
      "login": "uncleGen"
    },
    "body": "At https://github.com/apache/spark/pull/22575/files#diff-fa4547f0c6dd7810576cd4262a2dfb46R78\r\n\r\nthe `child` is not a streaming logicalPlan?",
    "commit": "45acfb5a171979ad0d16871034f98236237a57d4",
    "createdAt": "2018-11-29T07:09:24Z",
    "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.hive\n+\n+import org.apache.spark.sql.catalyst.TableIdentifier\n+import org.apache.spark.sql.hive.test.TestHiveSingleton\n+import org.apache.spark.sql.test.SQLTestUtils\n+\n+class StreamTableDDLCommandSuite extends SQLTestUtils with TestHiveSingleton {\n+  private val catalog = spark.sessionState.catalog\n+\n+  test(\"CTAS: create data source stream table\") {\n+    withTempPath { dir =>\n+      withTable(\"t\") {\n+        sql(\n+          s\"\"\"CREATE TABLE t USING PARQUET\n+             |OPTIONS (\n+             |PATH = '${dir.toURI}',\n+             |location = '${dir.toURI}',\n+             |isStreaming = 'true')\n+             |AS SELECT 1 AS a, 2 AS b, 3 AS c\n+          \"\"\".stripMargin)",
    "line": 36
  }, {
    "author": {
      "login": "stczwd"
    },
    "body": "In this place, child is a streaming logicalPlan. If not, it will throw Exceptions",
    "commit": "45acfb5a171979ad0d16871034f98236237a57d4",
    "createdAt": "2018-11-30T01:38:31Z",
    "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.hive\n+\n+import org.apache.spark.sql.catalyst.TableIdentifier\n+import org.apache.spark.sql.hive.test.TestHiveSingleton\n+import org.apache.spark.sql.test.SQLTestUtils\n+\n+class StreamTableDDLCommandSuite extends SQLTestUtils with TestHiveSingleton {\n+  private val catalog = spark.sessionState.catalog\n+\n+  test(\"CTAS: create data source stream table\") {\n+    withTempPath { dir =>\n+      withTable(\"t\") {\n+        sql(\n+          s\"\"\"CREATE TABLE t USING PARQUET\n+             |OPTIONS (\n+             |PATH = '${dir.toURI}',\n+             |location = '${dir.toURI}',\n+             |isStreaming = 'true')\n+             |AS SELECT 1 AS a, 2 AS b, 3 AS c\n+          \"\"\".stripMargin)",
    "line": 36
  }],
  "prId": 22575
}]