[{
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "I'd only use the `package.Operator` way of naming things when you are disambiguating operators with the same name. (i.e., `logical.Filter` and `execution.Filter`).  There is only one `NativeCommand` so just import it.\n",
    "commit": "51a82f2ae3fe9d28455940d953de7b76306f49b2",
    "createdAt": "2014-12-16T20:28:39Z",
    "diffHunk": "@@ -142,14 +142,14 @@ abstract class HiveComparisonTest\n       // Hack: Hive simply prints the result of a SET command to screen,\n       // and does not return it as a query answer.\n       case _: SetCommand => Seq(\"0\")\n-      case LogicalNativeCommand(c) if c.toLowerCase.contains(\"desc\") =>\n+      case hive.NativeCommand(c) if c.toLowerCase.contains(\"desc\") =>\n         answer\n           .filterNot(nonDeterministicLine)\n           .map(_.replaceAll(\"from deserializer\", \"\"))\n           .map(_.replaceAll(\"None\", \"\"))\n           .map(_.trim)\n           .filterNot(_ == \"\")\n-      case _: LogicalNativeCommand => answer.filterNot(nonDeterministicLine).filterNot(_ == \"\")\n+      case _: hive.NativeCommand => answer.filterNot(nonDeterministicLine).filterNot(_ == \"\")"
  }, {
    "author": {
      "login": "scwf"
    },
    "body": "Getit, thanks\n",
    "commit": "51a82f2ae3fe9d28455940d953de7b76306f49b2",
    "createdAt": "2014-12-16T23:43:22Z",
    "diffHunk": "@@ -142,14 +142,14 @@ abstract class HiveComparisonTest\n       // Hack: Hive simply prints the result of a SET command to screen,\n       // and does not return it as a query answer.\n       case _: SetCommand => Seq(\"0\")\n-      case LogicalNativeCommand(c) if c.toLowerCase.contains(\"desc\") =>\n+      case hive.NativeCommand(c) if c.toLowerCase.contains(\"desc\") =>\n         answer\n           .filterNot(nonDeterministicLine)\n           .map(_.replaceAll(\"from deserializer\", \"\"))\n           .map(_.replaceAll(\"None\", \"\"))\n           .map(_.trim)\n           .filterNot(_ == \"\")\n-      case _: LogicalNativeCommand => answer.filterNot(nonDeterministicLine).filterNot(_ == \"\")\n+      case _: hive.NativeCommand => answer.filterNot(nonDeterministicLine).filterNot(_ == \"\")"
  }],
  "prId": 3712
}]