[{
  "comments": [{
    "author": {
      "login": "yhuai"
    },
    "body": "Can we also add tests for `GenericUDF` and `AbstractGenericUDAFResolver` (we have tests of `UDAF`, `UDF`, and `GenericUDTF` at here)?\n",
    "commit": "666dd630dd8882b16b864f2dcf3b994b70894ef8",
    "createdAt": "2015-10-01T03:57:21Z",
    "diffHunk": "@@ -299,6 +300,42 @@ class HiveUDFSuite extends QueryTest with TestHiveSingleton {\n \n     hiveContext.reset()\n   }\n+\n+  test(\"Hive UDFs with insufficient number of input arguments should trigger an analysis error\") {\n+    Seq((1, 2)).toDF(\"a\", \"b\").registerTempTable(\"testUDF\")\n+\n+    {\n+      // Hive UDF\n+      sql(s\"CREATE TEMPORARY FUNCTION testUDFTwoListList AS '${classOf[UDFTwoListList].getName}'\")\n+      val message = intercept[AnalysisException] {\n+        sql(\"SELECT testUDFTwoListList() FROM testUDF\")\n+      }.getMessage\n+      assert(message.contains(\"No handler for Hive udf\"))\n+    }\n+\n+    {\n+      // Hive UDAF\n+      sql(s\"CREATE TEMPORARY FUNCTION testUDAFPercentile AS '${classOf[UDAFPercentile].getName}'\")\n+      val message = intercept[AnalysisException] {\n+        sql(\"SELECT testUDAFPercentile(a) FROM testUDF GROUP BY b\")\n+      }.getMessage\n+      assert(message.contains(\"No handler for Hive udf\"))\n+    }\n+\n+    {\n+      // Hive UDTF\n+      sql(s\"CREATE TEMPORARY FUNCTION testUDTFExplode AS '${classOf[GenericUDTFExplode].getName}'\")\n+      val message = intercept[AnalysisException] {\n+        sql(\"SELECT testUDTFExplode() FROM testUDF\")\n+      }.getMessage\n+      assert(message.contains(\"No handler for Hive udf\"))\n+    }"
  }],
  "prId": 8941
}]