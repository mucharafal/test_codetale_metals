[{
  "comments": [{
    "author": {
      "login": "liancheng"
    },
    "body": "Why this test case is ignored?\n",
    "commit": "c21171ecd67835dab9441ed48e0f6b76bbbf52ad",
    "createdAt": "2014-09-16T00:50:12Z",
    "diffHunk": "@@ -57,13 +57,14 @@ class HiveResolutionSuite extends HiveComparisonTest {\n       .registerTempTable(\"caseSensitivityTest\")\n \n     sql(\"SELECT a, b, A, B, n.a, n.b, n.A, n.B FROM caseSensitivityTest\")\n+  }\n \n-    println(sql(\"SELECT * FROM casesensitivitytest one JOIN casesensitivitytest two ON one.a = two.a\").queryExecution)\n-\n-    sql(\"SELECT * FROM casesensitivitytest one JOIN casesensitivitytest two ON one.a = two.a\").collect()\n-\n-    // TODO: sql(\"SELECT * FROM casesensitivitytest a JOIN casesensitivitytest b ON a.a = b.a\")\n+  ignore(\"case insensitivity with scala reflection joins\") {"
  }, {
    "author": {
      "login": "liancheng"
    },
    "body": "Ah I see, `a.a` and `b.a` cause ambiguous attribute references here...\n",
    "commit": "c21171ecd67835dab9441ed48e0f6b76bbbf52ad",
    "createdAt": "2014-09-16T01:53:43Z",
    "diffHunk": "@@ -57,13 +57,14 @@ class HiveResolutionSuite extends HiveComparisonTest {\n       .registerTempTable(\"caseSensitivityTest\")\n \n     sql(\"SELECT a, b, A, B, n.a, n.b, n.A, n.B FROM caseSensitivityTest\")\n+  }\n \n-    println(sql(\"SELECT * FROM casesensitivitytest one JOIN casesensitivitytest two ON one.a = two.a\").queryExecution)\n-\n-    sql(\"SELECT * FROM casesensitivitytest one JOIN casesensitivitytest two ON one.a = two.a\").collect()\n-\n-    // TODO: sql(\"SELECT * FROM casesensitivitytest a JOIN casesensitivitytest b ON a.a = b.a\")\n+  ignore(\"case insensitivity with scala reflection joins\") {"
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "Yeah, I only changed it to an explicit ignore instead of being commented out.  We need to decided if this is allowed or not.\n",
    "commit": "c21171ecd67835dab9441ed48e0f6b76bbbf52ad",
    "createdAt": "2014-09-16T18:22:58Z",
    "diffHunk": "@@ -57,13 +57,14 @@ class HiveResolutionSuite extends HiveComparisonTest {\n       .registerTempTable(\"caseSensitivityTest\")\n \n     sql(\"SELECT a, b, A, B, n.a, n.b, n.A, n.B FROM caseSensitivityTest\")\n+  }\n \n-    println(sql(\"SELECT * FROM casesensitivitytest one JOIN casesensitivitytest two ON one.a = two.a\").queryExecution)\n-\n-    sql(\"SELECT * FROM casesensitivitytest one JOIN casesensitivitytest two ON one.a = two.a\").collect()\n-\n-    // TODO: sql(\"SELECT * FROM casesensitivitytest a JOIN casesensitivitytest b ON a.a = b.a\")\n+  ignore(\"case insensitivity with scala reflection joins\") {"
  }, {
    "author": {
      "login": "liancheng"
    },
    "body": "Hive 0.12 actually supports this.\n",
    "commit": "c21171ecd67835dab9441ed48e0f6b76bbbf52ad",
    "createdAt": "2014-09-16T18:50:03Z",
    "diffHunk": "@@ -57,13 +57,14 @@ class HiveResolutionSuite extends HiveComparisonTest {\n       .registerTempTable(\"caseSensitivityTest\")\n \n     sql(\"SELECT a, b, A, B, n.a, n.b, n.A, n.B FROM caseSensitivityTest\")\n+  }\n \n-    println(sql(\"SELECT * FROM casesensitivitytest one JOIN casesensitivitytest two ON one.a = two.a\").queryExecution)\n-\n-    sql(\"SELECT * FROM casesensitivitytest one JOIN casesensitivitytest two ON one.a = two.a\").collect()\n-\n-    // TODO: sql(\"SELECT * FROM casesensitivitytest a JOIN casesensitivitytest b ON a.a = b.a\")\n+  ignore(\"case insensitivity with scala reflection joins\") {"
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "Hmm what is the exception that is thrown, will #2209 fix this?  Otherwise we should open a JIRA.\n",
    "commit": "c21171ecd67835dab9441ed48e0f6b76bbbf52ad",
    "createdAt": "2014-09-16T18:51:17Z",
    "diffHunk": "@@ -57,13 +57,14 @@ class HiveResolutionSuite extends HiveComparisonTest {\n       .registerTempTable(\"caseSensitivityTest\")\n \n     sql(\"SELECT a, b, A, B, n.a, n.b, n.A, n.B FROM caseSensitivityTest\")\n+  }\n \n-    println(sql(\"SELECT * FROM casesensitivitytest one JOIN casesensitivitytest two ON one.a = two.a\").queryExecution)\n-\n-    sql(\"SELECT * FROM casesensitivitytest one JOIN casesensitivitytest two ON one.a = two.a\").collect()\n-\n-    // TODO: sql(\"SELECT * FROM casesensitivitytest a JOIN casesensitivitytest b ON a.a = b.a\")\n+  ignore(\"case insensitivity with scala reflection joins\") {"
  }],
  "prId": 2382
}]