[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Please update the style.\n",
    "commit": "734abad045a5378d14489a4e956b7a8e1c95a811",
    "createdAt": "2016-09-20T07:35:32Z",
    "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import org.apache.spark.sql.{DataFrame, QueryTest}\n+import org.apache.spark.sql.catalyst.plans.logical.{ColumnStats, Statistics}\n+import org.apache.spark.sql.execution.command.{AnalyzeColumnCommand, AnalyzeTableCommand}\n+import org.apache.spark.sql.execution.datasources.LogicalRelation\n+import org.apache.spark.sql.hive.test.TestHiveSingleton\n+import org.apache.spark.sql.test.SQLTestUtils\n+import org.apache.spark.sql.types._\n+\n+trait StatisticsTest extends QueryTest with TestHiveSingleton with SQLTestUtils {\n+\n+  def assertAnalyzeCommand(analyzeCommand: String, c: Class[_]) {\n+    val parsed = spark.sessionState.sqlParser.parsePlan(analyzeCommand)\n+    val operators = parsed.collect {\n+      case a: AnalyzeTableCommand => a\n+      case b: AnalyzeColumnCommand => b\n+      case o => o\n+    }\n+\n+    assert(operators.size === 1)\n+    if (operators(0).getClass() != c) {\n+      fail(\n+        s\"\"\"$analyzeCommand expected command: $c, but got ${operators(0)}\n+           |parsed command:\n+           |$parsed\n+           \"\"\".stripMargin)"
  }],
  "prId": 15090
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "? \n",
    "commit": "734abad045a5378d14489a4e956b7a8e1c95a811",
    "createdAt": "2016-09-20T07:37:20Z",
    "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import org.apache.spark.sql.{DataFrame, QueryTest}\n+import org.apache.spark.sql.catalyst.plans.logical.{ColumnStats, Statistics}\n+import org.apache.spark.sql.execution.command.{AnalyzeColumnCommand, AnalyzeTableCommand}\n+import org.apache.spark.sql.execution.datasources.LogicalRelation\n+import org.apache.spark.sql.hive.test.TestHiveSingleton\n+import org.apache.spark.sql.test.SQLTestUtils\n+import org.apache.spark.sql.types._\n+\n+trait StatisticsTest extends QueryTest with TestHiveSingleton with SQLTestUtils {\n+\n+  def assertAnalyzeCommand(analyzeCommand: String, c: Class[_]) {\n+    val parsed = spark.sessionState.sqlParser.parsePlan(analyzeCommand)\n+    val operators = parsed.collect {\n+      case a: AnalyzeTableCommand => a\n+      case b: AnalyzeColumnCommand => b\n+      case o => o"
  }],
  "prId": 15090
}]