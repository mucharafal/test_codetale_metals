[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "`SimpleTextSource` is just a fake source. What is the reason you made these changes?",
    "commit": "8448d7a7bfa120674b9f9c96a726b04035392bb0",
    "createdAt": "2017-03-24T18:06:50Z",
    "diffHunk": "@@ -36,7 +38,13 @@ class SimpleTextSource extends TextBasedFileFormat with DataSourceRegister {\n       sparkSession: SparkSession,\n       options: Map[String, String],\n       files: Seq[FileStatus]): Option[StructType] = {\n-    Some(DataType.fromJson(options(\"dataSchema\")).asInstanceOf[StructType])\n+    val schemaAsString = options(\"dataSchema\")\n+    val schema = try {\n+      DataType.fromJson(schemaAsString)\n+    } catch {\n+      case NonFatal(_) => DataType.fromDdl(schemaAsString)\n+    }\n+    Some(schema.asInstanceOf[StructType])"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "Aha, I missed the point. okay, I'll revert this.",
    "commit": "8448d7a7bfa120674b9f9c96a726b04035392bb0",
    "createdAt": "2017-03-25T01:19:09Z",
    "diffHunk": "@@ -36,7 +38,13 @@ class SimpleTextSource extends TextBasedFileFormat with DataSourceRegister {\n       sparkSession: SparkSession,\n       options: Map[String, String],\n       files: Seq[FileStatus]): Option[StructType] = {\n-    Some(DataType.fromJson(options(\"dataSchema\")).asInstanceOf[StructType])\n+    val schemaAsString = options(\"dataSchema\")\n+    val schema = try {\n+      DataType.fromJson(schemaAsString)\n+    } catch {\n+      case NonFatal(_) => DataType.fromDdl(schemaAsString)\n+    }\n+    Some(schema.asInstanceOf[StructType])"
  }],
  "prId": 17406
}]