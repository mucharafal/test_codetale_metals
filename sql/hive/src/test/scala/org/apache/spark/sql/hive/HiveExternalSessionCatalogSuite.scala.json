[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "The above input and output formats do not match what you specified here. Let us change it to `hive`",
    "commit": "d82e8eda4eed494604b131f1448fd93be3c1e33a",
    "createdAt": "2017-03-16T03:43:29Z",
    "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import org.apache.spark.sql.catalyst.catalog.{CatalogTestUtils, ExternalCatalog, SessionCatalogSuite}\n+import org.apache.spark.sql.hive.test.TestHiveSingleton\n+\n+class HiveExternalSessionCatalogSuite extends SessionCatalogSuite with TestHiveSingleton {\n+\n+  protected override val isHiveExternalCatalog = true\n+\n+  private val externalCatalog = {\n+    val catalog = spark.sharedState.externalCatalog\n+    catalog.asInstanceOf[HiveExternalCatalog].client.reset()\n+    catalog\n+  }\n+\n+  protected val utils = new CatalogTestUtils {\n+    override val tableInputFormat: String = \"org.apache.hadoop.mapred.SequenceFileInputFormat\"\n+    override val tableOutputFormat: String =\n+      \"org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat\"\n+    override val defaultProvider: String = \"parquet\""
  }],
  "prId": 17287
}]