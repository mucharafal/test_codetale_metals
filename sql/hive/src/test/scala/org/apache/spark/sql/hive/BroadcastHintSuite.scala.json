[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "This is fragile. You can use `collectFirst` instead. Also check the content of `BroadcastHint`.\n",
    "commit": "4023d974f34052bb29e12fd93aeb187ea12b536f",
    "createdAt": "2016-07-19T21:15:04Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import org.apache.spark.sql.QueryTest\n+import org.apache.spark.sql.catalyst.plans.logical.BroadcastHint\n+import org.apache.spark.sql.hive.test.TestHiveSingleton\n+import org.apache.spark.sql.test.SQLTestUtils\n+\n+class BroadcastHintSuite extends QueryTest with SQLTestUtils with TestHiveSingleton {\n+  test(\"broadcast hint on Hive table\") {\n+    withTable(\"hive_t\", \"hive_u\") {\n+      spark.sql(\"CREATE TABLE hive_t(a int)\")\n+      spark.sql(\"CREATE TABLE hive_u(b int)\")\n+\n+      val hive_t = spark.table(\"hive_t\").queryExecution.analyzed\n+      val hive_u = spark.table(\"hive_u\").queryExecution.analyzed\n+\n+      val plan = spark.sql(\"SELECT /*+ MAPJOIN(hive_t) */ * FROM hive_t, hive_u\")\n+        .queryExecution.analyzed\n+      assert(plan.children(0).children(0).isInstanceOf[BroadcastHint])"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Sure! No problem.\n",
    "commit": "4023d974f34052bb29e12fd93aeb187ea12b536f",
    "createdAt": "2016-07-19T21:19:45Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import org.apache.spark.sql.QueryTest\n+import org.apache.spark.sql.catalyst.plans.logical.BroadcastHint\n+import org.apache.spark.sql.hive.test.TestHiveSingleton\n+import org.apache.spark.sql.test.SQLTestUtils\n+\n+class BroadcastHintSuite extends QueryTest with SQLTestUtils with TestHiveSingleton {\n+  test(\"broadcast hint on Hive table\") {\n+    withTable(\"hive_t\", \"hive_u\") {\n+      spark.sql(\"CREATE TABLE hive_t(a int)\")\n+      spark.sql(\"CREATE TABLE hive_u(b int)\")\n+\n+      val hive_t = spark.table(\"hive_t\").queryExecution.analyzed\n+      val hive_u = spark.table(\"hive_u\").queryExecution.analyzed\n+\n+      val plan = spark.sql(\"SELECT /*+ MAPJOIN(hive_t) */ * FROM hive_t, hive_u\")\n+        .queryExecution.analyzed\n+      assert(plan.children(0).children(0).isInstanceOf[BroadcastHint])"
  }],
  "prId": 14132
}]