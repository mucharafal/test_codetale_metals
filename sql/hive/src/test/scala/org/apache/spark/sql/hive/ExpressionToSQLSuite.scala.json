[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "let's put this in sql/core rather than hive. otherwise we will need to move it again.\n",
    "commit": "1620378727920df24bf0950249e67dfc020f9be0",
    "createdAt": "2016-02-23T00:02:55Z",
    "diffHunk": "@@ -0,0 +1,271 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import scala.util.control.NonFatal\n+\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.test.SQLTestUtils\n+\n+class ExpressionToSQLSuite extends SQLBuilderTest with SQLTestUtils {",
    "line": 25
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "sure, will do it. Thanks!\n",
    "commit": "1620378727920df24bf0950249e67dfc020f9be0",
    "createdAt": "2016-02-23T00:03:46Z",
    "diffHunk": "@@ -0,0 +1,271 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import scala.util.control.NonFatal\n+\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.test.SQLTestUtils\n+\n+class ExpressionToSQLSuite extends SQLBuilderTest with SQLTestUtils {",
    "line": 25
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "Sorry, unable to move it to sql/core since this suite requires SQLBuilder and SQLBuilderTest. Both are in the hive package. Feel free to let me know if you have the other suggestions. \n",
    "commit": "1620378727920df24bf0950249e67dfc020f9be0",
    "createdAt": "2016-02-23T03:25:24Z",
    "diffHunk": "@@ -0,0 +1,271 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import scala.util.control.NonFatal\n+\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.test.SQLTestUtils\n+\n+class ExpressionToSQLSuite extends SQLBuilderTest with SQLTestUtils {",
    "line": 25
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Refactor the tests then? that much shouldn't dictate where you put non-test code\n",
    "commit": "1620378727920df24bf0950249e67dfc020f9be0",
    "createdAt": "2016-02-23T09:42:30Z",
    "diffHunk": "@@ -0,0 +1,271 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import scala.util.control.NonFatal\n+\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.test.SQLTestUtils\n+\n+class ExpressionToSQLSuite extends SQLBuilderTest with SQLTestUtils {",
    "line": 25
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "We will just move the entire suite over once we merge hive context and SQL\ncontext.\n\nOn Tuesday, February 23, 2016, Sean Owen notifications@github.com wrote:\n\n> In\n> sql/hive/src/test/scala/org/apache/spark/sql/hive/ExpressionToSQLSuite.scala\n> https://github.com/apache/spark/pull/11314#discussion_r53756196:\n> \n> > - *\n> > - \\* Unless required by applicable law or agreed to in writing, software\n> > - \\* distributed under the License is distributed on an \"AS IS\" BASIS,\n> > - \\* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n> > - \\* See the License for the specific language governing permissions and\n> > - \\* limitations under the License.\n> > - */\n> >   +\n> >   +package org.apache.spark.sql.hive\n> >   +\n> >   +import scala.util.control.NonFatal\n> >   +\n> >   +import org.apache.spark.sql.functions._\n> >   +import org.apache.spark.sql.test.SQLTestUtils\n> >   +\n> >   +class ExpressionToSQLSuite extends SQLBuilderTest with SQLTestUtils {\n> \n> Refactor the tests then? that much shouldn't dictate where you put\n> non-test code\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/apache/spark/pull/11314/files#r53756196.\n",
    "commit": "1620378727920df24bf0950249e67dfc020f9be0",
    "createdAt": "2016-02-23T09:55:05Z",
    "diffHunk": "@@ -0,0 +1,271 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import scala.util.control.NonFatal\n+\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.test.SQLTestUtils\n+\n+class ExpressionToSQLSuite extends SQLBuilderTest with SQLTestUtils {",
    "line": 25
  }],
  "prId": 11314
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "checkSqlGeneration\n",
    "commit": "1620378727920df24bf0950249e67dfc020f9be0",
    "createdAt": "2016-02-23T00:03:23Z",
    "diffHunk": "@@ -0,0 +1,271 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import scala.util.control.NonFatal\n+\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.test.SQLTestUtils\n+\n+class ExpressionToSQLSuite extends SQLBuilderTest with SQLTestUtils {\n+  import testImplicits._\n+\n+  protected override def beforeAll(): Unit = {\n+    sql(\"DROP TABLE IF EXISTS t0\")\n+    sql(\"DROP TABLE IF EXISTS t1\")\n+    sql(\"DROP TABLE IF EXISTS t2\")\n+\n+    val bytes = Array[Byte](1, 2, 3, 4)\n+    Seq((bytes, \"AQIDBA==\")).toDF(\"a\", \"b\").write.saveAsTable(\"t0\")\n+\n+    sqlContext\n+      .range(10)\n+      .select('id as 'key, concat(lit(\"val_\"), 'id) as 'value)\n+      .write\n+      .saveAsTable(\"t1\")\n+\n+    sqlContext.range(10).select('id as 'a, 'id as 'b, 'id as 'c, 'id as 'd).write.saveAsTable(\"t2\")\n+  }\n+\n+  override protected def afterAll(): Unit = {\n+    sql(\"DROP TABLE IF EXISTS t0\")\n+    sql(\"DROP TABLE IF EXISTS t1\")\n+    sql(\"DROP TABLE IF EXISTS t2\")\n+  }\n+\n+  private def checkHiveQl(hiveQl: String): Unit = {"
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "ok, will rename it. \n",
    "commit": "1620378727920df24bf0950249e67dfc020f9be0",
    "createdAt": "2016-02-23T00:04:52Z",
    "diffHunk": "@@ -0,0 +1,271 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import scala.util.control.NonFatal\n+\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.test.SQLTestUtils\n+\n+class ExpressionToSQLSuite extends SQLBuilderTest with SQLTestUtils {\n+  import testImplicits._\n+\n+  protected override def beforeAll(): Unit = {\n+    sql(\"DROP TABLE IF EXISTS t0\")\n+    sql(\"DROP TABLE IF EXISTS t1\")\n+    sql(\"DROP TABLE IF EXISTS t2\")\n+\n+    val bytes = Array[Byte](1, 2, 3, 4)\n+    Seq((bytes, \"AQIDBA==\")).toDF(\"a\", \"b\").write.saveAsTable(\"t0\")\n+\n+    sqlContext\n+      .range(10)\n+      .select('id as 'key, concat(lit(\"val_\"), 'id) as 'value)\n+      .write\n+      .saveAsTable(\"t1\")\n+\n+    sqlContext.range(10).select('id as 'a, 'id as 'b, 'id as 'c, 'id as 'd).write.saveAsTable(\"t2\")\n+  }\n+\n+  override protected def afterAll(): Unit = {\n+    sql(\"DROP TABLE IF EXISTS t0\")\n+    sql(\"DROP TABLE IF EXISTS t1\")\n+    sql(\"DROP TABLE IF EXISTS t2\")\n+  }\n+\n+  private def checkHiveQl(hiveQl: String): Unit = {"
  }],
  "prId": 11314
}]