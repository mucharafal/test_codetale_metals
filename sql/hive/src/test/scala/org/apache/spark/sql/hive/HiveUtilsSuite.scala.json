[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "we should use `try .. finally` to make sure we always set back the context class loader",
    "commit": "fea2490027c611fb9be61ea33ad4de962ccf2ffa",
    "createdAt": "2018-01-04T04:27:04Z",
    "diffHunk": "@@ -42,4 +47,29 @@ class HiveUtilsSuite extends QueryTest with SQLTestUtils with TestHiveSingleton\n       assert(hiveConf(\"foo\") === \"bar\")\n     }\n   }\n+\n+  test(\"ChildFirstURLClassLoader's parent is null\") {\n+    val conf = new SparkConf\n+    val contextClassLoader = Thread.currentThread().getContextClassLoader\n+    val loader = new FakeChildFirstURLClassLoader(Array(), contextClassLoader)\n+    Thread.currentThread().setContextClassLoader(loader)\n+    intercept[IllegalArgumentException](\n+      HiveUtils.newClientForMetadata(conf, SparkHadoopUtil.newConfiguration(conf)))\n+    Thread.currentThread().setContextClassLoader(contextClassLoader)"
  }, {
    "author": {
      "login": "yaooqinn"
    },
    "body": "ok",
    "commit": "fea2490027c611fb9be61ea33ad4de962ccf2ffa",
    "createdAt": "2018-01-04T06:05:32Z",
    "diffHunk": "@@ -42,4 +47,29 @@ class HiveUtilsSuite extends QueryTest with SQLTestUtils with TestHiveSingleton\n       assert(hiveConf(\"foo\") === \"bar\")\n     }\n   }\n+\n+  test(\"ChildFirstURLClassLoader's parent is null\") {\n+    val conf = new SparkConf\n+    val contextClassLoader = Thread.currentThread().getContextClassLoader\n+    val loader = new FakeChildFirstURLClassLoader(Array(), contextClassLoader)\n+    Thread.currentThread().setContextClassLoader(loader)\n+    intercept[IllegalArgumentException](\n+      HiveUtils.newClientForMetadata(conf, SparkHadoopUtil.newConfiguration(conf)))\n+    Thread.currentThread().setContextClassLoader(contextClassLoader)"
  }],
  "prId": 20145
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "ditto",
    "commit": "fea2490027c611fb9be61ea33ad4de962ccf2ffa",
    "createdAt": "2018-01-04T04:27:12Z",
    "diffHunk": "@@ -42,4 +47,29 @@ class HiveUtilsSuite extends QueryTest with SQLTestUtils with TestHiveSingleton\n       assert(hiveConf(\"foo\") === \"bar\")\n     }\n   }\n+\n+  test(\"ChildFirstURLClassLoader's parent is null\") {\n+    val conf = new SparkConf\n+    val contextClassLoader = Thread.currentThread().getContextClassLoader\n+    val loader = new FakeChildFirstURLClassLoader(Array(), contextClassLoader)\n+    Thread.currentThread().setContextClassLoader(loader)\n+    intercept[IllegalArgumentException](\n+      HiveUtils.newClientForMetadata(conf, SparkHadoopUtil.newConfiguration(conf)))\n+    Thread.currentThread().setContextClassLoader(contextClassLoader)\n+  }\n+\n+  test(\"ChildFirstURLClassLoader's parent is null, get spark classloader instead\") {\n+    val conf = new SparkConf\n+    val contextClassLoader = Thread.currentThread().getContextClassLoader\n+    val loader = new ChildFirstURLClassLoader(Array(), contextClassLoader)\n+    Thread.currentThread().setContextClassLoader(loader)\n+    HiveUtils.newClientForMetadata(conf, SparkHadoopUtil.newConfiguration(conf))\n+    Thread.currentThread().setContextClassLoader(contextClassLoader)"
  }],
  "prId": 20145
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "This is not a `ChildFirstURLClassLoader`, shall we make it extend `ChildFirstURLClassLoader`?",
    "commit": "fea2490027c611fb9be61ea33ad4de962ccf2ffa",
    "createdAt": "2018-01-04T04:29:02Z",
    "diffHunk": "@@ -42,4 +47,29 @@ class HiveUtilsSuite extends QueryTest with SQLTestUtils with TestHiveSingleton\n       assert(hiveConf(\"foo\") === \"bar\")\n     }\n   }\n+\n+  test(\"ChildFirstURLClassLoader's parent is null\") {\n+    val conf = new SparkConf\n+    val contextClassLoader = Thread.currentThread().getContextClassLoader\n+    val loader = new FakeChildFirstURLClassLoader(Array(), contextClassLoader)\n+    Thread.currentThread().setContextClassLoader(loader)\n+    intercept[IllegalArgumentException](\n+      HiveUtils.newClientForMetadata(conf, SparkHadoopUtil.newConfiguration(conf)))\n+    Thread.currentThread().setContextClassLoader(contextClassLoader)\n+  }\n+\n+  test(\"ChildFirstURLClassLoader's parent is null, get spark classloader instead\") {\n+    val conf = new SparkConf\n+    val contextClassLoader = Thread.currentThread().getContextClassLoader\n+    val loader = new ChildFirstURLClassLoader(Array(), contextClassLoader)\n+    Thread.currentThread().setContextClassLoader(loader)\n+    HiveUtils.newClientForMetadata(conf, SparkHadoopUtil.newConfiguration(conf))\n+    Thread.currentThread().setContextClassLoader(contextClassLoader)\n+  }\n }\n+\n+/**\n+ * A Fake [[ChildFirstURLClassLoader]] used for test\n+ */\n+private[spark] class FakeChildFirstURLClassLoader(urls: Array[URL], parent: ClassLoader)"
  }, {
    "author": {
      "login": "yaooqinn"
    },
    "body": "inheritation maketh case match",
    "commit": "fea2490027c611fb9be61ea33ad4de962ccf2ffa",
    "createdAt": "2018-01-04T06:03:14Z",
    "diffHunk": "@@ -42,4 +47,29 @@ class HiveUtilsSuite extends QueryTest with SQLTestUtils with TestHiveSingleton\n       assert(hiveConf(\"foo\") === \"bar\")\n     }\n   }\n+\n+  test(\"ChildFirstURLClassLoader's parent is null\") {\n+    val conf = new SparkConf\n+    val contextClassLoader = Thread.currentThread().getContextClassLoader\n+    val loader = new FakeChildFirstURLClassLoader(Array(), contextClassLoader)\n+    Thread.currentThread().setContextClassLoader(loader)\n+    intercept[IllegalArgumentException](\n+      HiveUtils.newClientForMetadata(conf, SparkHadoopUtil.newConfiguration(conf)))\n+    Thread.currentThread().setContextClassLoader(contextClassLoader)\n+  }\n+\n+  test(\"ChildFirstURLClassLoader's parent is null, get spark classloader instead\") {\n+    val conf = new SparkConf\n+    val contextClassLoader = Thread.currentThread().getContextClassLoader\n+    val loader = new ChildFirstURLClassLoader(Array(), contextClassLoader)\n+    Thread.currentThread().setContextClassLoader(loader)\n+    HiveUtils.newClientForMetadata(conf, SparkHadoopUtil.newConfiguration(conf))\n+    Thread.currentThread().setContextClassLoader(contextClassLoader)\n+  }\n }\n+\n+/**\n+ * A Fake [[ChildFirstURLClassLoader]] used for test\n+ */\n+private[spark] class FakeChildFirstURLClassLoader(urls: Array[URL], parent: ClassLoader)"
  }],
  "prId": 20145
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "what is this test trying to test?",
    "commit": "fea2490027c611fb9be61ea33ad4de962ccf2ffa",
    "createdAt": "2018-01-04T06:27:49Z",
    "diffHunk": "@@ -42,4 +47,41 @@ class HiveUtilsSuite extends QueryTest with SQLTestUtils with TestHiveSingleton\n       assert(hiveConf(\"foo\") === \"bar\")\n     }\n   }\n+\n+  test(\"ChildFirstURLClassLoader's parent is null\") {"
  }, {
    "author": {
      "login": "yaooqinn"
    },
    "body": "just indicates that if we don't handle child first classloader's parent, we will get caught in exception. if it bothers, i can del it",
    "commit": "fea2490027c611fb9be61ea33ad4de962ccf2ffa",
    "createdAt": "2018-01-04T06:33:41Z",
    "diffHunk": "@@ -42,4 +47,41 @@ class HiveUtilsSuite extends QueryTest with SQLTestUtils with TestHiveSingleton\n       assert(hiveConf(\"foo\") === \"bar\")\n     }\n   }\n+\n+  test(\"ChildFirstURLClassLoader's parent is null\") {"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "I think we can remove it. The below tests case would fail without your PR, that proves your patch already.",
    "commit": "fea2490027c611fb9be61ea33ad4de962ccf2ffa",
    "createdAt": "2018-01-04T07:00:13Z",
    "diffHunk": "@@ -42,4 +47,41 @@ class HiveUtilsSuite extends QueryTest with SQLTestUtils with TestHiveSingleton\n       assert(hiveConf(\"foo\") === \"bar\")\n     }\n   }\n+\n+  test(\"ChildFirstURLClassLoader's parent is null\") {"
  }],
  "prId": 20145
}]