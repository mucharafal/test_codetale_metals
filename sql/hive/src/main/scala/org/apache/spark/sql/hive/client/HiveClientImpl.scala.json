[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Could you add a comment in this line to explain why we are using `h.getViewExpandedText` instead of `h.getViewOriginalText`?",
    "commit": "b5a48daab41f8462843a062475413400482d1213",
    "createdAt": "2017-01-23T19:01:25Z",
    "diffHunk": "@@ -426,7 +426,6 @@ private[hive] class HiveClientImpl(\n         // in the function toHiveTable.\n         properties = properties.filter(kv => kv._1 != \"comment\" && kv._1 != \"EXTERNAL\"),\n         comment = properties.get(\"comment\"),\n-        viewOriginalText = Option(h.getViewOriginalText),\n         viewText = Option(h.getViewExpandedText),"
  }],
  "prId": 16679
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "BTW, do we have a test case to cover the backward compatibility? That means, Spark 2.2.0 still can use/call the view created by Spark 2.1.0?",
    "commit": "b5a48daab41f8462843a062475413400482d1213",
    "createdAt": "2017-01-24T03:16:12Z",
    "diffHunk": "@@ -426,7 +426,9 @@ private[hive] class HiveClientImpl(\n         // in the function toHiveTable.\n         properties = properties.filter(kv => kv._1 != \"comment\" && kv._1 != \"EXTERNAL\"),\n         comment = properties.get(\"comment\"),\n-        viewOriginalText = Option(h.getViewOriginalText),\n+        // In older versions of Spark(before 2.2.0), we expand the view original text and store\n+        // that into `viewExpandedText`, and that should be used in view resolution. So we get\n+        // `viewExpandedText` instead of `viewOriginalText` for viewText here.",
    "line": 7
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "IIRC, we do have such a test",
    "commit": "b5a48daab41f8462843a062475413400482d1213",
    "createdAt": "2017-01-24T03:18:00Z",
    "diffHunk": "@@ -426,7 +426,9 @@ private[hive] class HiveClientImpl(\n         // in the function toHiveTable.\n         properties = properties.filter(kv => kv._1 != \"comment\" && kv._1 != \"EXTERNAL\"),\n         comment = properties.get(\"comment\"),\n-        viewOriginalText = Option(h.getViewOriginalText),\n+        // In older versions of Spark(before 2.2.0), we expand the view original text and store\n+        // that into `viewExpandedText`, and that should be used in view resolution. So we get\n+        // `viewExpandedText` instead of `viewOriginalText` for viewText here.",
    "line": 7
  }],
  "prId": 16679
}]