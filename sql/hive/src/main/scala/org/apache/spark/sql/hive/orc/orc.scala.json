[{
  "comments": [{
    "author": {
      "login": "zhzhan"
    },
    "body": "Orc files, instead of parquet files\n",
    "commit": "601d2420c8441b3aea1c83ab92b75e2dde43cb31",
    "createdAt": "2014-11-26T23:14:00Z",
    "diffHunk": "@@ -0,0 +1,244 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive.orc\n+\n+import java.util.{Locale, Properties}\n+import scala.collection.JavaConversions._\n+\n+import org.apache.hadoop.mapreduce.Job\n+import org.apache.hadoop.mapreduce.lib.input.FileInputFormat\n+import org.apache.hadoop.hive.serde2.ColumnProjectionUtils\n+import org.apache.hadoop.io.{NullWritable, Writable}\n+import org.apache.hadoop.mapred.JobConf\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.{Path, FileStatus, FileSystem}\n+import org.apache.hadoop.hive.ql.io.orc.Reader\n+import org.apache.hadoop.hive.ql.io.orc.{OrcFile, OrcInputFormat, OrcSerde}\n+import org.apache.hadoop.hive.serde2.objectinspector.StructObjectInspector\n+\n+import org.apache.spark.sql.sources.{CatalystScan, BaseRelation, RelationProvider}\n+import org.apache.spark.sql.SQLContext\n+import org.apache.spark.annotation.DeveloperApi\n+import org.apache.spark.Logging\n+import org.apache.spark.sql.catalyst.types._\n+import org.apache.spark.sql.catalyst.expressions.{SpecificMutableRow, Attribute, Expression, Row}\n+import org.apache.spark.sql.hive.{HiveShim, HadoopTableReader, HiveMetastoreTypes}\n+import org.apache.spark.rdd.RDD\n+import org.apache.spark.sql.parquet.FileSystemHelper\n+\n+/**\n+ * Allows creation of orc based tables using the syntax\n+ * `CREATE TEMPORARY TABLE ... USING org.apache.spark.sql.orc`.\n+ * Currently the only option required is `path`, which should be the location of a collection of,\n+ * optionally partitioned, parquet files.",
    "line": 48
  }],
  "prId": 2576
}]