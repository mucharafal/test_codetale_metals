[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "`s\"${super.nodeName}(${relation.tableMeta.qualifiedName})\"` looks clearer to me, but up to you.",
    "commit": "1facc0554aae0829a19bbb7607b25ff7eda4ef8d",
    "createdAt": "2018-01-11T01:05:54Z",
    "diffHunk": "@@ -62,6 +62,8 @@ case class HiveTableScanExec(\n \n   override def conf: SQLConf = sparkSession.sessionState.conf\n \n+  override def nodeName: String = s\"${super.nodeName}-${relation.tableMeta.qualifiedName}\""
  }, {
    "author": {
      "login": "tejasapatil"
    },
    "body": "I like this format. I added a space in between for better readability",
    "commit": "1facc0554aae0829a19bbb7607b25ff7eda4ef8d",
    "createdAt": "2018-01-11T01:14:54Z",
    "diffHunk": "@@ -62,6 +62,8 @@ case class HiveTableScanExec(\n \n   override def conf: SQLConf = sparkSession.sessionState.conf\n \n+  override def nodeName: String = s\"${super.nodeName}-${relation.tableMeta.qualifiedName}\""
  }, {
    "author": {
      "login": "tejasapatil"
    },
    "body": "(updated the screenshot in the PR description)",
    "commit": "1facc0554aae0829a19bbb7607b25ff7eda4ef8d",
    "createdAt": "2018-01-11T01:18:58Z",
    "diffHunk": "@@ -62,6 +62,8 @@ case class HiveTableScanExec(\n \n   override def conf: SQLConf = sparkSession.sessionState.conf\n \n+  override def nodeName: String = s\"${super.nodeName}-${relation.tableMeta.qualifiedName}\""
  }],
  "prId": 20226
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Our `DataSourceScanExec` is using `unquotedString` in nodeName. We need to make these LeafNode consistent. Could you check all the other `LeafExecNode`?",
    "commit": "1facc0554aae0829a19bbb7607b25ff7eda4ef8d",
    "createdAt": "2018-01-11T16:36:49Z",
    "diffHunk": "@@ -62,6 +62,8 @@ case class HiveTableScanExec(\n \n   override def conf: SQLConf = sparkSession.sessionState.conf\n \n+  override def nodeName: String = s\"${super.nodeName} (${relation.tableMeta.qualifiedName})\""
  }, {
    "author": {
      "login": "tejasapatil"
    },
    "body": "[DataSourceScanExec](https://github.com/apache/spark/blob/ee56fc3432e7e328c29b88a255f7e2c2a4739754/sql/core/src/main/scala/org/apache/spark/sql/execution/DataSourceScanExec.scala#L47) is using `unquotedString` and [so does this PR](https://github.com/apache/spark/blob/da35574297d96eb750bdfee755a48defc36e284a/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/catalog/interface.scala#L265). Rest implementations of `LeafExecNode` do not override `nodeName` and / or depend on base class (ie. `TreeNode`) \r\n",
    "commit": "1facc0554aae0829a19bbb7607b25ff7eda4ef8d",
    "createdAt": "2018-01-11T18:24:06Z",
    "diffHunk": "@@ -62,6 +62,8 @@ case class HiveTableScanExec(\n \n   override def conf: SQLConf = sparkSession.sessionState.conf\n \n+  override def nodeName: String = s\"${super.nodeName} (${relation.tableMeta.qualifiedName})\""
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "How about \r\n> s\"Scan HiveTable ${relation.tableMeta.qualifiedName}\"\r\n\r\nJust to be more consistent\r\n",
    "commit": "1facc0554aae0829a19bbb7607b25ff7eda4ef8d",
    "createdAt": "2018-01-12T02:11:57Z",
    "diffHunk": "@@ -62,6 +62,8 @@ case class HiveTableScanExec(\n \n   override def conf: SQLConf = sparkSession.sessionState.conf\n \n+  override def nodeName: String = s\"${super.nodeName} (${relation.tableMeta.qualifiedName})\""
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "`DataSourceV2ScanExec` faces the same issue. How about `InMemoryTableScanExec`?",
    "commit": "1facc0554aae0829a19bbb7607b25ff7eda4ef8d",
    "createdAt": "2018-01-12T02:15:03Z",
    "diffHunk": "@@ -62,6 +62,8 @@ case class HiveTableScanExec(\n \n   override def conf: SQLConf = sparkSession.sessionState.conf\n \n+  override def nodeName: String = s\"${super.nodeName} (${relation.tableMeta.qualifiedName})\""
  }, {
    "author": {
      "login": "tejasapatil"
    },
    "body": "@gatorsmile : I have updated the PR after going through all the *ScanExec implementations\r\n\r\nChanges introduced in this PR:\r\n\r\nScan impl | overridden `nodeName`\r\n------------ | -------------\r\nDataSourceV2ScanExec | `Scan DataSourceV2 [output_attribute1, output_attribute2, ..]`\r\nExternalRDDScanExec | `Scan ExternalRDD [output_attribute1, output_attribute2, ..]`\r\nFileSourceScanExec | `Scan FileSource ${tableIdentifier.map(_.unquotedString).getOrElse(relation.location)}\"`\r\nHiveTableScanExec | `Scan HiveTable relation.tableMeta.qualifiedName`\r\nInMemoryTableScanExec | `Scan In-memory relation.tableName`\r\nLocalTableScanExec | `Scan LocalTable [output_attribute1, output_attribute2, ..]`\r\nRDDScanExec | `Scan RDD name [output_attribute1, output_attribute2, ..]`\r\nRowDataSourceScanExec | `Scan FileSource ${tableIdentifier.map(_.unquotedString).getOrElse(relation)}`\r\n\r\n\r\nThings not affected:\r\n- DataSourceScanExec : already uses `Scan relation tableIdentifier.unquotedString`\r\n- RDDScanExec forces clients to specify the `nodeName`",
    "commit": "1facc0554aae0829a19bbb7607b25ff7eda4ef8d",
    "createdAt": "2018-01-12T06:17:37Z",
    "diffHunk": "@@ -62,6 +62,8 @@ case class HiveTableScanExec(\n \n   override def conf: SQLConf = sparkSession.sessionState.conf\n \n+  override def nodeName: String = s\"${super.nodeName} (${relation.tableMeta.qualifiedName})\""
  }],
  "prId": 20226
}]