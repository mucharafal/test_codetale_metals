[{
  "comments": [{
    "author": {
      "login": "chenghao-intel"
    },
    "body": "Can we remove `hiveContext.catalog.unregisterTable(None, tableName)`? I think `hiveContext.runSqlHive(s\"DROP TABLE $tableName\")` will update the catalog in this case.\n",
    "commit": "e6ab80b5bee3380f7cb3118aa4aa2b2cfb3804ce",
    "createdAt": "2014-07-30T08:52:34Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive.execution\n+\n+import org.apache.spark.annotation.DeveloperApi\n+import org.apache.spark.rdd.RDD\n+import org.apache.spark.sql.catalyst.expressions.Row\n+import org.apache.spark.sql.execution.{Command, LeafNode}\n+import org.apache.spark.sql.hive.HiveContext\n+\n+/**\n+ * :: DeveloperApi ::\n+ * Drops a table from the metastore and removes it if it is cached.\n+ */\n+@DeveloperApi\n+case class DropTable(tableName: String) extends LeafNode with Command {\n+\n+  def hiveContext = sqlContext.asInstanceOf[HiveContext]\n+\n+  def output = Seq.empty\n+\n+  override protected[sql] lazy val sideEffectResult: Seq[Any] = {\n+    hiveContext.runSqlHive(s\"DROP TABLE $tableName\")\n+    hiveContext.catalog.unregisterTable(None, tableName)"
  }, {
    "author": {
      "login": "yhuai"
    },
    "body": "Probably not. `runSqlHive` directly passes the statement to Hive. So, only Hive metastore records will be deleted.\n",
    "commit": "e6ab80b5bee3380f7cb3118aa4aa2b2cfb3804ce",
    "createdAt": "2014-07-30T16:44:22Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive.execution\n+\n+import org.apache.spark.annotation.DeveloperApi\n+import org.apache.spark.rdd.RDD\n+import org.apache.spark.sql.catalyst.expressions.Row\n+import org.apache.spark.sql.execution.{Command, LeafNode}\n+import org.apache.spark.sql.hive.HiveContext\n+\n+/**\n+ * :: DeveloperApi ::\n+ * Drops a table from the metastore and removes it if it is cached.\n+ */\n+@DeveloperApi\n+case class DropTable(tableName: String) extends LeafNode with Command {\n+\n+  def hiveContext = sqlContext.asInstanceOf[HiveContext]\n+\n+  def output = Seq.empty\n+\n+  override protected[sql] lazy val sideEffectResult: Seq[Any] = {\n+    hiveContext.runSqlHive(s\"DROP TABLE $tableName\")\n+    hiveContext.catalog.unregisterTable(None, tableName)"
  }],
  "prId": 1650
}]