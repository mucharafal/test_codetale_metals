[{
  "comments": [{
    "author": {
      "login": "adrian-wang"
    },
    "body": "Maybe we still need the comment where we call `new hadoopIo.Text` to here, which was at line 140 in `HiveInspectors.scala`\n",
    "commit": "3ece9051a2b29ce20fc7557b22605e3fe8198f55",
    "createdAt": "2014-09-17T05:47:55Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import java.util.Properties\n+import scala.language.implicitConversions\n+import org.apache.hadoop.hive.ql.metadata.Partition\n+import org.apache.hadoop.hive.ql.plan.{FileSinkDesc, TableDesc}\n+import scala.collection.JavaConversions._\n+import org.apache.hadoop.hive.serde2.{Deserializer, ColumnProjectionUtils}\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.hive.ql.Context\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.hive.common.`type`.HiveDecimal\n+import java.net.URI\n+import org.apache.hadoop.{io => hadoopIo}\n+import org.apache.hadoop.hive.ql.stats.StatsSetupConst\n+import org.apache.hadoop.mapred.InputFormat\n+import org.apache.hadoop.hive.ql.metadata.Hive\n+import org.apache.hadoop.hive.ql.metadata.Table\n+import org.apache.hadoop.hive.ql.processors._\n+import org.apache.hadoop.hive.conf.HiveConf\n+\n+/*hive-0.12.0 support shimmer layer*/\n+object HiveShim {\n+  val version = \"0.12.0\"\n+  val metastoreDecimal = \"decimal\"\n+  def getTableDesc(serdeClass: Class[_ <: Deserializer], inputFormatClass: Class[_ <: InputFormat[_, _]], outputFormatClass: Class[_], properties: Properties) = {\n+    new TableDesc(serdeClass, inputFormatClass, outputFormatClass, properties)\n+  }\n+  def getStatsSetupConstTotalSize = StatsSetupConst.TOTAL_SIZE\n+  def createDefaultDBIfNeeded(context: HiveContext) ={  }\n+\n+  /*handle the difference in \"None\" and empty \"\"*/\n+  def getEmptyCommentsFieldValue = \"None\"\n+\n+  def convertCatalystString2Hive(s: String) = new hadoopIo.Text(s)"
  }],
  "prId": 2241
}, {
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "Use Scala doc style comments. [Spark Style Guide](https://cwiki.apache.org/confluence/display/SPARK/Spark+Code+Style+Guide)\n\nFor example:\n\n``` scala\n/**\n * A compatibility layer for interacting with Hive version 0.12.0.\n */\n```\n",
    "commit": "3ece9051a2b29ce20fc7557b22605e3fe8198f55",
    "createdAt": "2014-09-19T20:02:21Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import java.util.Properties\n+import scala.language.implicitConversions\n+import org.apache.hadoop.hive.ql.metadata.Partition\n+import org.apache.hadoop.hive.ql.plan.{FileSinkDesc, TableDesc}\n+import scala.collection.JavaConversions._\n+import org.apache.hadoop.hive.serde2.{Deserializer, ColumnProjectionUtils}\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.hive.ql.Context\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.hive.common.`type`.HiveDecimal\n+import java.net.URI\n+import org.apache.hadoop.{io => hadoopIo}\n+import org.apache.hadoop.hive.ql.stats.StatsSetupConst\n+import org.apache.hadoop.mapred.InputFormat\n+import org.apache.hadoop.hive.ql.metadata.Hive\n+import org.apache.hadoop.hive.ql.metadata.Table\n+import org.apache.hadoop.hive.ql.processors._\n+import org.apache.hadoop.hive.conf.HiveConf\n+\n+/*hive-0.12.0 support shimmer layer*/"
  }],
  "prId": 2241
}, {
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "`/** The string used to denote an empty comments field in the schema. */`\n",
    "commit": "3ece9051a2b29ce20fc7557b22605e3fe8198f55",
    "createdAt": "2014-09-19T20:04:26Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import java.util.Properties\n+import scala.language.implicitConversions\n+import org.apache.hadoop.hive.ql.metadata.Partition\n+import org.apache.hadoop.hive.ql.plan.{FileSinkDesc, TableDesc}\n+import scala.collection.JavaConversions._\n+import org.apache.hadoop.hive.serde2.{Deserializer, ColumnProjectionUtils}\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.hive.ql.Context\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.hive.common.`type`.HiveDecimal\n+import java.net.URI\n+import org.apache.hadoop.{io => hadoopIo}\n+import org.apache.hadoop.hive.ql.stats.StatsSetupConst\n+import org.apache.hadoop.mapred.InputFormat\n+import org.apache.hadoop.hive.ql.metadata.Hive\n+import org.apache.hadoop.hive.ql.metadata.Table\n+import org.apache.hadoop.hive.ql.processors._\n+import org.apache.hadoop.hive.conf.HiveConf\n+\n+/*hive-0.12.0 support shimmer layer*/\n+object HiveShim {\n+  val version = \"0.12.0\"\n+  val metastoreDecimal = \"decimal\"\n+  def getTableDesc(serdeClass: Class[_ <: Deserializer], inputFormatClass: Class[_ <: InputFormat[_, _]], outputFormatClass: Class[_], properties: Properties) = {\n+    new TableDesc(serdeClass, inputFormatClass, outputFormatClass, properties)\n+  }\n+  def getStatsSetupConstTotalSize = StatsSetupConst.TOTAL_SIZE\n+  def createDefaultDBIfNeeded(context: HiveContext) ={  }\n+\n+  /*handle the difference in \"None\" and empty \"\"*/"
  }],
  "prId": 2241
}, {
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "New line here and this is over 100 chars.\n\n``` scala\n  def getTableDesc(\n    serdeClass: Class[_ <: Deserializer],\n    inputFormatClass: Class[_ <: InputFormat[_, _]],\n    outputFormatClass: Class[_],\n    properties: Properties) = {\n```\n",
    "commit": "3ece9051a2b29ce20fc7557b22605e3fe8198f55",
    "createdAt": "2014-09-19T20:05:27Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import java.util.Properties\n+import scala.language.implicitConversions\n+import org.apache.hadoop.hive.ql.metadata.Partition\n+import org.apache.hadoop.hive.ql.plan.{FileSinkDesc, TableDesc}\n+import scala.collection.JavaConversions._\n+import org.apache.hadoop.hive.serde2.{Deserializer, ColumnProjectionUtils}\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.hive.ql.Context\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.hive.common.`type`.HiveDecimal\n+import java.net.URI\n+import org.apache.hadoop.{io => hadoopIo}\n+import org.apache.hadoop.hive.ql.stats.StatsSetupConst\n+import org.apache.hadoop.mapred.InputFormat\n+import org.apache.hadoop.hive.ql.metadata.Hive\n+import org.apache.hadoop.hive.ql.metadata.Table\n+import org.apache.hadoop.hive.ql.processors._\n+import org.apache.hadoop.hive.conf.HiveConf\n+\n+/*hive-0.12.0 support shimmer layer*/\n+object HiveShim {\n+  val version = \"0.12.0\"\n+  val metastoreDecimal = \"decimal\"\n+  def getTableDesc(serdeClass: Class[_ <: Deserializer], inputFormatClass: Class[_ <: InputFormat[_, _]], outputFormatClass: Class[_], properties: Properties) = {"
  }],
  "prId": 2241
}, {
  "comments": [{
    "author": {
      "login": "yhuai"
    },
    "body": "Do we know the reason of using `Text` at here? If it is a hive 0.12 specific case, shall we update the comment?\n",
    "commit": "3ece9051a2b29ce20fc7557b22605e3fe8198f55",
    "createdAt": "2014-09-19T20:28:13Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import java.util.Properties\n+import scala.language.implicitConversions\n+import org.apache.hadoop.hive.ql.metadata.Partition\n+import org.apache.hadoop.hive.ql.plan.{FileSinkDesc, TableDesc}\n+import scala.collection.JavaConversions._\n+import org.apache.hadoop.hive.serde2.{Deserializer, ColumnProjectionUtils}\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.hive.ql.Context\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.hive.common.`type`.HiveDecimal\n+import java.net.URI\n+import org.apache.hadoop.{io => hadoopIo}\n+import org.apache.hadoop.hive.ql.stats.StatsSetupConst\n+import org.apache.hadoop.mapred.InputFormat\n+import org.apache.hadoop.hive.ql.metadata.Hive\n+import org.apache.hadoop.hive.ql.metadata.Table\n+import org.apache.hadoop.hive.ql.processors._\n+import org.apache.hadoop.hive.conf.HiveConf\n+\n+/*hive-0.12.0 support shimmer layer*/\n+object HiveShim {\n+  val version = \"0.12.0\"\n+  val metastoreDecimal = \"decimal\"\n+  def getTableDesc(serdeClass: Class[_ <: Deserializer], inputFormatClass: Class[_ <: InputFormat[_, _]], outputFormatClass: Class[_], properties: Properties) = {\n+    new TableDesc(serdeClass, inputFormatClass, outputFormatClass, properties)\n+  }\n+  def getStatsSetupConstTotalSize = StatsSetupConst.TOTAL_SIZE\n+  def createDefaultDBIfNeeded(context: HiveContext) ={  }\n+\n+  /*handle the difference in \"None\" and empty \"\"*/\n+  def getEmptyCommentsFieldValue = \"None\"\n+\n+  def convertCatalystString2Hive(s: String) = new hadoopIo.Text(s) // TODO why should be Text?"
  }, {
    "author": {
      "login": "yhuai"
    },
    "body": "Also, I guess it will be better to use `convertCatalystStringToHive`?\n",
    "commit": "3ece9051a2b29ce20fc7557b22605e3fe8198f55",
    "createdAt": "2014-09-19T20:44:31Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import java.util.Properties\n+import scala.language.implicitConversions\n+import org.apache.hadoop.hive.ql.metadata.Partition\n+import org.apache.hadoop.hive.ql.plan.{FileSinkDesc, TableDesc}\n+import scala.collection.JavaConversions._\n+import org.apache.hadoop.hive.serde2.{Deserializer, ColumnProjectionUtils}\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.hive.ql.Context\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.hive.common.`type`.HiveDecimal\n+import java.net.URI\n+import org.apache.hadoop.{io => hadoopIo}\n+import org.apache.hadoop.hive.ql.stats.StatsSetupConst\n+import org.apache.hadoop.mapred.InputFormat\n+import org.apache.hadoop.hive.ql.metadata.Hive\n+import org.apache.hadoop.hive.ql.metadata.Table\n+import org.apache.hadoop.hive.ql.processors._\n+import org.apache.hadoop.hive.conf.HiveConf\n+\n+/*hive-0.12.0 support shimmer layer*/\n+object HiveShim {\n+  val version = \"0.12.0\"\n+  val metastoreDecimal = \"decimal\"\n+  def getTableDesc(serdeClass: Class[_ <: Deserializer], inputFormatClass: Class[_ <: InputFormat[_, _]], outputFormatClass: Class[_], properties: Properties) = {\n+    new TableDesc(serdeClass, inputFormatClass, outputFormatClass, properties)\n+  }\n+  def getStatsSetupConstTotalSize = StatsSetupConst.TOTAL_SIZE\n+  def createDefaultDBIfNeeded(context: HiveContext) ={  }\n+\n+  /*handle the difference in \"None\" and empty \"\"*/\n+  def getEmptyCommentsFieldValue = \"None\"\n+\n+  def convertCatalystString2Hive(s: String) = new hadoopIo.Text(s) // TODO why should be Text?"
  }],
  "prId": 2241
}, {
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "Should be `private[hive]`.\n",
    "commit": "3ece9051a2b29ce20fc7557b22605e3fe8198f55",
    "createdAt": "2014-09-19T22:18:38Z",
    "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import java.util.Properties\n+import scala.language.implicitConversions\n+import org.apache.hadoop.hive.ql.metadata.Partition\n+import org.apache.hadoop.hive.ql.plan.{FileSinkDesc, TableDesc}\n+import scala.collection.JavaConversions._\n+import org.apache.hadoop.hive.serde2.{Deserializer, ColumnProjectionUtils}\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.hive.ql.Context\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.hive.common.`type`.HiveDecimal\n+import java.net.URI\n+import org.apache.hadoop.{io => hadoopIo}\n+import org.apache.hadoop.hive.ql.stats.StatsSetupConst\n+import org.apache.hadoop.mapred.InputFormat\n+import org.apache.hadoop.hive.ql.metadata.Hive\n+import org.apache.hadoop.hive.ql.metadata.Table\n+import org.apache.hadoop.hive.ql.processors._\n+import org.apache.hadoop.hive.conf.HiveConf\n+\n+/*hive-0.12.0 support shimmer layer*/\n+object HiveShim {"
  }],
  "prId": 2241
}, {
  "comments": [{
    "author": {
      "login": "yhuai"
    },
    "body": "Is it necessary?\n",
    "commit": "3ece9051a2b29ce20fc7557b22605e3fe8198f55",
    "createdAt": "2014-10-04T16:00:57Z",
    "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import java.net.URI\n+import java.util.Properties\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.hive.common.`type`.HiveDecimal\n+import org.apache.hadoop.hive.conf.HiveConf\n+import org.apache.hadoop.hive.ql.Context\n+import org.apache.hadoop.hive.ql.metadata.{Hive, Partition, Table}\n+import org.apache.hadoop.hive.ql.plan.{FileSinkDesc, TableDesc}\n+import org.apache.hadoop.hive.ql.processors._\n+import org.apache.hadoop.hive.ql.stats.StatsSetupConst\n+import org.apache.hadoop.hive.serde2.{Deserializer, ColumnProjectionUtils}\n+import org.apache.hadoop.{io => hadoopIo}\n+import org.apache.hadoop.mapred.InputFormat\n+import scala.collection.JavaConversions._\n+import scala.language.implicitConversions\n+\n+/**\n+ * A compatibility layer for interacting with Hive version 0.12.0.\n+ */\n+private[hive] object HiveShim {\n+  val version = \"0.12.0\"\n+  val metastoreDecimal = \"decimal\"\n+\n+  def getTableDesc(\n+    serdeClass: Class[_ <: Deserializer],\n+    inputFormatClass: Class[_ <: InputFormat[_, _]],\n+    outputFormatClass: Class[_],\n+    properties: Properties) = {\n+    new TableDesc(serdeClass, inputFormatClass, outputFormatClass, properties)",
    "line": 50
  }, {
    "author": {
      "login": "zhzhan"
    },
    "body": "we need return TableDesc to MetastoreRelation.\n",
    "commit": "3ece9051a2b29ce20fc7557b22605e3fe8198f55",
    "createdAt": "2014-10-05T08:13:59Z",
    "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import java.net.URI\n+import java.util.Properties\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.hive.common.`type`.HiveDecimal\n+import org.apache.hadoop.hive.conf.HiveConf\n+import org.apache.hadoop.hive.ql.Context\n+import org.apache.hadoop.hive.ql.metadata.{Hive, Partition, Table}\n+import org.apache.hadoop.hive.ql.plan.{FileSinkDesc, TableDesc}\n+import org.apache.hadoop.hive.ql.processors._\n+import org.apache.hadoop.hive.ql.stats.StatsSetupConst\n+import org.apache.hadoop.hive.serde2.{Deserializer, ColumnProjectionUtils}\n+import org.apache.hadoop.{io => hadoopIo}\n+import org.apache.hadoop.mapred.InputFormat\n+import scala.collection.JavaConversions._\n+import scala.language.implicitConversions\n+\n+/**\n+ * A compatibility layer for interacting with Hive version 0.12.0.\n+ */\n+private[hive] object HiveShim {\n+  val version = \"0.12.0\"\n+  val metastoreDecimal = \"decimal\"\n+\n+  def getTableDesc(\n+    serdeClass: Class[_ <: Deserializer],\n+    inputFormatClass: Class[_ <: InputFormat[_, _]],\n+    outputFormatClass: Class[_],\n+    properties: Properties) = {\n+    new TableDesc(serdeClass, inputFormatClass, outputFormatClass, properties)",
    "line": 50
  }],
  "prId": 2241
}, {
  "comments": [{
    "author": {
      "login": "yhuai"
    },
    "body": "It will be good to make the return type consistent.\n",
    "commit": "3ece9051a2b29ce20fc7557b22605e3fe8198f55",
    "createdAt": "2014-10-04T17:34:43Z",
    "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.hive\n+\n+import java.net.URI\n+import java.util.Properties\n+import org.apache.hadoop.conf.Configuration\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.hive.common.`type`.HiveDecimal\n+import org.apache.hadoop.hive.conf.HiveConf\n+import org.apache.hadoop.hive.ql.Context\n+import org.apache.hadoop.hive.ql.metadata.{Hive, Partition, Table}\n+import org.apache.hadoop.hive.ql.plan.{FileSinkDesc, TableDesc}\n+import org.apache.hadoop.hive.ql.processors._\n+import org.apache.hadoop.hive.ql.stats.StatsSetupConst\n+import org.apache.hadoop.hive.serde2.{Deserializer, ColumnProjectionUtils}\n+import org.apache.hadoop.{io => hadoopIo}\n+import org.apache.hadoop.mapred.InputFormat\n+import scala.collection.JavaConversions._\n+import scala.language.implicitConversions\n+\n+/**\n+ * A compatibility layer for interacting with Hive version 0.12.0.\n+ */\n+private[hive] object HiveShim {\n+  val version = \"0.12.0\"\n+  val metastoreDecimal = \"decimal\"\n+\n+  def getTableDesc(\n+    serdeClass: Class[_ <: Deserializer],\n+    inputFormatClass: Class[_ <: InputFormat[_, _]],\n+    outputFormatClass: Class[_],\n+    properties: Properties) = {\n+    new TableDesc(serdeClass, inputFormatClass, outputFormatClass, properties)\n+  }\n+\n+  def getStatsSetupConstTotalSize = StatsSetupConst.TOTAL_SIZE\n+\n+  def createDefaultDBIfNeeded(context: HiveContext) ={  }\n+\n+  /** The string used to denote an empty comments field in the schema. */\n+  def getEmptyCommentsFieldValue = \"None\"\n+\n+  def getCommandProcessor(cmd: Array[String], conf: HiveConf) =  {\n+    CommandProcessorFactory.get(cmd(0), conf)\n+  }\n+\n+  def createDecimal(bd: java.math.BigDecimal): HiveDecimal = {\n+    new HiveDecimal(bd)\n+  }\n+\n+  def appendReadColumns(conf: Configuration, ids: Seq[Integer], names: Seq[String]) {\n+    ColumnProjectionUtils.appendReadColumnIDs(conf, ids)\n+    ColumnProjectionUtils.appendReadColumnNames(conf, names)\n+  }\n+\n+  def getExternalTmpPath(context: Context, uri: URI): String = {"
  }],
  "prId": 2241
}]