[{
  "comments": [{
    "author": {
      "login": "steveloughran"
    },
    "body": "-assuming that the source data is not changed in any way. I'd avoid making any comments about what happens then. Maybe make that a broader requirement upfront: Spark assumes that the data does not change in size/structure/value during the query. If it does, any operation may raise an exception or return invalid/inconsistent data.\r\n\r\nThat makes for a nice disclaimer: if it's a database with the right ACID level, updates to a source may not be visible. If it's a CSV file, nobody knows what will happen.",
    "commit": "1e7dca3a57582dee4431878f21a95e5c8a28e56b",
    "createdAt": "2017-11-01T10:35:44Z",
    "diffHunk": "@@ -34,11 +34,17 @@\n \n   /**\n    * Proceed to next record, returns false if there is no more records.\n+   *\n+   * If an exception was thrown, the corresponding Spark task would fail and get retried until\n+   * hitting the maximum retry times.\n    */\n   boolean next();\n \n   /**\n    * Return the current record. This method should return same value until `next` is called.\n+   *"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "> This method should return same value until `next` is called.\r\n\r\nare you talking about this requirement? I think this is a strong requirement for `next/get` pattern, like `hasNext` should return same value until `next` is called, for the `hasNext/next` pattern.",
    "commit": "1e7dca3a57582dee4431878f21a95e5c8a28e56b",
    "createdAt": "2017-11-01T11:48:30Z",
    "diffHunk": "@@ -34,11 +34,17 @@\n \n   /**\n    * Proceed to next record, returns false if there is no more records.\n+   *\n+   * If an exception was thrown, the corresponding Spark task would fail and get retried until\n+   * hitting the maximum retry times.\n    */\n   boolean next();\n \n   /**\n    * Return the current record. This method should return same value until `next` is called.\n+   *"
  }],
  "prId": 19623
}, {
  "comments": [{
    "author": {
      "login": "rdblue"
    },
    "body": "Should clarify when it is okay to throw IOException with `@throws`.",
    "commit": "1e7dca3a57582dee4431878f21a95e5c8a28e56b",
    "createdAt": "2017-11-03T17:38:07Z",
    "diffHunk": "@@ -34,11 +35,17 @@\n \n   /**\n    * Proceed to next record, returns false if there is no more records.\n+   *\n+   * If this method fails (by throwing an exception), the corresponding Spark task would fail and\n+   * get retried until hitting the maximum retry times.\n    */\n-  boolean next();\n+  boolean next() throws IOException;"
  }],
  "prId": 19623
}]