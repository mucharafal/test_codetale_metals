[{
  "comments": [{
    "author": {
      "login": "rdblue"
    },
    "body": "Why are `BatchScan` and `PartitionReaderFactory` different interfaces?",
    "commit": "9f63721677cea627f43f7d536bb32b588cee30a3",
    "createdAt": "2018-10-19T21:23:43Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2.reader;\n+\n+import org.apache.spark.annotation.InterfaceStability;\n+import org.apache.spark.sql.sources.v2.DataSourceOptions;\n+import org.apache.spark.sql.sources.v2.SupportsBatchRead;\n+import org.apache.spark.sql.sources.v2.Table;\n+\n+/**\n+ * A {@link Scan} for batch queries.\n+ *\n+ * The execution engine will get an instance of {@link Table} first, then call\n+ * {@link Table#newScanConfigBuilder(DataSourceOptions)} and create an instance of\n+ * {@link ScanConfig}. The {@link ScanConfigBuilder} can apply operator pushdown and keep the\n+ * pushdown result in {@link ScanConfig}. Then\n+ * {@link SupportsBatchRead#createBatchScan(ScanConfig, DataSourceOptions)} will be called to create\n+ * a {@link BatchScan} instance, which will be used to create input partitions and reader factory to\n+ * scan data from the data source with a Spark job.\n+ */\n+@InterfaceStability.Evolving\n+public interface BatchScan extends Scan {\n+\n+  /**\n+   * Returns a factory, which produces one {@link PartitionReader} for one {@link InputPartition}.\n+   */\n+  PartitionReaderFactory createReaderFactory();",
    "line": 42
  }],
  "prId": 22547
}]