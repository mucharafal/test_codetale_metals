[{
  "comments": [{
    "author": {
      "login": "jiangxb1987"
    },
    "body": "`numElements` or `length`?",
    "commit": "182b4041e31b55c2c07c14813a66d6904ae61c19",
    "createdAt": "2018-02-01T00:42:33Z",
    "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.vectorized;\n+\n+import org.apache.spark.sql.catalyst.util.MapData;\n+\n+/**\n+ * Map abstraction in {@link ColumnVector}.\n+ */\n+public final class ColumnarMap extends MapData {\n+  private final ColumnarArray keys;\n+  private final ColumnarArray values;\n+  private final int length;\n+\n+  public ColumnarMap(ColumnVector keys, ColumnVector values, int offset, int length) {\n+    this.length = length;\n+    this.keys = new ColumnarArray(keys, offset, length);\n+    this.values = new ColumnarArray(values, offset, length);\n+  }\n+\n+  @Override\n+  public int numElements() { return length; }",
    "line": 37
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "This is a API from parent, we can't change it.",
    "commit": "182b4041e31b55c2c07c14813a66d6904ae61c19",
    "createdAt": "2018-02-01T02:03:38Z",
    "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.vectorized;\n+\n+import org.apache.spark.sql.catalyst.util.MapData;\n+\n+/**\n+ * Map abstraction in {@link ColumnVector}.\n+ */\n+public final class ColumnarMap extends MapData {\n+  private final ColumnarArray keys;\n+  private final ColumnarArray values;\n+  private final int length;\n+\n+  public ColumnarMap(ColumnVector keys, ColumnVector values, int offset, int length) {\n+    this.length = length;\n+    this.keys = new ColumnarArray(keys, offset, length);\n+    this.values = new ColumnarArray(values, offset, length);\n+  }\n+\n+  @Override\n+  public int numElements() { return length; }",
    "line": 37
  }],
  "prId": 20450
}]