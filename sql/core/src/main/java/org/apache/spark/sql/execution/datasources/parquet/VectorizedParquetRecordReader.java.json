[{
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "Can you avoid this class of problem in the future by simply removing the single-argument `allocate` method or the default value of `memMode`?\n",
    "commit": "cc0eb4f6545c0f4fcd2fe721dece0c390fa38566",
    "createdAt": "2016-03-30T19:01:22Z",
    "diffHunk": "@@ -191,7 +191,7 @@ public void initBatch(MemoryMode memMode, StructType partitionColumns,\n       }\n     }\n \n-    columnarBatch = ColumnarBatch.allocate(batchSchema);\n+    columnarBatch = ColumnarBatch.allocate(batchSchema, memMode);",
    "line": 5
  }, {
    "author": {
      "login": "sameeragarwal"
    },
    "body": "I considered it, but the single-argument `allocate` is currently also used in `DataSourceStrategy`. Can we change it there? cc @nongli \n",
    "commit": "cc0eb4f6545c0f4fcd2fe721dece0c390fa38566",
    "createdAt": "2016-03-30T19:09:02Z",
    "diffHunk": "@@ -191,7 +191,7 @@ public void initBatch(MemoryMode memMode, StructType partitionColumns,\n       }\n     }\n \n-    columnarBatch = ColumnarBatch.allocate(batchSchema);\n+    columnarBatch = ColumnarBatch.allocate(batchSchema, memMode);",
    "line": 5
  }],
  "prId": 12070
}]