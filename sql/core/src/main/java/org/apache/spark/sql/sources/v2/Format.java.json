[{
  "comments": [{
    "author": {
      "login": "rdblue"
    },
    "body": "Why is there both Format and DataSourceV2? What does DataSourceV2 do?",
    "commit": "9f63721677cea627f43f7d536bb32b588cee30a3",
    "createdAt": "2018-10-19T22:37:42Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2;\n+\n+import org.apache.spark.annotation.InterfaceStability;\n+import org.apache.spark.sql.sources.DataSourceRegister;\n+import org.apache.spark.sql.types.StructType;\n+\n+/**\n+ * The base interface for data source v2. Implementations must have a public, 0-arg constructor.\n+ *\n+ * The major responsibility of this interface is to return a {@link Table} for read/write.\n+ */\n+@InterfaceStability.Evolving\n+public interface Format extends DataSourceV2 {",
    "line": 30
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "the write API has not been migrated and still need `DataSourceV2`",
    "commit": "9f63721677cea627f43f7d536bb32b588cee30a3",
    "createdAt": "2018-10-20T01:45:27Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2;\n+\n+import org.apache.spark.annotation.InterfaceStability;\n+import org.apache.spark.sql.sources.DataSourceRegister;\n+import org.apache.spark.sql.types.StructType;\n+\n+/**\n+ * The base interface for data source v2. Implementations must have a public, 0-arg constructor.\n+ *\n+ * The major responsibility of this interface is to return a {@link Table} for read/write.\n+ */\n+@InterfaceStability.Evolving\n+public interface Format extends DataSourceV2 {",
    "line": 30
  }],
  "prId": 22547
}, {
  "comments": [{
    "author": {
      "login": "rdblue"
    },
    "body": "Why is it necessary to pass table name and database to Format? Format should only be used in 2 places to create tables. First, in the DataFrameReader (or writer) API when a format is specified directly instead of a catalog/database/table or catalog/path. Second, it would be used in catalogs that support pluggable implementations, like the current session catalog, which needs to dynamically instantiate implementations based on the table's provider.",
    "commit": "9f63721677cea627f43f7d536bb32b588cee30a3",
    "createdAt": "2018-10-19T22:40:01Z",
    "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2;\n+\n+import org.apache.spark.annotation.InterfaceStability;\n+import org.apache.spark.sql.sources.DataSourceRegister;\n+import org.apache.spark.sql.types.StructType;\n+\n+/**\n+ * The base interface for data source v2. Implementations must have a public, 0-arg constructor.\n+ *\n+ * The major responsibility of this interface is to return a {@link Table} for read/write.\n+ */\n+@InterfaceStability.Evolving\n+public interface Format extends DataSourceV2 {\n+\n+  /**\n+   * Return a {@link Table} instance to do read/write with user-specified options.\n+   *\n+   * @param options the user-specified options that can identify a table, e.g. path, table name,",
    "line": 35
  }],
  "prId": 22547
}]