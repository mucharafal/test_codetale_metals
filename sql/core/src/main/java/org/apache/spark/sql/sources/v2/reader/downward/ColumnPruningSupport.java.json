[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "-> `the required`",
    "commit": "d2c86f4339d59f227bef61b1c97f9770ce1233b9",
    "createdAt": "2017-09-12T05:34:31Z",
    "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2.reader.downward;\n+\n+import org.apache.spark.sql.types.StructType;\n+\n+/**\n+ * A mix-in interface for `DataSourceV2Reader`. Users can implement this interface to only read\n+ * required columns/nested fields during scan."
  }],
  "prId": 19136
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "`the unnecessary `",
    "commit": "d2c86f4339d59f227bef61b1c97f9770ce1233b9",
    "createdAt": "2017-09-12T05:35:55Z",
    "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2.reader.downward;\n+\n+import org.apache.spark.sql.types.StructType;\n+\n+/**\n+ * A mix-in interface for `DataSourceV2Reader`. Users can implement this interface to only read\n+ * required columns/nested fields during scan.\n+ */\n+public interface ColumnPruningSupport {\n+\n+  /**\n+   * Apply column pruning w.r.t. the given requiredSchema.\n+   *\n+   * Implementation should try its best to prune unnecessary columns/nested fields, but it's also"
  }],
  "prId": 19136
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "link this to readSchema function",
    "commit": "d2c86f4339d59f227bef61b1c97f9770ce1233b9",
    "createdAt": "2017-09-13T13:45:32Z",
    "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2.reader.downward;\n+\n+import org.apache.spark.sql.types.StructType;\n+\n+/**\n+ * A mix-in interface for `DataSourceV2Reader`. Users can implement this interface to only read the\n+ * required columns/nested fields during scan.\n+ */\n+public interface ColumnPruningSupport {\n+\n+  /**\n+   * Apply column pruning w.r.t. the given requiredSchema.\n+   *\n+   * Implementation should try its best to prune the unnecessary columns/nested fields, but it's\n+   * also OK to do the pruning partially, e.g., a data source may not be able to prune nested\n+   * fields, and only prune top-level columns.\n+   */\n+  void pruneColumns(StructType requiredSchema);"
  }],
  "prId": 19136
}]