[{
  "comments": [{
    "author": {
      "login": "steveloughran"
    },
    "body": "should throw IOE as well, if possible",
    "commit": "1e7dca3a57582dee4431878f21a95e5c8a28e56b",
    "createdAt": "2017-11-01T17:22:04Z",
    "diffHunk": "@@ -72,7 +74,7 @@\n    * should still \"hide\" the written data and ask the {@link DataSourceV2Writer} at driver side to\n    * do the final commitment via {@link WriterCommitMessage}.\n    *\n-   * If this method fails(throw exception), {@link #abort()} will be called and this data writer is\n+   * If an exception was thrown, {@link #abort()} would be called and this data writer was\n    * considered to be failed.\n    */\n   WriterCommitMessage commit();"
  }],
  "prId": 19623
}, {
  "comments": [{
    "author": {
      "login": "steveloughran"
    },
    "body": "May as well declare throws IOE here too, because things invoked are likely to declare that, and whatever calls this is going to need to be catching and downgrading all exceptions anyway",
    "commit": "1e7dca3a57582dee4431878f21a95e5c8a28e56b",
    "createdAt": "2017-11-01T17:23:15Z",
    "diffHunk": "@@ -84,9 +86,9 @@\n    * This method will only be called if there is one record failed to write, or {@link #commit()}\n    * failed.\n    *\n-   * If this method fails(throw exception), the underlying data source may have garbage that need\n-   * to be cleaned by {@link DataSourceV2Writer#abort(WriterCommitMessage[])} or manually, but\n-   * these garbage should not be visible to data source readers.\n+   * If an exception was thrown, the underlying data source may have garbage that need to be\n+   * cleaned by {@link DataSourceV2Writer#abort(WriterCommitMessage[])} or manually, but these\n+   * garbage should not be visible to data source readers.\n    */\n   void abort();"
  }],
  "prId": 19623
}]