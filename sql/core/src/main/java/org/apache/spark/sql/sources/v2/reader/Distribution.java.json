[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "`distributed among the data partition(one DataReader outputs data for one partition).`",
    "commit": "5d6c4fe7bd4b6ffaa9dbf6a0d6eeed169e76228c",
    "createdAt": "2018-01-29T07:14:36Z",
    "diffHunk": "@@ -21,9 +21,9 @@\n \n /**\n  * An interface to represent data distribution requirement, which specifies how the records should\n- * be distributed among the {@link ReadTask}s that are returned by\n- * {@link DataSourceV2Reader#createReadTasks()}. Note that this interface has nothing to do with\n- * the data ordering inside one partition(the output records of a single {@link ReadTask}).\n+ * be distributed among the {@link DataReaderFactory}s that are returned by"
  }],
  "prId": 20397
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "a single DataReader",
    "commit": "5d6c4fe7bd4b6ffaa9dbf6a0d6eeed169e76228c",
    "createdAt": "2018-01-29T07:14:55Z",
    "diffHunk": "@@ -21,9 +21,9 @@\n \n /**\n  * An interface to represent data distribution requirement, which specifies how the records should\n- * be distributed among the {@link ReadTask}s that are returned by\n- * {@link DataSourceV2Reader#createReadTasks()}. Note that this interface has nothing to do with\n- * the data ordering inside one partition(the output records of a single {@link ReadTask}).\n+ * be distributed among the {@link DataReaderFactory}s that are returned by\n+ * {@link DataSourceV2Reader#createDataReaderFactories()}. Note that this interface has nothing to do with\n+ * the data ordering inside one partition(the output records of a single {@link DataReaderFactory})."
  }],
  "prId": 20397
}]