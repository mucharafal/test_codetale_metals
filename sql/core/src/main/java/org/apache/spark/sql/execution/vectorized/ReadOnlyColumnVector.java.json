[{
  "comments": [{
    "author": {
      "login": "kiszk"
    },
    "body": "Is there any reason not to accept `dataType` as one of argument? To have the argument would be more flexible for future usages.",
    "commit": "2d1dad9ac6bc2cfa4a4dcad32ef99464bc7f6541",
    "createdAt": "2017-07-19T17:34:38Z",
    "diffHunk": "@@ -0,0 +1,250 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.vectorized;\n+\n+import org.apache.spark.memory.MemoryMode;\n+import org.apache.spark.sql.types.*;\n+\n+/**\n+ * An abstract class for read-only column vector.\n+ */\n+public abstract class ReadOnlyColumnVector extends ColumnVector {\n+\n+  protected ReadOnlyColumnVector(int capacity, MemoryMode memMode) {"
  }, {
    "author": {
      "login": "ueshin"
    },
    "body": "I see, I'll modify it to accept `dataType` but I guess we shouldn't pass it to `ColumnVector` to avoid illegally allocating child columns.",
    "commit": "2d1dad9ac6bc2cfa4a4dcad32ef99464bc7f6541",
    "createdAt": "2017-07-20T04:17:03Z",
    "diffHunk": "@@ -0,0 +1,250 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.vectorized;\n+\n+import org.apache.spark.memory.MemoryMode;\n+import org.apache.spark.sql.types.*;\n+\n+/**\n+ * An abstract class for read-only column vector.\n+ */\n+public abstract class ReadOnlyColumnVector extends ColumnVector {\n+\n+  protected ReadOnlyColumnVector(int capacity, MemoryMode memMode) {"
  }],
  "prId": 18680
}, {
  "comments": [{
    "author": {
      "login": "BryanCutler"
    },
    "body": "Wouldn't it be better to refactor `ColumnVector` into classes that separate reading/writing so you could just extend the read portion instead of making this class that throws exceptions on writes?  e.g.\r\n\r\nColumnVector -> ColumnVectorWritable -> ColumnVectorReadable\r\nArrowColumnVector -> ColumnVectorReadable",
    "commit": "2d1dad9ac6bc2cfa4a4dcad32ef99464bc7f6541",
    "createdAt": "2017-07-19T17:55:14Z",
    "diffHunk": "@@ -0,0 +1,250 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.vectorized;\n+\n+import org.apache.spark.memory.MemoryMode;\n+import org.apache.spark.sql.types.*;\n+\n+/**\n+ * An abstract class for read-only column vector.\n+ */\n+public abstract class ReadOnlyColumnVector extends ColumnVector {",
    "line": 26
  }, {
    "author": {
      "login": "ueshin"
    },
    "body": "I agree that it'd be better to refactor `ColumnVector`, but I think `ColumnVector` is related to `ColumnarBatch` or other classes, so we should do it, and also refactor `ColumnarBatch` at the same time, in the future PRs.",
    "commit": "2d1dad9ac6bc2cfa4a4dcad32ef99464bc7f6541",
    "createdAt": "2017-07-20T05:02:08Z",
    "diffHunk": "@@ -0,0 +1,250 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.vectorized;\n+\n+import org.apache.spark.memory.MemoryMode;\n+import org.apache.spark.sql.types.*;\n+\n+/**\n+ * An abstract class for read-only column vector.\n+ */\n+public abstract class ReadOnlyColumnVector extends ColumnVector {",
    "line": 26
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "+1 on separating the read/write, we should definitely do this before we publish the `ColumnVector` interfaces.",
    "commit": "2d1dad9ac6bc2cfa4a4dcad32ef99464bc7f6541",
    "createdAt": "2017-07-20T07:49:26Z",
    "diffHunk": "@@ -0,0 +1,250 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.vectorized;\n+\n+import org.apache.spark.memory.MemoryMode;\n+import org.apache.spark.sql.types.*;\n+\n+/**\n+ * An abstract class for read-only column vector.\n+ */\n+public abstract class ReadOnlyColumnVector extends ColumnVector {",
    "line": 26
  }],
  "prId": 18680
}]