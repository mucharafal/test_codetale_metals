[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "to avoid the expensive boxing, how about `public boolean getBoolean(String key, boolean defaultValue)`? This is also consistent with SparkConf.getXXX",
    "commit": "7d87edcccc0573554b6b43e0cac17994652397bb",
    "createdAt": "2017-12-06T12:45:12Z",
    "diffHunk": "@@ -49,4 +49,22 @@ public DataSourceV2Options(Map<String, String> originalMap) {\n   public Optional<String> get(String key) {\n     return Optional.ofNullable(keyLowerCasedMap.get(toLowerCase(key)));\n   }\n+\n+  public Optional<Boolean> getBoolean(String key) {"
  }, {
    "author": {
      "login": "skambha"
    },
    "body": "good idea.   \r\n\r\n1. So I have implemented the getBoolean, getInt, and getLong using the defaultValue and added unit tests for it. \r\n \r\n2. For now, I have left the other methods as well that return Optional<> keeping in line with the getString as it may still have some value.    \r\n\r\nPlease take a look. \r\n\r\nIf we don't want (2), I can remove the version of the getBoolean, getLong, getInt that doesn't take the defaultValue.  \r\n\r\nThanks for your comments.",
    "commit": "7d87edcccc0573554b6b43e0cac17994652397bb",
    "createdAt": "2017-12-06T23:04:28Z",
    "diffHunk": "@@ -49,4 +49,22 @@ public DataSourceV2Options(Map<String, String> originalMap) {\n   public Optional<String> get(String key) {\n     return Optional.ofNullable(keyLowerCasedMap.get(toLowerCase(key)));\n   }\n+\n+  public Optional<Boolean> getBoolean(String key) {"
  }, {
    "author": {
      "login": "skambha"
    },
    "body": "Per @gatorsmile , I have gone and removed the version of the methods that doesn't take the default value.  ",
    "commit": "7d87edcccc0573554b6b43e0cac17994652397bb",
    "createdAt": "2017-12-06T23:10:50Z",
    "diffHunk": "@@ -49,4 +49,22 @@ public DataSourceV2Options(Map<String, String> originalMap) {\n   public Optional<String> get(String key) {\n     return Optional.ofNullable(keyLowerCasedMap.get(toLowerCase(key)));\n   }\n+\n+  public Optional<Boolean> getBoolean(String key) {"
  }],
  "prId": 19902
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Can you also remove the three APIs without the default values?",
    "commit": "7d87edcccc0573554b6b43e0cac17994652397bb",
    "createdAt": "2017-12-06T23:02:59Z",
    "diffHunk": "@@ -49,4 +49,41 @@ public DataSourceV2Options(Map<String, String> originalMap) {\n   public Optional<String> get(String key) {\n     return Optional.ofNullable(keyLowerCasedMap.get(toLowerCase(key)));\n   }\n+\n+  public Optional<Boolean> getBoolean(String key) {\n+    String lcaseKey = toLowerCase(key);\n+    return Optional.ofNullable(keyLowerCasedMap.containsKey(lcaseKey) ?\n+      Boolean.parseBoolean(keyLowerCasedMap.get(lcaseKey)) : null);\n+  }\n+\n+  public Optional<Integer> getInt(String key) {\n+    String lcaseKey = toLowerCase(key);\n+    return Optional.ofNullable(keyLowerCasedMap.containsKey(lcaseKey) ?\n+      Integer.parseInt(keyLowerCasedMap.get(lcaseKey)) : null);\n+  }\n+\n+  public Optional<Long> getLong(String key) {"
  }, {
    "author": {
      "login": "skambha"
    },
    "body": "Sure. Let me post another commit.  Thanks.\r\n",
    "commit": "7d87edcccc0573554b6b43e0cac17994652397bb",
    "createdAt": "2017-12-06T23:05:14Z",
    "diffHunk": "@@ -49,4 +49,41 @@ public DataSourceV2Options(Map<String, String> originalMap) {\n   public Optional<String> get(String key) {\n     return Optional.ofNullable(keyLowerCasedMap.get(toLowerCase(key)));\n   }\n+\n+  public Optional<Boolean> getBoolean(String key) {\n+    String lcaseKey = toLowerCase(key);\n+    return Optional.ofNullable(keyLowerCasedMap.containsKey(lcaseKey) ?\n+      Boolean.parseBoolean(keyLowerCasedMap.get(lcaseKey)) : null);\n+  }\n+\n+  public Optional<Integer> getInt(String key) {\n+    String lcaseKey = toLowerCase(key);\n+    return Optional.ofNullable(keyLowerCasedMap.containsKey(lcaseKey) ?\n+      Integer.parseInt(keyLowerCasedMap.get(lcaseKey)) : null);\n+  }\n+\n+  public Optional<Long> getLong(String key) {"
  }],
  "prId": 19902
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": ">   /** Get a parameter as a boolean, falling back to a default if not set */\r\n",
    "commit": "7d87edcccc0573554b6b43e0cac17994652397bb",
    "createdAt": "2017-12-06T23:11:45Z",
    "diffHunk": "@@ -49,4 +49,23 @@ public DataSourceV2Options(Map<String, String> originalMap) {\n   public Optional<String> get(String key) {\n     return Optional.ofNullable(keyLowerCasedMap.get(toLowerCase(key)));\n   }\n+",
    "line": 4
  }, {
    "author": {
      "login": "skambha"
    },
    "body": "Thanks.  Is it ok if I modify the comment  for the  method a bit to this: \r\n\r\n```\r\n  /**\r\n   * Returns the boolean value to which the specified key is mapped, \r\n   * or defaultValue if there is no mapping for the key.\r\n   * The key match is case-insensitive\r\n   */\r\n```",
    "commit": "7d87edcccc0573554b6b43e0cac17994652397bb",
    "createdAt": "2017-12-06T23:39:07Z",
    "diffHunk": "@@ -49,4 +49,23 @@ public DataSourceV2Options(Map<String, String> originalMap) {\n   public Optional<String> get(String key) {\n     return Optional.ofNullable(keyLowerCasedMap.get(toLowerCase(key)));\n   }\n+",
    "line": 4
  }],
  "prId": 19902
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "/** Get a parameter as an integer, falling back to a default if not set */",
    "commit": "7d87edcccc0573554b6b43e0cac17994652397bb",
    "createdAt": "2017-12-06T23:11:54Z",
    "diffHunk": "@@ -49,4 +49,23 @@ public DataSourceV2Options(Map<String, String> originalMap) {\n   public Optional<String> get(String key) {\n     return Optional.ofNullable(keyLowerCasedMap.get(toLowerCase(key)));\n   }\n+\n+  public boolean getBoolean(String key, boolean defaultValue) {\n+    String lcaseKey = toLowerCase(key);\n+    return keyLowerCasedMap.containsKey(lcaseKey) ?\n+      Boolean.parseBoolean(keyLowerCasedMap.get(lcaseKey)) : defaultValue;\n+  }\n+\n+  public int getInt(String key, int defaultValue) {"
  }],
  "prId": 19902
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "  /** Get a parameter as a long, falling back to a default if not set */\r\n",
    "commit": "7d87edcccc0573554b6b43e0cac17994652397bb",
    "createdAt": "2017-12-06T23:12:03Z",
    "diffHunk": "@@ -49,4 +49,23 @@ public DataSourceV2Options(Map<String, String> originalMap) {\n   public Optional<String> get(String key) {\n     return Optional.ofNullable(keyLowerCasedMap.get(toLowerCase(key)));\n   }\n+\n+  public boolean getBoolean(String key, boolean defaultValue) {\n+    String lcaseKey = toLowerCase(key);\n+    return keyLowerCasedMap.containsKey(lcaseKey) ?\n+      Boolean.parseBoolean(keyLowerCasedMap.get(lcaseKey)) : defaultValue;\n+  }\n+\n+  public int getInt(String key, int defaultValue) {\n+    String lcaseKey = toLowerCase(key);\n+    return keyLowerCasedMap.containsKey(lcaseKey) ?\n+      Integer.parseInt(keyLowerCasedMap.get(lcaseKey)) : defaultValue;\n+  }\n+\n+  public long getLong(String key, long defaultValue) {"
  }],
  "prId": 19902
}]