[{
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "Unused import?",
    "commit": "538bc864f8ebb8d1b7e63c26806f209f2c3b0fc4",
    "createdAt": "2018-02-07T04:03:59Z",
    "diffHunk": "@@ -20,6 +20,7 @@\n import java.io.Serializable;\n \n import org.apache.spark.annotation.InterfaceStability;\n+import org.apache.spark.scheduler.OutputCommitCoordinator;"
  }, {
    "author": {
      "login": "rdblue"
    },
    "body": "Fixed.",
    "commit": "538bc864f8ebb8d1b7e63c26806f209f2c3b0fc4",
    "createdAt": "2018-02-07T16:59:40Z",
    "diffHunk": "@@ -20,6 +20,7 @@\n import java.io.Serializable;\n \n import org.apache.spark.annotation.InterfaceStability;\n+import org.apache.spark.scheduler.OutputCommitCoordinator;"
  }],
  "prId": 20490
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "it's weird to put this method in `DataWriterFactory`, as it's not related to factory. How about we put it in `DataSourceWriter`?",
    "commit": "538bc864f8ebb8d1b7e63c26806f209f2c3b0fc4",
    "createdAt": "2018-02-08T10:57:50Z",
    "diffHunk": "@@ -32,6 +32,16 @@\n @InterfaceStability.Evolving\n public interface DataWriterFactory<T> extends Serializable {\n \n+  /**\n+   * Returns whether Spark should use the OutputCommitCoordinator to ensure that only one attempt\n+   * for each task commits.\n+   *\n+   * @return true if commit coordinator should be used, false otherwise.\n+   */\n+  default boolean useCommitCoordinator() {"
  }, {
    "author": {
      "login": "rdblue"
    },
    "body": "I moved it. Good idea.",
    "commit": "538bc864f8ebb8d1b7e63c26806f209f2c3b0fc4",
    "createdAt": "2018-02-08T17:34:30Z",
    "diffHunk": "@@ -32,6 +32,16 @@\n @InterfaceStability.Evolving\n public interface DataWriterFactory<T> extends Serializable {\n \n+  /**\n+   * Returns whether Spark should use the OutputCommitCoordinator to ensure that only one attempt\n+   * for each task commits.\n+   *\n+   * @return true if commit coordinator should be used, false otherwise.\n+   */\n+  default boolean useCommitCoordinator() {"
  }],
  "prId": 20490
}]