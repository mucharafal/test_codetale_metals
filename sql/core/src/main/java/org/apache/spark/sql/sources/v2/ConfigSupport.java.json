[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "we need to think about the current use cases and validate this API. E.g. CSV data source and JSON data source both accept an option `columnNameOfCorruptRecord`, or session config `spark.sql.columnNameOfCorruptRecord`. We get the following information:\r\n\r\n1. mostly session config maps to an existing option.\r\n2. session configs are always prefixed with `spark.sql`, we should not ask the data source to always specify it.\r\n3. do we really need to support more than one prefixes?",
    "commit": "52923296a946ac734c988fe10725921ea3c2b313",
    "createdAt": "2017-12-04T16:12:24Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2;\n+\n+import org.apache.spark.annotation.InterfaceStability;\n+import org.apache.spark.sql.sources.v2.reader.DataSourceV2Reader;\n+\n+import java.util.List;\n+\n+/**\n+ * A mix-in interface for {@link DataSourceV2}. Data sources can implement this interface to\n+ * propagate session configs with chosen key-prefixes to the particular data source.\n+ */\n+@InterfaceStability.Evolving\n+public interface ConfigSupport {\n+\n+    /**\n+     * Create a list of key-prefixes, all session configs that match at least one of the prefixes\n+     * will be propagated to the data source options.\n+     */\n+    List<String> getConfigPrefixes();"
  }],
  "prId": 19861
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "nit: `SessionConfigSupport`",
    "commit": "52923296a946ac734c988fe10725921ea3c2b313",
    "createdAt": "2017-12-13T13:07:37Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2;\n+\n+import org.apache.spark.annotation.InterfaceStability;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * A mix-in interface for {@link DataSourceV2}. Data sources can implement this interface to\n+ * propagate session configs with chosen key-prefixes to the particular data source.\n+ */\n+@InterfaceStability.Evolving\n+public interface ConfigSupport {"
  }],
  "prId": 19861
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "`propagate session configs with the specified key-prefix to all data source operations in this session`",
    "commit": "52923296a946ac734c988fe10725921ea3c2b313",
    "createdAt": "2017-12-13T13:09:29Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2;\n+\n+import org.apache.spark.annotation.InterfaceStability;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * A mix-in interface for {@link DataSourceV2}. Data sources can implement this interface to\n+ * propagate session configs with chosen key-prefixes to the particular data source."
  }],
  "prId": 19861
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "how about `keyPrefix`",
    "commit": "52923296a946ac734c988fe10725921ea3c2b313",
    "createdAt": "2017-12-13T13:09:43Z",
    "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2;\n+\n+import org.apache.spark.annotation.InterfaceStability;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * A mix-in interface for {@link DataSourceV2}. Data sources can implement this interface to\n+ * propagate session configs with chosen key-prefixes to the particular data source.\n+ */\n+@InterfaceStability.Evolving\n+public interface ConfigSupport {\n+\n+    /**\n+     * Name for the specified data source, will extract all session configs that starts with\n+     * `spark.datasource.$name`, turn `spark.datasource.$name.xxx -&gt; yyy` into\n+     * `xxx -&gt; yyy`, and propagate them to all data source operations in this session.\n+     */\n+    String name();"
  }],
  "prId": 19861
}]