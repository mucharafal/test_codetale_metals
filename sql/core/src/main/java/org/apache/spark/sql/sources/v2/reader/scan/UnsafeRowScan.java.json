[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "cc @j-baker for the new unsafe row scan API. Programmatically unsafe row scan should be in the base class, and normal row scan should be in the child class. However, conceptually for a developer, normal row scan is a basic interface and should be in the base class. Unsafe row scan is kind of an add-on and should be in the child class.",
    "commit": "d2c86f4339d59f227bef61b1c97f9770ce1233b9",
    "createdAt": "2017-09-07T07:53:36Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2.reader.scan;\n+\n+import java.util.List;\n+\n+import org.apache.spark.annotation.Experimental;\n+import org.apache.spark.annotation.InterfaceStability;\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.catalyst.expressions.UnsafeRow;\n+import org.apache.spark.sql.sources.v2.reader.DataSourceV2Reader;\n+import org.apache.spark.sql.sources.v2.reader.ReadTask;\n+\n+/**\n+ * A mix-in interface for `DataSourceV2Reader`. Users can implement this interface to output\n+ * unsafe rows directly and avoid the row copy at Spark side.\n+ *\n+ * Note that, this is an experimental and unstable interface, as `UnsafeRow` is not public and\n+ * may get changed in future Spark versions.\n+ */\n+@Experimental\n+@InterfaceStability.Unstable\n+public interface UnsafeRowScan extends DataSourceV2Reader {"
  }],
  "prId": 19136
}]