[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "`Pushes down filters, and returns unsupported filters.`",
    "commit": "d2c86f4339d59f227bef61b1c97f9770ce1233b9",
    "createdAt": "2017-09-12T05:32:31Z",
    "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2.reader.downward;\n+\n+import org.apache.spark.annotation.Experimental;\n+import org.apache.spark.annotation.InterfaceStability;\n+import org.apache.spark.sql.catalyst.expressions.Expression;\n+\n+/**\n+ * A mix-in interface for `DataSourceV2Reader`. Users can implement this interface to push down\n+ * arbitrary expressions as predicates to the data source.\n+ */\n+@Experimental\n+@InterfaceStability.Unstable\n+public interface CatalystFilterPushDownSupport {\n+\n+  /**\n+   * Push down filters, returns unsupported filters."
  }],
  "prId": 19136
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "`Note that, this is an experimental and unstable interface`",
    "commit": "d2c86f4339d59f227bef61b1c97f9770ce1233b9",
    "createdAt": "2017-09-12T05:33:09Z",
    "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2.reader.downward;\n+\n+import org.apache.spark.annotation.Experimental;\n+import org.apache.spark.annotation.InterfaceStability;\n+import org.apache.spark.sql.catalyst.expressions.Expression;\n+\n+/**\n+ * A mix-in interface for `DataSourceV2Reader`. Users can implement this interface to push down\n+ * arbitrary expressions as predicates to the data source."
  }],
  "prId": 19136
}, {
  "comments": [{
    "author": {
      "login": "j-baker"
    },
    "body": "any chance this could push java lists? They're just more idiomatic in a java interface",
    "commit": "d2c86f4339d59f227bef61b1c97f9770ce1233b9",
    "createdAt": "2017-09-12T08:28:44Z",
    "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2.reader.downward;\n+\n+import org.apache.spark.annotation.Experimental;\n+import org.apache.spark.annotation.InterfaceStability;\n+import org.apache.spark.sql.catalyst.expressions.Expression;\n+\n+/**\n+ * A mix-in interface for `DataSourceV2Reader`. Users can implement this interface to push down\n+ * arbitrary expressions as predicates to the data source.\n+ */\n+@Experimental\n+@InterfaceStability.Unstable\n+public interface CatalystFilterPushDownSupport {\n+\n+  /**\n+   * Push down filters, returns unsupported filters.\n+   */\n+  Expression[] pushCatalystFilters(Expression[] filters);"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "java list is not friendly to scala implementations :)",
    "commit": "d2c86f4339d59f227bef61b1c97f9770ce1233b9",
    "createdAt": "2017-09-12T14:05:11Z",
    "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.sources.v2.reader.downward;\n+\n+import org.apache.spark.annotation.Experimental;\n+import org.apache.spark.annotation.InterfaceStability;\n+import org.apache.spark.sql.catalyst.expressions.Expression;\n+\n+/**\n+ * A mix-in interface for `DataSourceV2Reader`. Users can implement this interface to push down\n+ * arbitrary expressions as predicates to the data source.\n+ */\n+@Experimental\n+@InterfaceStability.Unstable\n+public interface CatalystFilterPushDownSupport {\n+\n+  /**\n+   * Push down filters, returns unsupported filters.\n+   */\n+  Expression[] pushCatalystFilters(Expression[] filters);"
  }],
  "prId": 19136
}]