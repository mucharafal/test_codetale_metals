[{
  "comments": [{
    "author": {
      "login": "kiszk"
    },
    "body": "I agree to remove these fields `schema` and `capacity` from `ColumnarBatch`.\r\nIs it better to prepare APIs to get `schema` and `capacity` from a set of `ColumnVector`s?",
    "commit": "ad976fe175e9cc07cfff859dd7f7331ad424aa8e",
    "createdAt": "2018-01-19T23:03:08Z",
    "diffHunk": "@@ -96,16 +90,6 @@ public void setNumRows(int numRows) {\n    */\n   public int numRows() { return numRows; }\n \n-  /**\n-   * Returns the schema that makes up this batch.\n-   */\n-  public StructType schema() { return schema; }\n-\n-  /**\n-   * Returns the max capacity (in number of rows) for this batch.\n-   */\n-  public int capacity() { return capacity; }",
    "line": 39
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "For `ColumnarBatch` consumers, they don't care about `capacity`, but only `numRows`, \r\n`capacity` is only needed by column vector builders. Also they don't care about schema/field names, but only the data type of each column.",
    "commit": "ad976fe175e9cc07cfff859dd7f7331ad424aa8e",
    "createdAt": "2018-01-22T03:20:42Z",
    "diffHunk": "@@ -96,16 +90,6 @@ public void setNumRows(int numRows) {\n    */\n   public int numRows() { return numRows; }\n \n-  /**\n-   * Returns the schema that makes up this batch.\n-   */\n-  public StructType schema() { return schema; }\n-\n-  /**\n-   * Returns the max capacity (in number of rows) for this batch.\n-   */\n-  public int capacity() { return capacity; }",
    "line": 39
  }],
  "prId": 20316
}]