[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "is it possible to avoid boxing here? e.g. we can have a lot of primitive array members.",
    "commit": "c16230d34472e0337b87ce858289fec9a1d88ab4",
    "createdAt": "2017-09-12T14:24:17Z",
    "diffHunk": "@@ -0,0 +1,53 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements.  See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *    http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+\r\n+package org.apache.spark.sql.execution.columnar;\r\n+\r\n+import org.apache.spark.sql.execution.vectorized.Dictionary;\r\n+\r\n+public final class ColumnDictionary implements Dictionary {\r\n+  private Object[] dictionary;\r\n+\r\n+  public ColumnDictionary(Object[] dictionary) {\r\n+    this.dictionary = dictionary;\r\n+  }\r\n+\r\n+  @Override\r\n+  public int decodeToInt(int id) {\r\n+    return (Integer)dictionary[id];\r"
  }, {
    "author": {
      "login": "kiszk"
    },
    "body": "Yeah, I removed boxing.",
    "commit": "c16230d34472e0337b87ce858289fec9a1d88ab4",
    "createdAt": "2017-09-14T09:15:44Z",
    "diffHunk": "@@ -0,0 +1,53 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements.  See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *    http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+\r\n+package org.apache.spark.sql.execution.columnar;\r\n+\r\n+import org.apache.spark.sql.execution.vectorized.Dictionary;\r\n+\r\n+public final class ColumnDictionary implements Dictionary {\r\n+  private Object[] dictionary;\r\n+\r\n+  public ColumnDictionary(Object[] dictionary) {\r\n+    this.dictionary = dictionary;\r\n+  }\r\n+\r\n+  @Override\r\n+  public int decodeToInt(int id) {\r\n+    return (Integer)dictionary[id];\r"
  }],
  "prId": 18704
}]