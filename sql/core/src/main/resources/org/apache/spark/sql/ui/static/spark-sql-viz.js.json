[{
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "There's a lot of duplicated code between this file and the dag viz one. Can you add a TODO somewhere in this file to make a `viz-utils.js` that holds the common methods? I would recommend that we do this in a follow-up patch so as not to delay this patch further.\n",
    "commit": "5a2bc9937bc26e014842b720fd2096294c9272b7",
    "createdAt": "2015-08-03T18:48:05Z",
    "diffHunk": "@@ -0,0 +1,160 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+var PlanVizConstants = {\n+  svgMarginX: 16,\n+  svgMarginY: 16\n+};\n+\n+function renderPlanViz() {\n+  var svg = planVizContainer().append(\"svg\");\n+  var metadata = d3.select(\"#plan-viz-metadata\");\n+  var dot = metadata.select(\".dot-file\").text().trim();\n+  var graph = svg.append(\"g\");\n+\n+  var g = graphlibDot.read(dot);\n+  preprocessGraphLayout(g);\n+  var renderer = new dagreD3.render();\n+  renderer(graph, g);\n+\n+  // Round corners on rectangles\n+  svg\n+    .selectAll(\"rect\")\n+    .attr(\"rx\", \"5\")\n+    .attr(\"ry\", \"5\");\n+\n+  var nodeSize = parseInt($(\"#plan-viz-metadata-size\").text());\n+  for (var i = 0; i < nodeSize; i++) {\n+    setupTooltipForSparkPlanNode(i);\n+  }\n+\n+  resizeSvg(svg)\n+}\n+\n+/* -------------------- *\n+ * | Helper functions | *\n+ * -------------------- */\n+\n+function planVizContainer() { return d3.select(\"#plan-viz-graph\"); }\n+\n+/*\n+ * Set up the tooltip for a SparkPlan node using metadata. When the user moves the mouse on the\n+ * node, it will display the details of this SparkPlan node in the right.\n+ */\n+function setupTooltipForSparkPlanNode(nodeId) {\n+  var nodeTooltip = d3.select(\"#plan-meta-data-\" + nodeId).text()\n+  d3.select(\"svg g .node_\" + nodeId)\n+    .on('mouseover', function(d) {\n+      var domNode = d3.select(this).node();\n+      $(domNode).tooltip({\n+        title: nodeTooltip, trigger: \"manual\", container: \"body\", placement: \"right\"\n+      });\n+      $(domNode).tooltip(\"show\");\n+    })\n+    .on('mouseout', function(d) {\n+      var domNode = d3.select(this).node();\n+      $(domNode).tooltip(\"destroy\");\n+    })\n+}\n+\n+/*\n+ * Helper function to pre-process the graph layout.\n+ * This step is necessary for certain styles that affect the positioning\n+ * and sizes of graph elements, e.g. padding, font style, shape.\n+ */\n+function preprocessGraphLayout(g) {",
    "line": 79
  }],
  "prId": 7774
}]