[{
  "comments": [{
    "author": {
      "login": "rdblue"
    },
    "body": "This doesn't conform to the [Parquet specification for date](https://github.com/Parquet/parquet-format/blob/master/LogicalTypes.md#date) and produces invalid data.\n\nWhen using the `DATE` annotation, the value must be the number of days from the Unix epoch, 1 January 1970. `java.sql.Date` and `java.util.Date` are backed by a long timestamp, the number of milliseconds from the Unix epoch (which is a Parquet `TIMESTAMP_MILLIS`) and casting that value to an integer makes it impossible to recover the real date.\n\nI recommend using `TIMESTAMP_MILLIS` instead of date here (you won't need the `toInt` part). That seems to be what you want, if you're interested in using `java.sql.Date`. The reason why there is a name mismatch is that the Parquet types mirror SQL types more closely than Java objects.\n",
    "commit": "929f294d9284ccb09c615823f95d006aa899edd8",
    "createdAt": "2015-04-10T16:41:34Z",
    "diffHunk": "@@ -207,6 +207,7 @@ private[parquet] class RowWriteSupport extends WriteSupport[Row] with Logging {\n         case DoubleType => writer.addDouble(value.asInstanceOf[Double])\n         case FloatType => writer.addFloat(value.asInstanceOf[Float])\n         case BooleanType => writer.addBoolean(value.asInstanceOf[Boolean])\n+        case DateType => writer.addInteger(value.asInstanceOf[java.sql.Date].getTime.toInt)",
    "line": 13
  }],
  "prId": 3855
}]