[{
  "comments": [{
    "author": {
      "login": "nerush"
    },
    "body": "We can make statistics collection more functional with `foldLeft` on the given array and avoid using a mutable state. Furthermore, is it not reasonable to collect it in parallel? Should we have a more proper exception handling when file cannot be opened?  ",
    "commit": "9bb51abbfd91a3d9c3d3a920d4788870c043ad33",
    "createdAt": "2019-11-06T16:41:36Z",
    "diffHunk": "@@ -107,6 +114,29 @@ object ParquetUtils {\n     ParquetFileFormat.mergeSchemasInParallel(filesToTouch, sparkSession)\n   }\n \n+  def getStatistics(files: Array[String], configuration: Configuration): Statistics = {\n+    var bytes = 0L\n+    var rows = 0L\n+    files.foreach { file =>"
  }, {
    "author": {
      "login": "ulysses-you"
    },
    "body": "Thanks for review. I tried foldLeft and it looks like more complex, use var maybe more clear. It's a good idea read parquet metadata in parallel, we can add it if necessary. With the last, I think user does not need to know why file cannot be opened, or we can just log a warn when meet the fallback option.",
    "commit": "9bb51abbfd91a3d9c3d3a920d4788870c043ad33",
    "createdAt": "2019-11-10T13:56:22Z",
    "diffHunk": "@@ -107,6 +114,29 @@ object ParquetUtils {\n     ParquetFileFormat.mergeSchemasInParallel(filesToTouch, sparkSession)\n   }\n \n+  def getStatistics(files: Array[String], configuration: Configuration): Statistics = {\n+    var bytes = 0L\n+    var rows = 0L\n+    files.foreach { file =>"
  }],
  "prId": 26391
}]