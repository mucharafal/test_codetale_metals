[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "This should also probably be an Array. No need to be a Seq.\n",
    "commit": "1f00c608aaf8938f0f234327660d306db9b54b97",
    "createdAt": "2016-06-06T20:47:28Z",
    "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.streaming\n+\n+import org.apache.spark.annotation.Experimental\n+\n+/**\n+ * :: Experimental ::\n+ * A class used to report information about the progress of a [[ContinuousQuery]].\n+ *\n+ * @param name The [[ContinuousQuery]] name\n+ * @param sourceStatuses The current statuses of the [[ContinuousQuery]]'s sources.\n+ * @param sinkStatus The current status of the [[ContinuousQuery]]'s sink.\n+ */\n+@Experimental\n+class ContinuousQueryInfo private[sql](\n+  val name: String,\n+  val sourceStatuses: Seq[SourceStatus],",
    "line": 33
  }, {
    "author": {
      "login": "tdas"
    },
    "body": "Offline discussion: this is okay. this is how it is for SparkListener, and avoid problems like the array being accidentally modified internally by the listener generator.\n",
    "commit": "1f00c608aaf8938f0f234327660d306db9b54b97",
    "createdAt": "2016-06-06T21:12:06Z",
    "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.streaming\n+\n+import org.apache.spark.annotation.Experimental\n+\n+/**\n+ * :: Experimental ::\n+ * A class used to report information about the progress of a [[ContinuousQuery]].\n+ *\n+ * @param name The [[ContinuousQuery]] name\n+ * @param sourceStatuses The current statuses of the [[ContinuousQuery]]'s sources.\n+ * @param sinkStatus The current status of the [[ContinuousQuery]]'s sink.\n+ */\n+@Experimental\n+class ContinuousQueryInfo private[sql](\n+  val name: String,\n+  val sourceStatuses: Seq[SourceStatus],",
    "line": 33
  }],
  "prId": 13335
}, {
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "Super Nit: missing period after name.\n",
    "commit": "1f00c608aaf8938f0f234327660d306db9b54b97",
    "createdAt": "2016-06-06T20:50:38Z",
    "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.streaming\n+\n+import org.apache.spark.annotation.Experimental\n+\n+/**\n+ * :: Experimental ::\n+ * A class used to report information about the progress of a [[ContinuousQuery]].\n+ *\n+ * @param name The [[ContinuousQuery]] name"
  }],
  "prId": 13335
}]