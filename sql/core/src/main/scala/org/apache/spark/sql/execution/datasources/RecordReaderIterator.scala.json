[{
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "This is `CompletionIterator`-style cleanup.\n",
    "commit": "e4b8577ed71a30f4ad220cd1a2f19a8edd596c64",
    "createdAt": "2016-09-26T20:41:18Z",
    "diffHunk": "@@ -38,7 +41,7 @@ class RecordReaderIterator[T](rowReader: RecordReader[_, T]) extends Iterator[T]\n         // Close and release the reader here; close() will also be called when the task\n         // completes, but for tasks that read from many files, it helps to release the\n         // resources early.\n-        rowReader.close()",
    "line": 23
  }],
  "prId": 15245
}, {
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "This comment is copied from `NewHadoopRdd`, which contains similar defensive programming.\n",
    "commit": "e4b8577ed71a30f4ad220cd1a2f19a8edd596c64",
    "createdAt": "2016-09-26T20:41:52Z",
    "diffHunk": "@@ -52,4 +55,18 @@ class RecordReaderIterator[T](rowReader: RecordReader[_, T]) extends Iterator[T]\n     havePair = false\n     rowReader.getCurrentValue\n   }\n+\n+  override def close(): Unit = {\n+    if (rowReader != null) {\n+      try {\n+        // Close the reader and release it. Note: it's very important that we don't close the",
    "line": 36
  }],
  "prId": 15245
}, {
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "By nulling out the `rowReader` I think that this will prevent memory consumption from becoming too high in the list of task completion callbacks.\n",
    "commit": "e4b8577ed71a30f4ad220cd1a2f19a8edd596c64",
    "createdAt": "2016-09-26T20:42:31Z",
    "diffHunk": "@@ -27,7 +29,8 @@ import org.apache.spark.sql.catalyst.InternalRow\n  * Note that this returns [[Object]]s instead of [[InternalRow]] because we rely on erasure to pass\n  * column batches by pretending they are rows.\n  */\n-class RecordReaderIterator[T](rowReader: RecordReader[_, T]) extends Iterator[T] {\n+class RecordReaderIterator[T](\n+    private[this] var rowReader: RecordReader[_, T]) extends Iterator[T] with Closeable {",
    "line": 15
  }],
  "prId": 15245
}]