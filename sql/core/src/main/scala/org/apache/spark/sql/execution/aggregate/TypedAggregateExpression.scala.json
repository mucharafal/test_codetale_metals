[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "good catch! can you try if we can fix it in this way? https://github.com/apache/spark/pull/13269/files#diff-585631b931d2b881e65c585dec11cadbR36\n\nI think it's less hacky\n",
    "commit": "e8923249c651624526136891a75eae725f316d60",
    "createdAt": "2016-06-02T16:45:17Z",
    "diffHunk": "@@ -34,6 +34,11 @@ object TypedAggregateExpression {\n     val bufferEncoder = encoderFor[BUF]\n     val bufferSerializer = bufferEncoder.namedExpressions\n     val bufferDeserializer = bufferEncoder.deserializer.transform {\n+      case UnresolvedAttribute(nameParts) =>"
  }, {
    "author": {
      "login": "inouehrs"
    },
    "body": "It seems that the new cleaner implementation does not need my change; it handles unresolved attributes correctly. Thank you!\n",
    "commit": "e8923249c651624526136891a75eae725f316d60",
    "createdAt": "2016-06-02T19:40:08Z",
    "diffHunk": "@@ -34,6 +34,11 @@ object TypedAggregateExpression {\n     val bufferEncoder = encoderFor[BUF]\n     val bufferSerializer = bufferEncoder.namedExpressions\n     val bufferDeserializer = bufferEncoder.deserializer.transform {\n+      case UnresolvedAttribute(nameParts) =>"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "we can apply that part of code in this PR and fix this bug first\n",
    "commit": "e8923249c651624526136891a75eae725f316d60",
    "createdAt": "2016-06-02T19:55:47Z",
    "diffHunk": "@@ -34,6 +34,11 @@ object TypedAggregateExpression {\n     val bufferEncoder = encoderFor[BUF]\n     val bufferSerializer = bufferEncoder.namedExpressions\n     val bufferDeserializer = bufferEncoder.deserializer.transform {\n+      case UnresolvedAttribute(nameParts) =>"
  }],
  "prId": 13446
}]