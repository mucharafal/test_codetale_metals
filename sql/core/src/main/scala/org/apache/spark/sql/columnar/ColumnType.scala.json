[{
  "comments": [{
    "author": {
      "login": "liancheng"
    },
    "body": "`ColumnType` classes are only used internally for in-memory columnar storage and generally don't need this kind of \"convenient\" methods.\n",
    "commit": "098bb5d6813c972ccf23bb97fca8e789b98bf35c",
    "createdAt": "2014-11-03T06:44:46Z",
    "diffHunk": "@@ -372,6 +372,11 @@ private[sql] object TIMESTAMP extends NativeColumnType(TimestampType, 9, 12) {\n   override def setField(row: MutableRow, ordinal: Int, value: Timestamp): Unit = {\n     row(ordinal) = value\n   }\n+\n+  def append(v: Date, buffer: ByteBuffer) {\n+    buffer.putLong(v.getTime)\n+  }\n+"
  }, {
    "author": {
      "login": "culler"
    },
    "body": "This won't compile without an implementation of the append method, because it is declared in the abstract ColumnType class.\n",
    "commit": "098bb5d6813c972ccf23bb97fca8e789b98bf35c",
    "createdAt": "2014-11-03T15:01:05Z",
    "diffHunk": "@@ -372,6 +372,11 @@ private[sql] object TIMESTAMP extends NativeColumnType(TimestampType, 9, 12) {\n   override def setField(row: MutableRow, ordinal: Int, value: Timestamp): Unit = {\n     row(ordinal) = value\n   }\n+\n+  def append(v: Date, buffer: ByteBuffer) {\n+    buffer.putLong(v.getTime)\n+  }\n+"
  }, {
    "author": {
      "login": "liancheng"
    },
    "body": "Sure? There's already an `append` method https://github.com/apache/spark/pull/3066/files#diff-b71f7eb2042698f801a345e8c7e90c5cR364 Otherwise the master branch couldn't have passed Jenkins build.\n",
    "commit": "098bb5d6813c972ccf23bb97fca8e789b98bf35c",
    "createdAt": "2014-11-04T03:59:51Z",
    "diffHunk": "@@ -372,6 +372,11 @@ private[sql] object TIMESTAMP extends NativeColumnType(TimestampType, 9, 12) {\n   override def setField(row: MutableRow, ordinal: Int, value: Timestamp): Unit = {\n     row(ordinal) = value\n   }\n+\n+  def append(v: Date, buffer: ByteBuffer) {\n+    buffer.putLong(v.getTime)\n+  }\n+"
  }],
  "prId": 3066
}]