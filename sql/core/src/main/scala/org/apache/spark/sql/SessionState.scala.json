[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "put this in the new internal package?\n",
    "commit": "bdf1a5d5a0cc60b6fc8cf5a6c01d75ad6c5b12aa",
    "createdAt": "2016-02-27T02:32:26Z",
    "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.sql.catalyst.ParserInterface\n+import org.apache.spark.sql.catalyst.analysis.{Analyzer, Catalog, FunctionRegistry, SimpleCatalog}\n+import org.apache.spark.sql.catalyst.optimizer.Optimizer\n+import org.apache.spark.sql.catalyst.rules.RuleExecutor\n+import org.apache.spark.sql.execution._\n+import org.apache.spark.sql.execution.datasources.{PreInsertCastAndRename, ResolveDataSource}\n+import org.apache.spark.sql.execution.exchange.EnsureRequirements\n+import org.apache.spark.sql.internal.SQLConf\n+import org.apache.spark.sql.util.ExecutionListenerManager\n+\n+\n+/**\n+ * A class that holds all session-specific state in a given [[SQLContext]].\n+ */\n+private[sql] class SessionState(ctx: SQLContext) {"
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "o.a.s.sql.internal\n",
    "commit": "bdf1a5d5a0cc60b6fc8cf5a6c01d75ad6c5b12aa",
    "createdAt": "2016-02-27T02:51:37Z",
    "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.sql.catalyst.ParserInterface\n+import org.apache.spark.sql.catalyst.analysis.{Analyzer, Catalog, FunctionRegistry, SimpleCatalog}\n+import org.apache.spark.sql.catalyst.optimizer.Optimizer\n+import org.apache.spark.sql.catalyst.rules.RuleExecutor\n+import org.apache.spark.sql.execution._\n+import org.apache.spark.sql.execution.datasources.{PreInsertCastAndRename, ResolveDataSource}\n+import org.apache.spark.sql.execution.exchange.EnsureRequirements\n+import org.apache.spark.sql.internal.SQLConf\n+import org.apache.spark.sql.util.ExecutionListenerManager\n+\n+\n+/**\n+ * A class that holds all session-specific state in a given [[SQLContext]].\n+ */\n+private[sql] class SessionState(ctx: SQLContext) {"
  }],
  "prId": 11405
}]