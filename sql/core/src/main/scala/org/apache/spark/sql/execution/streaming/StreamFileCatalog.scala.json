[{
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "We should directly construct the file status here, instead of making another remote call.\n",
    "commit": "e2cd25c0934ba8a0062c29524c27785326dde195",
    "createdAt": "2016-04-19T20:14:46Z",
    "diffHunk": "@@ -54,6 +54,6 @@ class StreamFileCatalog(sqlContext: SQLContext, path: Path) extends FileCatalog\n   override def refresh(): Unit = {}\n \n   override def allFiles(): Seq[FileStatus] = {\n-    fs.listStatus(metadataLog.get(None, None).flatMap(_._2).map(new Path(_)))\n+    fs.listStatus(metadataLog.allFiles().map(f => new Path(f.path)))"
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "> We should directly construct the file status here, instead of making another remote call.\n\nCall the `FileStatus`'s constructor? Do we need to store other fields of FileStatus in the log?\n",
    "commit": "e2cd25c0934ba8a0062c29524c27785326dde195",
    "createdAt": "2016-04-19T20:46:07Z",
    "diffHunk": "@@ -54,6 +54,6 @@ class StreamFileCatalog(sqlContext: SQLContext, path: Path) extends FileCatalog\n   override def refresh(): Unit = {}\n \n   override def allFiles(): Seq[FileStatus] = {\n-    fs.listStatus(metadataLog.get(None, None).flatMap(_._2).map(new Path(_)))\n+    fs.listStatus(metadataLog.allFiles().map(f => new Path(f.path)))"
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "We only need to store the ones that we need later on:\n\nNeed:\n- long length\n- Path path\n\nMight need:\n- long modification_time\n\nObvious:\n- boolean isdir\n\nNot sure (but not used now):\n- int block_replication\n- long blocksize\n\nDon't need\n- FsPermission permission\n- String owner\n- String group\n- long access_time\n",
    "commit": "e2cd25c0934ba8a0062c29524c27785326dde195",
    "createdAt": "2016-04-19T22:07:44Z",
    "diffHunk": "@@ -54,6 +54,6 @@ class StreamFileCatalog(sqlContext: SQLContext, path: Path) extends FileCatalog\n   override def refresh(): Unit = {}\n \n   override def allFiles(): Seq[FileStatus] = {\n-    fs.listStatus(metadataLog.get(None, None).flatMap(_._2).map(new Path(_)))\n+    fs.listStatus(metadataLog.allFiles().map(f => new Path(f.path)))"
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "Added fields except the following ones:\n- FsPermission permission\n- String owner\n- String group\n- long access_time\n",
    "commit": "e2cd25c0934ba8a0062c29524c27785326dde195",
    "createdAt": "2016-04-19T23:11:16Z",
    "diffHunk": "@@ -54,6 +54,6 @@ class StreamFileCatalog(sqlContext: SQLContext, path: Path) extends FileCatalog\n   override def refresh(): Unit = {}\n \n   override def allFiles(): Seq[FileStatus] = {\n-    fs.listStatus(metadataLog.get(None, None).flatMap(_._2).map(new Path(_)))\n+    fs.listStatus(metadataLog.allFiles().map(f => new Path(f.path)))"
  }],
  "prId": 12435
}]