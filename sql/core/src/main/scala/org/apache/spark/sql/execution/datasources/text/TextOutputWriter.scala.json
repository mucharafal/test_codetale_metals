[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Shall we switch the parameter order?\r\n```scala\r\n-    lineSeparator: Array[Byte],\r\n-    context: TaskAttemptContext)\r\n+    context: TaskAttemptContext,\r\n+    lineSeparator: Array[Byte])\r\n```",
    "commit": "66b893dcf250e779c7c7cf93d21148fff64c30de",
    "createdAt": "2019-04-01T21:17:33Z",
    "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.datasources.text\n+\n+import java.io.OutputStream\n+\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.mapreduce.TaskAttemptContext\n+\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.sql.execution.datasources.{CodecStreams, OutputWriter}\n+import org.apache.spark.sql.types.StructType\n+\n+class TextOutputWriter(\n+    path: String,\n+    dataSchema: StructType,\n+    lineSeparator: Array[Byte],\n+    context: TaskAttemptContext)",
    "line": 32
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "BTW, +1 for the decision to pass `lineSeparator` instead of full `TextOptions`.",
    "commit": "66b893dcf250e779c7c7cf93d21148fff64c30de",
    "createdAt": "2019-04-01T21:19:35Z",
    "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.datasources.text\n+\n+import java.io.OutputStream\n+\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.mapreduce.TaskAttemptContext\n+\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.sql.execution.datasources.{CodecStreams, OutputWriter}\n+import org.apache.spark.sql.types.StructType\n+\n+class TextOutputWriter(\n+    path: String,\n+    dataSchema: StructType,\n+    lineSeparator: Array[Byte],\n+    context: TaskAttemptContext)",
    "line": 32
  }, {
    "author": {
      "login": "gengliangwang"
    },
    "body": "@dongjoon-hyun Thanks for the review. I have addressed other comments. This one is kind of trivial. I prefer to keep the original parameter order since it is not relevant to this PR.",
    "commit": "66b893dcf250e779c7c7cf93d21148fff64c30de",
    "createdAt": "2019-04-08T10:12:38Z",
    "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.datasources.text\n+\n+import java.io.OutputStream\n+\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.mapreduce.TaskAttemptContext\n+\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.sql.execution.datasources.{CodecStreams, OutputWriter}\n+import org.apache.spark.sql.types.StructType\n+\n+class TextOutputWriter(\n+    path: String,\n+    dataSchema: StructType,\n+    lineSeparator: Array[Byte],\n+    context: TaskAttemptContext)",
    "line": 32
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Got it.",
    "commit": "66b893dcf250e779c7c7cf93d21148fff64c30de",
    "createdAt": "2019-04-08T17:13:25Z",
    "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.datasources.text\n+\n+import java.io.OutputStream\n+\n+import org.apache.hadoop.fs.Path\n+import org.apache.hadoop.mapreduce.TaskAttemptContext\n+\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.sql.execution.datasources.{CodecStreams, OutputWriter}\n+import org.apache.spark.sql.types.StructType\n+\n+class TextOutputWriter(\n+    path: String,\n+    dataSchema: StructType,\n+    lineSeparator: Array[Byte],\n+    context: TaskAttemptContext)",
    "line": 32
  }],
  "prId": 24207
}]