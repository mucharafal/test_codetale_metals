[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "@rdblue @dongjoon-hyun @HyukjinKwon  this makes me think that, maybe we should not use var-length parameter list for APIs that are called internally. It's easier to use if the API just takes Array.",
    "commit": "51c7d313d06a7c2476316ede6813e5aaf83160f9",
    "createdAt": "2019-11-16T09:11:52Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources.v2\n+\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.sql.catalyst.expressions.Attribute\n+import org.apache.spark.sql.connector.catalog.{CatalogPlugin, NamespaceChange}\n+\n+/**\n+ * Physical plan node for setting properties of namespace.\n+ */\n+case class AlterNamespaceSetPropertiesExec(\n+    catalog: CatalogPlugin,\n+    namespace: Seq[String],\n+    props: Map[String, String])\n+  extends V2CommandExec {\n+  override protected def run(): Seq[InternalRow] = {\n+    import org.apache.spark.sql.connector.catalog.CatalogV2Implicits._\n+\n+    val nsCatalog = catalog.asNamespaceCatalog\n+    val ns = namespace.toArray\n+    val changes = props.map(kv => {\n+      NamespaceChange.setProperty(kv._1, kv._2)\n+    }).toSeq\n+    nsCatalog.alterNamespace(ns, changes: _*)"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Got it, @cloud-fan .",
    "commit": "51c7d313d06a7c2476316ede6813e5aaf83160f9",
    "createdAt": "2019-11-16T19:54:06Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources.v2\n+\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.sql.catalyst.expressions.Attribute\n+import org.apache.spark.sql.connector.catalog.{CatalogPlugin, NamespaceChange}\n+\n+/**\n+ * Physical plan node for setting properties of namespace.\n+ */\n+case class AlterNamespaceSetPropertiesExec(\n+    catalog: CatalogPlugin,\n+    namespace: Seq[String],\n+    props: Map[String, String])\n+  extends V2CommandExec {\n+  override protected def run(): Seq[InternalRow] = {\n+    import org.apache.spark.sql.connector.catalog.CatalogV2Implicits._\n+\n+    val nsCatalog = catalog.asNamespaceCatalog\n+    val ns = namespace.toArray\n+    val changes = props.map(kv => {\n+      NamespaceChange.setProperty(kv._1, kv._2)\n+    }).toSeq\n+    nsCatalog.alterNamespace(ns, changes: _*)"
  }],
  "prId": 26551
}, {
  "comments": [{
    "author": {
      "login": "imback82"
    },
    "body": "How about\r\n```Scala\r\nval changes = props.map{ case (k, v) =>\r\n  NamespaceChange.setProperty(k, v)\r\n}.toSeq\r\n```",
    "commit": "51c7d313d06a7c2476316ede6813e5aaf83160f9",
    "createdAt": "2019-11-16T17:52:16Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources.v2\n+\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.sql.catalyst.expressions.Attribute\n+import org.apache.spark.sql.connector.catalog.{CatalogPlugin, NamespaceChange}\n+\n+/**\n+ * Physical plan node for setting properties of namespace.\n+ */\n+case class AlterNamespaceSetPropertiesExec(\n+    catalog: CatalogPlugin,\n+    namespace: Seq[String],\n+    props: Map[String, String])\n+  extends V2CommandExec {\n+  override protected def run(): Seq[InternalRow] = {\n+    import org.apache.spark.sql.connector.catalog.CatalogV2Implicits._\n+\n+    val nsCatalog = catalog.asNamespaceCatalog\n+    val ns = namespace.toArray\n+    val changes = props.map(kv => {"
  }],
  "prId": 26551
}, {
  "comments": [{
    "author": {
      "login": "imback82"
    },
    "body": "nit: to me, the following is clear enough (without local variables)\r\n```Scala\r\ncatalog.asNamespaceCatalog.alterNamespace(namespace.toArray, changes: _*)\r\n```",
    "commit": "51c7d313d06a7c2476316ede6813e5aaf83160f9",
    "createdAt": "2019-11-16T17:54:41Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources.v2\n+\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.sql.catalyst.expressions.Attribute\n+import org.apache.spark.sql.connector.catalog.{CatalogPlugin, NamespaceChange}\n+\n+/**\n+ * Physical plan node for setting properties of namespace.\n+ */\n+case class AlterNamespaceSetPropertiesExec(\n+    catalog: CatalogPlugin,\n+    namespace: Seq[String],\n+    props: Map[String, String])\n+  extends V2CommandExec {\n+  override protected def run(): Seq[InternalRow] = {\n+    import org.apache.spark.sql.connector.catalog.CatalogV2Implicits._\n+\n+    val nsCatalog = catalog.asNamespaceCatalog\n+    val ns = namespace.toArray\n+    val changes = props.map(kv => {\n+      NamespaceChange.setProperty(kv._1, kv._2)\n+    }).toSeq\n+    nsCatalog.alterNamespace(ns, changes: _*)"
  }],
  "prId": 26551
}]