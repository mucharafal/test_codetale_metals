[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "Is this just a rewrite of Aggregate?\n",
    "commit": "96ef82c4afbf0b3eabb246e29209d953d58b3d99",
    "createdAt": "2014-06-06T08:06:22Z",
    "diffHunk": "@@ -0,0 +1,175 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.sql.catalyst.errors._\n+import org.apache.spark.sql.catalyst.expressions._\n+import org.apache.spark.sql.catalyst.plans.physical._\n+import org.apache.spark.sql.catalyst.types._\n+\n+/**\n+ * Attempt to rewrite aggregate to be more efficient.\n+ *\n+ * @param partial if true then aggregation is done partially on local data without shuffling to\n+ *                ensure all values where `groupingExpressions` are equal are present.\n+ * @param groupingExpressions expressions that are evaluated to determine grouping.\n+ * @param aggregateExpressions expressions that are computed for each group.\n+ * @param child the input data source.\n+ */\n+case class HashAggregate("
  }],
  "prId": 993
}]