[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "`invalidate` -> `invalidate and refresh`\r\n\r\nWe also do the re-cache, but the new version cached lazily. ",
    "commit": "5ed195013d215340e6a609d01f1314e6454ac4e9",
    "createdAt": "2017-04-04T23:40:46Z",
    "diffHunk": "@@ -456,7 +460,8 @@ class CatalogImpl(sparkSession: SparkSession) extends Catalog {\n \n   /**\n    * Refreshes the cache entry and the associated metadata for all Dataset (if any), that contain\n-   * the given data source path.\n+   * the given data source path. Path matching is by prefix, i.e. \"/\" would invalidate",
    "line": 73
  }, {
    "author": {
      "login": "felixcheung"
    },
    "body": "For some reason in here, CatalogImpl.scala is very different from Catalog.scala - let me know if you want me to change them - for now I've updated the first sentence.",
    "commit": "5ed195013d215340e6a609d01f1314e6454ac4e9",
    "createdAt": "2017-04-05T05:40:22Z",
    "diffHunk": "@@ -456,7 +460,8 @@ class CatalogImpl(sparkSession: SparkSession) extends Catalog {\n \n   /**\n    * Refreshes the cache entry and the associated metadata for all Dataset (if any), that contain\n-   * the given data source path.\n+   * the given data source path. Path matching is by prefix, i.e. \"/\" would invalidate",
    "line": 73
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "Yes. I found this sentence is copied from Catalog.scala. Maybe, we can update them to\r\n> Path matching is by prefix, i.e. \"/\" would invalidate all the cached entries and make the new versions cached lazily. ",
    "commit": "5ed195013d215340e6a609d01f1314e6454ac4e9",
    "createdAt": "2017-04-05T17:15:27Z",
    "diffHunk": "@@ -456,7 +460,8 @@ class CatalogImpl(sparkSession: SparkSession) extends Catalog {\n \n   /**\n    * Refreshes the cache entry and the associated metadata for all Dataset (if any), that contain\n-   * the given data source path.\n+   * the given data source path. Path matching is by prefix, i.e. \"/\" would invalidate",
    "line": 73
  }],
  "prId": 17512
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "The same here.",
    "commit": "5ed195013d215340e6a609d01f1314e6454ac4e9",
    "createdAt": "2017-04-05T01:41:02Z",
    "diffHunk": "@@ -367,6 +367,7 @@ class CatalogImpl(sparkSession: SparkSession) extends Catalog {\n \n   /**\n    * Recovers all the partitions in the directory of a table and update the catalog.\n+   * Only works with a partitioned table, and not a temporary view.",
    "line": 49
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "`not a temporary view.`\r\n-> \r\n`not a view.`",
    "commit": "5ed195013d215340e6a609d01f1314e6454ac4e9",
    "createdAt": "2017-04-05T17:11:33Z",
    "diffHunk": "@@ -367,6 +367,7 @@ class CatalogImpl(sparkSession: SparkSession) extends Catalog {\n \n   /**\n    * Recovers all the partitions in the directory of a table and update the catalog.\n+   * Only works with a partitioned table, and not a temporary view.",
    "line": 49
  }],
  "prId": 17512
}]