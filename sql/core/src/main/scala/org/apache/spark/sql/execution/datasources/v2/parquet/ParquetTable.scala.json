[{
  "comments": [{
    "author": {
      "login": "rdblue"
    },
    "body": "Looks like this will also hit SPARK-27960. I think this is okay for now. No need to block Parquet to fix it.\r\n\r\nHowever, it would be good to follow up with a suite of SQL tests for each v2 implementation that validates overall behavior, like reporting the metastore schema after a table is created.",
    "commit": "f658e9265ba741922fc96eec76038addcb6491a1",
    "createdAt": "2019-06-06T19:45:11Z",
    "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.datasources.v2.parquet\n+\n+import scala.collection.JavaConverters._\n+\n+import org.apache.hadoop.fs.FileStatus\n+\n+import org.apache.spark.sql.SparkSession\n+import org.apache.spark.sql.execution.datasources.FileFormat\n+import org.apache.spark.sql.execution.datasources.parquet.ParquetUtils\n+import org.apache.spark.sql.execution.datasources.v2.FileTable\n+import org.apache.spark.sql.sources.v2.writer.WriteBuilder\n+import org.apache.spark.sql.types._\n+import org.apache.spark.sql.util.CaseInsensitiveStringMap\n+\n+case class ParquetTable(\n+    name: String,\n+    sparkSession: SparkSession,\n+    options: CaseInsensitiveStringMap,\n+    paths: Seq[String],\n+    userSpecifiedSchema: Option[StructType],\n+    fallbackFileFormat: Class[_ <: FileFormat])\n+  extends FileTable(sparkSession, options, paths, userSpecifiedSchema) {",
    "line": 38
  }],
  "prId": 24327
}]