[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "`nextValue` -> `currentValue`?",
    "commit": "689f17e4930694d1e7585ba82e0964507121868a",
    "createdAt": "2019-03-22T06:50:32Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.datasources.v2\n+\n+import org.apache.spark.sql.sources.v2.reader.PartitionReader\n+\n+class PartitionReaderFromIterator[InternalRow](\n+    iter: Iterator[InternalRow]) extends PartitionReader[InternalRow] {\n+  private var nextValue: InternalRow = _"
  }, {
    "author": {
      "login": "gengliangwang"
    },
    "body": "No.If the method `next` is called, we will get and save the value before method `get` is called.",
    "commit": "689f17e4930694d1e7585ba82e0964507121868a",
    "createdAt": "2019-03-22T06:54:36Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.datasources.v2\n+\n+import org.apache.spark.sql.sources.v2.reader.PartitionReader\n+\n+class PartitionReaderFromIterator[InternalRow](\n+    iter: Iterator[InternalRow]) extends PartitionReader[InternalRow] {\n+  private var nextValue: InternalRow = _"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "No, @gengliangwang . `currentValue` is correct.\r\nPlease search `override def get(): InternalRow` in Apache Spark code base.",
    "commit": "689f17e4930694d1e7585ba82e0964507121868a",
    "createdAt": "2019-03-22T07:11:31Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.datasources.v2\n+\n+import org.apache.spark.sql.sources.v2.reader.PartitionReader\n+\n+class PartitionReaderFromIterator[InternalRow](\n+    iter: Iterator[InternalRow]) extends PartitionReader[InternalRow] {\n+  private var nextValue: InternalRow = _"
  }],
  "prId": 24005
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "```scala\r\n- override def get(): InternalRow = nextValue\r\n+ override def get(): InternalRow = currentValue\r\n```",
    "commit": "689f17e4930694d1e7585ba82e0964507121868a",
    "createdAt": "2019-03-22T06:51:14Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.datasources.v2\n+\n+import org.apache.spark.sql.sources.v2.reader.PartitionReader\n+\n+class PartitionReaderFromIterator[InternalRow](\n+    iter: Iterator[InternalRow]) extends PartitionReader[InternalRow] {\n+  private var nextValue: InternalRow = _\n+\n+  override def next(): Boolean = {\n+    if (iter.hasNext) {\n+      nextValue = iter.next()\n+      true\n+    } else {\n+      false\n+    }\n+  }\n+\n+  override def get(): InternalRow = nextValue"
  }],
  "prId": 24005
}]