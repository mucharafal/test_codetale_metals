[{
  "comments": [{
    "author": {
      "login": "HeartSaVioR"
    },
    "body": "`streamQueryCache` seems to be `public` - why not let StreamingQueryPage directly accesses through SQLTab instance?",
    "commit": "6de18cc2e20bd8ef0167a52c869c7706f67014a2",
    "createdAt": "2019-10-22T09:42:08Z",
    "diffHunk": "@@ -17,16 +17,25 @@\n \n package org.apache.spark.sql.execution.ui\n \n+import scala.collection.mutable.HashSet\n+\n import org.apache.spark.internal.Logging\n+import org.apache.spark.sql.streaming.StreamingQuery\n+import org.apache.spark.sql.streaming.ui.{StreamingQueryPage, StreamingQueryStatisticsPage}\n import org.apache.spark.ui.{SparkUI, SparkUITab}\n \n-class SQLTab(val sqlStore: SQLAppStatusStore, sparkUI: SparkUI)\n+class SQLTab(\n+    val sqlStore: SQLAppStatusStore,\n+    val streamQueryCache: Option[HashSet[(StreamingQuery, Long)]],\n+    sparkUI: SparkUI)\n   extends SparkUITab(sparkUI, \"SQL\") with Logging {\n \n   val parent = sparkUI\n \n   attachPage(new AllExecutionsPage(this))\n   attachPage(new ExecutionPage(this))\n+  attachPage(new StreamingQueryPage(this, streamQueryCache))"
  }],
  "prId": 26201
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Do we need to use `Option` here?",
    "commit": "6de18cc2e20bd8ef0167a52c869c7706f67014a2",
    "createdAt": "2019-10-24T19:53:42Z",
    "diffHunk": "@@ -18,15 +18,22 @@\n package org.apache.spark.sql.execution.ui\n \n import org.apache.spark.internal.Logging\n+import org.apache.spark.sql.execution.streaming.StreamQueryStore\n+import org.apache.spark.sql.streaming.ui.{StreamingQueryPage, StreamingQueryStatisticsPage}\n import org.apache.spark.ui.{SparkUI, SparkUITab}\n \n-class SQLTab(val sqlStore: SQLAppStatusStore, sparkUI: SparkUI)\n+class SQLTab(\n+    val sqlStore: SQLAppStatusStore,\n+    val streamQueryStore: Option[StreamQueryStore],"
  }, {
    "author": {
      "login": "HeartSaVioR"
    },
    "body": "The information is only available in running app - passing None would simplify pruning the case. I've suggested to put information to SQLAppStatusStore - it may be addressed in follow-up PR and we can completely remove this.",
    "commit": "6de18cc2e20bd8ef0167a52c869c7706f67014a2",
    "createdAt": "2019-10-28T01:54:17Z",
    "diffHunk": "@@ -18,15 +18,22 @@\n package org.apache.spark.sql.execution.ui\n \n import org.apache.spark.internal.Logging\n+import org.apache.spark.sql.execution.streaming.StreamQueryStore\n+import org.apache.spark.sql.streaming.ui.{StreamingQueryPage, StreamingQueryStatisticsPage}\n import org.apache.spark.ui.{SparkUI, SparkUITab}\n \n-class SQLTab(val sqlStore: SQLAppStatusStore, sparkUI: SparkUI)\n+class SQLTab(\n+    val sqlStore: SQLAppStatusStore,\n+    val streamQueryStore: Option[StreamQueryStore],"
  }],
  "prId": 26201
}, {
  "comments": [{
    "author": {
      "login": "xuanyuanking"
    },
    "body": "As your comment https://github.com/apache/spark/pull/26201#issuecomment-544823816, I also think it is imperative to create a new tab for this, \"Structure Streaming\" or \"Streaming Query\" maybe a good name.",
    "commit": "6de18cc2e20bd8ef0167a52c869c7706f67014a2",
    "createdAt": "2019-11-11T21:04:17Z",
    "diffHunk": "@@ -18,15 +18,22 @@\n package org.apache.spark.sql.execution.ui\n \n import org.apache.spark.internal.Logging\n+import org.apache.spark.sql.execution.streaming.StreamQueryStore\n+import org.apache.spark.sql.streaming.ui.{StreamingQueryPage, StreamingQueryStatisticsPage}\n import org.apache.spark.ui.{SparkUI, SparkUITab}\n \n-class SQLTab(val sqlStore: SQLAppStatusStore, sparkUI: SparkUI)\n+class SQLTab("
  }],
  "prId": 26201
}]