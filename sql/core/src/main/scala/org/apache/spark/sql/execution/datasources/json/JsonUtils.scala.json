[{
  "comments": [{
    "author": {
      "login": "gengliangwang"
    },
    "body": "The function `verifySchema` is very similar with the one in Orc/Parquet except the exception message. Should we put it into a util object?",
    "commit": "1cfc7b02089401eca2f17db55b113e6620f398be",
    "createdAt": "2018-05-22T11:53:57Z",
    "diffHunk": "@@ -48,4 +49,33 @@ object JsonUtils {\n       json.sample(withReplacement = false, options.samplingRatio, 1)\n     }\n   }\n+\n+  /**\n+   * Verify if the schema is supported in JSON datasource.\n+   */\n+  def verifySchema(schema: StructType): Unit = {"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Hmm .. but wouldn't the supported types be very specific to data source?",
    "commit": "1cfc7b02089401eca2f17db55b113e6620f398be",
    "createdAt": "2018-05-22T14:04:53Z",
    "diffHunk": "@@ -48,4 +49,33 @@ object JsonUtils {\n       json.sample(withReplacement = false, options.samplingRatio, 1)\n     }\n   }\n+\n+  /**\n+   * Verify if the schema is supported in JSON datasource.\n+   */\n+  def verifySchema(schema: StructType): Unit = {"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "Since supported types are specific to data sources, I think we need to verify a schema in each file format implementations. But, yes.... these built-in format (orc and parquet) has the same supported types, so it might be better to move the code `veryfySchema` into somewhere (e.g., `DataSourceUtils` or something) for avoiding code duplication....",
    "commit": "1cfc7b02089401eca2f17db55b113e6620f398be",
    "createdAt": "2018-05-22T14:32:22Z",
    "diffHunk": "@@ -48,4 +49,33 @@ object JsonUtils {\n       json.sample(withReplacement = false, options.samplingRatio, 1)\n     }\n   }\n+\n+  /**\n+   * Verify if the schema is supported in JSON datasource.\n+   */\n+  def verifySchema(schema: StructType): Unit = {"
  }],
  "prId": 21389
}]