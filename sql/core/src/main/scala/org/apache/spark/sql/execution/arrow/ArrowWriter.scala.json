[{
  "comments": [{
    "author": {
      "login": "ueshin"
    },
    "body": "Do we need this `if`?",
    "commit": "addd35f49d58227dd59b7d9d3595403cb992c1a8",
    "createdAt": "2017-10-17T06:35:20Z",
    "diffHunk": "@@ -55,6 +55,12 @@ object ArrowWriter {\n       case (DoubleType, vector: NullableFloat8Vector) => new DoubleWriter(vector)\n       case (StringType, vector: NullableVarCharVector) => new StringWriter(vector)\n       case (BinaryType, vector: NullableVarBinaryVector) => new BinaryWriter(vector)\n+      case (DateType, vector: NullableDateDayVector) => new DateWriter(vector)\n+      case (TimestampType, vector: NullableTimeStampMicroTZVector)\n+        // TODO: Should be able to access timezone from vector\n+        if field.getType.isInstanceOf[ArrowType.Timestamp] &&\n+          field.getType.asInstanceOf[ArrowType.Timestamp].getTimezone != null =>"
  }, {
    "author": {
      "login": "BryanCutler"
    },
    "body": "It can probably be removed.  My original thinking was to ensure that the ArrowWriter was created with a valid timezone id and not a null or empty string.  I think it's better handled in `toArrowSchema` which takes an Option now.",
    "commit": "addd35f49d58227dd59b7d9d3595403cb992c1a8",
    "createdAt": "2017-10-17T20:27:48Z",
    "diffHunk": "@@ -55,6 +55,12 @@ object ArrowWriter {\n       case (DoubleType, vector: NullableFloat8Vector) => new DoubleWriter(vector)\n       case (StringType, vector: NullableVarCharVector) => new StringWriter(vector)\n       case (BinaryType, vector: NullableVarBinaryVector) => new BinaryWriter(vector)\n+      case (DateType, vector: NullableDateDayVector) => new DateWriter(vector)\n+      case (TimestampType, vector: NullableTimeStampMicroTZVector)\n+        // TODO: Should be able to access timezone from vector\n+        if field.getType.isInstanceOf[ArrowType.Timestamp] &&\n+          field.getType.asInstanceOf[ArrowType.Timestamp].getTimezone != null =>"
  }],
  "prId": 18664
}]