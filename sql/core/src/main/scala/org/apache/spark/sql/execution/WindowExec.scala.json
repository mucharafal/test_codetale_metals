[{
  "comments": [{
    "author": {
      "login": "hvanhovell"
    },
    "body": "When does a `WindowExpression` contain a `MakeDecimal`? As I understand your code correctly, the following things can happen:\n\n##### Sum\n\nThe following input:\n\n``` Scala\nWindowExpression(AggregateExpression(Sum(x), ...), spec)\n```\n\nis rewritten into:\n\n``` scala\nMakeDecimal(WindowExpression(AggregateExpression(Sum(UnscaledValue(x)), ...), spec), prec + 10, scale)\n```\n\n##### Average\n\nThe following input:\n\n``` Scala\nWindowExpression(AggregateExpression(Average(x), ...), spec)\n```\n\nis rewritten into:\n\n``` scala\nCast(Divide(WindowExpression(AggregateExpression(Average(UnscaledValue(x)), ...), spec), Literal.create(math.pow(10.0, scale), DoubleType)), DecimalType(prec + 4, scale + 4))\n```\n",
    "commit": "b2ac335fedac91b7db710f38e2801a9ea756748e",
    "createdAt": "2016-04-27T11:28:23Z",
    "diffHunk": "@@ -177,6 +177,8 @@ case class WindowExec(\n         case e @ WindowExpression(function, spec) =>\n           val frame = spec.frameSpecification.asInstanceOf[SpecifiedWindowFrame]\n           function match {\n+            case MakeDecimal(AggregateExpression(f, _, _, _), prec, scale) =>"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Oh, my bad. You're right.\nI missed recovering that. I'll remove this.\nWindowExec.scala is solid and there is no need to be changed.\n",
    "commit": "b2ac335fedac91b7db710f38e2801a9ea756748e",
    "createdAt": "2016-04-27T17:17:08Z",
    "diffHunk": "@@ -177,6 +177,8 @@ case class WindowExec(\n         case e @ WindowExpression(function, spec) =>\n           val frame = spec.frameSpecification.asInstanceOf[SpecifiedWindowFrame]\n           function match {\n+            case MakeDecimal(AggregateExpression(f, _, _, _), prec, scale) =>"
  }],
  "prId": 12421
}]