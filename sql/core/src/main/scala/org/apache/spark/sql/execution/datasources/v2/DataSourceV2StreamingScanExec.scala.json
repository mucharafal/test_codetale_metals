[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "I have to use two physical nodes, since batch and streaming have different APIs now.",
    "commit": "eecb161075720aec0c496576fe6b6ad749c3a726",
    "createdAt": "2018-11-19T14:59:43Z",
    "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources.v2\n+\n+import org.apache.spark.rdd.RDD\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.sql.catalyst.expressions._\n+import org.apache.spark.sql.catalyst.plans.physical\n+import org.apache.spark.sql.catalyst.plans.physical.SinglePartition\n+import org.apache.spark.sql.execution.{ColumnarBatchScan, LeafExecNode, WholeStageCodegenExec}\n+import org.apache.spark.sql.execution.streaming.continuous._\n+import org.apache.spark.sql.sources.v2.DataSourceV2\n+import org.apache.spark.sql.sources.v2.reader._\n+import org.apache.spark.sql.sources.v2.reader.streaming.{ContinuousPartitionReaderFactory, ContinuousReadSupport, MicroBatchReadSupport}\n+\n+/**\n+ * Physical plan node for scanning data from a data source.\n+ */\n+// TODO: micro-batch should be handled by `DataSourceV2ScanExec`, after we finish the API refactor\n+// completely.\n+case class DataSourceV2StreamingScanExec(",
    "line": 36
  }],
  "prId": 23086
}]