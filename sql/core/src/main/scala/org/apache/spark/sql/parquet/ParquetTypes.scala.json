[{
  "comments": [{
    "author": {
      "login": "liancheng"
    },
    "body": "Let's include the attribute name in the error message to make it more clear, and reformat the code a bit:\n\n``` scala\n  private def checkSpecialCharacter(schema: Seq[Attribute]) = {\n    schema.map(_.name).foreach { name =>\n      if (name.matches(\".*[ ,;{}()\\n\\t=].*\")) {\n        sys.error(\n          s\"\"\"Attribute name \"$name\" contains invalid character(s) among \" ,;{}()\\n\\t=\".\n             |Please use alias to rename it.\n           \"\"\".stripMargin.split(\"\\n\").mkString)\n      }\n    }\n  }\n```\n",
    "commit": "2d705427fc69bbee483efb64bc0dc8b06f17bd4d",
    "createdAt": "2015-04-03T17:57:13Z",
    "diffHunk": "@@ -404,7 +405,16 @@ private[parquet] object ParquetTypesConverter extends Logging {\n     }\n   }\n \n+  def checkSpecialCharacters(schema: Seq[Attribute]) = {\n+    // ,;{}()\\n\\t= and space character are special characters in Parquet schema\n+    if (schema.exists(_.name.matches(\".*[ ,;{}()\\n\\t=].*\"))) {\n+      sys.error(\"\"\"Attribute name can not contain any character among \" ,;{}()\\n\\t=\".\n+                   | Use Alias to rename attribute name\"\"\".stripMargin)"
  }],
  "prId": 5263
}, {
  "comments": [{
    "author": {
      "login": "liancheng"
    },
    "body": "Let's make this private.\n",
    "commit": "2d705427fc69bbee483efb64bc0dc8b06f17bd4d",
    "createdAt": "2015-04-03T17:57:14Z",
    "diffHunk": "@@ -404,7 +405,16 @@ private[parquet] object ParquetTypesConverter extends Logging {\n     }\n   }\n \n+  def checkSpecialCharacters(schema: Seq[Attribute]) = {"
  }],
  "prId": 5263
}]