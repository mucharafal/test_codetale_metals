[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "how hard it is to do it at caller side?",
    "commit": "16d80c504c807d3626da1ff808f3c4c447187ea3",
    "createdAt": "2018-12-26T02:52:34Z",
    "diffHunk": "@@ -56,11 +60,17 @@ class CatalogFileIndex(\n \n   override def listFiles(\n       partitionFilters: Seq[Expression], dataFilters: Seq[Expression]): Seq[PartitionDirectory] = {\n-    filterPartitions(partitionFilters).listFiles(Nil, dataFilters)\n+    val (partitions, phase) = createPhaseSummary {",
    "line": 29
  }, {
    "author": {
      "login": "xuanyuanking"
    },
    "body": "Thank you Wenchen for your review.\r\nNot so hard, but need more code changes on caller class. I choose this just for little change and code clean. The current approach need call `createPhaseSummary`  here and `InmemoryFileIndex.refresh0`, if changes to caller side need tracker more place call listFiles and `new InMemoryFileIndex`.\r\nAnother problem is how to pass the phase to ScanExec. If we agree still keep it in FileIndex, need a set function of the phaseSummary for caller side.",
    "commit": "16d80c504c807d3626da1ff808f3c4c447187ea3",
    "createdAt": "2018-12-26T04:02:02Z",
    "diffHunk": "@@ -56,11 +60,17 @@ class CatalogFileIndex(\n \n   override def listFiles(\n       partitionFilters: Seq[Expression], dataFilters: Seq[Expression]): Seq[PartitionDirectory] = {\n-    filterPartitions(partitionFilters).listFiles(Nil, dataFilters)\n+    val (partitions, phase) = createPhaseSummary {",
    "line": 29
  }],
  "prId": 23327
}]