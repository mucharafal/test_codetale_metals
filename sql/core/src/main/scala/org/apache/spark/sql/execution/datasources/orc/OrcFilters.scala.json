[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Does this condition take the backtick in column name into account? For instance,\r\n\r\n```\r\n>>> spark.range(1).toDF(\"abc`.abc\").show()\r\n+--------+\r\n|abc`.abc|\r\n+--------+\r\n|       0|\r\n+--------+\r\n```",
    "commit": "7686179678b86369e3b62fb2ae8ae9a4384e5c14",
    "createdAt": "2018-10-01T09:33:25Z",
    "diffHunk": "@@ -67,6 +67,16 @@ private[sql] object OrcFilters {\n     }\n   }\n \n+  // Since ORC 1.5.0 (ORC-323), we need to quote for column names with `.` characters\n+  // in order to distinguish predicate pushdown for nested columns.\n+  private def quoteAttributeNameIfNeeded(name: String) : String = {\n+    if (!name.contains(\"`\") && name.contains(\".\")) {",
    "line": 7
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Thank you for review. I'll consider that, too.",
    "commit": "7686179678b86369e3b62fb2ae8ae9a4384e5c14",
    "createdAt": "2018-10-01T18:32:43Z",
    "diffHunk": "@@ -67,6 +67,16 @@ private[sql] object OrcFilters {\n     }\n   }\n \n+  // Since ORC 1.5.0 (ORC-323), we need to quote for column names with `.` characters\n+  // in order to distinguish predicate pushdown for nested columns.\n+  private def quoteAttributeNameIfNeeded(name: String) : String = {\n+    if (!name.contains(\"`\") && name.contains(\".\")) {",
    "line": 7
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "@HyukjinKwon . Actually, Spark 2.3.2 ORC (native/hive) doesn't support a backtick character in column names.  It fails on **writing** operation. And, although Spark 2.4.0 broadens the supported special characters like `.` and `\"` in column names, the backtick character is not handled yet.\r\n\r\nSo, for that one, I'll proceed in another PR since it's an improvement instead of a regression.\r\n\r\nAlso, cc @gatorsmile and @dbtsai .",
    "commit": "7686179678b86369e3b62fb2ae8ae9a4384e5c14",
    "createdAt": "2018-10-13T02:51:52Z",
    "diffHunk": "@@ -67,6 +67,16 @@ private[sql] object OrcFilters {\n     }\n   }\n \n+  // Since ORC 1.5.0 (ORC-323), we need to quote for column names with `.` characters\n+  // in order to distinguish predicate pushdown for nested columns.\n+  private def quoteAttributeNameIfNeeded(name: String) : String = {\n+    if (!name.contains(\"`\") && name.contains(\".\")) {",
    "line": 7
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "For `ORC` and `AVRO` improvement, [SPARK-25722](https://issues.apache.org/jira/browse/SPARK-25722) is created.",
    "commit": "7686179678b86369e3b62fb2ae8ae9a4384e5c14",
    "createdAt": "2018-10-13T03:05:04Z",
    "diffHunk": "@@ -67,6 +67,16 @@ private[sql] object OrcFilters {\n     }\n   }\n \n+  // Since ORC 1.5.0 (ORC-323), we need to quote for column names with `.` characters\n+  // in order to distinguish predicate pushdown for nested columns.\n+  private def quoteAttributeNameIfNeeded(name: String) : String = {\n+    if (!name.contains(\"`\") && name.contains(\".\")) {",
    "line": 7
  }],
  "prId": 22597
}]