[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "shall we do the same in `DescribeTableExec`?",
    "commit": "19499cf54a25759eead2aae3db242ea1a2252887",
    "createdAt": "2019-11-25T07:03:24Z",
    "diffHunk": "@@ -45,10 +42,12 @@ case class DescribeNamespaceExec(\n     val metadata = catalog.loadNamespaceMetadata(ns)\n \n     rows += toCatalystRow(\"Namespace Name\", ns.last)\n-    rows += toCatalystRow(\"Description\", metadata.get(COMMENT_TABLE_PROP))\n-    rows += toCatalystRow(\"Location\", metadata.get(LOCATION_TABLE_PROP))\n+    rows += toCatalystRow(\"Description\", metadata.get(SupportsNamespaces.PROP_COMMENT))\n+    rows += toCatalystRow(\"Location\", metadata.get(SupportsNamespaces.PROP_LOCATION))",
    "line": 17
  }, {
    "author": {
      "login": "fuwhu"
    },
    "body": "you mean show description and location even when extended is false? correct me if i misunderstand.\r\nIt might be a little different. I think the main content of \"describe table\" should be schema, taking description and location as extended may be reasonable (like in hive).\r\nWDYT?",
    "commit": "19499cf54a25759eead2aae3db242ea1a2252887",
    "createdAt": "2019-11-25T07:43:43Z",
    "diffHunk": "@@ -45,10 +42,12 @@ case class DescribeNamespaceExec(\n     val metadata = catalog.loadNamespaceMetadata(ns)\n \n     rows += toCatalystRow(\"Namespace Name\", ns.last)\n-    rows += toCatalystRow(\"Description\", metadata.get(COMMENT_TABLE_PROP))\n-    rows += toCatalystRow(\"Location\", metadata.get(LOCATION_TABLE_PROP))\n+    rows += toCatalystRow(\"Description\", metadata.get(SupportsNamespaces.PROP_COMMENT))\n+    rows += toCatalystRow(\"Location\", metadata.get(SupportsNamespaces.PROP_LOCATION))",
    "line": 17
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "I mean display location and comment nicely, instead of displaying them with `Properties (...)`. We can do it in a followup.",
    "commit": "19499cf54a25759eead2aae3db242ea1a2252887",
    "createdAt": "2019-11-25T08:36:26Z",
    "diffHunk": "@@ -45,10 +42,12 @@ case class DescribeNamespaceExec(\n     val metadata = catalog.loadNamespaceMetadata(ns)\n \n     rows += toCatalystRow(\"Namespace Name\", ns.last)\n-    rows += toCatalystRow(\"Description\", metadata.get(COMMENT_TABLE_PROP))\n-    rows += toCatalystRow(\"Location\", metadata.get(LOCATION_TABLE_PROP))\n+    rows += toCatalystRow(\"Description\", metadata.get(SupportsNamespaces.PROP_COMMENT))\n+    rows += toCatalystRow(\"Location\", metadata.get(SupportsNamespaces.PROP_LOCATION))",
    "line": 17
  }, {
    "author": {
      "login": "fuwhu"
    },
    "body": "ok, will do that in followup.",
    "commit": "19499cf54a25759eead2aae3db242ea1a2252887",
    "createdAt": "2019-11-25T08:45:41Z",
    "diffHunk": "@@ -45,10 +42,12 @@ case class DescribeNamespaceExec(\n     val metadata = catalog.loadNamespaceMetadata(ns)\n \n     rows += toCatalystRow(\"Namespace Name\", ns.last)\n-    rows += toCatalystRow(\"Description\", metadata.get(COMMENT_TABLE_PROP))\n-    rows += toCatalystRow(\"Location\", metadata.get(LOCATION_TABLE_PROP))\n+    rows += toCatalystRow(\"Description\", metadata.get(SupportsNamespaces.PROP_COMMENT))\n+    rows += toCatalystRow(\"Location\", metadata.get(SupportsNamespaces.PROP_LOCATION))",
    "line": 17
  }],
  "prId": 26617
}]