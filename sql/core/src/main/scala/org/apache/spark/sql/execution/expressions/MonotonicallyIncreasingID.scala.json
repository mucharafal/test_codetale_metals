[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "use partitionMask here?\n",
    "commit": "eb3a221d95839ff57b7579f87cbceaaf9ff19653",
    "createdAt": "2015-07-14T06:51:44Z",
    "diffHunk": "@@ -49,4 +55,17 @@ private[sql] case class MonotonicallyIncreasingID() extends LeafExpression {\n     count += 1\n     (TaskContext.get().partitionId().toLong << 33) + currentCount"
  }],
  "prId": 7392
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "i think you should just explicitly initialize partiitonmask, rather than relying on the current value (i.e. generate the code to initialize it with task context)\n",
    "commit": "eb3a221d95839ff57b7579f87cbceaaf9ff19653",
    "createdAt": "2015-07-14T06:52:19Z",
    "diffHunk": "@@ -49,4 +55,17 @@ private[sql] case class MonotonicallyIncreasingID() extends LeafExpression {\n     count += 1\n     (TaskContext.get().partitionId().toLong << 33) + currentCount\n   }\n+\n+  override def genCode(ctx: CodeGenContext, ev: GeneratedExpressionCode): String = {\n+    val countTerm = ctx.freshName(\"count\")\n+    val partitionMaskTerm = ctx.freshName(\"partitionMask\")\n+    ctx.mutableStates += ((\"long\", countTerm, count))\n+    ctx.mutableStates += ((\"long\", partitionMaskTerm, partitionMask))"
  }],
  "prId": 7392
}]