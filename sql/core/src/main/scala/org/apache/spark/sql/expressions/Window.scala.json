[{
  "comments": [{
    "author": {
      "login": "chenghao-intel"
    },
    "body": "Are we not going to support the case without any `partitionBy` or `orderBy` window?\n",
    "commit": "026d587835d5195df06219799b38c506fffbfea3",
    "createdAt": "2015-05-22T02:34:08Z",
    "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.expressions\n+\n+import org.apache.spark.annotation.Experimental\n+import org.apache.spark.sql.Column\n+import org.apache.spark.sql.catalyst.expressions._\n+\n+/**\n+ * :: Experimental ::\n+ * Utility functions for defining window in DataFrames.\n+ *\n+ * {{{\n+ *   // PARTITION BY country ORDER BY date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW\n+ *   Window.partitionBy(\"country\").orderBy(\"date\").rowsBetween(Long.MinValue, 0)\n+ *\n+ *   // PARTITION BY country ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING\n+ *   Window.partitionBy(\"country\").orderBy(\"date\").rowsBetween(-3, 3)\n+ * }}}\n+ *\n+ * @since 1.4.0\n+ */\n+@Experimental\n+object Window {\n+",
    "line": 40
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "i thought about it but i don't think there is a strong enough use case to have that. if users complain, we can add them later.\n",
    "commit": "026d587835d5195df06219799b38c506fffbfea3",
    "createdAt": "2015-05-22T05:29:07Z",
    "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.expressions\n+\n+import org.apache.spark.annotation.Experimental\n+import org.apache.spark.sql.Column\n+import org.apache.spark.sql.catalyst.expressions._\n+\n+/**\n+ * :: Experimental ::\n+ * Utility functions for defining window in DataFrames.\n+ *\n+ * {{{\n+ *   // PARTITION BY country ORDER BY date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW\n+ *   Window.partitionBy(\"country\").orderBy(\"date\").rowsBetween(Long.MinValue, 0)\n+ *\n+ *   // PARTITION BY country ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING\n+ *   Window.partitionBy(\"country\").orderBy(\"date\").rowsBetween(-3, 3)\n+ * }}}\n+ *\n+ * @since 1.4.0\n+ */\n+@Experimental\n+object Window {\n+",
    "line": 40
  }],
  "prId": 6343
}]