[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "Rename to ContinuousDataReaderThread.",
    "commit": "75c0b78f924d9c2f70b737c105e6f3cbc85d3b6e",
    "createdAt": "2018-05-02T00:06:09Z",
    "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.streaming.continuous\n+\n+import java.util.concurrent.BlockingQueue\n+import java.util.concurrent.atomic.AtomicBoolean\n+\n+import org.apache.spark.TaskContext\n+import org.apache.spark.sql.catalyst.expressions.UnsafeRow\n+import org.apache.spark.sql.sources.v2.reader.DataReader\n+import org.apache.spark.sql.sources.v2.reader.streaming.PartitionOffset\n+\n+/**\n+ * The data component of [[ContinuousQueuedDataReader]]. Pushes (row, offset) to the queue when\n+ * a new row arrives to the [[DataReader]].\n+ */\n+class DataReaderThread("
  }, {
    "author": {
      "login": "jose-torres"
    },
    "body": "I think maybe it's better as is now that it's an inner class.",
    "commit": "75c0b78f924d9c2f70b737c105e6f3cbc85d3b6e",
    "createdAt": "2018-05-02T18:53:36Z",
    "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.streaming.continuous\n+\n+import java.util.concurrent.BlockingQueue\n+import java.util.concurrent.atomic.AtomicBoolean\n+\n+import org.apache.spark.TaskContext\n+import org.apache.spark.sql.catalyst.expressions.UnsafeRow\n+import org.apache.spark.sql.sources.v2.reader.DataReader\n+import org.apache.spark.sql.sources.v2.reader.streaming.PartitionOffset\n+\n+/**\n+ * The data component of [[ContinuousQueuedDataReader]]. Pushes (row, offset) to the queue when\n+ * a new row arrives to the [[DataReader]].\n+ */\n+class DataReaderThread("
  }],
  "prId": 21200
}]