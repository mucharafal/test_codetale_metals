[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "nit: maybe better to mention that users can specify the CASCADE option to drop everything.",
    "commit": "33e411dcc8f8e4d002ef1f394b71728ebaef080d",
    "createdAt": "2019-11-12T07:59:47Z",
    "diffHunk": "@@ -21,26 +21,35 @@ import org.apache.spark.SparkException\n import org.apache.spark.sql.catalyst.InternalRow\n import org.apache.spark.sql.catalyst.analysis.NoSuchNamespaceException\n import org.apache.spark.sql.catalyst.expressions.Attribute\n-import org.apache.spark.sql.connector.catalog.SupportsNamespaces\n+import org.apache.spark.sql.connector.catalog.{CatalogPlugin, SupportsNamespaces}\n \n /**\n  * Physical plan node for dropping a namespace.\n  */\n case class DropNamespaceExec(\n-    catalog: SupportsNamespaces,\n+    catalog: CatalogPlugin,\n     namespace: Seq[String],\n     ifExists: Boolean,\n     cascade: Boolean)\n   extends V2CommandExec {\n   override protected def run(): Seq[InternalRow] = {\n+    import org.apache.spark.sql.connector.catalog.CatalogV2Implicits._\n+\n+    val nsCatalog = catalog.asNamespaceCatalog\n     val ns = namespace.toArray\n-    if (catalog.namespaceExists(ns)) {\n-      try {\n-        catalog.dropNamespace(ns)\n-      } catch {\n-        case e: IllegalStateException if cascade =>\n+    if (nsCatalog.namespaceExists(ns)) {\n+      // The default behavior of `SupportsNamespace.dropNamespace()` is cascading,\n+      // so make sure the namespace to drop is empty.\n+      if (!cascade) {\n+        if (catalog.asTableCatalog.listTables(ns).nonEmpty\n+          || nsCatalog.listNamespaces(ns).nonEmpty) {\n           throw new SparkException(\n-            \"Cascade option for droping namespace is not supported in V2 catalog\", e)\n+            s\"Cannot drop a non-empty namespace: ${namespace.quoted}.\")"
  }],
  "prId": 26476
}]