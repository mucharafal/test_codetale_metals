[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "It's already in a private package. `private[sql]` can be removed.",
    "commit": "7124ffab65a9eb41cc218fc9b52ce60dd8b4873c",
    "createdAt": "2018-11-01T03:49:34Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources\n+\n+import org.apache.spark.sql.internal.SQLConf\n+import org.apache.spark.sql.types.StructType\n+\n+/**\n+ * An optional mix-in for columnar [[FileFormat]]s. This trait provides some helpful metadata when\n+ * debugging a physical query plan.\n+ */\n+private[sql] trait ColumnarFileFormat {"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "and I would actually make it `pricate[datasources]` since that's only currently used in ParquetFileFormat.",
    "commit": "7124ffab65a9eb41cc218fc9b52ce60dd8b4873c",
    "createdAt": "2018-11-01T03:50:28Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources\n+\n+import org.apache.spark.sql.internal.SQLConf\n+import org.apache.spark.sql.types.StructType\n+\n+/**\n+ * An optional mix-in for columnar [[FileFormat]]s. This trait provides some helpful metadata when\n+ * debugging a physical query plan.\n+ */\n+private[sql] trait ColumnarFileFormat {"
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "Don't we allow other non built-in datasource to use this trait?",
    "commit": "7124ffab65a9eb41cc218fc9b52ce60dd8b4873c",
    "createdAt": "2018-11-01T03:54:20Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources\n+\n+import org.apache.spark.sql.internal.SQLConf\n+import org.apache.spark.sql.types.StructType\n+\n+/**\n+ * An optional mix-in for columnar [[FileFormat]]s. This trait provides some helpful metadata when\n+ * debugging a physical query plan.\n+ */\n+private[sql] trait ColumnarFileFormat {"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "If it's supposed to be exposed as an interface to external datasources, then I wouldn't even add this one. It looks a rough guess that it can be generalised.",
    "commit": "7124ffab65a9eb41cc218fc9b52ce60dd8b4873c",
    "createdAt": "2018-11-01T04:01:16Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources\n+\n+import org.apache.spark.sql.internal.SQLConf\n+import org.apache.spark.sql.types.StructType\n+\n+/**\n+ * An optional mix-in for columnar [[FileFormat]]s. This trait provides some helpful metadata when\n+ * debugging a physical query plan.\n+ */\n+private[sql] trait ColumnarFileFormat {"
  }, {
    "author": {
      "login": "mallman"
    },
    "body": "This is not meant to be exposed as an external interface for outside data sources. In fact, in making it private I intended to create something that's intentionally hidden. That it could be used more generally is possible, but I'm just looking for an abstraction with the lightest footprint that will allow its use in `FileSourceScanExec` without referencing `ParquetFileFormat` there. To reference a specific file format in `FileSourceScanExec` seems totally inappropriate.\r\n\r\nI'm hoping @dongjoon-hyun can offer his opinion on whether this can be generalized to the ORC file format.\r\n\r\nI understand that I'm making an assumption about our ability for other file formats to adopt this interface. Another purpose in making this interface private is that it makes it easy to modify to support other implementations if necessary.",
    "commit": "7124ffab65a9eb41cc218fc9b52ce60dd8b4873c",
    "createdAt": "2018-11-01T17:30:50Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources\n+\n+import org.apache.spark.sql.internal.SQLConf\n+import org.apache.spark.sql.types.StructType\n+\n+/**\n+ * An optional mix-in for columnar [[FileFormat]]s. This trait provides some helpful metadata when\n+ * debugging a physical query plan.\n+ */\n+private[sql] trait ColumnarFileFormat {"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Thanks for explanation. Mind changing it to `private[datasources]`? I am still not clear:\r\n\r\n1. If this information is worth enough for metadata and/or why it should be there\r\n2. If this information can be generalised\r\n3. The purpose of this info - is this purpose to check if the columns are actually being pruned or not?\r\n\r\nWhy can't it be just printed via logging?",
    "commit": "7124ffab65a9eb41cc218fc9b52ce60dd8b4873c",
    "createdAt": "2018-11-02T01:45:53Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources\n+\n+import org.apache.spark.sql.internal.SQLConf\n+import org.apache.spark.sql.types.StructType\n+\n+/**\n+ * An optional mix-in for columnar [[FileFormat]]s. This trait provides some helpful metadata when\n+ * debugging a physical query plan.\n+ */\n+private[sql] trait ColumnarFileFormat {"
  }, {
    "author": {
      "login": "mallman"
    },
    "body": "> The purpose of this info - is this purpose to check if the columns are actually being pruned or not?\r\n\r\nExactly.",
    "commit": "7124ffab65a9eb41cc218fc9b52ce60dd8b4873c",
    "createdAt": "2018-11-02T16:26:29Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources\n+\n+import org.apache.spark.sql.internal.SQLConf\n+import org.apache.spark.sql.types.StructType\n+\n+/**\n+ * An optional mix-in for columnar [[FileFormat]]s. This trait provides some helpful metadata when\n+ * debugging a physical query plan.\n+ */\n+private[sql] trait ColumnarFileFormat {"
  }, {
    "author": {
      "login": "mallman"
    },
    "body": "> Mind changing it to private[datasources]?\r\n\r\nI changed it to `private[execution]` because otherwise it's inaccessible to `FileSourceScanExec` (which is in the `execution` package).",
    "commit": "7124ffab65a9eb41cc218fc9b52ce60dd8b4873c",
    "createdAt": "2018-11-02T17:00:15Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources\n+\n+import org.apache.spark.sql.internal.SQLConf\n+import org.apache.spark.sql.types.StructType\n+\n+/**\n+ * An optional mix-in for columnar [[FileFormat]]s. This trait provides some helpful metadata when\n+ * debugging a physical query plan.\n+ */\n+private[sql] trait ColumnarFileFormat {"
  }],
  "prId": 22905
}]