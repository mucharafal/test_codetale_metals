[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "I made this var to reduce the diff.",
    "commit": "a5614f8fc1346fca321a413d107fddd70d8197c8",
    "createdAt": "2018-05-23T10:22:20Z",
    "diffHunk": "@@ -294,9 +294,12 @@ object InMemoryFileIndex extends Logging {\n       if (filter != null) allFiles.filter(f => filter.accept(f.getPath)) else allFiles\n     }\n \n-    allLeafStatuses.filterNot(status => shouldFilterOut(status.getPath.getName)).map {\n+    val missingFiles = mutable.ArrayBuffer.empty[String]\n+    val filteredLeafStatuses = allLeafStatuses.filterNot(\n+      status => shouldFilterOut(status.getPath.getName))",
    "line": 7
  }],
  "prId": 21408
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "error message looks like this:\r\n\r\n```\r\nInMemoryFileIndex: The paths [hdfs://.../rel/00171151/input/hyukjin/part-43011-\r\nfd2d682a-ade1-4b0d-9e52-ab5c5d895cc9-c000.csv, ... ] were not found. Were they deleted very recently?\r\n```\r\n",
    "commit": "a5614f8fc1346fca321a413d107fddd70d8197c8",
    "createdAt": "2018-05-23T10:23:12Z",
    "diffHunk": "@@ -311,14 +314,27 @@ object InMemoryFileIndex extends Logging {\n         // The other constructor of LocatedFileStatus will call FileStatus.getPermission(),\n         // which is very slow on some file system (RawLocalFileSystem, which is launch a\n         // subprocess and parse the stdout).\n-        val locations = fs.getFileBlockLocations(f, 0, f.getLen)\n-        val lfs = new LocatedFileStatus(f.getLen, f.isDirectory, f.getReplication, f.getBlockSize,\n-          f.getModificationTime, 0, null, null, null, null, f.getPath, locations)\n-        if (f.isSymlink) {\n-          lfs.setSymlink(f.getSymlink)\n+        try {\n+          val locations = fs.getFileBlockLocations(f, 0, f.getLen)\n+          val lfs = new LocatedFileStatus(f.getLen, f.isDirectory, f.getReplication, f.getBlockSize,\n+            f.getModificationTime, 0, null, null, null, null, f.getPath, locations)\n+          if (f.isSymlink) {\n+            lfs.setSymlink(f.getSymlink)\n+          }\n+          Some(lfs)\n+        } catch {\n+          case _: FileNotFoundException =>\n+            missingFiles += f.getPath.toString\n+            None\n         }\n-        lfs\n     }\n+\n+    if (missingFiles.nonEmpty) {\n+      logWarning(s\"The paths [${missingFiles.mkString(\", \")}] were not found. \" +\n+        \"Were they deleted very recently?\")"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "maybe\r\n```\r\nInMemoryFileIndex: the following files were missing during file scan:\r\npath1\r\npath2\r\n...\r\n```",
    "commit": "a5614f8fc1346fca321a413d107fddd70d8197c8",
    "createdAt": "2018-05-23T14:12:56Z",
    "diffHunk": "@@ -311,14 +314,27 @@ object InMemoryFileIndex extends Logging {\n         // The other constructor of LocatedFileStatus will call FileStatus.getPermission(),\n         // which is very slow on some file system (RawLocalFileSystem, which is launch a\n         // subprocess and parse the stdout).\n-        val locations = fs.getFileBlockLocations(f, 0, f.getLen)\n-        val lfs = new LocatedFileStatus(f.getLen, f.isDirectory, f.getReplication, f.getBlockSize,\n-          f.getModificationTime, 0, null, null, null, null, f.getPath, locations)\n-        if (f.isSymlink) {\n-          lfs.setSymlink(f.getSymlink)\n+        try {\n+          val locations = fs.getFileBlockLocations(f, 0, f.getLen)\n+          val lfs = new LocatedFileStatus(f.getLen, f.isDirectory, f.getReplication, f.getBlockSize,\n+            f.getModificationTime, 0, null, null, null, null, f.getPath, locations)\n+          if (f.isSymlink) {\n+            lfs.setSymlink(f.getSymlink)\n+          }\n+          Some(lfs)\n+        } catch {\n+          case _: FileNotFoundException =>\n+            missingFiles += f.getPath.toString\n+            None\n         }\n-        lfs\n     }\n+\n+    if (missingFiles.nonEmpty) {\n+      logWarning(s\"The paths [${missingFiles.mkString(\", \")}] were not found. \" +\n+        \"Were they deleted very recently?\")"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "no problem",
    "commit": "a5614f8fc1346fca321a413d107fddd70d8197c8",
    "createdAt": "2018-05-24T00:56:27Z",
    "diffHunk": "@@ -311,14 +314,27 @@ object InMemoryFileIndex extends Logging {\n         // The other constructor of LocatedFileStatus will call FileStatus.getPermission(),\n         // which is very slow on some file system (RawLocalFileSystem, which is launch a\n         // subprocess and parse the stdout).\n-        val locations = fs.getFileBlockLocations(f, 0, f.getLen)\n-        val lfs = new LocatedFileStatus(f.getLen, f.isDirectory, f.getReplication, f.getBlockSize,\n-          f.getModificationTime, 0, null, null, null, null, f.getPath, locations)\n-        if (f.isSymlink) {\n-          lfs.setSymlink(f.getSymlink)\n+        try {\n+          val locations = fs.getFileBlockLocations(f, 0, f.getLen)\n+          val lfs = new LocatedFileStatus(f.getLen, f.isDirectory, f.getReplication, f.getBlockSize,\n+            f.getModificationTime, 0, null, null, null, null, f.getPath, locations)\n+          if (f.isSymlink) {\n+            lfs.setSymlink(f.getSymlink)\n+          }\n+          Some(lfs)\n+        } catch {\n+          case _: FileNotFoundException =>\n+            missingFiles += f.getPath.toString\n+            None\n         }\n-        lfs\n     }\n+\n+    if (missingFiles.nonEmpty) {\n+      logWarning(s\"The paths [${missingFiles.mkString(\", \")}] were not found. \" +\n+        \"Were they deleted very recently?\")"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Now the error messages should look like:\r\n\r\n```\r\nthe following files were missing during file scan:\r\n  hdfs://.../rel/00171151/input/hyukjin/part-43011-...\r\n  hdfs://.../rel/00171151/input/hyukjin/part-43012-...\r\n  hdfs://.../rel/00171151/input/hyukjin/part-43013-...\r\n  ...\r\n```",
    "commit": "a5614f8fc1346fca321a413d107fddd70d8197c8",
    "createdAt": "2018-05-24T01:03:01Z",
    "diffHunk": "@@ -311,14 +314,27 @@ object InMemoryFileIndex extends Logging {\n         // The other constructor of LocatedFileStatus will call FileStatus.getPermission(),\n         // which is very slow on some file system (RawLocalFileSystem, which is launch a\n         // subprocess and parse the stdout).\n-        val locations = fs.getFileBlockLocations(f, 0, f.getLen)\n-        val lfs = new LocatedFileStatus(f.getLen, f.isDirectory, f.getReplication, f.getBlockSize,\n-          f.getModificationTime, 0, null, null, null, null, f.getPath, locations)\n-        if (f.isSymlink) {\n-          lfs.setSymlink(f.getSymlink)\n+        try {\n+          val locations = fs.getFileBlockLocations(f, 0, f.getLen)\n+          val lfs = new LocatedFileStatus(f.getLen, f.isDirectory, f.getReplication, f.getBlockSize,\n+            f.getModificationTime, 0, null, null, null, null, f.getPath, locations)\n+          if (f.isSymlink) {\n+            lfs.setSymlink(f.getSymlink)\n+          }\n+          Some(lfs)\n+        } catch {\n+          case _: FileNotFoundException =>\n+            missingFiles += f.getPath.toString\n+            None\n         }\n-        lfs\n     }\n+\n+    if (missingFiles.nonEmpty) {\n+      logWarning(s\"The paths [${missingFiles.mkString(\", \")}] were not found. \" +\n+        \"Were they deleted very recently?\")"
  }],
  "prId": 21408
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "only diff here is try and catch",
    "commit": "a5614f8fc1346fca321a413d107fddd70d8197c8",
    "createdAt": "2018-05-23T10:37:40Z",
    "diffHunk": "@@ -311,14 +314,27 @@ object InMemoryFileIndex extends Logging {\n         // The other constructor of LocatedFileStatus will call FileStatus.getPermission(),\n         // which is very slow on some file system (RawLocalFileSystem, which is launch a\n         // subprocess and parse the stdout).\n-        val locations = fs.getFileBlockLocations(f, 0, f.getLen)\n-        val lfs = new LocatedFileStatus(f.getLen, f.isDirectory, f.getReplication, f.getBlockSize,\n-          f.getModificationTime, 0, null, null, null, null, f.getPath, locations)\n-        if (f.isSymlink) {\n-          lfs.setSymlink(f.getSymlink)\n+        try {",
    "line": 24
  }],
  "prId": 21408
}]