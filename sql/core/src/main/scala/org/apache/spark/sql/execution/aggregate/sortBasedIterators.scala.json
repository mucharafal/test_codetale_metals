[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "this is for demonstration, I'm not sure how to use this feature in aggregate sort. \n",
    "commit": "0900ca10935dec9404724cf43c0bafdf99a23551",
    "createdAt": "2015-08-03T05:14:52Z",
    "diffHunk": "@@ -409,10 +409,19 @@ class FinalSortAggregationIterator(\n \n   override protected def initialInputBufferOffset: Int = groupingExpressions.length\n \n+  private[this] var copyBuffer = new Array[Byte](64)\n+  private def cheapRowCopy(row: InternalRow): UnsafeRow = {\n+    val unsafeRow = row.asInstanceOf[UnsafeRow]\n+    if (unsafeRow.getSizeInBytes() > copyBuffer.length) {\n+      copyBuffer = new Array[Byte](unsafeRow.getSizeInBytes)\n+    }\n+    unsafeRow.copyTo(copyBuffer)\n+  }\n+\n   override def initialize(): Unit = {\n     if (inputIter.hasNext) {\n       initializeBuffer()\n-      val currentRow = inputIter.next().copy()\n+      val currentRow = cheapRowCopy(inputIter.next())"
  }],
  "prId": 7885
}]