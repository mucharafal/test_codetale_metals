[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "should put a giant warning here that writes must be in increasing order of ordinals\n",
    "commit": "cab9286b15bd784a023cd2b2c5c3ad755ebb566b",
    "createdAt": "2015-10-21T21:58:10Z",
    "diffHunk": "@@ -20,18 +20,42 @@ package org.apache.spark.sql.columnar\n import org.apache.spark.Logging\n import org.apache.spark.sql.catalyst.InternalRow\n import org.apache.spark.sql.catalyst.expressions._\n-import org.apache.spark.sql.catalyst.expressions.codegen.{CodeFormatter, CodeGenerator}\n+import org.apache.spark.sql.catalyst.expressions.codegen.{UnsafeRowWriter, CodeFormatter, CodeGenerator}\n import org.apache.spark.sql.types._\n \n /**\n- * An Iterator to walk throught the InternalRows from a CachedBatch\n+ * An Iterator to walk through the InternalRows from a CachedBatch\n  */\n abstract class ColumnarIterator extends Iterator[InternalRow] {\n-  def initialize(input: Iterator[CachedBatch], mutableRow: MutableRow, columnTypes: Array[DataType],\n+  def initialize(input: Iterator[CachedBatch], columnTypes: Array[DataType],\n     columnIndexes: Array[Int]): Unit\n }\n \n /**\n+ * An helper class to update the fields of UnsafeRow, used by ColumnAccessor",
    "line": 19
  }],
  "prId": 9203
}]