[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "This change looks correct.\r\n\r\nI think there's another issue. This is checking where the end of the argument block is, so it should look for where `offset + length` is relative to b. Shouldn't the first condition be `offset + length >= b.getOffset`? Otherwise this is handling the case where the argument doesn't overlap at all with b -- imagine offset is much smaller than b.getOffset. \r\n\r\nThe result here could be negative. I think that's masked by the fact that these are filtered for size > 0 below, and so I guess the logic ends up correct, in that these are not considered. It might be worth adjusting for clarity as it took me a few minutes to reason about why this was different.\r\n\r\nAnyway, in this case, the argument isn't fully contained in b (that is handled in the case above actually, by `.min(length)` -- might update the comment). Then it's true that the `.min()` below is not needed.",
    "commit": "ae40a17399de493f82a58d0e4c5f2bef1aa5bbb7",
    "createdAt": "2019-11-24T14:39:51Z",
    "diffHunk": "@@ -69,8 +69,8 @@ object PartitionedFileUtil {\n         b.getHosts -> (b.getOffset + b.getLength - offset).min(length)\n \n       // The fragment ends at a position within this block\n-      case b if offset <= b.getOffset && offset + length < b.getLength =>\n-        b.getHosts -> (offset + length - b.getOffset).min(length)\n+      case b if offset <= b.getOffset && offset + length < b.getOffset + b.getLength =>"
  }, {
    "author": {
      "login": "mdianjun"
    },
    "body": "@srowen  I have fixed it, PTAL.",
    "commit": "ae40a17399de493f82a58d0e4c5f2bef1aa5bbb7",
    "createdAt": "2019-11-26T02:39:29Z",
    "diffHunk": "@@ -69,8 +69,8 @@ object PartitionedFileUtil {\n         b.getHosts -> (b.getOffset + b.getLength - offset).min(length)\n \n       // The fragment ends at a position within this block\n-      case b if offset <= b.getOffset && offset + length < b.getLength =>\n-        b.getHosts -> (offset + length - b.getOffset).min(length)\n+      case b if offset <= b.getOffset && offset + length < b.getOffset + b.getLength =>"
  }],
  "prId": 26650
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "I think this might properly be `<` instead, but, I also think it's not needed. The `offset >= b.getOffset` case is already handled above if the fragment starts within the block. And if it starts after the block, then it won't end in the block, and that is checked below. So this should already only handle cases where it starts before the block.",
    "commit": "ae40a17399de493f82a58d0e4c5f2bef1aa5bbb7",
    "createdAt": "2019-11-26T15:23:03Z",
    "diffHunk": "@@ -69,8 +69,10 @@ object PartitionedFileUtil {\n         b.getHosts -> (b.getOffset + b.getLength - offset).min(length)\n \n       // The fragment ends at a position within this block\n-      case b if offset <= b.getOffset && offset + length < b.getLength =>\n-        b.getHosts -> (offset + length - b.getOffset).min(length)\n+      case b if offset <= b.getOffset &&"
  }, {
    "author": {
      "login": "mdianjun"
    },
    "body": "Okï¼Œfixed it.",
    "commit": "ae40a17399de493f82a58d0e4c5f2bef1aa5bbb7",
    "createdAt": "2019-11-29T01:44:21Z",
    "diffHunk": "@@ -69,8 +69,10 @@ object PartitionedFileUtil {\n         b.getHosts -> (b.getOffset + b.getLength - offset).min(length)\n \n       // The fragment ends at a position within this block\n-      case b if offset <= b.getOffset && offset + length < b.getLength =>\n-        b.getHosts -> (offset + length - b.getOffset).min(length)\n+      case b if offset <= b.getOffset &&"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "I'm saying this clause is not necessary at all.",
    "commit": "ae40a17399de493f82a58d0e4c5f2bef1aa5bbb7",
    "createdAt": "2019-11-29T14:07:42Z",
    "diffHunk": "@@ -69,8 +69,10 @@ object PartitionedFileUtil {\n         b.getHosts -> (b.getOffset + b.getLength - offset).min(length)\n \n       // The fragment ends at a position within this block\n-      case b if offset <= b.getOffset && offset + length < b.getLength =>\n-        b.getHosts -> (offset + length - b.getOffset).min(length)\n+      case b if offset <= b.getOffset &&"
  }],
  "prId": 26650
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "I might update the comment above this, while you're here, to say that it handles the case where the fragment is fully contained in the block. It would help future readers; it took me some time to work it out.",
    "commit": "ae40a17399de493f82a58d0e4c5f2bef1aa5bbb7",
    "createdAt": "2019-11-26T15:24:18Z",
    "diffHunk": "@@ -69,8 +69,10 @@ object PartitionedFileUtil {\n         b.getHosts -> (b.getOffset + b.getLength - offset).min(length)",
    "line": 8
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "This is still worth updating.",
    "commit": "ae40a17399de493f82a58d0e4c5f2bef1aa5bbb7",
    "createdAt": "2019-11-29T14:07:51Z",
    "diffHunk": "@@ -69,8 +69,10 @@ object PartitionedFileUtil {\n         b.getHosts -> (b.getOffset + b.getLength - offset).min(length)",
    "line": 8
  }, {
    "author": {
      "login": "mdianjun"
    },
    "body": "Updated.",
    "commit": "ae40a17399de493f82a58d0e4c5f2bef1aa5bbb7",
    "createdAt": "2019-11-30T13:38:44Z",
    "diffHunk": "@@ -69,8 +69,10 @@ object PartitionedFileUtil {\n         b.getHosts -> (b.getOffset + b.getLength - offset).min(length)",
    "line": 8
  }],
  "prId": 26650
}]