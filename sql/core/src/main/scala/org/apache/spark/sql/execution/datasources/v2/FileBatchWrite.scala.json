[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "shall we call `FileFormatWriter.processStats` here?",
    "commit": "7bd1c092e304de83acc902a320ed2151e29a92e3",
    "createdAt": "2019-01-29T08:11:37Z",
    "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.datasources.v2\n+\n+import org.apache.hadoop.mapreduce.Job\n+\n+import org.apache.spark.internal.io.FileCommitProtocol\n+import org.apache.spark.sql.execution.datasources.{WriteJobDescription, WriteTaskResult}\n+import org.apache.spark.sql.sources.v2.writer._\n+import org.apache.spark.util.SerializableConfiguration\n+\n+class FileBatchWrite(\n+    job: Job,\n+    description: WriteJobDescription,\n+    committer: FileCommitProtocol)\n+  extends BatchWrite {\n+  override def commit(messages: Array[WriterCommitMessage]): Unit = {\n+    committer.commitJob(job, messages.map(_.asInstanceOf[WriteTaskResult].commitMsg))"
  }],
  "prId": 23601
}]