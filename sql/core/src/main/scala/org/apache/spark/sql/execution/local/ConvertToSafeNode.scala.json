[{
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "minor: could be `child.schema`\n",
    "commit": "fcec2975d74710f9d1604a01b806566e1f47f1a1",
    "createdAt": "2015-09-09T23:28:50Z",
    "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+\n+package org.apache.spark.sql.execution.local\n+\n+import org.apache.spark.sql.SQLConf\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.sql.catalyst.expressions.{Attribute, FromUnsafeProjection, Projection}\n+\n+case class ConvertToSafeNode(conf: SQLConf, child: LocalNode) extends UnaryLocalNode(conf) {\n+\n+  override def output: Seq[Attribute] = child.output\n+\n+  private[this] var convertToSafe: Projection = _\n+\n+  override def open(): Unit = {\n+    child.open()\n+    convertToSafe = FromUnsafeProjection(child.output.map(_.dataType))"
  }],
  "prId": 8535
}]