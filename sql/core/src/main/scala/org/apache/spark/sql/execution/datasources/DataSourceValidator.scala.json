[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "why we have this?",
    "commit": "5ed2c0d68be372304bc8a46046d28d5b7aadcb97",
    "createdAt": "2017-07-04T06:22:40Z",
    "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources\n+\n+import org.apache.spark.sql.catalyst.analysis.Resolver\n+import org.apache.spark.sql.types.StructType\n+\n+\n+/**\n+ * Used to validate an input schema for datasource-specific cases (e.g., schema definition\n+ * from an datasource option and unsupported field names). `validateSchema` is called\n+ * in [[DataSource]] for the checking.\n+ */\n+trait DataSourceValidator {"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "As explained above, I couldn't catch the name duplication for the JDBC case. So, I added this interface so as to catch each datasource-specific name duplication and other schema invalidation. But, I felt I went too far for the corner case...",
    "commit": "5ed2c0d68be372304bc8a46046d28d5b7aadcb97",
    "createdAt": "2017-07-04T14:16:18Z",
    "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources\n+\n+import org.apache.spark.sql.catalyst.analysis.Resolver\n+import org.apache.spark.sql.types.StructType\n+\n+\n+/**\n+ * Used to validate an input schema for datasource-specific cases (e.g., schema definition\n+ * from an datasource option and unsupported field names). `validateSchema` is called\n+ * in [[DataSource]] for the checking.\n+ */\n+trait DataSourceValidator {"
  }],
  "prId": 17758
}]