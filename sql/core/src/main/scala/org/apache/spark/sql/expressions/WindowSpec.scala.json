[{
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "1.4.0?",
    "commit": "7dc5519ef18da987a3202cbb7c24d74c5a907b60",
    "createdAt": "2017-06-13T02:25:22Z",
    "diffHunk": "@@ -113,7 +132,25 @@ class WindowSpec private[sql](\n     between(RangeFrame, start, end)\n   }\n \n-  private def between(typ: FrameType, start: Long, end: Long): WindowSpec = {\n+  /**\n+   * Defines the frame boundaries, from `start` (inclusive) to `end` (inclusive). And specifies\n+   * potential exclude type\n+   *\n+   * Both `start` and `end` are relative from the current row. For example, \"0\" means \"current row\",\n+   * while \"-1\" means one off before the current row, and \"5\" means the five off after the\n+   * current row.\n+   *\n+   * @param start boundary start, inclusive.\n+   *              The frame is unbounded if this is the minimum long value.\n+   * @param end boundary end, inclusive.\n+   *            The frame is unbounded if this is the maximum long value.\n+   * @since 1.4.0",
    "line": 43
  }],
  "prId": 12147
}, {
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "We already have `rowsBetween` which doesn't specify exclude type. So I think we don't need to have default value for `exclude`.",
    "commit": "7dc5519ef18da987a3202cbb7c24d74c5a907b60",
    "createdAt": "2017-06-13T02:26:47Z",
    "diffHunk": "@@ -113,7 +132,25 @@ class WindowSpec private[sql](\n     between(RangeFrame, start, end)\n   }\n \n-  private def between(typ: FrameType, start: Long, end: Long): WindowSpec = {\n+  /**\n+   * Defines the frame boundaries, from `start` (inclusive) to `end` (inclusive). And specifies\n+   * potential exclude type\n+   *\n+   * Both `start` and `end` are relative from the current row. For example, \"0\" means \"current row\",\n+   * while \"-1\" means one off before the current row, and \"5\" means the five off after the\n+   * current row.\n+   *\n+   * @param start boundary start, inclusive.\n+   *              The frame is unbounded if this is the minimum long value.\n+   * @param end boundary end, inclusive.\n+   *            The frame is unbounded if this is the maximum long value.\n+   * @since 1.4.0\n+   */\n+  def rangeBetweenExclude(start: Long, end: Long, exclude: String = \"\"): WindowSpec = {",
    "line": 45
  }],
  "prId": 12147
}]