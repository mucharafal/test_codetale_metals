[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "should this just be a field now rather than call by name?\n",
    "commit": "5aa780fae9afe1df00ef017d24fd1460b9e17e3c",
    "createdAt": "2016-01-14T02:30:51Z",
    "diffHunk": "@@ -31,7 +31,12 @@ import org.apache.spark.sql.types.StringType\n  *\n  * @param fallback A function that parses an input string to a logical plan\n  */\n-class SparkSQLParser(fallback: String => LogicalPlan) extends AbstractSparkSQLParser {\n+class SparkSQLParser(fallback: => ParserDialect) extends AbstractSparkSQLParser {"
  }, {
    "author": {
      "login": "hvanhovell"
    },
    "body": "I thought the same thing. The problem is that we we pass the `SQLContext.getDialect()` method to the parser (same as before): this allows us to change the dialect whenever we want.\n",
    "commit": "5aa780fae9afe1df00ef017d24fd1460b9e17e3c",
    "createdAt": "2016-01-14T19:47:54Z",
    "diffHunk": "@@ -31,7 +31,12 @@ import org.apache.spark.sql.types.StringType\n  *\n  * @param fallback A function that parses an input string to a logical plan\n  */\n-class SparkSQLParser(fallback: String => LogicalPlan) extends AbstractSparkSQLParser {\n+class SparkSQLParser(fallback: => ParserDialect) extends AbstractSparkSQLParser {"
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "OK in that case we should have a comment here explaining the choice - otherwise somebody might come in and refactor it in the future.\n",
    "commit": "5aa780fae9afe1df00ef017d24fd1460b9e17e3c",
    "createdAt": "2016-01-14T19:58:57Z",
    "diffHunk": "@@ -31,7 +31,12 @@ import org.apache.spark.sql.types.StringType\n  *\n  * @param fallback A function that parses an input string to a logical plan\n  */\n-class SparkSQLParser(fallback: String => LogicalPlan) extends AbstractSparkSQLParser {\n+class SparkSQLParser(fallback: => ParserDialect) extends AbstractSparkSQLParser {"
  }],
  "prId": 10745
}]