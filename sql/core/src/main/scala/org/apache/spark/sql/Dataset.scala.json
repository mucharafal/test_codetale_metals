[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "I would add it to `SQLConf`",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-08-25T15:54:24Z",
    "diffHunk": "@@ -815,6 +815,24 @@ class Dataset[T] private[sql](\n     println(showString(numRows, truncate, vertical))\n   // scalastyle:on println\n \n+  /**\n+   * Returns the default number of rows to show when the show function is called without\n+   * a user specified max number of rows.\n+   * @since 2.3.0\n+   */\n+  private def numberOfRowsToShow(): Int = {\n+    this.sparkSession.conf.get(\"spark.sql.show.defaultNumRows\", \"20\").toInt"
  }, {
    "author": {
      "login": "kiszk"
    },
    "body": "+1",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-08-26T17:07:42Z",
    "diffHunk": "@@ -815,6 +815,24 @@ class Dataset[T] private[sql](\n     println(showString(numRows, truncate, vertical))\n   // scalastyle:on println\n \n+  /**\n+   * Returns the default number of rows to show when the show function is called without\n+   * a user specified max number of rows.\n+   * @since 2.3.0\n+   */\n+  private def numberOfRowsToShow(): Int = {\n+    this.sparkSession.conf.get(\"spark.sql.show.defaultNumRows\", \"20\").toInt"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "+1",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-08-28T00:54:58Z",
    "diffHunk": "@@ -815,6 +815,24 @@ class Dataset[T] private[sql](\n     println(showString(numRows, truncate, vertical))\n   // scalastyle:on println\n \n+  /**\n+   * Returns the default number of rows to show when the show function is called without\n+   * a user specified max number of rows.\n+   * @since 2.3.0\n+   */\n+  private def numberOfRowsToShow(): Int = {\n+    this.sparkSession.conf.get(\"spark.sql.show.defaultNumRows\", \"20\").toInt"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "How about `spark.sql.defaultNumRowsInShow`?",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-08-28T01:03:28Z",
    "diffHunk": "@@ -815,6 +815,24 @@ class Dataset[T] private[sql](\n     println(showString(numRows, truncate, vertical))\n   // scalastyle:on println\n \n+  /**\n+   * Returns the default number of rows to show when the show function is called without\n+   * a user specified max number of rows.\n+   * @since 2.3.0\n+   */\n+  private def numberOfRowsToShow(): Int = {\n+    this.sparkSession.conf.get(\"spark.sql.show.defaultNumRows\", \"20\").toInt"
  }, {
    "author": {
      "login": "AndrewKL"
    },
    "body": "will do",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-09-06T13:08:56Z",
    "diffHunk": "@@ -815,6 +815,24 @@ class Dataset[T] private[sql](\n     println(showString(numRows, truncate, vertical))\n   // scalastyle:on println\n \n+  /**\n+   * Returns the default number of rows to show when the show function is called without\n+   * a user specified max number of rows.\n+   * @since 2.3.0\n+   */\n+  private def numberOfRowsToShow(): Int = {\n+    this.sparkSession.conf.get(\"spark.sql.show.defaultNumRows\", \"20\").toInt"
  }],
  "prId": 22162
}, {
  "comments": [{
    "author": {
      "login": "kiszk"
    },
    "body": "ditto",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-08-26T17:09:47Z",
    "diffHunk": "@@ -815,6 +815,24 @@ class Dataset[T] private[sql](\n     println(showString(numRows, truncate, vertical))\n   // scalastyle:on println\n \n+  /**\n+   * Returns the default number of rows to show when the show function is called without\n+   * a user specified max number of rows.\n+   * @since 2.3.0\n+   */\n+  private def numberOfRowsToShow(): Int = {\n+    this.sparkSession.conf.get(\"spark.sql.show.defaultNumRows\", \"20\").toInt\n+  }\n+\n+  /**\n+   * Returns the default max characters per column to show before truncation when\n+   * the show function is called with truncate.\n+   * @since 2.3.0\n+   */\n+  private def maxCharactersPerColumnToShow(): Int = {\n+    this.sparkSession.conf.get(\"spark.sql.show.truncateMaxCharsPerColumn\", \"20\").toInt"
  }],
  "prId": 22162
}, {
  "comments": [{
    "author": {
      "login": "mgaido91"
    },
    "body": "I'd remove the `()`",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-08-27T15:11:44Z",
    "diffHunk": "@@ -815,6 +815,24 @@ class Dataset[T] private[sql](\n     println(showString(numRows, truncate, vertical))\n   // scalastyle:on println\n \n+  /**\n+   * Returns the default number of rows to show when the show function is called without\n+   * a user specified max number of rows.\n+   * @since 2.3.0\n+   */\n+  private def numberOfRowsToShow(): Int = {"
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "we shouldn't be adding methods here",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-08-27T16:00:52Z",
    "diffHunk": "@@ -815,6 +815,24 @@ class Dataset[T] private[sql](\n     println(showString(numRows, truncate, vertical))\n   // scalastyle:on println\n \n+  /**\n+   * Returns the default number of rows to show when the show function is called without\n+   * a user specified max number of rows.\n+   * @since 2.3.0\n+   */\n+  private def numberOfRowsToShow(): Int = {"
  }],
  "prId": 22162
}, {
  "comments": [{
    "author": {
      "login": "mgaido91"
    },
    "body": "ditto",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-08-27T15:11:53Z",
    "diffHunk": "@@ -815,6 +815,24 @@ class Dataset[T] private[sql](\n     println(showString(numRows, truncate, vertical))\n   // scalastyle:on println\n \n+  /**\n+   * Returns the default number of rows to show when the show function is called without\n+   * a user specified max number of rows.\n+   * @since 2.3.0\n+   */\n+  private def numberOfRowsToShow(): Int = {\n+    this.sparkSession.conf.get(\"spark.sql.show.defaultNumRows\", \"20\").toInt\n+  }\n+\n+  /**\n+   * Returns the default max characters per column to show before truncation when\n+   * the show function is called with truncate.\n+   * @since 2.3.0\n+   */\n+  private def maxCharactersPerColumnToShow(): Int = {"
  }],
  "prId": 22162
}, {
  "comments": [{
    "author": {
      "login": "mgaido91"
    },
    "body": "ditto",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-08-27T15:12:12Z",
    "diffHunk": "@@ -815,6 +815,24 @@ class Dataset[T] private[sql](\n     println(showString(numRows, truncate, vertical))\n   // scalastyle:on println\n \n+  /**\n+   * Returns the default number of rows to show when the show function is called without\n+   * a user specified max number of rows.\n+   * @since 2.3.0\n+   */\n+  private def numberOfRowsToShow(): Int = {\n+    this.sparkSession.conf.get(\"spark.sql.show.defaultNumRows\", \"20\").toInt\n+  }\n+\n+  /**\n+   * Returns the default max characters per column to show before truncation when\n+   * the show function is called with truncate.\n+   * @since 2.3.0"
  }, {
    "author": {
      "login": "AndrewKL"
    },
    "body": "I'll update this.",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-09-06T13:07:42Z",
    "diffHunk": "@@ -815,6 +815,24 @@ class Dataset[T] private[sql](\n     println(showString(numRows, truncate, vertical))\n   // scalastyle:on println\n \n+  /**\n+   * Returns the default number of rows to show when the show function is called without\n+   * a user specified max number of rows.\n+   * @since 2.3.0\n+   */\n+  private def numberOfRowsToShow(): Int = {\n+    this.sparkSession.conf.get(\"spark.sql.show.defaultNumRows\", \"20\").toInt\n+  }\n+\n+  /**\n+   * Returns the default max characters per column to show before truncation when\n+   * the show function is called with truncate.\n+   * @since 2.3.0"
  }],
  "prId": 22162
}, {
  "comments": [{
    "author": {
      "login": "mgaido91"
    },
    "body": "not needed as this is private, moreover, it'd be since 2.4.0",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-08-27T15:12:26Z",
    "diffHunk": "@@ -815,6 +815,24 @@ class Dataset[T] private[sql](\n     println(showString(numRows, truncate, vertical))\n   // scalastyle:on println\n \n+  /**\n+   * Returns the default number of rows to show when the show function is called without\n+   * a user specified max number of rows.\n+   * @since 2.3.0"
  }, {
    "author": {
      "login": "AndrewKL"
    },
    "body": "I'll update this.",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-09-06T13:07:29Z",
    "diffHunk": "@@ -815,6 +815,24 @@ class Dataset[T] private[sql](\n     println(showString(numRows, truncate, vertical))\n   // scalastyle:on println\n \n+  /**\n+   * Returns the default number of rows to show when the show function is called without\n+   * a user specified max number of rows.\n+   * @since 2.3.0"
  }],
  "prId": 22162
}]