[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "I re-run the `JsonBenmark` and no performance regression is observed.",
    "commit": "f7a629906f1ba15b663eb8ab1c6b49daa48c34d2",
    "createdAt": "2018-05-20T11:22:38Z",
    "diffHunk": "@@ -66,9 +67,13 @@ private[sql] object JsonInferSchema {\n                 s\"Parse Mode: ${FailFastMode.name}.\", e)\n           }\n         }\n-      }\n-    }.fold(StructType(Nil))(\n-      compatibleRootType(columnNameOfCorruptRecord, parseMode))\n+      }.reduceOption(typeMerger).toIterator\n+    }\n+\n+    // Here we get RDD local iterator then fold, instead of calling `RDD.fold` directly, because\n+    // `RDD.fold` will run the fold function in DAGScheduler event loop thread, which may not have\n+    // active SparkSession and `SQLConf.get` may point to the wrong configs.\n+    val rootType = mergedTypesFromPartitions.toLocalIterator.fold(StructType(Nil))(typeMerger)",
    "line": 25
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "LGTM",
    "commit": "f7a629906f1ba15b663eb8ab1c6b49daa48c34d2",
    "createdAt": "2018-05-20T11:28:29Z",
    "diffHunk": "@@ -66,9 +67,13 @@ private[sql] object JsonInferSchema {\n                 s\"Parse Mode: ${FailFastMode.name}.\", e)\n           }\n         }\n-      }\n-    }.fold(StructType(Nil))(\n-      compatibleRootType(columnNameOfCorruptRecord, parseMode))\n+      }.reduceOption(typeMerger).toIterator\n+    }\n+\n+    // Here we get RDD local iterator then fold, instead of calling `RDD.fold` directly, because\n+    // `RDD.fold` will run the fold function in DAGScheduler event loop thread, which may not have\n+    // active SparkSession and `SQLConf.get` may point to the wrong configs.\n+    val rootType = mergedTypesFromPartitions.toLocalIterator.fold(StructType(Nil))(typeMerger)",
    "line": 25
  }, {
    "author": {
      "login": "mgaido91"
    },
    "body": "can the same problem happen also in other places? this seems to be quite a tricky issue which may happen in general. Can we avoid it somehow?",
    "commit": "f7a629906f1ba15b663eb8ab1c6b49daa48c34d2",
    "createdAt": "2018-05-20T12:59:46Z",
    "diffHunk": "@@ -66,9 +67,13 @@ private[sql] object JsonInferSchema {\n                 s\"Parse Mode: ${FailFastMode.name}.\", e)\n           }\n         }\n-      }\n-    }.fold(StructType(Nil))(\n-      compatibleRootType(columnNameOfCorruptRecord, parseMode))\n+      }.reduceOption(typeMerger).toIterator\n+    }\n+\n+    // Here we get RDD local iterator then fold, instead of calling `RDD.fold` directly, because\n+    // `RDD.fold` will run the fold function in DAGScheduler event loop thread, which may not have\n+    // active SparkSession and `SQLConf.get` may point to the wrong configs.\n+    val rootType = mergedTypesFromPartitions.toLocalIterator.fold(StructType(Nil))(typeMerger)",
    "line": 25
  }],
  "prId": 21376
}]