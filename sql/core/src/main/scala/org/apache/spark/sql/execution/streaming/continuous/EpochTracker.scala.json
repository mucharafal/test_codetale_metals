[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "Add docs to explain the purpose and usage of this class. ",
    "commit": "41577c35a7c59ffcf48225fbc30b0dc3c8cab674",
    "createdAt": "2018-05-07T03:38:14Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.streaming.continuous\n+\n+import java.util.concurrent.atomic.AtomicLong\n+\n+object EpochTracker {"
  }],
  "prId": 21239
}, {
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "Better to not refer to specific usages of methods, rather the general purpose of the method. In future, classes other than ContinuousWriteRDD can use it. ",
    "commit": "41577c35a7c59ffcf48225fbc30b0dc3c8cab674",
    "createdAt": "2018-05-07T03:40:22Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.streaming.continuous\n+\n+import java.util.concurrent.atomic.AtomicLong\n+\n+object EpochTracker {\n+  // The current epoch. Note that this is a shared reference; ContinuousWriteRDD.compute() will"
  }, {
    "author": {
      "login": "tdas"
    },
    "body": "This goes for other methods below.",
    "commit": "41577c35a7c59ffcf48225fbc30b0dc3c8cab674",
    "createdAt": "2018-05-07T03:41:52Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.streaming.continuous\n+\n+import java.util.concurrent.atomic.AtomicLong\n+\n+object EpochTracker {\n+  // The current epoch. Note that this is a shared reference; ContinuousWriteRDD.compute() will"
  }, {
    "author": {
      "login": "jose-torres"
    },
    "body": "I don't think it's the case that other classes can use it in the future. The correctness of this object depends on the fact that it's read only from everywhere but a single location. If we want to future-proof against having multiple things mutate it, we should remove the utility methods and only expose the AtomicLong.",
    "commit": "41577c35a7c59ffcf48225fbc30b0dc3c8cab674",
    "createdAt": "2018-05-07T15:42:20Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.streaming.continuous\n+\n+import java.util.concurrent.atomic.AtomicLong\n+\n+object EpochTracker {\n+  // The current epoch. Note that this is a shared reference; ContinuousWriteRDD.compute() will"
  }],
  "prId": 21239
}]