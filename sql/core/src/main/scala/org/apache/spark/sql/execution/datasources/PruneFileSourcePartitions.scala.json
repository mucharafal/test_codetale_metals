[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "The bug is not here. We should get rid of this lines:\r\nhttps://github.com/apache/spark/blob/master/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/planning/patterns.scala#L71-L72\r\n",
    "commit": "2189ce013b384a2f54df491ee14f815c2c932f20",
    "createdAt": "2019-01-11T02:22:29Z",
    "diffHunk": "@@ -71,7 +71,13 @@ private[sql] object PruneFileSourcePartitions extends Rule[LogicalPlan] {\n         // Keep partition-pruning predicates so that they are visible in physical planning\n         val filterExpression = filters.reduceLeft(And)\n         val filter = Filter(filterExpression, prunedLogicalRelation)\n-        Project(projects, filter)\n+        op match {\n+          case h: ResolvedHint =>"
  }, {
    "author": {
      "login": "jzhuge"
    },
    "body": "I have tried this fix, it works. However, I am not sure about the original rational to add this code in SPARK-14581, and trying to minimize the impact of removing it because there are other callers of PhysicalOperation.unapply.\r\n\r\nIf @davies and @cloud-fan are ok and we can pass test cases covering the scenarios for this code, I'd be happy to go with this fix.",
    "commit": "2189ce013b384a2f54df491ee14f815c2c932f20",
    "createdAt": "2019-01-11T02:32:29Z",
    "diffHunk": "@@ -71,7 +71,13 @@ private[sql] object PruneFileSourcePartitions extends Rule[LogicalPlan] {\n         // Keep partition-pruning predicates so that they are visible in physical planning\n         val filterExpression = filters.reduceLeft(And)\n         val filter = Filter(filterExpression, prunedLogicalRelation)\n-        Project(projects, filter)\n+        op match {\n+          case h: ResolvedHint =>"
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "Just a bug. ",
    "commit": "2189ce013b384a2f54df491ee14f815c2c932f20",
    "createdAt": "2019-01-11T02:40:30Z",
    "diffHunk": "@@ -71,7 +71,13 @@ private[sql] object PruneFileSourcePartitions extends Rule[LogicalPlan] {\n         // Keep partition-pruning predicates so that they are visible in physical planning\n         val filterExpression = filters.reduceLeft(And)\n         val filter = Filter(filterExpression, prunedLogicalRelation)\n-        Project(projects, filter)\n+        op match {\n+          case h: ResolvedHint =>"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "seems better to remove that line.",
    "commit": "2189ce013b384a2f54df491ee14f815c2c932f20",
    "createdAt": "2019-01-11T03:28:25Z",
    "diffHunk": "@@ -71,7 +71,13 @@ private[sql] object PruneFileSourcePartitions extends Rule[LogicalPlan] {\n         // Keep partition-pruning predicates so that they are visible in physical planning\n         val filterExpression = filters.reduceLeft(And)\n         val filter = Filter(filterExpression, prunedLogicalRelation)\n-        Project(projects, filter)\n+        op match {\n+          case h: ResolvedHint =>"
  }],
  "prId": 23507
}]