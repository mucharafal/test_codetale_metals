[{
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "Should this be private instead of just telling people not to use it?\n",
    "commit": "0a1a73bb0f5509e01315961c75e99bc1f96fd114",
    "createdAt": "2015-01-27T23:07:30Z",
    "diffHunk": "@@ -0,0 +1,289 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+\n+package org.apache.spark.sql\n+\n+import scala.reflect.ClassTag\n+\n+import org.apache.spark.annotation.Experimental\n+import org.apache.spark.api.java.JavaRDD\n+import org.apache.spark.rdd.RDD\n+import org.apache.spark.sql.types.{DataType, StructType}\n+import org.apache.spark.storage.StorageLevel\n+\n+\n+/**\n+ * An internal interface defining the RDD-like methods for [[DataFrame]].\n+ * Please use [[DataFrame]] directly, and do NOT use this.\n+ */\n+trait RDDApi[T] {",
    "line": 33
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "private doesn't really mean anything in java ... there is no way to hide a private class as far as i know.\n",
    "commit": "0a1a73bb0f5509e01315961c75e99bc1f96fd114",
    "createdAt": "2015-01-28T00:41:25Z",
    "diffHunk": "@@ -0,0 +1,289 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+\n+package org.apache.spark.sql\n+\n+import scala.reflect.ClassTag\n+\n+import org.apache.spark.annotation.Experimental\n+import org.apache.spark.api.java.JavaRDD\n+import org.apache.spark.rdd.RDD\n+import org.apache.spark.sql.types.{DataType, StructType}\n+import org.apache.spark.storage.StorageLevel\n+\n+\n+/**\n+ * An internal interface defining the RDD-like methods for [[DataFrame]].\n+ * Please use [[DataFrame]] directly, and do NOT use this.\n+ */\n+trait RDDApi[T] {",
    "line": 33
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "but i will add the restriction anyway\n",
    "commit": "0a1a73bb0f5509e01315961c75e99bc1f96fd114",
    "createdAt": "2015-01-28T00:41:44Z",
    "diffHunk": "@@ -0,0 +1,289 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+\n+package org.apache.spark.sql\n+\n+import scala.reflect.ClassTag\n+\n+import org.apache.spark.annotation.Experimental\n+import org.apache.spark.api.java.JavaRDD\n+import org.apache.spark.rdd.RDD\n+import org.apache.spark.sql.types.{DataType, StructType}\n+import org.apache.spark.storage.StorageLevel\n+\n+\n+/**\n+ * An internal interface defining the RDD-like methods for [[DataFrame]].\n+ * Please use [[DataFrame]] directly, and do NOT use this.\n+ */\n+trait RDDApi[T] {",
    "line": 33
  }],
  "prId": 4173
}]