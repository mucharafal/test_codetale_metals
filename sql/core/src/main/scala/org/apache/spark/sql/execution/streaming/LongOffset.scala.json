[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "nit: extra line\n",
    "commit": "dabb628d0f39aeea94fd1afbad816b856b0a0eae",
    "createdAt": "2016-10-25T18:59:06Z",
    "diffHunk": "@@ -22,8 +22,18 @@ package org.apache.spark.sql.execution.streaming\n  */\n case class LongOffset(offset: Long) extends Offset {\n \n+  override val json = offset.toString\n+\n   def +(increment: Long): LongOffset = new LongOffset(offset + increment)\n   def -(decrement: Long): LongOffset = new LongOffset(offset - decrement)\n \n   override def toString: String = s\"#$offset\"\n }\n+\n+object LongOffset {\n+"
  }],
  "prId": 15626
}, {
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "nit: extra lines above and below.\n",
    "commit": "dabb628d0f39aeea94fd1afbad816b856b0a0eae",
    "createdAt": "2016-10-25T18:59:23Z",
    "diffHunk": "@@ -22,8 +22,18 @@ package org.apache.spark.sql.execution.streaming\n  */\n case class LongOffset(offset: Long) extends Offset {\n \n+  override val json = offset.toString\n+\n   def +(increment: Long): LongOffset = new LongOffset(offset + increment)\n   def -(decrement: Long): LongOffset = new LongOffset(offset - decrement)\n \n   override def toString: String = s\"#$offset\"\n }\n+\n+object LongOffset {\n+\n+  def apply(serialized: Offset) : LongOffset = new LongOffset(serialized.json.toLong)\n+\n+}"
  }, {
    "author": {
      "login": "tcondie"
    },
    "body": "Can you please clarify best practices w.r.t. extra lines? I didn't see anything in the code style guide.\n",
    "commit": "dabb628d0f39aeea94fd1afbad816b856b0a0eae",
    "createdAt": "2016-10-25T23:46:15Z",
    "diffHunk": "@@ -22,8 +22,18 @@ package org.apache.spark.sql.execution.streaming\n  */\n case class LongOffset(offset: Long) extends Offset {\n \n+  override val json = offset.toString\n+\n   def +(increment: Long): LongOffset = new LongOffset(offset + increment)\n   def -(decrement: Long): LongOffset = new LongOffset(offset - decrement)\n \n   override def toString: String = s\"#$offset\"\n }\n+\n+object LongOffset {\n+\n+  def apply(serialized: Offset) : LongOffset = new LongOffset(serialized.json.toLong)\n+\n+}"
  }, {
    "author": {
      "login": "tdas"
    },
    "body": "Not a strict guideline i guess, its matter of the taste of the reviewer quite a bit. For me i guess where there is no need to visually introduce a gap, there is no need for an empty line. For example: between `def apply` and `}` there no need to introduce a separation.\n",
    "commit": "dabb628d0f39aeea94fd1afbad816b856b0a0eae",
    "createdAt": "2016-10-26T02:47:43Z",
    "diffHunk": "@@ -22,8 +22,18 @@ package org.apache.spark.sql.execution.streaming\n  */\n case class LongOffset(offset: Long) extends Offset {\n \n+  override val json = offset.toString\n+\n   def +(increment: Long): LongOffset = new LongOffset(offset + increment)\n   def -(decrement: Long): LongOffset = new LongOffset(offset - decrement)\n \n   override def toString: String = s\"#$offset\"\n }\n+\n+object LongOffset {\n+\n+  def apply(serialized: Offset) : LongOffset = new LongOffset(serialized.json.toLong)\n+\n+}"
  }],
  "prId": 15626
}, {
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "same comment as with SerializedOffset.apply, make the param SerializedOffset instead of Offset\n",
    "commit": "dabb628d0f39aeea94fd1afbad816b856b0a0eae",
    "createdAt": "2016-10-25T19:25:05Z",
    "diffHunk": "@@ -22,8 +22,18 @@ package org.apache.spark.sql.execution.streaming\n  */\n case class LongOffset(offset: Long) extends Offset {\n \n+  override val json = offset.toString\n+\n   def +(increment: Long): LongOffset = new LongOffset(offset + increment)\n   def -(decrement: Long): LongOffset = new LongOffset(offset - decrement)\n \n   override def toString: String = s\"#$offset\"\n }\n+\n+object LongOffset {\n+\n+  def apply(serialized: Offset) : LongOffset = new LongOffset(serialized.json.toLong)"
  }],
  "prId": 15626
}]