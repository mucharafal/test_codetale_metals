[{
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "We need assertion: `!key.anyNull`?\n",
    "commit": "312cb326922624e95528b7f2dc92129c59b3b524",
    "createdAt": "2016-02-17T10:09:36Z",
    "diffHunk": "@@ -126,11 +126,11 @@ trait HashJoin {\n           while (currentHashMatches == null && streamIter.hasNext) {\n             currentStreamedRow = streamIter.next()\n             val key = joinKeys(currentStreamedRow)\n-            if (!key.anyNull) {\n-              currentHashMatches = hashedRelation.get(key)\n-              if (currentHashMatches != null) {\n-                currentMatchPosition = 0\n-              }\n+            // We do filtering null keys by inserting a Filter before inner join,"
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "As null are filtered by added filter, I think we should be able to skip it.\n",
    "commit": "312cb326922624e95528b7f2dc92129c59b3b524",
    "createdAt": "2016-02-18T03:29:37Z",
    "diffHunk": "@@ -126,11 +126,11 @@ trait HashJoin {\n           while (currentHashMatches == null && streamIter.hasNext) {\n             currentStreamedRow = streamIter.next()\n             val key = joinKeys(currentStreamedRow)\n-            if (!key.anyNull) {\n-              currentHashMatches = hashedRelation.get(key)\n-              if (currentHashMatches != null) {\n-                currentMatchPosition = 0\n-              }\n+            // We do filtering null keys by inserting a Filter before inner join,"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "Understood.\n",
    "commit": "312cb326922624e95528b7f2dc92129c59b3b524",
    "createdAt": "2016-02-19T10:11:28Z",
    "diffHunk": "@@ -126,11 +126,11 @@ trait HashJoin {\n           while (currentHashMatches == null && streamIter.hasNext) {\n             currentStreamedRow = streamIter.next()\n             val key = joinKeys(currentStreamedRow)\n-            if (!key.anyNull) {\n-              currentHashMatches = hashedRelation.get(key)\n-              if (currentHashMatches != null) {\n-                currentMatchPosition = 0\n-              }\n+            // We do filtering null keys by inserting a Filter before inner join,"
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "The execution engines correctness should not be predicated on specific optimizations.  That is _really_ tight coupling.  If you want to optimize code generation for null handling you should do it based on signals like `nullable` and not on undocumented, implicit contracts between components.\n",
    "commit": "312cb326922624e95528b7f2dc92129c59b3b524",
    "createdAt": "2016-02-22T18:39:52Z",
    "diffHunk": "@@ -126,11 +126,11 @@ trait HashJoin {\n           while (currentHashMatches == null && streamIter.hasNext) {\n             currentStreamedRow = streamIter.next()\n             val key = joinKeys(currentStreamedRow)\n-            if (!key.anyNull) {\n-              currentHashMatches = hashedRelation.get(key)\n-              if (currentHashMatches != null) {\n-                currentMatchPosition = 0\n-              }\n+            // We do filtering null keys by inserting a Filter before inner join,"
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "Even if we were going to make changes like this, they should be done in a different PR and come with some benchmarks to show that you are actually speeding things up.\n",
    "commit": "312cb326922624e95528b7f2dc92129c59b3b524",
    "createdAt": "2016-02-22T18:40:32Z",
    "diffHunk": "@@ -126,11 +126,11 @@ trait HashJoin {\n           while (currentHashMatches == null && streamIter.hasNext) {\n             currentStreamedRow = streamIter.next()\n             val key = joinKeys(currentStreamedRow)\n-            if (!key.anyNull) {\n-              currentHashMatches = hashedRelation.get(key)\n-              if (currentHashMatches != null) {\n-                currentMatchPosition = 0\n-              }\n+            // We do filtering null keys by inserting a Filter before inner join,"
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "OK. I will revert this part and try to address this in another PR. Thanks.\n",
    "commit": "312cb326922624e95528b7f2dc92129c59b3b524",
    "createdAt": "2016-02-25T09:58:45Z",
    "diffHunk": "@@ -126,11 +126,11 @@ trait HashJoin {\n           while (currentHashMatches == null && streamIter.hasNext) {\n             currentStreamedRow = streamIter.next()\n             val key = joinKeys(currentStreamedRow)\n-            if (!key.anyNull) {\n-              currentHashMatches = hashedRelation.get(key)\n-              if (currentHashMatches != null) {\n-                currentMatchPosition = 0\n-              }\n+            // We do filtering null keys by inserting a Filter before inner join,"
  }],
  "prId": 11235
}]