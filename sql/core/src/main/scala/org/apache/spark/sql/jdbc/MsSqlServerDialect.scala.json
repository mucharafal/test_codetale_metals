[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "`Option(x)` should be `Some(x)` here, though both will work. Same below. You can remove `answer` as redundant.",
    "commit": "f2700eb517246a72873090dffd35635e93283015",
    "createdAt": "2019-06-26T14:44:12Z",
    "diffHunk": "@@ -30,7 +30,13 @@ private object MsSqlServerDialect extends JdbcDialect {\n       // String is recommend by Microsoft SQL Server for datetimeoffset types in non-MS clients\n       Option(StringType)\n     } else {\n-      None\n+      val answer = sqlType match {"
  }, {
    "author": {
      "login": "shivsood"
    },
    "body": "Thanks. Will make a fix. Change to Some(x) will avoid the null check which is redundant in this case.",
    "commit": "f2700eb517246a72873090dffd35635e93283015",
    "createdAt": "2019-07-01T07:58:08Z",
    "diffHunk": "@@ -30,7 +30,13 @@ private object MsSqlServerDialect extends JdbcDialect {\n       // String is recommend by Microsoft SQL Server for datetimeoffset types in non-MS clients\n       Option(StringType)\n     } else {\n-      None\n+      val answer = sqlType match {"
  }, {
    "author": {
      "login": "shivsood"
    },
    "body": "Fixed now.",
    "commit": "f2700eb517246a72873090dffd35635e93283015",
    "createdAt": "2019-07-03T23:21:11Z",
    "diffHunk": "@@ -30,7 +30,13 @@ private object MsSqlServerDialect extends JdbcDialect {\n       // String is recommend by Microsoft SQL Server for datetimeoffset types in non-MS clients\n       Option(StringType)\n     } else {\n-      None\n+      val answer = sqlType match {"
  }],
  "prId": 24969
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Does FloatType need to map back to REAL or does that already happen?",
    "commit": "f2700eb517246a72873090dffd35635e93283015",
    "createdAt": "2019-06-26T14:44:35Z",
    "diffHunk": "@@ -39,6 +45,8 @@ private object MsSqlServerDialect extends JdbcDialect {\n     case StringType => Some(JdbcType(\"NVARCHAR(MAX)\", java.sql.Types.NVARCHAR))\n     case BooleanType => Some(JdbcType(\"BIT\", java.sql.Types.BIT))\n     case BinaryType => Some(JdbcType(\"VARBINARY(MAX)\", java.sql.Types.VARBINARY))\n+    case ByteType => Option(JdbcType(\"TINYINT\", java.sql.Types.TINYINT))\n+    case ShortType => Option(JdbcType(\"SMALLINT\", java.sql.Types.SMALLINT))"
  }, {
    "author": {
      "login": "shivsood"
    },
    "body": "Yes,  FloatType is correctly mapped to REAL in def getCommonJDBCType(dt: DataType)\r\n\r\n\r\n",
    "commit": "f2700eb517246a72873090dffd35635e93283015",
    "createdAt": "2019-07-01T07:56:18Z",
    "diffHunk": "@@ -39,6 +45,8 @@ private object MsSqlServerDialect extends JdbcDialect {\n     case StringType => Some(JdbcType(\"NVARCHAR(MAX)\", java.sql.Types.NVARCHAR))\n     case BooleanType => Some(JdbcType(\"BIT\", java.sql.Types.BIT))\n     case BinaryType => Some(JdbcType(\"VARBINARY(MAX)\", java.sql.Types.VARBINARY))\n+    case ByteType => Option(JdbcType(\"TINYINT\", java.sql.Types.TINYINT))\n+    case ShortType => Option(JdbcType(\"SMALLINT\", java.sql.Types.SMALLINT))"
  }],
  "prId": 24969
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Indentation?",
    "commit": "f2700eb517246a72873090dffd35635e93283015",
    "createdAt": "2019-07-09T04:12:53Z",
    "diffHunk": "@@ -30,7 +30,12 @@ private object MsSqlServerDialect extends JdbcDialect {\n       // String is recommend by Microsoft SQL Server for datetimeoffset types in non-MS clients\n       Option(StringType)\n     } else {\n-      None\n+        sqlType match {"
  }, {
    "author": {
      "login": "shivsood"
    },
    "body": "sorry about this. Resolved now.",
    "commit": "f2700eb517246a72873090dffd35635e93283015",
    "createdAt": "2019-07-09T18:06:46Z",
    "diffHunk": "@@ -30,7 +30,12 @@ private object MsSqlServerDialect extends JdbcDialect {\n       // String is recommend by Microsoft SQL Server for datetimeoffset types in non-MS clients\n       Option(StringType)\n     } else {\n-      None\n+        sqlType match {"
  }],
  "prId": 24969
}]