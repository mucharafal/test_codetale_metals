[{
  "comments": [{
    "author": {
      "login": "yhuai"
    },
    "body": "Add a new line above this line.\n",
    "commit": "88edd14e6cb6f25d15e83bcb8e24c3c3e5306ed8",
    "createdAt": "2015-10-29T04:42:33Z",
    "diffHunk": "@@ -61,6 +64,7 @@ case class LogicalRelation(\n     case LogicalRelation(otherRelation, _) => relation == otherRelation\n     case _ => false\n   }\n+  override lazy val cleanArgs: Seq[Any] = Seq(relation)"
  }, {
    "author": {
      "login": "xwu0226"
    },
    "body": "Thanks! Will do. \n",
    "commit": "88edd14e6cb6f25d15e83bcb8e24c3c3e5306ed8",
    "createdAt": "2015-10-29T04:44:58Z",
    "diffHunk": "@@ -61,6 +64,7 @@ case class LogicalRelation(\n     case LogicalRelation(otherRelation, _) => relation == otherRelation\n     case _ => false\n   }\n+  override lazy val cleanArgs: Seq[Any] = Seq(relation)"
  }],
  "prId": 9326
}, {
  "comments": [{
    "author": {
      "login": "yhuai"
    },
    "body": "Import ordering (see https://cwiki.apache.org/confluence/display/SPARK/Spark+Code+Style+Guide#SparkCodeStyleGuide-Imports).\n",
    "commit": "88edd14e6cb6f25d15e83bcb8e24c3c3e5306ed8",
    "createdAt": "2015-10-29T04:44:20Z",
    "diffHunk": "@@ -17,10 +17,13 @@\n package org.apache.spark.sql.execution.datasources\n \n import org.apache.spark.sql.catalyst.analysis.MultiInstanceRelation\n-import org.apache.spark.sql.catalyst.expressions.{Attribute, AttributeMap, AttributeReference}\n+import org.apache.spark.sql.catalyst.expressions._\n import org.apache.spark.sql.catalyst.plans.logical.{LeafNode, LogicalPlan, Statistics}\n+import org.apache.spark.sql.catalyst.trees.TreeNode\n import org.apache.spark.sql.sources.BaseRelation\n \n+import scala.collection.mutable.ArrayBuffer"
  }],
  "prId": 9326
}, {
  "comments": [{
    "author": {
      "login": "yhuai"
    },
    "body": "Can you also add a comment to explain why we need to override it?\n",
    "commit": "88edd14e6cb6f25d15e83bcb8e24c3c3e5306ed8",
    "createdAt": "2015-10-29T04:58:31Z",
    "diffHunk": "@@ -62,6 +62,8 @@ case class LogicalRelation(\n     case _ => false\n   }\n \n+  override lazy val cleanArgs: Seq[Any] = Seq(relation)"
  }, {
    "author": {
      "login": "xwu0226"
    },
    "body": "Yes. let me add it. Thanks!\n",
    "commit": "88edd14e6cb6f25d15e83bcb8e24c3c3e5306ed8",
    "createdAt": "2015-10-29T05:04:58Z",
    "diffHunk": "@@ -62,6 +62,8 @@ case class LogicalRelation(\n     case _ => false\n   }\n \n+  override lazy val cleanArgs: Seq[Any] = Seq(relation)"
  }],
  "prId": 9326
}]