[{
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "Its a little odd to not have stream or continuous in this name since we do not use it for other types of queries.\n",
    "commit": "458199b3cb7acd3f57bcc425830ea219f92b91d8",
    "createdAt": "2016-02-03T00:20:39Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.annotation.Experimental\n+import org.apache.spark.sql.execution.streaming.Offset\n+\n+/**\n+ * :: Experimental ::\n+ * Exception that stopped a [[ContinuousQuery]].\n+ *\n+ * @param message     Message of this exception\n+ * @param cause       Internal cause of this exception\n+ * @param startOffset Starting offset (if known) of the range of data in which exception occurred\n+ * @param endOffset   Ending offset (if known) of the range of data in exception occurred\n+ * @since 2.0.0\n+ */\n+@Experimental\n+class QueryException private[sql]("
  }],
  "prId": 11030
}, {
  "comments": [{
    "author": {
      "login": "zsxwing"
    },
    "body": "You can use `Utils.exceptionString` for this string.\n",
    "commit": "458199b3cb7acd3f57bcc425830ea219f92b91d8",
    "createdAt": "2016-02-03T00:31:19Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.annotation.Experimental\n+import org.apache.spark.sql.execution.streaming.Offset\n+\n+/**\n+ * :: Experimental ::\n+ * Exception that stopped a [[ContinuousQuery]].\n+ *\n+ * @param message     Message of this exception\n+ * @param cause       Internal cause of this exception\n+ * @param startOffset Starting offset (if known) of the range of data in which exception occurred\n+ * @param endOffset   Ending offset (if known) of the range of data in exception occurred\n+ * @since 2.0.0\n+ */\n+@Experimental\n+class QueryException private[sql](\n+    val message: String,\n+    val cause: Throwable,\n+    val startOffset: Option[Offset] = None,\n+    val endOffset: Option[Offset] = None\n+  ) extends Exception(message, cause) {\n+\n+  /** Time when the exception occurred */\n+  val time: Long = System.currentTimeMillis\n+\n+  override def toString(): String = {\n+    val causeStr =\n+      s\"${cause.getMessage} ${cause.getStackTrace.take(10).mkString(\"\", \"\\n|\\t\", \"\\n\")}\""
  }],
  "prId": 11030
}]