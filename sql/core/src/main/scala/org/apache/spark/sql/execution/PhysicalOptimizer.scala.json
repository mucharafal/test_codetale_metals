[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "let's think about a better name, it does more than only optimization",
    "commit": "11d2757fd1299e2499b2739013cc454392f1a524",
    "createdAt": "2017-01-20T10:16:11Z",
    "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution\n+\n+import org.apache.spark.sql.SparkSession\n+import org.apache.spark.sql.catalyst.rules.RuleExecutor\n+import org.apache.spark.sql.execution.aggregate.MergePartialAggregate\n+import org.apache.spark.sql.execution.exchange.{EnsureRequirements, ReuseExchange}\n+\n+/**\n+ * A sequence of rules that will be applied in order to the physical plan before execution.\n+ */\n+class PhysicalOptimizer(sparkSession: SparkSession) extends RuleExecutor[SparkPlan] {"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "Oh, yea. So, how about `PhysicalPlanRewriter`?",
    "commit": "11d2757fd1299e2499b2739013cc454392f1a524",
    "createdAt": "2017-01-20T15:42:38Z",
    "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution\n+\n+import org.apache.spark.sql.SparkSession\n+import org.apache.spark.sql.catalyst.rules.RuleExecutor\n+import org.apache.spark.sql.execution.aggregate.MergePartialAggregate\n+import org.apache.spark.sql.execution.exchange.{EnsureRequirements, ReuseExchange}\n+\n+/**\n+ * A sequence of rules that will be applied in order to the physical plan before execution.\n+ */\n+class PhysicalOptimizer(sparkSession: SparkSession) extends RuleExecutor[SparkPlan] {"
  }],
  "prId": 15945
}]