[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "I think it is \"sep\", not \"seq\".\n\nAlso I like the old name for the variable better. We should just rename the name for the option. And for backward compatibility, we should accept \"delimiter\" if \"sep\" is not set.\n",
    "commit": "976e3afec587ce12dd2b5b7005151274792ee827",
    "createdAt": "2016-01-18T06:33:17Z",
    "diffHunk": "@@ -44,9 +44,9 @@ private[sql] case class CSVParameters(parameters: Map[String, String]) extends L\n     }\n   }\n \n-  val delimiter = CSVTypeCast.toChar(parameters.getOrElse(\"delimiter\", \",\"))\n+  val seq = CSVTypeCast.toChar(parameters.getOrElse(\"seq\", \",\"))"
  }],
  "prId": 10800
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "here - fix backward compatibility.\n",
    "commit": "976e3afec587ce12dd2b5b7005151274792ee827",
    "createdAt": "2016-01-18T06:33:25Z",
    "diffHunk": "@@ -44,9 +44,9 @@ private[sql] case class CSVParameters(parameters: Map[String, String]) extends L\n     }\n   }\n \n-  val delimiter = CSVTypeCast.toChar(parameters.getOrElse(\"delimiter\", \",\"))\n+  val seq = CSVTypeCast.toChar(parameters.getOrElse(\"seq\", \",\"))\n   val parseMode = parameters.getOrElse(\"mode\", \"PERMISSIVE\")\n-  val charset = parameters.getOrElse(\"charset\", Charset.forName(\"UTF-8\").name())\n+  val encoding = parameters.getOrElse(\"encoding\", Charset.forName(\"UTF-8\").name())"
  }],
  "prId": 10800
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "we should take sep first, and then delimiter, since sep is the new canonical option now.\n",
    "commit": "976e3afec587ce12dd2b5b7005151274792ee827",
    "createdAt": "2016-01-18T19:22:30Z",
    "diffHunk": "@@ -44,9 +44,11 @@ private[sql] case class CSVParameters(parameters: Map[String, String]) extends L\n     }\n   }\n \n-  val delimiter = CSVTypeCast.toChar(parameters.getOrElse(\"delimiter\", \",\"))\n+  val delimiter = CSVTypeCast.toChar(\n+    parameters.getOrElse(\"delimiter\", parameters.getOrElse(\"sep\", \",\")))"
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "while you are at it, can you make parameters map transient, and make it not a case class?\n",
    "commit": "976e3afec587ce12dd2b5b7005151274792ee827",
    "createdAt": "2016-01-18T19:23:17Z",
    "diffHunk": "@@ -44,9 +44,11 @@ private[sql] case class CSVParameters(parameters: Map[String, String]) extends L\n     }\n   }\n \n-  val delimiter = CSVTypeCast.toChar(parameters.getOrElse(\"delimiter\", \",\"))\n+  val delimiter = CSVTypeCast.toChar(\n+    parameters.getOrElse(\"delimiter\", parameters.getOrElse(\"sep\", \",\")))"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Sure.\n",
    "commit": "976e3afec587ce12dd2b5b7005151274792ee827",
    "createdAt": "2016-01-18T22:46:19Z",
    "diffHunk": "@@ -44,9 +44,11 @@ private[sql] case class CSVParameters(parameters: Map[String, String]) extends L\n     }\n   }\n \n-  val delimiter = CSVTypeCast.toChar(parameters.getOrElse(\"delimiter\", \",\"))\n+  val delimiter = CSVTypeCast.toChar(\n+    parameters.getOrElse(\"delimiter\", parameters.getOrElse(\"sep\", \",\")))"
  }],
  "prId": 10800
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "same here, encoding first.\n",
    "commit": "976e3afec587ce12dd2b5b7005151274792ee827",
    "createdAt": "2016-01-18T19:22:39Z",
    "diffHunk": "@@ -44,9 +44,11 @@ private[sql] case class CSVParameters(parameters: Map[String, String]) extends L\n     }\n   }\n \n-  val delimiter = CSVTypeCast.toChar(parameters.getOrElse(\"delimiter\", \",\"))\n+  val delimiter = CSVTypeCast.toChar(\n+    parameters.getOrElse(\"delimiter\", parameters.getOrElse(\"sep\", \",\")))\n   val parseMode = parameters.getOrElse(\"mode\", \"PERMISSIVE\")\n-  val charset = parameters.getOrElse(\"charset\", Charset.forName(\"UTF-8\").name())\n+  val charset = parameters.getOrElse(\"charset\","
  }],
  "prId": 10800
}]