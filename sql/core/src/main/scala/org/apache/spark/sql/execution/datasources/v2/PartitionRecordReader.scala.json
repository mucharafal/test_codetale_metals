[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "typo: `PartitionRecordDReaderWithProject` -> `PartitionRecordReaderWithProject`.\r\nThere are two more instances of this name.",
    "commit": "6e875323a430cee190a458b8842adea44bb4e0b7",
    "createdAt": "2019-01-11T07:57:31Z",
    "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.datasources.v2\n+\n+import org.apache.hadoop.mapreduce.RecordReader\n+\n+import org.apache.spark.sql.sources.v2.reader.PartitionReader\n+\n+class PartitionRecordReader[T](\n+    private[this] var rowReader: RecordReader[_, T]) extends PartitionReader[T] {\n+  override def next(): Boolean = rowReader.nextKeyValue()\n+\n+  override def get(): T = rowReader.getCurrentValue\n+\n+  override def close(): Unit = rowReader.close()\n+}\n+\n+class PartitionRecordDReaderWithProject[X, T]("
  }],
  "prId": 23383
}]