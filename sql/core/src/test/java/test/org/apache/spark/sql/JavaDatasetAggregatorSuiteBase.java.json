[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "this is not global aggregate, can we follow https://github.com/apache/spark/pull/23304/files#diff-bf07c7708b6eceda37d9c5c8b5be0d54R340 ?",
    "commit": "26a448dea1bad715bbfa6a8b5d0269e9ae12bab9",
    "createdAt": "2019-01-11T13:24:52Z",
    "diffHunk": "@@ -61,5 +61,14 @@ public void tearDown() {\n     return ds.groupByKey((MapFunction<Tuple2<String, Integer>, String>) value -> value._1(),\n       Encoders.STRING());\n   }\n+\n+  protected KeyValueGroupedDataset<String, Tuple2<String, Integer>> generateEmptyGroupedDataset() {\n+    Encoder<Tuple2<String, Integer>> encoder = Encoders.tuple(Encoders.STRING(), Encoders.INT());\n+    List<Tuple2<String, Integer>> data = Arrays.asList();\n+    Dataset<Tuple2<String, Integer>> ds = spark.createDataset(data, encoder);\n+\n+    return ds.groupByKey((MapFunction<Tuple2<String, Integer>, String>) value -> value._1(),"
  }, {
    "author": {
      "login": "10110346"
    },
    "body": "Ok, thanks",
    "commit": "26a448dea1bad715bbfa6a8b5d0269e9ae12bab9",
    "createdAt": "2019-01-14T01:57:05Z",
    "diffHunk": "@@ -61,5 +61,14 @@ public void tearDown() {\n     return ds.groupByKey((MapFunction<Tuple2<String, Integer>, String>) value -> value._1(),\n       Encoders.STRING());\n   }\n+\n+  protected KeyValueGroupedDataset<String, Tuple2<String, Integer>> generateEmptyGroupedDataset() {\n+    Encoder<Tuple2<String, Integer>> encoder = Encoders.tuple(Encoders.STRING(), Encoders.INT());\n+    List<Tuple2<String, Integer>> data = Arrays.asList();\n+    Dataset<Tuple2<String, Integer>> ds = spark.createDataset(data, encoder);\n+\n+    return ds.groupByKey((MapFunction<Tuple2<String, Integer>, String>) value -> value._1(),"
  }],
  "prId": 23304
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "if it's only used in one place, let's inline this method.",
    "commit": "26a448dea1bad715bbfa6a8b5d0269e9ae12bab9",
    "createdAt": "2019-01-14T05:50:57Z",
    "diffHunk": "@@ -61,5 +61,13 @@ public void tearDown() {\n     return ds.groupByKey((MapFunction<Tuple2<String, Integer>, String>) value -> value._1(),\n       Encoders.STRING());\n   }\n+\n+  protected Dataset<Tuple2<Double, Double>> generateEmptyDataset() {"
  }],
  "prId": 23304
}]