[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "ditto ",
    "commit": "48b9fdaa2ca24eb2b9fdfdf5a61348e06aa1da64",
    "createdAt": "2018-01-22T17:34:38Z",
    "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package test.org.apache.spark.sql.sources.v2;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import org.apache.spark.sql.Row;\n+import org.apache.spark.sql.catalyst.expressions.GenericRow;\n+import org.apache.spark.sql.sources.v2.DataSourceV2;\n+import org.apache.spark.sql.sources.v2.DataSourceV2Options;\n+import org.apache.spark.sql.sources.v2.ReadSupport;\n+import org.apache.spark.sql.sources.v2.reader.*;\n+import org.apache.spark.sql.types.StructType;\n+\n+public class JavaPartitionAwareDataSource implements DataSourceV2, ReadSupport {\n+\n+  class Reader implements DataSourceV2Reader, SupportsReportPartitioning {\n+    private final StructType schema = new StructType().add(\"a\", \"int\").add(\"b\", \"int\");\n+\n+    @Override\n+    public StructType readSchema() {\n+      return schema;\n+    }\n+\n+    @Override\n+    public List<ReadTask<Row>> createReadTasks() {\n+      return java.util.Arrays.asList(\n+        new SpecificReadTask(new int[]{1, 1, 3}, new int[]{4, 4, 6}),\n+        new SpecificReadTask(new int[]{2, 4, 4}, new int[]{6, 2, 2}));\n+    }\n+\n+    @Override\n+    public Partitioning outputPartitioning() {\n+      return new MyPartitioning();\n+    }\n+  }\n+\n+  static class MyPartitioning implements Partitioning {\n+\n+    @Override\n+    public int numPartitions() {\n+      return 2;\n+    }\n+\n+    @Override\n+    public boolean satisfy(Distribution d) {"
  }],
  "prId": 20201
}]