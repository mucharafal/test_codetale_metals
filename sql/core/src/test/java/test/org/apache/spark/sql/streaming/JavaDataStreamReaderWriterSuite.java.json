[{
  "comments": [{
    "author": {
      "login": "HeartSaVioR"
    },
    "body": "MINOR: I guess it will be duplicated effort on both Scala and Java suite, but IMHO adding sanity check wouldn't hurt much and prevent further possible misses.",
    "commit": "999b6beee920a8f755028a90e96955527283c205",
    "createdAt": "2018-10-04T21:27:29Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+\n+package test.org.apache.spark.sql.streaming;\n+\n+import java.io.File;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import org.apache.spark.api.java.function.VoidFunction2;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.SparkSession;\n+import org.apache.spark.sql.streaming.StreamingQuery;\n+import org.apache.spark.sql.test.TestSparkSession;\n+import org.apache.spark.util.Utils;\n+\n+public class JavaDataStreamReaderWriterSuite {\n+  private SparkSession spark;\n+  private String input;\n+\n+  @Before\n+  public void setUp() {\n+    spark = new TestSparkSession();\n+    input = Utils.createTempDir(System.getProperty(\"java.io.tmpdir\"), \"input\").toString();\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    Utils.deleteRecursively(new File(input));\n+    spark.stop();\n+    spark = null;\n+  }\n+\n+  @Test\n+  public void testForeachBatchAPI() {",
    "line": 55
  }],
  "prId": 22633
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "@zsxwing . Could you fix the indentation of Apache License?",
    "commit": "999b6beee920a8f755028a90e96955527283c205",
    "createdAt": "2018-10-05T04:19:52Z",
    "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more"
  }],
  "prId": 22633
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Since `deleteRecursively` can raise `IOException`, can we have `try ... finally ...` to ensure `spark.stop` invocation?",
    "commit": "999b6beee920a8f755028a90e96955527283c205",
    "createdAt": "2018-10-05T04:48:01Z",
    "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+\n+package test.org.apache.spark.sql.streaming;\n+\n+import java.io.File;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import org.apache.spark.api.java.function.VoidFunction2;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.ForeachWriter;\n+import org.apache.spark.sql.SparkSession;\n+import org.apache.spark.sql.streaming.StreamingQuery;\n+import org.apache.spark.sql.test.TestSparkSession;\n+import org.apache.spark.util.Utils;\n+\n+public class JavaDataStreamReaderWriterSuite {\n+  private SparkSession spark;\n+  private String input;\n+\n+  @Before\n+  public void setUp() {\n+    spark = new TestSparkSession();\n+    input = Utils.createTempDir(System.getProperty(\"java.io.tmpdir\"), \"input\").toString();\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    Utils.deleteRecursively(new File(input));\n+    spark.stop();"
  }],
  "prId": 22633
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Nit: 2 space indentation",
    "commit": "999b6beee920a8f755028a90e96955527283c205",
    "createdAt": "2018-10-05T05:11:19Z",
    "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+\n+package test.org.apache.spark.sql.streaming;\n+\n+import java.io.File;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import org.apache.spark.api.java.function.VoidFunction2;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.ForeachWriter;\n+import org.apache.spark.sql.SparkSession;\n+import org.apache.spark.sql.streaming.StreamingQuery;\n+import org.apache.spark.sql.test.TestSparkSession;\n+import org.apache.spark.util.Utils;\n+\n+public class JavaDataStreamReaderWriterSuite {\n+  private SparkSession spark;\n+  private String input;\n+\n+  @Before\n+  public void setUp() {\n+    spark = new TestSparkSession();\n+    input = Utils.createTempDir(System.getProperty(\"java.io.tmpdir\"), \"input\").toString();\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    Utils.deleteRecursively(new File(input));\n+    spark.stop();\n+    spark = null;\n+  }\n+\n+  @Test\n+  public void testForeachBatchAPI() {\n+    StreamingQuery query = spark\n+        .readStream()\n+        .textFile(input)\n+        .writeStream()\n+        .foreachBatch(new VoidFunction2<Dataset<String>, Long>() {\n+          @Override\n+          public void call(Dataset<String> v1, Long v2) throws Exception {\n+          }\n+        })\n+        .start();\n+    query.stop();\n+  }\n+\n+  @Test\n+  public void testForeachAPI() {\n+    StreamingQuery query = spark\n+        .readStream()"
  }],
  "prId": 22633
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "tiny nit: I would just `public void process(String value) { }`",
    "commit": "999b6beee920a8f755028a90e96955527283c205",
    "createdAt": "2018-10-05T05:13:40Z",
    "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+* Licensed to the Apache Software Foundation (ASF) under one or more\n+* contributor license agreements.  See the NOTICE file distributed with\n+* this work for additional information regarding copyright ownership.\n+* The ASF licenses this file to You under the Apache License, Version 2.0\n+* (the \"License\"); you may not use this file except in compliance with\n+* the License.  You may obtain a copy of the License at\n+*\n+*    http://www.apache.org/licenses/LICENSE-2.0\n+*\n+* Unless required by applicable law or agreed to in writing, software\n+* distributed under the License is distributed on an \"AS IS\" BASIS,\n+* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+* See the License for the specific language governing permissions and\n+* limitations under the License.\n+*/\n+\n+package test.org.apache.spark.sql.streaming;\n+\n+import java.io.File;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import org.apache.spark.api.java.function.VoidFunction2;\n+import org.apache.spark.sql.Dataset;\n+import org.apache.spark.sql.ForeachWriter;\n+import org.apache.spark.sql.SparkSession;\n+import org.apache.spark.sql.streaming.StreamingQuery;\n+import org.apache.spark.sql.test.TestSparkSession;\n+import org.apache.spark.util.Utils;\n+\n+public class JavaDataStreamReaderWriterSuite {\n+  private SparkSession spark;\n+  private String input;\n+\n+  @Before\n+  public void setUp() {\n+    spark = new TestSparkSession();\n+    input = Utils.createTempDir(System.getProperty(\"java.io.tmpdir\"), \"input\").toString();\n+  }\n+\n+  @After\n+  public void tearDown() {\n+    Utils.deleteRecursively(new File(input));\n+    spark.stop();\n+    spark = null;\n+  }\n+\n+  @Test\n+  public void testForeachBatchAPI() {\n+    StreamingQuery query = spark\n+        .readStream()\n+        .textFile(input)\n+        .writeStream()\n+        .foreachBatch(new VoidFunction2<Dataset<String>, Long>() {\n+          @Override\n+          public void call(Dataset<String> v1, Long v2) throws Exception {\n+          }\n+        })\n+        .start();\n+    query.stop();\n+  }\n+\n+  @Test\n+  public void testForeachAPI() {\n+    StreamingQuery query = spark\n+        .readStream()\n+        .textFile(input)\n+        .writeStream()\n+        .foreach(new ForeachWriter<String>() {\n+          @Override\n+          public boolean open(long partitionId, long epochId) {\n+            return true;\n+          }\n+\n+          @Override\n+          public void process(String value) {\n+          }"
  }],
  "prId": 22633
}]