[{
  "comments": [{
    "author": {
      "login": "dilipbiswal"
    },
    "body": "@francis0407 What is the difference between this case and  TC 01.06? In that case,we have nulls in both a and b , right ?",
    "commit": "67b772589d5c069375fca994622ba997a1dd7c45",
    "createdAt": "2019-03-03T21:46:56Z",
    "diffHunk": "@@ -0,0 +1,96 @@\n+-- A test suite for ANY/SOME predicate subquery\n+\n+CREATE TEMPORARY VIEW a AS SELECT * FROM VALUES\n+  (1, 1),\n+  (null, 2),\n+  (3, 3),\n+  (4, 4)\n+  AS a(a1, a2);\n+\n+CREATE TEMPORARY VIEW b AS SELECT * FROM VALUES\n+  (3, 1),\n+  (null, 2)\n+  AS b(b1, b2);\n+\n+CREATE TEMPORARY VIEW c AS SELECT * FROM VALUES\n+  (null, 1)\n+  AS c(c1, c2);\n+\n+-- comparison operators\n+-- TC 01.01\n+SELECT *\n+FROM   a\n+WHERE  a1 > ANY (SELECT b1\n+                 FROM   b );\n+\n+-- TC 01.02\n+SELECT *\n+FROM   a\n+WHERE  a1 >= ANY (SELECT b1\n+                  FROM   b );\n+\n+-- TC 01.03\n+SELECT *\n+FROM   a\n+WHERE  a1 < ANY (SELECT b1\n+                 FROM   b );\n+\n+-- TC 01.04\n+SELECT *\n+FROM   a\n+WHERE  a1 <= ANY (SELECT b1\n+                  FROM   b );\n+\n+-- TC 01.05\n+SELECT *\n+FROM   a\n+WHERE  a1 != ANY (SELECT b1\n+                  FROM   b );\n+\n+-- TC 01.06\n+SELECT *\n+FROM   a\n+WHERE  a1 = ANY (SELECT b1\n+                 FROM   b );\n+\n+-- TC 01.07\n+SELECT *\n+FROM   a\n+WHERE  a1 <=> ANY (SELECT b1\n+                   FROM   b );\n+\n+-- compare with `null`\n+-- TC 02.01\n+SELECT *\n+FROM   a\n+WHERE  a1 > ANY (SELECT c1\n+                 FROM   c );\n+\n+-- TC 02.02\n+SELECT *\n+FROM   a\n+WHERE  a1 != ANY (SELECT c1\n+                  FROM   c );\n+\n+-- TC 02.03\n+SELECT *",
    "line": 78
  }, {
    "author": {
      "login": "francis0407"
    },
    "body": "I aimed to show how nulls exactly work. Maybe it would be better to design 'b' as '(3, 1), (4, 2)' and 'c' as '(3, 1), (4, 2), (null, 3)'.",
    "commit": "67b772589d5c069375fca994622ba997a1dd7c45",
    "createdAt": "2019-03-04T01:22:35Z",
    "diffHunk": "@@ -0,0 +1,96 @@\n+-- A test suite for ANY/SOME predicate subquery\n+\n+CREATE TEMPORARY VIEW a AS SELECT * FROM VALUES\n+  (1, 1),\n+  (null, 2),\n+  (3, 3),\n+  (4, 4)\n+  AS a(a1, a2);\n+\n+CREATE TEMPORARY VIEW b AS SELECT * FROM VALUES\n+  (3, 1),\n+  (null, 2)\n+  AS b(b1, b2);\n+\n+CREATE TEMPORARY VIEW c AS SELECT * FROM VALUES\n+  (null, 1)\n+  AS c(c1, c2);\n+\n+-- comparison operators\n+-- TC 01.01\n+SELECT *\n+FROM   a\n+WHERE  a1 > ANY (SELECT b1\n+                 FROM   b );\n+\n+-- TC 01.02\n+SELECT *\n+FROM   a\n+WHERE  a1 >= ANY (SELECT b1\n+                  FROM   b );\n+\n+-- TC 01.03\n+SELECT *\n+FROM   a\n+WHERE  a1 < ANY (SELECT b1\n+                 FROM   b );\n+\n+-- TC 01.04\n+SELECT *\n+FROM   a\n+WHERE  a1 <= ANY (SELECT b1\n+                  FROM   b );\n+\n+-- TC 01.05\n+SELECT *\n+FROM   a\n+WHERE  a1 != ANY (SELECT b1\n+                  FROM   b );\n+\n+-- TC 01.06\n+SELECT *\n+FROM   a\n+WHERE  a1 = ANY (SELECT b1\n+                 FROM   b );\n+\n+-- TC 01.07\n+SELECT *\n+FROM   a\n+WHERE  a1 <=> ANY (SELECT b1\n+                   FROM   b );\n+\n+-- compare with `null`\n+-- TC 02.01\n+SELECT *\n+FROM   a\n+WHERE  a1 > ANY (SELECT c1\n+                 FROM   c );\n+\n+-- TC 02.02\n+SELECT *\n+FROM   a\n+WHERE  a1 != ANY (SELECT c1\n+                  FROM   c );\n+\n+-- TC 02.03\n+SELECT *",
    "line": 78
  }],
  "prId": 23783
}]