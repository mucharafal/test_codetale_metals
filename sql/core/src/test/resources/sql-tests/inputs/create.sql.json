[{
  "comments": [{
    "author": {
      "login": "wzhfy"
    },
    "body": "In addition to end-to-end tests, we can also add a suite for `SchemaUtils` and put the case sensitivity cases in it.",
    "commit": "5ed2c0d68be372304bc8a46046d28d5b7aadcb97",
    "createdAt": "2017-06-11T18:43:56Z",
    "diffHunk": "@@ -0,0 +1,5 @@\n+-- Check name duplication in a regular case\n+CREATE TABLE t (c STRING, c INT) USING parquet;"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "Added `SchemaUtilsSuite`.",
    "commit": "5ed2c0d68be372304bc8a46046d28d5b7aadcb97",
    "createdAt": "2017-06-13T06:31:43Z",
    "diffHunk": "@@ -0,0 +1,5 @@\n+-- Check name duplication in a regular case\n+CREATE TABLE t (c STRING, c INT) USING parquet;"
  }],
  "prId": 17758
}, {
  "comments": [{
    "author": {
      "login": "wzhfy"
    },
    "body": "We only need two tests here, set case sensitive explicitly as true or false.",
    "commit": "5ed2c0d68be372304bc8a46046d28d5b7aadcb97",
    "createdAt": "2017-06-15T06:16:44Z",
    "diffHunk": "@@ -0,0 +1,9 @@\n+-- Check name duplication in a regular case\n+CREATE TABLE t (c STRING, c INT) USING parquet;\n+\n+-- Check multiple name duplication\n+CREATE TABLE t (c0 STRING, c1 INT, c1 DOUBLE, c0 INT) USING parquet;\n+\n+-- Catch case-insensitive name duplication\n+SET spark.sql.caseSensitive=false;\n+CREATE TABLE t (ab STRING, cd INT, ef DOUBLE, Ab INT) USING parquet;"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "ok",
    "commit": "5ed2c0d68be372304bc8a46046d28d5b7aadcb97",
    "createdAt": "2017-06-15T06:31:14Z",
    "diffHunk": "@@ -0,0 +1,9 @@\n+-- Check name duplication in a regular case\n+CREATE TABLE t (c STRING, c INT) USING parquet;\n+\n+-- Check multiple name duplication\n+CREATE TABLE t (c0 STRING, c1 INT, c1 DOUBLE, c0 INT) USING parquet;\n+\n+-- Catch case-insensitive name duplication\n+SET spark.sql.caseSensitive=false;\n+CREATE TABLE t (ab STRING, cd INT, ef DOUBLE, Ab INT) USING parquet;"
  }],
  "prId": 17758
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "We didn't have test cases for create table before?",
    "commit": "5ed2c0d68be372304bc8a46046d28d5b7aadcb97",
    "createdAt": "2017-07-07T05:47:34Z",
    "diffHunk": "@@ -0,0 +1,23 @@\n+-- Catch case-sensitive name duplication\n+SET spark.sql.caseSensitive=true;\n+\n+CREATE TABLE t(c0 STRING, c1 INT, c1 DOUBLE, c0 INT) USING parquet;"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "In `DDLSuite`, we already have simple tests for duplicate columns. we better moving these tests there?",
    "commit": "5ed2c0d68be372304bc8a46046d28d5b7aadcb97",
    "createdAt": "2017-07-07T05:56:45Z",
    "diffHunk": "@@ -0,0 +1,23 @@\n+-- Catch case-sensitive name duplication\n+SET spark.sql.caseSensitive=true;\n+\n+CREATE TABLE t(c0 STRING, c1 INT, c1 DOUBLE, c0 INT) USING parquet;"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "We should keep them in one place. For now I think we still need to put them in `DDLSuite` because we need to run it with and without hive support. Can we pick some typical test cases here and move them to `DDLSuite`?",
    "commit": "5ed2c0d68be372304bc8a46046d28d5b7aadcb97",
    "createdAt": "2017-07-07T05:59:14Z",
    "diffHunk": "@@ -0,0 +1,23 @@\n+-- Catch case-sensitive name duplication\n+SET spark.sql.caseSensitive=true;\n+\n+CREATE TABLE t(c0 STRING, c1 INT, c1 DOUBLE, c0 INT) USING parquet;"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "ok, will update",
    "commit": "5ed2c0d68be372304bc8a46046d28d5b7aadcb97",
    "createdAt": "2017-07-07T06:05:26Z",
    "diffHunk": "@@ -0,0 +1,23 @@\n+-- Catch case-sensitive name duplication\n+SET spark.sql.caseSensitive=true;\n+\n+CREATE TABLE t(c0 STRING, c1 INT, c1 DOUBLE, c0 INT) USING parquet;"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "I moved some tests to `DDLSuite` and removed this file.",
    "commit": "5ed2c0d68be372304bc8a46046d28d5b7aadcb97",
    "createdAt": "2017-07-07T07:16:00Z",
    "diffHunk": "@@ -0,0 +1,23 @@\n+-- Catch case-sensitive name duplication\n+SET spark.sql.caseSensitive=true;\n+\n+CREATE TABLE t(c0 STRING, c1 INT, c1 DOUBLE, c0 INT) USING parquet;"
  }],
  "prId": 17758
}]