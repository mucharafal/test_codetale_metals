[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "I would add UDFs in `ORDER BY` clause too.",
    "commit": "e6ce51a7a8039b14326605adb4b3c57fad9557ef",
    "createdAt": "2019-07-24T00:50:08Z",
    "diffHunk": "@@ -0,0 +1,118 @@\n+--This test file was converted from window.sql.\n+-- Test data.\n+CREATE OR REPLACE TEMPORARY VIEW testData AS SELECT * FROM VALUES\n+(null, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"a\"),\n+(1, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"a\"),\n+(1, 2L, 2.5D, date(\"2017-08-02\"), timestamp(1502000000), \"a\"),\n+(2, 2147483650L, 100.001D, date(\"2020-12-31\"), timestamp(1609372800), \"a\"),\n+(1, null, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"b\"),\n+(2, 3L, 3.3D, date(\"2017-08-03\"), timestamp(1503000000), \"b\"),\n+(3, 2147483650L, 100.001D, date(\"2020-12-31\"), timestamp(1609372800), \"b\"),\n+(null, null, null, null, null, null),\n+(3, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), null)\n+AS testData(val, val_long, val_double, val_date, val_timestamp, cate);\n+\n+-- RowsBetween\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val ROWS CURRENT ROW) FROM testData\n+ORDER BY cate, val;\n+SELECT udf(val), cate, sum(val) OVER(PARTITION BY cate ORDER BY val"
  }, {
    "author": {
      "login": "younggyuchun"
    },
    "body": "done",
    "commit": "e6ce51a7a8039b14326605adb4b3c57fad9557ef",
    "createdAt": "2019-07-24T19:18:46Z",
    "diffHunk": "@@ -0,0 +1,118 @@\n+--This test file was converted from window.sql.\n+-- Test data.\n+CREATE OR REPLACE TEMPORARY VIEW testData AS SELECT * FROM VALUES\n+(null, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"a\"),\n+(1, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"a\"),\n+(1, 2L, 2.5D, date(\"2017-08-02\"), timestamp(1502000000), \"a\"),\n+(2, 2147483650L, 100.001D, date(\"2020-12-31\"), timestamp(1609372800), \"a\"),\n+(1, null, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"b\"),\n+(2, 3L, 3.3D, date(\"2017-08-03\"), timestamp(1503000000), \"b\"),\n+(3, 2147483650L, 100.001D, date(\"2020-12-31\"), timestamp(1609372800), \"b\"),\n+(null, null, null, null, null, null),\n+(3, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), null)\n+AS testData(val, val_long, val_double, val_date, val_timestamp, cate);\n+\n+-- RowsBetween\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val ROWS CURRENT ROW) FROM testData\n+ORDER BY cate, val;\n+SELECT udf(val), cate, sum(val) OVER(PARTITION BY cate ORDER BY val"
  }],
  "prId": 25195
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Is it allows to use `PARTITION BY udf(cate)`",
    "commit": "e6ce51a7a8039b14326605adb4b3c57fad9557ef",
    "createdAt": "2019-07-24T00:50:39Z",
    "diffHunk": "@@ -0,0 +1,118 @@\n+--This test file was converted from window.sql.\n+-- Test data.\n+CREATE OR REPLACE TEMPORARY VIEW testData AS SELECT * FROM VALUES\n+(null, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"a\"),\n+(1, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"a\"),\n+(1, 2L, 2.5D, date(\"2017-08-02\"), timestamp(1502000000), \"a\"),\n+(2, 2147483650L, 100.001D, date(\"2020-12-31\"), timestamp(1609372800), \"a\"),\n+(1, null, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"b\"),\n+(2, 3L, 3.3D, date(\"2017-08-03\"), timestamp(1503000000), \"b\"),\n+(3, 2147483650L, 100.001D, date(\"2020-12-31\"), timestamp(1609372800), \"b\"),\n+(null, null, null, null, null, null),\n+(3, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), null)\n+AS testData(val, val_long, val_double, val_date, val_timestamp, cate);\n+\n+-- RowsBetween\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val ROWS CURRENT ROW) FROM testData\n+ORDER BY cate, val;\n+SELECT udf(val), cate, sum(val) OVER(PARTITION BY cate ORDER BY val\n+ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING) FROM testData ORDER BY cate, val;\n+SELECT val_long, udf(cate), sum(val_long) OVER(PARTITION BY cate ORDER BY val_long\n+ROWS BETWEEN CURRENT ROW AND CAST(2147483648 AS int) FOLLOWING) FROM testData ORDER BY cate, val_long;\n+\n+-- RangeBetween\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val RANGE 1 PRECEDING) FROM testData"
  }, {
    "author": {
      "login": "younggyuchun"
    },
    "body": "done",
    "commit": "e6ce51a7a8039b14326605adb4b3c57fad9557ef",
    "createdAt": "2019-07-24T19:19:02Z",
    "diffHunk": "@@ -0,0 +1,118 @@\n+--This test file was converted from window.sql.\n+-- Test data.\n+CREATE OR REPLACE TEMPORARY VIEW testData AS SELECT * FROM VALUES\n+(null, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"a\"),\n+(1, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"a\"),\n+(1, 2L, 2.5D, date(\"2017-08-02\"), timestamp(1502000000), \"a\"),\n+(2, 2147483650L, 100.001D, date(\"2020-12-31\"), timestamp(1609372800), \"a\"),\n+(1, null, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"b\"),\n+(2, 3L, 3.3D, date(\"2017-08-03\"), timestamp(1503000000), \"b\"),\n+(3, 2147483650L, 100.001D, date(\"2020-12-31\"), timestamp(1609372800), \"b\"),\n+(null, null, null, null, null, null),\n+(3, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), null)\n+AS testData(val, val_long, val_double, val_date, val_timestamp, cate);\n+\n+-- RowsBetween\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val ROWS CURRENT ROW) FROM testData\n+ORDER BY cate, val;\n+SELECT udf(val), cate, sum(val) OVER(PARTITION BY cate ORDER BY val\n+ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING) FROM testData ORDER BY cate, val;\n+SELECT val_long, udf(cate), sum(val_long) OVER(PARTITION BY cate ORDER BY val_long\n+ROWS BETWEEN CURRENT ROW AND CAST(2147483648 AS int) FOLLOWING) FROM testData ORDER BY cate, val_long;\n+\n+-- RangeBetween\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val RANGE 1 PRECEDING) FROM testData"
  }],
  "prId": 25195
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Shall we wrap those functions via udf? For instance `udf(min(val))`, `udf(count(udf(val)))`, `udf(udf(sum(val)))`",
    "commit": "e6ce51a7a8039b14326605adb4b3c57fad9557ef",
    "createdAt": "2019-07-24T00:51:29Z",
    "diffHunk": "@@ -0,0 +1,118 @@\n+--This test file was converted from window.sql.\n+-- Test data.\n+CREATE OR REPLACE TEMPORARY VIEW testData AS SELECT * FROM VALUES\n+(null, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"a\"),\n+(1, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"a\"),\n+(1, 2L, 2.5D, date(\"2017-08-02\"), timestamp(1502000000), \"a\"),\n+(2, 2147483650L, 100.001D, date(\"2020-12-31\"), timestamp(1609372800), \"a\"),\n+(1, null, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"b\"),\n+(2, 3L, 3.3D, date(\"2017-08-03\"), timestamp(1503000000), \"b\"),\n+(3, 2147483650L, 100.001D, date(\"2020-12-31\"), timestamp(1609372800), \"b\"),\n+(null, null, null, null, null, null),\n+(3, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), null)\n+AS testData(val, val_long, val_double, val_date, val_timestamp, cate);\n+\n+-- RowsBetween\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val ROWS CURRENT ROW) FROM testData\n+ORDER BY cate, val;\n+SELECT udf(val), cate, sum(val) OVER(PARTITION BY cate ORDER BY val\n+ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING) FROM testData ORDER BY cate, val;\n+SELECT val_long, udf(cate), sum(val_long) OVER(PARTITION BY cate ORDER BY val_long\n+ROWS BETWEEN CURRENT ROW AND CAST(2147483648 AS int) FOLLOWING) FROM testData ORDER BY cate, val_long;\n+\n+-- RangeBetween\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val RANGE 1 PRECEDING) FROM testData\n+ORDER BY cate, val;\n+SELECT val, udf(cate), sum(val) OVER(PARTITION BY cate ORDER BY val\n+RANGE BETWEEN CURRENT ROW AND 1 FOLLOWING) FROM testData ORDER BY cate, val;\n+SELECT val_long, udf(cate), sum(val_long) OVER(PARTITION BY cate ORDER BY val_long\n+RANGE BETWEEN CURRENT ROW AND 2147483648 FOLLOWING) FROM testData ORDER BY cate, val_long;\n+SELECT val_double, udf(cate), sum(val_double) OVER(PARTITION BY cate ORDER BY val_double\n+RANGE BETWEEN CURRENT ROW AND 2.5 FOLLOWING) FROM testData ORDER BY cate, val_double;\n+SELECT val_date, udf(cate), max(val_date) OVER(PARTITION BY cate ORDER BY val_date\n+RANGE BETWEEN CURRENT ROW AND 2 FOLLOWING) FROM testData ORDER BY cate, val_date;\n+SELECT val_timestamp, udf(cate), avg(val_timestamp) OVER(PARTITION BY cate ORDER BY val_timestamp\n+RANGE BETWEEN CURRENT ROW AND interval 23 days 4 hours FOLLOWING) FROM testData\n+ORDER BY cate, val_timestamp;\n+\n+-- RangeBetween with reverse OrderBy\n+SELECT val, udf(cate), sum(val) OVER(PARTITION BY cate ORDER BY val DESC\n+RANGE BETWEEN CURRENT ROW AND 1 FOLLOWING) FROM testData ORDER BY cate, val;\n+\n+-- Invalid window frame\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate\n+ROWS BETWEEN UNBOUNDED FOLLOWING AND CAST(1 as int) FOLLOWING) FROM testData ORDER BY cate, val;\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate\n+RANGE BETWEEN CURRENT ROW AND 1 FOLLOWING) FROM testData ORDER BY cate, udf(val);\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val, cate\n+RANGE BETWEEN CURRENT ROW AND 1 FOLLOWING) FROM testData ORDER BY cate, val;\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY current_timestamp\n+RANGE BETWEEN CURRENT ROW AND 1 FOLLOWING) FROM testData ORDER BY cate, val;\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val\n+RANGE BETWEEN 1 FOLLOWING AND 1 PRECEDING) FROM testData ORDER BY cate, val;\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val\n+RANGE BETWEEN CURRENT ROW AND current_date PRECEDING) FROM testData ORDER BY cate, val;\n+\n+\n+-- Window functions\n+SELECT udf(val), cate,\n+max(val) OVER w AS max,"
  }, {
    "author": {
      "login": "younggyuchun"
    },
    "body": "done",
    "commit": "e6ce51a7a8039b14326605adb4b3c57fad9557ef",
    "createdAt": "2019-07-24T19:19:06Z",
    "diffHunk": "@@ -0,0 +1,118 @@\n+--This test file was converted from window.sql.\n+-- Test data.\n+CREATE OR REPLACE TEMPORARY VIEW testData AS SELECT * FROM VALUES\n+(null, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"a\"),\n+(1, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"a\"),\n+(1, 2L, 2.5D, date(\"2017-08-02\"), timestamp(1502000000), \"a\"),\n+(2, 2147483650L, 100.001D, date(\"2020-12-31\"), timestamp(1609372800), \"a\"),\n+(1, null, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), \"b\"),\n+(2, 3L, 3.3D, date(\"2017-08-03\"), timestamp(1503000000), \"b\"),\n+(3, 2147483650L, 100.001D, date(\"2020-12-31\"), timestamp(1609372800), \"b\"),\n+(null, null, null, null, null, null),\n+(3, 1L, 1.0D, date(\"2017-08-01\"), timestamp(1501545600), null)\n+AS testData(val, val_long, val_double, val_date, val_timestamp, cate);\n+\n+-- RowsBetween\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val ROWS CURRENT ROW) FROM testData\n+ORDER BY cate, val;\n+SELECT udf(val), cate, sum(val) OVER(PARTITION BY cate ORDER BY val\n+ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING) FROM testData ORDER BY cate, val;\n+SELECT val_long, udf(cate), sum(val_long) OVER(PARTITION BY cate ORDER BY val_long\n+ROWS BETWEEN CURRENT ROW AND CAST(2147483648 AS int) FOLLOWING) FROM testData ORDER BY cate, val_long;\n+\n+-- RangeBetween\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val RANGE 1 PRECEDING) FROM testData\n+ORDER BY cate, val;\n+SELECT val, udf(cate), sum(val) OVER(PARTITION BY cate ORDER BY val\n+RANGE BETWEEN CURRENT ROW AND 1 FOLLOWING) FROM testData ORDER BY cate, val;\n+SELECT val_long, udf(cate), sum(val_long) OVER(PARTITION BY cate ORDER BY val_long\n+RANGE BETWEEN CURRENT ROW AND 2147483648 FOLLOWING) FROM testData ORDER BY cate, val_long;\n+SELECT val_double, udf(cate), sum(val_double) OVER(PARTITION BY cate ORDER BY val_double\n+RANGE BETWEEN CURRENT ROW AND 2.5 FOLLOWING) FROM testData ORDER BY cate, val_double;\n+SELECT val_date, udf(cate), max(val_date) OVER(PARTITION BY cate ORDER BY val_date\n+RANGE BETWEEN CURRENT ROW AND 2 FOLLOWING) FROM testData ORDER BY cate, val_date;\n+SELECT val_timestamp, udf(cate), avg(val_timestamp) OVER(PARTITION BY cate ORDER BY val_timestamp\n+RANGE BETWEEN CURRENT ROW AND interval 23 days 4 hours FOLLOWING) FROM testData\n+ORDER BY cate, val_timestamp;\n+\n+-- RangeBetween with reverse OrderBy\n+SELECT val, udf(cate), sum(val) OVER(PARTITION BY cate ORDER BY val DESC\n+RANGE BETWEEN CURRENT ROW AND 1 FOLLOWING) FROM testData ORDER BY cate, val;\n+\n+-- Invalid window frame\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate\n+ROWS BETWEEN UNBOUNDED FOLLOWING AND CAST(1 as int) FOLLOWING) FROM testData ORDER BY cate, val;\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate\n+RANGE BETWEEN CURRENT ROW AND 1 FOLLOWING) FROM testData ORDER BY cate, udf(val);\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val, cate\n+RANGE BETWEEN CURRENT ROW AND 1 FOLLOWING) FROM testData ORDER BY cate, val;\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY current_timestamp\n+RANGE BETWEEN CURRENT ROW AND 1 FOLLOWING) FROM testData ORDER BY cate, val;\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val\n+RANGE BETWEEN 1 FOLLOWING AND 1 PRECEDING) FROM testData ORDER BY cate, val;\n+SELECT udf(val), cate, count(val) OVER(PARTITION BY cate ORDER BY val\n+RANGE BETWEEN CURRENT ROW AND current_date PRECEDING) FROM testData ORDER BY cate, val;\n+\n+\n+-- Window functions\n+SELECT udf(val), cate,\n+max(val) OVER w AS max,"
  }],
  "prId": 25195
}]