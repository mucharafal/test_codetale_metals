[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Please use upper case for SQL keywords.",
    "commit": "b2e411c859f4266428db6b4fbf55d89a101e50bf",
    "createdAt": "2017-02-28T05:18:18Z",
    "diffHunk": "@@ -0,0 +1,82 @@\n+-- Scenario: column resolution scenarios with datasource table\n+CREATE DATABASE mydb1;\n+use mydb1;"
  }],
  "prId": 17067
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Add two more cases for verifying `*`",
    "commit": "b2e411c859f4266428db6b4fbf55d89a101e50bf",
    "createdAt": "2017-03-02T04:33:51Z",
    "diffHunk": "@@ -0,0 +1,84 @@\n+-- Tests covering different scenarios with qualified column names\n+-- Scenario: column resolution scenarios with datasource table\n+CREATE DATABASE mydb1;\n+USE mydb1;\n+CREATE TABLE t1 USING parquet AS SELECT 1 AS i1;\n+\n+CREATE DATABASE mydb2;\n+USE mydb2;\n+CREATE TABLE t1 USING parquet AS SELECT 20 AS i1;\n+\n+USE mydb1;\n+SELECT i1 FROM t1;\n+SELECT i1 FROM mydb1.t1;\n+SELECT t1.i1 FROM t1;\n+SELECT t1.i1 FROM mydb1.t1;\n+\n+-- TODO: Support this scenario\n+SELECT mydb1.t1.i1 FROM t1;\n+-- TODO: Support this scenario\n+SELECT mydb1.t1.i1 FROM mydb1.t1;\n+\n+USE mydb2;\n+SELECT i1 FROM t1;\n+SELECT i1 FROM mydb1.t1;\n+SELECT t1.i1 FROM t1;\n+SELECT t1.i1 FROM mydb1.t1;\n+-- TODO: Support this scenario\n+SELECT mydb1.t1.i1 FROM mydb1.t1;\n+\n+-- Scenario: resolve fully qualified table name in star expansion\n+USE mydb1;\n+SELECT t1.* FROM t1;\n+SELECT mydb1.t1.* FROM mydb1.t1;\n+SELECT t1.* FROM mydb1.t1;\n+USE mydb2;\n+SELECT t1.* FROM t1;\n+-- TODO: Support this scenario\n+SELECT mydb1.t1.* FROM mydb1.t1;\n+SELECT t1.* FROM mydb1.t1;\n+SELECT a.* FROM mydb1.t1 AS a;\n+\n+-- Scenario: resolve in case of subquery\n+\n+USE mydb1;\n+CREATE TABLE t3 USING parquet AS SELECT * FROM VALUES (4,1), (3,1) AS t3(c1, c2);\n+CREATE TABLE t4 USING parquet AS SELECT * FROM VALUES (4,1), (2,1) AS t4(c2, c3);\n+\n+SELECT * FROM t3 WHERE c1 IN (SELECT c2 FROM t4 WHERE t4.c3 = t3.c2);\n+\n+-- TODO: Support this scenario\n+SELECT * FROM mydb1.t3 WHERE c1 IN\n+  (SELECT mydb1.t4.c2 FROM mydb1.t4 WHERE mydb1.t4.c3 = mydb1.t3.c2);\n+\n+-- Scenario: column resolution scenarios in join queries\n+SET spark.sql.crossJoin.enabled = true;\n+\n+-- TODO: Support this scenario\n+SELECT mydb1.t1.i1 FROM t1, mydb2.t1;\n+\n+-- TODO: Support this scenario\n+SELECT mydb1.t1.i1 FROM mydb1.t1, mydb2.t1;\n+\n+USE mydb2;\n+-- TODO: Support this scenario\n+SELECT mydb1.t1.i1 FROM t1, mydb1.t1;\n+\n+-- Scenario: Table with struct column\n+USE mydb1;\n+CREATE TABLE t5(i1 INT, t5 STRUCT<i1:INT, i2:INT>) USING parquet;\n+INSERT INTO t5 VALUES(1, (2, 3));\n+SELECT t5.i1 FROM t5;\n+SELECT t5.t5.i1 FROM t5;\n+SELECT t5.t5.i1 FROM mydb1.t5;",
    "line": 74
  }],
  "prId": 17067
}]