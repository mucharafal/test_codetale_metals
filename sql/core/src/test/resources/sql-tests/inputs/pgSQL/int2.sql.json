[{
  "comments": [{
    "author": {
      "login": "wangyum"
    },
    "body": "We do not have `numeric` type, can we use `decimal`?",
    "commit": "bc8234ab815117f765cf60d6ece818d5a9918b90",
    "createdAt": "2019-06-12T15:18:21Z",
    "diffHunk": "@@ -0,0 +1,126 @@\n+--\n+-- Portions Copyright (c) 1996-2019, PostgreSQL Global Development Group\n+--\n+--\n+-- INT2\n+-- https://github.com/postgres/postgres/blob/REL_12_BETA1/src/test/regress/sql/int2.sql\n+\n+CREATE TABLE INT2_TBL(f1 smallint) USING parquet;\n+\n+-- [SPARK-28023] Trim the string when cast string type to other types\n+INSERT INTO INT2_TBL VALUES (trim('0   '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('  1234 '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('    -1234'));\n+\n+-- [SPARK-27923] Invalid input syntax for type short throws exception at PostgreSQL\n+-- INSERT INTO INT2_TBL VALUES ('34.5');\n+\n+-- largest and smallest values\n+INSERT INTO INT2_TBL VALUES ('32767');\n+\n+INSERT INTO INT2_TBL VALUES ('-32767');\n+\n+-- bad input values -- should give errors\n+-- INSERT INTO INT2_TBL VALUES ('100000');\n+-- INSERT INTO INT2_TBL VALUES ('asdf');\n+-- INSERT INTO INT2_TBL VALUES ('    ');\n+-- INSERT INTO INT2_TBL VALUES ('- 1234');\n+-- INSERT INTO INT2_TBL VALUES ('4 444');\n+-- INSERT INTO INT2_TBL VALUES ('123 dt');\n+-- INSERT INTO INT2_TBL VALUES ('');\n+\n+\n+SELECT '' AS five, * FROM INT2_TBL;\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> smallint('0');\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> int('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = smallint('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= int('0');\n+\n+-- positive odds\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE (i.f1 % smallint('2')) = smallint('1');\n+\n+-- any evens\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE (i.f1 % int('2')) = smallint('0');\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT2_TBL i\n+WHERE abs(f1) < 16384;\n+\n+SELECT '' AS five, i.f1, i.f1 * int('2') AS x FROM INT2_TBL i;\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT2_TBL i\n+WHERE f1 < 32766;\n+\n+SELECT '' AS five, i.f1, i.f1 + int('2') AS x FROM INT2_TBL i;\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT2_TBL i\n+WHERE f1 > -32767;\n+\n+SELECT '' AS five, i.f1, i.f1 - int('2') AS x FROM INT2_TBL i;\n+\n+-- The result is different because [SPARK-2659]\n+SELECT '' AS five, i.f1, i.f1 / smallint('2') AS x FROM INT2_TBL i;\n+\n+-- The result is different because [SPARK-2659]\n+SELECT '' AS five, i.f1, i.f1 / int('2') AS x FROM INT2_TBL i;\n+\n+-- corner cases\n+SELECT string(shiftleft(smallint(-1), 15));\n+SELECT string(smallint(shiftleft(smallint(-1), 15))+1);\n+\n+-- check sane handling of INT16_MIN overflow cases\n+-- [SPARK-28024] Incorrect numeric values when out of range\n+-- SELECT smallint((-32768)) * smallint(-1);\n+-- SELECT smallint(-32768) / smallint(-1);\n+SELECT smallint(-32768) % smallint(-1);\n+\n+-- [SPARK-28028] Cast numeric to integral type need round\n+-- check rounding when casting from float\n+SELECT x, smallint(x) AS int2_value\n+FROM (VALUES float(-2.5),\n+             float(-1.5),\n+             float(-0.5),\n+             float(0.0),\n+             float(0.5),\n+             float(1.5),\n+             float(2.5)) t(x);\n+\n+-- check rounding when casting from numeric\n+SELECT x, smallint(x) AS int2_value\n+FROM (VALUES decimal(-2.5),"
  }, {
    "author": {
      "login": "wangyum"
    },
    "body": "I plan to use `DecimalType.SYSTEM_DEFAULT`:\r\nhttps://github.com/apache/spark/blob/5b37092311bfc1255f1d4d81127ae4242ba1d1aa/sql/core/src/main/scala/org/apache/spark/sql/jdbc/PostgresDialect.scala#L64-L66",
    "commit": "bc8234ab815117f765cf60d6ece818d5a9918b90",
    "createdAt": "2019-06-14T14:51:29Z",
    "diffHunk": "@@ -0,0 +1,126 @@\n+--\n+-- Portions Copyright (c) 1996-2019, PostgreSQL Global Development Group\n+--\n+--\n+-- INT2\n+-- https://github.com/postgres/postgres/blob/REL_12_BETA1/src/test/regress/sql/int2.sql\n+\n+CREATE TABLE INT2_TBL(f1 smallint) USING parquet;\n+\n+-- [SPARK-28023] Trim the string when cast string type to other types\n+INSERT INTO INT2_TBL VALUES (trim('0   '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('  1234 '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('    -1234'));\n+\n+-- [SPARK-27923] Invalid input syntax for type short throws exception at PostgreSQL\n+-- INSERT INTO INT2_TBL VALUES ('34.5');\n+\n+-- largest and smallest values\n+INSERT INTO INT2_TBL VALUES ('32767');\n+\n+INSERT INTO INT2_TBL VALUES ('-32767');\n+\n+-- bad input values -- should give errors\n+-- INSERT INTO INT2_TBL VALUES ('100000');\n+-- INSERT INTO INT2_TBL VALUES ('asdf');\n+-- INSERT INTO INT2_TBL VALUES ('    ');\n+-- INSERT INTO INT2_TBL VALUES ('- 1234');\n+-- INSERT INTO INT2_TBL VALUES ('4 444');\n+-- INSERT INTO INT2_TBL VALUES ('123 dt');\n+-- INSERT INTO INT2_TBL VALUES ('');\n+\n+\n+SELECT '' AS five, * FROM INT2_TBL;\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> smallint('0');\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> int('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = smallint('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= int('0');\n+\n+-- positive odds\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE (i.f1 % smallint('2')) = smallint('1');\n+\n+-- any evens\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE (i.f1 % int('2')) = smallint('0');\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT2_TBL i\n+WHERE abs(f1) < 16384;\n+\n+SELECT '' AS five, i.f1, i.f1 * int('2') AS x FROM INT2_TBL i;\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT2_TBL i\n+WHERE f1 < 32766;\n+\n+SELECT '' AS five, i.f1, i.f1 + int('2') AS x FROM INT2_TBL i;\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT2_TBL i\n+WHERE f1 > -32767;\n+\n+SELECT '' AS five, i.f1, i.f1 - int('2') AS x FROM INT2_TBL i;\n+\n+-- The result is different because [SPARK-2659]\n+SELECT '' AS five, i.f1, i.f1 / smallint('2') AS x FROM INT2_TBL i;\n+\n+-- The result is different because [SPARK-2659]\n+SELECT '' AS five, i.f1, i.f1 / int('2') AS x FROM INT2_TBL i;\n+\n+-- corner cases\n+SELECT string(shiftleft(smallint(-1), 15));\n+SELECT string(smallint(shiftleft(smallint(-1), 15))+1);\n+\n+-- check sane handling of INT16_MIN overflow cases\n+-- [SPARK-28024] Incorrect numeric values when out of range\n+-- SELECT smallint((-32768)) * smallint(-1);\n+-- SELECT smallint(-32768) / smallint(-1);\n+SELECT smallint(-32768) % smallint(-1);\n+\n+-- [SPARK-28028] Cast numeric to integral type need round\n+-- check rounding when casting from float\n+SELECT x, smallint(x) AS int2_value\n+FROM (VALUES float(-2.5),\n+             float(-1.5),\n+             float(-0.5),\n+             float(0.0),\n+             float(0.5),\n+             float(1.5),\n+             float(2.5)) t(x);\n+\n+-- check rounding when casting from numeric\n+SELECT x, smallint(x) AS int2_value\n+FROM (VALUES decimal(-2.5),"
  }],
  "prId": 24853
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "It seems that we had better merge the SPARK-28023 PR before merging this. This temporary input hack exists in `int4.sql` port PR, too.\r\ncc @gatorsmile ",
    "commit": "bc8234ab815117f765cf60d6ece818d5a9918b90",
    "createdAt": "2019-06-15T17:50:07Z",
    "diffHunk": "@@ -0,0 +1,129 @@\n+--\n+-- Portions Copyright (c) 1996-2019, PostgreSQL Global Development Group\n+--\n+--\n+-- INT2\n+-- https://github.com/postgres/postgres/blob/REL_12_BETA1/src/test/regress/sql/int2.sql\n+\n+CREATE TABLE INT2_TBL(f1 smallint) USING parquet;\n+\n+-- [SPARK-28023] Trim the string when cast string type to other types\n+INSERT INTO INT2_TBL VALUES (trim('0   '));",
    "line": 11
  }],
  "prId": 24853
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Sorry for asking this, but could you check `REL_12_BETA2` and update this to `REL_12_BETA2`?",
    "commit": "bc8234ab815117f765cf60d6ece818d5a9918b90",
    "createdAt": "2019-07-09T04:35:49Z",
    "diffHunk": "@@ -0,0 +1,129 @@\n+--\n+-- Portions Copyright (c) 1996-2019, PostgreSQL Global Development Group\n+--\n+--\n+-- INT2\n+-- https://github.com/postgres/postgres/blob/REL_12_BETA1/src/test/regress/sql/int2.sql"
  }, {
    "author": {
      "login": "wangyum"
    },
    "body": "Sure.",
    "commit": "bc8234ab815117f765cf60d6ece818d5a9918b90",
    "createdAt": "2019-07-09T04:50:17Z",
    "diffHunk": "@@ -0,0 +1,129 @@\n+--\n+-- Portions Copyright (c) 1996-2019, PostgreSQL Global Development Group\n+--\n+--\n+-- INT2\n+-- https://github.com/postgres/postgres/blob/REL_12_BETA1/src/test/regress/sql/int2.sql"
  }],
  "prId": 24853
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Let's comment out line 68 since this should throw `ERROR:  smallint out of range`.",
    "commit": "bc8234ab815117f765cf60d6ece818d5a9918b90",
    "createdAt": "2019-07-09T05:04:34Z",
    "diffHunk": "@@ -0,0 +1,129 @@\n+--\n+-- Portions Copyright (c) 1996-2019, PostgreSQL Global Development Group\n+--\n+--\n+-- INT2\n+-- https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/sql/int2.sql\n+\n+CREATE TABLE INT2_TBL(f1 smallint) USING parquet;\n+\n+-- [SPARK-28023] Trim the string when cast string type to other types\n+INSERT INTO INT2_TBL VALUES (trim('0   '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('  1234 '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('    -1234'));\n+\n+-- [SPARK-27923] Invalid input syntax for type short throws exception at PostgreSQL\n+-- INSERT INTO INT2_TBL VALUES ('34.5');\n+\n+-- largest and smallest values\n+INSERT INTO INT2_TBL VALUES ('32767');\n+\n+INSERT INTO INT2_TBL VALUES ('-32767');\n+\n+-- bad input values -- should give errors\n+-- INSERT INTO INT2_TBL VALUES ('100000');\n+-- INSERT INTO INT2_TBL VALUES ('asdf');\n+-- INSERT INTO INT2_TBL VALUES ('    ');\n+-- INSERT INTO INT2_TBL VALUES ('- 1234');\n+-- INSERT INTO INT2_TBL VALUES ('4 444');\n+-- INSERT INTO INT2_TBL VALUES ('123 dt');\n+-- INSERT INTO INT2_TBL VALUES ('');\n+\n+\n+SELECT '' AS five, * FROM INT2_TBL;\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> smallint('0');\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> int('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = smallint('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= int('0');\n+\n+-- positive odds\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE (i.f1 % smallint('2')) = smallint('1');\n+\n+-- any evens\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE (i.f1 % int('2')) = smallint('0');\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT2_TBL i;"
  }],
  "prId": 24853
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "ditto for this due to `ERROR:  smallint out of range`.",
    "commit": "bc8234ab815117f765cf60d6ece818d5a9918b90",
    "createdAt": "2019-07-09T05:10:02Z",
    "diffHunk": "@@ -0,0 +1,129 @@\n+--\n+-- Portions Copyright (c) 1996-2019, PostgreSQL Global Development Group\n+--\n+--\n+-- INT2\n+-- https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/sql/int2.sql\n+\n+CREATE TABLE INT2_TBL(f1 smallint) USING parquet;\n+\n+-- [SPARK-28023] Trim the string when cast string type to other types\n+INSERT INTO INT2_TBL VALUES (trim('0   '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('  1234 '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('    -1234'));\n+\n+-- [SPARK-27923] Invalid input syntax for type short throws exception at PostgreSQL\n+-- INSERT INTO INT2_TBL VALUES ('34.5');\n+\n+-- largest and smallest values\n+INSERT INTO INT2_TBL VALUES ('32767');\n+\n+INSERT INTO INT2_TBL VALUES ('-32767');\n+\n+-- bad input values -- should give errors\n+-- INSERT INTO INT2_TBL VALUES ('100000');\n+-- INSERT INTO INT2_TBL VALUES ('asdf');\n+-- INSERT INTO INT2_TBL VALUES ('    ');\n+-- INSERT INTO INT2_TBL VALUES ('- 1234');\n+-- INSERT INTO INT2_TBL VALUES ('4 444');\n+-- INSERT INTO INT2_TBL VALUES ('123 dt');\n+-- INSERT INTO INT2_TBL VALUES ('');\n+\n+\n+SELECT '' AS five, * FROM INT2_TBL;\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> smallint('0');\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> int('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = smallint('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= int('0');\n+\n+-- positive odds\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE (i.f1 % smallint('2')) = smallint('1');\n+\n+-- any evens\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE (i.f1 % int('2')) = smallint('0');\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT2_TBL i\n+WHERE abs(f1) < 16384;\n+\n+SELECT '' AS five, i.f1, i.f1 * int('2') AS x FROM INT2_TBL i;\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT2_TBL i;"
  }],
  "prId": 24853
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "ditto due to `ERROR:  smallint out of range`",
    "commit": "bc8234ab815117f765cf60d6ece818d5a9918b90",
    "createdAt": "2019-07-09T05:11:48Z",
    "diffHunk": "@@ -0,0 +1,129 @@\n+--\n+-- Portions Copyright (c) 1996-2019, PostgreSQL Global Development Group\n+--\n+--\n+-- INT2\n+-- https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/sql/int2.sql\n+\n+CREATE TABLE INT2_TBL(f1 smallint) USING parquet;\n+\n+-- [SPARK-28023] Trim the string when cast string type to other types\n+INSERT INTO INT2_TBL VALUES (trim('0   '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('  1234 '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('    -1234'));\n+\n+-- [SPARK-27923] Invalid input syntax for type short throws exception at PostgreSQL\n+-- INSERT INTO INT2_TBL VALUES ('34.5');\n+\n+-- largest and smallest values\n+INSERT INTO INT2_TBL VALUES ('32767');\n+\n+INSERT INTO INT2_TBL VALUES ('-32767');\n+\n+-- bad input values -- should give errors\n+-- INSERT INTO INT2_TBL VALUES ('100000');\n+-- INSERT INTO INT2_TBL VALUES ('asdf');\n+-- INSERT INTO INT2_TBL VALUES ('    ');\n+-- INSERT INTO INT2_TBL VALUES ('- 1234');\n+-- INSERT INTO INT2_TBL VALUES ('4 444');\n+-- INSERT INTO INT2_TBL VALUES ('123 dt');\n+-- INSERT INTO INT2_TBL VALUES ('');\n+\n+\n+SELECT '' AS five, * FROM INT2_TBL;\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> smallint('0');\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> int('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = smallint('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= int('0');\n+\n+-- positive odds\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE (i.f1 % smallint('2')) = smallint('1');\n+\n+-- any evens\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE (i.f1 % int('2')) = smallint('0');\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT2_TBL i\n+WHERE abs(f1) < 16384;\n+\n+SELECT '' AS five, i.f1, i.f1 * int('2') AS x FROM INT2_TBL i;\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT2_TBL i\n+WHERE f1 < 32766;\n+\n+SELECT '' AS five, i.f1, i.f1 + int('2') AS x FROM INT2_TBL i;\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT2_TBL i;"
  }],
  "prId": 24853
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "In case of SPARK-2659, we already made a decision and will not change. So, let's use `div' instead of `/`. I believe this is the same reason why we use `smallint('2')` instead of `int2 '2'`",
    "commit": "bc8234ab815117f765cf60d6ece818d5a9918b90",
    "createdAt": "2019-07-09T05:20:58Z",
    "diffHunk": "@@ -0,0 +1,129 @@\n+--\n+-- Portions Copyright (c) 1996-2019, PostgreSQL Global Development Group\n+--\n+--\n+-- INT2\n+-- https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/sql/int2.sql\n+\n+CREATE TABLE INT2_TBL(f1 smallint) USING parquet;\n+\n+-- [SPARK-28023] Trim the string when cast string type to other types\n+INSERT INTO INT2_TBL VALUES (trim('0   '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('  1234 '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('    -1234'));\n+\n+-- [SPARK-27923] Invalid input syntax for type short throws exception at PostgreSQL\n+-- INSERT INTO INT2_TBL VALUES ('34.5');\n+\n+-- largest and smallest values\n+INSERT INTO INT2_TBL VALUES ('32767');\n+\n+INSERT INTO INT2_TBL VALUES ('-32767');\n+\n+-- bad input values -- should give errors\n+-- INSERT INTO INT2_TBL VALUES ('100000');\n+-- INSERT INTO INT2_TBL VALUES ('asdf');\n+-- INSERT INTO INT2_TBL VALUES ('    ');\n+-- INSERT INTO INT2_TBL VALUES ('- 1234');\n+-- INSERT INTO INT2_TBL VALUES ('4 444');\n+-- INSERT INTO INT2_TBL VALUES ('123 dt');\n+-- INSERT INTO INT2_TBL VALUES ('');\n+\n+\n+SELECT '' AS five, * FROM INT2_TBL;\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> smallint('0');\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> int('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = smallint('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= int('0');\n+\n+-- positive odds\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE (i.f1 % smallint('2')) = smallint('1');\n+\n+-- any evens\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE (i.f1 % int('2')) = smallint('0');\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT2_TBL i\n+WHERE abs(f1) < 16384;\n+\n+SELECT '' AS five, i.f1, i.f1 * int('2') AS x FROM INT2_TBL i;\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT2_TBL i\n+WHERE f1 < 32766;\n+\n+SELECT '' AS five, i.f1, i.f1 + int('2') AS x FROM INT2_TBL i;\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT2_TBL i\n+WHERE f1 > -32767;\n+\n+SELECT '' AS five, i.f1, i.f1 - int('2') AS x FROM INT2_TBL i;\n+\n+-- The result is different because [SPARK-2659]\n+SELECT '' AS five, i.f1, i.f1 / smallint('2') AS x FROM INT2_TBL i;"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "The description should be adjusted accordingly like this.\r\n```\r\n- The result is different because [SPARK-2659]\r\n+ PostgreSQL `/` is the same with Spark `div` since SPARK-2659.\r\n```",
    "commit": "bc8234ab815117f765cf60d6ece818d5a9918b90",
    "createdAt": "2019-07-09T05:22:34Z",
    "diffHunk": "@@ -0,0 +1,129 @@\n+--\n+-- Portions Copyright (c) 1996-2019, PostgreSQL Global Development Group\n+--\n+--\n+-- INT2\n+-- https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/sql/int2.sql\n+\n+CREATE TABLE INT2_TBL(f1 smallint) USING parquet;\n+\n+-- [SPARK-28023] Trim the string when cast string type to other types\n+INSERT INTO INT2_TBL VALUES (trim('0   '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('  1234 '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('    -1234'));\n+\n+-- [SPARK-27923] Invalid input syntax for type short throws exception at PostgreSQL\n+-- INSERT INTO INT2_TBL VALUES ('34.5');\n+\n+-- largest and smallest values\n+INSERT INTO INT2_TBL VALUES ('32767');\n+\n+INSERT INTO INT2_TBL VALUES ('-32767');\n+\n+-- bad input values -- should give errors\n+-- INSERT INTO INT2_TBL VALUES ('100000');\n+-- INSERT INTO INT2_TBL VALUES ('asdf');\n+-- INSERT INTO INT2_TBL VALUES ('    ');\n+-- INSERT INTO INT2_TBL VALUES ('- 1234');\n+-- INSERT INTO INT2_TBL VALUES ('4 444');\n+-- INSERT INTO INT2_TBL VALUES ('123 dt');\n+-- INSERT INTO INT2_TBL VALUES ('');\n+\n+\n+SELECT '' AS five, * FROM INT2_TBL;\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> smallint('0');\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> int('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = smallint('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= int('0');\n+\n+-- positive odds\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE (i.f1 % smallint('2')) = smallint('1');\n+\n+-- any evens\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE (i.f1 % int('2')) = smallint('0');\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT2_TBL i\n+WHERE abs(f1) < 16384;\n+\n+SELECT '' AS five, i.f1, i.f1 * int('2') AS x FROM INT2_TBL i;\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT2_TBL i\n+WHERE f1 < 32766;\n+\n+SELECT '' AS five, i.f1, i.f1 + int('2') AS x FROM INT2_TBL i;\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT2_TBL i\n+WHERE f1 > -32767;\n+\n+SELECT '' AS five, i.f1, i.f1 - int('2') AS x FROM INT2_TBL i;\n+\n+-- The result is different because [SPARK-2659]\n+SELECT '' AS five, i.f1, i.f1 / smallint('2') AS x FROM INT2_TBL i;"
  }],
  "prId": 24853
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "ditto.",
    "commit": "bc8234ab815117f765cf60d6ece818d5a9918b90",
    "createdAt": "2019-07-09T05:22:45Z",
    "diffHunk": "@@ -0,0 +1,129 @@\n+--\n+-- Portions Copyright (c) 1996-2019, PostgreSQL Global Development Group\n+--\n+--\n+-- INT2\n+-- https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/sql/int2.sql\n+\n+CREATE TABLE INT2_TBL(f1 smallint) USING parquet;\n+\n+-- [SPARK-28023] Trim the string when cast string type to other types\n+INSERT INTO INT2_TBL VALUES (trim('0   '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('  1234 '));\n+\n+INSERT INTO INT2_TBL VALUES (trim('    -1234'));\n+\n+-- [SPARK-27923] Invalid input syntax for type short throws exception at PostgreSQL\n+-- INSERT INTO INT2_TBL VALUES ('34.5');\n+\n+-- largest and smallest values\n+INSERT INTO INT2_TBL VALUES ('32767');\n+\n+INSERT INTO INT2_TBL VALUES ('-32767');\n+\n+-- bad input values -- should give errors\n+-- INSERT INTO INT2_TBL VALUES ('100000');\n+-- INSERT INTO INT2_TBL VALUES ('asdf');\n+-- INSERT INTO INT2_TBL VALUES ('    ');\n+-- INSERT INTO INT2_TBL VALUES ('- 1234');\n+-- INSERT INTO INT2_TBL VALUES ('4 444');\n+-- INSERT INTO INT2_TBL VALUES ('123 dt');\n+-- INSERT INTO INT2_TBL VALUES ('');\n+\n+\n+SELECT '' AS five, * FROM INT2_TBL;\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> smallint('0');\n+\n+SELECT '' AS four, i.* FROM INT2_TBL i WHERE i.f1 <> int('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = smallint('0');\n+\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE i.f1 = int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 < int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 <= int('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > smallint('0');\n+\n+SELECT '' AS two, i.* FROM INT2_TBL i WHERE i.f1 > int('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= smallint('0');\n+\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE i.f1 >= int('0');\n+\n+-- positive odds\n+SELECT '' AS one, i.* FROM INT2_TBL i WHERE (i.f1 % smallint('2')) = smallint('1');\n+\n+-- any evens\n+SELECT '' AS three, i.* FROM INT2_TBL i WHERE (i.f1 % int('2')) = smallint('0');\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 * smallint('2') AS x FROM INT2_TBL i\n+WHERE abs(f1) < 16384;\n+\n+SELECT '' AS five, i.f1, i.f1 * int('2') AS x FROM INT2_TBL i;\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 + smallint('2') AS x FROM INT2_TBL i\n+WHERE f1 < 32766;\n+\n+SELECT '' AS five, i.f1, i.f1 + int('2') AS x FROM INT2_TBL i;\n+\n+-- [SPARK-28024] Incorrect value when out of range\n+SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT2_TBL i;\n+\n+SELECT '' AS five, i.f1, i.f1 - smallint('2') AS x FROM INT2_TBL i\n+WHERE f1 > -32767;\n+\n+SELECT '' AS five, i.f1, i.f1 - int('2') AS x FROM INT2_TBL i;\n+\n+-- The result is different because [SPARK-2659]\n+SELECT '' AS five, i.f1, i.f1 / smallint('2') AS x FROM INT2_TBL i;\n+\n+-- The result is different because [SPARK-2659]\n+SELECT '' AS five, i.f1, i.f1 / int('2') AS x FROM INT2_TBL i;"
  }],
  "prId": 24853
}]