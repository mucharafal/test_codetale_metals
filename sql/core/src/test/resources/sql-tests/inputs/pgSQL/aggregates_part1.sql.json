[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Thank you for updating this, too.",
    "commit": "517dcf04653be0e9946bb412f11681d8afb8eb5b",
    "createdAt": "2019-05-23T15:57:50Z",
    "diffHunk": "@@ -0,0 +1,151 @@\n+--\n+-- Portions Copyright (c) 1996-2019, PostgreSQL Global Development Group\n+--\n+--\n+-- AGGREGATES [Part 1]\n+-- https://github.com/postgres/postgres/blob/02ddd499322ab6f2f0d58692955dc9633c2150fc/src/test/regress/sql/aggregates.sql#L1-L143\n+\n+-- avoid bit-exact output here because operations may not be bit-exact.\n+-- SET extra_float_digits = 0;\n+\n+SELECT avg(four) AS avg_1 FROM onek;\n+\n+SELECT avg(a) AS avg_32 FROM aggtest WHERE a < 100;\n+\n+-- In 7.1, avg(float4) is computed using float8 arithmetic.\n+-- Round the result to 3 digits to avoid platform-specific results.\n+\n+select CAST(avg(b) AS Decimal(10,3)) AS avg_107_943 FROM aggtest;\n+-- `student` has a column with data type POINT, which is not supported by Spark [SPARK-27766]\n+-- SELECT avg(gpa) AS avg_3_4 FROM ONLY student;\n+\n+SELECT sum(four) AS sum_1500 FROM onek;\n+SELECT sum(a) AS sum_198 FROM aggtest;\n+SELECT sum(b) AS avg_431_773 FROM aggtest;\n+-- `student` has a column with data type POINT, which is not supported by Spark [SPARK-27766]\n+-- SELECT sum(gpa) AS avg_6_8 FROM ONLY student;\n+\n+SELECT max(four) AS max_3 FROM onek;\n+SELECT max(a) AS max_100 FROM aggtest;\n+SELECT max(aggtest.b) AS max_324_78 FROM aggtest;\n+-- `student` has a column with data type POINT, which is not supported by Spark [SPARK-27766]\n+-- SELECT max(student.gpa) AS max_3_7 FROM student;\n+\n+SELECT stddev_pop(b) FROM aggtest;\n+SELECT stddev_samp(b) FROM aggtest;\n+SELECT var_pop(b) FROM aggtest;\n+SELECT var_samp(b) FROM aggtest;\n+\n+SELECT stddev_pop(CAST(b AS Decimal(38,0))) FROM aggtest;\n+SELECT stddev_samp(CAST(b AS Decimal(38,0))) FROM aggtest;\n+SELECT var_pop(CAST(b AS Decimal(38,0))) FROM aggtest;\n+SELECT var_samp(CAST(b AS Decimal(38,0))) FROM aggtest;\n+\n+-- population variance is defined for a single tuple, sample variance\n+-- is not\n+SELECT var_pop(1.0), var_samp(2.0);\n+SELECT stddev_pop(CAST(3.0 AS Decimal(38,0))), stddev_samp(CAST(4.0 AS Decimal(38,0)));\n+\n+\n+-- verify correct results for null and NaN inputs\n+select sum(CAST(null AS int)) from range(1,4);\n+select sum(CAST(null AS long)) from range(1,4);\n+select sum(CAST(null AS Decimal(38,0))) from range(1,4);\n+select sum(CAST(null AS DOUBLE)) from range(1,4);\n+select avg(CAST(null AS int)) from range(1,4);\n+select avg(CAST(null AS long)) from range(1,4);\n+select avg(CAST(null AS Decimal(38,0))) from range(1,4);\n+select avg(CAST(null AS DOUBLE)) from range(1,4);\n+select sum(CAST('NaN' AS DOUBLE)) from range(1,4);\n+select avg(CAST('NaN' AS DOUBLE)) from range(1,4);\n+\n+-- [SPARK-27768] verify correct results for infinite inputs\n+SELECT avg(CAST(x AS DOUBLE)), var_pop(CAST(x AS DOUBLE))\n+FROM (VALUES (CAST('1' AS DOUBLE)), (CAST('Infinity' AS DOUBLE))) v(x);",
    "line": 64
  }],
  "prId": 24640
}]