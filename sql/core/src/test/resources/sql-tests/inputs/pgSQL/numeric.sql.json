[{
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "I checked that the answers are the same with pgSQL ones: https://github.com/postgres/postgres/blob/0ab7110bcbcce5ff58afb32e7871c54e87502139/src/test/regress/expected/numeric.out#L1510",
    "commit": "8caf4a95376623bd6f1e3e999c49be69e726852e",
    "createdAt": "2019-08-19T01:53:14Z",
    "diffHunk": "@@ -893,14 +893,14 @@ SELECT * FROM num_input_test;\n --\n -- 999999999999999999999 is overflow for SYSTEM_DEFAULT(decimal(38, 18)), we use BigIntDecimal(decimal(38, 0)).\n select cast(999999999999999999999 as decimal(38, 0))/1000000000000000000000;\n--- [SPARK-28322] DIV support decimal type\n--- select div(cast(999999999999999999999 as decimal(38, 0)),1000000000000000000000);\n+\n+select div(cast(999999999999999999999 as decimal(38, 0)),1000000000000000000000);\n select mod(cast(999999999999999999999 as decimal(38, 0)),1000000000000000000000);\n--- select div(cast(-9999999999999999999999 as decimal(38, 0)),1000000000000000000000);\n+select div(cast(-9999999999999999999999 as decimal(38, 0)),1000000000000000000000);\n select mod(cast(-9999999999999999999999 as decimal(38, 0)),1000000000000000000000);\n--- select div(cast(-9999999999999999999999 as decimal(38, 0)),1000000000000000000000)*1000000000000000000000 + mod(cast(-9999999999999999999999 as decimal(38, 0)),1000000000000000000000);\n+select div(cast(-9999999999999999999999 as decimal(38, 0)),1000000000000000000000)*1000000000000000000000 + mod(cast(-9999999999999999999999 as decimal(38, 0)),1000000000000000000000);\n select mod (70.0,70) ;\n--- select div (70.0,70) ;\n+select div (70.0,70) ;",
    "line": 16
  }],
  "prId": 25136
}]