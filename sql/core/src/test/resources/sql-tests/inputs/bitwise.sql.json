[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "the overflow behavior is nothing to do with the `bit_count` function, or did I miss something?",
    "commit": "b6ab8c744f4abe72c6925daf987536ea92ef1460",
    "createdAt": "2019-10-17T05:06:16Z",
    "diffHunk": "@@ -0,0 +1,44 @@\n+-- test cases for bitwise functions\n+\n+-- null\n+\n+select bit_count(null);\n+\n+-- boolean\n+select bit_count(true);\n+select bit_count(false);\n+\n+-- byte/tinyint\n+select bit_count(cast(1 as tinyint));\n+select bit_count(cast(2 as tinyint));\n+select bit_count(cast(3 as tinyint));\n+\n+-- short/smallint\n+select bit_count(1S);\n+select bit_count(2S);\n+select bit_count(3S);\n+\n+-- int\n+select bit_count(1);\n+select bit_count(2);\n+select bit_count(3);\n+\n+-- long/bigint\n+select bit_count(1L);\n+select bit_count(2L);\n+select bit_count(3L);\n+\n+-- negative num\n+select bit_count(-1L);\n+\n+-- mysql> select 9223372036854775807 + 1;\n+-- ERROR 1690 (22003): BIGINT value is out of range in '(9223372036854775807 + 1)'\n+-- mysql> select bit_count(9223372036854775807 + 1);\n+-- ERROR 1690 (22003): BIGINT value is out of range in '(9223372036854775807 + 1)'\n+-- out of range\n+select 9223372036854775807L + 1L;"
  }, {
    "author": {
      "login": "yaooqinn"
    },
    "body": "yes, you're right. The case here illustrates the overflow behavior is nothing to do with the `bit_count`, which may cause inconsistency with mysql",
    "commit": "b6ab8c744f4abe72c6925daf987536ea92ef1460",
    "createdAt": "2019-10-17T05:47:27Z",
    "diffHunk": "@@ -0,0 +1,44 @@\n+-- test cases for bitwise functions\n+\n+-- null\n+\n+select bit_count(null);\n+\n+-- boolean\n+select bit_count(true);\n+select bit_count(false);\n+\n+-- byte/tinyint\n+select bit_count(cast(1 as tinyint));\n+select bit_count(cast(2 as tinyint));\n+select bit_count(cast(3 as tinyint));\n+\n+-- short/smallint\n+select bit_count(1S);\n+select bit_count(2S);\n+select bit_count(3S);\n+\n+-- int\n+select bit_count(1);\n+select bit_count(2);\n+select bit_count(3);\n+\n+-- long/bigint\n+select bit_count(1L);\n+select bit_count(2L);\n+select bit_count(3L);\n+\n+-- negative num\n+select bit_count(-1L);\n+\n+-- mysql> select 9223372036854775807 + 1;\n+-- ERROR 1690 (22003): BIGINT value is out of range in '(9223372036854775807 + 1)'\n+-- mysql> select bit_count(9223372036854775807 + 1);\n+-- ERROR 1690 (22003): BIGINT value is out of range in '(9223372036854775807 + 1)'\n+-- out of range\n+select 9223372036854775807L + 1L;"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "We have test suites for the overflow behavior. I don't think it makes sense to test overflow again in all the functions that take integers.",
    "commit": "b6ab8c744f4abe72c6925daf987536ea92ef1460",
    "createdAt": "2019-10-17T06:19:34Z",
    "diffHunk": "@@ -0,0 +1,44 @@\n+-- test cases for bitwise functions\n+\n+-- null\n+\n+select bit_count(null);\n+\n+-- boolean\n+select bit_count(true);\n+select bit_count(false);\n+\n+-- byte/tinyint\n+select bit_count(cast(1 as tinyint));\n+select bit_count(cast(2 as tinyint));\n+select bit_count(cast(3 as tinyint));\n+\n+-- short/smallint\n+select bit_count(1S);\n+select bit_count(2S);\n+select bit_count(3S);\n+\n+-- int\n+select bit_count(1);\n+select bit_count(2);\n+select bit_count(3);\n+\n+-- long/bigint\n+select bit_count(1L);\n+select bit_count(2L);\n+select bit_count(3L);\n+\n+-- negative num\n+select bit_count(-1L);\n+\n+-- mysql> select 9223372036854775807 + 1;\n+-- ERROR 1690 (22003): BIGINT value is out of range in '(9223372036854775807 + 1)'\n+-- mysql> select bit_count(9223372036854775807 + 1);\n+-- ERROR 1690 (22003): BIGINT value is out of range in '(9223372036854775807 + 1)'\n+-- out of range\n+select 9223372036854775807L + 1L;"
  }, {
    "author": {
      "login": "yaooqinn"
    },
    "body": "ok, I will rm these and just check long min/max",
    "commit": "b6ab8c744f4abe72c6925daf987536ea92ef1460",
    "createdAt": "2019-10-17T06:35:21Z",
    "diffHunk": "@@ -0,0 +1,44 @@\n+-- test cases for bitwise functions\n+\n+-- null\n+\n+select bit_count(null);\n+\n+-- boolean\n+select bit_count(true);\n+select bit_count(false);\n+\n+-- byte/tinyint\n+select bit_count(cast(1 as tinyint));\n+select bit_count(cast(2 as tinyint));\n+select bit_count(cast(3 as tinyint));\n+\n+-- short/smallint\n+select bit_count(1S);\n+select bit_count(2S);\n+select bit_count(3S);\n+\n+-- int\n+select bit_count(1);\n+select bit_count(2);\n+select bit_count(3);\n+\n+-- long/bigint\n+select bit_count(1L);\n+select bit_count(2L);\n+select bit_count(3L);\n+\n+-- negative num\n+select bit_count(-1L);\n+\n+-- mysql> select 9223372036854775807 + 1;\n+-- ERROR 1690 (22003): BIGINT value is out of range in '(9223372036854775807 + 1)'\n+-- mysql> select bit_count(9223372036854775807 + 1);\n+-- ERROR 1690 (22003): BIGINT value is out of range in '(9223372036854775807 + 1)'\n+-- out of range\n+select 9223372036854775807L + 1L;"
  }],
  "prId": 26139
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "we can test the min long value if that's what you intend to do here.",
    "commit": "b6ab8c744f4abe72c6925daf987536ea92ef1460",
    "createdAt": "2019-10-17T05:07:01Z",
    "diffHunk": "@@ -0,0 +1,44 @@\n+-- test cases for bitwise functions\n+\n+-- null\n+\n+select bit_count(null);\n+\n+-- boolean\n+select bit_count(true);\n+select bit_count(false);\n+\n+-- byte/tinyint\n+select bit_count(cast(1 as tinyint));\n+select bit_count(cast(2 as tinyint));\n+select bit_count(cast(3 as tinyint));\n+\n+-- short/smallint\n+select bit_count(1S);\n+select bit_count(2S);\n+select bit_count(3S);\n+\n+-- int\n+select bit_count(1);\n+select bit_count(2);\n+select bit_count(3);\n+\n+-- long/bigint\n+select bit_count(1L);\n+select bit_count(2L);\n+select bit_count(3L);\n+\n+-- negative num\n+select bit_count(-1L);\n+\n+-- mysql> select 9223372036854775807 + 1;\n+-- ERROR 1690 (22003): BIGINT value is out of range in '(9223372036854775807 + 1)'\n+-- mysql> select bit_count(9223372036854775807 + 1);\n+-- ERROR 1690 (22003): BIGINT value is out of range in '(9223372036854775807 + 1)'\n+-- out of range\n+select 9223372036854775807L + 1L;\n+select bit_count(9223372036854775807L + 1L);"
  }, {
    "author": {
      "login": "yaooqinn"
    },
    "body": "```mysql\r\nmysql> select bit_count(-9223372036854775808);\r\n+---------------------------------+\r\n| bit_count(-9223372036854775808) |\r\n+---------------------------------+\r\n|                               1 |\r\n+---------------------------------+\r\n1 row in set (0.01 sec)\r\n\r\nmysql> select bit_count(9223372036854775807);\r\n+--------------------------------+\r\n| bit_count(9223372036854775807) |\r\n+--------------------------------+\r\n|                             63 |\r\n+--------------------------------+\r\n1 row in set (0.00 sec)\r\n\r\nmysql> select bit_count(9223372036854775807 + 1);\r\nERROR 1690 (22003): BIGINT value is out of range in '(9223372036854775807 + 1)'\r\n```",
    "commit": "b6ab8c744f4abe72c6925daf987536ea92ef1460",
    "createdAt": "2019-10-17T05:50:52Z",
    "diffHunk": "@@ -0,0 +1,44 @@\n+-- test cases for bitwise functions\n+\n+-- null\n+\n+select bit_count(null);\n+\n+-- boolean\n+select bit_count(true);\n+select bit_count(false);\n+\n+-- byte/tinyint\n+select bit_count(cast(1 as tinyint));\n+select bit_count(cast(2 as tinyint));\n+select bit_count(cast(3 as tinyint));\n+\n+-- short/smallint\n+select bit_count(1S);\n+select bit_count(2S);\n+select bit_count(3S);\n+\n+-- int\n+select bit_count(1);\n+select bit_count(2);\n+select bit_count(3);\n+\n+-- long/bigint\n+select bit_count(1L);\n+select bit_count(2L);\n+select bit_count(3L);\n+\n+-- negative num\n+select bit_count(-1L);\n+\n+-- mysql> select 9223372036854775807 + 1;\n+-- ERROR 1690 (22003): BIGINT value is out of range in '(9223372036854775807 + 1)'\n+-- mysql> select bit_count(9223372036854775807 + 1);\n+-- ERROR 1690 (22003): BIGINT value is out of range in '(9223372036854775807 + 1)'\n+-- out of range\n+select 9223372036854775807L + 1L;\n+select bit_count(9223372036854775807L + 1L);"
  }],
  "prId": 26139
}]