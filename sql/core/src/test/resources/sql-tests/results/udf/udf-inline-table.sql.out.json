[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "@imback82, let's comment out this test with a comment saying the current UDF is not supported for the conversion from string to null for now.",
    "commit": "1ba0886b8d2928252efba4c09da816c72c1e8657",
    "createdAt": "2019-07-19T02:01:52Z",
    "diffHunk": "@@ -0,0 +1,153 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 17\n+\n+\n+-- !query 0\n+select udf(col1), udf(col2) from values (\"one\", 1)\n+-- !query 0 schema\n+struct<CAST(udf(cast(col1 as string)) AS STRING):string,CAST(udf(cast(col2 as string)) AS INT):int>\n+-- !query 0 output\n+one\t1\n+\n+\n+-- !query 1\n+select udf(col1), udf(udf(col2)) from values (\"one\", 1) as data\n+-- !query 1 schema\n+struct<CAST(udf(cast(col1 as string)) AS STRING):string,CAST(udf(cast(cast(udf(cast(col2 as string)) as int) as string)) AS INT):int>\n+-- !query 1 output\n+one\t1\n+\n+\n+-- !query 2\n+select udf(a), b from values (\"one\", 1) as data(a, b)\n+-- !query 2 schema\n+struct<CAST(udf(cast(a as string)) AS STRING):string,b:int>\n+-- !query 2 output\n+one\t1\n+\n+\n+-- !query 3\n+select udf(a) from values 1, 2, 3 as data(a)\n+-- !query 3 schema\n+struct<CAST(udf(cast(a as string)) AS INT):int>\n+-- !query 3 output\n+1\n+2\n+3\n+\n+\n+-- !query 4\n+select udf(a), b from values (\"one\", 1), (\"two\", 2), (\"three\", null) as data(a, b)\n+-- !query 4 schema\n+struct<CAST(udf(cast(a as string)) AS STRING):string,b:int>\n+-- !query 4 output\n+one\t1\n+three\tNULL\n+two\t2\n+\n+\n+-- !query 5\n+select a, udf(b) from values (\"one\", null), (\"two\", null) as data(a, b)\n+-- !query 5 schema\n+struct<>\n+-- !query 5 output\n+org.apache.spark.sql.AnalysisException\n+cannot resolve 'CAST(udf(cast(b as string)) AS NULL)' due to data type mismatch: cannot cast string to null; line 1 pos 10"
  }, {
    "author": {
      "login": "imback82"
    },
    "body": "@HyukjinKwon Do you prefer that or just work around with `udf(a), b`?",
    "commit": "1ba0886b8d2928252efba4c09da816c72c1e8657",
    "createdAt": "2019-07-19T02:05:31Z",
    "diffHunk": "@@ -0,0 +1,153 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 17\n+\n+\n+-- !query 0\n+select udf(col1), udf(col2) from values (\"one\", 1)\n+-- !query 0 schema\n+struct<CAST(udf(cast(col1 as string)) AS STRING):string,CAST(udf(cast(col2 as string)) AS INT):int>\n+-- !query 0 output\n+one\t1\n+\n+\n+-- !query 1\n+select udf(col1), udf(udf(col2)) from values (\"one\", 1) as data\n+-- !query 1 schema\n+struct<CAST(udf(cast(col1 as string)) AS STRING):string,CAST(udf(cast(cast(udf(cast(col2 as string)) as int) as string)) AS INT):int>\n+-- !query 1 output\n+one\t1\n+\n+\n+-- !query 2\n+select udf(a), b from values (\"one\", 1) as data(a, b)\n+-- !query 2 schema\n+struct<CAST(udf(cast(a as string)) AS STRING):string,b:int>\n+-- !query 2 output\n+one\t1\n+\n+\n+-- !query 3\n+select udf(a) from values 1, 2, 3 as data(a)\n+-- !query 3 schema\n+struct<CAST(udf(cast(a as string)) AS INT):int>\n+-- !query 3 output\n+1\n+2\n+3\n+\n+\n+-- !query 4\n+select udf(a), b from values (\"one\", 1), (\"two\", 2), (\"three\", null) as data(a, b)\n+-- !query 4 schema\n+struct<CAST(udf(cast(a as string)) AS STRING):string,b:int>\n+-- !query 4 output\n+one\t1\n+three\tNULL\n+two\t2\n+\n+\n+-- !query 5\n+select a, udf(b) from values (\"one\", null), (\"two\", null) as data(a, b)\n+-- !query 5 schema\n+struct<>\n+-- !query 5 output\n+org.apache.spark.sql.AnalysisException\n+cannot resolve 'CAST(udf(cast(b as string)) AS NULL)' due to data type mismatch: cannot cast string to null; line 1 pos 10"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Hm, yea let's do that.",
    "commit": "1ba0886b8d2928252efba4c09da816c72c1e8657",
    "createdAt": "2019-07-19T03:15:45Z",
    "diffHunk": "@@ -0,0 +1,153 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 17\n+\n+\n+-- !query 0\n+select udf(col1), udf(col2) from values (\"one\", 1)\n+-- !query 0 schema\n+struct<CAST(udf(cast(col1 as string)) AS STRING):string,CAST(udf(cast(col2 as string)) AS INT):int>\n+-- !query 0 output\n+one\t1\n+\n+\n+-- !query 1\n+select udf(col1), udf(udf(col2)) from values (\"one\", 1) as data\n+-- !query 1 schema\n+struct<CAST(udf(cast(col1 as string)) AS STRING):string,CAST(udf(cast(cast(udf(cast(col2 as string)) as int) as string)) AS INT):int>\n+-- !query 1 output\n+one\t1\n+\n+\n+-- !query 2\n+select udf(a), b from values (\"one\", 1) as data(a, b)\n+-- !query 2 schema\n+struct<CAST(udf(cast(a as string)) AS STRING):string,b:int>\n+-- !query 2 output\n+one\t1\n+\n+\n+-- !query 3\n+select udf(a) from values 1, 2, 3 as data(a)\n+-- !query 3 schema\n+struct<CAST(udf(cast(a as string)) AS INT):int>\n+-- !query 3 output\n+1\n+2\n+3\n+\n+\n+-- !query 4\n+select udf(a), b from values (\"one\", 1), (\"two\", 2), (\"three\", null) as data(a, b)\n+-- !query 4 schema\n+struct<CAST(udf(cast(a as string)) AS STRING):string,b:int>\n+-- !query 4 output\n+one\t1\n+three\tNULL\n+two\t2\n+\n+\n+-- !query 5\n+select a, udf(b) from values (\"one\", null), (\"two\", null) as data(a, b)\n+-- !query 5 schema\n+struct<>\n+-- !query 5 output\n+org.apache.spark.sql.AnalysisException\n+cannot resolve 'CAST(udf(cast(b as string)) AS NULL)' due to data type mismatch: cannot cast string to null; line 1 pos 10"
  }, {
    "author": {
      "login": "imback82"
    },
    "body": "OK, fixed. New commit pushed.",
    "commit": "1ba0886b8d2928252efba4c09da816c72c1e8657",
    "createdAt": "2019-07-19T03:35:10Z",
    "diffHunk": "@@ -0,0 +1,153 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 17\n+\n+\n+-- !query 0\n+select udf(col1), udf(col2) from values (\"one\", 1)\n+-- !query 0 schema\n+struct<CAST(udf(cast(col1 as string)) AS STRING):string,CAST(udf(cast(col2 as string)) AS INT):int>\n+-- !query 0 output\n+one\t1\n+\n+\n+-- !query 1\n+select udf(col1), udf(udf(col2)) from values (\"one\", 1) as data\n+-- !query 1 schema\n+struct<CAST(udf(cast(col1 as string)) AS STRING):string,CAST(udf(cast(cast(udf(cast(col2 as string)) as int) as string)) AS INT):int>\n+-- !query 1 output\n+one\t1\n+\n+\n+-- !query 2\n+select udf(a), b from values (\"one\", 1) as data(a, b)\n+-- !query 2 schema\n+struct<CAST(udf(cast(a as string)) AS STRING):string,b:int>\n+-- !query 2 output\n+one\t1\n+\n+\n+-- !query 3\n+select udf(a) from values 1, 2, 3 as data(a)\n+-- !query 3 schema\n+struct<CAST(udf(cast(a as string)) AS INT):int>\n+-- !query 3 output\n+1\n+2\n+3\n+\n+\n+-- !query 4\n+select udf(a), b from values (\"one\", 1), (\"two\", 2), (\"three\", null) as data(a, b)\n+-- !query 4 schema\n+struct<CAST(udf(cast(a as string)) AS STRING):string,b:int>\n+-- !query 4 output\n+one\t1\n+three\tNULL\n+two\t2\n+\n+\n+-- !query 5\n+select a, udf(b) from values (\"one\", null), (\"two\", null) as data(a, b)\n+-- !query 5 schema\n+struct<>\n+-- !query 5 output\n+org.apache.spark.sql.AnalysisException\n+cannot resolve 'CAST(udf(cast(b as string)) AS NULL)' due to data type mismatch: cannot cast string to null; line 1 pos 10"
  }],
  "prId": 25124
}]