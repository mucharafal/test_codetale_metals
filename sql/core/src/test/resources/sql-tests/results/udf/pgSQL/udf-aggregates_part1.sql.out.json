[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Amazingly, this still fails with `INT` type. And, Spark seems to return a wrong value due to truncation.\r\n\r\n- https://amplab.cs.berkeley.edu/jenkins/view/Spark%20QA%20Test%20(Dashboard)/job/spark-master-test-maven-hadoop-2.7/6584/testReport/org.apache.spark.sql/SQLQueryTestSuite/udf_pgSQL_udf_aggregates_part1_sql___Regular_Python_UDF/\r\n\r\n```\r\nExpected \"700000000000[6] 1\", but got \"700000000000[5] 1\" Result did not match for query #33&#010;SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS long), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))&#010;FROM (VALUES (7000000000005), (7000000000007)) v(x)\r\n```",
    "commit": "21870c64e6fccf44844770867f14e966cba9512e",
    "createdAt": "2019-07-11T20:48:38Z",
    "diffHunk": "@@ -262,37 +262,37 @@ NaN\tNaN\n \n \n -- !query 32\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS int), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (100000003), (100000004), (100000006), (100000007)) v(x)\n -- !query 32 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS INT):int,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 32 output\n-1.00000005E8\t2.5\n+100000005\t2.5\n \n \n -- !query 33\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS long), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (7000000000005), (7000000000007)) v(x)\n -- !query 33 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS BIGINT):bigint,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 33 output\n-7.000000000006E12\t1.0\n+7000000000006\t1",
    "line": 214
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "In `master` branch, all maven Jenkins fail with this. Only SBT Jenkins are running.",
    "commit": "21870c64e6fccf44844770867f14e966cba9512e",
    "createdAt": "2019-07-11T21:51:35Z",
    "diffHunk": "@@ -262,37 +262,37 @@ NaN\tNaN\n \n \n -- !query 32\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS int), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (100000003), (100000004), (100000006), (100000007)) v(x)\n -- !query 32 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS INT):int,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 32 output\n-1.00000005E8\t2.5\n+100000005\t2.5\n \n \n -- !query 33\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS long), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (7000000000005), (7000000000007)) v(x)\n -- !query 33 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS BIGINT):bigint,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 33 output\n-7.000000000006E12\t1.0\n+7000000000006\t1",
    "line": 214
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "BTW, in SBT Jenkins result, we can distinguish the test file name. This is a separate issue.\r\n- https://amplab.cs.berkeley.edu/jenkins/view/Spark%20QA%20Test%20(Dashboard)/job/spark-master-test-sbt-hadoop-3.2/87/testReport/org.apache.spark.sql/SQLQueryTestSuite/",
    "commit": "21870c64e6fccf44844770867f14e966cba9512e",
    "createdAt": "2019-07-11T21:52:57Z",
    "diffHunk": "@@ -262,37 +262,37 @@ NaN\tNaN\n \n \n -- !query 32\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS int), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (100000003), (100000004), (100000006), (100000007)) v(x)\n -- !query 32 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS INT):int,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 32 output\n-1.00000005E8\t2.5\n+100000005\t2.5\n \n \n -- !query 33\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS long), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (7000000000005), (7000000000007)) v(x)\n -- !query 33 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS BIGINT):bigint,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 33 output\n-7.000000000006E12\t1.0\n+7000000000006\t1",
    "line": 214
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Thanks @dongjoon-hyun. Let me take a look and make a fix soon.",
    "commit": "21870c64e6fccf44844770867f14e966cba9512e",
    "createdAt": "2019-07-12T00:01:29Z",
    "diffHunk": "@@ -262,37 +262,37 @@ NaN\tNaN\n \n \n -- !query 32\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS int), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (100000003), (100000004), (100000006), (100000007)) v(x)\n -- !query 32 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS INT):int,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 32 output\n-1.00000005E8\t2.5\n+100000005\t2.5\n \n \n -- !query 33\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS long), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (7000000000005), (7000000000007)) v(x)\n -- !query 33 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS BIGINT):bigint,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 33 output\n-7.000000000006E12\t1.0\n+7000000000006\t1",
    "line": 214
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Thank you!",
    "commit": "21870c64e6fccf44844770867f14e966cba9512e",
    "createdAt": "2019-07-12T00:24:35Z",
    "diffHunk": "@@ -262,37 +262,37 @@ NaN\tNaN\n \n \n -- !query 32\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS int), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (100000003), (100000004), (100000006), (100000007)) v(x)\n -- !query 32 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS INT):int,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 32 output\n-1.00000005E8\t2.5\n+100000005\t2.5\n \n \n -- !query 33\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS long), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (7000000000005), (7000000000007)) v(x)\n -- !query 33 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS BIGINT):bigint,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 33 output\n-7.000000000006E12\t1.0\n+7000000000006\t1",
    "line": 214
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "It passes with Maven in my local:\r\n\r\n```\r\n- udf/pgSQL/udf-aggregates_part1.sql - Scala UDF\r\n- udf/pgSQL/udf-aggregates_part1.sql - Regular Python UDF\r\n- udf/pgSQL/udf-aggregates_part1.sql - Scalar Pandas UDF\r\n```\r\n\r\nI believe the problem seems similarly the Python or OS installed in the machine.\r\n\r\nLooks here's what's going on:\r\n\r\n```\r\nscala> Seq(\"7000000000004.999\", \"7000000000006.999\").toDF().selectExpr(\"CAST(avg(value) AS long)\").show()\r\n+--------------------------+\r\n|CAST(avg(value) AS BIGINT)|\r\n+--------------------------+\r\n|             7000000000005|\r\n+--------------------------+\r\n```\r\n\r\nLet me try to find a better way to work around it ... ",
    "commit": "21870c64e6fccf44844770867f14e966cba9512e",
    "createdAt": "2019-07-12T00:40:52Z",
    "diffHunk": "@@ -262,37 +262,37 @@ NaN\tNaN\n \n \n -- !query 32\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS int), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (100000003), (100000004), (100000006), (100000007)) v(x)\n -- !query 32 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS INT):int,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 32 output\n-1.00000005E8\t2.5\n+100000005\t2.5\n \n \n -- !query 33\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS long), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (7000000000005), (7000000000007)) v(x)\n -- !query 33 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS BIGINT):bigint,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 33 output\n-7.000000000006E12\t1.0\n+7000000000006\t1",
    "line": 214
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Can we ignore this test first because this is consistent and permanent in Jenkins Maven? This will hide another PR's bugs.\r\n\r\nI mean this line of this file.",
    "commit": "21870c64e6fccf44844770867f14e966cba9512e",
    "createdAt": "2019-07-12T00:45:59Z",
    "diffHunk": "@@ -262,37 +262,37 @@ NaN\tNaN\n \n \n -- !query 32\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS int), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (100000003), (100000004), (100000006), (100000007)) v(x)\n -- !query 32 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS INT):int,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 32 output\n-1.00000005E8\t2.5\n+100000005\t2.5\n \n \n -- !query 33\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS long), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (7000000000005), (7000000000007)) v(x)\n -- !query 33 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS BIGINT):bigint,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 33 output\n-7.000000000006E12\t1.0\n+7000000000006\t1",
    "line": 214
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Can you give me a couple of hours? I will disable this line if I can't make it .. ",
    "commit": "21870c64e6fccf44844770867f14e966cba9512e",
    "createdAt": "2019-07-12T01:21:02Z",
    "diffHunk": "@@ -262,37 +262,37 @@ NaN\tNaN\n \n \n -- !query 32\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS int), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (100000003), (100000004), (100000006), (100000007)) v(x)\n -- !query 32 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS INT):int,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 32 output\n-1.00000005E8\t2.5\n+100000005\t2.5\n \n \n -- !query 33\n-SELECT avg(udf(CAST(x AS DOUBLE))), udf(var_pop(CAST(x AS DOUBLE)))\n+SELECT CAST(avg(udf(CAST(x AS DOUBLE))) AS long), CAST(udf(var_pop(CAST(x AS DOUBLE))) AS decimal(10,3))\n FROM (VALUES (7000000000005), (7000000000007)) v(x)\n -- !query 33 schema\n-struct<avg(CAST(udf(cast(x as double)) AS DOUBLE)):double,udf(var_pop(cast(x as double))):string>\n+struct<CAST(avg(CAST(udf(cast(x as double)) AS DOUBLE)) AS BIGINT):bigint,CAST(udf(var_pop(cast(x as double))) AS DECIMAL(10,3)):decimal(10,3)>\n -- !query 33 output\n-7.000000000006E12\t1.0\n+7000000000006\t1",
    "line": 214
  }],
  "prId": 25110
}]