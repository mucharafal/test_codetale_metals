[{
  "comments": [{
    "author": {
      "login": "mgaido91"
    },
    "body": "Just a question, is this going to be addressed in the PR which allows recursive subqueries or is this an invalid query?",
    "commit": "9ec6eaf3f1b992ae3c0101464483f3a7c9c8f70a",
    "createdAt": "2019-07-03T08:14:47Z",
    "diffHunk": "@@ -98,16 +98,202 @@ struct<x:int>\n \n \n -- !query 8\n-DROP VIEW IF EXISTS t\n+WITH t as (\n+  WITH t2 AS (SELECT 1)\n+  SELECT * FROM t2\n+)\n+SELECT * FROM t\n -- !query 8 schema\n-struct<>\n+struct<1:int>\n -- !query 8 output\n-\n+1\n \n \n -- !query 9\n-DROP VIEW IF EXISTS t2\n+SELECT max(c) FROM (\n+  WITH t(c) AS (SELECT 1)\n+  SELECT * FROM t\n+)\n -- !query 9 schema\n-struct<>\n+struct<max(c):int>\n -- !query 9 output\n+1\n+\n+\n+-- !query 10\n+SELECT (\n+  WITH t AS (SELECT 1)\n+  SELECT * FROM t\n+)\n+-- !query 10 schema\n+struct<scalarsubquery():int>\n+-- !query 10 output\n+1\n+\n+\n+-- !query 11\n+WITH\n+  t AS (SELECT 1),\n+  t2 AS (\n+    WITH t AS (SELECT 2)\n+    SELECT * FROM t\n+  )\n+SELECT * FROM t2\n+-- !query 11 schema\n+struct<1:int>\n+-- !query 11 output\n+1\n+\n+\n+-- !query 12\n+WITH\n+  t(c) AS (SELECT 1),\n+  t2 AS (\n+    SELECT (\n+      SELECT max(c) FROM (\n+        WITH t(c) AS (SELECT 2)\n+        SELECT * FROM t\n+      )\n+    )\n+  )\n+SELECT * FROM t2\n+-- !query 12 schema\n+struct<scalarsubquery():int>\n+-- !query 12 output\n+1\n+\n+\n+-- !query 13\n+WITH\n+  t AS (SELECT 1),\n+  t2 AS (\n+    WITH t AS (SELECT 2),\n+    t2 AS (\n+      WITH t AS (SELECT 3)\n+      SELECT * FROM t\n+    )\n+    SELECT * FROM t2\n+  )\n+SELECT * FROM t2\n+-- !query 13 schema\n+struct<2:int>\n+-- !query 13 output\n+2\n+\n+\n+-- !query 14\n+WITH t(c) AS (SELECT 1)\n+SELECT max(c) FROM (\n+  WITH t(c) AS (SELECT 2)\n+  SELECT * FROM t\n+)\n+-- !query 14 schema\n+struct<max(c):int>\n+-- !query 14 output\n+2\n+\n+\n+-- !query 15\n+WITH t(c) AS (SELECT 1)\n+SELECT sum(c) FROM (\n+  SELECT max(c) AS c FROM (\n+    WITH t(c) AS (SELECT 2)\n+    SELECT * FROM t\n+  )\n+)\n+-- !query 15 schema\n+struct<sum(c):bigint>\n+-- !query 15 output\n+2\n+\n+\n+-- !query 16\n+WITH t(c) AS (SELECT 1)\n+SELECT sum(c) FROM (\n+  WITH t(c) AS (SELECT 2)\n+  SELECT max(c) AS c FROM (\n+    WITH t(c) AS (SELECT 3)\n+    SELECT * FROM t\n+  )\n+)\n+-- !query 16 schema\n+struct<sum(c):bigint>\n+-- !query 16 output\n+3\n+\n+\n+-- !query 17\n+WITH t AS (SELECT 1)\n+SELECT (\n+  WITH t AS (SELECT 2)\n+  SELECT * FROM t\n+)\n+-- !query 17 schema\n+struct<scalarsubquery():int>\n+-- !query 17 output\n+1\n+\n+\n+-- !query 18\n+WITH t AS (SELECT 1)\n+SELECT (\n+  SELECT (\n+    WITH t AS (SELECT 2)\n+    SELECT * FROM t\n+  )\n+)\n+-- !query 18 schema\n+struct<scalarsubquery():int>\n+-- !query 18 output\n+1\n+\n+\n+-- !query 19\n+WITH t AS (SELECT 1)\n+SELECT (\n+  WITH t AS (SELECT 2)\n+  SELECT (\n+    WITH t AS (SELECT 3)\n+    SELECT * FROM t\n+  )\n+)\n+-- !query 19 schema\n+struct<scalarsubquery():int>\n+-- !query 19 output\n+1\n+\n+\n+-- !query 20\n+WITH r AS (SELECT * FROM r)\n+SELECT * FROM r\n+-- !query 20 schema\n+struct<>\n+-- !query 20 output\n+org.apache.spark.sql.AnalysisException"
  }, {
    "author": {
      "login": "peter-toth"
    },
    "body": "I have a WIP PR open https://github.com/apache/spark/pull/23531 that would add support for recursive queries (and subqueries and subquery expressions too). But these queries lack the `RECURSIVE` keyword and using an outer recursive reference in a subquery is not allowed (next query) according to the SQL standard so these will never become valid.\r\n\r\nBut, this PR should be accepted first then could come https://github.com/apache/spark/pull/25029 and https://github.com/apache/spark/pull/23531\r\n\r\nActually I think I'm removing the test `WITH r AS (SELECT * FROM r) SELECT * FROM r;` because there is already a similar one in `cte.sql` and moving the `WITH r AS (SELECT (SELECT * FROM r)) SELECT * FROM r;` next to the existing one.\r\n \r\n",
    "commit": "9ec6eaf3f1b992ae3c0101464483f3a7c9c8f70a",
    "createdAt": "2019-07-03T09:58:52Z",
    "diffHunk": "@@ -98,16 +98,202 @@ struct<x:int>\n \n \n -- !query 8\n-DROP VIEW IF EXISTS t\n+WITH t as (\n+  WITH t2 AS (SELECT 1)\n+  SELECT * FROM t2\n+)\n+SELECT * FROM t\n -- !query 8 schema\n-struct<>\n+struct<1:int>\n -- !query 8 output\n-\n+1\n \n \n -- !query 9\n-DROP VIEW IF EXISTS t2\n+SELECT max(c) FROM (\n+  WITH t(c) AS (SELECT 1)\n+  SELECT * FROM t\n+)\n -- !query 9 schema\n-struct<>\n+struct<max(c):int>\n -- !query 9 output\n+1\n+\n+\n+-- !query 10\n+SELECT (\n+  WITH t AS (SELECT 1)\n+  SELECT * FROM t\n+)\n+-- !query 10 schema\n+struct<scalarsubquery():int>\n+-- !query 10 output\n+1\n+\n+\n+-- !query 11\n+WITH\n+  t AS (SELECT 1),\n+  t2 AS (\n+    WITH t AS (SELECT 2)\n+    SELECT * FROM t\n+  )\n+SELECT * FROM t2\n+-- !query 11 schema\n+struct<1:int>\n+-- !query 11 output\n+1\n+\n+\n+-- !query 12\n+WITH\n+  t(c) AS (SELECT 1),\n+  t2 AS (\n+    SELECT (\n+      SELECT max(c) FROM (\n+        WITH t(c) AS (SELECT 2)\n+        SELECT * FROM t\n+      )\n+    )\n+  )\n+SELECT * FROM t2\n+-- !query 12 schema\n+struct<scalarsubquery():int>\n+-- !query 12 output\n+1\n+\n+\n+-- !query 13\n+WITH\n+  t AS (SELECT 1),\n+  t2 AS (\n+    WITH t AS (SELECT 2),\n+    t2 AS (\n+      WITH t AS (SELECT 3)\n+      SELECT * FROM t\n+    )\n+    SELECT * FROM t2\n+  )\n+SELECT * FROM t2\n+-- !query 13 schema\n+struct<2:int>\n+-- !query 13 output\n+2\n+\n+\n+-- !query 14\n+WITH t(c) AS (SELECT 1)\n+SELECT max(c) FROM (\n+  WITH t(c) AS (SELECT 2)\n+  SELECT * FROM t\n+)\n+-- !query 14 schema\n+struct<max(c):int>\n+-- !query 14 output\n+2\n+\n+\n+-- !query 15\n+WITH t(c) AS (SELECT 1)\n+SELECT sum(c) FROM (\n+  SELECT max(c) AS c FROM (\n+    WITH t(c) AS (SELECT 2)\n+    SELECT * FROM t\n+  )\n+)\n+-- !query 15 schema\n+struct<sum(c):bigint>\n+-- !query 15 output\n+2\n+\n+\n+-- !query 16\n+WITH t(c) AS (SELECT 1)\n+SELECT sum(c) FROM (\n+  WITH t(c) AS (SELECT 2)\n+  SELECT max(c) AS c FROM (\n+    WITH t(c) AS (SELECT 3)\n+    SELECT * FROM t\n+  )\n+)\n+-- !query 16 schema\n+struct<sum(c):bigint>\n+-- !query 16 output\n+3\n+\n+\n+-- !query 17\n+WITH t AS (SELECT 1)\n+SELECT (\n+  WITH t AS (SELECT 2)\n+  SELECT * FROM t\n+)\n+-- !query 17 schema\n+struct<scalarsubquery():int>\n+-- !query 17 output\n+1\n+\n+\n+-- !query 18\n+WITH t AS (SELECT 1)\n+SELECT (\n+  SELECT (\n+    WITH t AS (SELECT 2)\n+    SELECT * FROM t\n+  )\n+)\n+-- !query 18 schema\n+struct<scalarsubquery():int>\n+-- !query 18 output\n+1\n+\n+\n+-- !query 19\n+WITH t AS (SELECT 1)\n+SELECT (\n+  WITH t AS (SELECT 2)\n+  SELECT (\n+    WITH t AS (SELECT 3)\n+    SELECT * FROM t\n+  )\n+)\n+-- !query 19 schema\n+struct<scalarsubquery():int>\n+-- !query 19 output\n+1\n+\n+\n+-- !query 20\n+WITH r AS (SELECT * FROM r)\n+SELECT * FROM r\n+-- !query 20 schema\n+struct<>\n+-- !query 20 output\n+org.apache.spark.sql.AnalysisException"
  }],
  "prId": 24831
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "This result is different from the pg one;\r\n```\r\n\r\npostgres=# WITH\r\npostgres-#   t AS (SELECT 1),\r\npostgres-#   t2 AS (\r\npostgres(#     WITH t AS (SELECT 2)\r\npostgres(#     SELECT * FROM t\r\npostgres(#   )\r\npostgres-# SELECT * FROM t2;\r\n ?column? \r\n----------\r\n        2\r\n(1 row)\r\n```\r\nThis will be address in the following  #25029?",
    "commit": "9ec6eaf3f1b992ae3c0101464483f3a7c9c8f70a",
    "createdAt": "2019-07-04T00:22:23Z",
    "diffHunk": "@@ -88,26 +98,192 @@ struct<c1:int,c2:int>\n 1\t1\n \n \n--- !query 7\n+-- !query 8\n WITH t(x) AS (SELECT 1)\n SELECT * FROM t WHERE x = 1\n--- !query 7 schema\n+-- !query 8 schema\n struct<x:int>\n--- !query 7 output\n+-- !query 8 output\n 1\n \n \n--- !query 8\n+-- !query 9\n+WITH t as (\n+  WITH t2 AS (SELECT 1)\n+  SELECT * FROM t2\n+)\n+SELECT * FROM t\n+-- !query 9 schema\n+struct<1:int>\n+-- !query 9 output\n+1\n+\n+\n+-- !query 10\n+SELECT max(c) FROM (\n+  WITH t(c) AS (SELECT 1)\n+  SELECT * FROM t\n+)\n+-- !query 10 schema\n+struct<max(c):int>\n+-- !query 10 output\n+1\n+\n+\n+-- !query 11\n+SELECT (\n+  WITH t AS (SELECT 1)\n+  SELECT * FROM t\n+)\n+-- !query 11 schema\n+struct<scalarsubquery():int>\n+-- !query 11 output\n+1\n+\n+\n+-- !query 12\n+WITH\n+  t AS (SELECT 1),\n+  t2 AS (\n+    WITH t AS (SELECT 2)\n+    SELECT * FROM t\n+  )\n+SELECT * FROM t2\n+-- !query 12 schema\n+struct<1:int>\n+-- !query 12 output\n+1\n+",
    "line": 138
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "I also agree that this is inevitable in this PR. (cc @gatorsmile ).",
    "commit": "9ec6eaf3f1b992ae3c0101464483f3a7c9c8f70a",
    "createdAt": "2019-07-04T05:21:20Z",
    "diffHunk": "@@ -88,26 +98,192 @@ struct<c1:int,c2:int>\n 1\t1\n \n \n--- !query 7\n+-- !query 8\n WITH t(x) AS (SELECT 1)\n SELECT * FROM t WHERE x = 1\n--- !query 7 schema\n+-- !query 8 schema\n struct<x:int>\n--- !query 7 output\n+-- !query 8 output\n 1\n \n \n--- !query 8\n+-- !query 9\n+WITH t as (\n+  WITH t2 AS (SELECT 1)\n+  SELECT * FROM t2\n+)\n+SELECT * FROM t\n+-- !query 9 schema\n+struct<1:int>\n+-- !query 9 output\n+1\n+\n+\n+-- !query 10\n+SELECT max(c) FROM (\n+  WITH t(c) AS (SELECT 1)\n+  SELECT * FROM t\n+)\n+-- !query 10 schema\n+struct<max(c):int>\n+-- !query 10 output\n+1\n+\n+\n+-- !query 11\n+SELECT (\n+  WITH t AS (SELECT 1)\n+  SELECT * FROM t\n+)\n+-- !query 11 schema\n+struct<scalarsubquery():int>\n+-- !query 11 output\n+1\n+\n+\n+-- !query 12\n+WITH\n+  t AS (SELECT 1),\n+  t2 AS (\n+    WITH t AS (SELECT 2)\n+    SELECT * FROM t\n+  )\n+SELECT * FROM t2\n+-- !query 12 schema\n+struct<1:int>\n+-- !query 12 output\n+1\n+",
    "line": 138
  }, {
    "author": {
      "login": "peter-toth"
    },
    "body": "Yes, after https://github.com/apache/spark/pull/25029 it will return `2` (https://github.com/apache/spark/pull/25029/files#diff-fc515a5db268d29b08b80f5eb8202026R145)",
    "commit": "9ec6eaf3f1b992ae3c0101464483f3a7c9c8f70a",
    "createdAt": "2019-07-04T05:55:53Z",
    "diffHunk": "@@ -88,26 +98,192 @@ struct<c1:int,c2:int>\n 1\t1\n \n \n--- !query 7\n+-- !query 8\n WITH t(x) AS (SELECT 1)\n SELECT * FROM t WHERE x = 1\n--- !query 7 schema\n+-- !query 8 schema\n struct<x:int>\n--- !query 7 output\n+-- !query 8 output\n 1\n \n \n--- !query 8\n+-- !query 9\n+WITH t as (\n+  WITH t2 AS (SELECT 1)\n+  SELECT * FROM t2\n+)\n+SELECT * FROM t\n+-- !query 9 schema\n+struct<1:int>\n+-- !query 9 output\n+1\n+\n+\n+-- !query 10\n+SELECT max(c) FROM (\n+  WITH t(c) AS (SELECT 1)\n+  SELECT * FROM t\n+)\n+-- !query 10 schema\n+struct<max(c):int>\n+-- !query 10 output\n+1\n+\n+\n+-- !query 11\n+SELECT (\n+  WITH t AS (SELECT 1)\n+  SELECT * FROM t\n+)\n+-- !query 11 schema\n+struct<scalarsubquery():int>\n+-- !query 11 output\n+1\n+\n+\n+-- !query 12\n+WITH\n+  t AS (SELECT 1),\n+  t2 AS (\n+    WITH t AS (SELECT 2)\n+    SELECT * FROM t\n+  )\n+SELECT * FROM t2\n+-- !query 12 schema\n+struct<1:int>\n+-- !query 12 output\n+1\n+",
    "line": 138
  }],
  "prId": 24831
}]