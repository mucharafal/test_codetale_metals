[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Oh. It seems that we should not do this. This has the physical location with your id. This cannot succeed in the Jenkins or someone else's computer.\r\n```\r\nInMemoryFileIndex[file:/home/dguedes/Workspace\r\n```\r\n\r\nPlease comment this `EXPLAIN` statement too. And, add simple comment about this. For this, I believe we don't need a new JIRA.",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-07-24T22:29:11Z",
    "diffHunk": "@@ -0,0 +1,2381 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 148\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+row_number() OVER (ORDER BY depname),\n+sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 34 schema\n+struct<>\n+-- !query 34 output\n+\n+\n+\n+-- !query 35\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 35 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 35 output\n+0\n+\n+\n+-- !query 36\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 36 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 36 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 37\n+select first(max(x)) over (), y\n+  from (select unique1 as x, ten+four as y from tenk1) ss\n+  group by y\n+-- !query 37 schema\n+struct<first(max(x), false) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,y:int>\n+-- !query 37 output\n+9980\t0\n+9980\t10\n+9980\t12\n+9980\t2\n+9980\t4\n+9980\t6\n+9980\t8\n+\n+\n+-- !query 38\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 38 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 38 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 39\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 39 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 39 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 40 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 42\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 42 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 43\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 43 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 43 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 44\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 44 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 44 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 49\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 49 schema\n+struct<>\n+-- !query 49 output\n+\n+\n+\n+-- !query 50\n+SELECT * FROM v_window\n+-- !query 50 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 50 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 51\n+SELECT * FROM v_window\n+-- !query 51 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 51 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 54 schema\n+struct<>\n+-- !query 54 output\n+\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+DROP VIEW v_window\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 70\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 70 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 70 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 71\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 71 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 71 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 72\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 72 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 72 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 73\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 73 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 73 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 74\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 74 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 74 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 75\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 75 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 75 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 76\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 76 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 76 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 77\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 77 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 77 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 78\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 78 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 78 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 79\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 79 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 79 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 80\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 80 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 80 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 81\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 81 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 81 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 82\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 82 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 82 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 83\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 83 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 83 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 84\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 84 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 84 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 85\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 85 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 85 output\n+\n+\n+\n+-- !query 86\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 88 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 88 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 89\n+explain\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 89 schema\n+struct<plan:string>\n+-- !query 89 output\n+== Physical Plan ==\n+*Project [f1#x, sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING)#xL]\n++- Window [sum(cast(f1#x as bigint)) windowspecdefinition(f1#x, f2#x ASC NULLS FIRST, specifiedwindowframe(RangeFrame, -1, 1)) AS sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING)#xL], [f1#x], [f2#x ASC NULLS FIRST]\n+   +- *Sort [f1#x ASC NULLS FIRST, f2#x ASC NULLS FIRST], false, 0\n+      +- Exchange hashpartitioning(f1#x, 200), true\n+         +- *Project [f1#x, f2#x]\n+            +- *Filter ((isnotnull(f1#x) AND isnotnull(f2#x)) AND (f1#x = f2#x))\n+               +- *ColumnarToRow\n+                  +- FileScan parquet default.t1[f1#x,f2#x] Batched: true, DataFilters: [isnotnull(f1#x), isnotnull(f2#x), (f1#x = f2#x)], Format: Parquet, Location: InMemoryFileIndex[file:/home/dguedes/Workspace/spark/sql/core/spark-warehouse/org.apache.spark.sq..., PartitionFilters: [], PushedFilters: [IsNotNull(f1), IsNotNull(f2)], ReadSchema: struct<f1:int,f2:int>"
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "null in PostgreSQL? https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/expected/window.out#L3669",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-07-31T00:43:19Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1.10'),(2,'2.20'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 124 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 124 output\n+1\t3.3000000000000003\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 125\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 125 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 125 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 126\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.1),(2,2.2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 126 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(12,1)>\n+-- !query 126 output\n+1\t3.3\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 127\n+SELECT SUM(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.01),(2,2),(3,3)) v(i,n)\n+-- !query 127 schema\n+struct<sum(n) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(22,2)>\n+-- !query 127 output\n+3\n+5\n+6.01\n+\n+\n+-- !query 128\n+SELECT i,COUNT(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 128 schema\n+struct<i:int,count(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 128 output\n+1\t2\n+2\t1\n+3\t0\n+4\t0\n+\n+\n+-- !query 129\n+SELECT i,COUNT(*) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 129 schema\n+struct<i:int,count(1) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 129 output\n+1\t4\n+2\t3\n+3\t2\n+4\t1\n+\n+\n+-- !query 130\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 130 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 130 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 131\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 131 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 131 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 132\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 132 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 132 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 133\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 133 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 133 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 134\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 134 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 134 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 135\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 135 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 135 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 136\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 136 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 136 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 137\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 137 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 137 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 138\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 138 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 138 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 139\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 139 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 139 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 140\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 140 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 140 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 141\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 141 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 141 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 142\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 142 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 142 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 143\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 143 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 143 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 144\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 144 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 144 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 145\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 145 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 145 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 146\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 146 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 146 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN",
    "line": 2061
  }, {
    "author": {
      "login": "DylanGuedes"
    },
    "body": "Hmm you are correct, in PgSQL it shows a blank space instead of NaN. So, NaN in Spark is not the same thing as PgSQL blank space? Do you think that I should JIRA that?",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-07-31T13:27:59Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1.10'),(2,'2.20'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 124 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 124 output\n+1\t3.3000000000000003\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 125\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 125 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 125 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 126\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.1),(2,2.2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 126 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(12,1)>\n+-- !query 126 output\n+1\t3.3\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 127\n+SELECT SUM(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.01),(2,2),(3,3)) v(i,n)\n+-- !query 127 schema\n+struct<sum(n) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(22,2)>\n+-- !query 127 output\n+3\n+5\n+6.01\n+\n+\n+-- !query 128\n+SELECT i,COUNT(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 128 schema\n+struct<i:int,count(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 128 output\n+1\t2\n+2\t1\n+3\t0\n+4\t0\n+\n+\n+-- !query 129\n+SELECT i,COUNT(*) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 129 schema\n+struct<i:int,count(1) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 129 output\n+1\t4\n+2\t3\n+3\t2\n+4\t1\n+\n+\n+-- !query 130\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 130 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 130 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 131\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 131 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 131 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 132\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 132 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 132 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 133\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 133 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 133 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 134\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 134 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 134 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 135\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 135 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 135 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 136\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 136 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 136 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 137\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 137 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 137 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 138\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 138 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 138 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 139\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 139 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 139 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 140\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 140 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 140 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 141\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 141 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 141 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 142\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 142 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 142 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 143\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 143 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 143 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 144\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 144 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 144 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 145\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 145 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 145 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 146\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 146 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 146 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN",
    "line": 2061
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "Can you first investigate why they are different? PostgreSQL prints NaN as NaN;\r\n```\r\npostgres=# select 'NaN'::float8;\r\n float8 \r\n--------\r\n    NaN\r\n(1 row)\r\n```",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-01T02:00:40Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1.10'),(2,'2.20'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 124 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 124 output\n+1\t3.3000000000000003\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 125\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 125 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 125 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 126\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.1),(2,2.2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 126 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(12,1)>\n+-- !query 126 output\n+1\t3.3\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 127\n+SELECT SUM(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.01),(2,2),(3,3)) v(i,n)\n+-- !query 127 schema\n+struct<sum(n) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(22,2)>\n+-- !query 127 output\n+3\n+5\n+6.01\n+\n+\n+-- !query 128\n+SELECT i,COUNT(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 128 schema\n+struct<i:int,count(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 128 output\n+1\t2\n+2\t1\n+3\t0\n+4\t0\n+\n+\n+-- !query 129\n+SELECT i,COUNT(*) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 129 schema\n+struct<i:int,count(1) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 129 output\n+1\t4\n+2\t3\n+3\t2\n+4\t1\n+\n+\n+-- !query 130\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 130 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 130 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 131\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 131 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 131 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 132\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 132 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 132 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 133\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 133 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 133 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 134\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 134 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 134 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 135\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 135 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 135 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 136\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 136 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 136 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 137\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 137 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 137 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 138\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 138 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 138 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 139\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 139 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 139 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 140\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 140 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 140 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 141\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 141 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 141 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 142\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 142 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 142 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 143\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 143 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 143 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 144\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 144 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 144 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 145\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 145 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 145 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 146\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 146 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 146 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN",
    "line": 2061
  }, {
    "author": {
      "login": "DylanGuedes"
    },
    "body": "Ok, so after further investigation:\r\n- NULL in Spark can be seen as blank space in PgSQL\r\n- 'NaN' in Spark can be seen as 'NaN' in PgSQL\r\n- I found that in [this code](https://github.com/apache/spark/blob/26d03b62e20d053943d03b5c5573dd349e49654c/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/expressions/aggregate/CentralMomentAgg.scala#L174) Spark actually tries to use 'NaN' instead of NULL for a specific reason. Although it isn't compatible with PgSQL behaviour, looks like a better behaviour. Do you think that I should JIRA that?",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-01T13:55:19Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1.10'),(2,'2.20'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 124 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 124 output\n+1\t3.3000000000000003\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 125\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 125 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 125 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 126\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.1),(2,2.2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 126 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(12,1)>\n+-- !query 126 output\n+1\t3.3\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 127\n+SELECT SUM(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.01),(2,2),(3,3)) v(i,n)\n+-- !query 127 schema\n+struct<sum(n) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(22,2)>\n+-- !query 127 output\n+3\n+5\n+6.01\n+\n+\n+-- !query 128\n+SELECT i,COUNT(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 128 schema\n+struct<i:int,count(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 128 output\n+1\t2\n+2\t1\n+3\t0\n+4\t0\n+\n+\n+-- !query 129\n+SELECT i,COUNT(*) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 129 schema\n+struct<i:int,count(1) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 129 output\n+1\t4\n+2\t3\n+3\t2\n+4\t1\n+\n+\n+-- !query 130\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 130 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 130 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 131\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 131 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 131 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 132\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 132 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 132 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 133\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 133 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 133 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 134\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 134 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 134 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 135\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 135 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 135 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 136\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 136 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 136 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 137\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 137 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 137 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 138\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 138 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 138 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 139\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 139 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 139 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 140\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 140 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 140 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 141\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 141 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 141 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 142\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 142 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 142 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 143\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 143 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 143 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 144\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 144 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 144 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 145\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 145 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 145 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 146\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 146 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 146 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN",
    "line": 2061
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "oh, good catch! Thx!\r\n\r\n@srowen @dongjoon-hyun Do you know something about this difference?\r\n```\r\npostgres=# \\pset null 'NULL'\r\nNull display is \"NULL\".\r\n\r\npostgres=# select stddev_samp(d) from (values (1.0)) t(d);\r\n stddev_samp \r\n-------------\r\n        NULL\r\n\r\nscala> sql(\"\"\"select stddev_samp(d) from (values (1.0)) t(d)\"\"\").show\r\n+------------------------------+                                                \r\n|stddev_samp(CAST(d AS DOUBLE))|\r\n+------------------------------+\r\n|                           NaN|\r\n+------------------------------+\r\n```\r\n",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-02T00:02:37Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1.10'),(2,'2.20'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 124 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 124 output\n+1\t3.3000000000000003\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 125\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 125 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 125 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 126\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.1),(2,2.2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 126 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(12,1)>\n+-- !query 126 output\n+1\t3.3\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 127\n+SELECT SUM(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.01),(2,2),(3,3)) v(i,n)\n+-- !query 127 schema\n+struct<sum(n) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(22,2)>\n+-- !query 127 output\n+3\n+5\n+6.01\n+\n+\n+-- !query 128\n+SELECT i,COUNT(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 128 schema\n+struct<i:int,count(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 128 output\n+1\t2\n+2\t1\n+3\t0\n+4\t0\n+\n+\n+-- !query 129\n+SELECT i,COUNT(*) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 129 schema\n+struct<i:int,count(1) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 129 output\n+1\t4\n+2\t3\n+3\t2\n+4\t1\n+\n+\n+-- !query 130\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 130 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 130 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 131\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 131 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 131 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 132\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 132 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 132 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 133\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 133 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 133 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 134\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 134 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 134 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 135\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 135 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 135 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 136\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 136 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 136 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 137\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 137 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 137 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 138\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 138 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 138 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 139\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 139 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 139 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 140\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 140 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 140 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 141\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 141 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 141 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 142\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 142 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 142 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 143\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 143 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 143 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 144\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 144 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 144 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 145\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 145 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 145 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 146\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 146 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 146 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN",
    "line": 2061
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "The result is certainly undefined. If you calculated it in a language you'd get NaN because you would divide by 0. I'm not familiar with how PostgreSQL or databases in general handle this. But NaN seems more correct than null, although they are both an 'invalid' double value, so, both are reasonable.",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-02T00:16:35Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1.10'),(2,'2.20'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 124 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 124 output\n+1\t3.3000000000000003\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 125\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 125 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 125 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 126\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.1),(2,2.2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 126 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(12,1)>\n+-- !query 126 output\n+1\t3.3\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 127\n+SELECT SUM(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.01),(2,2),(3,3)) v(i,n)\n+-- !query 127 schema\n+struct<sum(n) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(22,2)>\n+-- !query 127 output\n+3\n+5\n+6.01\n+\n+\n+-- !query 128\n+SELECT i,COUNT(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 128 schema\n+struct<i:int,count(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 128 output\n+1\t2\n+2\t1\n+3\t0\n+4\t0\n+\n+\n+-- !query 129\n+SELECT i,COUNT(*) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 129 schema\n+struct<i:int,count(1) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 129 output\n+1\t4\n+2\t3\n+3\t2\n+4\t1\n+\n+\n+-- !query 130\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 130 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 130 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 131\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 131 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 131 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 132\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 132 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 132 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 133\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 133 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 133 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 134\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 134 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 134 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 135\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 135 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 135 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 136\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 136 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 136 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 137\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 137 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 137 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 138\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 138 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 138 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 139\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 139 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 139 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 140\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 140 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 140 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 141\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 141 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 141 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 142\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 142 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 142 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 143\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 143 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 143 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 144\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 144 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 144 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 145\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 145 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 145 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 146\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 146 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 146 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN",
    "line": 2061
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "thx for the answer!\r\n@DylanGuedes ok, so can you describe why they are different in the comment there? And, I think we need not to file jira.",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-02T00:20:43Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1.10'),(2,'2.20'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 124 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 124 output\n+1\t3.3000000000000003\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 125\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 125 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 125 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 126\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.1),(2,2.2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 126 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(12,1)>\n+-- !query 126 output\n+1\t3.3\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 127\n+SELECT SUM(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.01),(2,2),(3,3)) v(i,n)\n+-- !query 127 schema\n+struct<sum(n) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(22,2)>\n+-- !query 127 output\n+3\n+5\n+6.01\n+\n+\n+-- !query 128\n+SELECT i,COUNT(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 128 schema\n+struct<i:int,count(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 128 output\n+1\t2\n+2\t1\n+3\t0\n+4\t0\n+\n+\n+-- !query 129\n+SELECT i,COUNT(*) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 129 schema\n+struct<i:int,count(1) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 129 output\n+1\t4\n+2\t3\n+3\t2\n+4\t1\n+\n+\n+-- !query 130\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 130 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 130 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 131\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 131 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 131 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 132\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 132 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 132 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 133\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 133 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 133 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 134\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 134 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 134 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 135\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 135 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 135 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 136\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 136 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 136 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 137\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 137 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 137 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 138\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 138 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 138 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 139\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 139 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 139 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 140\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 140 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 140 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 141\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 141 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 141 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 142\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 142 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 142 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 143\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 143 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 143 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 144\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 144 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 144 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 145\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 145 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 145 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 146\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 146 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 146 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN",
    "line": 2061
  }, {
    "author": {
      "login": "DylanGuedes"
    },
    "body": "Done. @srowen thank you for the clarification!",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-02T18:07:31Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1.10'),(2,'2.20'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 124 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 124 output\n+1\t3.3000000000000003\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 125\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 125 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 125 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 126\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.1),(2,2.2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 126 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(12,1)>\n+-- !query 126 output\n+1\t3.3\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 127\n+SELECT SUM(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.01),(2,2),(3,3)) v(i,n)\n+-- !query 127 schema\n+struct<sum(n) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(22,2)>\n+-- !query 127 output\n+3\n+5\n+6.01\n+\n+\n+-- !query 128\n+SELECT i,COUNT(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 128 schema\n+struct<i:int,count(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 128 output\n+1\t2\n+2\t1\n+3\t0\n+4\t0\n+\n+\n+-- !query 129\n+SELECT i,COUNT(*) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 129 schema\n+struct<i:int,count(1) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 129 output\n+1\t4\n+2\t3\n+3\t2\n+4\t1\n+\n+\n+-- !query 130\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 130 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 130 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 131\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 131 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 131 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 132\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 132 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 132 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 133\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 133 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 133 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 134\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 134 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 134 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 135\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 135 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 135 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 136\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 136 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 136 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 137\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 137 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 137 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 138\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 138 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 138 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 139\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 139 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 139 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 140\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 140 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 140 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 141\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 141 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 141 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 142\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 142 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 142 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 143\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 143 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 143 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 144\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 144 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 144 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 145\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 145 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 145 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 146\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 146 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 146 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN",
    "line": 2061
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "interval test? https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/expected/window.out#L3431",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-07-31T00:49:29Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1.10'),(2,'2.20'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 124 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 124 output\n+1\t3.3000000000000003\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 125\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)"
  }, {
    "author": {
      "login": "DylanGuedes"
    },
    "body": "ditto: Do you think that I should cast it in Spark using another method or that I should JIRA the fact that Spark didn't recognize that it is actually a column of type interval?",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-07-31T13:31:28Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1.10'),(2,'2.20'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 124 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 124 output\n+1\t3.3000000000000003\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 125\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "Cast to interval? https://issues.apache.org/jira/browse/SPARK-28435",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-01T01:56:30Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1.10'),(2,'2.20'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 124 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 124 output\n+1\t3.3000000000000003\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 125\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)"
  }, {
    "author": {
      "login": "DylanGuedes"
    },
    "body": "Hmm I tried and although it seems correct, looks like Spark handles interval as non numeric. Should I JIRA that?",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-01T14:14:35Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1.10'),(2,'2.20'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 124 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 124 output\n+1\t3.3000000000000003\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 125\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "Let's comment out this query for now, and then put the JIRA number here in the comment.",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-01T23:48:18Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1.10'),(2,'2.20'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 124 schema\n+struct<i:int,sum(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 124 output\n+1\t3.3000000000000003\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 125\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)"
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "money test? https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/expected/window.out#L3421",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-07-31T00:49:59Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)"
  }, {
    "author": {
      "login": "DylanGuedes"
    },
    "body": "Hmm I think that casting with `::` is actually present in pgsql for legacy reasons (i.e: they will probably remove it at some point). Do you think that I should cast it in Spark using another method or that I should JIRA the fact that Spark didn't recognize that it is actually a column of type `money`?",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-07-31T13:30:37Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "IMO its ok just to comment out the original query and then describe why its commented out.",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-01T01:57:45Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)"
  }, {
    "author": {
      "login": "DylanGuedes"
    },
    "body": "Great. I added the following comment: `The cast syntax is present in PgSQL for legacy reasons and Spark will not recognize a money field`. Do you think that it is ok? It makes sense to JIRA the missing money type?",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-01T14:03:54Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "I think we don't need to.",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-01T23:46:32Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 120 schema\n+struct<i:int,avg(CAST(v AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+1\tNULL\n+2\tNULL\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 121\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 121 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 121 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 122\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 122 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 122 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 123\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 123 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 123 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 124\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)"
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "interval test? https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/expected/window.out#L3381",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-07-31T00:51:00Z",
    "diffHunk": "@@ -0,0 +1,2554 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 161\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+SELECT * FROM v_window\n+-- !query 55 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 55 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 56\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 56 schema\n+struct<>\n+-- !query 56 output\n+\n+\n+\n+-- !query 57\n+SELECT * FROM v_window\n+-- !query 57 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 57 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 58\n+DROP VIEW v_window\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+\n+\n+\n+-- !query 59\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 59 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 59 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 60\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 60 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 60 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 61\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 61 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 61 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 63 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 64\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 64 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 65\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 65 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 69\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 69 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 69 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 70\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 70 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 70 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 71\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 71 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 71 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 72\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 72 schema\n+struct<>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 73 schema\n+struct<>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 76 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 77\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 77 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 78\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 80\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 80 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 81\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 81 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 82\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 83 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 84\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 84 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 84 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 85\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 85 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 85 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 86\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 86 schema\n+struct<>\n+-- !query 86 output\n+\n+\n+\n+-- !query 87\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 87 schema\n+struct<>\n+-- !query 87 output\n+\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 88 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 93 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 94\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 94 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 94 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 95\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 95 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 95 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 96\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 96 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 96 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 100 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 100 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 101\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 101 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 101 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 102\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 102 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 102 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 103\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 103 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 103 output\n+\n+\n+\n+-- !query 104\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+\n+\n+\n+-- !query 105\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 107 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 109 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 110\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 110 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 110 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 111\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 111 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 111 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 112\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 112 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 112 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 113\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 113 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 113 output\n+1\n+\n+\n+-- !query 114\n+select * from\n+(select row_number() over (order by salary) rn from empsalary) ss\n+where rn < 10\n+-- !query 114 schema\n+struct<rn:int>\n+-- !query 114 output\n+1\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 115\n+DROP TABLE empsalary\n+-- !query 115 schema\n+struct<>\n+-- !query 115 output\n+\n+\n+\n+-- !query 116\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 116 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 117\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 117 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 118\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 118 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 119\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 119 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 119 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 120\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,'1 sec'),(2,'2 sec'),(3,NULL),(4,NULL)) t(i,v)"
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "wait, the original queries throw exceptions in postgresql? https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/expected/window.out#L2944-L2988",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T01:36:46Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+\n+\n+\n+-- !query 71\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 71 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 71 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 75 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 79 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 79 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 82\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 83\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 83 schema\n+struct<>\n+-- !query 83 output\n+\n+\n+\n+-- !query 84\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 84 schema\n+struct<>\n+-- !query 84 output\n+\n+\n+\n+-- !query 85\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 85 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 85 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 86\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 86 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 86 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 87\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 87 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 87 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 88 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 93 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 94\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 94 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 94 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 95\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 95 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 95 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 96\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 96 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 96 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 100 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 100 output\n+\n+\n+\n+-- !query 101\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 101 schema\n+struct<>\n+-- !query 101 output\n+\n+\n+\n+-- !query 102\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 102 schema\n+struct<>\n+-- !query 102 output\n+\n+\n+\n+-- !query 103\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 103 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 103 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 104\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 104 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 104 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 105\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 105 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 105 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 107 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 109 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 110\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 110 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 110 output\n+1\n+\n+\n+-- !query 111\n+SELECT * FROM empsalary WHERE row_number() OVER (ORDER BY salary) < 10\n+-- !query 111 schema\n+struct<>\n+-- !query 111 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 112\n+SELECT * FROM rank() OVER (ORDER BY random())\n+-- !query 112 schema\n+struct<>\n+-- !query 112 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+no viable alternative at input 'ORDER'(line 1, pos 27)\n+\n+== SQL ==\n+SELECT * FROM rank() OVER (ORDER BY random())\n+---------------------------^^^\n+\n+\n+-- !query 113\n+SELECT * FROM empsalary WHERE (rank() OVER (ORDER BY random())) > 10\n+-- !query 113 schema\n+struct<>\n+-- !query 113 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 114\n+SELECT * FROM empsalary WHERE rank() OVER (ORDER BY random())\n+-- !query 114 schema\n+struct<>\n+-- !query 114 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 115\n+SELECT count(*) FROM (select count(*) OVER w FROM tenk1 WINDOW w AS (ORDER BY unique1), w AS (ORDER BY unique1))"
  }, {
    "author": {
      "login": "DylanGuedes"
    },
    "body": "I created a JIRA for this one - Spark (wrongly?) allows redefinition of windows.",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T17:32:50Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+\n+\n+\n+-- !query 71\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 71 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 71 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 75 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 79 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 79 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 82\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 83\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 83 schema\n+struct<>\n+-- !query 83 output\n+\n+\n+\n+-- !query 84\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 84 schema\n+struct<>\n+-- !query 84 output\n+\n+\n+\n+-- !query 85\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 85 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 85 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 86\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 86 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 86 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 87\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 87 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 87 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 88 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 93 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 94\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 94 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 94 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 95\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 95 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 95 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 96\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 96 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 96 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 100 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 100 output\n+\n+\n+\n+-- !query 101\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 101 schema\n+struct<>\n+-- !query 101 output\n+\n+\n+\n+-- !query 102\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 102 schema\n+struct<>\n+-- !query 102 output\n+\n+\n+\n+-- !query 103\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 103 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 103 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 104\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 104 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 104 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 105\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 105 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 105 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 107 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 109 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 110\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 110 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 110 output\n+1\n+\n+\n+-- !query 111\n+SELECT * FROM empsalary WHERE row_number() OVER (ORDER BY salary) < 10\n+-- !query 111 schema\n+struct<>\n+-- !query 111 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 112\n+SELECT * FROM rank() OVER (ORDER BY random())\n+-- !query 112 schema\n+struct<>\n+-- !query 112 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+no viable alternative at input 'ORDER'(line 1, pos 27)\n+\n+== SQL ==\n+SELECT * FROM rank() OVER (ORDER BY random())\n+---------------------------^^^\n+\n+\n+-- !query 113\n+SELECT * FROM empsalary WHERE (rank() OVER (ORDER BY random())) > 10\n+-- !query 113 schema\n+struct<>\n+-- !query 113 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 114\n+SELECT * FROM empsalary WHERE rank() OVER (ORDER BY random())\n+-- !query 114 schema\n+struct<>\n+-- !query 114 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 115\n+SELECT count(*) FROM (select count(*) OVER w FROM tenk1 WINDOW w AS (ORDER BY unique1), w AS (ORDER BY unique1))"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "could you check the behaivour of the other systems for this query? All the others can't accept this query?\r\n\r\nAnyway, if spark has different behaviours from pg, we need to leave some comments where possible.",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T23:54:00Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+\n+\n+\n+-- !query 71\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 71 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 71 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 75 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 79 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 79 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 82\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 83\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 83 schema\n+struct<>\n+-- !query 83 output\n+\n+\n+\n+-- !query 84\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 84 schema\n+struct<>\n+-- !query 84 output\n+\n+\n+\n+-- !query 85\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 85 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 85 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 86\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 86 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 86 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 87\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 87 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 87 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 88 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 93 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 94\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 94 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 94 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 95\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 95 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 95 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 96\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 96 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 96 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 100 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 100 output\n+\n+\n+\n+-- !query 101\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 101 schema\n+struct<>\n+-- !query 101 output\n+\n+\n+\n+-- !query 102\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 102 schema\n+struct<>\n+-- !query 102 output\n+\n+\n+\n+-- !query 103\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 103 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 103 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 104\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 104 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 104 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 105\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 105 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 105 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 107 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 109 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 110\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 110 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 110 output\n+1\n+\n+\n+-- !query 111\n+SELECT * FROM empsalary WHERE row_number() OVER (ORDER BY salary) < 10\n+-- !query 111 schema\n+struct<>\n+-- !query 111 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 112\n+SELECT * FROM rank() OVER (ORDER BY random())\n+-- !query 112 schema\n+struct<>\n+-- !query 112 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+no viable alternative at input 'ORDER'(line 1, pos 27)\n+\n+== SQL ==\n+SELECT * FROM rank() OVER (ORDER BY random())\n+---------------------------^^^\n+\n+\n+-- !query 113\n+SELECT * FROM empsalary WHERE (rank() OVER (ORDER BY random())) > 10\n+-- !query 113 schema\n+struct<>\n+-- !query 113 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 114\n+SELECT * FROM empsalary WHERE rank() OVER (ORDER BY random())\n+-- !query 114 schema\n+struct<>\n+-- !query 114 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 115\n+SELECT count(*) FROM (select count(*) OVER w FROM tenk1 WINDOW w AS (ORDER BY unique1), w AS (ORDER BY unique1))"
  }, {
    "author": {
      "login": "DylanGuedes"
    },
    "body": "I already created a JIRA for it. Whatever, I checked and it also does not work in MySql, however, MySql is not very clear if the reason is related to the redefinition of the window.",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-14T18:46:29Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+\n+\n+\n+-- !query 71\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 71 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 71 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 75 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 79 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 79 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 82\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 83\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 83 schema\n+struct<>\n+-- !query 83 output\n+\n+\n+\n+-- !query 84\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 84 schema\n+struct<>\n+-- !query 84 output\n+\n+\n+\n+-- !query 85\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 85 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 85 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 86\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 86 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 86 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 87\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 87 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 87 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 88 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 93 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 94\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 94 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 94 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 95\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 95 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 95 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 96\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 96 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 96 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 100 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 100 output\n+\n+\n+\n+-- !query 101\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 101 schema\n+struct<>\n+-- !query 101 output\n+\n+\n+\n+-- !query 102\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 102 schema\n+struct<>\n+-- !query 102 output\n+\n+\n+\n+-- !query 103\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 103 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 103 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 104\n+-- error, must have order by\n+\n+\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 104 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 104 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 105\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 105 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 105 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 106\n+select f1, sum(f1) over (partition by f1,\n+f1 order by f2 range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 106 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 106 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 107\n+select f1, sum(f1) over (partition by f1 order by f2\n+range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 107 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 107 output\n+1\t1\n+2\t2\n+\n+\n+-- !query 108\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 108 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 108 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 109\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 109 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 109 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 110\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 110 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 110 output\n+1\n+\n+\n+-- !query 111\n+SELECT * FROM empsalary WHERE row_number() OVER (ORDER BY salary) < 10\n+-- !query 111 schema\n+struct<>\n+-- !query 111 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 112\n+SELECT * FROM rank() OVER (ORDER BY random())\n+-- !query 112 schema\n+struct<>\n+-- !query 112 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+no viable alternative at input 'ORDER'(line 1, pos 27)\n+\n+== SQL ==\n+SELECT * FROM rank() OVER (ORDER BY random())\n+---------------------------^^^\n+\n+\n+-- !query 113\n+SELECT * FROM empsalary WHERE (rank() OVER (ORDER BY random())) > 10\n+-- !query 113 schema\n+struct<>\n+-- !query 113 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 114\n+SELECT * FROM empsalary WHERE rank() OVER (ORDER BY random())\n+-- !query 114 schema\n+struct<>\n+-- !query 114 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 115\n+SELECT count(*) FROM (select count(*) OVER w FROM tenk1 WINDOW w AS (ORDER BY unique1), w AS (ORDER BY unique1))"
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "error in pg? https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/expected/window.out#L2843",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T01:42:08Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+\n+\n+\n+-- !query 71\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 71 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 71 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 75 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 79 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 79 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 82\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 83\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 83 schema\n+struct<>\n+-- !query 83 output\n+\n+\n+\n+-- !query 84\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 84 schema\n+struct<>\n+-- !query 84 output\n+\n+\n+\n+-- !query 85\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 85 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 85 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 86\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 86 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 86 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 87\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 87 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 87 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 88 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 93 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 94\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 94 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 94 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 95\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 95 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 95 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 96\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 96 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 96 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 100 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 100 output\n+\n+\n+\n+-- !query 101\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 101 schema\n+struct<>\n+-- !query 101 output\n+\n+\n+\n+-- !query 102\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 102 schema\n+struct<>\n+-- !query 102 output\n+\n+\n+\n+-- !query 103\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 103 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 103 output"
  }, {
    "author": {
      "login": "DylanGuedes"
    },
    "body": "lmao I fixed this query in the Spark version because I thought that I was supposed to make it work (you can check that in my PR I added the `order by`, instead of letting without it such that the error would occur). Anyway, I fixed it, thank you for the catch!",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T17:35:19Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+\n+\n+\n+-- !query 71\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 71 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 71 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 75 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 79 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 79 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 82\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 83\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 83 schema\n+struct<>\n+-- !query 83 output\n+\n+\n+\n+-- !query 84\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 84 schema\n+struct<>\n+-- !query 84 output\n+\n+\n+\n+-- !query 85\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 85 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 85 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 86\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 86 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 86 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 87\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 87 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 87 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 88 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 93 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 94\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 94 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 94 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 95\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 95 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 95 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 96\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 96 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 96 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 100\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 100 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 100 output\n+\n+\n+\n+-- !query 101\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 101 schema\n+struct<>\n+-- !query 101 output\n+\n+\n+\n+-- !query 102\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 102 schema\n+struct<>\n+-- !query 102 output\n+\n+\n+\n+-- !query 103\n+select f1, sum(f1) over (partition by f1 order by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 103 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1 ORDER BY f1 ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 103 output"
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "different output from pg? https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/expected/window.out#L2803",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T01:43:52Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+\n+\n+\n+-- !query 71\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 71 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 71 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 75 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 79 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 79 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 82\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 83\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 83 schema\n+struct<>\n+-- !query 83 output\n+\n+\n+\n+-- !query 84\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 84 schema\n+struct<>\n+-- !query 84 output\n+\n+\n+\n+-- !query 85\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 85 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 85 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 86\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 86 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 86 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 87\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 87 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 87 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 88 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 93 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 94\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 94 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 94 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 95\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 95 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 95 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 96\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 96 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 96 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t3",
    "line": 1509
  }, {
    "author": {
      "login": "DylanGuedes"
    },
    "body": "Currently, Spark does not have support for `groups` (I already created a JIRA for it). The problem here is: I thought that `groups` and `range` were the same thing, but they are not. [This link](https://blog.jooq.org/2018/07/05/postgresql-11s-support-for-sql-standard-groups-and-exclude-window-function-clauses/) has a nice explanation about the difference. I'll be reverting some other other queries that I remember changing `rows` to `groups`. Thank you!",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T18:29:58Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+\n+\n+\n+-- !query 71\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 71 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 71 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 75 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 79 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 79 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 82\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 83\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 83 schema\n+struct<>\n+-- !query 83 output\n+\n+\n+\n+-- !query 84\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 84 schema\n+struct<>\n+-- !query 84 output\n+\n+\n+\n+-- !query 85\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 85 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 85 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 86\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 86 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 86 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 87\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 87 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 87 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 88 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 93 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 94\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 94 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 94 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 95\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 95 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 95 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 96\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 96 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 96 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 97\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 97 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 97 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t92\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 98\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 98 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 98 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 99\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 49, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 99 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 99 output\n+1\t3",
    "line": 1509
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "different output from pg: https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/expected/window.out#L2700",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T01:46:42Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+\n+\n+\n+-- !query 71\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 71 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 71 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 75 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 79 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 79 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 82\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 83\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 83 schema\n+struct<>\n+-- !query 83 output\n+\n+\n+\n+-- !query 84\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 84 schema\n+struct<>\n+-- !query 84 output\n+\n+\n+\n+-- !query 85\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 85 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 85 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 86\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 86 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 86 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 87\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 87 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 87 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 88 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 93 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 94\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 94 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 94 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 95\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 95 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 95 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 96\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 96 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 96 output\n+1\t1",
    "line": 1439
  }, {
    "author": {
      "login": "DylanGuedes"
    },
    "body": "ditto: the problem is the fact that I changed `groups` to `range` because I thought that they had the same behavior, which is not the case. I already reverted it.",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T18:32:33Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+\n+\n+\n+-- !query 71\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 71 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 71 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 75 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 79 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 79 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 82\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\tNULL\tNULL\n+2\t-1\tNULL\tNULL\n+3\t0\tNULL\tNULL\n+4\t1\tNULL\tNULL\n+5\t1\tNULL\tNULL\n+6\t2\tNULL\tNULL\n+7\t100\tNULL\tNULL\n+\n+\n+-- !query 83\n+-- error, NaN disallowed\n+\n+\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 83 schema\n+struct<>\n+-- !query 83 output\n+\n+\n+\n+-- !query 84\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 84 schema\n+struct<>\n+-- !query 84 output\n+\n+\n+\n+-- !query 85\n+SELECT sum(unique1) over (order by four range between unbounded preceding and current row),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 85 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,unique1:int,four:int>\n+-- !query 85 output\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+27\t1\t1\n+27\t5\t1\n+27\t9\t1\n+35\t2\t2\n+35\t6\t2\n+45\t3\t3\n+45\t7\t3\n+\n+\n+-- !query 86\n+SELECT sum(unique1) over (order by four range between unbounded preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 86 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 86 output\n+45\t0\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t4\t0\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 87\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 87 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 87 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 88\n+SELECT sum(unique1) over (order by four range between 1 preceding and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 88 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 88 output\n+18\t3\t3\n+18\t7\t3\n+33\t2\t2\n+33\t6\t2\n+45\t0\t0\n+45\t1\t1\n+45\t4\t0\n+45\t5\t1\n+45\t8\t0\n+45\t9\t1\n+\n+\n+-- !query 89\n+SELECT sum(unique1) over (order by four range between 1 following and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 89 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 89 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+33\t0\t0\n+33\t4\t0\n+33\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 90\n+SELECT sum(unique1) over (order by four range between unbounded preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 90 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 90 output\n+35\t0\t0\n+35\t4\t0\n+35\t8\t0\n+45\t1\t1\n+45\t2\t2\n+45\t3\t3\n+45\t5\t1\n+45\t6\t2\n+45\t7\t3\n+45\t9\t1\n+\n+\n+-- !query 91\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 91 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 91 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 92\n+SELECT sum(unique1) over (order by four range between 0 preceding and 0 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 92 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 92 output\n+10\t3\t3\n+10\t7\t3\n+12\t0\t0\n+12\t4\t0\n+12\t8\t0\n+15\t1\t1\n+15\t5\t1\n+15\t9\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 93\n+SELECT sum(unique1) over (partition by ten\n+  order by four range between 0 preceding and 0 following),unique1, four, ten\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 93 schema\n+struct<sum(unique1) OVER (PARTITION BY ten ORDER BY four ASC NULLS FIRST RANGE BETWEEN 0 PRECEDING AND 0 FOLLOWING):bigint,unique1:int,four:int,ten:int>\n+-- !query 93 output\n+0\t0\t0\t0\n+1\t1\t1\t1\n+2\t2\t2\t2\n+3\t3\t3\t3\n+4\t4\t0\t4\n+5\t5\t1\t5\n+6\t6\t2\t6\n+7\t7\t3\t7\n+8\t8\t0\t8\n+9\t9\t1\t9\n+\n+\n+-- !query 94\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 94 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 94 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t64\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 95\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 95 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 95 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 96\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 35, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 96 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 96 output\n+1\t1",
    "line": 1439
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "error in pg? https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/expected/window.out#L2051",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T01:54:55Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+\n+\n+\n+-- !query 71\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 71 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 71 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 75 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 79 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 79 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 82\n+-- currently unsupported\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 82 output\n+1\t-3\tNULL\tNULL"
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "supported in spark? https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/expected/window.out#L2043",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T01:56:50Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775805\tNULL\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+\n+\n+\n+-- !query 71\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 71 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 71 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 75\n+-- error, NaN disallowed\n+\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 75 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t3\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+1\t-3.0\t1\t1\n+2\t-1.0\t2\t3\n+3\t0.0\t2\t4\n+4\t1.1\t4\t6\n+5\t1.12\t4\t6\n+6\t2.0\t4\t6\n+7\t100.0\t7\t7\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+1\t-3.0\tNULL\tNULL\n+2\t-1.0\tNULL\tNULL\n+3\t0.0\tNULL\tNULL\n+4\t1.1\tNULL\tNULL\n+5\t1.12\tNULL\tNULL\n+6\t2.0\tNULL\tNULL\n+7\t100.0\tNULL\tNULL\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+1\t-3.0\t1\t7\n+2\t-1.0\t2\t7\n+3\t0.0\t2\t7\n+4\t1.1\t3\t7\n+5\t1.12\t4\t7\n+6\t2.0\t4\t7\n+7\t100.0\t7\t7\n+\n+\n+-- !query 79\n+-- error, NaN disallowed\n+\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 79 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 79 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 80 output\n+1\t-3\t1\t1\n+2\t-1\t2\t3\n+3\t0\t2\t5\n+4\t1\t3\t6\n+5\t1\t3\t6\n+6\t2\t4\t6\n+7\t100\t7\t7\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+1\t-3\t1\t1"
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "different number of output from pg? https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/expected/window.out#L1817",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T02:05:15Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765"
  }, {
    "author": {
      "login": "DylanGuedes"
    },
    "body": "Oh, that's because `range` and `generate_series` behavior are not exactly equal.",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T20:34:01Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765"
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "ditto",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T02:05:23Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766"
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "ditto",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T02:05:29Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645"
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "ditto",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T02:05:36Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483645\t-2147483646"
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "ditto",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T02:05:41Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+",
    "line": 1164
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "ditto",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-07T02:05:47Z",
    "diffHunk": "@@ -0,0 +1,2526 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 162\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 10) i\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+\n+\n+\n+-- !query 52\n+SELECT * FROM v_window\n+-- !query 52 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 52 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 53\n+CREATE OR REPLACE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id range between 1 preceding and 1 following) as sum_rows FROM range(1, 10) i\n+-- !query 53 schema\n+struct<>\n+-- !query 53 output\n+\n+\n+\n+-- !query 54\n+SELECT * FROM v_window\n+-- !query 54 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 54 output\n+1\t3\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t17\n+\n+\n+-- !query 55\n+DROP VIEW v_window\n+-- !query 55 schema\n+struct<>\n+-- !query 55 output\n+\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 58\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 58 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 58 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t4\n+4\t4\t2\t4\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,5) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t4\t1\n+4\t4\t4\t2\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32766) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32765\n+32765\t32765\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32764) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32765\t-32766\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483646) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483645\n+2147483645\t2147483645\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483644) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483645\t-2147483646\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775806) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775804) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775805\tNULL"
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "Why this failed? https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/expected/window.out#L3791",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-26T05:39:01Z",
    "diffHunk": "@@ -0,0 +1,2247 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 151\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+SELECT sum(unique1) over (w range between current row and unbounded following),\n+\tunique1, four\n+FROM tenk1 WHERE unique1 < 10 WINDOW w AS (order by four)\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+mismatched input '(' expecting {<EOF>, ',', 'CLUSTER', 'DISTRIBUTE', 'EXCEPT', 'FROM', 'GROUP', 'HAVING', 'INTERSECT', 'LATERAL', 'LIMIT', 'ORDER', 'MINUS', 'SORT', 'UNION', 'WHERE', 'WINDOW', '-'}(line 1, pos 25)\n+\n+== SQL ==\n+SELECT sum(unique1) over (w range between current row and unbounded following),\n+-------------------------^^^\n+\tunique1, four\n+FROM tenk1 WHERE unique1 < 10 WINDOW w AS (order by four)\n+\n+\n+-- !query 52\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 11) i\n+-- !query 52 schema\n+struct<>\n+-- !query 52 output\n+\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+10\t19\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t27\n+\n+\n+-- !query 54\n+DROP VIEW v_window\n+-- !query 54 schema\n+struct<>\n+-- !query 54 output\n+\n+\n+\n+-- !query 55\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 55 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 55 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 58\n+select last(salary) over(order by salary range between 1000 preceding and 1000 following),\n+lag(salary) over(order by salary range between 1000 preceding and 1000 following),\n+salary from empsalary\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+org.apache.spark.sql.AnalysisException\n+Window Frame specifiedwindowframe(RangeFrame, -1000, 1000) must match the required frame specifiedwindowframe(RowFrame, -1, -1);\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t5\n+4\t4\t2\t5\n+5\t5\t3\t5\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t5\n+4\t4\t2\t5\n+5\t5\t3\t5\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t5\t1\n+4\t4\t5\t2\n+5\t5\t5\t3\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t5\t1\n+4\t4\t5\t2\n+5\t5\t5\t3\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32767) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32766\n+32765\t32766\n+32766\t32766\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32765) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483647) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483646\n+2147483645\t2147483646\n+2147483646\t2147483646\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483645) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775807) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+9223372036854775806\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775805) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+(8, 'infinity', 'infinity', '1000'),\n+(9, 'NaN', 'NaN', 'NaN')\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+mismatched input '(' expecting {<EOF>, ',', '.', '[', 'ADD', 'AFTER', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'ANY', 'ARCHIVE', 'ARRAY', 'AS', 'ASC', 'AT', 'AUTHORIZATION', 'BETWEEN', 'BOTH', 'BUCKET', 'BUCKETS', 'BY', 'CACHE', 'CASCADE', 'CASE', 'CAST', 'CHANGE', 'CHECK', 'CLEAR', 'CLUSTER', 'CLUSTERED', 'CODEGEN', 'COLLATE', 'COLLECTION', 'COLUMN', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMPACT', 'COMPACTIONS', 'COMPUTE', 'CONCATENATE', 'CONSTRAINT', 'COST', 'CREATE', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'DATA', 'DATABASE', DATABASES, 'DAY', 'DAYS', 'DBPROPERTIES', 'DEFINED', 'DELETE', 'DELIMITED', 'DESC', 'DESCRIBE', 'DFS', 'DIRECTORIES', 'DIRECTORY', 'DISTINCT', 'DISTRIBUTE', 'DROP', 'ELSE', 'END', 'ESCAPED', 'EXCEPT', 'EXCHANGE', 'EXISTS', 'EXPLAIN', 'EXPORT', 'EXTENDED', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FETCH', 'FIELDS', 'FILEFORMAT', 'FIRST', 'FIRST_VALUE', 'FOLLOWING', 'FOR', 'FOREIGN', 'FORMAT', 'FORMATTED', 'FROM', 'FUNCTION', 'FUNCTIONS', 'GLOBAL', 'GRANT', 'GROUP', 'GROUPING', 'HAVING', 'HOUR', 'HOURS', 'IF', 'IGNORE', 'IMPORT', 'IN', 'INDEX', 'INDEXES', 'INPATH', 'INPUTFORMAT', 'INSERT', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'ITEMS', 'KEYS', 'LAST', 'LAST_VALUE', 'LATERAL', 'LAZY', 'LEADING', 'LIKE', 'LIMIT', 'LINES', 'LIST', 'LOAD', 'LOCAL', 'LOCATION', 'LOCK', 'LOCKS', 'LOGICAL', 'MACRO', 'MAP', 'MICROSECOND', 'MICROSECONDS', 'MILLISECOND', 'MILLISECONDS', 'MINUTE', 'MINUTES', 'MONTH', 'MONTHS', 'MSCK', 'NO', NOT, 'NULL', 'NULLS', 'OF', 'ONLY', 'OPTION', 'OPTIONS', 'OR', 'ORDER', 'OUT', 'OUTER', 'OUTPUTFORMAT', 'OVER', 'OVERLAPS', 'OVERLAY', 'OVERWRITE', 'PARTITION', 'PARTITIONED', 'PARTITIONS', 'PERCENT', 'PIVOT', 'PLACING', 'POSITION', 'PRECEDING', 'PRIMARY', 'PRINCIPALS', 'PURGE', 'QUERY', 'RANGE', 'RECORDREADER', 'RECORDWRITER', 'RECOVER', 'REDUCE', 'REFERENCES', 'REFRESH', 'RENAME', 'REPAIR', 'REPLACE', 'RESET', 'RESPECT', 'RESTRICT', 'REVOKE', RLIKE, 'ROLE', 'ROLES', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROWS', 'SCHEMA', 'SECOND', 'SECONDS', 'SELECT', 'SEPARATED', 'SERDE', 'SERDEPROPERTIES', 'SESSION_USER', 'SET', 'MINUS', 'SETS', 'SHOW', 'SKEWED', 'SOME', 'SORT', 'SORTED', 'START', 'STATISTICS', 'STORED', 'STRATIFY', 'STRUCT', 'SUBSTR', 'SUBSTRING', 'TABLE', 'TABLES', 'TABLESAMPLE', 'TBLPROPERTIES', TEMPORARY, 'TERMINATED', 'THEN', 'TO', 'TOUCH', 'TRAILING', 'TRANSACTION', 'TRANSACTIONS', 'TRANSFORM', 'TRIM', 'TRUE', 'TRUNCATE', 'TYPE', 'UNARCHIVE', 'UNBOUNDED', 'UNCACHE', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNLOCK', 'UNSET', 'USE', 'USER', 'VALUES', 'VIEW', 'WEEK', 'WEEKS', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'YEAR', 'YEARS', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '||', '^', IDENTIFIER, BACKQUOTED_IDENTIFIER}(line 9, pos 0)\n+\n+== SQL ==\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+(8, 'infinity', 'infinity', '1000'),\n+^^^\n+(9, 'NaN', 'NaN', 'NaN')\n+\n+\n+-- !query 71\n+(0, '-infinity', '-infinity', '-1000')\n+-- !query 71 schema\n+struct<>\n+-- !query 71 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+mismatched input '0' expecting {'(', 'FROM', 'MAP', 'REDUCE', 'SELECT', 'TABLE', 'VALUES', 'WITH'}(line 1, pos 1)\n+\n+== SQL ==\n+(0, '-infinity', '-infinity', '-1000')\n+-^^^\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 80 output\n+\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+\n+\n+\n+-- !query 82\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 82 output\n+\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 83 output\n+\n+\n+\n+-- !query 84\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 84 schema\n+struct<>\n+-- !query 84 output\n+\n+\n+\n+-- !query 85\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 85 schema\n+struct<>\n+-- !query 85 output\n+\n+\n+\n+-- !query 86\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 36, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 86 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 86 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t99\n+35\t68\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 87\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 36, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 87 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 87 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+35\t35\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 88\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 50, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 88 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 88 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t141\n+49\t96\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 89\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 50, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 89 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 89 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+49\t49\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 90\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 90 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 90 output\n+\n+\n+\n+-- !query 91\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 91 schema\n+struct<>\n+-- !query 91 output\n+\n+\n+\n+-- !query 92\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 92 schema\n+struct<>\n+-- !query 92 output\n+\n+\n+\n+-- !query 93\n+select f1, sum(f1) over (partition by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 93 schema\n+struct<>\n+-- !query 93 output\n+org.apache.spark.sql.AnalysisException\n+cannot resolve '(PARTITION BY default.t1.`f1` RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING)' due to data type mismatch: A range window frame cannot be used in an unordered window specification.; line 1 pos 24\n+\n+\n+-- !query 94\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 94 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 94 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 95\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 95 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 95 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 96\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 96 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 96 output\n+1\n+\n+\n+-- !query 97\n+SELECT * FROM empsalary WHERE row_number() OVER (ORDER BY salary) < 10\n+-- !query 97 schema\n+struct<>\n+-- !query 97 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 98\n+SELECT * FROM empsalary INNER JOIN tenk1 ON row_number() OVER (ORDER BY salary) < 10\n+-- !query 98 schema\n+struct<>\n+-- !query 98 output\n+org.apache.spark.sql.AnalysisException\n+\n+The query operator `Join` contains one or more unsupported\n+expression types Aggregate, Window or Generate.\n+Invalid expressions: [row_number() OVER (ORDER BY default.empsalary.`salary` ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)];\n+\n+\n+-- !query 99\n+SELECT rank() OVER (ORDER BY 1), count(*) FROM empsalary GROUP BY 1\n+-- !query 99 schema\n+struct<>\n+-- !query 99 output\n+org.apache.spark.sql.AnalysisException\n+\n+The query operator `Aggregate` contains one or more unsupported\n+expression types Aggregate, Window or Generate.\n+Invalid expressions: [RANK() OVER (ORDER BY 1 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)];\n+\n+\n+-- !query 100\n+SELECT * FROM rank() OVER (ORDER BY random())\n+-- !query 100 schema\n+struct<>\n+-- !query 100 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+no viable alternative at input 'ORDER'(line 1, pos 27)\n+\n+== SQL ==\n+SELECT * FROM rank() OVER (ORDER BY random())\n+---------------------------^^^\n+\n+\n+-- !query 101\n+SELECT * FROM empsalary WHERE (rank() OVER (ORDER BY random())) > 10\n+-- !query 101 schema\n+struct<>\n+-- !query 101 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 102\n+SELECT * FROM empsalary WHERE rank() OVER (ORDER BY random())\n+-- !query 102 schema\n+struct<>\n+-- !query 102 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 103\n+select rank() OVER (PARTITION BY four, ORDER BY ten) FROM tenk1\n+-- !query 103 schema\n+struct<>\n+-- !query 103 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+no viable alternative at input 'ORDER'(line 1, pos 39)\n+\n+== SQL ==\n+select rank() OVER (PARTITION BY four, ORDER BY ten) FROM tenk1\n+---------------------------------------^^^\n+\n+\n+-- !query 104\n+SELECT range(1, 100) OVER () FROM empsalary\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+org.apache.spark.sql.AnalysisException\n+Undefined function: 'range'. This function is neither a registered temporary function nor a permanent function registered in the database 'default'.; line 1 pos 7\n+\n+\n+-- !query 105\n+SELECT ntile(0) OVER (ORDER BY ten), ten, four FROM tenk1\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+org.apache.spark.sql.AnalysisException\n+cannot resolve 'ntile(0)' due to data type mismatch: Buckets expression must be positive, but got: 0; line 1 pos 7\n+\n+\n+-- !query 106\n+DROP TABLE empsalary\n+-- !query 106 schema\n+struct<>\n+-- !query 106 output\n+\n+\n+\n+-- !query 107\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 107 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 107 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 108\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 108 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 108 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 109\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 109 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 109 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 110\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 110 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 110 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 111\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 111 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 111 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 112\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 112 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 112 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 113\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 113 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 113 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 114\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.1),(2,2.2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 114 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(12,1)>\n+-- !query 114 output\n+1\t3.3\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 115\n+SELECT SUM(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.01),(2,2),(3,3)) v(i,n)\n+-- !query 115 schema\n+struct<sum(n) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(22,2)>\n+-- !query 115 output\n+3\n+5\n+6.01\n+\n+\n+-- !query 116\n+SELECT i,COUNT(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,count(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 116 output\n+1\t2\n+2\t1\n+3\t0\n+4\t0\n+\n+\n+-- !query 117\n+SELECT i,COUNT(*) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,count(1) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 117 output\n+1\t4\n+2\t3\n+3\t2\n+4\t1\n+\n+\n+-- !query 118\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 118 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 119\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 119 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 119 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 120\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 120 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 121\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 121 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 121 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 122\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 122 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 122 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 123\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 123 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 123 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 124\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 124 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 124 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 125\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 125 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 125 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 126\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 126 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 126 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 127\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 127 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 127 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 128\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 128 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 128 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 129\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 129 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 129 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 130\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 130 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 130 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 131\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 131 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 131 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 132\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 132 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 132 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 133\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 133 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 133 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 134\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 134 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 134 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 135\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 135 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 135 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 136\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 136 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 136 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 137\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 137 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 137 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 138\n+SELECT STDDEV(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(0,NULL),(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 138 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 138 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 139\n+SELECT STDDEV(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(0,NULL),(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 139 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 139 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 140\n+SELECT STDDEV(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(0,NULL),(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 140 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 140 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 141\n+SELECT STDDEV(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(0,NULL),(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 141 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 141 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 142\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND CURRENT ROW)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 142 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND CURRENT ROW):bigint>\n+-- !query 142 output\n+1\t1\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 143\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 143 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING):bigint>\n+-- !query 143 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 144\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,3),(4,4)) t(i,v)\n+-- !query 144 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 144 output\n+1\t3\n+2\t6\n+3\t9\n+4\t7\n+\n+\n+-- !query 145\n+SELECT a, b,\n+       SUM(b) OVER(ORDER BY A ROWS BETWEEN 1 PRECEDING AND CURRENT ROW)\n+FROM (VALUES(1,1),(2,2),(3,'NaN'),(4,3),(5,4)) t(a,b)\n+-- !query 145 schema\n+struct<>\n+-- !query 145 output\n+org.apache.spark.sql.AnalysisException",
    "line": 2205
  }, {
    "author": {
      "login": "DylanGuedes"
    },
    "body": "Because Spark does not handle 'NaN' for inline tables. ",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-09-07T14:41:15Z",
    "diffHunk": "@@ -0,0 +1,2247 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 151\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+SELECT sum(unique1) over (w range between current row and unbounded following),\n+\tunique1, four\n+FROM tenk1 WHERE unique1 < 10 WINDOW w AS (order by four)\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+mismatched input '(' expecting {<EOF>, ',', 'CLUSTER', 'DISTRIBUTE', 'EXCEPT', 'FROM', 'GROUP', 'HAVING', 'INTERSECT', 'LATERAL', 'LIMIT', 'ORDER', 'MINUS', 'SORT', 'UNION', 'WHERE', 'WINDOW', '-'}(line 1, pos 25)\n+\n+== SQL ==\n+SELECT sum(unique1) over (w range between current row and unbounded following),\n+-------------------------^^^\n+\tunique1, four\n+FROM tenk1 WHERE unique1 < 10 WINDOW w AS (order by four)\n+\n+\n+-- !query 52\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 11) i\n+-- !query 52 schema\n+struct<>\n+-- !query 52 output\n+\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+10\t19\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t27\n+\n+\n+-- !query 54\n+DROP VIEW v_window\n+-- !query 54 schema\n+struct<>\n+-- !query 54 output\n+\n+\n+\n+-- !query 55\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 55 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 55 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 58\n+select last(salary) over(order by salary range between 1000 preceding and 1000 following),\n+lag(salary) over(order by salary range between 1000 preceding and 1000 following),\n+salary from empsalary\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+org.apache.spark.sql.AnalysisException\n+Window Frame specifiedwindowframe(RangeFrame, -1000, 1000) must match the required frame specifiedwindowframe(RowFrame, -1, -1);\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t5\n+4\t4\t2\t5\n+5\t5\t3\t5\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t5\n+4\t4\t2\t5\n+5\t5\t3\t5\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t5\t1\n+4\t4\t5\t2\n+5\t5\t5\t3\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t5\t1\n+4\t4\t5\t2\n+5\t5\t5\t3\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32767) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32766\n+32765\t32766\n+32766\t32766\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32765) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483647) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483646\n+2147483645\t2147483646\n+2147483646\t2147483646\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483645) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775807) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+9223372036854775806\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775805) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+(8, 'infinity', 'infinity', '1000'),\n+(9, 'NaN', 'NaN', 'NaN')\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+mismatched input '(' expecting {<EOF>, ',', '.', '[', 'ADD', 'AFTER', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'ANY', 'ARCHIVE', 'ARRAY', 'AS', 'ASC', 'AT', 'AUTHORIZATION', 'BETWEEN', 'BOTH', 'BUCKET', 'BUCKETS', 'BY', 'CACHE', 'CASCADE', 'CASE', 'CAST', 'CHANGE', 'CHECK', 'CLEAR', 'CLUSTER', 'CLUSTERED', 'CODEGEN', 'COLLATE', 'COLLECTION', 'COLUMN', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMPACT', 'COMPACTIONS', 'COMPUTE', 'CONCATENATE', 'CONSTRAINT', 'COST', 'CREATE', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'DATA', 'DATABASE', DATABASES, 'DAY', 'DAYS', 'DBPROPERTIES', 'DEFINED', 'DELETE', 'DELIMITED', 'DESC', 'DESCRIBE', 'DFS', 'DIRECTORIES', 'DIRECTORY', 'DISTINCT', 'DISTRIBUTE', 'DROP', 'ELSE', 'END', 'ESCAPED', 'EXCEPT', 'EXCHANGE', 'EXISTS', 'EXPLAIN', 'EXPORT', 'EXTENDED', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FETCH', 'FIELDS', 'FILEFORMAT', 'FIRST', 'FIRST_VALUE', 'FOLLOWING', 'FOR', 'FOREIGN', 'FORMAT', 'FORMATTED', 'FROM', 'FUNCTION', 'FUNCTIONS', 'GLOBAL', 'GRANT', 'GROUP', 'GROUPING', 'HAVING', 'HOUR', 'HOURS', 'IF', 'IGNORE', 'IMPORT', 'IN', 'INDEX', 'INDEXES', 'INPATH', 'INPUTFORMAT', 'INSERT', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'ITEMS', 'KEYS', 'LAST', 'LAST_VALUE', 'LATERAL', 'LAZY', 'LEADING', 'LIKE', 'LIMIT', 'LINES', 'LIST', 'LOAD', 'LOCAL', 'LOCATION', 'LOCK', 'LOCKS', 'LOGICAL', 'MACRO', 'MAP', 'MICROSECOND', 'MICROSECONDS', 'MILLISECOND', 'MILLISECONDS', 'MINUTE', 'MINUTES', 'MONTH', 'MONTHS', 'MSCK', 'NO', NOT, 'NULL', 'NULLS', 'OF', 'ONLY', 'OPTION', 'OPTIONS', 'OR', 'ORDER', 'OUT', 'OUTER', 'OUTPUTFORMAT', 'OVER', 'OVERLAPS', 'OVERLAY', 'OVERWRITE', 'PARTITION', 'PARTITIONED', 'PARTITIONS', 'PERCENT', 'PIVOT', 'PLACING', 'POSITION', 'PRECEDING', 'PRIMARY', 'PRINCIPALS', 'PURGE', 'QUERY', 'RANGE', 'RECORDREADER', 'RECORDWRITER', 'RECOVER', 'REDUCE', 'REFERENCES', 'REFRESH', 'RENAME', 'REPAIR', 'REPLACE', 'RESET', 'RESPECT', 'RESTRICT', 'REVOKE', RLIKE, 'ROLE', 'ROLES', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROWS', 'SCHEMA', 'SECOND', 'SECONDS', 'SELECT', 'SEPARATED', 'SERDE', 'SERDEPROPERTIES', 'SESSION_USER', 'SET', 'MINUS', 'SETS', 'SHOW', 'SKEWED', 'SOME', 'SORT', 'SORTED', 'START', 'STATISTICS', 'STORED', 'STRATIFY', 'STRUCT', 'SUBSTR', 'SUBSTRING', 'TABLE', 'TABLES', 'TABLESAMPLE', 'TBLPROPERTIES', TEMPORARY, 'TERMINATED', 'THEN', 'TO', 'TOUCH', 'TRAILING', 'TRANSACTION', 'TRANSACTIONS', 'TRANSFORM', 'TRIM', 'TRUE', 'TRUNCATE', 'TYPE', 'UNARCHIVE', 'UNBOUNDED', 'UNCACHE', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNLOCK', 'UNSET', 'USE', 'USER', 'VALUES', 'VIEW', 'WEEK', 'WEEKS', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'YEAR', 'YEARS', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '||', '^', IDENTIFIER, BACKQUOTED_IDENTIFIER}(line 9, pos 0)\n+\n+== SQL ==\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+(8, 'infinity', 'infinity', '1000'),\n+^^^\n+(9, 'NaN', 'NaN', 'NaN')\n+\n+\n+-- !query 71\n+(0, '-infinity', '-infinity', '-1000')\n+-- !query 71 schema\n+struct<>\n+-- !query 71 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+mismatched input '0' expecting {'(', 'FROM', 'MAP', 'REDUCE', 'SELECT', 'TABLE', 'VALUES', 'WITH'}(line 1, pos 1)\n+\n+== SQL ==\n+(0, '-infinity', '-infinity', '-1000')\n+-^^^\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 80 output\n+\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+\n+\n+\n+-- !query 82\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 82 output\n+\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 83 output\n+\n+\n+\n+-- !query 84\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 84 schema\n+struct<>\n+-- !query 84 output\n+\n+\n+\n+-- !query 85\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 85 schema\n+struct<>\n+-- !query 85 output\n+\n+\n+\n+-- !query 86\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 36, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 86 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 86 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t99\n+35\t68\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 87\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 36, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 87 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 87 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+35\t35\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 88\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 50, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 88 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 88 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t141\n+49\t96\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 89\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 50, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 89 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 89 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+49\t49\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 90\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 90 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 90 output\n+\n+\n+\n+-- !query 91\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 91 schema\n+struct<>\n+-- !query 91 output\n+\n+\n+\n+-- !query 92\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 92 schema\n+struct<>\n+-- !query 92 output\n+\n+\n+\n+-- !query 93\n+select f1, sum(f1) over (partition by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 93 schema\n+struct<>\n+-- !query 93 output\n+org.apache.spark.sql.AnalysisException\n+cannot resolve '(PARTITION BY default.t1.`f1` RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING)' due to data type mismatch: A range window frame cannot be used in an unordered window specification.; line 1 pos 24\n+\n+\n+-- !query 94\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 94 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 94 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 95\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 95 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 95 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 96\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 96 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 96 output\n+1\n+\n+\n+-- !query 97\n+SELECT * FROM empsalary WHERE row_number() OVER (ORDER BY salary) < 10\n+-- !query 97 schema\n+struct<>\n+-- !query 97 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 98\n+SELECT * FROM empsalary INNER JOIN tenk1 ON row_number() OVER (ORDER BY salary) < 10\n+-- !query 98 schema\n+struct<>\n+-- !query 98 output\n+org.apache.spark.sql.AnalysisException\n+\n+The query operator `Join` contains one or more unsupported\n+expression types Aggregate, Window or Generate.\n+Invalid expressions: [row_number() OVER (ORDER BY default.empsalary.`salary` ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)];\n+\n+\n+-- !query 99\n+SELECT rank() OVER (ORDER BY 1), count(*) FROM empsalary GROUP BY 1\n+-- !query 99 schema\n+struct<>\n+-- !query 99 output\n+org.apache.spark.sql.AnalysisException\n+\n+The query operator `Aggregate` contains one or more unsupported\n+expression types Aggregate, Window or Generate.\n+Invalid expressions: [RANK() OVER (ORDER BY 1 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)];\n+\n+\n+-- !query 100\n+SELECT * FROM rank() OVER (ORDER BY random())\n+-- !query 100 schema\n+struct<>\n+-- !query 100 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+no viable alternative at input 'ORDER'(line 1, pos 27)\n+\n+== SQL ==\n+SELECT * FROM rank() OVER (ORDER BY random())\n+---------------------------^^^\n+\n+\n+-- !query 101\n+SELECT * FROM empsalary WHERE (rank() OVER (ORDER BY random())) > 10\n+-- !query 101 schema\n+struct<>\n+-- !query 101 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 102\n+SELECT * FROM empsalary WHERE rank() OVER (ORDER BY random())\n+-- !query 102 schema\n+struct<>\n+-- !query 102 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 103\n+select rank() OVER (PARTITION BY four, ORDER BY ten) FROM tenk1\n+-- !query 103 schema\n+struct<>\n+-- !query 103 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+no viable alternative at input 'ORDER'(line 1, pos 39)\n+\n+== SQL ==\n+select rank() OVER (PARTITION BY four, ORDER BY ten) FROM tenk1\n+---------------------------------------^^^\n+\n+\n+-- !query 104\n+SELECT range(1, 100) OVER () FROM empsalary\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+org.apache.spark.sql.AnalysisException\n+Undefined function: 'range'. This function is neither a registered temporary function nor a permanent function registered in the database 'default'.; line 1 pos 7\n+\n+\n+-- !query 105\n+SELECT ntile(0) OVER (ORDER BY ten), ten, four FROM tenk1\n+-- !query 105 schema\n+struct<>\n+-- !query 105 output\n+org.apache.spark.sql.AnalysisException\n+cannot resolve 'ntile(0)' due to data type mismatch: Buckets expression must be positive, but got: 0; line 1 pos 7\n+\n+\n+-- !query 106\n+DROP TABLE empsalary\n+-- !query 106 schema\n+struct<>\n+-- !query 106 output\n+\n+\n+\n+-- !query 107\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 107 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 107 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 108\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 108 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 108 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 109\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 109 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 109 output\n+1\t1.5\n+2\t2.0\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 110\n+SELECT i,AVG(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.5),(2,2.5),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 110 schema\n+struct<i:int,avg(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(6,5)>\n+-- !query 110 output\n+1\t2\n+2\t2.5\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 111\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 111 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 111 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 112\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 112 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 112 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 113\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 113 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 113 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 114\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.1),(2,2.2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 114 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(12,1)>\n+-- !query 114 output\n+1\t3.3\n+2\t2.2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 115\n+SELECT SUM(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1.01),(2,2),(3,3)) v(i,n)\n+-- !query 115 schema\n+struct<sum(n) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):decimal(22,2)>\n+-- !query 115 output\n+3\n+5\n+6.01\n+\n+\n+-- !query 116\n+SELECT i,COUNT(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 116 schema\n+struct<i:int,count(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 116 output\n+1\t2\n+2\t1\n+3\t0\n+4\t0\n+\n+\n+-- !query 117\n+SELECT i,COUNT(*) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 117 schema\n+struct<i:int,count(1) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 117 output\n+1\t4\n+2\t3\n+3\t2\n+4\t1\n+\n+\n+-- !query 118\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 118 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 118 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 119\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 119 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 119 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 120\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 120 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 120 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 121\n+SELECT VAR_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 121 schema\n+struct<var_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 121 output\n+0.0\n+11266.666666666666\n+13868.750000000002\n+21703.999999999996\n+4225.0\n+\n+\n+-- !query 122\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 122 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 122 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 123\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 123 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 123 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 124\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 124 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 124 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 125\n+SELECT VAR_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 125 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 125 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 126\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 126 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 126 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 127\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 127 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 127 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 128\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 128 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 128 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 129\n+SELECT VARIANCE(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 129 schema\n+struct<var_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 129 output\n+16900.0\n+18491.666666666668\n+27129.999999999996\n+8450.0\n+NaN\n+\n+\n+-- !query 130\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 130 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 130 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 131\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 131 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 131 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 132\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 132 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 132 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 133\n+SELECT STDDEV_POP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 133 schema\n+struct<stddev_pop(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 133 output\n+0.0\n+106.14455552060438\n+117.76565713313879\n+147.32277488562315\n+147.32277488562315\n+65.0\n+\n+\n+-- !query 134\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 134 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 134 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 135\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 135 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 135 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 136\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 136 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 136 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 137\n+SELECT STDDEV_SAMP(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(1,NULL),(2,600),(3,470),(4,170),(5,430),(6,300)) r(i,n)\n+-- !query 137 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 137 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 138\n+SELECT STDDEV(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(0,NULL),(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 138 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 138 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 139\n+SELECT STDDEV(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(0,NULL),(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 139 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 139 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 140\n+SELECT STDDEV(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(0,NULL),(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 140 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 140 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 141\n+SELECT STDDEV(n) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING)\n+  FROM (VALUES(0,NULL),(1,600),(2,470),(3,170),(4,430),(5,300)) r(i,n)\n+-- !query 141 schema\n+struct<stddev_samp(CAST(n AS DOUBLE)) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):double>\n+-- !query 141 output\n+130.0\n+135.9840676942217\n+164.7118696390761\n+164.7118696390761\n+91.92388155425118\n+NaN\n+\n+\n+-- !query 142\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND CURRENT ROW)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 142 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND CURRENT ROW):bigint>\n+-- !query 142 output\n+1\t1\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 143\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,NULL),(4,NULL)) t(i,v)\n+-- !query 143 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN CURRENT ROW AND 1 FOLLOWING):bigint>\n+-- !query 143 output\n+1\t3\n+2\t2\n+3\tNULL\n+4\tNULL\n+\n+\n+-- !query 144\n+SELECT i,SUM(v) OVER (ORDER BY i ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING)\n+  FROM (VALUES(1,1),(2,2),(3,3),(4,4)) t(i,v)\n+-- !query 144 schema\n+struct<i:int,sum(v) OVER (ORDER BY i ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 144 output\n+1\t3\n+2\t6\n+3\t9\n+4\t7\n+\n+\n+-- !query 145\n+SELECT a, b,\n+       SUM(b) OVER(ORDER BY A ROWS BETWEEN 1 PRECEDING AND CURRENT ROW)\n+FROM (VALUES(1,1),(2,2),(3,'NaN'),(4,3),(5,4)) t(a,b)\n+-- !query 145 schema\n+struct<>\n+-- !query 145 output\n+org.apache.spark.sql.AnalysisException",
    "line": 2205
  }],
  "prId": 24881
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "This error is not expected one: https://github.com/postgres/postgres/blob/REL_12_BETA2/src/test/regress/expected/window.out#L2982",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-08-26T06:04:14Z",
    "diffHunk": "@@ -0,0 +1,2247 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 151\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+SELECT sum(unique1) over (w range between current row and unbounded following),\n+\tunique1, four\n+FROM tenk1 WHERE unique1 < 10 WINDOW w AS (order by four)\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+mismatched input '(' expecting {<EOF>, ',', 'CLUSTER', 'DISTRIBUTE', 'EXCEPT', 'FROM', 'GROUP', 'HAVING', 'INTERSECT', 'LATERAL', 'LIMIT', 'ORDER', 'MINUS', 'SORT', 'UNION', 'WHERE', 'WINDOW', '-'}(line 1, pos 25)\n+\n+== SQL ==\n+SELECT sum(unique1) over (w range between current row and unbounded following),\n+-------------------------^^^\n+\tunique1, four\n+FROM tenk1 WHERE unique1 < 10 WINDOW w AS (order by four)\n+\n+\n+-- !query 52\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 11) i\n+-- !query 52 schema\n+struct<>\n+-- !query 52 output\n+\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+10\t19\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t27\n+\n+\n+-- !query 54\n+DROP VIEW v_window\n+-- !query 54 schema\n+struct<>\n+-- !query 54 output\n+\n+\n+\n+-- !query 55\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 55 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 55 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 58\n+select last(salary) over(order by salary range between 1000 preceding and 1000 following),\n+lag(salary) over(order by salary range between 1000 preceding and 1000 following),\n+salary from empsalary\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+org.apache.spark.sql.AnalysisException\n+Window Frame specifiedwindowframe(RangeFrame, -1000, 1000) must match the required frame specifiedwindowframe(RowFrame, -1, -1);\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t5\n+4\t4\t2\t5\n+5\t5\t3\t5\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t5\n+4\t4\t2\t5\n+5\t5\t3\t5\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t5\t1\n+4\t4\t5\t2\n+5\t5\t5\t3\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t5\t1\n+4\t4\t5\t2\n+5\t5\t5\t3\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32767) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32766\n+32765\t32766\n+32766\t32766\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32765) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483647) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483646\n+2147483645\t2147483646\n+2147483646\t2147483646\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483645) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775807) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+9223372036854775806\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775805) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+(8, 'infinity', 'infinity', '1000'),\n+(9, 'NaN', 'NaN', 'NaN')\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+mismatched input '(' expecting {<EOF>, ',', '.', '[', 'ADD', 'AFTER', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'ANY', 'ARCHIVE', 'ARRAY', 'AS', 'ASC', 'AT', 'AUTHORIZATION', 'BETWEEN', 'BOTH', 'BUCKET', 'BUCKETS', 'BY', 'CACHE', 'CASCADE', 'CASE', 'CAST', 'CHANGE', 'CHECK', 'CLEAR', 'CLUSTER', 'CLUSTERED', 'CODEGEN', 'COLLATE', 'COLLECTION', 'COLUMN', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMPACT', 'COMPACTIONS', 'COMPUTE', 'CONCATENATE', 'CONSTRAINT', 'COST', 'CREATE', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'DATA', 'DATABASE', DATABASES, 'DAY', 'DAYS', 'DBPROPERTIES', 'DEFINED', 'DELETE', 'DELIMITED', 'DESC', 'DESCRIBE', 'DFS', 'DIRECTORIES', 'DIRECTORY', 'DISTINCT', 'DISTRIBUTE', 'DROP', 'ELSE', 'END', 'ESCAPED', 'EXCEPT', 'EXCHANGE', 'EXISTS', 'EXPLAIN', 'EXPORT', 'EXTENDED', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FETCH', 'FIELDS', 'FILEFORMAT', 'FIRST', 'FIRST_VALUE', 'FOLLOWING', 'FOR', 'FOREIGN', 'FORMAT', 'FORMATTED', 'FROM', 'FUNCTION', 'FUNCTIONS', 'GLOBAL', 'GRANT', 'GROUP', 'GROUPING', 'HAVING', 'HOUR', 'HOURS', 'IF', 'IGNORE', 'IMPORT', 'IN', 'INDEX', 'INDEXES', 'INPATH', 'INPUTFORMAT', 'INSERT', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'ITEMS', 'KEYS', 'LAST', 'LAST_VALUE', 'LATERAL', 'LAZY', 'LEADING', 'LIKE', 'LIMIT', 'LINES', 'LIST', 'LOAD', 'LOCAL', 'LOCATION', 'LOCK', 'LOCKS', 'LOGICAL', 'MACRO', 'MAP', 'MICROSECOND', 'MICROSECONDS', 'MILLISECOND', 'MILLISECONDS', 'MINUTE', 'MINUTES', 'MONTH', 'MONTHS', 'MSCK', 'NO', NOT, 'NULL', 'NULLS', 'OF', 'ONLY', 'OPTION', 'OPTIONS', 'OR', 'ORDER', 'OUT', 'OUTER', 'OUTPUTFORMAT', 'OVER', 'OVERLAPS', 'OVERLAY', 'OVERWRITE', 'PARTITION', 'PARTITIONED', 'PARTITIONS', 'PERCENT', 'PIVOT', 'PLACING', 'POSITION', 'PRECEDING', 'PRIMARY', 'PRINCIPALS', 'PURGE', 'QUERY', 'RANGE', 'RECORDREADER', 'RECORDWRITER', 'RECOVER', 'REDUCE', 'REFERENCES', 'REFRESH', 'RENAME', 'REPAIR', 'REPLACE', 'RESET', 'RESPECT', 'RESTRICT', 'REVOKE', RLIKE, 'ROLE', 'ROLES', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROWS', 'SCHEMA', 'SECOND', 'SECONDS', 'SELECT', 'SEPARATED', 'SERDE', 'SERDEPROPERTIES', 'SESSION_USER', 'SET', 'MINUS', 'SETS', 'SHOW', 'SKEWED', 'SOME', 'SORT', 'SORTED', 'START', 'STATISTICS', 'STORED', 'STRATIFY', 'STRUCT', 'SUBSTR', 'SUBSTRING', 'TABLE', 'TABLES', 'TABLESAMPLE', 'TBLPROPERTIES', TEMPORARY, 'TERMINATED', 'THEN', 'TO', 'TOUCH', 'TRAILING', 'TRANSACTION', 'TRANSACTIONS', 'TRANSFORM', 'TRIM', 'TRUE', 'TRUNCATE', 'TYPE', 'UNARCHIVE', 'UNBOUNDED', 'UNCACHE', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNLOCK', 'UNSET', 'USE', 'USER', 'VALUES', 'VIEW', 'WEEK', 'WEEKS', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'YEAR', 'YEARS', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '||', '^', IDENTIFIER, BACKQUOTED_IDENTIFIER}(line 9, pos 0)\n+\n+== SQL ==\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+(8, 'infinity', 'infinity', '1000'),\n+^^^\n+(9, 'NaN', 'NaN', 'NaN')\n+\n+\n+-- !query 71\n+(0, '-infinity', '-infinity', '-1000')\n+-- !query 71 schema\n+struct<>\n+-- !query 71 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+mismatched input '0' expecting {'(', 'FROM', 'MAP', 'REDUCE', 'SELECT', 'TABLE', 'VALUES', 'WITH'}(line 1, pos 1)\n+\n+== SQL ==\n+(0, '-infinity', '-infinity', '-1000')\n+-^^^\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 80 output\n+\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+\n+\n+\n+-- !query 82\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 82 output\n+\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 83 output\n+\n+\n+\n+-- !query 84\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 84 schema\n+struct<>\n+-- !query 84 output\n+\n+\n+\n+-- !query 85\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 85 schema\n+struct<>\n+-- !query 85 output\n+\n+\n+\n+-- !query 86\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 36, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 86 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 86 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t99\n+35\t68\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 87\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 36, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 87 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 87 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+35\t35\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 88\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 50, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 88 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 88 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t141\n+49\t96\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 89\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 50, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 89 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 89 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+49\t49\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 90\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 90 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 90 output\n+\n+\n+\n+-- !query 91\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 91 schema\n+struct<>\n+-- !query 91 output\n+\n+\n+\n+-- !query 92\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 92 schema\n+struct<>\n+-- !query 92 output\n+\n+\n+\n+-- !query 93\n+select f1, sum(f1) over (partition by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 93 schema\n+struct<>\n+-- !query 93 output\n+org.apache.spark.sql.AnalysisException\n+cannot resolve '(PARTITION BY default.t1.`f1` RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING)' due to data type mismatch: A range window frame cannot be used in an unordered window specification.; line 1 pos 24\n+\n+\n+-- !query 94\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 94 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 94 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 95\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 95 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 95 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 96\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 96 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 96 output\n+1\n+\n+\n+-- !query 97\n+SELECT * FROM empsalary WHERE row_number() OVER (ORDER BY salary) < 10\n+-- !query 97 schema\n+struct<>\n+-- !query 97 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 98\n+SELECT * FROM empsalary INNER JOIN tenk1 ON row_number() OVER (ORDER BY salary) < 10\n+-- !query 98 schema\n+struct<>\n+-- !query 98 output\n+org.apache.spark.sql.AnalysisException\n+\n+The query operator `Join` contains one or more unsupported\n+expression types Aggregate, Window or Generate.\n+Invalid expressions: [row_number() OVER (ORDER BY default.empsalary.`salary` ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)];\n+\n+\n+-- !query 99\n+SELECT rank() OVER (ORDER BY 1), count(*) FROM empsalary GROUP BY 1\n+-- !query 99 schema\n+struct<>\n+-- !query 99 output\n+org.apache.spark.sql.AnalysisException\n+\n+The query operator `Aggregate` contains one or more unsupported\n+expression types Aggregate, Window or Generate.\n+Invalid expressions: [RANK() OVER (ORDER BY 1 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)];\n+\n+\n+-- !query 100\n+SELECT * FROM rank() OVER (ORDER BY random())\n+-- !query 100 schema\n+struct<>\n+-- !query 100 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+no viable alternative at input 'ORDER'(line 1, pos 27)\n+\n+== SQL ==\n+SELECT * FROM rank() OVER (ORDER BY random())\n+---------------------------^^^\n+\n+\n+-- !query 101\n+SELECT * FROM empsalary WHERE (rank() OVER (ORDER BY random())) > 10\n+-- !query 101 schema\n+struct<>\n+-- !query 101 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 102\n+SELECT * FROM empsalary WHERE rank() OVER (ORDER BY random())\n+-- !query 102 schema\n+struct<>\n+-- !query 102 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 103\n+select rank() OVER (PARTITION BY four, ORDER BY ten) FROM tenk1\n+-- !query 103 schema\n+struct<>\n+-- !query 103 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+no viable alternative at input 'ORDER'(line 1, pos 39)\n+\n+== SQL ==\n+select rank() OVER (PARTITION BY four, ORDER BY ten) FROM tenk1\n+---------------------------------------^^^\n+\n+\n+-- !query 104\n+SELECT range(1, 100) OVER () FROM empsalary\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+org.apache.spark.sql.AnalysisException\n+Undefined function: 'range'. This function is neither a registered temporary function nor a permanent function registered in the database 'default'.; line 1 pos 7",
    "line": 1687
  }, {
    "author": {
      "login": "DylanGuedes"
    },
    "body": "Although the message is misleading, I think that they represent the same: there's no existent `range` aggregated function. I should JIRA that? ",
    "commit": "80f29158d67574b6a69924a2d606ebc2fd94ada8",
    "createdAt": "2019-09-07T13:16:54Z",
    "diffHunk": "@@ -0,0 +1,2247 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 151\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 43 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 43 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t2\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t2\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t2\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t2\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 44\n+SELECT four, ten/4 as two,\n+sum(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row),\n+last(ten/4) over (partition by four order by ten/4 rows between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 44 schema\n+struct<four:int,two:int,sum((ten div 4)) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last((ten div 4), false) OVER (PARTITION BY four ORDER BY (ten div 4) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 44 output\n+0\t0\t0\t0\n+0\t0\t0\t0\n+0\t1\t1\t1\n+0\t1\t2\t1\n+0\t2\t4\t2\n+1\t0\t0\t0\n+1\t0\t0\t0\n+1\t1\t1\t1\n+1\t1\t2\t1\n+1\t2\t4\t2\n+2\t0\t0\t0\n+2\t0\t0\t0\n+2\t1\t1\t1\n+2\t1\t2\t1\n+2\t2\t4\t2\n+3\t0\t0\t0\n+3\t0\t0\t0\n+3\t1\t1\t1\n+3\t1\t2\t1\n+3\t2\t4\t2\n+\n+\n+-- !query 45\n+SELECT sum(unique1) over (order by four range between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 45 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 45 output\n+10\t3\t3\n+10\t7\t3\n+18\t2\t2\n+18\t6\t2\n+33\t1\t1\n+33\t5\t1\n+33\t9\t1\n+45\t0\t0\n+45\t4\t0\n+45\t8\t0\n+\n+\n+-- !query 46\n+SELECT sum(unique1) over (rows between current row and unbounded following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 46 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 46 output\n+0\t0\t0\n+10\t3\t3\n+15\t5\t1\n+23\t8\t0\n+32\t9\t1\n+38\t6\t2\n+39\t1\t1\n+41\t2\t2\n+45\t4\t0\n+7\t7\t3\n+\n+\n+-- !query 47\n+SELECT sum(unique1) over (rows between 2 preceding and 2 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 47 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 2 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 47 output\n+10\t0\t0\n+13\t2\t2\n+15\t7\t3\n+22\t1\t1\n+23\t3\t3\n+26\t6\t2\n+29\t9\t1\n+31\t8\t0\n+32\t5\t1\n+7\t4\t0\n+\n+\n+-- !query 48\n+SELECT sum(unique1) over (rows between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 48 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 48 output\n+10\t0\t0\n+13\t3\t3\n+15\t8\t0\n+17\t5\t1\n+3\t6\t2\n+4\t2\t2\n+6\t1\t1\n+7\t9\t1\n+8\t7\t3\n+NULL\t4\t0\n+\n+\n+-- !query 49\n+SELECT sum(unique1) over (rows between 1 following and 3 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 49 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN 1 FOLLOWING AND 3 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 49 output\n+0\t7\t3\n+10\t5\t1\n+15\t8\t0\n+16\t2\t2\n+16\t9\t1\n+22\t6\t2\n+23\t1\t1\n+7\t3\t3\n+9\t4\t0\n+NULL\t0\t0\n+\n+\n+-- !query 50\n+SELECT sum(unique1) over (rows between unbounded preceding and 1 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 50 schema\n+struct<sum(unique1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND 1 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 50 output\n+13\t1\t1\n+22\t6\t2\n+30\t9\t1\n+35\t8\t0\n+38\t5\t1\n+45\t0\t0\n+45\t3\t3\n+45\t7\t3\n+6\t4\t0\n+7\t2\t2\n+\n+\n+-- !query 51\n+SELECT sum(unique1) over (w range between current row and unbounded following),\n+\tunique1, four\n+FROM tenk1 WHERE unique1 < 10 WINDOW w AS (order by four)\n+-- !query 51 schema\n+struct<>\n+-- !query 51 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+mismatched input '(' expecting {<EOF>, ',', 'CLUSTER', 'DISTRIBUTE', 'EXCEPT', 'FROM', 'GROUP', 'HAVING', 'INTERSECT', 'LATERAL', 'LIMIT', 'ORDER', 'MINUS', 'SORT', 'UNION', 'WHERE', 'WINDOW', '-'}(line 1, pos 25)\n+\n+== SQL ==\n+SELECT sum(unique1) over (w range between current row and unbounded following),\n+-------------------------^^^\n+\tunique1, four\n+FROM tenk1 WHERE unique1 < 10 WINDOW w AS (order by four)\n+\n+\n+-- !query 52\n+CREATE TEMP VIEW v_window AS\n+SELECT i.id, sum(i.id) over (order by i.id rows between 1 preceding and 1 following) as sum_rows\n+FROM range(1, 11) i\n+-- !query 52 schema\n+struct<>\n+-- !query 52 output\n+\n+\n+\n+-- !query 53\n+SELECT * FROM v_window\n+-- !query 53 schema\n+struct<id:bigint,sum_rows:bigint>\n+-- !query 53 output\n+1\t3\n+10\t19\n+2\t6\n+3\t9\n+4\t12\n+5\t15\n+6\t18\n+7\t21\n+8\t24\n+9\t27\n+\n+\n+-- !query 54\n+DROP VIEW v_window\n+-- !query 54 schema\n+struct<>\n+-- !query 54 output\n+\n+\n+\n+-- !query 55\n+SELECT sum(unique1) over (order by four range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 55 schema\n+struct<sum(unique1) OVER (ORDER BY four ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 55 output\n+12\t1\t1\n+12\t5\t1\n+12\t9\t1\n+23\t3\t3\n+23\t7\t3\n+27\t2\t2\n+27\t6\t2\n+NULL\t0\t0\n+NULL\t4\t0\n+NULL\t8\t0\n+\n+\n+-- !query 56\n+SELECT sum(unique1) over (order by four desc range between 2 preceding and 1 preceding),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 56 schema\n+struct<sum(unique1) OVER (ORDER BY four DESC NULLS LAST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint,unique1:int,four:int>\n+-- !query 56 output\n+10\t2\t2\n+10\t6\t2\n+18\t1\t1\n+18\t5\t1\n+18\t9\t1\n+23\t0\t0\n+23\t4\t0\n+23\t8\t0\n+NULL\t3\t3\n+NULL\t7\t3\n+\n+\n+-- !query 57\n+SELECT sum(unique1) over (partition by four order by unique1 range between 5 preceding and 6 following),\n+unique1, four\n+FROM tenk1 WHERE unique1 < 10\n+-- !query 57 schema\n+struct<sum(unique1) OVER (PARTITION BY four ORDER BY unique1 ASC NULLS FIRST RANGE BETWEEN 5 PRECEDING AND 6 FOLLOWING):bigint,unique1:int,four:int>\n+-- !query 57 output\n+10\t3\t3\n+10\t7\t3\n+12\t4\t0\n+12\t8\t0\n+14\t9\t1\n+15\t5\t1\n+4\t0\t0\n+6\t1\t1\n+8\t2\t2\n+8\t6\t2\n+\n+\n+-- !query 58\n+select last(salary) over(order by salary range between 1000 preceding and 1000 following),\n+lag(salary) over(order by salary range between 1000 preceding and 1000 following),\n+salary from empsalary\n+-- !query 58 schema\n+struct<>\n+-- !query 58 output\n+org.apache.spark.sql.AnalysisException\n+Window Frame specifiedwindowframe(RangeFrame, -1000, 1000) must match the required frame specifiedwindowframe(RowFrame, -1, -1);\n+\n+\n+-- !query 59\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls first range between 2 preceding and 2 following)\n+-- !query 59 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 59 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t5\n+4\t4\t2\t5\n+5\t5\t3\t5\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 60\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id asc nulls last range between 2 preceding and 2 following)\n+-- !query 60 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id ASC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 60 output\n+1\t1\t1\t3\n+2\t2\t1\t4\n+3\t3\t1\t5\n+4\t4\t2\t5\n+5\t5\t3\t5\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 61\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls first range between 2 preceding and 2 following)\n+-- !query 61 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS FIRST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 61 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t5\t1\n+4\t4\t5\t2\n+5\t5\t5\t3\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 62\n+select ss.id, ss.y,\n+       first(ss.y) over w,\n+       last(ss.y) over w\n+from\n+  (select x.id, x.id as y from range(1,6) as x\n+   union all select null, 42\n+   union all select null, 43) ss\n+window w as\n+  (order by ss.id desc nulls last range between 2 preceding and 2 following)\n+-- !query 62 schema\n+struct<id:bigint,y:bigint,first(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint,last(y, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CAST((- 2) AS BIGINT) FOLLOWING AND CAST(2 AS BIGINT) FOLLOWING):bigint>\n+-- !query 62 output\n+1\t1\t3\t1\n+2\t2\t4\t1\n+3\t3\t5\t1\n+4\t4\t5\t2\n+5\t5\t5\t3\n+NULL\t42\t42\t43\n+NULL\t43\t42\t43\n+\n+\n+-- !query 63\n+select x.id, last(x.id) over (order by x.id range between current row and 2147450884 following)\n+from range(32764, 32767) x\n+-- !query 63 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(2147450884 AS BIGINT) FOLLOWING):bigint>\n+-- !query 63 output\n+32764\t32766\n+32765\t32766\n+32766\t32766\n+\n+\n+-- !query 64\n+select x.id, last(x.id) over (order by x.id desc range between current row and 2147450885 following)\n+from range(-32766, -32765) x\n+-- !query 64 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(2147450885 AS BIGINT) FOLLOWING):bigint>\n+-- !query 64 output\n+-32766\t-32766\n+\n+\n+-- !query 65\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(2147483644, 2147483647) x\n+-- !query 65 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 65 output\n+2147483644\t2147483646\n+2147483645\t2147483646\n+2147483646\t2147483646\n+\n+\n+-- !query 66\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-2147483646, -2147483645) x\n+-- !query 66 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 66 output\n+-2147483646\t-2147483646\n+\n+\n+-- !query 67\n+select x.id, last(x.id) over (order by x.id range between current row and 4 following)\n+from range(9223372036854775804, 9223372036854775807) x\n+-- !query 67 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id ASC NULLS FIRST RANGE BETWEEN CURRENT ROW AND CAST(4 AS BIGINT) FOLLOWING):bigint>\n+-- !query 67 output\n+9223372036854775804\tNULL\n+9223372036854775805\tNULL\n+9223372036854775806\tNULL\n+\n+\n+-- !query 68\n+select x.id, last(x.id) over (order by x.id desc range between current row and 5 following)\n+from range(-9223372036854775806, -9223372036854775805) x\n+-- !query 68 schema\n+struct<id:bigint,last(id, false) OVER (ORDER BY id DESC NULLS LAST RANGE BETWEEN CURRENT ROW AND CAST(5 AS BIGINT) FOLLOWING):bigint>\n+-- !query 68 output\n+-9223372036854775806\tNULL\n+\n+\n+-- !query 69\n+create table numerics (\n+    id int,\n+    f_float4 float,\n+    f_float8 float,\n+    f_numeric int\n+) using parquet\n+-- !query 69 schema\n+struct<>\n+-- !query 69 output\n+\n+\n+\n+-- !query 70\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+(8, 'infinity', 'infinity', '1000'),\n+(9, 'NaN', 'NaN', 'NaN')\n+-- !query 70 schema\n+struct<>\n+-- !query 70 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+mismatched input '(' expecting {<EOF>, ',', '.', '[', 'ADD', 'AFTER', 'ALL', 'ALTER', 'ANALYZE', 'AND', 'ANY', 'ARCHIVE', 'ARRAY', 'AS', 'ASC', 'AT', 'AUTHORIZATION', 'BETWEEN', 'BOTH', 'BUCKET', 'BUCKETS', 'BY', 'CACHE', 'CASCADE', 'CASE', 'CAST', 'CHANGE', 'CHECK', 'CLEAR', 'CLUSTER', 'CLUSTERED', 'CODEGEN', 'COLLATE', 'COLLECTION', 'COLUMN', 'COLUMNS', 'COMMENT', 'COMMIT', 'COMPACT', 'COMPACTIONS', 'COMPUTE', 'CONCATENATE', 'CONSTRAINT', 'COST', 'CREATE', 'CUBE', 'CURRENT', 'CURRENT_DATE', 'CURRENT_TIME', 'CURRENT_TIMESTAMP', 'CURRENT_USER', 'DATA', 'DATABASE', DATABASES, 'DAY', 'DAYS', 'DBPROPERTIES', 'DEFINED', 'DELETE', 'DELIMITED', 'DESC', 'DESCRIBE', 'DFS', 'DIRECTORIES', 'DIRECTORY', 'DISTINCT', 'DISTRIBUTE', 'DROP', 'ELSE', 'END', 'ESCAPED', 'EXCEPT', 'EXCHANGE', 'EXISTS', 'EXPLAIN', 'EXPORT', 'EXTENDED', 'EXTERNAL', 'EXTRACT', 'FALSE', 'FETCH', 'FIELDS', 'FILEFORMAT', 'FIRST', 'FIRST_VALUE', 'FOLLOWING', 'FOR', 'FOREIGN', 'FORMAT', 'FORMATTED', 'FROM', 'FUNCTION', 'FUNCTIONS', 'GLOBAL', 'GRANT', 'GROUP', 'GROUPING', 'HAVING', 'HOUR', 'HOURS', 'IF', 'IGNORE', 'IMPORT', 'IN', 'INDEX', 'INDEXES', 'INPATH', 'INPUTFORMAT', 'INSERT', 'INTERSECT', 'INTERVAL', 'INTO', 'IS', 'ITEMS', 'KEYS', 'LAST', 'LAST_VALUE', 'LATERAL', 'LAZY', 'LEADING', 'LIKE', 'LIMIT', 'LINES', 'LIST', 'LOAD', 'LOCAL', 'LOCATION', 'LOCK', 'LOCKS', 'LOGICAL', 'MACRO', 'MAP', 'MICROSECOND', 'MICROSECONDS', 'MILLISECOND', 'MILLISECONDS', 'MINUTE', 'MINUTES', 'MONTH', 'MONTHS', 'MSCK', 'NO', NOT, 'NULL', 'NULLS', 'OF', 'ONLY', 'OPTION', 'OPTIONS', 'OR', 'ORDER', 'OUT', 'OUTER', 'OUTPUTFORMAT', 'OVER', 'OVERLAPS', 'OVERLAY', 'OVERWRITE', 'PARTITION', 'PARTITIONED', 'PARTITIONS', 'PERCENT', 'PIVOT', 'PLACING', 'POSITION', 'PRECEDING', 'PRIMARY', 'PRINCIPALS', 'PURGE', 'QUERY', 'RANGE', 'RECORDREADER', 'RECORDWRITER', 'RECOVER', 'REDUCE', 'REFERENCES', 'REFRESH', 'RENAME', 'REPAIR', 'REPLACE', 'RESET', 'RESPECT', 'RESTRICT', 'REVOKE', RLIKE, 'ROLE', 'ROLES', 'ROLLBACK', 'ROLLUP', 'ROW', 'ROWS', 'SCHEMA', 'SECOND', 'SECONDS', 'SELECT', 'SEPARATED', 'SERDE', 'SERDEPROPERTIES', 'SESSION_USER', 'SET', 'MINUS', 'SETS', 'SHOW', 'SKEWED', 'SOME', 'SORT', 'SORTED', 'START', 'STATISTICS', 'STORED', 'STRATIFY', 'STRUCT', 'SUBSTR', 'SUBSTRING', 'TABLE', 'TABLES', 'TABLESAMPLE', 'TBLPROPERTIES', TEMPORARY, 'TERMINATED', 'THEN', 'TO', 'TOUCH', 'TRAILING', 'TRANSACTION', 'TRANSACTIONS', 'TRANSFORM', 'TRIM', 'TRUE', 'TRUNCATE', 'TYPE', 'UNARCHIVE', 'UNBOUNDED', 'UNCACHE', 'UNION', 'UNIQUE', 'UNKNOWN', 'UNLOCK', 'UNSET', 'USE', 'USER', 'VALUES', 'VIEW', 'WEEK', 'WEEKS', 'WHEN', 'WHERE', 'WINDOW', 'WITH', 'YEAR', 'YEARS', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '||', '^', IDENTIFIER, BACKQUOTED_IDENTIFIER}(line 9, pos 0)\n+\n+== SQL ==\n+insert into numerics values\n+(1, -3, -3, -3),\n+(2, -1, -1, -1),\n+(3, 0, 0, 0),\n+(4, 1.1, 1.1, 1.1),\n+(5, 1.12, 1.12, 1.12),\n+(6, 2, 2, 2),\n+(7, 100, 100, 100)\n+(8, 'infinity', 'infinity', '1000'),\n+^^^\n+(9, 'NaN', 'NaN', 'NaN')\n+\n+\n+-- !query 71\n+(0, '-infinity', '-infinity', '-1000')\n+-- !query 71 schema\n+struct<>\n+-- !query 71 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+mismatched input '0' expecting {'(', 'FROM', 'MAP', 'REDUCE', 'SELECT', 'TABLE', 'VALUES', 'WITH'}(line 1, pos 1)\n+\n+== SQL ==\n+(0, '-infinity', '-infinity', '-1000')\n+-^^^\n+\n+\n+-- !query 72\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1 following)\n+-- !query 72 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 72 output\n+\n+\n+\n+-- !query 73\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1 preceding and 1.1 following)\n+-- !query 73 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 73 output\n+\n+\n+\n+-- !query 74\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 74 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 74 output\n+\n+\n+\n+-- !query 75\n+select id, f_float4, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float4 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 75 schema\n+struct<id:int,f_float4:float,first(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float4 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 75 output\n+\n+\n+\n+-- !query 76\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1 following)\n+-- !query 76 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1 AS FLOAT) FOLLOWING):int>\n+-- !query 76 output\n+\n+\n+\n+-- !query 77\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1 preceding and 1.1 following)\n+-- !query 77 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS FLOAT) FOLLOWING AND CAST(1.1 AS FLOAT) FOLLOWING):int>\n+-- !query 77 output\n+\n+\n+\n+-- !query 78\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             'inf' preceding and 'inf' following)\n+-- !query 78 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- CAST(inf AS DOUBLE)) AS FLOAT) FOLLOWING AND CAST(inf AS FLOAT) FOLLOWING):int>\n+-- !query 78 output\n+\n+\n+\n+-- !query 79\n+select id, f_float8, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_float8 range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 79 schema\n+struct<id:int,f_float8:float,first(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_float8 ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS FLOAT) FOLLOWING AND CAST(NaN AS FLOAT) FOLLOWING):int>\n+-- !query 79 output\n+\n+\n+\n+-- !query 80\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1 following)\n+-- !query 80 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING):int>\n+-- !query 80 output\n+\n+\n+\n+-- !query 81\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 81 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 81 output\n+\n+\n+\n+-- !query 82\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1 preceding and 1.1 following)\n+-- !query 82 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN 1 PRECEDING AND CAST(1.1 AS INT) FOLLOWING):int>\n+-- !query 82 output\n+\n+\n+\n+-- !query 83\n+select id, f_numeric, first(id) over w, last(id) over w\n+from numerics\n+window w as (order by f_numeric range between\n+             1.1 preceding and 'NaN' following)\n+-- !query 83 schema\n+struct<id:int,f_numeric:int,first(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int,last(id, false) OVER (ORDER BY f_numeric ASC NULLS FIRST RANGE BETWEEN CAST((- 1.1) AS INT) FOLLOWING AND CAST(NaN AS INT) FOLLOWING):int>\n+-- !query 83 output\n+\n+\n+\n+-- !query 84\n+create table datetimes (\n+    id int,\n+    f_time timestamp,\n+    f_timetz timestamp,\n+    f_interval timestamp,\n+    f_timestamptz timestamp,\n+    f_timestamp timestamp\n+) using parquet\n+-- !query 84 schema\n+struct<>\n+-- !query 84 output\n+\n+\n+\n+-- !query 85\n+insert into datetimes values\n+(1, '11:00', '11:00 BST', '1 year', '2000-10-19 10:23:54+01', '2000-10-19 10:23:54'),\n+(2, '12:00', '12:00 BST', '2 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(3, '13:00', '13:00 BST', '3 years', '2001-10-19 10:23:54+01', '2001-10-19 10:23:54'),\n+(4, '14:00', '14:00 BST', '4 years', '2002-10-19 10:23:54+01', '2002-10-19 10:23:54'),\n+(5, '15:00', '15:00 BST', '5 years', '2003-10-19 10:23:54+01', '2003-10-19 10:23:54'),\n+(6, '15:00', '15:00 BST', '5 years', '2004-10-19 10:23:54+01', '2004-10-19 10:23:54'),\n+(7, '17:00', '17:00 BST', '7 years', '2005-10-19 10:23:54+01', '2005-10-19 10:23:54'),\n+(8, '18:00', '18:00 BST', '8 years', '2006-10-19 10:23:54+01', '2006-10-19 10:23:54'),\n+(9, '19:00', '19:00 BST', '9 years', '2007-10-19 10:23:54+01', '2007-10-19 10:23:54'),\n+(10, '20:00', '20:00 BST', '10 years', '2008-10-19 10:23:54+01', '2008-10-19 10:23:54')\n+-- !query 85 schema\n+struct<>\n+-- !query 85 output\n+\n+\n+\n+-- !query 86\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 36, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 86 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 86 output\n+1\t4\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+3\t9\n+31\t93\n+33\t99\n+35\t68\n+5\t15\n+7\t21\n+9\t27\n+\n+\n+-- !query 87\n+WITH cte (x) AS (\n+        SELECT * FROM range(1, 36, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 87 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 87 output\n+1\t1\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+3\t3\n+31\t31\n+33\t33\n+35\t35\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 88\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 50, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x rows between 1 preceding and 1 following)\n+-- !query 88 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING):bigint>\n+-- !query 88 output\n+1\t2\n+1\t3\n+1\t7\n+11\t33\n+13\t39\n+15\t45\n+17\t51\n+19\t57\n+21\t63\n+23\t69\n+25\t75\n+27\t81\n+29\t87\n+31\t93\n+33\t99\n+35\t105\n+37\t111\n+39\t117\n+41\t123\n+43\t129\n+45\t135\n+47\t141\n+49\t96\n+5\t13\n+7\t21\n+9\t27\n+\n+\n+-- !query 89\n+WITH cte (x) AS (\n+        select 1 union all select 1 union all select 1 union all\n+        SELECT * FROM range(5, 50, 2)\n+)\n+SELECT x, (sum(x) over w)\n+FROM cte\n+WINDOW w AS (ORDER BY x range between 1 preceding and 1 following)\n+-- !query 89 schema\n+struct<x:bigint,sum(x) OVER (ORDER BY x ASC NULLS FIRST RANGE BETWEEN CAST((- 1) AS BIGINT) FOLLOWING AND CAST(1 AS BIGINT) FOLLOWING):bigint>\n+-- !query 89 output\n+1\t3\n+1\t3\n+1\t3\n+11\t11\n+13\t13\n+15\t15\n+17\t17\n+19\t19\n+21\t21\n+23\t23\n+25\t25\n+27\t27\n+29\t29\n+31\t31\n+33\t33\n+35\t35\n+37\t37\n+39\t39\n+41\t41\n+43\t43\n+45\t45\n+47\t47\n+49\t49\n+5\t5\n+7\t7\n+9\t9\n+\n+\n+-- !query 90\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 UNION ALL SELECT * FROM tenk2)s LIMIT 0\n+-- !query 90 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 90 output\n+\n+\n+\n+-- !query 91\n+create table t1 (f1 int, f2 int) using parquet\n+-- !query 91 schema\n+struct<>\n+-- !query 91 output\n+\n+\n+\n+-- !query 92\n+insert into t1 values (1,1),(1,2),(2,2)\n+-- !query 92 schema\n+struct<>\n+-- !query 92 output\n+\n+\n+\n+-- !query 93\n+select f1, sum(f1) over (partition by f1\n+                         range between 1 preceding and 1 following)\n+from t1 where f1 = f2\n+-- !query 93 schema\n+struct<>\n+-- !query 93 output\n+org.apache.spark.sql.AnalysisException\n+cannot resolve '(PARTITION BY default.t1.`f1` RANGE BETWEEN 1 PRECEDING AND 1 FOLLOWING)' due to data type mismatch: A range window frame cannot be used in an unordered window specification.; line 1 pos 24\n+\n+\n+-- !query 94\n+select f1, sum(f1) over (partition by f1, f1 order by f2\n+range between 2 preceding and 1 preceding)\n+from t1 where f1 = f2\n+-- !query 94 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f1 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 2 PRECEDING AND 1 PRECEDING):bigint>\n+-- !query 94 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 95\n+select f1, sum(f1) over (partition by f1, f2 order by f2\n+range between 1 following and 2 following)\n+from t1 where f1 = f2\n+-- !query 95 schema\n+struct<f1:int,sum(f1) OVER (PARTITION BY f1, f2 ORDER BY f2 ASC NULLS FIRST RANGE BETWEEN 1 FOLLOWING AND 2 FOLLOWING):bigint>\n+-- !query 95 output\n+1\tNULL\n+2\tNULL\n+\n+\n+-- !query 96\n+SELECT rank() OVER (ORDER BY length('abc'))\n+-- !query 96 schema\n+struct<RANK() OVER (ORDER BY length(abc) ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 96 output\n+1\n+\n+\n+-- !query 97\n+SELECT * FROM empsalary WHERE row_number() OVER (ORDER BY salary) < 10\n+-- !query 97 schema\n+struct<>\n+-- !query 97 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 98\n+SELECT * FROM empsalary INNER JOIN tenk1 ON row_number() OVER (ORDER BY salary) < 10\n+-- !query 98 schema\n+struct<>\n+-- !query 98 output\n+org.apache.spark.sql.AnalysisException\n+\n+The query operator `Join` contains one or more unsupported\n+expression types Aggregate, Window or Generate.\n+Invalid expressions: [row_number() OVER (ORDER BY default.empsalary.`salary` ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)];\n+\n+\n+-- !query 99\n+SELECT rank() OVER (ORDER BY 1), count(*) FROM empsalary GROUP BY 1\n+-- !query 99 schema\n+struct<>\n+-- !query 99 output\n+org.apache.spark.sql.AnalysisException\n+\n+The query operator `Aggregate` contains one or more unsupported\n+expression types Aggregate, Window or Generate.\n+Invalid expressions: [RANK() OVER (ORDER BY 1 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)];\n+\n+\n+-- !query 100\n+SELECT * FROM rank() OVER (ORDER BY random())\n+-- !query 100 schema\n+struct<>\n+-- !query 100 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+no viable alternative at input 'ORDER'(line 1, pos 27)\n+\n+== SQL ==\n+SELECT * FROM rank() OVER (ORDER BY random())\n+---------------------------^^^\n+\n+\n+-- !query 101\n+SELECT * FROM empsalary WHERE (rank() OVER (ORDER BY random())) > 10\n+-- !query 101 schema\n+struct<>\n+-- !query 101 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 102\n+SELECT * FROM empsalary WHERE rank() OVER (ORDER BY random())\n+-- !query 102 schema\n+struct<>\n+-- !query 102 output\n+org.apache.spark.sql.AnalysisException\n+It is not allowed to use window functions inside WHERE and HAVING clauses;\n+\n+\n+-- !query 103\n+select rank() OVER (PARTITION BY four, ORDER BY ten) FROM tenk1\n+-- !query 103 schema\n+struct<>\n+-- !query 103 output\n+org.apache.spark.sql.catalyst.parser.ParseException\n+\n+no viable alternative at input 'ORDER'(line 1, pos 39)\n+\n+== SQL ==\n+select rank() OVER (PARTITION BY four, ORDER BY ten) FROM tenk1\n+---------------------------------------^^^\n+\n+\n+-- !query 104\n+SELECT range(1, 100) OVER () FROM empsalary\n+-- !query 104 schema\n+struct<>\n+-- !query 104 output\n+org.apache.spark.sql.AnalysisException\n+Undefined function: 'range'. This function is neither a registered temporary function nor a permanent function registered in the database 'default'.; line 1 pos 7",
    "line": 1687
  }],
  "prId": 24881
}]