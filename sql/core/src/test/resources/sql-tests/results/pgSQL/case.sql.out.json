[{
  "comments": [{
    "author": {
      "login": "wangyum"
    },
    "body": "PostgresSQL throws `ERROR:  division by zero`: https://github.com/postgres/postgres/blob/REL_12_BETA1/src/test/regress/expected/case.out#L98-L99\r\nI create SPARK-27923 to track this: https://issues.apache.org/jira/browse/SPARK-27923",
    "commit": "89e3a9e935279fcc1cd3f8555057ff66ff40192b",
    "createdAt": "2019-06-03T14:18:11Z",
    "diffHunk": "@@ -0,0 +1,399 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 35\n+\n+\n+-- !query 0\n+set spark.sql.crossJoin.enabled=true\n+-- !query 0 schema\n+struct<key:string,value:string>\n+-- !query 0 output\n+spark.sql.crossJoin.enabled\ttrue\n+\n+\n+-- !query 1\n+CREATE TABLE CASE_TBL (\n+  i integer,\n+  f double\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+CREATE TABLE CASE2_TBL (\n+  i integer,\n+  j integer\n+) USING parquet\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+INSERT INTO CASE_TBL VALUES (1, 10.1)\n+-- !query 3 schema\n+struct<>\n+-- !query 3 output\n+\n+\n+\n+-- !query 4\n+INSERT INTO CASE_TBL VALUES (2, 20.2)\n+-- !query 4 schema\n+struct<>\n+-- !query 4 output\n+\n+\n+\n+-- !query 5\n+INSERT INTO CASE_TBL VALUES (3, -30.3)\n+-- !query 5 schema\n+struct<>\n+-- !query 5 output\n+\n+\n+\n+-- !query 6\n+INSERT INTO CASE_TBL VALUES (4, NULL)\n+-- !query 6 schema\n+struct<>\n+-- !query 6 output\n+\n+\n+\n+-- !query 7\n+INSERT INTO CASE2_TBL VALUES (1, -1)\n+-- !query 7 schema\n+struct<>\n+-- !query 7 output\n+\n+\n+\n+-- !query 8\n+INSERT INTO CASE2_TBL VALUES (2, -2)\n+-- !query 8 schema\n+struct<>\n+-- !query 8 output\n+\n+\n+\n+-- !query 9\n+INSERT INTO CASE2_TBL VALUES (3, -3)\n+-- !query 9 schema\n+struct<>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+INSERT INTO CASE2_TBL VALUES (2, -4)\n+-- !query 10 schema\n+struct<>\n+-- !query 10 output\n+\n+\n+\n+-- !query 11\n+INSERT INTO CASE2_TBL VALUES (1, NULL)\n+-- !query 11 schema\n+struct<>\n+-- !query 11 output\n+\n+\n+\n+-- !query 12\n+INSERT INTO CASE2_TBL VALUES (NULL, -6)\n+-- !query 12 schema\n+struct<>\n+-- !query 12 output\n+\n+\n+\n+-- !query 13\n+SELECT '3' AS `One`,\n+  CASE\n+    WHEN 1 < 2 THEN 3\n+  END AS `Simple WHEN`\n+-- !query 13 schema\n+struct<One:string,Simple WHEN:int>\n+-- !query 13 output\n+3\t3\n+\n+\n+-- !query 14\n+SELECT '<NULL>' AS `One`,\n+  CASE\n+    WHEN 1 > 2 THEN 3\n+  END AS `Simple default`\n+-- !query 14 schema\n+struct<One:string,Simple default:int>\n+-- !query 14 output\n+<NULL>\tNULL\n+\n+\n+-- !query 15\n+SELECT '3' AS `One`,\n+  CASE\n+    WHEN 1 < 2 THEN 3\n+    ELSE 4\n+  END AS `Simple ELSE`\n+-- !query 15 schema\n+struct<One:string,Simple ELSE:int>\n+-- !query 15 output\n+3\t3\n+\n+\n+-- !query 16\n+SELECT '4' AS `One`,\n+  CASE\n+    WHEN 1 > 2 THEN 3\n+    ELSE 4\n+  END AS `ELSE default`\n+-- !query 16 schema\n+struct<One:string,ELSE default:int>\n+-- !query 16 output\n+4\t4\n+\n+\n+-- !query 17\n+SELECT '6' AS `One`,\n+  CASE\n+    WHEN 1 > 2 THEN 3\n+    WHEN 4 < 5 THEN 6\n+    ELSE 7\n+  END AS `Two WHEN with default`\n+-- !query 17 schema\n+struct<One:string,Two WHEN with default:int>\n+-- !query 17 output\n+6\t6\n+\n+\n+-- !query 18\n+SELECT CASE WHEN 1=0 THEN 1/0 WHEN 1=1 THEN 1 ELSE 2/0 END\n+-- !query 18 schema\n+struct<CASE WHEN (1 = 0) THEN (CAST(1 AS DOUBLE) / CAST(0 AS DOUBLE)) WHEN (1 = 1) THEN CAST(1 AS DOUBLE) ELSE (CAST(2 AS DOUBLE) / CAST(0 AS DOUBLE)) END:double>\n+-- !query 18 output\n+1.0\n+\n+\n+-- !query 19\n+SELECT CASE 1 WHEN 0 THEN 1/0 WHEN 1 THEN 1 ELSE 2/0 END\n+-- !query 19 schema\n+struct<CASE WHEN (1 = 0) THEN (CAST(1 AS DOUBLE) / CAST(0 AS DOUBLE)) WHEN (1 = 1) THEN CAST(1 AS DOUBLE) ELSE (CAST(2 AS DOUBLE) / CAST(0 AS DOUBLE)) END:double>\n+-- !query 19 output\n+1.0\n+\n+\n+-- !query 20\n+SELECT CASE WHEN i > 100 THEN 1/0 ELSE 0 END FROM case_tbl\n+-- !query 20 schema\n+struct<CASE WHEN (i > 100) THEN (CAST(1 AS DOUBLE) / CAST(0 AS DOUBLE)) ELSE CAST(0 AS DOUBLE) END:double>\n+-- !query 20 output",
    "line": 196
  }],
  "prId": 24782
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Your comment https://github.com/apache/spark/pull/24782/files#r289867687 should be moved to here. ",
    "commit": "89e3a9e935279fcc1cd3f8555057ff66ff40192b",
    "createdAt": "2019-06-11T07:48:58Z",
    "diffHunk": "@@ -0,0 +1,425 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 37\n+\n+\n+-- !query 0\n+set spark.sql.crossJoin.enabled=true\n+-- !query 0 schema\n+struct<key:string,value:string>\n+-- !query 0 output\n+spark.sql.crossJoin.enabled\ttrue\n+\n+\n+-- !query 1\n+CREATE TABLE CASE_TBL (\n+  i integer,\n+  f double\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+CREATE TABLE CASE2_TBL (\n+  i integer,\n+  j integer\n+) USING parquet\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+INSERT INTO CASE_TBL VALUES (1, 10.1)\n+-- !query 3 schema\n+struct<>\n+-- !query 3 output\n+\n+\n+\n+-- !query 4\n+INSERT INTO CASE_TBL VALUES (2, 20.2)\n+-- !query 4 schema\n+struct<>\n+-- !query 4 output\n+\n+\n+\n+-- !query 5\n+INSERT INTO CASE_TBL VALUES (3, -30.3)\n+-- !query 5 schema\n+struct<>\n+-- !query 5 output\n+\n+\n+\n+-- !query 6\n+INSERT INTO CASE_TBL VALUES (4, NULL)\n+-- !query 6 schema\n+struct<>\n+-- !query 6 output\n+\n+\n+\n+-- !query 7\n+INSERT INTO CASE2_TBL VALUES (1, -1)\n+-- !query 7 schema\n+struct<>\n+-- !query 7 output\n+\n+\n+\n+-- !query 8\n+INSERT INTO CASE2_TBL VALUES (2, -2)\n+-- !query 8 schema\n+struct<>\n+-- !query 8 output\n+\n+\n+\n+-- !query 9\n+INSERT INTO CASE2_TBL VALUES (3, -3)\n+-- !query 9 schema\n+struct<>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+INSERT INTO CASE2_TBL VALUES (2, -4)\n+-- !query 10 schema\n+struct<>\n+-- !query 10 output\n+\n+\n+\n+-- !query 11\n+INSERT INTO CASE2_TBL VALUES (1, NULL)\n+-- !query 11 schema\n+struct<>\n+-- !query 11 output\n+\n+\n+\n+-- !query 12\n+INSERT INTO CASE2_TBL VALUES (NULL, -6)\n+-- !query 12 schema\n+struct<>\n+-- !query 12 output\n+\n+\n+\n+-- !query 13\n+SELECT '3' AS `One`,\n+  CASE\n+    WHEN 1 < 2 THEN 3\n+  END AS `Simple WHEN`\n+-- !query 13 schema\n+struct<One:string,Simple WHEN:int>\n+-- !query 13 output\n+3\t3\n+\n+\n+-- !query 14\n+SELECT '<NULL>' AS `One`,\n+  CASE\n+    WHEN 1 > 2 THEN 3\n+  END AS `Simple default`\n+-- !query 14 schema\n+struct<One:string,Simple default:int>\n+-- !query 14 output\n+<NULL>\tNULL\n+\n+\n+-- !query 15\n+SELECT '3' AS `One`,\n+  CASE\n+    WHEN 1 < 2 THEN 3\n+    ELSE 4\n+  END AS `Simple ELSE`\n+-- !query 15 schema\n+struct<One:string,Simple ELSE:int>\n+-- !query 15 output\n+3\t3\n+\n+\n+-- !query 16\n+SELECT '4' AS `One`,\n+  CASE\n+    WHEN 1 > 2 THEN 3\n+    ELSE 4\n+  END AS `ELSE default`\n+-- !query 16 schema\n+struct<One:string,ELSE default:int>\n+-- !query 16 output\n+4\t4\n+\n+\n+-- !query 17\n+SELECT '6' AS `One`,\n+  CASE\n+    WHEN 1 > 2 THEN 3\n+    WHEN 4 < 5 THEN 6\n+    ELSE 7\n+  END AS `Two WHEN with default`\n+-- !query 17 schema\n+struct<One:string,Two WHEN with default:int>\n+-- !query 17 output\n+6\t6\n+\n+\n+-- !query 18\n+SELECT '7' AS `None`,\n+  CASE WHEN rand() < 0 THEN 1\n+  END AS `NULL on no matches`\n+-- !query 18 schema\n+struct<None:string,NULL on no matches:int>\n+-- !query 18 output\n+7\tNULL\n+\n+\n+-- !query 19\n+SELECT CASE WHEN 1=0 THEN 1/0 WHEN 1=1 THEN 1 ELSE 2/0 END\n+-- !query 19 schema\n+struct<CASE WHEN (1 = 0) THEN (CAST(1 AS DOUBLE) / CAST(0 AS DOUBLE)) WHEN (1 = 1) THEN CAST(1 AS DOUBLE) ELSE (CAST(2 AS DOUBLE) / CAST(0 AS DOUBLE)) END:double>\n+-- !query 19 output\n+1.0\n+\n+\n+-- !query 20\n+SELECT CASE 1 WHEN 0 THEN 1/0 WHEN 1 THEN 1 ELSE 2/0 END\n+-- !query 20 schema\n+struct<CASE WHEN (1 = 0) THEN (CAST(1 AS DOUBLE) / CAST(0 AS DOUBLE)) WHEN (1 = 1) THEN CAST(1 AS DOUBLE) ELSE (CAST(2 AS DOUBLE) / CAST(0 AS DOUBLE)) END:double>\n+-- !query 20 output\n+1.0\n+\n+\n+-- !query 21\n+SELECT CASE WHEN i > 100 THEN 1/0 ELSE 0 END FROM case_tbl",
    "line": 201
  }],
  "prId": 24782
}]