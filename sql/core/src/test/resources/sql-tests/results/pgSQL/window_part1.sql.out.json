[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "This test seems failing when it's ran via the thrift server. Can you check the cause and exclude this in the test? cc @wangyum",
    "commit": "1ac60f1dbd23ae5c76151578e4a49e48be5cc043",
    "createdAt": "2019-09-29T14:07:53Z",
    "diffHunk": "@@ -0,0 +1,962 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 57\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW tenk2 AS SELECT * FROM tenk1\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+CREATE TABLE empsalary (\n+    depname string,\n+    empno integer,\n+    salary int,\n+    enroll_date date\n+) USING parquet\n+-- !query 1 schema\n+struct<>\n+-- !query 1 output\n+\n+\n+\n+-- !query 2\n+INSERT INTO empsalary VALUES\n+('develop', 10, 5200, '2007-08-01'),\n+('sales', 1, 5000, '2006-10-01'),\n+('personnel', 5, 3500, '2007-12-10'),\n+('sales', 4, 4800, '2007-08-08'),\n+('personnel', 2, 3900, '2006-12-23'),\n+('develop', 7, 4200, '2008-01-01'),\n+('develop', 9, 4500, '2008-01-01'),\n+('sales', 3, 4800, '2007-08-01'),\n+('develop', 8, 6000, '2006-10-01'),\n+('develop', 11, 5200, '2007-08-15')\n+-- !query 2 schema\n+struct<>\n+-- !query 2 output\n+\n+\n+\n+-- !query 3\n+SELECT depname, empno, salary, sum(salary) OVER (PARTITION BY depname) FROM empsalary ORDER BY depname, salary\n+-- !query 3 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 3 output\n+develop\t7\t4200\t25100\n+develop\t9\t4500\t25100\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t8\t6000\t25100\n+personnel\t5\t3500\t7400\n+personnel\t2\t3900\t7400\n+sales\t4\t4800\t14600\n+sales\t3\t4800\t14600\n+sales\t1\t5000\t14600\n+\n+\n+-- !query 4\n+SELECT depname, empno, salary, rank() OVER (PARTITION BY depname ORDER BY salary) FROM empsalary\n+-- !query 4 schema\n+struct<depname:string,empno:int,salary:int,RANK() OVER (PARTITION BY depname ORDER BY salary ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 4 output\n+develop\t10\t5200\t3\n+develop\t11\t5200\t3\n+develop\t7\t4200\t1\n+develop\t8\t6000\t5\n+develop\t9\t4500\t2\n+personnel\t2\t3900\t2\n+personnel\t5\t3500\t1\n+sales\t1\t5000\t3\n+sales\t3\t4800\t1\n+sales\t4\t4800\t1\n+\n+\n+-- !query 5\n+SELECT four, ten, SUM(SUM(four)) OVER (PARTITION BY four), AVG(ten) FROM tenk1\n+GROUP BY four, ten ORDER BY four, ten\n+-- !query 5 schema\n+struct<four:int,ten:int,sum(sum(CAST(four AS BIGINT))) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,avg(ten):double>\n+-- !query 5 output\n+0\t0\t0\t0.0\n+0\t2\t0\t2.0\n+0\t4\t0\t4.0\n+0\t6\t0\t6.0\n+0\t8\t0\t8.0\n+1\t1\t2500\t1.0\n+1\t3\t2500\t3.0\n+1\t5\t2500\t5.0\n+1\t7\t2500\t7.0\n+1\t9\t2500\t9.0\n+2\t0\t5000\t0.0\n+2\t2\t5000\t2.0\n+2\t4\t5000\t4.0\n+2\t6\t5000\t6.0\n+2\t8\t5000\t8.0\n+3\t1\t7500\t1.0\n+3\t3\t7500\t3.0\n+3\t5\t7500\t5.0\n+3\t7\t7500\t7.0\n+3\t9\t7500\t9.0\n+\n+\n+-- !query 6\n+SELECT depname, empno, salary, sum(salary) OVER w FROM empsalary WINDOW w AS (PARTITION BY depname)\n+-- !query 6 schema\n+struct<depname:string,empno:int,salary:int,sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 6 output\n+develop\t10\t5200\t25100\n+develop\t11\t5200\t25100\n+develop\t7\t4200\t25100\n+develop\t8\t6000\t25100\n+develop\t9\t4500\t25100\n+personnel\t2\t3900\t7400\n+personnel\t5\t3500\t7400\n+sales\t1\t5000\t14600\n+sales\t3\t4800\t14600\n+sales\t4\t4800\t14600\n+\n+\n+-- !query 7\n+SELECT COUNT(*) OVER () FROM tenk1 WHERE unique2 < 10\n+-- !query 7 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 7 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 8\n+SELECT COUNT(*) OVER w FROM tenk1 WHERE unique2 < 10 WINDOW w AS ()\n+-- !query 8 schema\n+struct<count(1) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 8 output\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+10\n+\n+\n+-- !query 9\n+SELECT four FROM tenk1 WHERE FALSE WINDOW w AS (PARTITION BY ten)\n+-- !query 9 schema\n+struct<four:int>\n+-- !query 9 output\n+\n+\n+\n+-- !query 10\n+SELECT sum(four) OVER (PARTITION BY ten ORDER BY unique2) AS sum_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 10 schema\n+struct<sum_1:bigint,ten:int,four:int>\n+-- !query 10 output\n+0\t0\t0\n+0\t0\t0\n+0\t4\t0\n+1\t7\t1\n+1\t9\t1\n+2\t0\t2\n+3\t1\t3\n+3\t3\t3\n+4\t1\t1\n+5\t1\t1\n+\n+\n+-- !query 11\n+SELECT row_number() OVER (ORDER BY unique2) FROM tenk1 WHERE unique2 < 10\n+-- !query 11 schema\n+struct<row_number() OVER (ORDER BY unique2 ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 11 output\n+1\n+10\n+2\n+3\n+4\n+5\n+6\n+7\n+8\n+9\n+\n+\n+-- !query 12\n+SELECT rank() OVER (PARTITION BY four ORDER BY ten) AS rank_1, ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 12 schema\n+struct<rank_1:int,ten:int,four:int>\n+-- !query 12 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+4\t9\t1\n+\n+\n+-- !query 13\n+SELECT dense_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 13 schema\n+struct<DENSE_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 13 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+2\t3\t3\n+2\t4\t0\n+2\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 14\n+SELECT percent_rank() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 14 schema\n+struct<PERCENT_RANK() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 14 output\n+0.0\t0\t0\n+0.0\t0\t0\n+0.0\t0\t2\n+0.0\t1\t1\n+0.0\t1\t1\n+0.0\t1\t3\n+0.6666666666666666\t7\t1\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 15\n+SELECT cume_dist() OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 15 schema\n+struct<cume_dist() OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double,ten:int,four:int>\n+-- !query 15 output\n+0.5\t1\t1\n+0.5\t1\t1\n+0.5\t1\t3\n+0.6666666666666666\t0\t0\n+0.6666666666666666\t0\t0\n+0.75\t7\t1\n+1.0\t0\t2\n+1.0\t3\t3\n+1.0\t4\t0\n+1.0\t9\t1\n+\n+\n+-- !query 16\n+SELECT ntile(3) OVER (ORDER BY ten, four), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 16 schema\n+struct<ntile(3) OVER (ORDER BY ten ASC NULLS FIRST, four ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 16 output\n+1\t0\t0\n+1\t0\t0\n+1\t0\t2\n+1\t1\t1\n+2\t1\t1\n+2\t1\t3\n+2\t3\t3\n+3\t4\t0\n+3\t7\t1\n+3\t9\t1\n+\n+\n+-- !query 17\n+SELECT lag(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 17 schema\n+struct<lag(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN -1 FOLLOWING AND -1 FOLLOWING):int,ten:int,four:int>\n+-- !query 17 output\n+0\t0\t0\n+0\t4\t0\n+1\t1\t1\n+1\t3\t3\n+1\t7\t1\n+7\t9\t1\n+NULL\t0\t0\n+NULL\t0\t2\n+NULL\t1\t1\n+NULL\t1\t3\n+\n+\n+-- !query 18\n+SELECT lead(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 18 schema\n+struct<lead(ten, 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 18 output\n+0\t0\t0\n+1\t1\t1\n+3\t1\t3\n+4\t0\t0\n+7\t1\t1\n+9\t7\t1\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 19\n+SELECT lead(ten * 2, 1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 19 schema\n+struct<lead((ten * 2), 1, NULL) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 19 output\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+NULL\t0\t2\n+NULL\t3\t3\n+NULL\t4\t0\n+NULL\t9\t1\n+\n+\n+-- !query 20\n+SELECT lead(ten * 2, 1, -1) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 20 schema\n+struct<lead((ten * 2), 1, -1) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST ROWS BETWEEN 1 FOLLOWING AND 1 FOLLOWING):int,ten:int,four:int>\n+-- !query 20 output\n+-1\t0\t2\n+-1\t3\t3\n+-1\t4\t0\n+-1\t9\t1\n+0\t0\t0\n+14\t1\t1\n+18\t7\t1\n+2\t1\t1\n+6\t1\t3\n+8\t0\t0\n+\n+\n+-- !query 21\n+SELECT first(ten) OVER (PARTITION BY four ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 21 schema\n+struct<first(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 21 output\n+0\t0\t0\n+0\t0\t0\n+0\t0\t2\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t3\t3\n+1\t7\t1\n+1\t9\t1\n+\n+\n+-- !query 22\n+SELECT last(four) OVER (ORDER BY ten), ten, four FROM tenk1 WHERE unique2 < 10\n+-- !query 22 schema\n+struct<last(four, false) OVER (ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,ten:int,four:int>\n+-- !query 22 output\n+0\t4\t0\n+1\t1\t1\n+1\t1\t1\n+1\t1\t3\n+1\t7\t1\n+1\t9\t1\n+2\t0\t0\n+2\t0\t0\n+2\t0\t2\n+3\t3\t3\n+\n+\n+-- !query 23\n+SELECT last(ten) OVER (PARTITION BY four), ten, four FROM\n+(SELECT * FROM tenk1 WHERE unique2 < 10 ORDER BY four, ten)s\n+ORDER BY four, ten\n+-- !query 23 schema\n+struct<last(ten, false) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int,ten:int,four:int>\n+-- !query 23 output\n+4\t0\t0\n+4\t0\t0\n+4\t4\t0\n+9\t1\t1\n+9\t1\t1\n+9\t7\t1\n+9\t9\t1\n+0\t0\t2\n+3\t1\t3\n+3\t3\t3\n+\n+\n+-- !query 24\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER (PARTITION BY two ORDER BY ten) AS wsum\n+FROM tenk1 GROUP BY ten, two\n+-- !query 24 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 24 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 25\n+SELECT count(*) OVER (PARTITION BY four), four FROM (SELECT * FROM tenk1 WHERE two = 1)s WHERE unique2 < 10\n+-- !query 25 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,four:int>\n+-- !query 25 output\n+2\t3\n+2\t3\n+4\t1\n+4\t1\n+4\t1\n+4\t1\n+\n+\n+-- !query 26\n+SELECT (count(*) OVER (PARTITION BY four ORDER BY ten) +\n+  sum(hundred) OVER (PARTITION BY four ORDER BY ten)) AS cntsum\n+  FROM tenk1 WHERE unique2 < 10\n+-- !query 26 schema\n+struct<cntsum:bigint>\n+-- !query 26 output\n+136\n+22\n+22\n+24\n+24\n+51\n+82\n+87\n+92\n+92\n+\n+\n+-- !query 27\n+SELECT * FROM(\n+  SELECT count(*) OVER (PARTITION BY four ORDER BY ten) +\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS total,\n+    count(*) OVER (PARTITION BY four ORDER BY ten) AS fourcount,\n+    sum(hundred) OVER (PARTITION BY two ORDER BY ten) AS twosum\n+    FROM tenk1\n+)sub WHERE total <> fourcount + twosum\n+-- !query 27 schema\n+struct<total:bigint,fourcount:bigint,twosum:bigint>\n+-- !query 27 output\n+\n+\n+\n+-- !query 28\n+SELECT avg(four) OVER (PARTITION BY four ORDER BY thousand / 100) FROM tenk1 WHERE unique2 < 10\n+-- !query 28 schema\n+struct<avg(CAST(four AS BIGINT)) OVER (PARTITION BY four ORDER BY (thousand div 100) ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):double>\n+-- !query 28 output\n+0.0\n+0.0\n+0.0\n+1.0\n+1.0\n+1.0\n+1.0\n+2.0\n+3.0\n+3.0\n+\n+\n+-- !query 29\n+SELECT ten, two, sum(hundred) AS gsum, sum(sum(hundred)) OVER win AS wsum\n+FROM tenk1 GROUP BY ten, two WINDOW win AS (PARTITION BY two ORDER BY ten)\n+-- !query 29 schema\n+struct<ten:int,two:int,gsum:bigint,wsum:bigint>\n+-- !query 29 output\n+0\t0\t45000\t45000\n+1\t1\t46000\t46000\n+2\t0\t47000\t92000\n+3\t1\t48000\t94000\n+4\t0\t49000\t141000\n+5\t1\t50000\t144000\n+6\t0\t51000\t192000\n+7\t1\t52000\t196000\n+8\t0\t53000\t245000\n+9\t1\t54000\t250000\n+\n+\n+-- !query 30\n+SELECT sum(salary),\n+  row_number() OVER (ORDER BY depname),\n+  sum(sum(salary)) OVER (ORDER BY depname DESC)\n+FROM empsalary GROUP BY depname\n+-- !query 30 schema\n+struct<sum(salary):bigint,row_number() OVER (ORDER BY depname ASC NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,sum(sum(CAST(salary AS BIGINT))) OVER (ORDER BY depname DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 30 output\n+14600\t3\t14600\n+25100\t1\t47100\n+7400\t2\t22000\n+\n+\n+-- !query 31\n+SELECT sum(salary) OVER w1, count(*) OVER w2\n+FROM empsalary WINDOW w1 AS (ORDER BY salary), w2 AS (ORDER BY salary)\n+-- !query 31 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,count(1) OVER (ORDER BY salary ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint>\n+-- !query 31 output\n+11600\t3\n+16100\t4\n+25700\t6\n+25700\t6\n+30700\t7\n+3500\t1\n+41100\t9\n+41100\t9\n+47100\t10\n+7400\t2\n+\n+\n+-- !query 32\n+SELECT count(*) OVER (PARTITION BY four) FROM (SELECT * FROM tenk1 WHERE FALSE)s\n+-- !query 32 schema\n+struct<count(1) OVER (PARTITION BY four ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 32 output\n+\n+\n+\n+-- !query 33\n+SELECT sum(salary) OVER w, rank() OVER w FROM empsalary WINDOW w AS (PARTITION BY depname ORDER BY salary DESC)\n+-- !query 33 schema\n+struct<sum(CAST(salary AS BIGINT)) OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,RANK() OVER (PARTITION BY depname ORDER BY salary DESC NULLS LAST ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 33 output\n+14600\t2\n+14600\t2\n+16400\t2\n+16400\t2\n+20900\t4\n+25100\t5\n+3900\t1\n+5000\t1\n+6000\t1\n+7400\t2\n+\n+\n+-- !query 34\n+SET spark.sql.parser.ansi.enabled=false\n+-- !query 34 schema\n+struct<key:string,value:string>\n+-- !query 34 output\n+spark.sql.parser.ansi.enabled\tfalse\n+\n+\n+-- !query 35\n+SELECT empno, depname, salary, bonus, depadj, MIN(bonus) OVER (ORDER BY empno), MAX(depadj) OVER () FROM(\n+SELECT *,\n+  CASE WHEN enroll_date < '2008-01-01' THEN 2008 - extract(year FROM enroll_date) END * 500 AS bonus,\n+  CASE WHEN\n+    AVG(salary) OVER (PARTITION BY depname) < salary\n+    THEN 200 END AS depadj FROM empsalary\n+  )s\n+-- !query 35 schema\n+struct<empno:int,depname:string,salary:int,bonus:int,depadj:int,min(bonus) OVER (ORDER BY empno ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int,max(depadj) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 35 output\n+1\tsales\t5000\t1000\t200\t1000\t200\n+10\tdevelop\t5200\t500\t200\t500\t200\n+11\tdevelop\t5200\t500\t200\t500\t200\n+2\tpersonnel\t3900\t1000\t200\t1000\t200\n+3\tsales\t4800\t500\tNULL\t500\t200\n+4\tsales\t4800\t500\tNULL\t500\t200\n+5\tpersonnel\t3500\t500\tNULL\t500\t200\n+7\tdevelop\t4200\tNULL\tNULL\t500\t200\n+8\tdevelop\t6000\t1000\t200\t500\t200\n+9\tdevelop\t4500\tNULL\tNULL\t500\t200\n+\n+\n+-- !query 36\n+SET spark.sql.parser.ansi.enabled=true\n+-- !query 36 schema\n+struct<key:string,value:string>\n+-- !query 36 output\n+spark.sql.parser.ansi.enabled\ttrue\n+\n+\n+-- !query 37\n+create temporary view int4_tbl as select * from values\n+  (0),\n+  (123456),\n+  (-123456),\n+  (2147483647),\n+  (-2147483647)\n+  as int4_tbl(f1)\n+-- !query 37 schema\n+struct<>\n+-- !query 37 output\n+\n+\n+\n+-- !query 38\n+SELECT SUM(COUNT(f1)) OVER () FROM int4_tbl WHERE f1=42\n+-- !query 38 schema\n+struct<sum(count(f1)) OVER (ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint>\n+-- !query 38 output\n+0\n+\n+\n+-- !query 39\n+select ten,\n+  sum(unique1) + sum(unique2) as res,\n+  rank() over (order by sum(unique1) + sum(unique2)) as rank\n+from tenk1\n+group by ten order by ten\n+-- !query 39 schema\n+struct<ten:int,res:bigint,rank:int>\n+-- !query 39 output\n+0\t9976146\t4\n+1\t10114187\t9\n+2\t10059554\t8\n+3\t9878541\t1\n+4\t9881005\t2\n+5\t9981670\t5\n+6\t9947099\t3\n+7\t10120309\t10\n+8\t9991305\t6\n+9\t10040184\t7\n+\n+\n+-- !query 40\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten),\n+last(ten) over (partition by four order by ten)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 40 schema\n+struct<four:int,ten:int,sum(CAST(ten AS BIGINT)) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 40 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 41\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and current row),\n+last(ten) over (partition by four order by ten range between unbounded preceding and current row)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 41 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW):int>\n+-- !query 41 output\n+0\t0\t0\t0\n+0\t2\t2\t2\n+0\t4\t6\t4\n+0\t6\t12\t6\n+0\t8\t20\t8\n+1\t1\t1\t1\n+1\t3\t4\t3\n+1\t5\t9\t5\n+1\t7\t16\t7\n+1\t9\t25\t9\n+2\t0\t0\t0\n+2\t2\t2\t2\n+2\t4\t6\t4\n+2\t6\t12\t6\n+2\t8\t20\t8\n+3\t1\t1\t1\n+3\t3\t4\t3\n+3\t5\t9\t5\n+3\t7\t16\t7\n+3\t9\t25\t9\n+\n+\n+-- !query 42\n+SELECT four, ten,\n+sum(ten) over (partition by four order by ten range between unbounded preceding and unbounded following),\n+last(ten) over (partition by four order by ten range between unbounded preceding and unbounded following)\n+FROM (select distinct ten, four from tenk1) ss\n+-- !query 42 schema\n+struct<four:int,ten:int,sum(ten) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):bigint,last(ten, false) OVER (PARTITION BY four ORDER BY ten ASC NULLS FIRST RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING):int>\n+-- !query 42 output\n+0\t0\t20\t8\n+0\t2\t20\t8\n+0\t4\t20\t8\n+0\t6\t20\t8\n+0\t8\t20\t8\n+1\t1\t25\t9\n+1\t3\t25\t9\n+1\t5\t25\t9\n+1\t7\t25\t9\n+1\t9\t25\t9\n+2\t0\t20\t8\n+2\t2\t20\t8\n+2\t4\t20\t8\n+2\t6\t20\t8\n+2\t8\t20\t8\n+3\t1\t25\t9\n+3\t3\t25\t9\n+3\t5\t25\t9\n+3\t7\t25\t9\n+3\t9\t25\t9\n+\n+\n+-- !query 43",
    "line": 732
  }],
  "prId": 25816
}]