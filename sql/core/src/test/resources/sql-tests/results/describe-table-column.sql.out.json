[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Since we already treat `DESC EXTENDED` and `DESC FORMATTED` identical for the tables, let us make DESC EXTENDED and FORMATTED the same for the column too.",
    "commit": "0d49ee91508c908daef672a04768c15a9e5c5dba",
    "createdAt": "2017-07-08T05:57:41Z",
    "diffHunk": "@@ -0,0 +1,133 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 15\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW desc_col_temp_table (key int COMMENT 'column_comment') USING PARQUET\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+DESC desc_col_temp_table key\n+-- !query 1 schema\n+struct<col_name:string,data_type:string,comment:string>\n+-- !query 1 output\n+col_name \tdata_type \tcomment        \t\n+key      \tint       \tcolumn_comment\n+\n+\n+-- !query 2\n+DESC EXTENDED desc_col_temp_table key"
  }, {
    "author": {
      "login": "wzhfy"
    },
    "body": "ok, I'll make them identical.",
    "commit": "0d49ee91508c908daef672a04768c15a9e5c5dba",
    "createdAt": "2017-07-08T06:17:10Z",
    "diffHunk": "@@ -0,0 +1,133 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 15\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW desc_col_temp_table (key int COMMENT 'column_comment') USING PARQUET\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+DESC desc_col_temp_table key\n+-- !query 1 schema\n+struct<col_name:string,data_type:string,comment:string>\n+-- !query 1 output\n+col_name \tdata_type \tcomment        \t\n+key      \tint       \tcolumn_comment\n+\n+\n+-- !query 2\n+DESC EXTENDED desc_col_temp_table key"
  }],
  "prId": 16422
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "can you check with hive? I feel this output is not friendly to users. I'd like to see something like:\r\nschema: <info: string, value: string>\r\noutput:\r\n```\r\ncol_name   abc\r\ndata_type  int\r\nmax        3\r\n....\r\n```",
    "commit": "0d49ee91508c908daef672a04768c15a9e5c5dba",
    "createdAt": "2017-07-10T06:51:29Z",
    "diffHunk": "@@ -0,0 +1,133 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 15\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW desc_col_temp_table (key int COMMENT 'column_comment') USING PARQUET\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+DESC desc_col_temp_table key\n+-- !query 1 schema\n+struct<col_name:string,data_type:string,comment:string>\n+-- !query 1 output\n+col_name \tdata_type \tcomment        \t\n+key      \tint       \tcolumn_comment\n+\n+\n+-- !query 2\n+DESC EXTENDED desc_col_temp_table key\n+-- !query 2 schema\n+struct<col_name:string,data_type:string,min:string,max:string,num_nulls:string,distinct_count:string,avg_col_len:string,max_col_len:string,comment:string>\n+-- !query 2 output\n+col_name \tdata_type \tmin  \tmax  \tnum_nulls \tdistinct_count \tavg_col_len \tmax_col_len \tcomment        \t"
  }, {
    "author": {
      "login": "wzhfy"
    },
    "body": "I already checked with hive previously [in this discussion](https://github.com/apache/spark/pull/16422#discussion_r125805788). The output here is the same as in hive.",
    "commit": "0d49ee91508c908daef672a04768c15a9e5c5dba",
    "createdAt": "2017-07-10T07:42:25Z",
    "diffHunk": "@@ -0,0 +1,133 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 15\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW desc_col_temp_table (key int COMMENT 'column_comment') USING PARQUET\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+DESC desc_col_temp_table key\n+-- !query 1 schema\n+struct<col_name:string,data_type:string,comment:string>\n+-- !query 1 output\n+col_name \tdata_type \tcomment        \t\n+key      \tint       \tcolumn_comment\n+\n+\n+-- !query 2\n+DESC EXTENDED desc_col_temp_table key\n+-- !query 2 schema\n+struct<col_name:string,data_type:string,min:string,max:string,num_nulls:string,distinct_count:string,avg_col_len:string,max_col_len:string,comment:string>\n+-- !query 2 output\n+col_name \tdata_type \tmin  \tmax  \tnum_nulls \tdistinct_count \tavg_col_len \tmax_col_len \tcomment        \t"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "ok then we need to decide if we wanna diverge with hive here, cc @gatorsmile ",
    "commit": "0d49ee91508c908daef672a04768c15a9e5c5dba",
    "createdAt": "2017-07-10T07:56:07Z",
    "diffHunk": "@@ -0,0 +1,133 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 15\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW desc_col_temp_table (key int COMMENT 'column_comment') USING PARQUET\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+DESC desc_col_temp_table key\n+-- !query 1 schema\n+struct<col_name:string,data_type:string,comment:string>\n+-- !query 1 output\n+col_name \tdata_type \tcomment        \t\n+key      \tint       \tcolumn_comment\n+\n+\n+-- !query 2\n+DESC EXTENDED desc_col_temp_table key\n+-- !query 2 schema\n+struct<col_name:string,data_type:string,min:string,max:string,num_nulls:string,distinct_count:string,avg_col_len:string,max_col_len:string,comment:string>\n+-- !query 2 output\n+col_name \tdata_type \tmin  \tmax  \tnum_nulls \tdistinct_count \tavg_col_len \tmax_col_len \tcomment        \t"
  }, {
    "author": {
      "login": "wzhfy"
    },
    "body": "I think Hive's style would have better readability only if it supports describe multiple columns. So I did some tests, which showed hive doesn't support that:\r\n```\r\nhive> desc formatted src key, value;\r\nFAILED: ParseException line 1:22 missing EOF at ',' near 'key'\r\nhive> desc formatted src key value;\r\nFAILED: ParseException line 1:23 extraneous input 'value' expecting EOF near '<EOF>'\r\n```\r\nTherefore, I think @cloud-fan 's proposed style is more readable.",
    "commit": "0d49ee91508c908daef672a04768c15a9e5c5dba",
    "createdAt": "2017-07-13T14:20:28Z",
    "diffHunk": "@@ -0,0 +1,133 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 15\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW desc_col_temp_table (key int COMMENT 'column_comment') USING PARQUET\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+DESC desc_col_temp_table key\n+-- !query 1 schema\n+struct<col_name:string,data_type:string,comment:string>\n+-- !query 1 output\n+col_name \tdata_type \tcomment        \t\n+key      \tint       \tcolumn_comment\n+\n+\n+-- !query 2\n+DESC EXTENDED desc_col_temp_table key\n+-- !query 2 schema\n+struct<col_name:string,data_type:string,min:string,max:string,num_nulls:string,distinct_count:string,avg_col_len:string,max_col_len:string,comment:string>\n+-- !query 2 output\n+col_name \tdata_type \tmin  \tmax  \tnum_nulls \tdistinct_count \tavg_col_len \tmax_col_len \tcomment        \t"
  }],
  "prId": 16422
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "why min max is NULL?",
    "commit": "0d49ee91508c908daef672a04768c15a9e5c5dba",
    "createdAt": "2017-09-13T05:08:25Z",
    "diffHunk": "@@ -0,0 +1,184 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 15\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW desc_col_temp_table (key int COMMENT 'column_comment') USING PARQUET\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+DESC desc_col_temp_table key\n+-- !query 1 schema\n+struct<info_name:string,info_value:string>\n+-- !query 1 output\n+col_name\tkey\n+data_type\tint\n+comment\tcolumn_comment\n+\n+\n+-- !query 2\n+DESC EXTENDED desc_col_temp_table key\n+-- !query 2 schema\n+struct<info_name:string,info_value:string>\n+-- !query 2 output\n+col_name\tkey\n+data_type\tint\n+comment\tcolumn_comment\n+min\tNULL\n+max\tNULL\n+num_nulls\tNULL\n+distinct_count\tNULL\n+avg_col_len\tNULL\n+max_col_len\tNULL\n+\n+\n+-- !query 3\n+DESC FORMATTED desc_col_temp_table key\n+-- !query 3 schema\n+struct<info_name:string,info_value:string>\n+-- !query 3 output\n+col_name\tkey\n+data_type\tint\n+comment\tcolumn_comment\n+min\tNULL\n+max\tNULL\n+num_nulls\tNULL\n+distinct_count\tNULL\n+avg_col_len\tNULL\n+max_col_len\tNULL\n+\n+\n+-- !query 4\n+DESC FORMATTED desc_col_temp_table desc_col_temp_table.key\n+-- !query 4 schema\n+struct<info_name:string,info_value:string>\n+-- !query 4 output\n+col_name\tkey\n+data_type\tint\n+comment\tcolumn_comment\n+min\tNULL\n+max\tNULL\n+num_nulls\tNULL\n+distinct_count\tNULL\n+avg_col_len\tNULL\n+max_col_len\tNULL\n+\n+\n+-- !query 5\n+DESC desc_col_temp_table key1\n+-- !query 5 schema\n+struct<>\n+-- !query 5 output\n+org.apache.spark.sql.AnalysisException\n+Column key1 does not exist;\n+\n+\n+-- !query 6\n+CREATE TABLE desc_col_table (key int COMMENT 'column_comment') USING PARQUET\n+-- !query 6 schema\n+struct<>\n+-- !query 6 output\n+\n+\n+\n+-- !query 7\n+ANALYZE TABLE desc_col_table COMPUTE STATISTICS FOR COLUMNS key\n+-- !query 7 schema\n+struct<>\n+-- !query 7 output\n+\n+\n+\n+-- !query 8\n+DESC desc_col_table key\n+-- !query 8 schema\n+struct<info_name:string,info_value:string>\n+-- !query 8 output\n+col_name\tkey\n+data_type\tint\n+comment\tcolumn_comment\n+\n+\n+-- !query 9\n+DESC EXTENDED desc_col_table key\n+-- !query 9 schema\n+struct<info_name:string,info_value:string>\n+-- !query 9 output\n+col_name\tkey\n+data_type\tint\n+comment\tcolumn_comment\n+min\tNULL\n+max\tNULL",
    "line": 32
  }, {
    "author": {
      "login": "wzhfy"
    },
    "body": "because the table is empty",
    "commit": "0d49ee91508c908daef672a04768c15a9e5c5dba",
    "createdAt": "2017-09-13T07:11:43Z",
    "diffHunk": "@@ -0,0 +1,184 @@\n+-- Automatically generated by SQLQueryTestSuite\n+-- Number of queries: 15\n+\n+\n+-- !query 0\n+CREATE TEMPORARY VIEW desc_col_temp_table (key int COMMENT 'column_comment') USING PARQUET\n+-- !query 0 schema\n+struct<>\n+-- !query 0 output\n+\n+\n+\n+-- !query 1\n+DESC desc_col_temp_table key\n+-- !query 1 schema\n+struct<info_name:string,info_value:string>\n+-- !query 1 output\n+col_name\tkey\n+data_type\tint\n+comment\tcolumn_comment\n+\n+\n+-- !query 2\n+DESC EXTENDED desc_col_temp_table key\n+-- !query 2 schema\n+struct<info_name:string,info_value:string>\n+-- !query 2 output\n+col_name\tkey\n+data_type\tint\n+comment\tcolumn_comment\n+min\tNULL\n+max\tNULL\n+num_nulls\tNULL\n+distinct_count\tNULL\n+avg_col_len\tNULL\n+max_col_len\tNULL\n+\n+\n+-- !query 3\n+DESC FORMATTED desc_col_temp_table key\n+-- !query 3 schema\n+struct<info_name:string,info_value:string>\n+-- !query 3 output\n+col_name\tkey\n+data_type\tint\n+comment\tcolumn_comment\n+min\tNULL\n+max\tNULL\n+num_nulls\tNULL\n+distinct_count\tNULL\n+avg_col_len\tNULL\n+max_col_len\tNULL\n+\n+\n+-- !query 4\n+DESC FORMATTED desc_col_temp_table desc_col_temp_table.key\n+-- !query 4 schema\n+struct<info_name:string,info_value:string>\n+-- !query 4 output\n+col_name\tkey\n+data_type\tint\n+comment\tcolumn_comment\n+min\tNULL\n+max\tNULL\n+num_nulls\tNULL\n+distinct_count\tNULL\n+avg_col_len\tNULL\n+max_col_len\tNULL\n+\n+\n+-- !query 5\n+DESC desc_col_temp_table key1\n+-- !query 5 schema\n+struct<>\n+-- !query 5 output\n+org.apache.spark.sql.AnalysisException\n+Column key1 does not exist;\n+\n+\n+-- !query 6\n+CREATE TABLE desc_col_table (key int COMMENT 'column_comment') USING PARQUET\n+-- !query 6 schema\n+struct<>\n+-- !query 6 output\n+\n+\n+\n+-- !query 7\n+ANALYZE TABLE desc_col_table COMPUTE STATISTICS FOR COLUMNS key\n+-- !query 7 schema\n+struct<>\n+-- !query 7 output\n+\n+\n+\n+-- !query 8\n+DESC desc_col_table key\n+-- !query 8 schema\n+struct<info_name:string,info_value:string>\n+-- !query 8 output\n+col_name\tkey\n+data_type\tint\n+comment\tcolumn_comment\n+\n+\n+-- !query 9\n+DESC EXTENDED desc_col_table key\n+-- !query 9 schema\n+struct<info_name:string,info_value:string>\n+-- !query 9 output\n+col_name\tkey\n+data_type\tint\n+comment\tcolumn_comment\n+min\tNULL\n+max\tNULL",
    "line": 32
  }],
  "prId": 16422
}]