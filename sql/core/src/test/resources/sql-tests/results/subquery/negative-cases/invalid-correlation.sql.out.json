[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "why this change?",
    "commit": "bbab4c198152ebe5a06a99372aaf1445a49f0f18",
    "createdAt": "2019-03-28T07:39:40Z",
    "diffHunk": "@@ -70,9 +70,10 @@ Resolved attribute(s) t2b#x missing from min(t2a)#x,t2c#x in operator !Filter t2\n SELECT t1a \n FROM   t1\n GROUP  BY 1\n-HAVING EXISTS (SELECT 1 \n+HAVING EXISTS (SELECT t2a",
    "line": 5
  }, {
    "author": {
      "login": "dilipbiswal"
    },
    "body": "@cloud-fan because, the child subquery plan can not be resolved due to missing attributes. \r\n```\r\n+- Project [1#81]\r\n:     +- !Filter (t2a#9 < min((outer(t1a#6) + t2a#9))#86)\r\n:        +- Aggregate [1], [1 AS 1#81, min((outer(t1a#6) + t2a#9)) AS min((outer(t1a#6) + t2a#9))#86]\r\n:           +- SubqueryAlias `t2`\r\n:              +- Project [t2a#9, t2b#10, t2c#11]\r\n:                 +- SubqueryAlias `t2`\r\n:                    +- LocalRelation [t2a#9, t2b#10, t2c#11]\r\n````",
    "commit": "bbab4c198152ebe5a06a99372aaf1445a49f0f18",
    "createdAt": "2019-03-28T15:07:37Z",
    "diffHunk": "@@ -70,9 +70,10 @@ Resolved attribute(s) t2b#x missing from min(t2a)#x,t2c#x in operator !Filter t2\n SELECT t1a \n FROM   t1\n GROUP  BY 1\n-HAVING EXISTS (SELECT 1 \n+HAVING EXISTS (SELECT t2a",
    "line": 5
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "But we do expect analysis exception for this query, don't we?",
    "commit": "bbab4c198152ebe5a06a99372aaf1445a49f0f18",
    "createdAt": "2019-03-28T19:57:51Z",
    "diffHunk": "@@ -70,9 +70,10 @@ Resolved attribute(s) t2b#x missing from min(t2a)#x,t2c#x in operator !Filter t2\n SELECT t1a \n FROM   t1\n GROUP  BY 1\n-HAVING EXISTS (SELECT 1 \n+HAVING EXISTS (SELECT t2a",
    "line": 5
  }, {
    "author": {
      "login": "dilipbiswal"
    },
    "body": "@cloud-fan Yeah.. this particular test is in subquery suite and checking for a specific analysis expression that disallows a combination of local and outer references inside an aggregate expression. However, this test had the aggregate expression in the Filter clause which we are disallowing now. So i changed it to use \"having\" instead of \"filter\". But when i did that i hit a different analysis exception due to missing attributes (this particular test in question is trying to test a different analysis exception). So i fixed the projection here to include the missing attribute so we get a desired subquery related exception.",
    "commit": "bbab4c198152ebe5a06a99372aaf1445a49f0f18",
    "createdAt": "2019-03-28T20:07:41Z",
    "diffHunk": "@@ -70,9 +70,10 @@ Resolved attribute(s) t2b#x missing from min(t2a)#x,t2c#x in operator !Filter t2\n SELECT t1a \n FROM   t1\n GROUP  BY 1\n-HAVING EXISTS (SELECT 1 \n+HAVING EXISTS (SELECT t2a",
    "line": 5
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "makes sense",
    "commit": "bbab4c198152ebe5a06a99372aaf1445a49f0f18",
    "createdAt": "2019-03-28T20:14:31Z",
    "diffHunk": "@@ -70,9 +70,10 @@ Resolved attribute(s) t2b#x missing from min(t2a)#x,t2c#x in operator !Filter t2\n SELECT t1a \n FROM   t1\n GROUP  BY 1\n-HAVING EXISTS (SELECT 1 \n+HAVING EXISTS (SELECT t2a",
    "line": 5
  }],
  "prId": 24209
}]