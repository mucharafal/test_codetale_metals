[{
  "comments": [{
    "author": {
      "login": "wangyum"
    },
    "body": "How about `RunBenchmarkWithCodegen` -> `SqlBaseBenchmark`?",
    "commit": "6c46ad59c063fa6283fb23046300404767a82248",
    "createdAt": "2018-09-24T03:46:57Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.benchmark\n+\n+import org.apache.spark.benchmark.{Benchmark, BenchmarkBase}\n+import org.apache.spark.sql.SparkSession\n+import org.apache.spark.sql.internal.SQLConf\n+\n+/**\n+ * Common base trait for micro benchmarks that are supposed to run standalone (i.e. not together\n+ * with other test suites).\n+ */\n+trait RunBenchmarkWithCodegen extends BenchmarkBase {"
  }],
  "prId": 22484
}, {
  "comments": [{
    "author": {
      "login": "wangyum"
    },
    "body": "How about `runBenchmark` -> `runBenchmarkWithCodegen `?",
    "commit": "6c46ad59c063fa6283fb23046300404767a82248",
    "createdAt": "2018-09-24T03:47:40Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.benchmark\n+\n+import org.apache.spark.benchmark.{Benchmark, BenchmarkBase}\n+import org.apache.spark.sql.SparkSession\n+import org.apache.spark.sql.internal.SQLConf\n+\n+/**\n+ * Common base trait for micro benchmarks that are supposed to run standalone (i.e. not together\n+ * with other test suites).\n+ */\n+trait RunBenchmarkWithCodegen extends BenchmarkBase {\n+\n+  val spark: SparkSession = getSparkSession\n+\n+  /** Subclass can override this function to build their own SparkSession */\n+  def getSparkSession: SparkSession = {\n+    SparkSession.builder()\n+      .master(\"local[1]\")\n+      .appName(this.getClass.getCanonicalName)\n+      .config(SQLConf.SHUFFLE_PARTITIONS.key, 1)\n+      .config(SQLConf.AUTO_BROADCASTJOIN_THRESHOLD.key, 1)\n+      .getOrCreate()\n+  }\n+\n+  /** Runs function `f` with whole stage codegen on and off. */\n+  def runBenchmark(name: String, cardinality: Long)(f: => Unit): Unit = {"
  }],
  "prId": 22484
}]