[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "How about `Compression Scheme Benchmark`?",
    "commit": "9494afd9e649751188b52fee5ac30d745985a03c",
    "createdAt": "2018-09-23T20:48:25Z",
    "diffHunk": "@@ -318,28 +229,17 @@ object CompressionSchemeBenchmark extends AllCompressionSchemes {\n     }\n     testData.rewind()\n \n-    // Intel(R) Core(TM) i7-4578U CPU @ 3.00GHz\n-    // STRING Encode:                      Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n-    // -------------------------------------------------------------------------------------------\n-    // PassThrough(1.000)                         56 /   57       1197.9           0.8       1.0X\n-    // RunLengthEncoding(0.893)                 4892 / 4937         13.7          72.9       0.0X\n-    // DictionaryEncoding(0.167)                2968 / 2992         22.6          44.2       0.0X\n     runEncodeBenchmark(\"STRING Encode\", iters, count, STRING, testData)\n-\n-    // Intel(R) Core(TM) i7-4578U CPU @ 3.00GHz\n-    // STRING Decode:                      Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n-    // -------------------------------------------------------------------------------------------\n-    // PassThrough                              2422 / 2449         27.7          36.1       1.0X\n-    // RunLengthEncoding                        2885 / 3018         23.3          43.0       0.8X\n-    // DictionaryEncoding                       2716 / 2752         24.7          40.5       0.9X\n     runDecodeBenchmark(\"STRING Decode\", iters, count, STRING, testData)\n   }\n \n-  def main(args: Array[String]): Unit = {\n-    bitEncodingBenchmark(1024)\n-    shortEncodingBenchmark(1024)\n-    intEncodingBenchmark(1024)\n-    longEncodingBenchmark(1024)\n-    stringEncodingBenchmark(1024)\n+  override def benchmark(): Unit = {\n+    runBenchmark(\"encoding benchmark\") {"
  }],
  "prId": 22486
}]