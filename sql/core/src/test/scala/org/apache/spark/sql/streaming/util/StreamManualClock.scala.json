[{
  "comments": [{
    "author": {
      "login": "brkyvz"
    },
    "body": "mind adding docs on when these should be used?",
    "commit": "4e1d898c73c0603463f4f1e9d77553d58f708550",
    "createdAt": "2017-04-04T17:24:19Z",
    "diffHunk": "@@ -0,0 +1,46 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.streaming.util\n+\n+import org.apache.spark.util.ManualClock\n+\n+/** ManualClock used for streaming tests */\n+class StreamManualClock(time: Long = 0L) extends ManualClock(time) with Serializable {\n+  private var waitStartTime: Option[Long] = None\n+  private var waitTargetTime: Option[Long] = None\n+\n+  override def waitTillTime(targetTime: Long): Long = synchronized {\n+    try {\n+      waitStartTime = Some(getTimeMillis())\n+      waitTargetTime = Some(targetTime)\n+      super.waitTillTime(targetTime)\n+    } finally {\n+      waitStartTime = None\n+      waitTargetTime = None\n+    }\n+  }\n+\n+  def isStreamWaitingAt(time: Long): Boolean = synchronized {"
  }],
  "prId": 17525
}]