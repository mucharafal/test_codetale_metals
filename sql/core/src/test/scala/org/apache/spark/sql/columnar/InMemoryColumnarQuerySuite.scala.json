[{
  "comments": [{
    "author": {
      "login": "davies"
    },
    "body": "Should we check the results?\n",
    "commit": "2905fd543b25251f9c50e8059668112c27a251d4",
    "createdAt": "2015-09-03T00:17:07Z",
    "diffHunk": "@@ -191,4 +191,13 @@ class InMemoryColumnarQuerySuite extends QueryTest with SharedSQLContext {\n       ctx.table(\"InMemoryCache_different_data_types\").collect())\n     ctx.dropTempTable(\"InMemoryCache_different_data_types\")\n   }\n+\n+  test(\"SPARK-10422: String column in InMemoryColumnarCache needs to override clone method\") {\n+    val df =\n+      ctx.range(1, 30000).selectExpr(\"id % 500 as id\").rdd.map(id => Tuple1(s\"str_$id\")).toDF(\"i\")\n+    val cached = df.cache()\n+    // count triggers the caching action. It should not throw.\n+    cached.count()"
  }],
  "prId": 8578
}, {
  "comments": [{
    "author": {
      "login": "yhuai"
    },
    "body": "I reduced the number of rows to make this test faster. I also checked that it did fail without the fix.\n",
    "commit": "2905fd543b25251f9c50e8059668112c27a251d4",
    "createdAt": "2015-09-03T00:59:38Z",
    "diffHunk": "@@ -191,4 +191,24 @@ class InMemoryColumnarQuerySuite extends QueryTest with SharedSQLContext {\n       ctx.table(\"InMemoryCache_different_data_types\").collect())\n     ctx.dropTempTable(\"InMemoryCache_different_data_types\")\n   }\n+\n+  test(\"SPARK-10422: String column in InMemoryColumnarCache needs to override clone method\") {\n+    val df =\n+      ctx.range(1, 100).selectExpr(\"id % 10 as id\").rdd.map(id => Tuple1(s\"str_$id\")).toDF(\"i\")",
    "line": 7
  }],
  "prId": 8578
}]