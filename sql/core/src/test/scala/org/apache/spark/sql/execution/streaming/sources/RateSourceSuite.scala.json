[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "Why did you not move this file using \"git mv\" and then change? Then we would have been able to diff it properly. \r\nThis was a pain in the text socket v2 PR as well :(",
    "commit": "63ed0b4ebc9d32fce2b5075c045867ea01fd4c27",
    "createdAt": "2018-03-07T03:06:56Z",
    "diffHunk": "@@ -0,0 +1,344 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.streaming.sources\n+\n+import java.nio.file.Files\n+import java.util.Optional\n+import java.util.concurrent.TimeUnit\n+\n+import scala.collection.JavaConverters._\n+import scala.collection.mutable.ArrayBuffer\n+\n+import org.apache.spark.sql.{AnalysisException, Row, SparkSession}\n+import org.apache.spark.sql.catalyst.errors.TreeNodeException\n+import org.apache.spark.sql.execution.datasources.DataSource\n+import org.apache.spark.sql.execution.streaming._\n+import org.apache.spark.sql.execution.streaming.continuous._\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.sources.v2.{ContinuousReadSupport, DataSourceOptions, MicroBatchReadSupport}\n+import org.apache.spark.sql.sources.v2.reader.streaming.Offset\n+import org.apache.spark.sql.streaming.StreamTest\n+import org.apache.spark.util.ManualClock\n+\n+class RateSourceSuite extends StreamTest {"
  }, {
    "author": {
      "login": "jerryshao"
    },
    "body": "Hi @tdas , I think I used \"git mv\", the thing is that when the diff is larger then x%, it will treat as \"git rm\" and \"git add\" (https://makandracards.com/makandra/30957-git-how-to-get-a-useful-diff-when-renaming-files). \r\n\r\nSorry about the inconvenience, but I'm not sure if there's other approaches.",
    "commit": "63ed0b4ebc9d32fce2b5075c045867ea01fd4c27",
    "createdAt": "2018-03-07T03:11:37Z",
    "diffHunk": "@@ -0,0 +1,344 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.streaming.sources\n+\n+import java.nio.file.Files\n+import java.util.Optional\n+import java.util.concurrent.TimeUnit\n+\n+import scala.collection.JavaConverters._\n+import scala.collection.mutable.ArrayBuffer\n+\n+import org.apache.spark.sql.{AnalysisException, Row, SparkSession}\n+import org.apache.spark.sql.catalyst.errors.TreeNodeException\n+import org.apache.spark.sql.execution.datasources.DataSource\n+import org.apache.spark.sql.execution.streaming._\n+import org.apache.spark.sql.execution.streaming.continuous._\n+import org.apache.spark.sql.functions._\n+import org.apache.spark.sql.sources.v2.{ContinuousReadSupport, DataSourceOptions, MicroBatchReadSupport}\n+import org.apache.spark.sql.sources.v2.reader.streaming.Offset\n+import org.apache.spark.sql.streaming.StreamTest\n+import org.apache.spark.util.ManualClock\n+\n+class RateSourceSuite extends StreamTest {"
  }],
  "prId": 20688
}]