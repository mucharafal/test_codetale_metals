[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Single line is enough and shorter?\r\n```scala\r\nspark.range(cardinality).selectExpr(expr).write.format(\"noop\").save()\r\n```",
    "commit": "cb12aaecdff40b63f4cb0cf8df0c8ceecc7b5440",
    "createdAt": "2019-01-26T22:08:22Z",
    "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.sql.execution.benchmark.SqlBasedBenchmark\n+\n+/**\n+ * Synthetic benchmark for date and timestamp functions.\n+ * To run this benchmark:\n+ * {{{\n+ *   1. without sbt:\n+ *      bin/spark-submit --class <this class> --jars <spark core test jar> <sql core test jar>\n+ *   2. build/sbt \"sql/test:runMain <this class>\"\n+ *   3. generate result:\n+ *      SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"sql/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/DateTimeBenchmark-results.txt\".\n+ * }}}\n+ */\n+object DateTimeBenchmark extends SqlBasedBenchmark {\n+  def doBenchmark(cardinality: Int, expr: String): Unit = {\n+    spark.range(cardinality)\n+      .selectExpr(expr)\n+      .write.format(\"noop\").save()"
  }, {
    "author": {
      "login": "MaxGekk"
    },
    "body": "changed",
    "commit": "cb12aaecdff40b63f4cb0cf8df0c8ceecc7b5440",
    "createdAt": "2019-01-27T10:59:55Z",
    "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.sql.execution.benchmark.SqlBasedBenchmark\n+\n+/**\n+ * Synthetic benchmark for date and timestamp functions.\n+ * To run this benchmark:\n+ * {{{\n+ *   1. without sbt:\n+ *      bin/spark-submit --class <this class> --jars <spark core test jar> <sql core test jar>\n+ *   2. build/sbt \"sql/test:runMain <this class>\"\n+ *   3. generate result:\n+ *      SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"sql/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/DateTimeBenchmark-results.txt\".\n+ * }}}\n+ */\n+object DateTimeBenchmark extends SqlBasedBenchmark {\n+  def doBenchmark(cardinality: Int, expr: String): Unit = {\n+    spark.range(cardinality)\n+      .selectExpr(expr)\n+      .write.format(\"noop\").save()"
  }],
  "prId": 23661
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "I know this is not a strict rule in benchmark suite. But, if you don't mind, `private` would be better for `doBenchmark` and `run`.",
    "commit": "cb12aaecdff40b63f4cb0cf8df0c8ceecc7b5440",
    "createdAt": "2019-01-26T22:10:50Z",
    "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.sql.execution.benchmark.SqlBasedBenchmark\n+\n+/**\n+ * Synthetic benchmark for date and timestamp functions.\n+ * To run this benchmark:\n+ * {{{\n+ *   1. without sbt:\n+ *      bin/spark-submit --class <this class> --jars <spark core test jar> <sql core test jar>\n+ *   2. build/sbt \"sql/test:runMain <this class>\"\n+ *   3. generate result:\n+ *      SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"sql/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/DateTimeBenchmark-results.txt\".\n+ * }}}\n+ */\n+object DateTimeBenchmark extends SqlBasedBenchmark {\n+  def doBenchmark(cardinality: Int, expr: String): Unit = {"
  }, {
    "author": {
      "login": "MaxGekk"
    },
    "body": "Added `private` for the methods",
    "commit": "cb12aaecdff40b63f4cb0cf8df0c8ceecc7b5440",
    "createdAt": "2019-01-27T11:00:23Z",
    "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.sql.execution.benchmark.SqlBasedBenchmark\n+\n+/**\n+ * Synthetic benchmark for date and timestamp functions.\n+ * To run this benchmark:\n+ * {{{\n+ *   1. without sbt:\n+ *      bin/spark-submit --class <this class> --jars <spark core test jar> <sql core test jar>\n+ *   2. build/sbt \"sql/test:runMain <this class>\"\n+ *   3. generate result:\n+ *      SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"sql/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/DateTimeBenchmark-results.txt\".\n+ * }}}\n+ */\n+object DateTimeBenchmark extends SqlBasedBenchmark {\n+  def doBenchmark(cardinality: Int, expr: String): Unit = {"
  }],
  "prId": 23661
}]