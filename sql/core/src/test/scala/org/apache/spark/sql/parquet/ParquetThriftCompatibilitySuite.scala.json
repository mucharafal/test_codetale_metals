[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "can't we just make this a function of ParquetThriftCompatibilitySuite to remove the companion object?\n",
    "commit": "360fe18a61538b03cac05da1c6d258e124df6feb",
    "createdAt": "2015-07-08T05:48:07Z",
    "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.parquet\n+\n+import java.nio.ByteBuffer\n+import java.util.{List => JList, Map => JMap}\n+\n+import scala.collection.JavaConversions._\n+\n+import org.apache.hadoop.fs.Path\n+import org.apache.parquet.hadoop.metadata.CompressionCodecName\n+import org.apache.parquet.thrift.ThriftParquetWriter\n+\n+import org.apache.spark.sql.parquet.test.thrift.{Nested, ParquetThriftCompat, Suit}\n+import org.apache.spark.sql.test.TestSQLContext\n+import org.apache.spark.sql.{Row, SQLContext}\n+\n+object ParquetThriftCompatibilitySuite {\n+  def makeParquetThriftCompat(i: Int): ParquetThriftCompat = {"
  }, {
    "author": {
      "login": "liancheng"
    },
    "body": "Yes. Originally I moved it here because of serialization failure, because I used to write the Parquet file using a Spark job. But now I resort to `ParquetWriter` classes and the companion object isn't necessary anymore.\n",
    "commit": "360fe18a61538b03cac05da1c6d258e124df6feb",
    "createdAt": "2015-07-08T05:56:49Z",
    "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.parquet\n+\n+import java.nio.ByteBuffer\n+import java.util.{List => JList, Map => JMap}\n+\n+import scala.collection.JavaConversions._\n+\n+import org.apache.hadoop.fs.Path\n+import org.apache.parquet.hadoop.metadata.CompressionCodecName\n+import org.apache.parquet.thrift.ThriftParquetWriter\n+\n+import org.apache.spark.sql.parquet.test.thrift.{Nested, ParquetThriftCompat, Suit}\n+import org.apache.spark.sql.test.TestSQLContext\n+import org.apache.spark.sql.{Row, SQLContext}\n+\n+object ParquetThriftCompatibilitySuite {\n+  def makeParquetThriftCompat(i: Int): ParquetThriftCompat = {"
  }],
  "prId": 7231
}]