[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "```Scala\r\n    val df1 = spark.range(10).agg(sumDistinct($\"id\"))\r\n    val df2 = spark.range(10).agg(sumDistinct($\"id\"))\r\n```\r\nThey will not match?",
    "commit": "49da955dce260260325708d07becbc692cd3a005",
    "createdAt": "2017-05-13T07:22:56Z",
    "diffHunk": "@@ -46,4 +48,10 @@ class SameResultSuite extends QueryTest with SharedSQLContext {\n     df.queryExecution.sparkPlan.find(_.isInstanceOf[FileSourceScanExec]).get\n       .asInstanceOf[FileSourceScanExec]\n   }\n+\n+  test(\"SPARK-20725: partial aggregate should behave correctly for sameResult\") {\n+    val df1 = spark.range(10).agg(sum($\"id\"))\n+    val df2 = spark.range(10).agg(sum($\"id\"))",
    "line": 22
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "Good catch! The reason is, `HashAggregateExec.requiredChildDistributionExpressions` is a `Option[Seq[Expression]]`, which is not treated as expressions of `HashAggregateExec`, and thus not touched by `QueryPlan.mapExpressions`.\r\n\r\nI have fixed it in `QueryPlan`",
    "commit": "49da955dce260260325708d07becbc692cd3a005",
    "createdAt": "2017-05-13T12:26:32Z",
    "diffHunk": "@@ -46,4 +48,10 @@ class SameResultSuite extends QueryTest with SharedSQLContext {\n     df.queryExecution.sparkPlan.find(_.isInstanceOf[FileSourceScanExec]).get\n       .asInstanceOf[FileSourceScanExec]\n   }\n+\n+  test(\"SPARK-20725: partial aggregate should behave correctly for sameResult\") {\n+    val df1 = spark.range(10).agg(sum($\"id\"))\n+    val df2 = spark.range(10).agg(sum($\"id\"))",
    "line": 22
  }],
  "prId": 17964
}]