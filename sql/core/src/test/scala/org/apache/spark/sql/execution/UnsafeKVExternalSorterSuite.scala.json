[{
  "comments": [{
    "author": {
      "login": "yhuai"
    },
    "body": "We use interpreted version because we do not have access to `newNaturalAscendingOrdering` at here, right?\n",
    "commit": "e610655f1dc96865523baf1353a7636714d68764",
    "createdAt": "2015-08-05T21:06:46Z",
    "diffHunk": "@@ -144,8 +144,8 @@ class UnsafeKVExternalSorterSuite extends SparkFunSuite {\n     }\n     sorter.cleanupResources()\n \n-    val keyOrdering = RowOrdering.forSchema(keySchema.map(_.dataType))\n-    val valueOrdering = RowOrdering.forSchema(valueSchema.map(_.dataType))\n+    val keyOrdering = InterpretedOrdering.forSchema(keySchema.map(_.dataType))\n+    val valueOrdering = InterpretedOrdering.forSchema(valueSchema.map(_.dataType))",
    "line": 16
  }, {
    "author": {
      "login": "JoshRosen"
    },
    "body": "Yep. It shouldn't matter here in this test code, though.\n",
    "commit": "e610655f1dc96865523baf1353a7636714d68764",
    "createdAt": "2015-08-05T21:11:37Z",
    "diffHunk": "@@ -144,8 +144,8 @@ class UnsafeKVExternalSorterSuite extends SparkFunSuite {\n     }\n     sorter.cleanupResources()\n \n-    val keyOrdering = RowOrdering.forSchema(keySchema.map(_.dataType))\n-    val valueOrdering = RowOrdering.forSchema(valueSchema.map(_.dataType))\n+    val keyOrdering = InterpretedOrdering.forSchema(keySchema.map(_.dataType))\n+    val valueOrdering = InterpretedOrdering.forSchema(valueSchema.map(_.dataType))",
    "line": 16
  }, {
    "author": {
      "login": "yhuai"
    },
    "body": "oh, right.\n",
    "commit": "e610655f1dc96865523baf1353a7636714d68764",
    "createdAt": "2015-08-05T21:17:06Z",
    "diffHunk": "@@ -144,8 +144,8 @@ class UnsafeKVExternalSorterSuite extends SparkFunSuite {\n     }\n     sorter.cleanupResources()\n \n-    val keyOrdering = RowOrdering.forSchema(keySchema.map(_.dataType))\n-    val valueOrdering = RowOrdering.forSchema(valueSchema.map(_.dataType))\n+    val keyOrdering = InterpretedOrdering.forSchema(keySchema.map(_.dataType))\n+    val valueOrdering = InterpretedOrdering.forSchema(valueSchema.map(_.dataType))",
    "line": 16
  }],
  "prId": 7973
}]