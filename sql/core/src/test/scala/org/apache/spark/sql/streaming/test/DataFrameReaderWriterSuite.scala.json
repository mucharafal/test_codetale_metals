[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "what does this test? whether it started correctly? Should it not set a global variable to make sure that this actually works rather than implicitly depending on behavior of awaitTermination?\n",
    "commit": "8cb7aa5593e0d845eaa92799f43792c5c9f1c02a",
    "createdAt": "2016-06-10T00:07:04Z",
    "diffHunk": "@@ -572,4 +572,25 @@ class DataFrameReaderWriterSuite extends StreamTest with BeforeAndAfter {\n \n     cq.awaitTermination(2000L)\n   }\n+\n+  test(\"foreach\") {\n+    import testImplicits._\n+\n+    val ds = spark.read\n+      .format(\"org.apache.spark.sql.streaming.test\")\n+      .stream()\n+      .as[Int]\n+\n+    val cq = ds.write\n+      .format(\"console\")\n+      .option(\"checkpointLocation\", newMetadataDir)\n+      .trigger(ProcessingTime(2.seconds))\n+      .foreach(new ForeachWriter[Int] {\n+        override def open(partitionId: Long, version: Long): Boolean = true\n+        override def process(value: Int): Unit = {}\n+        override def close(errorOrNull: Throwable): Unit = {}\n+      })\n+\n+    cq.awaitTermination(2000L)"
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "I'm going to remove this one as it should be covered in ForeachSinkSuite\n",
    "commit": "8cb7aa5593e0d845eaa92799f43792c5c9f1c02a",
    "createdAt": "2016-06-10T00:29:26Z",
    "diffHunk": "@@ -572,4 +572,25 @@ class DataFrameReaderWriterSuite extends StreamTest with BeforeAndAfter {\n \n     cq.awaitTermination(2000L)\n   }\n+\n+  test(\"foreach\") {\n+    import testImplicits._\n+\n+    val ds = spark.read\n+      .format(\"org.apache.spark.sql.streaming.test\")\n+      .stream()\n+      .as[Int]\n+\n+    val cq = ds.write\n+      .format(\"console\")\n+      .option(\"checkpointLocation\", newMetadataDir)\n+      .trigger(ProcessingTime(2.seconds))\n+      .foreach(new ForeachWriter[Int] {\n+        override def open(partitionId: Long, version: Long): Boolean = true\n+        override def process(value: Int): Unit = {}\n+        override def close(errorOrNull: Throwable): Unit = {}\n+      })\n+\n+    cq.awaitTermination(2000L)"
  }],
  "prId": 13342
}]