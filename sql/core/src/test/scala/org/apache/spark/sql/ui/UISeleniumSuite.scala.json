[{
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "@andrewor14, isn't this going to run into the same issue with multiple active SparkContexts that your patch hit? If that's the case, maybe we should bump up the priority on fixing that SQLContext testing issue?\n",
    "commit": "5a2bc9937bc26e014842b720fd2096294c9272b7",
    "createdAt": "2015-08-03T18:54:25Z",
    "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.ui\n+\n+import scala.concurrent.duration._\n+\n+import org.apache.spark.sql.SQLContext\n+import org.json4s.DefaultFormats\n+import org.openqa.selenium.WebDriver\n+import org.openqa.selenium.htmlunit.HtmlUnitDriver\n+import org.scalatest.{BeforeAndAfterAll, Matchers}\n+import org.scalatest.concurrent.Eventually._\n+import org.scalatest.selenium.WebBrowser\n+\n+import org.apache.spark.{SparkContext, SparkConf, SparkFunSuite}\n+import org.apache.spark.ui.SparkUICssErrorHandler\n+\n+/**\n+ * Selenium tests for the SQL tab.\n+ */\n+class UISeleniumSuite extends SparkFunSuite with WebBrowser with Matchers with BeforeAndAfterAll {\n+\n+  implicit var webDriver: WebDriver = _\n+  implicit val formats = DefaultFormats\n+\n+\n+  override def beforeAll(): Unit = {\n+    webDriver = new HtmlUnitDriver {\n+      getWebClient.setCssErrorHandler(new SparkUICssErrorHandler)\n+    }\n+  }\n+\n+  override def afterAll(): Unit = {\n+    if (webDriver != null) {\n+      webDriver.quit()\n+    }\n+  }\n+\n+\n+  /**\n+   * Create a test SQLContext with the SparkUI enabled.\n+   */\n+  private def newSparkStreamingContext(): SQLContext = {\n+    val conf = new SparkConf()\n+      .setMaster(\"local\")\n+      .setAppName(\"test\")\n+      .set(\"spark.ui.enabled\", \"true\")\n+    val sc = new SparkContext(conf)"
  }, {
    "author": {
      "login": "andrewor14"
    },
    "body": "yes, it should be a blocker\n",
    "commit": "5a2bc9937bc26e014842b720fd2096294c9272b7",
    "createdAt": "2015-08-03T20:37:17Z",
    "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.ui\n+\n+import scala.concurrent.duration._\n+\n+import org.apache.spark.sql.SQLContext\n+import org.json4s.DefaultFormats\n+import org.openqa.selenium.WebDriver\n+import org.openqa.selenium.htmlunit.HtmlUnitDriver\n+import org.scalatest.{BeforeAndAfterAll, Matchers}\n+import org.scalatest.concurrent.Eventually._\n+import org.scalatest.selenium.WebBrowser\n+\n+import org.apache.spark.{SparkContext, SparkConf, SparkFunSuite}\n+import org.apache.spark.ui.SparkUICssErrorHandler\n+\n+/**\n+ * Selenium tests for the SQL tab.\n+ */\n+class UISeleniumSuite extends SparkFunSuite with WebBrowser with Matchers with BeforeAndAfterAll {\n+\n+  implicit var webDriver: WebDriver = _\n+  implicit val formats = DefaultFormats\n+\n+\n+  override def beforeAll(): Unit = {\n+    webDriver = new HtmlUnitDriver {\n+      getWebClient.setCssErrorHandler(new SparkUICssErrorHandler)\n+    }\n+  }\n+\n+  override def afterAll(): Unit = {\n+    if (webDriver != null) {\n+      webDriver.quit()\n+    }\n+  }\n+\n+\n+  /**\n+   * Create a test SQLContext with the SparkUI enabled.\n+   */\n+  private def newSparkStreamingContext(): SQLContext = {\n+    val conf = new SparkConf()\n+      .setMaster(\"local\")\n+      .setAppName(\"test\")\n+      .set(\"spark.ui.enabled\", \"true\")\n+    val sc = new SparkContext(conf)"
  }],
  "prId": 7774
}, {
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "Shouldn't be streaming, right?\n",
    "commit": "5a2bc9937bc26e014842b720fd2096294c9272b7",
    "createdAt": "2015-08-03T18:56:25Z",
    "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.ui\n+\n+import scala.concurrent.duration._\n+\n+import org.apache.spark.sql.SQLContext\n+import org.json4s.DefaultFormats\n+import org.openqa.selenium.WebDriver\n+import org.openqa.selenium.htmlunit.HtmlUnitDriver\n+import org.scalatest.{BeforeAndAfterAll, Matchers}\n+import org.scalatest.concurrent.Eventually._\n+import org.scalatest.selenium.WebBrowser\n+\n+import org.apache.spark.{SparkContext, SparkConf, SparkFunSuite}\n+import org.apache.spark.ui.SparkUICssErrorHandler\n+\n+/**\n+ * Selenium tests for the SQL tab.\n+ */\n+class UISeleniumSuite extends SparkFunSuite with WebBrowser with Matchers with BeforeAndAfterAll {\n+\n+  implicit var webDriver: WebDriver = _\n+  implicit val formats = DefaultFormats\n+\n+\n+  override def beforeAll(): Unit = {\n+    webDriver = new HtmlUnitDriver {\n+      getWebClient.setCssErrorHandler(new SparkUICssErrorHandler)\n+    }\n+  }\n+\n+  override def afterAll(): Unit = {\n+    if (webDriver != null) {\n+      webDriver.quit()\n+    }\n+  }\n+\n+\n+  /**\n+   * Create a test SQLContext with the SparkUI enabled.\n+   */\n+  private def newSparkStreamingContext(): SQLContext = {"
  }],
  "prId": 7774
}]