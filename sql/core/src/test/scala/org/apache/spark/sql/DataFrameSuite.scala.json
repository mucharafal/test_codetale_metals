[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "I think we should create a config for the threshold instead of hardcoding `1024`, then we can keep the test case here, by setting the threshold to Long.max.",
    "commit": "bf3549882982bcddd7d4d0b38c61d939c2c8a046",
    "createdAt": "2017-11-10T12:29:45Z",
    "diffHunk": "@@ -2081,10 +2081,8 @@ class DataFrameSuite extends QueryTest with SharedSQLContext {\n     }\n \n     withSQLConf(SQLConf.CODEGEN_FALLBACK.key -> \"false\") {\n-      val e = intercept[SparkException] {\n-        df.filter(filter).count()\n-      }.getMessage\n-      assert(e.contains(\"grows beyond 64 KB\"))\n+      // SPARK-21720 avoids an exception due to JVM code size limit"
  }, {
    "author": {
      "login": "kiszk"
    },
    "body": "In general, I agree with you that we should create a config.  \r\nAlthough I create a PR to add a config for a constant in `CodeGenerator`, it revealed that we need [additional (large) work](https://github.com/apache/spark/pull/19449#pullrequestreview-67789784) to fix active session management.\r\n\r\nCan we introduce a config after fixing active session management?",
    "commit": "bf3549882982bcddd7d4d0b38c61d939c2c8a046",
    "createdAt": "2017-11-10T16:45:35Z",
    "diffHunk": "@@ -2081,10 +2081,8 @@ class DataFrameSuite extends QueryTest with SharedSQLContext {\n     }\n \n     withSQLConf(SQLConf.CODEGEN_FALLBACK.key -> \"false\") {\n-      val e = intercept[SparkException] {\n-        df.filter(filter).count()\n-      }.getMessage\n-      assert(e.contains(\"grows beyond 64 KB\"))\n+      // SPARK-21720 avoids an exception due to JVM code size limit"
  }],
  "prId": 18972
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "I think this test case becomes invalid as we won't trigger the codegen fallback branch now. Can we just ignore this test and add a TODO to say something about the config?",
    "commit": "bf3549882982bcddd7d4d0b38c61d939c2c8a046",
    "createdAt": "2017-11-10T17:56:26Z",
    "diffHunk": "@@ -2067,7 +2067,7 @@ class DataFrameSuite extends QueryTest with SharedSQLContext {\n       .count\n   }\n \n-  testQuietly(\"SPARK-19372: Filter can be executed w/o generated code due to JVM code size limit\") {\n+  test(\"SPARK-19372: Filter can be executed w/o generated code due to JVM code size limit\") {"
  }, {
    "author": {
      "login": "kiszk"
    },
    "body": "I see. I will do it on Sunday.",
    "commit": "bf3549882982bcddd7d4d0b38c61d939c2c8a046",
    "createdAt": "2017-11-10T18:10:56Z",
    "diffHunk": "@@ -2067,7 +2067,7 @@ class DataFrameSuite extends QueryTest with SharedSQLContext {\n       .count\n   }\n \n-  testQuietly(\"SPARK-19372: Filter can be executed w/o generated code due to JVM code size limit\") {\n+  test(\"SPARK-19372: Filter can be executed w/o generated code due to JVM code size limit\") {"
  }],
  "prId": 18972
}]