[{
  "comments": [{
    "author": {
      "login": "gengliangwang"
    },
    "body": "What is the reason for creating a new trait, instead of changing the `beforeEach` method in `SharedSparkSession`? Maybe a lot of tests are broken if we change `SharedSparkSession`?",
    "commit": "5ac310b7feeef2a7a092e5e0e7f6ea973dceb2ba",
    "createdAt": "2019-07-25T08:18:24Z",
    "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.test\n+\n+import org.scalatest.Suite\n+\n+// A variant of SharedSparkSession. It creates a fresh copy of the spark session before each test.\n+trait SharedSparkSessionWithFreshCopy extends SharedSparkSession { self: Suite =>"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "We have `SQLTestData`, which creates DataFrames and the DataFrames are shared between all the tests in one suite. A DataFrame is associated with one `SparkSession` instance, but we create a new `SparkSession` instance for each test. If we change the config in one test, the DataFrames won't get affected.\r\n\r\nThat said, to apply `SharedSparkSessionWithFreshCopy`, the test suite should either create DataFrames in each test, or create global temp views. So we need to apply it incrementally to avoid changing too many tests in one PR.",
    "commit": "5ac310b7feeef2a7a092e5e0e7f6ea973dceb2ba",
    "createdAt": "2019-07-25T10:58:45Z",
    "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.test\n+\n+import org.scalatest.Suite\n+\n+// A variant of SharedSparkSession. It creates a fresh copy of the spark session before each test.\n+trait SharedSparkSessionWithFreshCopy extends SharedSparkSession { self: Suite =>"
  }],
  "prId": 25243
}, {
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "If `SharedSparkSession` means sharing spark session across tests, `SharedSparkSessionWithFreshCopy` seems a weird name, because it doesn't share session between tests.",
    "commit": "5ac310b7feeef2a7a092e5e0e7f6ea973dceb2ba",
    "createdAt": "2019-07-25T14:25:05Z",
    "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.test\n+\n+import org.scalatest.Suite\n+\n+// A variant of SharedSparkSession. It creates a fresh copy of the spark session before each test.\n+trait SharedSparkSessionWithFreshCopy extends SharedSparkSession { self: Suite =>"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "this is a good point. Do you have any suggestions? maybe `SharedSparkContextWithFreshSparkSession`?",
    "commit": "5ac310b7feeef2a7a092e5e0e7f6ea973dceb2ba",
    "createdAt": "2019-07-25T16:24:17Z",
    "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.test\n+\n+import org.scalatest.Suite\n+\n+// A variant of SharedSparkSession. It creates a fresh copy of the spark session before each test.\n+trait SharedSparkSessionWithFreshCopy extends SharedSparkSession { self: Suite =>"
  }],
  "prId": 25243
}]