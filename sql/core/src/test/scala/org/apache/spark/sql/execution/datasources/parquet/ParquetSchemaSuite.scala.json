[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "no space before `:`",
    "commit": "3bbc2b02d658112a546c5472586b0042075d390b",
    "createdAt": "2018-03-31T20:48:57Z",
    "diffHunk": "@@ -382,6 +384,59 @@ class ParquetSchemaSuite extends ParquetSchemaTest {\n     }\n   }\n \n+  // =======================================\n+  // Tests for parquet schema mismatch error\n+  // =======================================\n+  def testSchemaMismatch(path: String, vectorizedReaderEnabled: Boolean): SparkException = {\n+    import testImplicits._\n+\n+    var e : SparkException = null"
  }],
  "prId": 20953
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Scala does not need `return`",
    "commit": "3bbc2b02d658112a546c5472586b0042075d390b",
    "createdAt": "2018-03-31T20:50:00Z",
    "diffHunk": "@@ -382,6 +384,59 @@ class ParquetSchemaSuite extends ParquetSchemaTest {\n     }\n   }\n \n+  // =======================================\n+  // Tests for parquet schema mismatch error\n+  // =======================================\n+  def testSchemaMismatch(path: String, vectorizedReaderEnabled: Boolean): SparkException = {\n+    import testImplicits._\n+\n+    var e : SparkException = null\n+    // Disable databricks' vectorized parquet reader and use open source version.\n+    withSQLConf(SQLConf.PARQUET_VECTORIZED_READER_ENABLED.key -> vectorizedReaderEnabled.toString) {\n+      // Create two parquet files with different schemas in the same folder\n+      Seq((\"bcd\", 2)).toDF(\"a\", \"b\").coalesce(1).write.mode(\"overwrite\").parquet(s\"$path/parquet\")\n+      Seq((1, \"abc\")).toDF(\"a\", \"b\").coalesce(1).write.mode(\"append\").parquet(s\"$path/parquet\")\n+\n+      e = intercept[SparkException] {\n+        spark.read.parquet(s\"$path/parquet\").collect()\n+      }\n+    }\n+    return e"
  }],
  "prId": 20953
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "@yuchenhuo . In Apache Spark, this comment should be removed.",
    "commit": "3bbc2b02d658112a546c5472586b0042075d390b",
    "createdAt": "2018-04-05T03:32:41Z",
    "diffHunk": "@@ -382,6 +384,59 @@ class ParquetSchemaSuite extends ParquetSchemaTest {\n     }\n   }\n \n+  // =======================================\n+  // Tests for parquet schema mismatch error\n+  // =======================================\n+  def testSchemaMismatch(path: String, vectorizedReaderEnabled: Boolean): SparkException = {\n+    import testImplicits._\n+\n+    var e: SparkException = null\n+    // Disable databricks' vectorized parquet reader and use open source version."
  }],
  "prId": 20953
}]