[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Add a space before `{`",
    "commit": "78e037d06d2972062cac14fe8b503e0802a4c32e",
    "createdAt": "2018-02-22T02:34:23Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.types.StructType\n+\n+class StructTypeSuite extends SparkFunSuite{"
  }, {
    "author": {
      "login": "xysun"
    },
    "body": "done",
    "commit": "78e037d06d2972062cac14fe8b503e0802a4c32e",
    "createdAt": "2018-02-22T04:11:12Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.types.StructType\n+\n+class StructTypeSuite extends SparkFunSuite{"
  }],
  "prId": 20649
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "add one more column?",
    "commit": "78e037d06d2972062cac14fe8b503e0802a4c32e",
    "createdAt": "2018-02-22T02:34:38Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.types.StructType\n+\n+class StructTypeSuite extends SparkFunSuite{\n+\n+  test(\"SPARK-23462 lookup a single missing field should output existing fields\") {\n+    val s = StructType.fromDDL(\"a INT\")"
  }, {
    "author": {
      "login": "xysun"
    },
    "body": "done",
    "commit": "78e037d06d2972062cac14fe8b503e0802a4c32e",
    "createdAt": "2018-02-22T04:11:19Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.types.StructType\n+\n+class StructTypeSuite extends SparkFunSuite{\n+\n+  test(\"SPARK-23462 lookup a single missing field should output existing fields\") {\n+    val s = StructType.fromDDL(\"a INT\")"
  }],
  "prId": 20649
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Could we put this file under `sql/catalyst/src/test/scala/org/apache/spark/sql/types` or move the test cases into `DataTypeSuite`?",
    "commit": "78e037d06d2972062cac14fe8b503e0802a4c32e",
    "createdAt": "2018-02-22T08:28:01Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.types.StructType\n+\n+class StructTypeSuite extends SparkFunSuite {"
  }, {
    "author": {
      "login": "xysun"
    },
    "body": "moved",
    "commit": "78e037d06d2972062cac14fe8b503e0802a4c32e",
    "createdAt": "2018-02-28T09:19:24Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.types.StructType\n+\n+class StructTypeSuite extends SparkFunSuite {"
  }],
  "prId": 20649
}, {
  "comments": [{
    "author": {
      "login": "mgaido91"
    },
    "body": "nit: this empty line should be removed",
    "commit": "78e037d06d2972062cac14fe8b503e0802a4c32e",
    "createdAt": "2018-02-23T13:55:26Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.types.StructType\n+\n+class StructTypeSuite extends SparkFunSuite {\n+\n+  test(\"SPARK-23462 lookup a single missing field should output existing fields\") {\n+    val s = StructType.fromDDL(\"a INT, b STRING\")\n+    val e = intercept[IllegalArgumentException](s(\"c\")).getMessage\n+    assert(e.contains(\"Available fields: a,b\"))\n+  }\n+\n+  test(\"SPARK-23462 lookup a set of missing fields should output existing fields\") {\n+    val s = StructType.fromDDL(\"a INT, b STRING\")\n+    val e = intercept[IllegalArgumentException](s(Set(\"a\", \"c\"))).getMessage\n+    assert(e.contains(\"Available fields: a,b\"))\n+  }\n+\n+  test(\"SPARK-23462 lookup fieldIndex for missing field should output existing fields\") {\n+    val s = StructType.fromDDL(\"a INT, b STRING\")\n+    val e = intercept[IllegalArgumentException](s.fieldIndex(\"c\")).getMessage\n+    assert(e.contains(\"Available fields: a,b\"))\n+  }\n+"
  }, {
    "author": {
      "login": "xysun"
    },
    "body": "all done",
    "commit": "78e037d06d2972062cac14fe8b503e0802a4c32e",
    "createdAt": "2018-02-28T09:19:31Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.types.StructType\n+\n+class StructTypeSuite extends SparkFunSuite {\n+\n+  test(\"SPARK-23462 lookup a single missing field should output existing fields\") {\n+    val s = StructType.fromDDL(\"a INT, b STRING\")\n+    val e = intercept[IllegalArgumentException](s(\"c\")).getMessage\n+    assert(e.contains(\"Available fields: a,b\"))\n+  }\n+\n+  test(\"SPARK-23462 lookup a set of missing fields should output existing fields\") {\n+    val s = StructType.fromDDL(\"a INT, b STRING\")\n+    val e = intercept[IllegalArgumentException](s(Set(\"a\", \"c\"))).getMessage\n+    assert(e.contains(\"Available fields: a,b\"))\n+  }\n+\n+  test(\"SPARK-23462 lookup fieldIndex for missing field should output existing fields\") {\n+    val s = StructType.fromDDL(\"a INT, b STRING\")\n+    val e = intercept[IllegalArgumentException](s.fieldIndex(\"c\")).getMessage\n+    assert(e.contains(\"Available fields: a,b\"))\n+  }\n+"
  }],
  "prId": 20649
}, {
  "comments": [{
    "author": {
      "login": "kiszk"
    },
    "body": "nit: Would it be better to combine these three tests into one?  It could reduce the total test time.",
    "commit": "78e037d06d2972062cac14fe8b503e0802a4c32e",
    "createdAt": "2018-02-23T14:32:29Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.types.StructType\n+\n+class StructTypeSuite extends SparkFunSuite {\n+\n+  test(\"SPARK-23462 lookup a single missing field should output existing fields\") {"
  }, {
    "author": {
      "login": "jiangxb1987"
    },
    "body": "This is not a bug fix, so please don't include the JIRA number in the test case description.",
    "commit": "78e037d06d2972062cac14fe8b503e0802a4c32e",
    "createdAt": "2018-02-25T12:56:44Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.types.StructType\n+\n+class StructTypeSuite extends SparkFunSuite {\n+\n+  test(\"SPARK-23462 lookup a single missing field should output existing fields\") {"
  }, {
    "author": {
      "login": "xysun"
    },
    "body": "removed JIRA number.\r\n@kiszk i still prefer to keep separate tests as they are calling separate methods. Let me know if you feel strongly against it. ",
    "commit": "78e037d06d2972062cac14fe8b503e0802a4c32e",
    "createdAt": "2018-02-28T09:20:00Z",
    "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.types.StructType\n+\n+class StructTypeSuite extends SparkFunSuite {\n+\n+  test(\"SPARK-23462 lookup a single missing field should output existing fields\") {"
  }],
  "prId": 20649
}]