[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "cc @marmbrus @yhuai should we remove this test?\n",
    "commit": "c44c93ada9e79578d43ba7ad09e30c342f05e921",
    "createdAt": "2015-12-25T15:21:35Z",
    "diffHunk": "@@ -38,7 +38,7 @@ class RowFormatConvertersSuite extends SparkPlanTest with SharedSQLContext {\n   private val outputsUnsafe = Sort(Nil, false, PhysicalRDD(Seq.empty, null, \"name\"))\n   assert(outputsUnsafe.outputsUnsafeRows)\n \n-  test(\"planner should insert unsafe->safe conversions when required\") {\n+  ignore(\"planner should insert unsafe->safe conversions when required\") {"
  }, {
    "author": {
      "login": "yhuai"
    },
    "body": "Is there any other cases that we will have the conversion? Or, we can create a dummy operator that only accepts safe rows. So, we can still test the logic of adding conversions. \n",
    "commit": "c44c93ada9e79578d43ba7ad09e30c342f05e921",
    "createdAt": "2015-12-28T18:01:07Z",
    "diffHunk": "@@ -38,7 +38,7 @@ class RowFormatConvertersSuite extends SparkPlanTest with SharedSQLContext {\n   private val outputsUnsafe = Sort(Nil, false, PhysicalRDD(Seq.empty, null, \"name\"))\n   assert(outputsUnsafe.outputsUnsafeRows)\n \n-  test(\"planner should insert unsafe->safe conversions when required\") {\n+  ignore(\"planner should insert unsafe->safe conversions when required\") {"
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "Added a dummy node for it. Thanks.\n",
    "commit": "c44c93ada9e79578d43ba7ad09e30c342f05e921",
    "createdAt": "2015-12-29T09:02:58Z",
    "diffHunk": "@@ -38,7 +38,7 @@ class RowFormatConvertersSuite extends SparkPlanTest with SharedSQLContext {\n   private val outputsUnsafe = Sort(Nil, false, PhysicalRDD(Seq.empty, null, \"name\"))\n   assert(outputsUnsafe.outputsUnsafeRows)\n \n-  test(\"planner should insert unsafe->safe conversions when required\") {\n+  ignore(\"planner should insert unsafe->safe conversions when required\") {"
  }],
  "prId": 10330
}]