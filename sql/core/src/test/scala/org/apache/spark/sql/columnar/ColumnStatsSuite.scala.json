[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "By re-ordering catalyst date type handling, I found we missed boolean type here. Added.\nHowever, we still miss binary type here, as `BINARY` is not subclass of `NativeColumnType` but `testColumnStats` only accepts `NativeColumnType`.\nI'm wondering if we could make `BINARY` extend `NativeColumnType`, as `BinaryType` extends `AtomicType`.\ncc @liancheng \n",
    "commit": "463044d42fe56bb60c57f80c0becddab6dd975f0",
    "createdAt": "2015-06-29T00:49:36Z",
    "diffHunk": "@@ -22,19 +22,19 @@ import org.apache.spark.sql.catalyst.expressions.InternalRow\n import org.apache.spark.sql.types._\n \n class ColumnStatsSuite extends SparkFunSuite {\n+  testColumnStats(classOf[BooleanColumnStats], BOOLEAN, InternalRow(true, false, 0))",
    "line": 4
  }, {
    "author": {
      "login": "liancheng"
    },
    "body": "Yes we can. `BINARY` was designed to extend from `ByteArrayColumnType` to avoid duplicate code since `BINARY` and `GENERIC` are quite similar.\n",
    "commit": "463044d42fe56bb60c57f80c0becddab6dd975f0",
    "createdAt": "2015-06-29T18:40:05Z",
    "diffHunk": "@@ -22,19 +22,19 @@ import org.apache.spark.sql.catalyst.expressions.InternalRow\n import org.apache.spark.sql.types._\n \n class ColumnStatsSuite extends SparkFunSuite {\n+  testColumnStats(classOf[BooleanColumnStats], BOOLEAN, InternalRow(true, false, 0))",
    "line": 4
  }],
  "prId": 7073
}]