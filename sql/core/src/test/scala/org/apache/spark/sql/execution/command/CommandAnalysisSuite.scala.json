[{
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "Can we move this into `InsertSuite`?",
    "commit": "ec711af6008f8b0178e5aa435b53556630b26d28",
    "createdAt": "2019-07-05T02:01:50Z",
    "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.command\n+\n+import org.apache.spark.sql.AnalysisException\n+import org.apache.spark.sql.catalyst.QueryPlanningTracker\n+import org.apache.spark.sql.catalyst.analysis.{Analyzer, FunctionRegistry}\n+import org.apache.spark.sql.catalyst.catalog.{InMemoryCatalog, SessionCatalog}\n+import org.apache.spark.sql.catalyst.plans.PlanTest\n+import org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\n+import org.apache.spark.sql.execution.SparkSqlParser\n+import org.apache.spark.sql.test.SharedSQLContext\n+\n+class CommandAnalysisSuite extends PlanTest with SharedSQLContext {\n+  val parser = new SparkSqlParser(conf)\n+  val catalog = new SessionCatalog(new InMemoryCatalog, FunctionRegistry.builtin, conf)\n+  val analyzer = new Analyzer(catalog, conf) {\n+    override def checkAnalysis(plan: LogicalPlan): Unit = {\n+      val planToCheck = plan match {\n+        case e: InsertIntoDataSourceDirCommand => e.query\n+        case _ => plan\n+      }\n+      super.checkAnalysis(planToCheck)\n+    }\n+  }\n+\n+  test(\"SPARK-28195: checkAnalysis should work for InsertIntoDataSourceDirCommand\") {\n+    val query = \"insert overwrite directory '/path' using parquet select * from table1\"\n+    val exception = intercept[AnalysisException](\n+      analyzer.executeAndCheck(parser.parsePlan(query), new QueryPlanningTracker))\n+    assert(exception.getMessage.contains(\"Table or view not found: table1\"))\n+  }",
    "line": 47
  }, {
    "author": {
      "login": "liupc"
    },
    "body": "It's OK",
    "commit": "ec711af6008f8b0178e5aa435b53556630b26d28",
    "createdAt": "2019-07-05T03:29:23Z",
    "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.command\n+\n+import org.apache.spark.sql.AnalysisException\n+import org.apache.spark.sql.catalyst.QueryPlanningTracker\n+import org.apache.spark.sql.catalyst.analysis.{Analyzer, FunctionRegistry}\n+import org.apache.spark.sql.catalyst.catalog.{InMemoryCatalog, SessionCatalog}\n+import org.apache.spark.sql.catalyst.plans.PlanTest\n+import org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\n+import org.apache.spark.sql.execution.SparkSqlParser\n+import org.apache.spark.sql.test.SharedSQLContext\n+\n+class CommandAnalysisSuite extends PlanTest with SharedSQLContext {\n+  val parser = new SparkSqlParser(conf)\n+  val catalog = new SessionCatalog(new InMemoryCatalog, FunctionRegistry.builtin, conf)\n+  val analyzer = new Analyzer(catalog, conf) {\n+    override def checkAnalysis(plan: LogicalPlan): Unit = {\n+      val planToCheck = plan match {\n+        case e: InsertIntoDataSourceDirCommand => e.query\n+        case _ => plan\n+      }\n+      super.checkAnalysis(planToCheck)\n+    }\n+  }\n+\n+  test(\"SPARK-28195: checkAnalysis should work for InsertIntoDataSourceDirCommand\") {\n+    val query = \"insert overwrite directory '/path' using parquet select * from table1\"\n+    val exception = intercept[AnalysisException](\n+      analyzer.executeAndCheck(parser.parsePlan(query), new QueryPlanningTracker))\n+    assert(exception.getMessage.contains(\"Table or view not found: table1\"))\n+  }",
    "line": 47
  }],
  "prId": 25019
}]