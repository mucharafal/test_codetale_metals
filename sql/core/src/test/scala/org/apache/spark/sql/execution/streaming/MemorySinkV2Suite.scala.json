[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "nit:\r\n```\r\nwriter.add(MemoryWriterCommitMessage(0, Seq(Row(1), Row(2))))\r\nwriter.add(MemoryWriterCommitMessage(1, Seq(Row(3), Row(4))))\r\n..\r\n```",
    "commit": "540ff0631471a27af23abb7e8c034bad1ba27cbc",
    "createdAt": "2018-01-30T09:21:42Z",
    "diffHunk": "@@ -41,19 +41,22 @@ class MemorySinkV2Suite extends StreamTest with BeforeAndAfter {\n   test(\"continuous writer\") {\n     val sink = new MemorySinkV2\n     val writer = new MemoryStreamWriter(sink, OutputMode.Append())\n-    writer.commit(0,\n-      Array(\n-        MemoryWriterCommitMessage(0, Seq(Row(1), Row(2))),\n-        MemoryWriterCommitMessage(1, Seq(Row(3), Row(4))),\n-        MemoryWriterCommitMessage(2, Seq(Row(6), Row(7)))\n-      ))\n+    val messages = Seq(\n+      MemoryWriterCommitMessage(0, Seq(Row(1), Row(2))),\n+      MemoryWriterCommitMessage(1, Seq(Row(3), Row(4))),\n+      MemoryWriterCommitMessage(2, Seq(Row(6), Row(7)))\n+    )\n+    messages.foreach(writer.add(_))"
  }],
  "prId": 20386
}]