[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "Declare this inside the test since it's only used there? (Also would make it easier to match the test to the data if more tests are added.)",
    "commit": "93cacbabfe72a1c7dba20d00612757ae6e11f854",
    "createdAt": "2017-09-14T17:45:43Z",
    "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution\n+\n+import org.json4s.jackson.JsonMethods.parse\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.execution.ui.SparkListenerSQLExecutionStart\n+import org.apache.spark.util.JsonProtocol\n+\n+class SQLJsonProtocolSuite extends SparkFunSuite {\n+\n+  test(\"SparkPlanGraph backward compatibility: metadata\") {\n+    val reconstructedEvent = JsonProtocol.sparkEventFromJson(parse(SQLExecutionStartJsonString))\n+    val expectedEvent = SparkListenerSQLExecutionStart(0, \"test desc\", \"test detail\", \"test plan\",\n+      new SparkPlanInfo(\"TestNode\", \"test string\", Nil, Nil), 0)\n+    assert(reconstructedEvent == expectedEvent)\n+  }\n+\n+  private val SQLExecutionStartJsonString ="
  }],
  "prId": 19237
}]