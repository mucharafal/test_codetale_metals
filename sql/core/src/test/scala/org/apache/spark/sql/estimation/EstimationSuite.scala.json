[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "in order to write a unit test, can we create a logical plan node with a some fake statistics that's passed in? that way we don't need everything end to end and can even put this in the catalyst package.\r\n",
    "commit": "a5ca31c06522d453ecde83470360fe4d826bc424",
    "createdAt": "2017-01-06T05:28:14Z",
    "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.estimation\n+\n+import org.apache.spark.sql.QueryTest\n+import org.apache.spark.sql.catalyst.expressions.{Attribute, AttributeMap}\n+import org.apache.spark.sql.catalyst.plans.logical._\n+import org.apache.spark.sql.catalyst.plans.logical.estimation.EstimationUtils._\n+import org.apache.spark.sql.test.SharedSQLContext\n+\n+\n+/**\n+ * End-to-end suite testing statistics estimation for logical operators.\n+ */\n+class EstimationSuite extends QueryTest with SharedSQLContext {\n+  import testImplicits._\n+\n+  /** Table info: all estimation tests are conducted on these tables. */\n+  private val estimationTestData = Seq(\n+    (\"estimation_test1\", Seq(\"key11\", \"key12\"), Seq[(Int, Int)]((1, 10), (2, 10))))\n+\n+  /** Original column stats */\n+  val colStatForKey11 = ColumnStat(2, Some(1), Some(2), 0, 4, 4)\n+  val colStatForKey12 = ColumnStat(1, Some(10), Some(10), 0, 4, 4)\n+\n+  override def beforeAll(): Unit = {"
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "Basically it would be great to make this actually a unit test suite, rather than an end-to-end test suite.\r\n",
    "commit": "a5ca31c06522d453ecde83470360fe4d826bc424",
    "createdAt": "2017-01-06T05:55:14Z",
    "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.estimation\n+\n+import org.apache.spark.sql.QueryTest\n+import org.apache.spark.sql.catalyst.expressions.{Attribute, AttributeMap}\n+import org.apache.spark.sql.catalyst.plans.logical._\n+import org.apache.spark.sql.catalyst.plans.logical.estimation.EstimationUtils._\n+import org.apache.spark.sql.test.SharedSQLContext\n+\n+\n+/**\n+ * End-to-end suite testing statistics estimation for logical operators.\n+ */\n+class EstimationSuite extends QueryTest with SharedSQLContext {\n+  import testImplicits._\n+\n+  /** Table info: all estimation tests are conducted on these tables. */\n+  private val estimationTestData = Seq(\n+    (\"estimation_test1\", Seq(\"key11\", \"key12\"), Seq[(Int, Int)]((1, 10), (2, 10))))\n+\n+  /** Original column stats */\n+  val colStatForKey11 = ColumnStat(2, Some(1), Some(2), 0, 4, 4)\n+  val colStatForKey12 = ColumnStat(1, Some(10), Some(10), 0, 4, 4)\n+\n+  override def beforeAll(): Unit = {"
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "(the way you can fix this is to create a leaf logical plan node with statistics you can pass in)",
    "commit": "a5ca31c06522d453ecde83470360fe4d826bc424",
    "createdAt": "2017-01-06T06:33:46Z",
    "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.estimation\n+\n+import org.apache.spark.sql.QueryTest\n+import org.apache.spark.sql.catalyst.expressions.{Attribute, AttributeMap}\n+import org.apache.spark.sql.catalyst.plans.logical._\n+import org.apache.spark.sql.catalyst.plans.logical.estimation.EstimationUtils._\n+import org.apache.spark.sql.test.SharedSQLContext\n+\n+\n+/**\n+ * End-to-end suite testing statistics estimation for logical operators.\n+ */\n+class EstimationSuite extends QueryTest with SharedSQLContext {\n+  import testImplicits._\n+\n+  /** Table info: all estimation tests are conducted on these tables. */\n+  private val estimationTestData = Seq(\n+    (\"estimation_test1\", Seq(\"key11\", \"key12\"), Seq[(Int, Int)]((1, 10), (2, 10))))\n+\n+  /** Original column stats */\n+  val colStatForKey11 = ColumnStat(2, Some(1), Some(2), 0, 4, 4)\n+  val colStatForKey12 = ColumnStat(1, Some(10), Some(10), 0, 4, 4)\n+\n+  override def beforeAll(): Unit = {"
  }],
  "prId": 16430
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "rename this ProjectEstimationSuite?",
    "commit": "a5ca31c06522d453ecde83470360fe4d826bc424",
    "createdAt": "2017-01-06T05:55:49Z",
    "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.estimation\n+\n+import org.apache.spark.sql.QueryTest\n+import org.apache.spark.sql.catalyst.expressions.{Attribute, AttributeMap}\n+import org.apache.spark.sql.catalyst.plans.logical._\n+import org.apache.spark.sql.catalyst.plans.logical.estimation.EstimationUtils._\n+import org.apache.spark.sql.test.SharedSQLContext\n+\n+\n+/**\n+ * End-to-end suite testing statistics estimation for logical operators.\n+ */\n+class EstimationSuite extends QueryTest with SharedSQLContext {"
  }],
  "prId": 16430
}]