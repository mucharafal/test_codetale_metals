[{
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "private\n",
    "commit": "a3270b0e8470e09cafffcc18579e8b0febdc0ef6",
    "createdAt": "2015-09-10T21:09:08Z",
    "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.local\n+\n+import org.apache.spark.sql.Column\n+import org.apache.spark.sql.catalyst.expressions.{Ascending, Expression, SortOrder}\n+\n+class TakeOrderedAndProjectNodeSuite extends LocalNodeTest {\n+\n+  def columnToSortOrder(sortExprs: Column*): Seq[SortOrder] = {"
  }],
  "prId": 8573
}, {
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "same here, can you put this in a common method to clean up the duplication?\n",
    "commit": "a3270b0e8470e09cafffcc18579e8b0febdc0ef6",
    "createdAt": "2015-09-10T21:09:34Z",
    "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.local\n+\n+import org.apache.spark.sql.Column\n+import org.apache.spark.sql.catalyst.expressions.{Ascending, Expression, SortOrder}\n+\n+class TakeOrderedAndProjectNodeSuite extends LocalNodeTest {\n+\n+  def columnToSortOrder(sortExprs: Column*): Seq[SortOrder] = {\n+    val sortOrder: Seq[SortOrder] = sortExprs.map { col =>\n+      col.expr match {\n+        case expr: SortOrder =>\n+          expr\n+        case expr: Expression =>\n+          SortOrder(expr, Ascending)\n+      }\n+    }\n+    sortOrder\n+  }\n+\n+  test(\"asc\") {\n+    val input = (1 to 10).map(i => (i, i.toString)).toDF(\"key\", \"value\")\n+    checkAnswer(\n+      input,\n+      node => TakeOrderedAndProjectNode(5, columnToSortOrder(input.col(\"key\")), None, node),\n+      input.sort(input.col(\"key\")).limit(5).collect()\n+    )\n+  }\n+\n+  test(\"desc\") {\n+    val input = (1 to 10).map(i => (i, i.toString)).toDF(\"key\", \"value\")\n+    checkAnswer(\n+      input,\n+      node => TakeOrderedAndProjectNode(5, columnToSortOrder(input.col(\"key\").desc), None, node),\n+      input.sort(input.col(\"key\").desc).limit(5).collect()\n+    )"
  }],
  "prId": 8573
}]