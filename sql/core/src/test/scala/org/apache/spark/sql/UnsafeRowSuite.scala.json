[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "replace all == with ===\n",
    "commit": "0900ca10935dec9404724cf43c0bafdf99a23551",
    "createdAt": "2015-08-03T08:30:08Z",
    "diffHunk": "@@ -82,4 +82,42 @@ class UnsafeRowSuite extends SparkFunSuite {\n       assert(unsafeRow.get(0, dataType) === null)\n     }\n   }\n+\n+  test(\"createFromByteArray and copyFrom\") {\n+    val row = InternalRow(1, UTF8String.fromString(\"abc\"))\n+    val converter = UnsafeProjection.create(Array[DataType](IntegerType, StringType))\n+    val unsafeRow = converter.apply(row)\n+\n+    val emptyRow = UnsafeRow.createFromByteArray(64, 2)\n+    val buffer = emptyRow.getBaseObject\n+\n+    emptyRow.copyFrom(unsafeRow)\n+    assert(emptyRow.getSizeInBytes() == unsafeRow.getSizeInBytes)"
  }],
  "prId": 7885
}]