[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Looks good. @mgaido91 .\r\nCould you add more to be complete? For example, `ByteType`, `DecimalType`, `DateType`, `BinaryType`, `StructType`?",
    "commit": "5281fb14cfc0c561b34fc0908a86c8be63d3af7c",
    "createdAt": "2019-05-01T21:55:39Z",
    "diffHunk": "@@ -84,4 +84,17 @@ class RowSuite extends SparkFunSuite with SharedSQLContext {\n     val r3 = Row(\"World\")\n     assert(r3.hashCode() != r1.hashCode())\n   }\n+\n+  test(\"toString\") {\n+    val r1 = Row(2147483647, 21474.83647, (-5).toShort, \"this is a string\", true, null)\n+    assert(r1.toString == \"[2147483647,21474.83647,-5,this is a string,true,null]\")\n+    val r2 = Row(null, Int.MinValue, Double.NaN, Short.MaxValue, \"\", false)\n+    assert(r2.toString == \"[null,-2147483648,NaN,32767,,false]\")\n+    val tsString = \"2019-05-01 17:30:12.0\"\n+    val r3 = Row(r1, Seq(1, 2, 3), Map(1 -> \"a\", 2 -> \"b\"), java.sql.Timestamp.valueOf(tsString))\n+    assert(r3.toString == \"[[2147483647,21474.83647,-5,this is a string,true,null],\" +\n+      s\"List(1, 2, 3),Map(1 -> a, 2 -> b),$tsString]\")\n+    val empty = Row()\n+    assert(empty.toString == \"[]\")",
    "line": 23
  }, {
    "author": {
      "login": "mgaido91"
    },
    "body": "`StructType ` is already present. I added the others but `BinaryType` because the array of bytes as toString returns just a reference, so it makes little sense to add it IMO. Thanks.",
    "commit": "5281fb14cfc0c561b34fc0908a86c8be63d3af7c",
    "createdAt": "2019-05-02T09:17:24Z",
    "diffHunk": "@@ -84,4 +84,17 @@ class RowSuite extends SparkFunSuite with SharedSQLContext {\n     val r3 = Row(\"World\")\n     assert(r3.hashCode() != r1.hashCode())\n   }\n+\n+  test(\"toString\") {\n+    val r1 = Row(2147483647, 21474.83647, (-5).toShort, \"this is a string\", true, null)\n+    assert(r1.toString == \"[2147483647,21474.83647,-5,this is a string,true,null]\")\n+    val r2 = Row(null, Int.MinValue, Double.NaN, Short.MaxValue, \"\", false)\n+    assert(r2.toString == \"[null,-2147483648,NaN,32767,,false]\")\n+    val tsString = \"2019-05-01 17:30:12.0\"\n+    val r3 = Row(r1, Seq(1, 2, 3), Map(1 -> \"a\", 2 -> \"b\"), java.sql.Timestamp.valueOf(tsString))\n+    assert(r3.toString == \"[[2147483647,21474.83647,-5,this is a string,true,null],\" +\n+      s\"List(1, 2, 3),Map(1 -> a, 2 -> b),$tsString]\")\n+    val empty = Row()\n+    assert(empty.toString == \"[]\")",
    "line": 23
  }],
  "prId": 24505
}]