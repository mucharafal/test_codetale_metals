[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "How about these test cases for temporary views? \r\n\r\n```\r\n-- Test data.\r\nCREATE OR REPLACE TEMPORARY VIEW testData AS SELECT * FROM VALUES\r\n(1, 1), (1, 2), (2, 1), (2, 2), (3, 1), (3, 2), (null, 1), (3, null), (null, null)\r\nAS testData(a, b);\r\n```",
    "commit": "b2e411c859f4266428db6b4fbf55d89a101e50bf",
    "createdAt": "2017-02-28T05:10:09Z",
    "diffHunk": "@@ -52,6 +52,19 @@ abstract class SQLViewSuite extends QueryTest with SQLTestUtils {\n     }\n   }\n \n+  test(\"column resolution scenarios with local temp view\") {\n+    val df = Seq(2).toDF(\"i1\")\n+    df.createOrReplaceTempView(\"table1\")\n+    withTempView(\"table1\") {\n+      checkAnswer(spark.sql(\"SELECT table1.* FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT * FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT i1 FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT table1.i1 FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT a.i1 FROM table1 AS a\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT i1 FROM table1 AS a\"), Row(2))"
  }, {
    "author": {
      "login": "skambha"
    },
    "body": "Sure, let me look at converting these too. Thanks.",
    "commit": "b2e411c859f4266428db6b4fbf55d89a101e50bf",
    "createdAt": "2017-02-28T05:12:31Z",
    "diffHunk": "@@ -52,6 +52,19 @@ abstract class SQLViewSuite extends QueryTest with SQLTestUtils {\n     }\n   }\n \n+  test(\"column resolution scenarios with local temp view\") {\n+    val df = Seq(2).toDF(\"i1\")\n+    df.createOrReplaceTempView(\"table1\")\n+    withTempView(\"table1\") {\n+      checkAnswer(spark.sql(\"SELECT table1.* FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT * FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT i1 FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT table1.i1 FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT a.i1 FROM table1 AS a\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT i1 FROM table1 AS a\"), Row(2))"
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "Also doable for global temporary view, I think",
    "commit": "b2e411c859f4266428db6b4fbf55d89a101e50bf",
    "createdAt": "2017-02-28T05:18:39Z",
    "diffHunk": "@@ -52,6 +52,19 @@ abstract class SQLViewSuite extends QueryTest with SQLTestUtils {\n     }\n   }\n \n+  test(\"column resolution scenarios with local temp view\") {\n+    val df = Seq(2).toDF(\"i1\")\n+    df.createOrReplaceTempView(\"table1\")\n+    withTempView(\"table1\") {\n+      checkAnswer(spark.sql(\"SELECT table1.* FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT * FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT i1 FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT table1.i1 FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT a.i1 FROM table1 AS a\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT i1 FROM table1 AS a\"), Row(2))"
  }, {
    "author": {
      "login": "skambha"
    },
    "body": "Hi Xiao,  I have moved my new local temp view tests and the global temp view tests to the SQLQueryTestSuite framework as well.  Please take a look. Thanks. ",
    "commit": "b2e411c859f4266428db6b4fbf55d89a101e50bf",
    "createdAt": "2017-03-01T18:34:38Z",
    "diffHunk": "@@ -52,6 +52,19 @@ abstract class SQLViewSuite extends QueryTest with SQLTestUtils {\n     }\n   }\n \n+  test(\"column resolution scenarios with local temp view\") {\n+    val df = Seq(2).toDF(\"i1\")\n+    df.createOrReplaceTempView(\"table1\")\n+    withTempView(\"table1\") {\n+      checkAnswer(spark.sql(\"SELECT table1.* FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT * FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT i1 FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT table1.i1 FROM table1\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT a.i1 FROM table1 AS a\"), Row(2))\n+      checkAnswer(spark.sql(\"SELECT i1 FROM table1 AS a\"), Row(2))"
  }],
  "prId": 17067
}]