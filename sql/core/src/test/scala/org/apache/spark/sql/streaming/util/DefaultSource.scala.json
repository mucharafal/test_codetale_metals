[{
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "Nit, I'd consider calling this `BlockingSource` or something more descriptive of what makes it special.",
    "commit": "e6d1e251097cc5a71ef67dec995f5cf86f977891",
    "createdAt": "2016-12-09T21:54:28Z",
    "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.streaming.util\n+\n+import org.apache.spark.sql.{SQLContext, _}\n+import org.apache.spark.sql.execution.streaming.{LongOffset, Offset, Sink, Source}\n+import org.apache.spark.sql.sources.{StreamSinkProvider, StreamSourceProvider}\n+import org.apache.spark.sql.streaming.{OutputMode, StreamingQueryManagerSuite}\n+import org.apache.spark.sql.types.{IntegerType, StructField, StructType}\n+\n+/** Dummy provider: returns a SourceProvider with a blocking `createSource` call. */\n+class DefaultSource extends StreamSourceProvider with StreamSinkProvider {"
  }, {
    "author": {
      "login": "brkyvz"
    },
    "body": "I wanted to call it that, but doesn't the magic require it to be called `DefaultSource`?",
    "commit": "e6d1e251097cc5a71ef67dec995f5cf86f977891",
    "createdAt": "2016-12-09T21:54:53Z",
    "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.streaming.util\n+\n+import org.apache.spark.sql.{SQLContext, _}\n+import org.apache.spark.sql.execution.streaming.{LongOffset, Offset, Sink, Source}\n+import org.apache.spark.sql.sources.{StreamSinkProvider, StreamSourceProvider}\n+import org.apache.spark.sql.streaming.{OutputMode, StreamingQueryManagerSuite}\n+import org.apache.spark.sql.types.{IntegerType, StructField, StructType}\n+\n+/** Dummy provider: returns a SourceProvider with a blocking `createSource` call. */\n+class DefaultSource extends StreamSourceProvider with StreamSinkProvider {"
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "No, you can give fully qualified classnames as well.",
    "commit": "e6d1e251097cc5a71ef67dec995f5cf86f977891",
    "createdAt": "2016-12-09T21:57:39Z",
    "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.streaming.util\n+\n+import org.apache.spark.sql.{SQLContext, _}\n+import org.apache.spark.sql.execution.streaming.{LongOffset, Offset, Sink, Source}\n+import org.apache.spark.sql.sources.{StreamSinkProvider, StreamSourceProvider}\n+import org.apache.spark.sql.streaming.{OutputMode, StreamingQueryManagerSuite}\n+import org.apache.spark.sql.types.{IntegerType, StructField, StructType}\n+\n+/** Dummy provider: returns a SourceProvider with a blocking `createSource` call. */\n+class DefaultSource extends StreamSourceProvider with StreamSinkProvider {"
  }],
  "prId": 16238
}]