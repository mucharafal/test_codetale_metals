[{
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "nit: v -> codegenEnabled",
    "commit": "c4ca075b11086dc20ffd62b7170c41d761919429",
    "createdAt": "2018-10-23T03:56:50Z",
    "diffHunk": "@@ -122,19 +122,22 @@ class ExistenceJoinSuite extends SparkPlanTest with SharedSQLContext {\n \n     test(s\"$testName using BroadcastHashJoin\") {\n       extractJoinParts().foreach { case (_, leftKeys, rightKeys, boundCondition, _, _) =>\n-        withSQLConf(SQLConf.SHUFFLE_PARTITIONS.key -> \"1\") {\n-          checkAnswer2(leftRows, rightRows, (left: SparkPlan, right: SparkPlan) =>\n-            EnsureRequirements(left.sqlContext.sessionState.conf).apply(\n-              BroadcastHashJoinExec(\n-                leftKeys, rightKeys, joinType, BuildRight, boundCondition, left, right)),\n-            expectedAnswer,\n-            sortAnswers = true)\n-          checkAnswer2(leftRows, rightRows, (left: SparkPlan, right: SparkPlan) =>\n-            EnsureRequirements(left.sqlContext.sessionState.conf).apply(\n-              createLeftSemiPlusJoin(BroadcastHashJoinExec(\n-                leftKeys, rightKeys, leftSemiPlus, BuildRight, boundCondition, left, right))),\n-            expectedAnswer,\n-            sortAnswers = true)\n+        Seq(\"false\", \"true\").foreach { v =>"
  }],
  "prId": 22755
}]