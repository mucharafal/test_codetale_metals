[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "how about we use the full error message here?\n",
    "commit": "5bbe995fba0a3355b0edc795bd7e9188e6227188",
    "createdAt": "2016-07-27T04:31:07Z",
    "diffHunk": "@@ -69,4 +73,25 @@ class SQLCompatibilityFunctionSuite extends QueryTest with SharedSQLContext {\n       sql(\"SELECT nvl2(null, 1, 2.1d), nvl2('n', 1, 2.1d)\"),\n       Row(2.1, 1.0))\n   }\n+\n+  test(\"SPARK-16730 cast alias functions for Hive compatibility\") {\n+    checkAnswer(\n+      sql(\"SELECT boolean(1), tinyint(1), smallint(1), int(1), bigint(1)\"),\n+      Row(true, 1.toByte, 1.toShort, 1, 1L))\n+\n+    checkAnswer(\n+      sql(\"SELECT float(1), double(1), decimal(1)\"),\n+      Row(1.toFloat, 1.0, new BigDecimal(1)))\n+\n+    checkAnswer(\n+      sql(\"SELECT date(\\\"2014-04-04\\\"), timestamp(date(\\\"2014-04-04\\\"))\"),\n+      Row(new java.util.Date(114, 3, 4), new Timestamp(114, 3, 4, 0, 0, 0, 0)))\n+\n+    checkAnswer(\n+      sql(\"SELECT string(1)\"),\n+      Row(\"1\"))\n+\n+    // Error handling: only one argument\n+    assert(intercept[AnalysisException](sql(\"SELECT string(1, 2)\")).getMessage.contains(\"one arg\"))"
  }, {
    "author": {
      "login": "petermaxlee"
    },
    "body": "fixed\n",
    "commit": "5bbe995fba0a3355b0edc795bd7e9188e6227188",
    "createdAt": "2016-07-27T04:42:40Z",
    "diffHunk": "@@ -69,4 +73,25 @@ class SQLCompatibilityFunctionSuite extends QueryTest with SharedSQLContext {\n       sql(\"SELECT nvl2(null, 1, 2.1d), nvl2('n', 1, 2.1d)\"),\n       Row(2.1, 1.0))\n   }\n+\n+  test(\"SPARK-16730 cast alias functions for Hive compatibility\") {\n+    checkAnswer(\n+      sql(\"SELECT boolean(1), tinyint(1), smallint(1), int(1), bigint(1)\"),\n+      Row(true, 1.toByte, 1.toShort, 1, 1L))\n+\n+    checkAnswer(\n+      sql(\"SELECT float(1), double(1), decimal(1)\"),\n+      Row(1.toFloat, 1.0, new BigDecimal(1)))\n+\n+    checkAnswer(\n+      sql(\"SELECT date(\\\"2014-04-04\\\"), timestamp(date(\\\"2014-04-04\\\"))\"),\n+      Row(new java.util.Date(114, 3, 4), new Timestamp(114, 3, 4, 0, 0, 0, 0)))\n+\n+    checkAnswer(\n+      sql(\"SELECT string(1)\"),\n+      Row(\"1\"))\n+\n+    // Error handling: only one argument\n+    assert(intercept[AnalysisException](sql(\"SELECT string(1, 2)\")).getMessage.contains(\"one arg\"))"
  }],
  "prId": 14364
}]