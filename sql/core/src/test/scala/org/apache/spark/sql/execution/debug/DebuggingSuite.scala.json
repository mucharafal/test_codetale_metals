[{
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "We need to always print this id? only for reuse cases?",
    "commit": "0ddfeb8d9776a2de446ec239ffd1f36b55f76751",
    "createdAt": "2019-08-15T01:49:36Z",
    "diffHunk": "@@ -62,8 +62,8 @@ class DebuggingSuite extends SparkFunSuite with SharedSQLContext {\n     }\n \n     val output = captured.toString()\n-    assert(output.contains(\n-      \"\"\"== BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false])) ==\n+    assert(output.replaceAll(\"\\\\[id=#\\\\d+\\\\]\", \"[id=#x]\").contains(\n+      \"\"\"== BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false])), [id=#x] ==",
    "line": 7
  }, {
    "author": {
      "login": "hvanhovell"
    },
    "body": "Then you need to make two passes over the tree. The first one to figure out which exchanges are reused and the second to print the tree. This seems a bit excessive for a debugging tool.",
    "commit": "0ddfeb8d9776a2de446ec239ffd1f36b55f76751",
    "createdAt": "2019-08-15T07:45:04Z",
    "diffHunk": "@@ -62,8 +62,8 @@ class DebuggingSuite extends SparkFunSuite with SharedSQLContext {\n     }\n \n     val output = captured.toString()\n-    assert(output.contains(\n-      \"\"\"== BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false])) ==\n+    assert(output.replaceAll(\"\\\\[id=#\\\\d+\\\\]\", \"[id=#x]\").contains(\n+      \"\"\"== BroadcastExchange HashedRelationBroadcastMode(List(input[0, bigint, false])), [id=#x] ==",
    "line": 7
  }],
  "prId": 25434
}]