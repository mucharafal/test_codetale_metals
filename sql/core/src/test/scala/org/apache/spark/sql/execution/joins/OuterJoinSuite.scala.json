[{
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "not your code, but we should unindent the `withSQLConf` here\n",
    "commit": "c861d7204ffc380a950616d39331df3f202882c3",
    "createdAt": "2015-09-08T20:35:42Z",
    "diffHunk": "@@ -97,17 +97,17 @@ class OuterJoinSuite extends SparkPlanTest with SharedSQLContext {\n             }\n         }\n       }\n+    }\n \n-      test(s\"$testName using SortMergeOuterJoin\") {\n-        extractJoinParts().foreach { case (_, leftKeys, rightKeys, boundCondition, _, _) =>\n-            withSQLConf(SQLConf.SHUFFLE_PARTITIONS.key -> \"1\") {\n-              checkAnswer2(leftRows, rightRows, (left: SparkPlan, right: SparkPlan) =>\n-                EnsureRequirements(sqlContext).apply(\n-                  SortMergeOuterJoin(leftKeys, rightKeys, joinType, boundCondition, left, right)),\n-                expectedAnswer.map(Row.fromTuple),\n-                sortAnswers = false)\n-            }\n-        }\n+    test(s\"$testName using SortMergeOuterJoin\") {\n+      extractJoinParts().foreach { case (_, leftKeys, rightKeys, boundCondition, _, _) =>\n+          withSQLConf(SQLConf.SHUFFLE_PARTITIONS.key -> \"1\") {\n+            checkAnswer2(leftRows, rightRows, (left: SparkPlan, right: SparkPlan) =>\n+              EnsureRequirements(sqlContext).apply(\n+                SortMergeOuterJoin(leftKeys, rightKeys, joinType, boundCondition, left, right)),\n+              expectedAnswer.map(Row.fromTuple),\n+              sortAnswers = true)\n+          }"
  }],
  "prId": 8579
}]