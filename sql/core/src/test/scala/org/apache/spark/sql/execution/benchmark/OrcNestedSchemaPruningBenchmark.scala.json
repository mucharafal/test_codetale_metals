[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Are we going to have `OrcV2NestedSchemaPruningBenchmark`? Or, adding V2 benchmark suite into this file?",
    "commit": "5366a86c49536fdcc37eb24c982726537397c75b",
    "createdAt": "2019-03-04T09:36:01Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.benchmark\n+\n+import org.apache.spark.sql.internal.SQLConf\n+\n+/**\n+ * Synthetic benchmark for nested schema pruning performance for ORC datasource.\n+ * To run this benchmark:\n+ * {{{\n+ *   1. without sbt:\n+ *      bin/spark-submit --class <this class> --jars <spark core test jar> <sql core test jar>\n+ *   2. build/sbt \"sql/test:runMain <this class>\"\n+ *   3. generate result:\n+ *      SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"sql/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/OrcNestedSchemaPruningBenchmark-results.txt\".\n+ * }}}\n+ */\n+object OrcNestedSchemaPruningBenchmark extends NestedSchemaPruningBenchmark {",
    "line": 34
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "I didn't use it right now as #23943 doesn't enable nested schema pruning for ORC V2 now. We can have it here too because we will use it later.",
    "commit": "5366a86c49536fdcc37eb24c982726537397c75b",
    "createdAt": "2019-03-04T09:40:37Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.benchmark\n+\n+import org.apache.spark.sql.internal.SQLConf\n+\n+/**\n+ * Synthetic benchmark for nested schema pruning performance for ORC datasource.\n+ * To run this benchmark:\n+ * {{{\n+ *   1. without sbt:\n+ *      bin/spark-submit --class <this class> --jars <spark core test jar> <sql core test jar>\n+ *   2. build/sbt \"sql/test:runMain <this class>\"\n+ *   3. generate result:\n+ *      SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"sql/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/OrcNestedSchemaPruningBenchmark-results.txt\".\n+ * }}}\n+ */\n+object OrcNestedSchemaPruningBenchmark extends NestedSchemaPruningBenchmark {",
    "line": 34
  }],
  "prId": 23955
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "`ORC` -> `ORC v1`.",
    "commit": "5366a86c49536fdcc37eb24c982726537397c75b",
    "createdAt": "2019-03-04T09:36:28Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.benchmark\n+\n+import org.apache.spark.sql.internal.SQLConf\n+\n+/**\n+ * Synthetic benchmark for nested schema pruning performance for ORC datasource."
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "Sure.",
    "commit": "5366a86c49536fdcc37eb24c982726537397c75b",
    "createdAt": "2019-03-04T09:41:05Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.benchmark\n+\n+import org.apache.spark.sql.internal.SQLConf\n+\n+/**\n+ * Synthetic benchmark for nested schema pruning performance for ORC datasource."
  }],
  "prId": 23955
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "What about invoke the parent's `runBenchmarkSuite` method after wrapping `withSQLConf(SQLConf.USE_V1_SOURCE_READER_LIST.key -> \"orc\", SQLConf.USE_V1_SOURCE_WRITER_LIST.key -> \"orc\")`?",
    "commit": "5366a86c49536fdcc37eb24c982726537397c75b",
    "createdAt": "2019-03-04T09:39:28Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.benchmark\n+\n+import org.apache.spark.sql.internal.SQLConf\n+\n+/**\n+ * Synthetic benchmark for nested schema pruning performance for ORC datasource.\n+ * To run this benchmark:\n+ * {{{\n+ *   1. without sbt:\n+ *      bin/spark-submit --class <this class> --jars <spark core test jar> <sql core test jar>\n+ *   2. build/sbt \"sql/test:runMain <this class>\"\n+ *   3. generate result:\n+ *      SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"sql/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/OrcNestedSchemaPruningBenchmark-results.txt\".\n+ * }}}\n+ */\n+object OrcNestedSchemaPruningBenchmark extends NestedSchemaPruningBenchmark {\n+  override val dataSourceName: String = \"orc\"\n+\n+  override def runBenchmarkSuite(mainArgs: Array[String]): Unit = {",
    "line": 38
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "Ok.",
    "commit": "5366a86c49536fdcc37eb24c982726537397c75b",
    "createdAt": "2019-03-04T09:41:02Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.execution.benchmark\n+\n+import org.apache.spark.sql.internal.SQLConf\n+\n+/**\n+ * Synthetic benchmark for nested schema pruning performance for ORC datasource.\n+ * To run this benchmark:\n+ * {{{\n+ *   1. without sbt:\n+ *      bin/spark-submit --class <this class> --jars <spark core test jar> <sql core test jar>\n+ *   2. build/sbt \"sql/test:runMain <this class>\"\n+ *   3. generate result:\n+ *      SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"sql/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/OrcNestedSchemaPruningBenchmark-results.txt\".\n+ * }}}\n+ */\n+object OrcNestedSchemaPruningBenchmark extends NestedSchemaPruningBenchmark {\n+  override val dataSourceName: String = \"orc\"\n+\n+  override def runBenchmarkSuite(mainArgs: Array[String]): Unit = {",
    "line": 38
  }],
  "prId": 23955
}]