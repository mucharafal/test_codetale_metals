[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "is it a necessary change?",
    "commit": "d2375e0185185cd3516b25c14b48c12840957cbf",
    "createdAt": "2017-12-05T06:23:50Z",
    "diffHunk": "@@ -241,7 +241,7 @@ class PlannerSuite extends SharedSQLContext {\n   test(\"collapse adjacent repartitions\") {\n     val doubleRepartitioned = testData.repartition(10).repartition(20).coalesce(5)\n     def countRepartitions(plan: LogicalPlan): Int = plan.collect { case r: Repartition => r }.length\n-    assert(countRepartitions(doubleRepartitioned.queryExecution.logical) === 3)\n+    assert(countRepartitions(doubleRepartitioned.queryExecution.analyzed) === 3)",
    "line": 5
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "Please see previous discussion: https://github.com/apache/spark/pull/17770/files#r118480364\r\n",
    "commit": "d2375e0185185cd3516b25c14b48c12840957cbf",
    "createdAt": "2017-12-05T07:21:02Z",
    "diffHunk": "@@ -241,7 +241,7 @@ class PlannerSuite extends SharedSQLContext {\n   test(\"collapse adjacent repartitions\") {\n     val doubleRepartitioned = testData.repartition(10).repartition(20).coalesce(5)\n     def countRepartitions(plan: LogicalPlan): Int = plan.collect { case r: Repartition => r }.length\n-    assert(countRepartitions(doubleRepartitioned.queryExecution.logical) === 3)\n+    assert(countRepartitions(doubleRepartitioned.queryExecution.analyzed) === 3)",
    "line": 5
  }],
  "prId": 19873
}]