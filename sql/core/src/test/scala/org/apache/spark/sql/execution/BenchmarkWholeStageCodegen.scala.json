[{
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "The test actually touches both `stddev` and `kurtosis`, which should be reflected by the name.\n",
    "commit": "fe6fe50eae2490e7669a40200c34483533d2b632",
    "createdAt": "2016-02-02T07:34:17Z",
    "diffHunk": "@@ -59,6 +59,55 @@ class BenchmarkWholeStageCodegen extends SparkFunSuite {\n     benchmark.run()\n   }\n \n+  def testStddev(values: Int): Unit = {"
  }],
  "prId": 10960
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Add `as implemented in Spark 1.6`.\n",
    "commit": "fe6fe50eae2490e7669a40200c34483533d2b632",
    "createdAt": "2016-02-02T07:34:24Z",
    "diffHunk": "@@ -59,6 +59,55 @@ class BenchmarkWholeStageCodegen extends SparkFunSuite {\n     benchmark.run()\n   }\n \n+  def testStddev(values: Int): Unit = {\n+\n+    val benchmark = new Benchmark(\"stddev\", values)\n+\n+    benchmark.addCase(\"stddev w/o codegen\") { iter =>\n+      sqlContext.setConf(\"spark.sql.codegen.wholeStage\", \"false\")\n+      sqlContext.range(values).groupBy().agg(\"id\" -> \"stddev\").collect()\n+    }\n+\n+    benchmark.addCase(\"stddev w codegen\") { iter =>\n+      sqlContext.setConf(\"spark.sql.codegen.wholeStage\", \"true\")\n+      sqlContext.range(values).groupBy().agg(\"id\" -> \"stddev\").collect()\n+    }\n+\n+    benchmark.addCase(\"kurtosis w/o codegen\") { iter =>\n+      sqlContext.setConf(\"spark.sql.codegen.wholeStage\", \"false\")\n+      sqlContext.range(values).groupBy().agg(\"id\" -> \"kurtosis\").collect()\n+    }\n+\n+    benchmark.addCase(\"kurtosis w codegen\") { iter =>\n+      sqlContext.setConf(\"spark.sql.codegen.wholeStage\", \"true\")\n+      sqlContext.range(values).groupBy().agg(\"id\" -> \"kurtosis\").collect()\n+    }\n+\n+\n+    /**\n+    Using ImperativeAggregate:"
  }],
  "prId": 10960
}, {
  "comments": [{
    "author": {
      "login": "mengxr"
    },
    "body": "Shall we add a comment and say those benchmarks are skipped in normal build, or change `test(\"benchmark\")` to `ignore(\"benchmark\")` to be clear.\n",
    "commit": "fe6fe50eae2490e7669a40200c34483533d2b632",
    "createdAt": "2016-02-02T07:34:27Z",
    "diffHunk": "@@ -148,7 +197,8 @@ class BenchmarkWholeStageCodegen extends SparkFunSuite {\n   }\n \n   test(\"benchmark\") {"
  }],
  "prId": 10960
}]