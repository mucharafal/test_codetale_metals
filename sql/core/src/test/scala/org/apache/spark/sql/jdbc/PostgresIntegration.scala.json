[{
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "nit: PostgresIntegrationSuite\n",
    "commit": "fbc471bd8de9d7742b4329f79610ab9dd8fe123c",
    "createdAt": "2015-08-12T17:31:41Z",
    "diffHunk": "@@ -0,0 +1,137 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.jdbc\n+\n+import java.sql.DriverManager\n+\n+import org.scalatest.BeforeAndAfterAll\n+\n+import com.spotify.docker.client.DockerClient\n+import com.spotify.docker.client.messages.ContainerConfig\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.test._\n+\n+class PostgresDatabase {\n+  val docker: DockerClient = DockerClientFactory.get()\n+\n+  val containerId = {\n+    docker.pull(\"postgres\")\n+    val config = ContainerConfig.builder().image(\"postgres\")\n+      .env(\"POSTGRES_PASSWORD=rootpass\")\n+      .build()\n+    val id = docker.createContainer(config).id\n+    docker.startContainer(id)\n+    id\n+  }\n+\n+  val ip = docker.inspectContainer(containerId).networkSettings.ipAddress\n+\n+  def close() {\n+    docker.killContainer(containerId)\n+    docker.removeContainer(containerId)\n+    DockerClientFactory.close(docker)\n+  }\n+}\n+\n+class PostgresIntegration extends SparkFunSuite with BeforeAndAfterAll {"
  }],
  "prId": 8101
}]