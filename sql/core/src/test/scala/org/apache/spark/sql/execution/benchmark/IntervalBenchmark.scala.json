[{
  "comments": [{
    "author": {
      "login": "yaooqinn"
    },
    "body": "Only add `seconds` decimals for the master branch to support, so we can compare it with our PR in a fair play. Also, parsing other units should be as same as the seconds.",
    "commit": "fe3e6bad7e0e8d53c751a042343c03c277dfaf8d",
    "createdAt": "2019-11-19T09:33:21Z",
    "diffHunk": "@@ -85,7 +85,8 @@ object IntervalBenchmark extends SqlBasedBenchmark {\n     val timeUnits = Seq(\n       \"13 months\", \"                      1                     months\",\n       \"100 weeks\", \"9 days\", \"12 hours\", \"-                    3 hours\",\n-      \"5 minutes\", \"45 seconds\", \"123 milliseconds\", \"567 microseconds\")\n+      \"5 minutes\", \"45.123456 seconds\", \"123 milliseconds\", \"567 microseconds\",\n+      \"98.76543210 seconds\", \"12.34567890 seconds\", \"99.999999999 seconds\")",
    "line": 6
  }],
  "prId": 26592
}, {
  "comments": [{
    "author": {
      "login": "yaooqinn"
    },
    "body": "units were added more and more, try to reduce some test round",
    "commit": "fe3e6bad7e0e8d53c751a042343c03c277dfaf8d",
    "createdAt": "2019-11-19T09:34:12Z",
    "diffHunk": "@@ -94,9 +95,11 @@ object IntervalBenchmark extends SqlBasedBenchmark {\n     addCase(benchmark, N, \"prepare string w/o interval\", buildString(false, timeUnits))\n     addCase(benchmark, N, intervalToTest) // Only years\n \n-    for (unit <- timeUnits) {\n+    timeUnits.zipWithIndex.foreach { case (unit, i) =>\n       intervalToTest.append(unit)\n-      addCase(benchmark, N, intervalToTest)\n+      if (i % 2 == 0) {",
    "line": 18
  }],
  "prId": 26592
}]