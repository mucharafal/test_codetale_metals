[{
  "comments": [{
    "author": {
      "login": "kiszk"
    },
    "body": "nit: Do we remove `git stat2`?",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-08-26T17:09:29Z",
    "diffHunk": "@@ -969,6 +969,22 @@ class DatasetSuite extends QueryTest with SharedSQLContext {\n     checkShowString(ds, expected)\n   }\n \n+\n+  test(\"SPARK-2444git stat2 Show should follow spark.show.default.number.of.rows\") {"
  }, {
    "author": {
      "login": "AndrewKL"
    },
    "body": "removed",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-09-06T13:09:18Z",
    "diffHunk": "@@ -969,6 +969,22 @@ class DatasetSuite extends QueryTest with SharedSQLContext {\n     checkShowString(ds, expected)\n   }\n \n+\n+  test(\"SPARK-2444git stat2 Show should follow spark.show.default.number.of.rows\") {"
  }],
  "prId": 22162
}, {
  "comments": [{
    "author": {
      "login": "kiszk"
    },
    "body": "Do we need to compare the result with an expected string using `assert`?",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-08-26T17:11:39Z",
    "diffHunk": "@@ -969,6 +969,22 @@ class DatasetSuite extends QueryTest with SharedSQLContext {\n     checkShowString(ds, expected)\n   }\n \n+\n+  test(\"SPARK-2444git stat2 Show should follow spark.show.default.number.of.rows\") {\n+    withSQLConf(\"spark.sql.show.defaultNumRows\" -> \"100\") {\n+      val ds = (1 to 1000).toDS().as[Int].show"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "I think its ok to check the output number of rows in show.",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-08-28T01:00:01Z",
    "diffHunk": "@@ -969,6 +969,22 @@ class DatasetSuite extends QueryTest with SharedSQLContext {\n     checkShowString(ds, expected)\n   }\n \n+\n+  test(\"SPARK-2444git stat2 Show should follow spark.show.default.number.of.rows\") {\n+    withSQLConf(\"spark.sql.show.defaultNumRows\" -> \"100\") {\n+      val ds = (1 to 1000).toDS().as[Int].show"
  }, {
    "author": {
      "login": "AndrewKL"
    },
    "body": "The way show is currently implemented makes it difficult to fully test this.  The truncate and max length parameters are passed into the showString function that would normally be used to test the out put.  unfortunately the parameters and final string is then passed into the println function without an easy way to capture the results.  This could be tested with a spying library but there isn't one in in spark (yet).",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-09-07T18:16:11Z",
    "diffHunk": "@@ -969,6 +969,22 @@ class DatasetSuite extends QueryTest with SharedSQLContext {\n     checkShowString(ds, expected)\n   }\n \n+\n+  test(\"SPARK-2444git stat2 Show should follow spark.show.default.number.of.rows\") {\n+    withSQLConf(\"spark.sql.show.defaultNumRows\" -> \"100\") {\n+      val ds = (1 to 1000).toDS().as[Int].show"
  }],
  "prId": 22162
}, {
  "comments": [{
    "author": {
      "login": "kiszk"
    },
    "body": "ditto",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-08-26T17:11:47Z",
    "diffHunk": "@@ -969,6 +969,22 @@ class DatasetSuite extends QueryTest with SharedSQLContext {\n     checkShowString(ds, expected)\n   }\n \n+\n+  test(\"SPARK-2444git stat2 Show should follow spark.show.default.number.of.rows\") {\n+    withSQLConf(\"spark.sql.show.defaultNumRows\" -> \"100\") {\n+      val ds = (1 to 1000).toDS().as[Int].show\n+    }\n+  }\n+\n+  test(\"SPARK-24442 Show should follow spark.show.default.truncate.characters.per.column\") {\n+    withSQLConf(\"spark.sql.show.truncateMaxCharsPerColumn\" -> \"30\") {\n+      val ds = (1 to 1000)\n+        .map(x => \"123456789_123456789_123456789_\")\n+        .toDS().as[String]\n+        .show"
  }],
  "prId": 22162
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "`SQLConf.SQL_SHOW_DEFAULT_MAX_ROWS.key -> \"100\"`",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-09-08T03:44:48Z",
    "diffHunk": "@@ -969,6 +969,20 @@ class DatasetSuite extends QueryTest with SharedSQLContext {\n     checkShowString(ds, expected)\n   }\n \n+  test(\"SPARK-24442 Show should follow spark.show.default.number.of.rows\") {\n+    withSQLConf(\"spark.sql.show.defaultNumRows\" -> \"100\") {",
    "line": 5
  }],
  "prId": 22162
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "ditto",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-09-08T03:44:55Z",
    "diffHunk": "@@ -969,6 +969,20 @@ class DatasetSuite extends QueryTest with SharedSQLContext {\n     checkShowString(ds, expected)\n   }\n \n+  test(\"SPARK-24442 Show should follow spark.show.default.number.of.rows\") {\n+    withSQLConf(\"spark.sql.show.defaultNumRows\" -> \"100\") {\n+      (1 to 1000).toDS().as[Int].show\n+    }\n+  }\n+\n+  test(\"SPARK-24442 Show should follow spark.show.default.truncate.characters.per.column\") {\n+    withSQLConf(\"spark.sql.show.truncateMaxCharsPerColumn\" -> \"30\") {",
    "line": 11
  }],
  "prId": 22162
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "Plz compare the show result?\r\nhttps://github.com/apache/spark/blob/9241e1e7e66574cfafa68791771959dfc39c9684/sql/core/src/test/scala/org/apache/spark/sql/UDFSuite.scala#L326",
    "commit": "d85d89200792671b74b0eb71738a5eae58956737",
    "createdAt": "2018-09-08T03:47:57Z",
    "diffHunk": "@@ -969,6 +969,20 @@ class DatasetSuite extends QueryTest with SharedSQLContext {\n     checkShowString(ds, expected)\n   }\n \n+  test(\"SPARK-24442 Show should follow spark.show.default.number.of.rows\") {\n+    withSQLConf(\"spark.sql.show.defaultNumRows\" -> \"100\") {\n+      (1 to 1000).toDS().as[Int].show\n+    }\n+  }\n+\n+  test(\"SPARK-24442 Show should follow spark.show.default.truncate.characters.per.column\") {\n+    withSQLConf(\"spark.sql.show.truncateMaxCharsPerColumn\" -> \"30\") {\n+      (1 to 1000).map(x => \"123456789_123456789_123456789_\")\n+        .toDS().as[String]\n+        .show",
    "line": 14
  }],
  "prId": 22162
}]