[{
  "comments": [{
    "author": {
      "login": "davies"
    },
    "body": "Is this an array of int or long?\n",
    "commit": "2ef6e3bdbd16c7f7b9ff006d48382e108ed37eef",
    "createdAt": "2016-08-04T17:22:56Z",
    "diffHunk": "@@ -73,8 +73,8 @@ class ColumnTypeSuite extends SparkFunSuite with Logging {\n     checkActualSize(BINARY, Array.fill[Byte](4)(0.toByte), 4 + 4)\n     checkActualSize(COMPACT_DECIMAL(15, 10), Decimal(0, 15, 10), 8)\n     checkActualSize(LARGE_DECIMAL(20, 10), Decimal(0, 20, 10), 5)\n-    checkActualSize(ARRAY_TYPE, Array[Any](1), 16)",
    "line": 4
  }, {
    "author": {
      "login": "kiszk"
    },
    "body": "It seem to have to keep `Any`. When I changed it to `Int`, I got the following cast error:\n\n``` java\n[I cannot be cast to org.apache.spark.sql.catalyst.util.ArrayData\njava.lang.ClassCastException: [I cannot be cast to org.apache.spark.sql.catalyst.util.ArrayData\n    at org.apache.spark.sql.catalyst.expressions.BaseGenericInternalRow$class.getArray(rows.scala:48)\n    at org.apache.spark.sql.catalyst.expressions.GenericMutableRow.getArray(rows.scala:236)\n    at org.apache.spark.sql.catalyst.expressions.GeneratedClass$SpecificUnsafeProjection.apply(generated.java:34)\n    at org.apache.spark.sql.execution.columnar.ColumnTypeSuite$$anonfun$2.checkActualSize$1(ColumnTypeSuite.scala:60)\n...\n```\n",
    "commit": "2ef6e3bdbd16c7f7b9ff006d48382e108ed37eef",
    "createdAt": "2016-08-06T00:37:00Z",
    "diffHunk": "@@ -73,8 +73,8 @@ class ColumnTypeSuite extends SparkFunSuite with Logging {\n     checkActualSize(BINARY, Array.fill[Byte](4)(0.toByte), 4 + 4)\n     checkActualSize(COMPACT_DECIMAL(15, 10), Decimal(0, 15, 10), 8)\n     checkActualSize(LARGE_DECIMAL(20, 10), Decimal(0, 20, 10), 5)\n-    checkActualSize(ARRAY_TYPE, Array[Any](1), 16)",
    "line": 4
  }],
  "prId": 13680
}]