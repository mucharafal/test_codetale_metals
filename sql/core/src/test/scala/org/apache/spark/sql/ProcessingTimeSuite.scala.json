[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "Reduced 10 lines of deprecation warning to 1 line.",
    "commit": "41d550f599afba023ede3e8a4f8e5af910e440b9",
    "createdAt": "2017-07-19T01:35:09Z",
    "diffHunk": "@@ -22,20 +22,22 @@ import java.util.concurrent.TimeUnit\n import scala.concurrent.duration._\n \n import org.apache.spark.SparkFunSuite\n-import org.apache.spark.sql.streaming.ProcessingTime\n+import org.apache.spark.sql.streaming.{ProcessingTime, Trigger}\n \n class ProcessingTimeSuite extends SparkFunSuite {\n \n   test(\"create\") {\n-    assert(ProcessingTime(10.seconds).intervalMs === 10 * 1000)\n-    assert(ProcessingTime.create(10, TimeUnit.SECONDS).intervalMs === 10 * 1000)\n-    assert(ProcessingTime(\"1 minute\").intervalMs === 60 * 1000)\n-    assert(ProcessingTime(\"interval 1 minute\").intervalMs === 60 * 1000)\n-\n-    intercept[IllegalArgumentException] { ProcessingTime(null: String) }\n-    intercept[IllegalArgumentException] { ProcessingTime(\"\") }\n-    intercept[IllegalArgumentException] { ProcessingTime(\"invalid\") }\n-    intercept[IllegalArgumentException] { ProcessingTime(\"1 month\") }\n-    intercept[IllegalArgumentException] { ProcessingTime(\"1 year\") }\n+    def getIntervalMs(trigger: Trigger): Long = trigger.asInstanceOf[ProcessingTime].intervalMs",
    "line": 20
  }],
  "prId": 18678
}]