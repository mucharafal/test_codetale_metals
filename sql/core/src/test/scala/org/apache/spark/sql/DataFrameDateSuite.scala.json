[{
  "comments": [{
    "author": {
      "login": "yhuai"
    },
    "body": "Very minor: change it to `$\"t\" >= \"2014\"`?\n",
    "commit": "bdef29c4327245e33e3a6f8b6e9402dbc2ac9e4d",
    "createdAt": "2015-06-19T20:32:48Z",
    "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql\n+\n+import java.sql.{Date, Timestamp}\n+\n+class DataFrameDateTimeSuite extends QueryTest {\n+\n+  private lazy val ctx = org.apache.spark.sql.test.TestSQLContext\n+  import ctx.implicits._\n+\n+  test(\"timestamp comparison with date strings\") {\n+    val df = Seq(\n+      (1, Timestamp.valueOf(\"2015-01-01 00:00:00\")),\n+      (2, Timestamp.valueOf(\"2014-01-01 00:00:00\"))).toDF(\"i\", \"t\")\n+\n+    checkAnswer(\n+      df.select(\"t\").filter($\"t\" <= \"2014-06-01\"),\n+      Row(Timestamp.valueOf(\"2014-01-01 00:00:00\")) :: Nil)\n+\n+\n+    checkAnswer(\n+      df.select(\"t\").filter($\"t\" >= \"2014-06-01\"),\n+      Row(Timestamp.valueOf(\"2015-01-01 00:00:00\")) :: Nil)\n+  }\n+\n+  test(\"date comparison with date strings\") {\n+    val df = Seq(\n+      (1, Date.valueOf(\"2015-01-01\")),\n+      (2, Date.valueOf(\"2014-01-01\"))).toDF(\"i\", \"t\")\n+\n+    checkAnswer(\n+      df.select(\"t\").filter($\"t\" <= \"2014-06-01\"),\n+      Row(Date.valueOf(\"2014-01-01\")) :: Nil)\n+\n+\n+    checkAnswer(\n+      df.select(\"t\").filter($\"t\" >= \"2014-06-01\"),"
  }],
  "prId": 6888
}]