[{
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "If you made these objects `case object` you should just use `toString` here.\n",
    "commit": "ed71bbd38f389dcdc11949513a02fe11ff7bdb6a",
    "createdAt": "2014-04-01T20:47:05Z",
    "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.columnar.compression\n+\n+import org.scalatest.FunSuite\n+\n+import org.apache.spark.sql.catalyst.types.NativeType\n+import org.apache.spark.sql.columnar._\n+import org.apache.spark.sql.columnar.ColumnarTestUtils._\n+\n+class RunLengthEncodingSuite extends FunSuite {\n+  testRunLengthEncoding(new BooleanColumnStats, BOOLEAN)\n+  testRunLengthEncoding(new ByteColumnStats,    BYTE)\n+  testRunLengthEncoding(new ShortColumnStats,   SHORT)\n+  testRunLengthEncoding(new IntColumnStats,     INT)\n+  testRunLengthEncoding(new LongColumnStats,    LONG)\n+  testRunLengthEncoding(new StringColumnStats,  STRING)\n+\n+  def testRunLengthEncoding[T <: NativeType](\n+      columnStats: NativeColumnStats[T],\n+      columnType: NativeColumnType[T]) {\n+\n+    val schemeName = RunLengthEncoding.getClass.getSimpleName.stripSuffix(\"$\")"
  }],
  "prId": 285
}]