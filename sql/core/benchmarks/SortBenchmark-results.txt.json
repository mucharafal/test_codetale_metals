[{
  "comments": [{
    "author": {
      "login": "MaxGekk"
    },
    "body": "Radix sort became 3 times slower.",
    "commit": "f06a25ffb72ddc55f35616dcf10053c197521413",
    "createdAt": "2019-10-03T08:30:42Z",
    "diffHunk": "@@ -2,16 +2,15 @@\n radix sort\n ================================================================================================\n \n-Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n-Intel(R) Core(TM) i7-7820HQ CPU @ 2.90GHz\n-\n-radix sort 25000000:                     Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n-------------------------------------------------------------------------------------------------\n-reference TimSort key prefix array          11770 / 11960          2.1         470.8       1.0X\n-reference Arrays.sort                         2106 / 2128         11.9          84.3       5.6X\n-radix sort one byte                             93 /  100        269.7           3.7     126.9X\n-radix sort two bytes                           171 /  179        146.0           6.9      68.7X\n-radix sort eight bytes                         659 /  664         37.9          26.4      17.9X\n-radix sort key prefix array                   1024 / 1053         24.4          41.0      11.5X\n+OpenJDK 64-Bit Server VM 1.8.0_222-b10 on Linux 3.10.0-862.3.2.el7.x86_64\n+Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz\n+radix sort 25000000:                      Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------------------------------\n+reference TimSort key prefix array                15736          15778          59          1.6         629.4       1.0X\n+reference Arrays.sort                              3051           3057          10          8.2         122.0       5.2X\n+radix sort one byte                                 442            453          10         56.6          17.7      35.6X",
    "line": 21
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "ditto.",
    "commit": "f06a25ffb72ddc55f35616dcf10053c197521413",
    "createdAt": "2019-10-03T09:05:31Z",
    "diffHunk": "@@ -2,16 +2,15 @@\n radix sort\n ================================================================================================\n \n-Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n-Intel(R) Core(TM) i7-7820HQ CPU @ 2.90GHz\n-\n-radix sort 25000000:                     Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n-------------------------------------------------------------------------------------------------\n-reference TimSort key prefix array          11770 / 11960          2.1         470.8       1.0X\n-reference Arrays.sort                         2106 / 2128         11.9          84.3       5.6X\n-radix sort one byte                             93 /  100        269.7           3.7     126.9X\n-radix sort two bytes                           171 /  179        146.0           6.9      68.7X\n-radix sort eight bytes                         659 /  664         37.9          26.4      17.9X\n-radix sort key prefix array                   1024 / 1053         24.4          41.0      11.5X\n+OpenJDK 64-Bit Server VM 1.8.0_222-b10 on Linux 3.10.0-862.3.2.el7.x86_64\n+Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz\n+radix sort 25000000:                      Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------------------------------\n+reference TimSort key prefix array                15736          15778          59          1.6         629.4       1.0X\n+reference Arrays.sort                              3051           3057          10          8.2         122.0       5.2X\n+radix sort one byte                                 442            453          10         56.6          17.7      35.6X",
    "line": 21
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Ur, wait. Are you comparing between `Mac` and `Linux`? You should not do that. It's meaningless.\r\n```\r\nJava HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\r\n Intel(R) Core(TM) i7-7820HQ CPU @ 2.90GHz\r\n...\r\n OpenJDK 64-Bit Server VM 1.8.0_222-b10 on Linux 3.10.0-862.3.2.el7.x86_64\r\n Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz\r\n```",
    "commit": "f06a25ffb72ddc55f35616dcf10053c197521413",
    "createdAt": "2019-10-03T09:07:39Z",
    "diffHunk": "@@ -2,16 +2,15 @@\n radix sort\n ================================================================================================\n \n-Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n-Intel(R) Core(TM) i7-7820HQ CPU @ 2.90GHz\n-\n-radix sort 25000000:                     Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n-------------------------------------------------------------------------------------------------\n-reference TimSort key prefix array          11770 / 11960          2.1         470.8       1.0X\n-reference Arrays.sort                         2106 / 2128         11.9          84.3       5.6X\n-radix sort one byte                             93 /  100        269.7           3.7     126.9X\n-radix sort two bytes                           171 /  179        146.0           6.9      68.7X\n-radix sort eight bytes                         659 /  664         37.9          26.4      17.9X\n-radix sort key prefix array                   1024 / 1053         24.4          41.0      11.5X\n+OpenJDK 64-Bit Server VM 1.8.0_222-b10 on Linux 3.10.0-862.3.2.el7.x86_64\n+Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz\n+radix sort 25000000:                      Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------------------------------\n+reference TimSort key prefix array                15736          15778          59          1.6         629.4       1.0X\n+reference Arrays.sort                              3051           3057          10          8.2         122.0       5.2X\n+radix sort one byte                                 442            453          10         56.6          17.7      35.6X",
    "line": 21
  }, {
    "author": {
      "login": "MaxGekk"
    },
    "body": "I compared the ratio",
    "commit": "f06a25ffb72ddc55f35616dcf10053c197521413",
    "createdAt": "2019-10-03T10:13:45Z",
    "diffHunk": "@@ -2,16 +2,15 @@\n radix sort\n ================================================================================================\n \n-Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n-Intel(R) Core(TM) i7-7820HQ CPU @ 2.90GHz\n-\n-radix sort 25000000:                     Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n-------------------------------------------------------------------------------------------------\n-reference TimSort key prefix array          11770 / 11960          2.1         470.8       1.0X\n-reference Arrays.sort                         2106 / 2128         11.9          84.3       5.6X\n-radix sort one byte                             93 /  100        269.7           3.7     126.9X\n-radix sort two bytes                           171 /  179        146.0           6.9      68.7X\n-radix sort eight bytes                         659 /  664         37.9          26.4      17.9X\n-radix sort key prefix array                   1024 / 1053         24.4          41.0      11.5X\n+OpenJDK 64-Bit Server VM 1.8.0_222-b10 on Linux 3.10.0-862.3.2.el7.x86_64\n+Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz\n+radix sort 25000000:                      Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------------------------------\n+reference TimSort key prefix array                15736          15778          59          1.6         629.4       1.0X\n+reference Arrays.sort                              3051           3057          10          8.2         122.0       5.2X\n+radix sort one byte                                 442            453          10         56.6          17.7      35.6X",
    "line": 21
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "No. The ratio comparison is also meaningful when you on the similar Mac. \r\nMac and Linux Server has totally different CPU/Cache/RAM/DISK and its ratio.",
    "commit": "f06a25ffb72ddc55f35616dcf10053c197521413",
    "createdAt": "2019-10-03T15:55:42Z",
    "diffHunk": "@@ -2,16 +2,15 @@\n radix sort\n ================================================================================================\n \n-Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n-Intel(R) Core(TM) i7-7820HQ CPU @ 2.90GHz\n-\n-radix sort 25000000:                     Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n-------------------------------------------------------------------------------------------------\n-reference TimSort key prefix array          11770 / 11960          2.1         470.8       1.0X\n-reference Arrays.sort                         2106 / 2128         11.9          84.3       5.6X\n-radix sort one byte                             93 /  100        269.7           3.7     126.9X\n-radix sort two bytes                           171 /  179        146.0           6.9      68.7X\n-radix sort eight bytes                         659 /  664         37.9          26.4      17.9X\n-radix sort key prefix array                   1024 / 1053         24.4          41.0      11.5X\n+OpenJDK 64-Bit Server VM 1.8.0_222-b10 on Linux 3.10.0-862.3.2.el7.x86_64\n+Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz\n+radix sort 25000000:                      Best Time(ms)   Avg Time(ms)   Stdev(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------------------------------\n+reference TimSort key prefix array                15736          15778          59          1.6         629.4       1.0X\n+reference Arrays.sort                              3051           3057          10          8.2         122.0       5.2X\n+radix sort one byte                                 442            453          10         56.6          17.7      35.6X",
    "line": 21
  }],
  "prId": 26003
}]