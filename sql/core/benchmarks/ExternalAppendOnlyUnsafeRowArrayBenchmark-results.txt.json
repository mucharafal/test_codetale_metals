[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "It looks meaningfully different from the previous result. Let's see the server result together. I'm running this.",
    "commit": "b0d829eafe26177aad519224a16df017566e7ef4",
    "createdAt": "2019-01-09T07:42:11Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+================================================================================================\n+WITHOUT SPILL\n+================================================================================================\n+\n+Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n+Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\n+\n+Array with 100000 rows:                  Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                   4810 / 5120         21.3          47.0       1.0X\n+ExternalAppendOnlyUnsafeRowArray              4996 / 5043         20.5          48.8       1.0X\n+\n+Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n+Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\n+\n+Array with 1000 rows:                    Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                   8839 / 8951         29.7          33.7       1.0X\n+ExternalAppendOnlyUnsafeRowArray              9884 / 9888         26.5          37.7       0.9X\n+\n+Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n+Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\n+\n+Array with 30000 rows:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                 19980 / 20061         24.6          40.6       1.0X\n+ExternalAppendOnlyUnsafeRowArray            21630 / 21645         22.7          44.0       0.9X\n+\n+\n+================================================================================================\n+WITH SPILL\n+================================================================================================\n+\n+Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n+Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\n+\n+Spilling with 1000 rows:                 Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+UnsafeExternalSorter                        15829 / 15845         16.6          60.4       1.0X\n+ExternalAppendOnlyUnsafeRowArray            10158 / 10174         25.8          38.7       1.6X"
  }],
  "prId": 22617
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Could you run this once more in your side? For me, I've got the followings. The ratio difference is too big.\r\n\r\n**Mac**\r\n```\r\n[info] Java HotSpot(TM) 64-Bit Server VM 1.8.0_191-b12 on Mac OS X 10.14.2\r\n[info] Intel(R) Core(TM) i7-4770HQ CPU @ 2.20GHz\r\n[info] Array with 1000 rows:                    Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\r\n[info] ------------------------------------------------------------------------------------------------\r\n[info] ArrayBuffer                                 10226 / 10272         25.6          39.0       1.0X\r\n[info] ExternalAppendOnlyUnsafeRowArray            24301 / 24425         10.8          92.7       0.4X\r\n```\r\n\r\n**EC2 Server**\r\n```\r\n[info] OpenJDK 64-Bit Server VM 1.8.0_191-b12 on Linux 3.10.0-862.3.2.el7.x86_64\r\n[info] Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz\r\n[info] Array with 1000 rows:                    Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\r\n[info] ------------------------------------------------------------------------------------------------\r\n[info] ArrayBuffer                                 11988 / 12027         21.9          45.7       1.0X\r\n[info] ExternalAppendOnlyUnsafeRowArray            37480 / 37574          7.0         143.0       0.3X\r\n```",
    "commit": "b0d829eafe26177aad519224a16df017566e7ef4",
    "createdAt": "2019-01-09T09:14:01Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+================================================================================================\n+WITHOUT SPILL\n+================================================================================================\n+\n+Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n+Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\n+\n+Array with 100000 rows:                  Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                   4810 / 5120         21.3          47.0       1.0X\n+ExternalAppendOnlyUnsafeRowArray              4996 / 5043         20.5          48.8       1.0X\n+\n+Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n+Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\n+\n+Array with 1000 rows:                    Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                   8839 / 8951         29.7          33.7       1.0X\n+ExternalAppendOnlyUnsafeRowArray              9884 / 9888         26.5          37.7       0.9X"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "The is the only difference.",
    "commit": "b0d829eafe26177aad519224a16df017566e7ef4",
    "createdAt": "2019-01-09T09:32:00Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+================================================================================================\n+WITHOUT SPILL\n+================================================================================================\n+\n+Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n+Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\n+\n+Array with 100000 rows:                  Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                   4810 / 5120         21.3          47.0       1.0X\n+ExternalAppendOnlyUnsafeRowArray              4996 / 5043         20.5          48.8       1.0X\n+\n+Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n+Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\n+\n+Array with 1000 rows:                    Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                   8839 / 8951         29.7          33.7       1.0X\n+ExternalAppendOnlyUnsafeRowArray              9884 / 9888         26.5          37.7       0.9X"
  }, {
    "author": {
      "login": "peter-toth"
    },
    "body": "I'm rerunning it soon",
    "commit": "b0d829eafe26177aad519224a16df017566e7ef4",
    "createdAt": "2019-01-09T09:35:35Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+================================================================================================\n+WITHOUT SPILL\n+================================================================================================\n+\n+Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n+Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\n+\n+Array with 100000 rows:                  Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                   4810 / 5120         21.3          47.0       1.0X\n+ExternalAppendOnlyUnsafeRowArray              4996 / 5043         20.5          48.8       1.0X\n+\n+Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n+Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\n+\n+Array with 1000 rows:                    Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                   8839 / 8951         29.7          33.7       1.0X\n+ExternalAppendOnlyUnsafeRowArray              9884 / 9888         26.5          37.7       0.9X"
  }, {
    "author": {
      "login": "peter-toth"
    },
    "body": "Got the same ratio as you have this time:\r\n```\r\n[info] Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\r\n[info] Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\r\n[info] Array with 1000 rows:                    Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\r\n[info] ------------------------------------------------------------------------------------------------\r\n[info] ArrayBuffer                                 10028 / 10197         26.1          38.3       1.0X\r\n[info] ExternalAppendOnlyUnsafeRowArray            30053 / 30312          8.7         114.6       0.3X\r\n```",
    "commit": "b0d829eafe26177aad519224a16df017566e7ef4",
    "createdAt": "2019-01-09T11:31:44Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+================================================================================================\n+WITHOUT SPILL\n+================================================================================================\n+\n+Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n+Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\n+\n+Array with 100000 rows:                  Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                   4810 / 5120         21.3          47.0       1.0X\n+ExternalAppendOnlyUnsafeRowArray              4996 / 5043         20.5          48.8       1.0X\n+\n+Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n+Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\n+\n+Array with 1000 rows:                    Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                   8839 / 8951         29.7          33.7       1.0X\n+ExternalAppendOnlyUnsafeRowArray              9884 / 9888         26.5          37.7       0.9X"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Thank you for confirmation. Master branch seems to be changed.",
    "commit": "b0d829eafe26177aad519224a16df017566e7ef4",
    "createdAt": "2019-01-09T11:38:06Z",
    "diffHunk": "@@ -0,0 +1,50 @@\n+================================================================================================\n+WITHOUT SPILL\n+================================================================================================\n+\n+Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n+Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\n+\n+Array with 100000 rows:                  Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                   4810 / 5120         21.3          47.0       1.0X\n+ExternalAppendOnlyUnsafeRowArray              4996 / 5043         20.5          48.8       1.0X\n+\n+Java HotSpot(TM) 64-Bit Server VM 1.8.0_162-b12 on Mac OS X 10.13.6\n+Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz\n+\n+Array with 1000 rows:                    Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                   8839 / 8951         29.7          33.7       1.0X\n+ExternalAppendOnlyUnsafeRowArray              9884 / 9888         26.5          37.7       0.9X"
  }],
  "prId": 22617
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "I ran the original master branch and get the following. Since the trend is the same, this refactoring PR looks safe.\r\n```\r\n$ bin/spark-submit --class org.apache.spark.sql.execution.ExternalAppendOnlyUnsafeRowArrayBenchmark --jars core/target/scala-2.12/spark-core_2.12-3.0.0-SNAPSHOT-tests.jar sql/core/target/scala-2.12/spark-sql_2.12-3.0.0-SNAPSHOT-tests.jar\r\n...\r\nArray with 1000 rows:                    Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\r\n------------------------------------------------------------------------------------------------\r\nArrayBuffer                                   9556 / 9633         27.4          36.5       1.0X\r\nExternalAppendOnlyUnsafeRowArray            18514 / 18700         14.2          70.6       0.5X\r\n\r\nArray with 30000 rows:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\r\n------------------------------------------------------------------------------------------------\r\nArrayBuffer                                 22180 / 22195         22.2          45.1       1.0X\r\nExternalAppendOnlyUnsafeRowArray            24254 / 24331         20.3          49.3       0.9X\r\n\r\nArray with 100000 rows:                  Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\r\n------------------------------------------------------------------------------------------------\r\nArrayBuffer                                   4998 / 5052         20.5          48.8       1.0X\r\nExternalAppendOnlyUnsafeRowArray              4778 / 4821         21.4          46.7       1.0X\r\n\r\nSpilling with 1000 rows:                 Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\r\n------------------------------------------------------------------------------------------------\r\nUnsafeExternalSorter                        17536 / 17596         14.9          66.9       1.0X\r\nExternalAppendOnlyUnsafeRowArray            10380 / 10451         25.3          39.6       1.7X\r\n\r\nSpilling with 10000 rows:                Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\r\n------------------------------------------------------------------------------------------------\r\nUnsafeExternalSorter                             6 /    7         25.3          39.5       1.0X\r\nExternalAppendOnlyUnsafeRowArray                 6 /    7         26.3          38.0       1.0X\r\n```\r\n",
    "commit": "b0d829eafe26177aad519224a16df017566e7ef4",
    "createdAt": "2019-01-09T12:15:05Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+================================================================================================\n+WITHOUT SPILL\n+================================================================================================\n+\n+OpenJDK 64-Bit Server VM 1.8.0_191-b12 on Linux 3.10.0-862.3.2.el7.x86_64\n+Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz\n+Array with 100000 rows:                  Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                   6378 / 6550         16.1          62.3       1.0X\n+ExternalAppendOnlyUnsafeRowArray              6196 / 6242         16.5          60.5       1.0X\n+\n+OpenJDK 64-Bit Server VM 1.8.0_191-b12 on Linux 3.10.0-862.3.2.el7.x86_64\n+Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz\n+Array with 1000 rows:                    Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                 11988 / 12027         21.9          45.7       1.0X\n+ExternalAppendOnlyUnsafeRowArray            37480 / 37574          7.0         143.0       0.3X\n+\n+OpenJDK 64-Bit Server VM 1.8.0_191-b12 on Linux 3.10.0-862.3.2.el7.x86_64\n+Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz\n+Array with 30000 rows:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+ArrayBuffer                                 23536 / 23538         20.9          47.9       1.0X\n+ExternalAppendOnlyUnsafeRowArray            31275 / 31277         15.7          63.6       0.8X\n+\n+\n+================================================================================================\n+WITH SPILL\n+================================================================================================\n+\n+OpenJDK 64-Bit Server VM 1.8.0_191-b12 on Linux 3.10.0-862.3.2.el7.x86_64\n+Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz\n+Spilling with 1000 rows:                 Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+UnsafeExternalSorter                        29241 / 29279          9.0         111.5       1.0X\n+ExternalAppendOnlyUnsafeRowArray            14309 / 14313         18.3          54.6       2.0X\n+\n+OpenJDK 64-Bit Server VM 1.8.0_191-b12 on Linux 3.10.0-862.3.2.el7.x86_64\n+Intel(R) Xeon(R) CPU E5-2670 v2 @ 2.50GHz\n+Spilling with 10000 rows:                Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+UnsafeExternalSorter                            11 /   11         14.8          67.4       1.0X\n+ExternalAppendOnlyUnsafeRowArray                 9 /    9         17.6          56.8       1.2X\n+",
    "line": 44
  }],
  "prId": 22617
}]