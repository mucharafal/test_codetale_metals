[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "With the same reason (https://github.com/apache/spark/pull/22845#discussion_r229199434), it's difficult to figure out the CPU.",
    "commit": "422df479aae55b52e17eccf1f46675c9b7369ddd",
    "createdAt": "2018-10-30T07:47:44Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+================================================================================================\n+Benchmark for performance of JSON parsing\n+================================================================================================\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "I'll make a PR to you.",
    "commit": "422df479aae55b52e17eccf1f46675c9b7369ddd",
    "createdAt": "2018-10-30T08:00:47Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+================================================================================================\n+Benchmark for performance of JSON parsing\n+================================================================================================\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "@heary-cao . Could you review and merge https://github.com/heary-cao/spark/pull/3 ?",
    "commit": "422df479aae55b52e17eccf1f46675c9b7369ddd",
    "createdAt": "2018-10-30T08:26:16Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+================================================================================================\n+Benchmark for performance of JSON parsing\n+================================================================================================\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel"
  }],
  "prId": 22844
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Hi, @HyukjinKwon . According to the ratio, it seems to be a regression on `No encoding` case. How do you think this change?",
    "commit": "422df479aae55b52e17eccf1f46675c9b7369ddd",
    "createdAt": "2018-10-30T08:21:01Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+================================================================================================\n+Benchmark for performance of JSON parsing\n+================================================================================================\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON schema inferring:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 48088 / 48180          2.1         480.9       1.0X\n+UTF-8 is set                                71881 / 71992          1.4         718.8       0.7X\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON per-line parsing:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 12107 / 12246          8.3         121.1       1.0X\n+UTF-8 is set                                12375 / 12475          8.1         123.8       1.0X"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Wait .. this is almost 50% slower. This had to be around 8000ish.",
    "commit": "422df479aae55b52e17eccf1f46675c9b7369ddd",
    "createdAt": "2018-10-30T08:31:09Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+================================================================================================\n+Benchmark for performance of JSON parsing\n+================================================================================================\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON schema inferring:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 48088 / 48180          2.1         480.9       1.0X\n+UTF-8 is set                                71881 / 71992          1.4         718.8       0.7X\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON per-line parsing:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 12107 / 12246          8.3         121.1       1.0X\n+UTF-8 is set                                12375 / 12475          8.1         123.8       1.0X"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "I also run this benchmark and got the same ratio. So it's a little weird.\r\n- https://github.com/heary-cao/spark/pull/3/files#diff-7676fb48b895486092bea2fb491e6de4R18",
    "commit": "422df479aae55b52e17eccf1f46675c9b7369ddd",
    "createdAt": "2018-10-30T08:33:38Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+================================================================================================\n+Benchmark for performance of JSON parsing\n+================================================================================================\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON schema inferring:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 48088 / 48180          2.1         480.9       1.0X\n+UTF-8 is set                                71881 / 71992          1.4         718.8       0.7X\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON per-line parsing:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 12107 / 12246          8.3         121.1       1.0X\n+UTF-8 is set                                12375 / 12475          8.1         123.8       1.0X"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "IIRC, this benchmark was added rather we can make sure setting encoding does not affect the performance without encoding (right @MaxGekk ?). We should fix this. @cloud-fan",
    "commit": "422df479aae55b52e17eccf1f46675c9b7369ddd",
    "createdAt": "2018-10-30T08:34:14Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+================================================================================================\n+Benchmark for performance of JSON parsing\n+================================================================================================\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON schema inferring:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 48088 / 48180          2.1         480.9       1.0X\n+UTF-8 is set                                71881 / 71992          1.4         718.8       0.7X\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON per-line parsing:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 12107 / 12246          8.3         121.1       1.0X\n+UTF-8 is set                                12375 / 12475          8.1         123.8       1.0X"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Let me take a quick look within few days. This is per line basic case where many users are affected.",
    "commit": "422df479aae55b52e17eccf1f46675c9b7369ddd",
    "createdAt": "2018-10-30T08:36:26Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+================================================================================================\n+Benchmark for performance of JSON parsing\n+================================================================================================\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON schema inferring:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 48088 / 48180          2.1         480.9       1.0X\n+UTF-8 is set                                71881 / 71992          1.4         718.8       0.7X\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON per-line parsing:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 12107 / 12246          8.3         121.1       1.0X\n+UTF-8 is set                                12375 / 12475          8.1         123.8       1.0X"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Ah, I see. This is also because of count optimization. ratio is weird but actually it's performance improvement for both cases. shouldn't be a big deal.",
    "commit": "422df479aae55b52e17eccf1f46675c9b7369ddd",
    "createdAt": "2018-10-30T10:08:14Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+================================================================================================\n+Benchmark for performance of JSON parsing\n+================================================================================================\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON schema inferring:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 48088 / 48180          2.1         480.9       1.0X\n+UTF-8 is set                                71881 / 71992          1.4         718.8       0.7X\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON per-line parsing:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 12107 / 12246          8.3         121.1       1.0X\n+UTF-8 is set                                12375 / 12475          8.1         123.8       1.0X"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Yup, it's by https://github.com/apache/spark/commit/a8a1ac01c4732f8a738b973c8486514cd88bf99b\r\n\r\nBefore:\r\n\r\n```\r\nJSON per-line parsing:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\r\n------------------------------------------------------------------------------------------------\r\nNo encoding                                 35786 / 36446          2.8         357.9       1.0X\r\nUTF-8 is set                                57486 / 58714          1.7         574.9       0.6X\r\n```\r\n\r\nAfter:\r\n\r\n\r\n```\r\nJSON per-line parsing:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\r\n------------------------------------------------------------------------------------------------\r\nNo encoding                                 11142 / 11425          9.0         111.4       1.0X\r\nUTF-8 is set                                11139 / 11293          9.0         111.4       1.0X\r\n```\r\n\r\nLooks not a regression.",
    "commit": "422df479aae55b52e17eccf1f46675c9b7369ddd",
    "createdAt": "2018-10-30T11:14:42Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+================================================================================================\n+Benchmark for performance of JSON parsing\n+================================================================================================\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON schema inferring:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 48088 / 48180          2.1         480.9       1.0X\n+UTF-8 is set                                71881 / 71992          1.4         718.8       0.7X\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON per-line parsing:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 12107 / 12246          8.3         121.1       1.0X\n+UTF-8 is set                                12375 / 12475          8.1         123.8       1.0X"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Thank you for the confirmation!",
    "commit": "422df479aae55b52e17eccf1f46675c9b7369ddd",
    "createdAt": "2018-10-30T16:14:49Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+================================================================================================\n+Benchmark for performance of JSON parsing\n+================================================================================================\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON schema inferring:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 48088 / 48180          2.1         480.9       1.0X\n+UTF-8 is set                                71881 / 71992          1.4         718.8       0.7X\n+\n+OpenJDK 64-Bit Server VM 1.8.0_163-b01 on Windows 7 6.1\n+Intel64 Family 6 Model 94 Stepping 3, GenuineIntel\n+JSON per-line parsing:                   Best/Avg Time(ms)    Rate(M/s)   Per Row(ns)   Relative\n+------------------------------------------------------------------------------------------------\n+No encoding                                 12107 / 12246          8.3         121.1       1.0X\n+UTF-8 is set                                12375 / 12475          8.1         123.8       1.0X"
  }],
  "prId": 22844
}]