[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "shall we hide the principal/keytab?",
    "commit": "12565cdc8a11761d3b6e383807a873496a8e7f0d",
    "createdAt": "2017-07-17T04:16:12Z",
    "diffHunk": "@@ -57,6 +59,20 @@ private[hive] class SparkSQLCLIService(hiveServer: HiveServer2, sqlContext: SQLC\n         case e @ (_: IOException | _: LoginException) =>\n           throw new ServiceException(\"Unable to login to kerberos with given principal/keytab\", e)\n       }\n+\n+      // Try creating spnego UGI if it is configured.\n+      val principal = hiveConf.getVar(ConfVars.HIVE_SERVER2_SPNEGO_PRINCIPAL)\n+      val keyTabFile = hiveConf.getVar(ConfVars.HIVE_SERVER2_SPNEGO_KEYTAB)\n+      if (principal.nonEmpty && keyTabFile.nonEmpty) {\n+        try {\n+          httpUGI = HiveAuthFactory.loginFromSpnegoKeytabAndReturnUGI(hiveConf)\n+          setSuperField(this, \"httpUGI\", httpUGI)\n+        } catch {\n+          case e: IOException =>\n+            throw new ServiceException(\"Unable to login to spnego with given principal/keytab \" +\n+              s\"$principal/$keyTabFile\", e)"
  }],
  "prId": 18628
}, {
  "comments": [{
    "author": {
      "login": "jiangxb1987"
    },
    "body": "Should we log warning if `principal` or` keyTablFile` is empty?",
    "commit": "12565cdc8a11761d3b6e383807a873496a8e7f0d",
    "createdAt": "2017-07-17T09:17:18Z",
    "diffHunk": "@@ -57,6 +59,20 @@ private[hive] class SparkSQLCLIService(hiveServer: HiveServer2, sqlContext: SQLC\n         case e @ (_: IOException | _: LoginException) =>\n           throw new ServiceException(\"Unable to login to kerberos with given principal/keytab\", e)\n       }\n+\n+      // Try creating spnego UGI if it is configured.\n+      val principal = hiveConf.getVar(ConfVars.HIVE_SERVER2_SPNEGO_PRINCIPAL)\n+      val keyTabFile = hiveConf.getVar(ConfVars.HIVE_SERVER2_SPNEGO_KEYTAB)\n+      if (principal.nonEmpty && keyTabFile.nonEmpty) {"
  }, {
    "author": {
      "login": "jerryshao"
    },
    "body": "I'm trying to avoid calling log APIs using reflection as mentioned in #15594",
    "commit": "12565cdc8a11761d3b6e383807a873496a8e7f0d",
    "createdAt": "2017-07-17T20:49:59Z",
    "diffHunk": "@@ -57,6 +59,20 @@ private[hive] class SparkSQLCLIService(hiveServer: HiveServer2, sqlContext: SQLC\n         case e @ (_: IOException | _: LoginException) =>\n           throw new ServiceException(\"Unable to login to kerberos with given principal/keytab\", e)\n       }\n+\n+      // Try creating spnego UGI if it is configured.\n+      val principal = hiveConf.getVar(ConfVars.HIVE_SERVER2_SPNEGO_PRINCIPAL)\n+      val keyTabFile = hiveConf.getVar(ConfVars.HIVE_SERVER2_SPNEGO_KEYTAB)\n+      if (principal.nonEmpty && keyTabFile.nonEmpty) {"
  }],
  "prId": 18628
}, {
  "comments": [{
    "author": {
      "login": "steveloughran"
    },
    "body": "I'd recommend including as much diagnostics in the exception string, including principal & keytab, and the value of e.toString in the message\r\n```\r\nthrow new ServiceException(s\"Unable to login to spnego with principal `$principal and keytab `$keytab`: $e\", e)\r\n```\r\n\r\nThe scenario to plan for is \"nothing works and all you have to go on is that string from the raised exception\". \r\n",
    "commit": "12565cdc8a11761d3b6e383807a873496a8e7f0d",
    "createdAt": "2017-08-01T12:53:41Z",
    "diffHunk": "@@ -57,6 +59,19 @@ private[hive] class SparkSQLCLIService(hiveServer: HiveServer2, sqlContext: SQLC\n         case e @ (_: IOException | _: LoginException) =>\n           throw new ServiceException(\"Unable to login to kerberos with given principal/keytab\", e)\n       }\n+\n+      // Try creating spnego UGI if it is configured.\n+      val principal = hiveConf.getVar(ConfVars.HIVE_SERVER2_SPNEGO_PRINCIPAL)\n+      val keyTabFile = hiveConf.getVar(ConfVars.HIVE_SERVER2_SPNEGO_KEYTAB)\n+      if (principal.nonEmpty && keyTabFile.nonEmpty) {\n+        try {\n+          httpUGI = HiveAuthFactory.loginFromSpnegoKeytabAndReturnUGI(hiveConf)\n+          setSuperField(this, \"httpUGI\", httpUGI)\n+        } catch {\n+          case e: IOException =>\n+            throw new ServiceException(\"Unable to login to spnego with given principal/keytab\", e)\n+        }"
  }],
  "prId": 18628
}, {
  "comments": [{
    "author": {
      "login": "steveloughran"
    },
    "body": "`HiveConf.getVar()` doesn't trim thhe results of leading/trailing via {{Configuration.getTrimmed()}}. Check for other uses of the confvar to see if there is any trimming of whitespace before and after their use: if so,  you need to copy that.",
    "commit": "12565cdc8a11761d3b6e383807a873496a8e7f0d",
    "createdAt": "2017-08-01T12:56:14Z",
    "diffHunk": "@@ -57,6 +59,19 @@ private[hive] class SparkSQLCLIService(hiveServer: HiveServer2, sqlContext: SQLC\n         case e @ (_: IOException | _: LoginException) =>\n           throw new ServiceException(\"Unable to login to kerberos with given principal/keytab\", e)\n       }\n+\n+      // Try creating spnego UGI if it is configured.\n+      val principal = hiveConf.getVar(ConfVars.HIVE_SERVER2_SPNEGO_PRINCIPAL)\n+      val keyTabFile = hiveConf.getVar(ConfVars.HIVE_SERVER2_SPNEGO_KEYTAB)"
  }, {
    "author": {
      "login": "jerryshao"
    },
    "body": "I searched the code, looks like there's no other place where using `HiveConf.getVar` trims the result.",
    "commit": "12565cdc8a11761d3b6e383807a873496a8e7f0d",
    "createdAt": "2017-08-03T06:09:54Z",
    "diffHunk": "@@ -57,6 +59,19 @@ private[hive] class SparkSQLCLIService(hiveServer: HiveServer2, sqlContext: SQLC\n         case e @ (_: IOException | _: LoginException) =>\n           throw new ServiceException(\"Unable to login to kerberos with given principal/keytab\", e)\n       }\n+\n+      // Try creating spnego UGI if it is configured.\n+      val principal = hiveConf.getVar(ConfVars.HIVE_SERVER2_SPNEGO_PRINCIPAL)\n+      val keyTabFile = hiveConf.getVar(ConfVars.HIVE_SERVER2_SPNEGO_KEYTAB)"
  }],
  "prId": 18628
}]