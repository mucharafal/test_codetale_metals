[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "What is the reason this PR removes `ReflectedCompositeService`? ",
    "commit": "31478cb6fca68036c1032e669b08dad029c604e6",
    "createdAt": "2017-05-23T17:20:23Z",
    "diffHunk": "@@ -34,28 +30,13 @@ import org.apache.spark.sql.hive.thriftserver.server.SparkSQLOperationManager\n \n \n private[hive] class SparkSQLSessionManager(hiveServer: HiveServer2, sqlContext: SQLContext)\n-  extends SessionManager(hiveServer)\n-  with ReflectedCompositeService {",
    "line": 20
  }],
  "prId": 16445
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Why removing this line? ",
    "commit": "31478cb6fca68036c1032e669b08dad029c604e6",
    "createdAt": "2017-05-23T17:27:42Z",
    "diffHunk": "@@ -34,28 +30,13 @@ import org.apache.spark.sql.hive.thriftserver.server.SparkSQLOperationManager\n \n \n private[hive] class SparkSQLSessionManager(hiveServer: HiveServer2, sqlContext: SQLContext)\n-  extends SessionManager(hiveServer)\n-  with ReflectedCompositeService {\n+  extends SessionManager(hiveServer) {\n \n   private lazy val sparkSqlOperationManager = new SparkSQLOperationManager()\n \n   override def init(hiveConf: HiveConf) {\n-    setSuperField(this, \"hiveConf\", hiveConf)\n-\n-    // Create operation log root directory, if operation logging is enabled\n-    if (hiveConf.getBoolVar(ConfVars.HIVE_SERVER2_LOGGING_OPERATION_ENABLED)) {\n-      invoke(classOf[SessionManager], this, \"initOperationLogRootDir\")\n-    }\n-\n-    val backgroundPoolSize = hiveConf.getIntVar(ConfVars.HIVE_SERVER2_ASYNC_EXEC_THREADS)\n-    setSuperField(this, \"backgroundOperationPool\", Executors.newFixedThreadPool(backgroundPoolSize))\n-    getAncestorField[Log](this, 3, \"LOG\").info(\n-      s\"HiveServer2: Async execution pool size $backgroundPoolSize\")\n-\n     setSuperField(this, \"operationManager\", sparkSqlOperationManager)\n-    addService(sparkSqlOperationManager)\n-\n-    initCompositeService(hiveConf)",
    "line": 41
  }],
  "prId": 16445
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "This line is also needed, right?",
    "commit": "31478cb6fca68036c1032e669b08dad029c604e6",
    "createdAt": "2017-05-23T17:29:24Z",
    "diffHunk": "@@ -34,28 +30,13 @@ import org.apache.spark.sql.hive.thriftserver.server.SparkSQLOperationManager\n \n \n private[hive] class SparkSQLSessionManager(hiveServer: HiveServer2, sqlContext: SQLContext)\n-  extends SessionManager(hiveServer)\n-  with ReflectedCompositeService {\n+  extends SessionManager(hiveServer) {\n \n   private lazy val sparkSqlOperationManager = new SparkSQLOperationManager()\n \n   override def init(hiveConf: HiveConf) {\n-    setSuperField(this, \"hiveConf\", hiveConf)\n-\n-    // Create operation log root directory, if operation logging is enabled\n-    if (hiveConf.getBoolVar(ConfVars.HIVE_SERVER2_LOGGING_OPERATION_ENABLED)) {\n-      invoke(classOf[SessionManager], this, \"initOperationLogRootDir\")\n-    }\n-\n-    val backgroundPoolSize = hiveConf.getIntVar(ConfVars.HIVE_SERVER2_ASYNC_EXEC_THREADS)\n-    setSuperField(this, \"backgroundOperationPool\", Executors.newFixedThreadPool(backgroundPoolSize))\n-    getAncestorField[Log](this, 3, \"LOG\").info(\n-      s\"HiveServer2: Async execution pool size $backgroundPoolSize\")\n-\n     setSuperField(this, \"operationManager\", sparkSqlOperationManager)\n-    addService(sparkSqlOperationManager)",
    "line": 39
  }],
  "prId": 16445
}]