[{
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "Why you changed this? You hit some test failures?",
    "commit": "63a6e62dd127f1d774ddf6c823527276d481af1d",
    "createdAt": "2019-08-02T02:21:55Z",
    "diffHunk": "@@ -285,7 +285,7 @@ class ResolveGroupingAnalyticsSuite extends AnalysisTest {\n       GroupingSets(Seq(Seq(), Seq(unresolved_a), Seq(unresolved_a, unresolved_b)),\n         Seq(unresolved_a, unresolved_b), r1, Seq(unresolved_a, unresolved_b)))\n     val expected = Project(Seq(a, b), Sort(\n-      Seq(SortOrder('aggOrder.byte.withNullability(false), Ascending)), true,\n+      Seq(SortOrder('aggOrder.byte.withNullability(true), Ascending)), true,",
    "line": 5
  }, {
    "author": {
      "login": "gengliangwang"
    },
    "body": "In line 38\r\n```\r\nlazy val grouping_a = Cast(ShiftRight(gid, 1) & 1, ByteType, Option(TimeZone.getDefault().getID))\r\n```\r\nThe grouping expr is casting a integer to byte, so the nullability is true.",
    "commit": "63a6e62dd127f1d774ddf6c823527276d481af1d",
    "createdAt": "2019-08-02T05:19:25Z",
    "diffHunk": "@@ -285,7 +285,7 @@ class ResolveGroupingAnalyticsSuite extends AnalysisTest {\n       GroupingSets(Seq(Seq(), Seq(unresolved_a), Seq(unresolved_a, unresolved_b)),\n         Seq(unresolved_a, unresolved_b), r1, Seq(unresolved_a, unresolved_b)))\n     val expected = Project(Seq(a, b), Sort(\n-      Seq(SortOrder('aggOrder.byte.withNullability(false), Ascending)), true,\n+      Seq(SortOrder('aggOrder.byte.withNullability(true), Ascending)), true,",
    "line": 5
  }],
  "prId": 25300
}]