[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "nit: `JoinHint.NONE` instead of null.",
    "commit": "307802a5e599fadfafc9fb4ffe2ccbd10d60f6ba",
    "createdAt": "2019-10-23T05:38:54Z",
    "diffHunk": "@@ -41,4 +44,13 @@ class ResolveSubquerySuite extends AnalysisTest {\n     assert(m.contains(\n       \"Expressions referencing the outer query are not supported outside of WHERE/HAVING clauses\"))\n   }\n+\n+  test(\"SPARK-29145 Support subquery in join condition\") {\n+    val expr = Join(t1,\n+      t2,\n+      Inner,\n+      Some(InSubquery(Seq(a), ListQuery(Project(Seq(UnresolvedAttribute(\"c\")), t3)))),\n+      null)"
  }, {
    "author": {
      "login": "AngersZhuuuu"
    },
    "body": "> nit: `JoinHint.NONE` instead of null.\r\n\r\nDone",
    "commit": "307802a5e599fadfafc9fb4ffe2ccbd10d60f6ba",
    "createdAt": "2019-10-23T05:54:44Z",
    "diffHunk": "@@ -41,4 +44,13 @@ class ResolveSubquerySuite extends AnalysisTest {\n     assert(m.contains(\n       \"Expressions referencing the outer query are not supported outside of WHERE/HAVING clauses\"))\n   }\n+\n+  test(\"SPARK-29145 Support subquery in join condition\") {\n+    val expr = Join(t1,\n+      t2,\n+      Inner,\n+      Some(InSubquery(Seq(a), ListQuery(Project(Seq(UnresolvedAttribute(\"c\")), t3)))),\n+      null)"
  }],
  "prId": 25854
}]