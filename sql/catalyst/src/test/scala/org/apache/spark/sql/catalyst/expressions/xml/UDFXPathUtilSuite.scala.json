[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "can we use multiline string to make it easier to read?",
    "commit": "f9a9f68f6c30d0cb1d22763b77e9c78a4e495055",
    "createdAt": "2018-06-13T15:02:17Z",
    "diffHunk": "@@ -77,6 +77,23 @@ class UDFXPathUtilSuite extends SparkFunSuite {\n     assert(ret == \"foo\")\n   }\n \n+  test(\"embedFailure\") {\n+    import org.apache.commons.io.FileUtils\n+    import java.io.File\n+    val secretValue = String.valueOf(Math.random)\n+    val tempFile = File.createTempFile(\"verifyembed\", \".tmp\")\n+    tempFile.deleteOnExit()\n+    val fname = tempFile.getAbsolutePath\n+\n+    FileUtils.writeStringToFile(tempFile, secretValue)\n+\n+    val xml =\n+      \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" + \"<!DOCTYPE test [ \\n\" +\n+      \"    <!ENTITY embed SYSTEM \\\"\" + fname + \"\\\"> \\n\" + \"]>\\n\" + \"<foo>&embed;</foo>\""
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "xml has a unique syntax. A little bit hard to make it work sometimes.",
    "commit": "f9a9f68f6c30d0cb1d22763b77e9c78a4e495055",
    "createdAt": "2018-06-13T16:34:03Z",
    "diffHunk": "@@ -77,6 +77,23 @@ class UDFXPathUtilSuite extends SparkFunSuite {\n     assert(ret == \"foo\")\n   }\n \n+  test(\"embedFailure\") {\n+    import org.apache.commons.io.FileUtils\n+    import java.io.File\n+    val secretValue = String.valueOf(Math.random)\n+    val tempFile = File.createTempFile(\"verifyembed\", \".tmp\")\n+    tempFile.deleteOnExit()\n+    val fname = tempFile.getAbsolutePath\n+\n+    FileUtils.writeStringToFile(tempFile, secretValue)\n+\n+    val xml =\n+      \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?>\\n\" + \"<!DOCTYPE test [ \\n\" +\n+      \"    <!ENTITY embed SYSTEM \\\"\" + fname + \"\\\"> \\n\" + \"]>\\n\" + \"<foo>&embed;</foo>\""
  }],
  "prId": 21549
}]