[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "this is added to explicitly test adding some offset right?\n\nif that's the case, why make it numFields \\* 8?\n",
    "commit": "14cce9e1c04918906068f30c8c345a0d1ef5e8eb",
    "createdAt": "2015-08-03T07:20:30Z",
    "diffHunk": "@@ -91,8 +92,9 @@ class GenerateUnsafeRowJoinerBitsetSuite extends SparkFunSuite {\n   private def createUnsafeRow(numFields: Int): UnsafeRow = {\n     val row = new UnsafeRow\n     val sizeInBytes = numFields * 8 + ((numFields + 63) / 64) * 8\n-    val buf = new Array[Byte](sizeInBytes)\n-    row.pointTo(buf, numFields, sizeInBytes)\n+    val offset = numFields * 8",
    "line": 14
  }, {
    "author": {
      "login": "davies"
    },
    "body": "Just want to make it randomly, also aligned with word.\n",
    "commit": "14cce9e1c04918906068f30c8c345a0d1ef5e8eb",
    "createdAt": "2015-08-03T07:24:54Z",
    "diffHunk": "@@ -91,8 +92,9 @@ class GenerateUnsafeRowJoinerBitsetSuite extends SparkFunSuite {\n   private def createUnsafeRow(numFields: Int): UnsafeRow = {\n     val row = new UnsafeRow\n     val sizeInBytes = numFields * 8 + ((numFields + 63) / 64) * 8\n-    val buf = new Array[Byte](sizeInBytes)\n-    row.pointTo(buf, numFields, sizeInBytes)\n+    val offset = numFields * 8",
    "line": 14
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "ok maybe say that in the comment - right now this number doesn't feel random; it feels as if there is an explicit choice here :)\n",
    "commit": "14cce9e1c04918906068f30c8c345a0d1ef5e8eb",
    "createdAt": "2015-08-03T07:26:52Z",
    "diffHunk": "@@ -91,8 +92,9 @@ class GenerateUnsafeRowJoinerBitsetSuite extends SparkFunSuite {\n   private def createUnsafeRow(numFields: Int): UnsafeRow = {\n     val row = new UnsafeRow\n     val sizeInBytes = numFields * 8 + ((numFields + 63) / 64) * 8\n-    val buf = new Array[Byte](sizeInBytes)\n-    row.pointTo(buf, numFields, sizeInBytes)\n+    val offset = numFields * 8",
    "line": 14
  }],
  "prId": 7892
}]