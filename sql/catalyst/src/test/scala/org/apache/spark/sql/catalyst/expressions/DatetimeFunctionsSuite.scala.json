[{
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "Nit: Could we just pass an `Row.empty` instead of constructing a new one?  Could that just be a default argument to `checkEvaluation`?\n",
    "commit": "95b3b582b770c1fd3e3df46176192151d55bda32",
    "createdAt": "2015-06-12T08:30:35Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import java.sql.Date\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.util.DateUtils\n+\n+class DatetimeFunctionsSuite extends SparkFunSuite with ExpressionEvalHelper {\n+  test(\"date_add\") {\n+    checkEvaluation(\n+      DateAdd(Literal(Date.valueOf(\"2016-02-28\")), Literal(1)),\n+      DateUtils.fromJavaDate(Date.valueOf(\"2016-02-29\")), create_row(null))"
  }, {
    "author": {
      "login": "adrian-wang"
    },
    "body": "I think it will be a good idea.\n",
    "commit": "95b3b582b770c1fd3e3df46176192151d55bda32",
    "createdAt": "2015-06-12T08:34:14Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import java.sql.Date\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.util.DateUtils\n+\n+class DatetimeFunctionsSuite extends SparkFunSuite with ExpressionEvalHelper {\n+  test(\"date_add\") {\n+    checkEvaluation(\n+      DateAdd(Literal(Date.valueOf(\"2016-02-28\")), Literal(1)),\n+      DateUtils.fromJavaDate(Date.valueOf(\"2016-02-29\")), create_row(null))"
  }],
  "prId": 6782
}]