[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Since both `transformUp ` and `transformDown` work, create a test case using `transformDown`. Also update the comments here.",
    "commit": "d2375e0185185cd3516b25c14b48c12840957cbf",
    "createdAt": "2017-12-05T20:21:00Z",
    "diffHunk": "@@ -23,8 +23,8 @@ import org.apache.spark.sql.catalyst.plans.logical._\n import org.apache.spark.sql.types.IntegerType\n \n /**\n- * This suite is used to test [[LogicalPlan]]'s `resolveOperators` and make sure it can correctly\n- * skips sub-trees that have already been marked as analyzed.\n+ * This suite is used to test [[LogicalPlan]]'s `transformUp` plus analysis barrier and make sure"
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "Sure.",
    "commit": "d2375e0185185cd3516b25c14b48c12840957cbf",
    "createdAt": "2017-12-06T01:58:19Z",
    "diffHunk": "@@ -23,8 +23,8 @@ import org.apache.spark.sql.catalyst.plans.logical._\n import org.apache.spark.sql.types.IntegerType\n \n /**\n- * This suite is used to test [[LogicalPlan]]'s `resolveOperators` and make sure it can correctly\n- * skips sub-trees that have already been marked as analyzed.\n+ * This suite is used to test [[LogicalPlan]]'s `transformUp` plus analysis barrier and make sure"
  }],
  "prId": 19873
}]