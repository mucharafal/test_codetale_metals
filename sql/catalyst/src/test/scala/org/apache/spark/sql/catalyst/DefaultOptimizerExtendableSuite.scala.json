[{
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "Nit: space before `{`\n",
    "commit": "8d36e386948defd17839323c697e62c2d1fb878c",
    "createdAt": "2015-12-10T19:13:00Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.optimizer.{DefaultOptimizer, Optimizer}\n+import org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\n+import org.apache.spark.sql.catalyst.rules.Batch\n+\n+/**\n+  * This is a test for SPARK-7727 if the Default Optimizer is kept being extendable\n+  */\n+class DefaultOptimizerExtendableSuite extends SparkFunSuite{\n+\n+  /**\n+    * This class represents a dummy extended optimizer that takes the rules of the\n+    * DefaultOptimizer and adds custom ones.\n+    */\n+  class ExtendedOptimizer extends Optimizer{"
  }, {
    "author": {
      "login": "stephankessler"
    },
    "body": "Done\n",
    "commit": "8d36e386948defd17839323c697e62c2d1fb878c",
    "createdAt": "2015-12-11T08:01:08Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.optimizer.{DefaultOptimizer, Optimizer}\n+import org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\n+import org.apache.spark.sql.catalyst.rules.Batch\n+\n+/**\n+  * This is a test for SPARK-7727 if the Default Optimizer is kept being extendable\n+  */\n+class DefaultOptimizerExtendableSuite extends SparkFunSuite{\n+\n+  /**\n+    * This class represents a dummy extended optimizer that takes the rules of the\n+    * DefaultOptimizer and adds custom ones.\n+    */\n+  class ExtendedOptimizer extends Optimizer{"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "These is still no space before `{`?\n",
    "commit": "8d36e386948defd17839323c697e62c2d1fb878c",
    "createdAt": "2015-12-11T08:37:27Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.optimizer.{DefaultOptimizer, Optimizer}\n+import org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\n+import org.apache.spark.sql.catalyst.rules.Batch\n+\n+/**\n+  * This is a test for SPARK-7727 if the Default Optimizer is kept being extendable\n+  */\n+class DefaultOptimizerExtendableSuite extends SparkFunSuite{\n+\n+  /**\n+    * This class represents a dummy extended optimizer that takes the rules of the\n+    * DefaultOptimizer and adds custom ones.\n+    */\n+  class ExtendedOptimizer extends Optimizer{"
  }, {
    "author": {
      "login": "stephankessler"
    },
    "body": "In my latest commit, there is one, in order to avoid confusing i (rebased) and squashed the commits to a single one!\n",
    "commit": "8d36e386948defd17839323c697e62c2d1fb878c",
    "createdAt": "2015-12-14T08:49:35Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.optimizer.{DefaultOptimizer, Optimizer}\n+import org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\n+import org.apache.spark.sql.catalyst.rules.Batch\n+\n+/**\n+  * This is a test for SPARK-7727 if the Default Optimizer is kept being extendable\n+  */\n+class DefaultOptimizerExtendableSuite extends SparkFunSuite{\n+\n+  /**\n+    * This class represents a dummy extended optimizer that takes the rules of the\n+    * DefaultOptimizer and adds custom ones.\n+    */\n+  class ExtendedOptimizer extends Optimizer{"
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "Hmm, weird.  Github is usually smarter than this.\n",
    "commit": "8d36e386948defd17839323c697e62c2d1fb878c",
    "createdAt": "2015-12-15T00:29:21Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.optimizer.{DefaultOptimizer, Optimizer}\n+import org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\n+import org.apache.spark.sql.catalyst.rules.Batch\n+\n+/**\n+  * This is a test for SPARK-7727 if the Default Optimizer is kept being extendable\n+  */\n+class DefaultOptimizerExtendableSuite extends SparkFunSuite{\n+\n+  /**\n+    * This class represents a dummy extended optimizer that takes the rules of the\n+    * DefaultOptimizer and adds custom ones.\n+    */\n+  class ExtendedOptimizer extends Optimizer{"
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "BTW, we squash automatically when merging.\n",
    "commit": "8d36e386948defd17839323c697e62c2d1fb878c",
    "createdAt": "2015-12-15T00:29:50Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.optimizer.{DefaultOptimizer, Optimizer}\n+import org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\n+import org.apache.spark.sql.catalyst.rules.Batch\n+\n+/**\n+  * This is a test for SPARK-7727 if the Default Optimizer is kept being extendable\n+  */\n+class DefaultOptimizerExtendableSuite extends SparkFunSuite{\n+\n+  /**\n+    * This class represents a dummy extended optimizer that takes the rules of the\n+    * DefaultOptimizer and adds custom ones.\n+    */\n+  class ExtendedOptimizer extends Optimizer{"
  }],
  "prId": 10174
}, {
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "If this is the goal, I think this change could be a lot smaller (and thus a lot less disruptive to people who are already extending catalyst).\n\n```\ndiff --git a/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala b/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala\nindex f608869..f52dab1 100644\n--- a/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala\n+++ b/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/Optimizer.scala\n@@ -28,10 +28,8 @@ import org.apache.spark.sql.catalyst.plans.logical._\n import org.apache.spark.sql.catalyst.rules._\n import org.apache.spark.sql.types._\n\n-abstract class Optimizer extends RuleExecutor[LogicalPlan]\n-\n-object DefaultOptimizer extends Optimizer {\n-  val batches =\n+abstract class Optimizer extends RuleExecutor[LogicalPlan] {\n+  def batches =\n     // SubQueries are only needed for analysis and can be removed before execution.\n     Batch(\"Remove SubQueries\", FixedPoint(100),\n       EliminateSubQueries) ::\n@@ -68,6 +66,11 @@ object DefaultOptimizer extends Optimizer {\n       ConvertToLocalRelation) :: Nil\n }\n\n+object DefaultOptimizer extends Optimizer {\n+  val myBatches = Nil\n+  override def batches = super.batches ++ myBatches\n+}\n+\n /**\n  * Pushes operations down into a Sample.\n  */\ndiff --git a/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala b/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala\nindex f80d2a9..62ea731 100644\n--- a/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala\n+++ b/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/rules/RuleExecutor.scala\n@@ -59,7 +59,7 @@ abstract class RuleExecutor[TreeType <: TreeNode[_]] extends Logging {\n   protected case class Batch(name: String, strategy: Strategy, rules: Rule[TreeType]*)\n\n   /** Defines a sequence of rule batches, to be overridden by the implementation. */\n-  protected val batches: Seq[Batch]\n+  protected def batches: Seq[Batch]\n\n```\n",
    "commit": "8d36e386948defd17839323c697e62c2d1fb878c",
    "createdAt": "2015-12-15T18:37:39Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.optimizer.{DefaultOptimizer, Optimizer}\n+import org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\n+import org.apache.spark.sql.catalyst.rules.Batch\n+\n+/**\n+  * This is a test for SPARK-7727 if the Default Optimizer is kept being extendable\n+  */\n+class DefaultOptimizerExtendableSuite extends SparkFunSuite {"
  }, {
    "author": {
      "login": "stephankessler"
    },
    "body": "That is true, i investigated it and proposed another change\n",
    "commit": "8d36e386948defd17839323c697e62c2d1fb878c",
    "createdAt": "2015-12-18T11:55:58Z",
    "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.optimizer.{DefaultOptimizer, Optimizer}\n+import org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\n+import org.apache.spark.sql.catalyst.rules.Batch\n+\n+/**\n+  * This is a test for SPARK-7727 if the Default Optimizer is kept being extendable\n+  */\n+class DefaultOptimizerExtendableSuite extends SparkFunSuite {"
  }],
  "prId": 10174
}]