[{
  "comments": [{
    "author": {
      "login": "hvanhovell"
    },
    "body": "Nit: handing => handling\n",
    "commit": "4c679b59b34ea01474baa5d4ac4ce89133a1720d",
    "createdAt": "2016-10-13T20:06:37Z",
    "diffHunk": "@@ -61,4 +63,39 @@ class CatalystTypeConvertersSuite extends SparkFunSuite {\n   test(\"option handling in createToCatalystConverter\") {\n     assert(CatalystTypeConverters.createToCatalystConverter(IntegerType)(Some(123)) === 123)\n   }\n+\n+  test(\"primitive array handing\") {"
  }],
  "prId": 15044
}, {
  "comments": [{
    "author": {
      "login": "hvanhovell"
    },
    "body": "Nit: handing => handling\n",
    "commit": "4c679b59b34ea01474baa5d4ac4ce89133a1720d",
    "createdAt": "2016-10-13T20:06:45Z",
    "diffHunk": "@@ -61,4 +63,39 @@ class CatalystTypeConvertersSuite extends SparkFunSuite {\n   test(\"option handling in createToCatalystConverter\") {\n     assert(CatalystTypeConverters.createToCatalystConverter(IntegerType)(Some(123)) === 123)\n   }\n+\n+  test(\"primitive array handing\") {\n+    val intArray = Array(1, 100, 10000)\n+    val intUnsafeArray = UnsafeArrayData.fromPrimitiveArray(intArray)\n+    val intArrayType = ArrayType(IntegerType, false)\n+    assert(CatalystTypeConverters.createToScalaConverter(intArrayType)(intUnsafeArray) === intArray)\n+    assert(CatalystTypeConverters.createToCatalystConverter(intArrayType)(intArray)\n+      == intUnsafeArray)\n+\n+    val doubleArray = Array(1.1, 111.1, 11111.1)\n+    val doubleUnsafeArray = UnsafeArrayData.fromPrimitiveArray(doubleArray)\n+    val doubleArrayType = ArrayType(DoubleType, false)\n+    assert(CatalystTypeConverters.createToScalaConverter(doubleArrayType)(doubleUnsafeArray)\n+      === doubleArray)\n+    assert(CatalystTypeConverters.createToCatalystConverter(doubleArrayType)(doubleArray)\n+      == doubleUnsafeArray)\n+  }\n+\n+  test(\"An array with null handing\") {"
  }, {
    "author": {
      "login": "kiszk"
    },
    "body": "Thank you for a good catch. Addressed both of them.\n",
    "commit": "4c679b59b34ea01474baa5d4ac4ce89133a1720d",
    "createdAt": "2016-10-14T08:45:07Z",
    "diffHunk": "@@ -61,4 +63,39 @@ class CatalystTypeConvertersSuite extends SparkFunSuite {\n   test(\"option handling in createToCatalystConverter\") {\n     assert(CatalystTypeConverters.createToCatalystConverter(IntegerType)(Some(123)) === 123)\n   }\n+\n+  test(\"primitive array handing\") {\n+    val intArray = Array(1, 100, 10000)\n+    val intUnsafeArray = UnsafeArrayData.fromPrimitiveArray(intArray)\n+    val intArrayType = ArrayType(IntegerType, false)\n+    assert(CatalystTypeConverters.createToScalaConverter(intArrayType)(intUnsafeArray) === intArray)\n+    assert(CatalystTypeConverters.createToCatalystConverter(intArrayType)(intArray)\n+      == intUnsafeArray)\n+\n+    val doubleArray = Array(1.1, 111.1, 11111.1)\n+    val doubleUnsafeArray = UnsafeArrayData.fromPrimitiveArray(doubleArray)\n+    val doubleArrayType = ArrayType(DoubleType, false)\n+    assert(CatalystTypeConverters.createToScalaConverter(doubleArrayType)(doubleUnsafeArray)\n+      === doubleArray)\n+    assert(CatalystTypeConverters.createToCatalystConverter(doubleArrayType)(doubleArray)\n+      == doubleUnsafeArray)\n+  }\n+\n+  test(\"An array with null handing\") {"
  }],
  "prId": 15044
}]