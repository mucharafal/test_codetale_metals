[{
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "Can we have end-to-end test case other than this one? Or the test case in `SubquerySuite` is the only one to produce this issue?",
    "commit": "21f68b92907f3dfb5a878741a0ea6a6bd27079d2",
    "createdAt": "2019-02-01T11:10:55Z",
    "diffHunk": "@@ -627,4 +627,19 @@ class AnalysisSuite extends AnalysisTest with Matchers {\n     val res = ViewAnalyzer.execute(view)\n     comparePlans(res, expected)\n   }\n+\n+  test(\"SPARK-26741: replace aggregate expressions in Sort when Aggregate is not a direct child\") {",
    "line": 31
  }, {
    "author": {
      "login": "mgaido91"
    },
    "body": "I am not sure which other end-to-end test case you are thinking to. So far, the only case when I saw this happening is when there is a HAVING clause. So I am not sure which other end-to-end tests you want to add.",
    "commit": "21f68b92907f3dfb5a878741a0ea6a6bd27079d2",
    "createdAt": "2019-02-01T11:17:05Z",
    "diffHunk": "@@ -627,4 +627,19 @@ class AnalysisSuite extends AnalysisTest with Matchers {\n     val res = ViewAnalyzer.execute(view)\n     comparePlans(res, expected)\n   }\n+\n+  test(\"SPARK-26741: replace aggregate expressions in Sort when Aggregate is not a direct child\") {",
    "line": 31
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "Ok, I'm not sure too. Just want to make sure if this is the only case we are aware of.",
    "commit": "21f68b92907f3dfb5a878741a0ea6a6bd27079d2",
    "createdAt": "2019-02-01T11:20:34Z",
    "diffHunk": "@@ -627,4 +627,19 @@ class AnalysisSuite extends AnalysisTest with Matchers {\n     val res = ViewAnalyzer.execute(view)\n     comparePlans(res, expected)\n   }\n+\n+  test(\"SPARK-26741: replace aggregate expressions in Sort when Aggregate is not a direct child\") {",
    "line": 31
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "> So far, the only case when I saw this happening is when there is a HAVING clause.\r\n\r\nIs the test you talked the one in `SubquerySuite`?",
    "commit": "21f68b92907f3dfb5a878741a0ea6a6bd27079d2",
    "createdAt": "2019-02-01T11:24:02Z",
    "diffHunk": "@@ -627,4 +627,19 @@ class AnalysisSuite extends AnalysisTest with Matchers {\n     val res = ViewAnalyzer.execute(view)\n     comparePlans(res, expected)\n   }\n+\n+  test(\"SPARK-26741: replace aggregate expressions in Sort when Aggregate is not a direct child\") {",
    "line": 31
  }, {
    "author": {
      "login": "mgaido91"
    },
    "body": "yes, this is the only case I am aware of.",
    "commit": "21f68b92907f3dfb5a878741a0ea6a6bd27079d2",
    "createdAt": "2019-02-01T11:33:26Z",
    "diffHunk": "@@ -627,4 +627,19 @@ class AnalysisSuite extends AnalysisTest with Matchers {\n     val res = ViewAnalyzer.execute(view)\n     comparePlans(res, expected)\n   }\n+\n+  test(\"SPARK-26741: replace aggregate expressions in Sort when Aggregate is not a direct child\") {",
    "line": 31
  }],
  "prId": 23701
}]