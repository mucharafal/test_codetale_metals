[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "cc @kiszk \n",
    "commit": "61b37998dbf15613ead80bc106c029eca2051116",
    "createdAt": "2016-10-25T07:00:19Z",
    "diffHunk": "@@ -44,7 +44,9 @@ class SimplifyCastsSuite extends PlanTest {\n     val input = LocalRelation('a.array(ArrayType(IntegerType, true)))\n     val plan = input.select('a.cast(ArrayType(IntegerType, false)).as(\"casted\")).analyze\n     val optimized = Optimize.execute(plan)\n-    comparePlans(optimized, plan)\n+    // Though cast from `ArrayType(IntegerType, true)` to `ArrayType(IntegerType, false)` is not\n+    // allowed, here we just ensure that `SimplifyCasts` rule respect the plan.\n+    comparePlans(optimized, plan, checkAnalysis = false)",
    "line": 7
  }, {
    "author": {
      "login": "kiszk"
    },
    "body": "LGTM. As a comment pointed out, this test do not expect the plan is executed correctly.\n",
    "commit": "61b37998dbf15613ead80bc106c029eca2051116",
    "createdAt": "2016-10-31T07:08:16Z",
    "diffHunk": "@@ -44,7 +44,9 @@ class SimplifyCastsSuite extends PlanTest {\n     val input = LocalRelation('a.array(ArrayType(IntegerType, true)))\n     val plan = input.select('a.cast(ArrayType(IntegerType, false)).as(\"casted\")).analyze\n     val optimized = Optimize.execute(plan)\n-    comparePlans(optimized, plan)\n+    // Though cast from `ArrayType(IntegerType, true)` to `ArrayType(IntegerType, false)` is not\n+    // allowed, here we just ensure that `SimplifyCasts` rule respect the plan.\n+    comparePlans(optimized, plan, checkAnalysis = false)",
    "line": 7
  }],
  "prId": 15417
}]