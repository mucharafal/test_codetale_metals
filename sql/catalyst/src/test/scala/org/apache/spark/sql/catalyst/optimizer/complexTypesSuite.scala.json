[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "something like this, we have a codegen context, and do codegen. After that, instead of compiling the code to make sure it doesn't fail, we can just check the size of `ctx.mutableStates` to confirm that we don't add global variables during codegen",
    "commit": "747e215a06856ae8a8ed49a784ae1327ec703966",
    "createdAt": "2017-11-28T02:51:59Z",
    "diffHunk": "@@ -164,6 +165,28 @@ class ComplexTypesSuite extends PlanTest{\n     comparePlans(Optimizer execute query, expected)\r\n   }\r\n \r\n+  test(\"SPARK-22570: should not create a lot of instance variables\") {\r\n+    val ctx = new CodegenContext\r"
  }],
  "prId": 19797
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "why loop?",
    "commit": "747e215a06856ae8a8ed49a784ae1327ec703966",
    "createdAt": "2017-11-30T02:43:55Z",
    "diffHunk": "@@ -164,6 +165,12 @@ class ComplexTypesSuite extends PlanTest{\n     comparePlans(Optimizer execute query, expected)\r\n   }\r\n \r\n+  test(\"SPARK-22570: should not create a lot of instance variables\") {\r\n+    val ctx = new CodegenContext\r\n+    (1 to 60000).map(i => CreateArray(Seq(Literal(s\"$i\"))).genCode(ctx).code)\r"
  }],
  "prId": 19797
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "nit: `CreateArray should not create a lot of global variables`",
    "commit": "747e215a06856ae8a8ed49a784ae1327ec703966",
    "createdAt": "2017-11-30T02:44:23Z",
    "diffHunk": "@@ -164,6 +165,12 @@ class ComplexTypesSuite extends PlanTest{\n     comparePlans(Optimizer execute query, expected)\r\n   }\r\n \r\n+  test(\"SPARK-22570: should not create a lot of instance variables\") {\r"
  }],
  "prId": 19797
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "ditto",
    "commit": "747e215a06856ae8a8ed49a784ae1327ec703966",
    "createdAt": "2017-11-30T13:18:23Z",
    "diffHunk": "@@ -164,6 +165,12 @@ class ComplexTypesSuite extends PlanTest{\n     comparePlans(Optimizer execute query, expected)\r\n   }\r\n \r\n+  test(\"SPARK-22570: CreateArray should not create a lot of global variables\") {\r\n+    val ctx = new CodegenContext\r\n+    CreateArray(Seq(Literal(1))).genCode(ctx).code\r"
  }],
  "prId": 19797
}, {
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "ditto.",
    "commit": "747e215a06856ae8a8ed49a784ae1327ec703966",
    "createdAt": "2017-11-30T13:30:24Z",
    "diffHunk": "@@ -20,6 +20,7 @@ package org.apache.spark.sql.catalyst.optimizer\n import org.apache.spark.sql.catalyst.dsl.expressions._\r\n import org.apache.spark.sql.catalyst.dsl.plans._\r\n import org.apache.spark.sql.catalyst.expressions._\r\n+import org.apache.spark.sql.catalyst.expressions.codegen.{CodeAndComment, CodegenContext, CodeGenerator}\r"
  }],
  "prId": 19797
}]