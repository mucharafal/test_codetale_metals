[{
  "comments": [{
    "author": {
      "login": "kiszk"
    },
    "body": "Is this value always `32`? I think that it may depend on JVM, 32/64-bit, or oops. [Reference](https://shipilev.net/blog/2014/heapdump-is-a-lie/).\r\n\r\nMay it be good to use `BYTE_ARRAY_OFFSET`?",
    "commit": "357144c49efcd49e7df13ded9e0ae1f5ff077a79",
    "createdAt": "2019-04-14T18:54:57Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util\n+\n+import org.apache.spark.{SparkConf, SparkFunSuite}\n+import org.apache.spark.serializer.{JavaSerializer, KryoSerializer}\n+import org.apache.spark.sql.catalyst.expressions.{UnsafeArrayData, UnsafeMapData}\n+import org.apache.spark.unsafe.Platform\n+\n+class UnsafeMapSuite extends SparkFunSuite {\n+\n+  val unsafeMapData = {\n+    val offset = 32",
    "line": 28
  }, {
    "author": {
      "login": "kiszk"
    },
    "body": "nvm, I realized that it intentionally uses the machine-independent value for testing.",
    "commit": "357144c49efcd49e7df13ded9e0ae1f5ff077a79",
    "createdAt": "2019-04-14T18:59:16Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util\n+\n+import org.apache.spark.{SparkConf, SparkFunSuite}\n+import org.apache.spark.serializer.{JavaSerializer, KryoSerializer}\n+import org.apache.spark.sql.catalyst.expressions.{UnsafeArrayData, UnsafeMapData}\n+import org.apache.spark.unsafe.Platform\n+\n+class UnsafeMapSuite extends SparkFunSuite {\n+\n+  val unsafeMapData = {\n+    val offset = 32",
    "line": 28
  }, {
    "author": {
      "login": "pengbo"
    },
    "body": "yep",
    "commit": "357144c49efcd49e7df13ded9e0ae1f5ff077a79",
    "createdAt": "2019-04-15T04:46:43Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util\n+\n+import org.apache.spark.{SparkConf, SparkFunSuite}\n+import org.apache.spark.serializer.{JavaSerializer, KryoSerializer}\n+import org.apache.spark.sql.catalyst.expressions.{UnsafeArrayData, UnsafeMapData}\n+import org.apache.spark.unsafe.Platform\n+\n+class UnsafeMapSuite extends SparkFunSuite {\n+\n+  val unsafeMapData = {\n+    val offset = 32",
    "line": 28
  }],
  "prId": 24357
}, {
  "comments": [{
    "author": {
      "login": "kiszk"
    },
    "body": "It may be good to use different values among key and value.",
    "commit": "357144c49efcd49e7df13ded9e0ae1f5ff077a79",
    "createdAt": "2019-04-14T19:03:50Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util\n+\n+import org.apache.spark.{SparkConf, SparkFunSuite}\n+import org.apache.spark.serializer.{JavaSerializer, KryoSerializer}\n+import org.apache.spark.sql.catalyst.expressions.{UnsafeArrayData, UnsafeMapData}\n+import org.apache.spark.unsafe.Platform\n+\n+class UnsafeMapSuite extends SparkFunSuite {\n+\n+  val unsafeMapData = {\n+    val offset = 32\n+    val keyArraySize = 256\n+    val baseObject = new Array[Byte](1024)\n+    Platform.putLong(baseObject, offset, keyArraySize)\n+\n+    val unsafeMap = new UnsafeMapData\n+    Platform.putLong(baseObject, offset + 8, 1)\n+    val keyArray = new UnsafeArrayData()\n+    keyArray.pointTo(baseObject, offset + 8, keyArraySize)\n+    keyArray.setLong(0, 19285)\n+\n+    val valueArray = new UnsafeArrayData()\n+    Platform.putLong(baseObject, offset + 8 + keyArray.getSizeInBytes, 1)\n+    valueArray.pointTo(baseObject, offset + 8 + keyArray.getSizeInBytes, keyArraySize)\n+    valueArray.setLong(0, 19285)"
  }, {
    "author": {
      "login": "pengbo"
    },
    "body": "Actually I don't think that makes any different, can you please explain a little more? \r\nThanks.",
    "commit": "357144c49efcd49e7df13ded9e0ae1f5ff077a79",
    "createdAt": "2019-04-15T04:47:55Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util\n+\n+import org.apache.spark.{SparkConf, SparkFunSuite}\n+import org.apache.spark.serializer.{JavaSerializer, KryoSerializer}\n+import org.apache.spark.sql.catalyst.expressions.{UnsafeArrayData, UnsafeMapData}\n+import org.apache.spark.unsafe.Platform\n+\n+class UnsafeMapSuite extends SparkFunSuite {\n+\n+  val unsafeMapData = {\n+    val offset = 32\n+    val keyArraySize = 256\n+    val baseObject = new Array[Byte](1024)\n+    Platform.putLong(baseObject, offset, keyArraySize)\n+\n+    val unsafeMap = new UnsafeMapData\n+    Platform.putLong(baseObject, offset + 8, 1)\n+    val keyArray = new UnsafeArrayData()\n+    keyArray.pointTo(baseObject, offset + 8, keyArraySize)\n+    keyArray.setLong(0, 19285)\n+\n+    val valueArray = new UnsafeArrayData()\n+    Platform.putLong(baseObject, offset + 8 + keyArray.getSizeInBytes, 1)\n+    valueArray.pointTo(baseObject, offset + 8 + keyArray.getSizeInBytes, keyArraySize)\n+    valueArray.setLong(0, 19285)"
  }, {
    "author": {
      "login": "kiszk"
    },
    "body": "We hope so. For testing typical use cases, I think that it is good to allocate a separate array for map and value.",
    "commit": "357144c49efcd49e7df13ded9e0ae1f5ff077a79",
    "createdAt": "2019-04-15T09:20:53Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util\n+\n+import org.apache.spark.{SparkConf, SparkFunSuite}\n+import org.apache.spark.serializer.{JavaSerializer, KryoSerializer}\n+import org.apache.spark.sql.catalyst.expressions.{UnsafeArrayData, UnsafeMapData}\n+import org.apache.spark.unsafe.Platform\n+\n+class UnsafeMapSuite extends SparkFunSuite {\n+\n+  val unsafeMapData = {\n+    val offset = 32\n+    val keyArraySize = 256\n+    val baseObject = new Array[Byte](1024)\n+    Platform.putLong(baseObject, offset, keyArraySize)\n+\n+    val unsafeMap = new UnsafeMapData\n+    Platform.putLong(baseObject, offset + 8, 1)\n+    val keyArray = new UnsafeArrayData()\n+    keyArray.pointTo(baseObject, offset + 8, keyArraySize)\n+    keyArray.setLong(0, 19285)\n+\n+    val valueArray = new UnsafeArrayData()\n+    Platform.putLong(baseObject, offset + 8 + keyArray.getSizeInBytes, 1)\n+    valueArray.pointTo(baseObject, offset + 8 + keyArray.getSizeInBytes, keyArraySize)\n+    valueArray.setLong(0, 19285)"
  }, {
    "author": {
      "login": "pengbo"
    },
    "body": "Maybe I am missing sth, the key/value array are currently different arrays. The value set is the same (0 -> 19285).",
    "commit": "357144c49efcd49e7df13ded9e0ae1f5ff077a79",
    "createdAt": "2019-04-15T12:09:52Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util\n+\n+import org.apache.spark.{SparkConf, SparkFunSuite}\n+import org.apache.spark.serializer.{JavaSerializer, KryoSerializer}\n+import org.apache.spark.sql.catalyst.expressions.{UnsafeArrayData, UnsafeMapData}\n+import org.apache.spark.unsafe.Platform\n+\n+class UnsafeMapSuite extends SparkFunSuite {\n+\n+  val unsafeMapData = {\n+    val offset = 32\n+    val keyArraySize = 256\n+    val baseObject = new Array[Byte](1024)\n+    Platform.putLong(baseObject, offset, keyArraySize)\n+\n+    val unsafeMap = new UnsafeMapData\n+    Platform.putLong(baseObject, offset + 8, 1)\n+    val keyArray = new UnsafeArrayData()\n+    keyArray.pointTo(baseObject, offset + 8, keyArraySize)\n+    keyArray.setLong(0, 19285)\n+\n+    val valueArray = new UnsafeArrayData()\n+    Platform.putLong(baseObject, offset + 8 + keyArray.getSizeInBytes, 1)\n+    valueArray.pointTo(baseObject, offset + 8 + keyArray.getSizeInBytes, keyArraySize)\n+    valueArray.setLong(0, 19285)"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "How about using a different value for key and value, not just 19285 both times? that would make a slightly better test. Otherwise you'd possibly miss a weird bug where key and value arrays are swapped",
    "commit": "357144c49efcd49e7df13ded9e0ae1f5ff077a79",
    "createdAt": "2019-04-15T13:22:57Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util\n+\n+import org.apache.spark.{SparkConf, SparkFunSuite}\n+import org.apache.spark.serializer.{JavaSerializer, KryoSerializer}\n+import org.apache.spark.sql.catalyst.expressions.{UnsafeArrayData, UnsafeMapData}\n+import org.apache.spark.unsafe.Platform\n+\n+class UnsafeMapSuite extends SparkFunSuite {\n+\n+  val unsafeMapData = {\n+    val offset = 32\n+    val keyArraySize = 256\n+    val baseObject = new Array[Byte](1024)\n+    Platform.putLong(baseObject, offset, keyArraySize)\n+\n+    val unsafeMap = new UnsafeMapData\n+    Platform.putLong(baseObject, offset + 8, 1)\n+    val keyArray = new UnsafeArrayData()\n+    keyArray.pointTo(baseObject, offset + 8, keyArraySize)\n+    keyArray.setLong(0, 19285)\n+\n+    val valueArray = new UnsafeArrayData()\n+    Platform.putLong(baseObject, offset + 8 + keyArray.getSizeInBytes, 1)\n+    valueArray.pointTo(baseObject, offset + 8 + keyArray.getSizeInBytes, keyArraySize)\n+    valueArray.setLong(0, 19285)"
  }, {
    "author": {
      "login": "pengbo"
    },
    "body": "Good point. Thanks @kiszk @srowen ",
    "commit": "357144c49efcd49e7df13ded9e0ae1f5ff077a79",
    "createdAt": "2019-04-16T09:06:11Z",
    "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util\n+\n+import org.apache.spark.{SparkConf, SparkFunSuite}\n+import org.apache.spark.serializer.{JavaSerializer, KryoSerializer}\n+import org.apache.spark.sql.catalyst.expressions.{UnsafeArrayData, UnsafeMapData}\n+import org.apache.spark.unsafe.Platform\n+\n+class UnsafeMapSuite extends SparkFunSuite {\n+\n+  val unsafeMapData = {\n+    val offset = 32\n+    val keyArraySize = 256\n+    val baseObject = new Array[Byte](1024)\n+    Platform.putLong(baseObject, offset, keyArraySize)\n+\n+    val unsafeMap = new UnsafeMapData\n+    Platform.putLong(baseObject, offset + 8, 1)\n+    val keyArray = new UnsafeArrayData()\n+    keyArray.pointTo(baseObject, offset + 8, keyArraySize)\n+    keyArray.setLong(0, 19285)\n+\n+    val valueArray = new UnsafeArrayData()\n+    Platform.putLong(baseObject, offset + 8 + keyArray.getSizeInBytes, 1)\n+    valueArray.pointTo(baseObject, offset + 8 + keyArray.getSizeInBytes, keyArraySize)\n+    valueArray.setLong(0, 19285)"
  }],
  "prId": 24357
}]