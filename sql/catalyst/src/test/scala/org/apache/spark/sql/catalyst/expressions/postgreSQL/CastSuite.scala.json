[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "We had better remove `with PostgreSQL dialect` here. Otherwise, we need to add this for all test cases in this test suite.",
    "commit": "75aeda757b10b8601cb386a53a87d888fc6556e1",
    "createdAt": "2019-09-25T15:38:19Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.catalyst.expressions.postgreSQL\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.expressions.{ExpressionEvalHelper, Literal}\n+\n+class CastSuite extends SparkFunSuite with ExpressionEvalHelper {\n+  private def checkPostgreCastStringToBoolean(v: Any, expected: Any): Unit = {\n+    checkEvaluation(PostgreCastStringToBoolean(Literal(v)), expected)\n+  }\n+\n+  test(\"cast string to boolean with PostgreSQL dialect\") {"
  }],
  "prId": 25697
}]