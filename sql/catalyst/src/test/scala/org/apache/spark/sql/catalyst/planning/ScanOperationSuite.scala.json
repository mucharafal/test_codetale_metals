[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "unnecessary line?",
    "commit": "f86cb82de6fb1ee9550b3c266eb9b3fb0019909f",
    "createdAt": "2019-11-25T14:20:05Z",
    "diffHunk": "@@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.planning\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.expressions.{Alias, Attribute, AttributeReference, EqualTo, Literal, MonotonicallyIncreasingID, Rand}\n+import org.apache.spark.sql.catalyst.plans.logical.{Filter, LeafNode, OneRowRelation, Project}\n+import org.apache.spark.sql.types.{DoubleType, StringType}\n+\n+case class TestRelation() extends LeafNode {\n+  override def output: Seq[Attribute] = Seq(\n+    AttributeReference(\"a\", StringType)(),\n+    AttributeReference(\"b\", StringType)(),\n+    AttributeReference(\"c\", StringType)())\n+}\n+\n+class ScanOperationSuite extends SparkFunSuite {\n+  test(\"Collect projects and filters through non-deterministic expressions\") {\n+    OneRowRelation"
  }],
  "prId": 26629
}]