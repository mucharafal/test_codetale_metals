[{
  "comments": [{
    "author": {
      "login": "nongli"
    },
    "body": "Is it possible to add a end to end test similar to the ones here?\nhttps://github.com/apache/spark/blob/master/sql/core/src/test/scala/org/apache/spark/sql/SQLQuerySuite.scala#L1934\n",
    "commit": "d9079498e1c82cd1ed349213b63be78af1ab1bac",
    "createdAt": "2016-01-19T19:23:59Z",
    "diffHunk": "@@ -154,4 +154,17 @@ class SubexpressionEliminationSuite extends SparkFunSuite {\n     equivalence.addExpr(sum)\n     assert(equivalence.getAllEquivalentExprs.isEmpty)\n   }\n+\n+  test(\"Children of CodegenFallback\") {",
    "line": 5
  }, {
    "author": {
      "login": "davies"
    },
    "body": "We does not have a non-leaf expression that use CodegenFallback, except imperative aggregate function, it ends up we can't easily have a end-end test without generated aggregation with imperative function support (WIP).\n",
    "commit": "d9079498e1c82cd1ed349213b63be78af1ab1bac",
    "createdAt": "2016-01-19T20:35:39Z",
    "diffHunk": "@@ -154,4 +154,17 @@ class SubexpressionEliminationSuite extends SparkFunSuite {\n     equivalence.addExpr(sum)\n     assert(equivalence.getAllEquivalentExprs.isEmpty)\n   }\n+\n+  test(\"Children of CodegenFallback\") {",
    "line": 5
  }],
  "prId": 10814
}]