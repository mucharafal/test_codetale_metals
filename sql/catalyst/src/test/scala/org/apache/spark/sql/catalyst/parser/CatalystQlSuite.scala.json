[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "Since we still keep the antlr 3 code, I think we should create a new `CatalystSqlParserSuite` and copy code here to it. We can remove this file after we complete migrating to antlr 4.\n",
    "commit": "6f1c535162397f01acf0405bdc80b8c4c141fc64",
    "createdAt": "2016-03-23T12:08:32Z",
    "diffHunk": "@@ -21,15 +21,18 @@ import org.apache.spark.sql.AnalysisException\n import org.apache.spark.sql.catalyst.TableIdentifier\n import org.apache.spark.sql.catalyst.analysis._\n import org.apache.spark.sql.catalyst.expressions._\n+import org.apache.spark.sql.catalyst.parser.ng.CatalystSqlParser\n import org.apache.spark.sql.catalyst.plans.PlanTest\n import org.apache.spark.sql.catalyst.plans.logical._\n import org.apache.spark.unsafe.types.CalendarInterval\n \n class CatalystQlSuite extends PlanTest {\n-  val parser = new CatalystQl()\n+  val parser = CatalystSqlParser"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "And these dsl simplifications LGTM, we can still keep them here.\n",
    "commit": "6f1c535162397f01acf0405bdc80b8c4c141fc64",
    "createdAt": "2016-03-23T12:09:18Z",
    "diffHunk": "@@ -21,15 +21,18 @@ import org.apache.spark.sql.AnalysisException\n import org.apache.spark.sql.catalyst.TableIdentifier\n import org.apache.spark.sql.catalyst.analysis._\n import org.apache.spark.sql.catalyst.expressions._\n+import org.apache.spark.sql.catalyst.parser.ng.CatalystSqlParser\n import org.apache.spark.sql.catalyst.plans.PlanTest\n import org.apache.spark.sql.catalyst.plans.logical._\n import org.apache.spark.unsafe.types.CalendarInterval\n \n class CatalystQlSuite extends PlanTest {\n-  val parser = new CatalystQl()\n+  val parser = CatalystSqlParser"
  }, {
    "author": {
      "login": "hvanhovell"
    },
    "body": "We can revert this line. The new ExpressionParserSuite/PlanParserSuite/TableIdentifierSuite contain all CatalystQlSuite tests or similar ones. So this is not really needed anymore.\n",
    "commit": "6f1c535162397f01acf0405bdc80b8c4c141fc64",
    "createdAt": "2016-03-23T12:22:11Z",
    "diffHunk": "@@ -21,15 +21,18 @@ import org.apache.spark.sql.AnalysisException\n import org.apache.spark.sql.catalyst.TableIdentifier\n import org.apache.spark.sql.catalyst.analysis._\n import org.apache.spark.sql.catalyst.expressions._\n+import org.apache.spark.sql.catalyst.parser.ng.CatalystSqlParser\n import org.apache.spark.sql.catalyst.plans.PlanTest\n import org.apache.spark.sql.catalyst.plans.logical._\n import org.apache.spark.unsafe.types.CalendarInterval\n \n class CatalystQlSuite extends PlanTest {\n-  val parser = new CatalystQl()\n+  val parser = CatalystSqlParser"
  }],
  "prId": 11557
}]