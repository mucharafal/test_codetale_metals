[{
  "comments": [{
    "author": {
      "login": "dilipbiswal"
    },
    "body": "wouldn't calling dataType be a more direct way of triggering this failure ? ",
    "commit": "37ee7d6a424c822d067ed292a813e478b160909f",
    "createdAt": "2019-03-25T09:09:02Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.dsl.expressions._\n+import org.apache.spark.sql.catalyst.plans.logical.LocalRelation\n+\n+class SubquerySuite extends SparkFunSuite  {\n+\n+  test(\"SPARK-27246 test the scalar subquery with no columns \") {\n+    val e = intercept[AssertionError] {\n+      ScalarSubquery(LocalRelation()).as('a).treeString"
  }, {
    "author": {
      "login": "sandeep-katta"
    },
    "body": "yes it can be, i just tried to use the same way as per the testcase whcih I removed for this PR",
    "commit": "37ee7d6a424c822d067ed292a813e478b160909f",
    "createdAt": "2019-03-25T09:12:05Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.dsl.expressions._\n+import org.apache.spark.sql.catalyst.plans.logical.LocalRelation\n+\n+class SubquerySuite extends SparkFunSuite  {\n+\n+  test(\"SPARK-27246 test the scalar subquery with no columns \") {\n+    val e = intercept[AssertionError] {\n+      ScalarSubquery(LocalRelation()).as('a).treeString"
  }, {
    "author": {
      "login": "dilipbiswal"
    },
    "body": "@sandeep-katta oh...but the removed testcase does not have a call to `treeString`, right ? the treeString happens when we turn on debugging of the plans , no ?",
    "commit": "37ee7d6a424c822d067ed292a813e478b160909f",
    "createdAt": "2019-03-25T09:20:53Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.dsl.expressions._\n+import org.apache.spark.sql.catalyst.plans.logical.LocalRelation\n+\n+class SubquerySuite extends SparkFunSuite  {\n+\n+  test(\"SPARK-27246 test the scalar subquery with no columns \") {\n+    val e = intercept[AssertionError] {\n+      ScalarSubquery(LocalRelation()).as('a).treeString"
  }, {
    "author": {
      "login": "sandeep-katta"
    },
    "body": "yes, can refer above comments https://github.com/apache/spark/pull/24182#issuecomment-475621300",
    "commit": "37ee7d6a424c822d067ed292a813e478b160909f",
    "createdAt": "2019-03-25T09:23:16Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.dsl.expressions._\n+import org.apache.spark.sql.catalyst.plans.logical.LocalRelation\n+\n+class SubquerySuite extends SparkFunSuite  {\n+\n+  test(\"SPARK-27246 test the scalar subquery with no columns \") {\n+    val e = intercept[AssertionError] {\n+      ScalarSubquery(LocalRelation()).as('a).treeString"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Let's write that in the PR description",
    "commit": "37ee7d6a424c822d067ed292a813e478b160909f",
    "createdAt": "2019-03-25T10:46:49Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.dsl.expressions._\n+import org.apache.spark.sql.catalyst.plans.logical.LocalRelation\n+\n+class SubquerySuite extends SparkFunSuite  {\n+\n+  test(\"SPARK-27246 test the scalar subquery with no columns \") {\n+    val e = intercept[AssertionError] {\n+      ScalarSubquery(LocalRelation()).as('a).treeString"
  }, {
    "author": {
      "login": "sandeep-katta"
    },
    "body": "updated",
    "commit": "37ee7d6a424c822d067ed292a813e478b160909f",
    "createdAt": "2019-03-25T11:07:21Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.dsl.expressions._\n+import org.apache.spark.sql.catalyst.plans.logical.LocalRelation\n+\n+class SubquerySuite extends SparkFunSuite  {\n+\n+  test(\"SPARK-27246 test the scalar subquery with no columns \") {\n+    val e = intercept[AssertionError] {\n+      ScalarSubquery(LocalRelation()).as('a).treeString"
  }],
  "prId": 24182
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "super nit: remove unnecessary one space....",
    "commit": "37ee7d6a424c822d067ed292a813e478b160909f",
    "createdAt": "2019-03-25T12:05:58Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.dsl.expressions._\n+import org.apache.spark.sql.catalyst.plans.logical.LocalRelation\n+\n+class SubquerySuite extends SparkFunSuite  {"
  }],
  "prId": 24182
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Actually, I think we can just remove this test at all. It's just a sanity check and I double checked alone.",
    "commit": "37ee7d6a424c822d067ed292a813e478b160909f",
    "createdAt": "2019-03-25T12:08:11Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.dsl.expressions._\n+import org.apache.spark.sql.catalyst.plans.logical.LocalRelation\n+\n+class SubquerySuite extends SparkFunSuite  {"
  }],
  "prId": 24182
}]