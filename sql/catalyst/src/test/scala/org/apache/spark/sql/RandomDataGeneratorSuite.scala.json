[{
  "comments": [{
    "author": {
      "login": "nongli"
    },
    "body": "Is this test going to be flaky? run this in a loop 10K times as a one off\n",
    "commit": "c5e4d99014113be5c0a0fb0fd32a8c8c86acab81",
    "createdAt": "2016-01-26T23:40:47Z",
    "diffHunk": "@@ -93,4 +93,12 @@ class RandomDataGeneratorSuite extends SparkFunSuite {\n     }\n   }\n \n+  test(\"check size of generated map\") {",
    "line": 4
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "This test uses a fixed seed, so the test result is predictable.\n",
    "commit": "c5e4d99014113be5c0a0fb0fd32a8c8c86acab81",
    "createdAt": "2016-01-27T01:48:25Z",
    "diffHunk": "@@ -93,4 +93,12 @@ class RandomDataGeneratorSuite extends SparkFunSuite {\n     }\n   }\n \n+  test(\"check size of generated map\") {",
    "line": 4
  }],
  "prId": 10930
}, {
  "comments": [{
    "author": {
      "login": "yhuai"
    },
    "body": "```\n[error] /home/jenkins/workspace/SparkPullRequestBuilder/sql/catalyst/src/test/scala/org/apache/spark/sql/RandomDataGeneratorSuite.scala:100: not found: value seed\n[error]     val generator = RandomDataGenerator.forType(mapType, nullable = false, seed = Some(13)).get\n[error]                                                                            ^\n```\n",
    "commit": "c5e4d99014113be5c0a0fb0fd32a8c8c86acab81",
    "createdAt": "2016-01-27T06:58:38Z",
    "diffHunk": "@@ -93,4 +93,12 @@ class RandomDataGeneratorSuite extends SparkFunSuite {\n     }\n   }\n \n+  test(\"check size of generated map\") {\n+    val mapType = MapType(IntegerType, IntegerType)\n+    val generator = RandomDataGenerator.forType(mapType, nullable = false, seed = Some(13)).get"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "weird, I can pass it locally...\n",
    "commit": "c5e4d99014113be5c0a0fb0fd32a8c8c86acab81",
    "createdAt": "2016-01-27T07:13:04Z",
    "diffHunk": "@@ -93,4 +93,12 @@ class RandomDataGeneratorSuite extends SparkFunSuite {\n     }\n   }\n \n+  test(\"check size of generated map\") {\n+    val mapType = MapType(IntegerType, IntegerType)\n+    val generator = RandomDataGenerator.forType(mapType, nullable = false, seed = Some(13)).get"
  }],
  "prId": 10930
}]