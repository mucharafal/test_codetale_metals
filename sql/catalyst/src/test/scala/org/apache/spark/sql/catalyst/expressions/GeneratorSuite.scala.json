[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "can you add a test case for empty input? \n",
    "commit": "5f3a9514aab50310d388808895a067d1912bf0d8",
    "createdAt": "2016-06-29T21:12:31Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.unsafe.types.UTF8String\n+\n+class GeneratorSuite extends SparkFunSuite with ExpressionEvalHelper {\n+  private def checkTuple(actual: ExplodeBase, expected: Seq[InternalRow]): Unit = {\n+    assert(actual.eval(null).toSeq === expected)\n+  }\n+\n+  private final val int_array = Seq(1, 2, 3)\n+  private final val str_array = Seq(\"a\", \"b\", \"c\")\n+\n+  test(\"explode\") {"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Yep. Done.\n",
    "commit": "5f3a9514aab50310d388808895a067d1912bf0d8",
    "createdAt": "2016-06-29T21:23:19Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.unsafe.types.UTF8String\n+\n+class GeneratorSuite extends SparkFunSuite with ExpressionEvalHelper {\n+  private def checkTuple(actual: ExplodeBase, expected: Seq[InternalRow]): Unit = {\n+    assert(actual.eval(null).toSeq === expected)\n+  }\n+\n+  private final val int_array = Seq(1, 2, 3)\n+  private final val str_array = Seq(\"a\", \"b\", \"c\")\n+\n+  test(\"explode\") {"
  }],
  "prId": 13971
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "thsi one maybe GeneratorExpressionSuite\n",
    "commit": "5f3a9514aab50310d388808895a067d1912bf0d8",
    "createdAt": "2016-06-29T21:58:16Z",
    "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.unsafe.types.UTF8String\n+\n+class GeneratorSuite extends SparkFunSuite with ExpressionEvalHelper {"
  }],
  "prId": 13971
}]