[{
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "Could you add a new test case instead of adding them in the existing one?",
    "commit": "3964414a70d679643cbe8bb9db0d66c2d6496dc4",
    "createdAt": "2019-07-07T06:30:07Z",
    "diffHunk": "@@ -23,13 +23,20 @@ import org.apache.spark.sql.catalyst.util.StringUtils._\n class StringUtilsSuite extends SparkFunSuite {\n \n   test(\"escapeLikeRegex\") {\n-    assert(escapeLikeRegex(\"abdef\") === \"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\")\n-    assert(escapeLikeRegex(\"a\\\\__b\") === \"(?s)\\\\Qa\\\\E\\\\Q_\\\\E.\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a_%b\") === \"(?s)\\\\Qa\\\\E..*\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a%\\\\%b\") === \"(?s)\\\\Qa\\\\E.*\\\\Q%\\\\E\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a%\") === \"(?s)\\\\Qa\\\\E.*\")\n-    assert(escapeLikeRegex(\"**\") === \"(?s)\\\\Q*\\\\E\\\\Q*\\\\E\")\n-    assert(escapeLikeRegex(\"a_b\") === \"(?s)\\\\Qa\\\\E.\\\\Qb\\\\E\")\n+    assert(escapeLikeRegex(\"abdef\", \"\\\\\") === \"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\")"
  }, {
    "author": {
      "login": "beliefer"
    },
    "body": "The behavior of `escapeLikeRegex` has added a new parameter,  so I think should override it.",
    "commit": "3964414a70d679643cbe8bb9db0d66c2d6496dc4",
    "createdAt": "2019-07-07T09:43:52Z",
    "diffHunk": "@@ -23,13 +23,20 @@ import org.apache.spark.sql.catalyst.util.StringUtils._\n class StringUtilsSuite extends SparkFunSuite {\n \n   test(\"escapeLikeRegex\") {\n-    assert(escapeLikeRegex(\"abdef\") === \"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\")\n-    assert(escapeLikeRegex(\"a\\\\__b\") === \"(?s)\\\\Qa\\\\E\\\\Q_\\\\E.\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a_%b\") === \"(?s)\\\\Qa\\\\E..*\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a%\\\\%b\") === \"(?s)\\\\Qa\\\\E.*\\\\Q%\\\\E\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a%\") === \"(?s)\\\\Qa\\\\E.*\")\n-    assert(escapeLikeRegex(\"**\") === \"(?s)\\\\Q*\\\\E\\\\Q*\\\\E\")\n-    assert(escapeLikeRegex(\"a_b\") === \"(?s)\\\\Qa\\\\E.\\\\Qb\\\\E\")\n+    assert(escapeLikeRegex(\"abdef\", \"\\\\\") === \"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\")"
  }],
  "prId": 25001
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "nit: To make it easy to see, how about this format?\r\n```\r\n    val expectedEscapedStr = \"(?s)\\\\Qa\\\\E\\\\Q_\\\\E.\\\\Qb\\\\E\"\r\n    assert(escapeLikeRegex(\"a\\\\__b\", \"\\\\\") === expectedEscapedStr)\r\n    assert(escapeLikeRegex(\"a/__b\", \"/\") === expectedEscapedStr)\r\n    assert(escapeLikeRegex(\"a\\\"__b\", \"\\\"\") === expectedEscapedStr)\r\n```",
    "commit": "3964414a70d679643cbe8bb9db0d66c2d6496dc4",
    "createdAt": "2019-07-29T05:07:10Z",
    "diffHunk": "@@ -23,13 +23,27 @@ import org.apache.spark.sql.catalyst.util.StringUtils._\n class StringUtilsSuite extends SparkFunSuite {\n \n   test(\"escapeLikeRegex\") {\n-    assert(escapeLikeRegex(\"abdef\") === \"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\")\n-    assert(escapeLikeRegex(\"a\\\\__b\") === \"(?s)\\\\Qa\\\\E\\\\Q_\\\\E.\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a_%b\") === \"(?s)\\\\Qa\\\\E..*\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a%\\\\%b\") === \"(?s)\\\\Qa\\\\E.*\\\\Q%\\\\E\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a%\") === \"(?s)\\\\Qa\\\\E.*\")\n-    assert(escapeLikeRegex(\"**\") === \"(?s)\\\\Q*\\\\E\\\\Q*\\\\E\")\n-    assert(escapeLikeRegex(\"a_b\") === \"(?s)\\\\Qa\\\\E.\\\\Qb\\\\E\")\n+    assert(escapeLikeRegex(\"abdef\", \"\\\\\") === \"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\")\n+    assert(escapeLikeRegex(\"abdef\", \"/\") === \"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\")\n+    assert(escapeLikeRegex(\"abdef\", \"\\\"\") === \"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\")\n+    assert(escapeLikeRegex(\"a\\\\__b\", \"\\\\\") === \"(?s)\\\\Qa\\\\E\\\\Q_\\\\E.\\\\Qb\\\\E\")\n+    assert(escapeLikeRegex(\"a/__b\", \"/\") === \"(?s)\\\\Qa\\\\E\\\\Q_\\\\E.\\\\Qb\\\\E\")\n+    assert(escapeLikeRegex(\"a\\\"__b\", \"\\\"\") === \"(?s)\\\\Qa\\\\E\\\\Q_\\\\E.\\\\Qb\\\\E\")"
  }, {
    "author": {
      "login": "beliefer"
    },
    "body": "OK. good suggestion.",
    "commit": "3964414a70d679643cbe8bb9db0d66c2d6496dc4",
    "createdAt": "2019-07-29T05:11:15Z",
    "diffHunk": "@@ -23,13 +23,27 @@ import org.apache.spark.sql.catalyst.util.StringUtils._\n class StringUtilsSuite extends SparkFunSuite {\n \n   test(\"escapeLikeRegex\") {\n-    assert(escapeLikeRegex(\"abdef\") === \"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\")\n-    assert(escapeLikeRegex(\"a\\\\__b\") === \"(?s)\\\\Qa\\\\E\\\\Q_\\\\E.\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a_%b\") === \"(?s)\\\\Qa\\\\E..*\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a%\\\\%b\") === \"(?s)\\\\Qa\\\\E.*\\\\Q%\\\\E\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a%\") === \"(?s)\\\\Qa\\\\E.*\")\n-    assert(escapeLikeRegex(\"**\") === \"(?s)\\\\Q*\\\\E\\\\Q*\\\\E\")\n-    assert(escapeLikeRegex(\"a_b\") === \"(?s)\\\\Qa\\\\E.\\\\Qb\\\\E\")\n+    assert(escapeLikeRegex(\"abdef\", \"\\\\\") === \"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\")\n+    assert(escapeLikeRegex(\"abdef\", \"/\") === \"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\")\n+    assert(escapeLikeRegex(\"abdef\", \"\\\"\") === \"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\")\n+    assert(escapeLikeRegex(\"a\\\\__b\", \"\\\\\") === \"(?s)\\\\Qa\\\\E\\\\Q_\\\\E.\\\\Qb\\\\E\")\n+    assert(escapeLikeRegex(\"a/__b\", \"/\") === \"(?s)\\\\Qa\\\\E\\\\Q_\\\\E.\\\\Qb\\\\E\")\n+    assert(escapeLikeRegex(\"a\\\"__b\", \"\\\"\") === \"(?s)\\\\Qa\\\\E\\\\Q_\\\\E.\\\\Qb\\\\E\")"
  }],
  "prId": 25001
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "Can you assign these expected strings to each independent variable?",
    "commit": "3964414a70d679643cbe8bb9db0d66c2d6496dc4",
    "createdAt": "2019-08-02T03:34:06Z",
    "diffHunk": "@@ -23,13 +23,30 @@ import org.apache.spark.sql.catalyst.util.StringUtils._\n class StringUtilsSuite extends SparkFunSuite {\n \n   test(\"escapeLikeRegex\") {\n-    assert(escapeLikeRegex(\"abdef\") === \"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\")\n-    assert(escapeLikeRegex(\"a\\\\__b\") === \"(?s)\\\\Qa\\\\E\\\\Q_\\\\E.\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a_%b\") === \"(?s)\\\\Qa\\\\E..*\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a%\\\\%b\") === \"(?s)\\\\Qa\\\\E.*\\\\Q%\\\\E\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a%\") === \"(?s)\\\\Qa\\\\E.*\")\n-    assert(escapeLikeRegex(\"**\") === \"(?s)\\\\Q*\\\\E\\\\Q*\\\\E\")\n-    assert(escapeLikeRegex(\"a_b\") === \"(?s)\\\\Qa\\\\E.\\\\Qb\\\\E\")\n+    val expectedEscapedStrArr = Array(\"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\","
  }, {
    "author": {
      "login": "beliefer"
    },
    "body": "OK. no problem",
    "commit": "3964414a70d679643cbe8bb9db0d66c2d6496dc4",
    "createdAt": "2019-08-02T06:40:13Z",
    "diffHunk": "@@ -23,13 +23,30 @@ import org.apache.spark.sql.catalyst.util.StringUtils._\n class StringUtilsSuite extends SparkFunSuite {\n \n   test(\"escapeLikeRegex\") {\n-    assert(escapeLikeRegex(\"abdef\") === \"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\")\n-    assert(escapeLikeRegex(\"a\\\\__b\") === \"(?s)\\\\Qa\\\\E\\\\Q_\\\\E.\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a_%b\") === \"(?s)\\\\Qa\\\\E..*\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a%\\\\%b\") === \"(?s)\\\\Qa\\\\E.*\\\\Q%\\\\E\\\\Qb\\\\E\")\n-    assert(escapeLikeRegex(\"a%\") === \"(?s)\\\\Qa\\\\E.*\")\n-    assert(escapeLikeRegex(\"**\") === \"(?s)\\\\Q*\\\\E\\\\Q*\\\\E\")\n-    assert(escapeLikeRegex(\"a_b\") === \"(?s)\\\\Qa\\\\E.\\\\Qb\\\\E\")\n+    val expectedEscapedStrArr = Array(\"(?s)\\\\Qa\\\\E\\\\Qb\\\\E\\\\Qd\\\\E\\\\Qe\\\\E\\\\Qf\\\\E\","
  }],
  "prId": 25001
}]