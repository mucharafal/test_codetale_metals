[{
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "Why do you no longer need these tests?\n",
    "commit": "4c2752ece379acbdfa9bb0b2509feb27fe1d4acd",
    "createdAt": "2015-08-08T20:56:25Z",
    "diffHunk": "@@ -46,11 +46,8 @@ class DecimalSuite extends SparkFunSuite with PrivateMethodTester {\n     checkDecimal(Decimal(1e17.toLong, 18, 0), 1e17.toLong.toString, 18, 0)\n     checkDecimal(Decimal(Long.MaxValue), Long.MaxValue.toString, 20, 0)\n     checkDecimal(Decimal(Long.MinValue), Long.MinValue.toString, 20, 0)\n-    intercept[IllegalArgumentException](Decimal(170L, 2, 1))",
    "line": 4
  }, {
    "author": {
      "login": "davies"
    },
    "body": "This patch has change to use Decimal(unscaleLong, precision, scale) only for serialization, and the caller will make sure that it will not overflow.\n",
    "commit": "4c2752ece379acbdfa9bb0b2509feb27fe1d4acd",
    "createdAt": "2015-08-08T21:01:31Z",
    "diffHunk": "@@ -46,11 +46,8 @@ class DecimalSuite extends SparkFunSuite with PrivateMethodTester {\n     checkDecimal(Decimal(1e17.toLong, 18, 0), 1e17.toLong.toString, 18, 0)\n     checkDecimal(Decimal(Long.MaxValue), Long.MaxValue.toString, 20, 0)\n     checkDecimal(Decimal(Long.MinValue), Long.MinValue.toString, 20, 0)\n-    intercept[IllegalArgumentException](Decimal(170L, 2, 1))",
    "line": 4
  }, {
    "author": {
      "login": "davies"
    },
    "body": "We should only check overflow during inbound conversion, or after some calculation, don't need to do this during serialization.\n",
    "commit": "4c2752ece379acbdfa9bb0b2509feb27fe1d4acd",
    "createdAt": "2015-08-08T21:02:35Z",
    "diffHunk": "@@ -46,11 +46,8 @@ class DecimalSuite extends SparkFunSuite with PrivateMethodTester {\n     checkDecimal(Decimal(1e17.toLong, 18, 0), 1e17.toLong.toString, 18, 0)\n     checkDecimal(Decimal(Long.MaxValue), Long.MaxValue.toString, 20, 0)\n     checkDecimal(Decimal(Long.MinValue), Long.MinValue.toString, 20, 0)\n-    intercept[IllegalArgumentException](Decimal(170L, 2, 1))",
    "line": 4
  }],
  "prId": 8018
}]