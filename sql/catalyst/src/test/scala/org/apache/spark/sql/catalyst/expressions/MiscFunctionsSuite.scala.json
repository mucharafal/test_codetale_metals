[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "this line will fail the style checker\n",
    "commit": "11fcdb2a4c8c947d84e7a00d840b1a0896c91c55",
    "createdAt": "2015-06-12T06:44:07Z",
    "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.dsl.expressions._\n+\n+class MiscFunctionsSuite extends SparkFunSuite with ExpressionEvalHelper {\n+\n+  test(\"md5\") {\n+    val s1 = 'a.string.at(0)\n+    val s2 = 'a.binary.at(0)\n+    checkEvaluation(Md5(s1), \"902fbdd2b1df0c4f70b4a5d23525e932\", create_row(\"ABC\"))\n+    checkEvaluation(Md5(s2), \"6ac1e56bc78f031059be7be854522c4c\", create_row(Array[Byte](1,2,3,4,5,6)))"
  }],
  "prId": 6779
}, {
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "I think this test would be simpler/clearer if you just pass literals to the expression.  There are other tests that make sure that we can extract values from rows.\n\nAdditionally It would be good to test some edge cases: an empty string, `null`, etc\n",
    "commit": "11fcdb2a4c8c947d84e7a00d840b1a0896c91c55",
    "createdAt": "2015-06-12T08:25:17Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.dsl.expressions._\n+\n+class MiscFunctionsSuite extends SparkFunSuite with ExpressionEvalHelper {\n+\n+  test(\"md5\") {\n+    val s1 = 'a.string.at(0)\n+    val s2 = 'a.binary.at(0)\n+    checkEvaluation(Md5(s1), \"902fbdd2b1df0c4f70b4a5d23525e932\", create_row(\"ABC\"))\n+    checkEvaluation(Md5(s2), \"6ac1e56bc78f031059be7be854522c4c\","
  }, {
    "author": {
      "login": "chenghao-intel"
    },
    "body": "+1 for edge cases.\n\n@qiansl127 you can write code like \n\n``` scala\ncheckEvaluation(Md5(Literal(\"ABC\"), \"902fbdd2b1df0c4f70b4a5d23525e932\")\ncheckEvaluation(Md5(Literal.create(null, BinaryType), \"...\")\ncheckEvaluation(Md5(Literal.create(null, StringType), \"...\")\n```\n",
    "commit": "11fcdb2a4c8c947d84e7a00d840b1a0896c91c55",
    "createdAt": "2015-06-12T13:04:18Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import org.apache.spark.SparkFunSuite\n+import org.apache.spark.sql.catalyst.dsl.expressions._\n+\n+class MiscFunctionsSuite extends SparkFunSuite with ExpressionEvalHelper {\n+\n+  test(\"md5\") {\n+    val s1 = 'a.string.at(0)\n+    val s2 = 'a.binary.at(0)\n+    checkEvaluation(Md5(s1), \"902fbdd2b1df0c4f70b4a5d23525e932\", create_row(\"ABC\"))\n+    checkEvaluation(Md5(s2), \"6ac1e56bc78f031059be7be854522c4c\","
  }],
  "prId": 6779
}]