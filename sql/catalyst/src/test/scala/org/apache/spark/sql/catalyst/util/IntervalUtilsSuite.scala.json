[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "indentation?",
    "commit": "38f7c78e51ed4a19a24aee6aca08fc58dd101f20",
    "createdAt": "2019-10-26T00:36:04Z",
    "diffHunk": "@@ -87,4 +87,57 @@ class IntervalUtilsSuite extends SparkFunSuite {\n       assert(fromString(input2) == result)\n     }\n   }\n+\n+  test(\"from year-month string\") {\n+    assert(fromYearMonthString(\"99-10\") === new CalendarInterval(99 * 12 + 10, 0L))\n+    assert(fromYearMonthString(\"-8-10\") === new CalendarInterval(-8 * 12 - 10, 0L))\n+\n+    try {\n+      fromYearMonthString(\"99-15\")\n+      fail(\"Expected to throw an exception for the invalid input\")\n+    } catch {\n+      case e: IllegalArgumentException =>\n+        assert(e.getMessage.contains(\"month 15 outside range\"))\n+    }\n+  }\n+\n+  test(\"from day-time string\") {\n+    assert(fromDayTimeString(\"5 12:40:30.999999999\") ===\n+      new CalendarInterval(\n+        0,\n+        5 * MICROS_PER_DAY +\n+          12 * MICROS_PER_HOUR +"
  }],
  "prId": 26261
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "```scala\r\nassert(fromDayTimeString(\"-3 0:0:0\") === new CalendarInterval(0, -3 * MICROS_PER_DAY))\r\n```",
    "commit": "38f7c78e51ed4a19a24aee6aca08fc58dd101f20",
    "createdAt": "2019-10-26T00:37:26Z",
    "diffHunk": "@@ -87,4 +87,57 @@ class IntervalUtilsSuite extends SparkFunSuite {\n       assert(fromString(input2) == result)\n     }\n   }\n+\n+  test(\"from year-month string\") {\n+    assert(fromYearMonthString(\"99-10\") === new CalendarInterval(99 * 12 + 10, 0L))\n+    assert(fromYearMonthString(\"-8-10\") === new CalendarInterval(-8 * 12 - 10, 0L))\n+\n+    try {\n+      fromYearMonthString(\"99-15\")\n+      fail(\"Expected to throw an exception for the invalid input\")\n+    } catch {\n+      case e: IllegalArgumentException =>\n+        assert(e.getMessage.contains(\"month 15 outside range\"))\n+    }\n+  }\n+\n+  test(\"from day-time string\") {\n+    assert(fromDayTimeString(\"5 12:40:30.999999999\") ===\n+      new CalendarInterval(\n+        0,\n+        5 * MICROS_PER_DAY +\n+          12 * MICROS_PER_HOUR +\n+          40 * MICROS_PER_MINUTE +\n+          30 * MICROS_PER_SECOND + 999999L))\n+    assert(fromDayTimeString(\"10 0:12:0.888\") ===\n+      new CalendarInterval(\n+        0,\n+        10 * MICROS_PER_DAY + 12 * MICROS_PER_MINUTE + 888 * MICROS_PER_MILLI))\n+    assert(fromDayTimeString(\"-3 0:0:0\") ===\n+      new CalendarInterval(0, -3 * MICROS_PER_DAY))"
  }],
  "prId": 26261
}]