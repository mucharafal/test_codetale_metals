[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "unnecessary line?",
    "commit": "87491732e1473880077daf9ce5c080845f4742e1",
    "createdAt": "2018-09-17T11:59:41Z",
    "diffHunk": "@@ -69,11 +85,26 @@ class CodeGeneratorWithInterpretedFallbackSuite extends SparkFunSuite with PlanT\n   test(\"codegen failures in the CODEGEN_ONLY mode\") {\n     val errMsg = intercept[ExecutionException] {\n       val input = Seq(BoundReference(0, IntegerType, nullable = true))\n-      val codegenOnly = CodegenObjectFactoryMode.CODEGEN_ONLY.toString\n       withSQLConf(SQLConf.CODEGEN_FACTORY_MODE.key -> codegenOnly) {\n         FailedCodegenProjection.createObject(input)\n       }\n+      val noCodegen = CodegenObjectFactoryMode.NO_CODEGEN.toString"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "oh.. yes. I'll remove.",
    "commit": "87491732e1473880077daf9ce5c080845f4742e1",
    "createdAt": "2018-09-17T12:02:18Z",
    "diffHunk": "@@ -69,11 +85,26 @@ class CodeGeneratorWithInterpretedFallbackSuite extends SparkFunSuite with PlanT\n   test(\"codegen failures in the CODEGEN_ONLY mode\") {\n     val errMsg = intercept[ExecutionException] {\n       val input = Seq(BoundReference(0, IntegerType, nullable = true))\n-      val codegenOnly = CodegenObjectFactoryMode.CODEGEN_ONLY.toString\n       withSQLConf(SQLConf.CODEGEN_FACTORY_MODE.key -> codegenOnly) {\n         FailedCodegenProjection.createObject(input)\n       }\n+      val noCodegen = CodegenObjectFactoryMode.NO_CODEGEN.toString"
  }],
  "prId": 22355
}]