[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "why lower and upper is 0 and 1?",
    "commit": "38b04df792caf298da63be565d1b46a4eae93d98",
    "createdAt": "2017-07-22T11:10:07Z",
    "diffHunk": "@@ -436,21 +436,22 @@ class TreeNodeSuite extends SparkFunSuite {\n         \"bucketColumnNames\" -> \"[bucket]\",\n         \"sortColumnNames\" -> \"[sort]\"))\n \n-    // Converts FrameBoundary to JSON\n-    assertJSON(\n-      ValueFollowing(3),\n-      JObject(\n-        \"product-class\" -> classOf[ValueFollowing].getName,\n-        \"value\" -> 3))\n-\n     // Converts WindowFrame to JSON\n     assertJSON(\n-      SpecifiedWindowFrame(RowFrame, UnboundedFollowing, CurrentRow),\n-      JObject(\n-        \"product-class\" -> classOf[SpecifiedWindowFrame].getName,\n-        \"frameType\" -> JObject(\"object\" -> JString(RowFrame.getClass.getName)),\n-        \"frameStart\" -> JObject(\"object\" -> JString(UnboundedFollowing.getClass.getName)),\n-        \"frameEnd\" -> JObject(\"object\" -> JString(CurrentRow.getClass.getName))))\n+      SpecifiedWindowFrame(RowFrame, Unbounded, CurrentRow),\n+      List(\n+        JObject(\n+          \"class\" -> classOf[SpecifiedWindowFrame].getName,\n+          \"num-children\" -> 2,\n+          \"frameType\" -> JObject(\"object\" -> JString(RowFrame.getClass.getName)),\n+          \"lower\" -> 0,\n+          \"upper\" -> 1),",
    "line": 26
  }, {
    "author": {
      "login": "jiangxb1987"
    },
    "body": "After this PR, `SpecialFrameBoundary` and `WindowFrame` are made `Expression`s, thus they are `TreeNode`s, so the field values are made value index in the TreeNode.children.",
    "commit": "38b04df792caf298da63be565d1b46a4eae93d98",
    "createdAt": "2017-07-24T10:23:33Z",
    "diffHunk": "@@ -436,21 +436,22 @@ class TreeNodeSuite extends SparkFunSuite {\n         \"bucketColumnNames\" -> \"[bucket]\",\n         \"sortColumnNames\" -> \"[sort]\"))\n \n-    // Converts FrameBoundary to JSON\n-    assertJSON(\n-      ValueFollowing(3),\n-      JObject(\n-        \"product-class\" -> classOf[ValueFollowing].getName,\n-        \"value\" -> 3))\n-\n     // Converts WindowFrame to JSON\n     assertJSON(\n-      SpecifiedWindowFrame(RowFrame, UnboundedFollowing, CurrentRow),\n-      JObject(\n-        \"product-class\" -> classOf[SpecifiedWindowFrame].getName,\n-        \"frameType\" -> JObject(\"object\" -> JString(RowFrame.getClass.getName)),\n-        \"frameStart\" -> JObject(\"object\" -> JString(UnboundedFollowing.getClass.getName)),\n-        \"frameEnd\" -> JObject(\"object\" -> JString(CurrentRow.getClass.getName))))\n+      SpecifiedWindowFrame(RowFrame, Unbounded, CurrentRow),\n+      List(\n+        JObject(\n+          \"class\" -> classOf[SpecifiedWindowFrame].getName,\n+          \"num-children\" -> 2,\n+          \"frameType\" -> JObject(\"object\" -> JString(RowFrame.getClass.getName)),\n+          \"lower\" -> 0,\n+          \"upper\" -> 1),",
    "line": 26
  }],
  "prId": 18540
}]