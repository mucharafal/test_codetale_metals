[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "This should be a new test suite for EliminateResolvedHint. We only need to compare the plans and verifies the result. ",
    "commit": "97377dd5fbf62fe02eafcd99cac4e4c1f235e8d3",
    "createdAt": "2018-12-15T02:02:02Z",
    "diffHunk": "@@ -72,4 +77,12 @@ class SameResultSuite extends SparkFunSuite {\n     val df2 = testRelation.join(testRelation)\n     assertSameResult(df1, df2)\n   }\n+\n+  test(\"join hint\") {\n+    val df1 = testRelation.join(testRelation.hint(\"broadcast\"))\n+    val df2 = testRelation.join(testRelation)\n+    val df1Optimized = Optimize.execute(df1.analyze)\n+    val df2Optimized = Optimize.execute(df2.analyze)\n+    assertSameResult(df1Optimized, df2Optimized)",
    "line": 32
  }, {
    "author": {
      "login": "maryannxue"
    },
    "body": "No. This is to test `Join.doCanonicalize()`.",
    "commit": "97377dd5fbf62fe02eafcd99cac4e4c1f235e8d3",
    "createdAt": "2019-01-05T04:04:23Z",
    "diffHunk": "@@ -72,4 +77,12 @@ class SameResultSuite extends SparkFunSuite {\n     val df2 = testRelation.join(testRelation)\n     assertSameResult(df1, df2)\n   }\n+\n+  test(\"join hint\") {\n+    val df1 = testRelation.join(testRelation.hint(\"broadcast\"))\n+    val df2 = testRelation.join(testRelation)\n+    val df1Optimized = Optimize.execute(df1.analyze)\n+    val df2Optimized = Optimize.execute(df2.analyze)\n+    assertSameResult(df1Optimized, df2Optimized)",
    "line": 32
  }],
  "prId": 23036
}]