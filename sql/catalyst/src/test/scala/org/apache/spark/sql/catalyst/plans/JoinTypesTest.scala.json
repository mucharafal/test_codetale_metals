[{
  "comments": [{
    "author": {
      "login": "sameeragarwal"
    },
    "body": "nit: can just have `JoinType(\"...\")` here and below. Also, can we have a test that checks for the correct exception for wrong join types? Something along the lines of:\r\n\r\n```scala\r\nval ex = intercept[IllegalArgumentException] {\r\n  JoinType.apply(\"wrong_join\")\r\n}\r\nex.getMessage() should contain \"...\"\r\n```",
    "commit": "9fc9a0ad567dfb28d22d94321fcef0ea3b1ae73b",
    "createdAt": "2017-06-08T22:35:01Z",
    "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+\n+package org.apache.spark.sql.catalyst.plans\n+\n+import org.apache.spark.SparkFunSuite\n+\n+class JoinTypesTest extends SparkFunSuite {\n+\n+  test(\"construct an Inner type\") {\n+    assert(JoinType.apply(\"inner\") === Inner)"
  }],
  "prId": 17985
}]