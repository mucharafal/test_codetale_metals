[{
  "comments": [{
    "author": {
      "login": "liancheng"
    },
    "body": "Missing `BooleanType` and `DateType`.\n",
    "commit": "f71634d73470189cfe45a89d2a69ea9c5ffa9e29",
    "createdAt": "2015-07-02T18:36:27Z",
    "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+/**\n+ * Utility functions for working with DataTypes in tests.\n+ */\n+object DataTypeTestUtils {\n+\n+  /**\n+   * Instances of all [[IntegralType]]s.\n+   */\n+  val integralType: Set[IntegralType] = Set(\n+    ByteType, ShortType, IntegerType, LongType\n+  )\n+\n+  /**\n+   * Instances of all [[FractionalType]]s, including both fixed- and unlimited-precision\n+   * decimal types.\n+   */\n+  val fractionalTypes: Set[FractionalType] = Set(\n+    DecimalType(precisionInfo = None),\n+    DecimalType(2, 1),\n+    DoubleType,\n+    FloatType\n+  )\n+\n+  /**\n+   * Instances of all [[NumericType]]s.\n+   */\n+  val numericTypes: Set[NumericType] = integralType ++ fractionalTypes\n+\n+  /**\n+   * Instances of all [[AtomicType]]s.\n+   */\n+  val atomicTypes: Set[DataType] = Set(BinaryType, StringType, TimestampType) ++ numericTypes"
  }],
  "prId": 7176
}]