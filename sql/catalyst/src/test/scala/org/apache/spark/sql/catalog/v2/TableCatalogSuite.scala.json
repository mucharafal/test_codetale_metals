[{
  "comments": [{
    "author": {
      "login": "rdblue"
    },
    "body": "Nit: should be \"fail if new table name already exists\" to be more clear.",
    "commit": "71d9ad1b497f79fefee9a83d8f40c565288c1c9a",
    "createdAt": "2019-07-19T23:38:51Z",
    "diffHunk": "@@ -654,4 +655,68 @@ class TableCatalogSuite extends SparkFunSuite {\n     assert(!wasDropped)\n     assert(!catalog.tableExists(testIdent))\n   }\n+\n+  test(\"renameTable\") {\n+    val catalog = newCatalog()\n+\n+    assert(!catalog.tableExists(testIdent))\n+    assert(!catalog.tableExists(testIdentNew))\n+\n+    catalog.createTable(testIdent, schema, Array.empty, emptyProps)\n+\n+    assert(catalog.tableExists(testIdent))\n+    catalog.renameTable(testIdent, testIdentNew)\n+\n+    assert(!catalog.tableExists(testIdent))\n+    assert(catalog.tableExists(testIdentNew))\n+  }\n+\n+  test(\"renameTable: table does not exist\") {\n+    val catalog = newCatalog()\n+\n+    val exc = intercept[NoSuchTableException] {\n+      catalog.renameTable(testIdent, testIdentNew)\n+    }\n+\n+    assert(exc.message.contains(testIdent.quoted))\n+    assert(exc.message.contains(\"not found\"))\n+  }\n+\n+  test(\"renameTable: new table already exists\") {"
  }],
  "prId": 25206
}, {
  "comments": [{
    "author": {
      "login": "rdblue"
    },
    "body": "Is this a requirement of the API? I think this may be how some catalogs behave, but I see no reason why it should be disallowed by Spark.",
    "commit": "71d9ad1b497f79fefee9a83d8f40c565288c1c9a",
    "createdAt": "2019-07-19T23:39:24Z",
    "diffHunk": "@@ -654,4 +655,68 @@ class TableCatalogSuite extends SparkFunSuite {\n     assert(!wasDropped)\n     assert(!catalog.tableExists(testIdent))\n   }\n+\n+  test(\"renameTable\") {\n+    val catalog = newCatalog()\n+\n+    assert(!catalog.tableExists(testIdent))\n+    assert(!catalog.tableExists(testIdentNew))\n+\n+    catalog.createTable(testIdent, schema, Array.empty, emptyProps)\n+\n+    assert(catalog.tableExists(testIdent))\n+    catalog.renameTable(testIdent, testIdentNew)\n+\n+    assert(!catalog.tableExists(testIdent))\n+    assert(catalog.tableExists(testIdentNew))\n+  }\n+\n+  test(\"renameTable: table does not exist\") {\n+    val catalog = newCatalog()\n+\n+    val exc = intercept[NoSuchTableException] {\n+      catalog.renameTable(testIdent, testIdentNew)\n+    }\n+\n+    assert(exc.message.contains(testIdent.quoted))\n+    assert(exc.message.contains(\"not found\"))\n+  }\n+\n+  test(\"renameTable: new table already exists\") {\n+    val catalog = newCatalog()\n+\n+    assert(!catalog.tableExists(testIdent))\n+    assert(!catalog.tableExists(testIdentNew))\n+\n+    catalog.createTable(testIdent, schema, Array.empty, emptyProps)\n+    catalog.createTable(testIdentNew, schema, Array.empty, emptyProps)\n+\n+    assert(catalog.tableExists(testIdent))\n+    assert(catalog.tableExists(testIdentNew))\n+\n+    val exc = intercept[TableAlreadyExistsException] {\n+      catalog.renameTable(testIdent, testIdentNew)\n+    }\n+\n+    assert(exc.message.contains(testIdentNew.quoted))\n+    assert(exc.message.contains(\"already exists\"))\n+  }\n+\n+  test(\"renameTable: namespaces of old and new table identifiers do not match\") {"
  }, {
    "author": {
      "login": "edgarRd"
    },
    "body": "I don't think there's a requirement for this in the spec, but I agree that some catalogs may or may not allow table renames between namespaces.\r\nI'll remove this restriction.",
    "commit": "71d9ad1b497f79fefee9a83d8f40c565288c1c9a",
    "createdAt": "2019-07-19T23:43:01Z",
    "diffHunk": "@@ -654,4 +655,68 @@ class TableCatalogSuite extends SparkFunSuite {\n     assert(!wasDropped)\n     assert(!catalog.tableExists(testIdent))\n   }\n+\n+  test(\"renameTable\") {\n+    val catalog = newCatalog()\n+\n+    assert(!catalog.tableExists(testIdent))\n+    assert(!catalog.tableExists(testIdentNew))\n+\n+    catalog.createTable(testIdent, schema, Array.empty, emptyProps)\n+\n+    assert(catalog.tableExists(testIdent))\n+    catalog.renameTable(testIdent, testIdentNew)\n+\n+    assert(!catalog.tableExists(testIdent))\n+    assert(catalog.tableExists(testIdentNew))\n+  }\n+\n+  test(\"renameTable: table does not exist\") {\n+    val catalog = newCatalog()\n+\n+    val exc = intercept[NoSuchTableException] {\n+      catalog.renameTable(testIdent, testIdentNew)\n+    }\n+\n+    assert(exc.message.contains(testIdent.quoted))\n+    assert(exc.message.contains(\"not found\"))\n+  }\n+\n+  test(\"renameTable: new table already exists\") {\n+    val catalog = newCatalog()\n+\n+    assert(!catalog.tableExists(testIdent))\n+    assert(!catalog.tableExists(testIdentNew))\n+\n+    catalog.createTable(testIdent, schema, Array.empty, emptyProps)\n+    catalog.createTable(testIdentNew, schema, Array.empty, emptyProps)\n+\n+    assert(catalog.tableExists(testIdent))\n+    assert(catalog.tableExists(testIdentNew))\n+\n+    val exc = intercept[TableAlreadyExistsException] {\n+      catalog.renameTable(testIdent, testIdentNew)\n+    }\n+\n+    assert(exc.message.contains(testIdentNew.quoted))\n+    assert(exc.message.contains(\"already exists\"))\n+  }\n+\n+  test(\"renameTable: namespaces of old and new table identifiers do not match\") {"
  }],
  "prId": 25206
}]