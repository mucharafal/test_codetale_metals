[{
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "Lets put this in its own test suite.\n",
    "commit": "4551a921286437b2c3bb7c0d2194eb2da5db98cd",
    "createdAt": "2015-10-20T17:01:32Z",
    "diffHunk": "@@ -215,6 +217,42 @@ class ProductEncoderSuite extends SparkFunSuite {\n   protected def encodeDecodeTest[T <: Product : TypeTag](inputData: T) =\n     encodeDecodeTestCustom[T](inputData)((l, r) => l == r)\n \n+  test(\"encode/decode external row\") {"
  }],
  "prId": 9184
}, {
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "nit: i'd call this arrayOfString and the one below arrayOfArrayOfString\n",
    "commit": "4551a921286437b2c3bb7c0d2194eb2da5db98cd",
    "createdAt": "2015-10-20T17:02:12Z",
    "diffHunk": "@@ -215,6 +217,42 @@ class ProductEncoderSuite extends SparkFunSuite {\n   protected def encodeDecodeTest[T <: Product : TypeTag](inputData: T) =\n     encodeDecodeTestCustom[T](inputData)((l, r) => l == r)\n \n+  test(\"encode/decode external row\") {\n+    val encoder = ProductEncoder(\n+      new StructType()\n+        .add(\"int\", IntegerType)\n+        .add(\"str\", StringType)\n+        .add(\"array\", ArrayType(StringType))"
  }],
  "prId": 9184
}, {
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "Could we extend encodeDecodeTest to also just try converting `InternalRow => Row` and then `Row => InternalRow` and make sure the results match?  That seems like a good way to get coverage without having to repeat a lot of test code.\n",
    "commit": "4551a921286437b2c3bb7c0d2194eb2da5db98cd",
    "createdAt": "2015-10-20T17:08:50Z",
    "diffHunk": "@@ -215,6 +217,42 @@ class ProductEncoderSuite extends SparkFunSuite {\n   protected def encodeDecodeTest[T <: Product : TypeTag](inputData: T) ="
  }],
  "prId": 9184
}]