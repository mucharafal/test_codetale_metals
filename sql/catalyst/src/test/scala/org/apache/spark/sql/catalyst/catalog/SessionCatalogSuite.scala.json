[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "`lookupRelation` is no longer there, so I removed the related tests.",
    "commit": "c10f28896b20e124532aa36d586a23d2c7bc2810",
    "createdAt": "2019-10-22T16:35:21Z",
    "diffHunk": "@@ -599,42 +599,6 @@ abstract class SessionCatalogSuite extends AnalysisTest {\n     }\n   }\n \n-  test(\"lookup table relation\") {\n-    withBasicCatalog { catalog =>\n-      val tempTable1 = Range(1, 10, 1, 10)\n-      val metastoreTable1 = catalog.externalCatalog.getTable(\"db2\", \"tbl1\")\n-      catalog.createTempView(\"tbl1\", tempTable1, overrideIfExists = false)\n-      catalog.setCurrentDatabase(\"db2\")\n-      // If we explicitly specify the database, we'll look up the relation in that database\n-      assert(catalog.lookupRelation(TableIdentifier(\"tbl1\", Some(\"db2\"))).children.head\n-        .asInstanceOf[UnresolvedCatalogRelation].tableMeta == metastoreTable1)\n-      // Otherwise, we'll first look up a temporary table with the same name\n-      assert(catalog.lookupRelation(TableIdentifier(\"tbl1\"))\n-        == SubqueryAlias(\"tbl1\", tempTable1))\n-      // Then, if that does not exist, look up the relation in the current database\n-      catalog.dropTable(TableIdentifier(\"tbl1\"), ignoreIfNotExists = false, purge = false)\n-      assert(catalog.lookupRelation(TableIdentifier(\"tbl1\")).children.head"
  }, {
    "author": {
      "login": "imback82"
    },
    "body": "do we need to have tests for `lookup*` and `createV1Relation`?",
    "commit": "c10f28896b20e124532aa36d586a23d2c7bc2810",
    "createdAt": "2019-10-23T19:40:32Z",
    "diffHunk": "@@ -599,42 +599,6 @@ abstract class SessionCatalogSuite extends AnalysisTest {\n     }\n   }\n \n-  test(\"lookup table relation\") {\n-    withBasicCatalog { catalog =>\n-      val tempTable1 = Range(1, 10, 1, 10)\n-      val metastoreTable1 = catalog.externalCatalog.getTable(\"db2\", \"tbl1\")\n-      catalog.createTempView(\"tbl1\", tempTable1, overrideIfExists = false)\n-      catalog.setCurrentDatabase(\"db2\")\n-      // If we explicitly specify the database, we'll look up the relation in that database\n-      assert(catalog.lookupRelation(TableIdentifier(\"tbl1\", Some(\"db2\"))).children.head\n-        .asInstanceOf[UnresolvedCatalogRelation].tableMeta == metastoreTable1)\n-      // Otherwise, we'll first look up a temporary table with the same name\n-      assert(catalog.lookupRelation(TableIdentifier(\"tbl1\"))\n-        == SubqueryAlias(\"tbl1\", tempTable1))\n-      // Then, if that does not exist, look up the relation in the current database\n-      catalog.dropTable(TableIdentifier(\"tbl1\"), ignoreIfNotExists = false, purge = false)\n-      assert(catalog.lookupRelation(TableIdentifier(\"tbl1\")).children.head"
  }],
  "prId": 26214
}]