[{
  "comments": [{
    "author": {
      "login": "MaxGekk"
    },
    "body": "You described 2 cases in the PR discription `':'` and `' '`. This test checks the first one only. Could you add at least one more check for `' '`.",
    "commit": "5ef53b7ca639c0bff5db28b9d96ba810974b3207",
    "createdAt": "2019-10-16T18:47:08Z",
    "diffHunk": "@@ -456,6 +456,12 @@ class DateTimeUtilsSuite extends SparkFunSuite with Matchers {\n     }\n   }\n \n+  test(\"trailing characters while converting string to timestamp\") {\n+    val s = UTF8String.fromString(\"2019-10-31T10:59:23Z:::\")",
    "line": 5
  }],
  "prId": 26143
}, {
  "comments": [{
    "author": {
      "login": "MaxGekk"
    },
    "body": "`stringToTimestamp` returns None becase of invalid time zone `ZZ` at the end. If you replace the string `\"2019-10-31T10:59:23ZZ   \"` by `\"2019-10-31T10:59:23Z   \"`, the functions shouldn't return None",
    "commit": "5ef53b7ca639c0bff5db28b9d96ba810974b3207",
    "createdAt": "2019-10-16T20:40:04Z",
    "diffHunk": "@@ -456,6 +456,18 @@ class DateTimeUtilsSuite extends SparkFunSuite with Matchers {\n     }\n   }\n \n+  test(\"trailing colon while converting string to timestamp\") {\n+    val s = UTF8String.fromString(\"2019-10-31T10:59:23Z:::\")\n+    val time = DateTimeUtils.stringToTimestamp(s, defaultZoneId)\n+    assert(time == None)\n+  }\n+\n+  test(\"trailing space while converting string to timestamp\") {\n+    val s = UTF8String.fromString(\"2019-10-31T10:59:23ZZ   \")"
  }, {
    "author": {
      "login": "rahulsmahadev"
    },
    "body": "You are right this works accurately for trailing spaces, I first enounctered this issue on an older release branch and it did not have the `.trim` . But the fix should work for trailing spaces as well if backported.",
    "commit": "5ef53b7ca639c0bff5db28b9d96ba810974b3207",
    "createdAt": "2019-10-16T21:03:45Z",
    "diffHunk": "@@ -456,6 +456,18 @@ class DateTimeUtilsSuite extends SparkFunSuite with Matchers {\n     }\n   }\n \n+  test(\"trailing colon while converting string to timestamp\") {\n+    val s = UTF8String.fromString(\"2019-10-31T10:59:23Z:::\")\n+    val time = DateTimeUtils.stringToTimestamp(s, defaultZoneId)\n+    assert(time == None)\n+  }\n+\n+  test(\"trailing space while converting string to timestamp\") {\n+    val s = UTF8String.fromString(\"2019-10-31T10:59:23ZZ   \")"
  }],
  "prId": 26143
}]