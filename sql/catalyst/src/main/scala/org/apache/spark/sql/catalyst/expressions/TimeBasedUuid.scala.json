[{
  "comments": [{
    "author": {
      "login": "hvanhovell"
    },
    "body": "I am not sure if we should add this type of UUID because it make make task retries non-deterministic. If a task fails it might be executed on a different machine and then this expression will return a different value, this can cause issues with round robin partitioning for example.",
    "commit": "77e65d8cfa07a5eca7890ffc12bbed917312a35f",
    "createdAt": "2018-12-23T21:45:12Z",
    "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions\n+\n+import com.fasterxml.uuid.{EthernetAddress, Generators}\n+\n+import org.apache.spark.sql.catalyst.expressions.codegen.{CodegenContext, ExprCode, FalseLiteral}\n+\n+@ExpressionDescription(\n+  usage = \"_FUNC_() - Returns a time-based universally unique identifier (UUID).\" +\n+    \" The value is returned as a canonical UUID 36-character string.\",\n+  examples = \"\"\"\n+    Examples:\n+      > SELECT _FUNC_();\n+       46707d92-02f4-4817-8116-a4c3b23e6266\n+  \"\"\",\n+  since = \"2.4.0\"\n+)\n+case class TimeBasedUuid() extends UuidExpression {",
    "line": 34
  }],
  "prId": 21055
}]