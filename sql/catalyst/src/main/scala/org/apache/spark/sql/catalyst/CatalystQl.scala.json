[{
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "We need to support Char type.\n",
    "commit": "8b7086e85c10d537cd21e926d9129f9edf853445",
    "createdAt": "2016-01-21T05:08:40Z",
    "diffHunk": "@@ -140,6 +140,7 @@ private[sql] class CatalystQl(val conf: ParserConf = SimpleParserConf()) extends\n     case Token(\"TOK_BOOLEAN\", Nil) => BooleanType\n     case Token(\"TOK_STRING\", Nil) => StringType\n     case Token(\"TOK_VARCHAR\", Token(_, Nil) :: Nil) => StringType\n+    case Token(\"TOK_CHAR\", Token(_, Nil) :: Nil) => StringType",
    "line": 4
  }],
  "prId": 10723
}, {
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "Add comment to `StructField`'s metadata.\n",
    "commit": "8b7086e85c10d537cd21e926d9129f9edf853445",
    "createdAt": "2016-01-21T05:09:08Z",
    "diffHunk": "@@ -156,9 +157,10 @@ private[sql] class CatalystQl(val conf: ParserConf = SimpleParserConf()) extends\n \n   protected def nodeToStructField(node: ASTNode): StructField = node match {\n     case Token(\"TOK_TABCOL\", Token(fieldName, Nil) :: dataType :: Nil) =>\n-      StructField(fieldName, nodeToDataType(dataType), nullable = true)\n-    case Token(\"TOK_TABCOL\", Token(fieldName, Nil) :: dataType :: _ /* comment */:: Nil) =>\n-      StructField(fieldName, nodeToDataType(dataType), nullable = true)\n+      StructField(cleanIdentifier(fieldName), nodeToDataType(dataType), nullable = true)\n+    case Token(\"TOK_TABCOL\", Token(fieldName, Nil) :: dataType :: comment :: Nil) =>\n+      val meta = new MetadataBuilder().putString(\"comment\", unquoteString(comment.text)).build()\n+      StructField(cleanIdentifier(fieldName), nodeToDataType(dataType), nullable = true, meta)",
    "line": 18
  }],
  "prId": 10723
}]