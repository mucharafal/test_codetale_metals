[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Can `maxLines` just be an optional argument rather than declare two methods? this is an internal method so its signature is OK to change.",
    "commit": "a795db225dbdf71efd3cceca906244644e70c218",
    "createdAt": "2017-07-21T09:10:43Z",
    "diffHunk": "@@ -28,14 +28,22 @@ import java.util.regex.Matcher\n object CodeFormatter {\n   val commentHolder = \"\"\"\\/\\*(.+?)\\*\\/\"\"\".r\n \n-  def format(code: CodeAndComment): String = {\n+  def format(code: CodeAndComment): String = format(code, -1)\n+\n+  def format(code: CodeAndComment, maxLines: Int): String = {"
  }, {
    "author": {
      "login": "pjfanning"
    },
    "body": "@srowen I can make that change. Is there any need to scaladoc the maxLines param? Or is the function definition easy enough to follow?\r\n\r\n```\r\ndef format(code: CodeAndComment, maxLines: Int = -1): String\r\n```",
    "commit": "a795db225dbdf71efd3cceca906244644e70c218",
    "createdAt": "2017-07-21T09:20:20Z",
    "diffHunk": "@@ -28,14 +28,22 @@ import java.util.regex.Matcher\n object CodeFormatter {\n   val commentHolder = \"\"\"\\/\\*(.+?)\\*\\/\"\"\".r\n \n-  def format(code: CodeAndComment): String = {\n+  def format(code: CodeAndComment): String = format(code, -1)\n+\n+  def format(code: CodeAndComment, maxLines: Int): String = {"
  }],
  "prId": 18658
}]