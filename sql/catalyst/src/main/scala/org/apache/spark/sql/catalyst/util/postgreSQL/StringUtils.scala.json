[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "nit. `.map (` -> `.map(`?",
    "commit": "75aeda757b10b8601cb386a53a87d888fc6556e1",
    "createdAt": "2019-09-25T15:33:17Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util.postgreSQL\n+\n+import org.apache.spark.unsafe.types.UTF8String\n+\n+object StringUtils {\n+  // \"true\", \"yes\", \"1\", \"false\", \"no\", \"0\", and unique prefixes of these strings are accepted.\n+  private[this] val trueStrings =\n+    Set(\"true\", \"tru\", \"tr\", \"t\", \"yes\", \"ye\", \"y\", \"on\", \"1\").map (UTF8String.fromString)"
  }],
  "prId": 25697
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "nit: Since we already have the dir named `pgSQL` in `sql/core/src/test/resources/sql-tests/inputs/pgSQL`, `postgreSQL` -> `pgSQL`? Both names is ok, but I like a consistent name.",
    "commit": "75aeda757b10b8601cb386a53a87d888fc6556e1",
    "createdAt": "2019-09-26T04:33:42Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*",
    "line": 1
  }, {
    "author": {
      "login": "gengliangwang"
    },
    "body": "How about a follow-up to change `pgSQL` to `postgreSQL`. I prefer the official full name.",
    "commit": "75aeda757b10b8601cb386a53a87d888fc6556e1",
    "createdAt": "2019-09-26T04:37:24Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*",
    "line": 1
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "Yea, ok to me.",
    "commit": "75aeda757b10b8601cb386a53a87d888fc6556e1",
    "createdAt": "2019-09-26T04:41:18Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*",
    "line": 1
  }],
  "prId": 25697
}, {
  "comments": [{
    "author": {
      "login": "MaxGekk"
    },
    "body": "The `isTrueString()` and `isFalseString()` function are always used together, and `trim().toLowerCase()` is performed twice. Would it be possible to execute the code only once?",
    "commit": "75aeda757b10b8601cb386a53a87d888fc6556e1",
    "createdAt": "2019-09-26T06:43:02Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util.postgreSQL\n+\n+import org.apache.spark.unsafe.types.UTF8String\n+\n+object StringUtils {\n+  // \"true\", \"yes\", \"1\", \"false\", \"no\", \"0\", and unique prefixes of these strings are accepted.\n+  private[this] val trueStrings =\n+    Set(\"true\", \"tru\", \"tr\", \"t\", \"yes\", \"ye\", \"y\", \"on\", \"1\").map(UTF8String.fromString)\n+\n+  private[this] val falseStrings =\n+    Set(\"false\", \"fals\", \"fal\", \"fa\", \"f\", \"no\", \"n\", \"off\", \"of\", \"0\").map(UTF8String.fromString)\n+\n+  def isTrueString(s: UTF8String): Boolean = trueStrings.contains(s.trim().toLowerCase())"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "This is a good point. Maybe we should ask the caller side to do trim and lower-case.",
    "commit": "75aeda757b10b8601cb386a53a87d888fc6556e1",
    "createdAt": "2019-09-26T07:16:16Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util.postgreSQL\n+\n+import org.apache.spark.unsafe.types.UTF8String\n+\n+object StringUtils {\n+  // \"true\", \"yes\", \"1\", \"false\", \"no\", \"0\", and unique prefixes of these strings are accepted.\n+  private[this] val trueStrings =\n+    Set(\"true\", \"tru\", \"tr\", \"t\", \"yes\", \"ye\", \"y\", \"on\", \"1\").map(UTF8String.fromString)\n+\n+  private[this] val falseStrings =\n+    Set(\"false\", \"fals\", \"fal\", \"fa\", \"f\", \"no\", \"n\", \"off\", \"of\", \"0\").map(UTF8String.fromString)\n+\n+  def isTrueString(s: UTF8String): Boolean = trueStrings.contains(s.trim().toLowerCase())"
  }],
  "prId": 25697
}]