[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Nit: \r\n```Scala\r\nval planAnnotation = Option(plan).map(p => s\";\\n$p\").getOrElse(\"\")\r\n```",
    "commit": "c8aebe7a4e3d6dbeaad7c449c94e15c745526cf0",
    "createdAt": "2017-03-30T22:08:12Z",
    "diffHunk": "@@ -43,7 +43,7 @@ class AnalysisException protected[sql] (\n   }\n \n   override def getMessage: String = {\n-    val planAnnotation = plan.map(p => s\";\\n$p\").getOrElse(\"\")\n+    val planAnnotation = if (plan == null) \"\" else plan.map(p => s\";\\n$p\").getOrElse(\"\")"
  }, {
    "author": {
      "login": "kunalkhamar"
    },
    "body": "Changed.",
    "commit": "c8aebe7a4e3d6dbeaad7c449c94e15c745526cf0",
    "createdAt": "2017-03-30T22:56:34Z",
    "diffHunk": "@@ -43,7 +43,7 @@ class AnalysisException protected[sql] (\n   }\n \n   override def getMessage: String = {\n-    val planAnnotation = plan.map(p => s\";\\n$p\").getOrElse(\"\")\n+    val planAnnotation = if (plan == null) \"\" else plan.map(p => s\";\\n$p\").getOrElse(\"\")"
  }],
  "prId": 17486
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Sorry, my fault. We need another `flatten`.\r\n```Scala\r\n    val planAnnotation = Option(plan).flatten.map(p => s\";\\n$p\").getOrElse(\"\")\r\n```",
    "commit": "c8aebe7a4e3d6dbeaad7c449c94e15c745526cf0",
    "createdAt": "2017-03-31T02:56:13Z",
    "diffHunk": "@@ -43,7 +43,7 @@ class AnalysisException protected[sql] (\n   }\n \n   override def getMessage: String = {\n-    val planAnnotation = plan.map(p => s\";\\n$p\").getOrElse(\"\")\n+    val planAnnotation = Option(plan).map(p => s\";\\n$p\").getOrElse(\"\")"
  }, {
    "author": {
      "login": "kunalkhamar"
    },
    "body": "Right, updated.",
    "commit": "c8aebe7a4e3d6dbeaad7c449c94e15c745526cf0",
    "createdAt": "2017-03-31T03:17:00Z",
    "diffHunk": "@@ -43,7 +43,7 @@ class AnalysisException protected[sql] (\n   }\n \n   override def getMessage: String = {\n-    val planAnnotation = plan.map(p => s\";\\n$p\").getOrElse(\"\")\n+    val planAnnotation = Option(plan).map(p => s\";\\n$p\").getOrElse(\"\")"
  }],
  "prId": 17486
}]