[{
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "In `WeekOfYear`, we set `Calendar.MONDAY` as the first day of a week. Here seems we assume it's `Calendar.SUNDAY`. Is there any conflict we will encounter?",
    "commit": "69d42278cf6eeb13415b9627cdb7019c333547fa",
    "createdAt": "2017-05-29T03:56:03Z",
    "diffHunk": "@@ -402,6 +402,44 @@ case class DayOfMonth(child: Expression) extends UnaryExpression with ImplicitCa\n   }\n }\n \n+// scalastyle:off line.size.limit\n+@ExpressionDescription(\n+  usage = \"_FUNC_(date) - Returns the weekday index for date/timestamp (1 = Sunday, 2 = Monday, ..., 7 = Saturday).\",\n+  extended = \"\"\"\n+    Examples:\n+      > SELECT _FUNC_('2009-07-30');\n+       5\n+  \"\"\")\n+// scalastyle:on line.size.limit\n+case class DayOfWeek(child: Expression) extends UnaryExpression with ImplicitCastInputTypes {\n+\n+  override def inputTypes: Seq[AbstractDataType] = Seq(DateType)\n+\n+  override def dataType: DataType = IntegerType\n+\n+  @transient private lazy val c = {\n+    Calendar.getInstance(DateTimeUtils.getTimeZone(\"UTC\"))\n+  }\n+\n+  override protected def nullSafeEval(date: Any): Any = {\n+    c.setTimeInMillis(date.asInstanceOf[Int] * 1000L * 3600L * 24L)\n+    c.get(Calendar.DAY_OF_WEEK)",
    "line": 23
  }, {
    "author": {
      "login": "wangyum"
    },
    "body": "Keep pace with [Hive's DayOfWeek\r\n](https://github.com/apache/hive/blob/59539885725a96cca4b3f0759a5b26e0d8198dc8/ql/src/java/org/apache/hadoop/hive/ql/udf/UDFDayOfWeek.java#L55).",
    "commit": "69d42278cf6eeb13415b9627cdb7019c333547fa",
    "createdAt": "2017-05-30T01:58:21Z",
    "diffHunk": "@@ -402,6 +402,44 @@ case class DayOfMonth(child: Expression) extends UnaryExpression with ImplicitCa\n   }\n }\n \n+// scalastyle:off line.size.limit\n+@ExpressionDescription(\n+  usage = \"_FUNC_(date) - Returns the weekday index for date/timestamp (1 = Sunday, 2 = Monday, ..., 7 = Saturday).\",\n+  extended = \"\"\"\n+    Examples:\n+      > SELECT _FUNC_('2009-07-30');\n+       5\n+  \"\"\")\n+// scalastyle:on line.size.limit\n+case class DayOfWeek(child: Expression) extends UnaryExpression with ImplicitCastInputTypes {\n+\n+  override def inputTypes: Seq[AbstractDataType] = Seq(DateType)\n+\n+  override def dataType: DataType = IntegerType\n+\n+  @transient private lazy val c = {\n+    Calendar.getInstance(DateTimeUtils.getTimeZone(\"UTC\"))\n+  }\n+\n+  override protected def nullSafeEval(date: Any): Any = {\n+    c.setTimeInMillis(date.asInstanceOf[Int] * 1000L * 3600L * 24L)\n+    c.get(Calendar.DAY_OF_WEEK)",
    "line": 23
  }],
  "prId": 18134
}, {
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "As Sunday, Saturday are included, it is not only weekday. `Returns the day of the week ...`.",
    "commit": "69d42278cf6eeb13415b9627cdb7019c333547fa",
    "createdAt": "2017-05-30T02:23:44Z",
    "diffHunk": "@@ -404,6 +404,44 @@ case class DayOfMonth(child: Expression) extends UnaryExpression with ImplicitCa\n \n // scalastyle:off line.size.limit\n @ExpressionDescription(\n+  usage = \"_FUNC_(date) - Returns the weekday index for date/timestamp (1 = Sunday, 2 = Monday, ..., 7 = Saturday).\","
  }],
  "prId": 18134
}]