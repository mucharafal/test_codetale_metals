[{
  "comments": [{
    "author": {
      "login": "wzhfy"
    },
    "body": "check `ndv == 0` at the beginning and return `Some(0.0`? then we don't have to make all these changes",
    "commit": "8369cbcd5eab3686c78365e1b1f906a3e8136731",
    "createdAt": "2018-04-13T13:08:30Z",
    "diffHunk": "@@ -395,27 +395,28 @@ case class FilterEstimation(plan: Filter) extends Logging {\n     // use [min, max] to filter the original hSet\n     dataType match {\n       case _: NumericType | BooleanType | DateType | TimestampType =>\n-        val statsInterval =\n-          ValueInterval(colStat.min, colStat.max, dataType).asInstanceOf[NumericValueInterval]\n-        val validQuerySet = hSet.filter { v =>\n-          v != null && statsInterval.contains(Literal(v, dataType))\n-        }\n+        if (colStat.min.isDefined && colStat.max.isDefined) {"
  }, {
    "author": {
      "login": "mshtelma"
    },
    "body": "Yes, I have removes the bigger if, and implemented all three checks with one small if",
    "commit": "8369cbcd5eab3686c78365e1b1f906a3e8136731",
    "createdAt": "2018-04-13T15:08:56Z",
    "diffHunk": "@@ -395,27 +395,28 @@ case class FilterEstimation(plan: Filter) extends Logging {\n     // use [min, max] to filter the original hSet\n     dataType match {\n       case _: NumericType | BooleanType | DateType | TimestampType =>\n-        val statsInterval =\n-          ValueInterval(colStat.min, colStat.max, dataType).asInstanceOf[NumericValueInterval]\n-        val validQuerySet = hSet.filter { v =>\n-          v != null && statsInterval.contains(Literal(v, dataType))\n-        }\n+        if (colStat.min.isDefined && colStat.max.isDefined) {"
  }],
  "prId": 21052
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "why `colStat.min.isEmpty || colStat.max.isEmpty` means empty output? string type always has no max/min",
    "commit": "8369cbcd5eab3686c78365e1b1f906a3e8136731",
    "createdAt": "2018-04-24T10:48:48Z",
    "diffHunk": "@@ -392,6 +392,10 @@ case class FilterEstimation(plan: Filter) extends Logging {\n     val dataType = attr.dataType\n     var newNdv = ndv\n \n+    if (ndv.toDouble == 0 || colStat.min.isEmpty || colStat.max.isEmpty)  {",
    "line": 4
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "Yeah, we need to correct it in the next PR",
    "commit": "8369cbcd5eab3686c78365e1b1f906a3e8136731",
    "createdAt": "2018-04-24T17:59:19Z",
    "diffHunk": "@@ -392,6 +392,10 @@ case class FilterEstimation(plan: Filter) extends Logging {\n     val dataType = attr.dataType\n     var newNdv = ndv\n \n+    if (ndv.toDouble == 0 || colStat.min.isEmpty || colStat.max.isEmpty)  {",
    "line": 4
  }],
  "prId": 21052
}]