[{
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "nit: `RuleExecutionMetering`? Or, the current name intends to collect metrics from other than `RuleExecutor`?",
    "commit": "8716c6eccf3d606a2c5f6275b8b3a9b343b01393",
    "createdAt": "2018-01-21T14:43:33Z",
    "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.rules\n+\n+import com.google.common.util.concurrent.AtomicLongMap\n+import scala.collection.JavaConverters._\n+\n+case class QueryExecutionMetering() {"
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "The next step is to do it per query, when UsageLog is ready",
    "commit": "8716c6eccf3d606a2c5f6275b8b3a9b343b01393",
    "createdAt": "2018-01-21T15:00:48Z",
    "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.rules\n+\n+import com.google.common.util.concurrent.AtomicLongMap\n+import scala.collection.JavaConverters._\n+\n+case class QueryExecutionMetering() {"
  }],
  "prId": 20342
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "super nit: wrong order",
    "commit": "8716c6eccf3d606a2c5f6275b8b3a9b343b01393",
    "createdAt": "2018-01-21T15:34:58Z",
    "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.rules\n+\n+import com.google.common.util.concurrent.AtomicLongMap\n+import scala.collection.JavaConverters._"
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "The order?",
    "commit": "8716c6eccf3d606a2c5f6275b8b3a9b343b01393",
    "createdAt": "2018-01-21T15:37:30Z",
    "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.rules\n+\n+import com.google.common.util.concurrent.AtomicLongMap\n+import scala.collection.JavaConverters._"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "my bad? I thought the correct one was...\r\n```\r\nimport scala.collection.JavaConverters._\r\n\r\nimport com.google.common.util.concurrent.AtomicLongMap\r\n```",
    "commit": "8716c6eccf3d606a2c5f6275b8b3a9b343b01393",
    "createdAt": "2018-01-21T15:38:58Z",
    "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.rules\n+\n+import com.google.common.util.concurrent.AtomicLongMap\n+import scala.collection.JavaConverters._"
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "Yeah. https://github.com/databricks/scala-style-guide#imports",
    "commit": "8716c6eccf3d606a2c5f6275b8b3a9b343b01393",
    "createdAt": "2018-01-21T16:24:39Z",
    "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.rules\n+\n+import com.google.common.util.concurrent.AtomicLongMap\n+import scala.collection.JavaConverters._"
  }],
  "prId": 20342
}]