[{
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "Can we have a better name for this?",
    "commit": "dd4f2d8829335b9d9e71fead6d0d056d48a9d7e6",
    "createdAt": "2017-02-01T01:04:09Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.planning\n+\n+import org.apache.spark.sql.catalyst.expressions.{Expression, GetStructField}\n+import org.apache.spark.sql.types.StructField\n+\n+/**\n+ * A Scala extractor that extracts the child expression and struct field from a [[GetStructField]].\n+ * This is in contrast to the [[GetStructField]] case class extractor which returns the field\n+ * ordinal instead of the field itself.\n+ */\n+private[planning] object GetStructField2 {"
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "Or combine it with `GetStructField` case class extractor?",
    "commit": "dd4f2d8829335b9d9e71fead6d0d056d48a9d7e6",
    "createdAt": "2017-02-01T01:06:00Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.planning\n+\n+import org.apache.spark.sql.catalyst.expressions.{Expression, GetStructField}\n+import org.apache.spark.sql.types.StructField\n+\n+/**\n+ * A Scala extractor that extracts the child expression and struct field from a [[GetStructField]].\n+ * This is in contrast to the [[GetStructField]] case class extractor which returns the field\n+ * ordinal instead of the field itself.\n+ */\n+private[planning] object GetStructField2 {"
  }, {
    "author": {
      "login": "mallman"
    },
    "body": "What do you mean by combining it with the existing case class extractor?",
    "commit": "dd4f2d8829335b9d9e71fead6d0d056d48a9d7e6",
    "createdAt": "2017-02-01T02:32:36Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.planning\n+\n+import org.apache.spark.sql.catalyst.expressions.{Expression, GetStructField}\n+import org.apache.spark.sql.types.StructField\n+\n+/**\n+ * A Scala extractor that extracts the child expression and struct field from a [[GetStructField]].\n+ * This is in contrast to the [[GetStructField]] case class extractor which returns the field\n+ * ordinal instead of the field itself.\n+ */\n+private[planning] object GetStructField2 {"
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "oh, nvm, I thought `GetStructField` is another Scala extractor. Actually it is a case class.",
    "commit": "dd4f2d8829335b9d9e71fead6d0d056d48a9d7e6",
    "createdAt": "2017-02-01T06:15:40Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.planning\n+\n+import org.apache.spark.sql.catalyst.expressions.{Expression, GetStructField}\n+import org.apache.spark.sql.types.StructField\n+\n+/**\n+ * A Scala extractor that extracts the child expression and struct field from a [[GetStructField]].\n+ * This is in contrast to the [[GetStructField]] case class extractor which returns the field\n+ * ordinal instead of the field itself.\n+ */\n+private[planning] object GetStructField2 {"
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "But we can have a better name.",
    "commit": "dd4f2d8829335b9d9e71fead6d0d056d48a9d7e6",
    "createdAt": "2017-02-01T06:16:24Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.planning\n+\n+import org.apache.spark.sql.catalyst.expressions.{Expression, GetStructField}\n+import org.apache.spark.sql.types.StructField\n+\n+/**\n+ * A Scala extractor that extracts the child expression and struct field from a [[GetStructField]].\n+ * This is in contrast to the [[GetStructField]] case class extractor which returns the field\n+ * ordinal instead of the field itself.\n+ */\n+private[planning] object GetStructField2 {"
  }, {
    "author": {
      "login": "mallman"
    },
    "body": "Agreed. I think the best name in this context is `GetStructField`, but that's already taken. I'll keep thinking about a good alternative.",
    "commit": "dd4f2d8829335b9d9e71fead6d0d056d48a9d7e6",
    "createdAt": "2017-02-01T15:39:29Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.planning\n+\n+import org.apache.spark.sql.catalyst.expressions.{Expression, GetStructField}\n+import org.apache.spark.sql.types.StructField\n+\n+/**\n+ * A Scala extractor that extracts the child expression and struct field from a [[GetStructField]].\n+ * This is in contrast to the [[GetStructField]] case class extractor which returns the field\n+ * ordinal instead of the field itself.\n+ */\n+private[planning] object GetStructField2 {"
  }, {
    "author": {
      "login": "mallman"
    },
    "body": "How about `GetStructFieldObject`? Or `GetStructFieldRef`?",
    "commit": "dd4f2d8829335b9d9e71fead6d0d056d48a9d7e6",
    "createdAt": "2017-02-09T04:36:14Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.planning\n+\n+import org.apache.spark.sql.catalyst.expressions.{Expression, GetStructField}\n+import org.apache.spark.sql.types.StructField\n+\n+/**\n+ * A Scala extractor that extracts the child expression and struct field from a [[GetStructField]].\n+ * This is in contrast to the [[GetStructField]] case class extractor which returns the field\n+ * ordinal instead of the field itself.\n+ */\n+private[planning] object GetStructField2 {"
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "`GetStructFieldObject` or `GetStructFieldExtractor`?",
    "commit": "dd4f2d8829335b9d9e71fead6d0d056d48a9d7e6",
    "createdAt": "2017-02-09T05:22:55Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.planning\n+\n+import org.apache.spark.sql.catalyst.expressions.{Expression, GetStructField}\n+import org.apache.spark.sql.types.StructField\n+\n+/**\n+ * A Scala extractor that extracts the child expression and struct field from a [[GetStructField]].\n+ * This is in contrast to the [[GetStructField]] case class extractor which returns the field\n+ * ordinal instead of the field itself.\n+ */\n+private[planning] object GetStructField2 {"
  }, {
    "author": {
      "login": "mallman"
    },
    "body": "Let's go with `GetStructFieldObject`.",
    "commit": "dd4f2d8829335b9d9e71fead6d0d056d48a9d7e6",
    "createdAt": "2017-02-09T17:21:39Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.planning\n+\n+import org.apache.spark.sql.catalyst.expressions.{Expression, GetStructField}\n+import org.apache.spark.sql.types.StructField\n+\n+/**\n+ * A Scala extractor that extracts the child expression and struct field from a [[GetStructField]].\n+ * This is in contrast to the [[GetStructField]] case class extractor which returns the field\n+ * ordinal instead of the field itself.\n+ */\n+private[planning] object GetStructField2 {"
  }],
  "prId": 16578
}]