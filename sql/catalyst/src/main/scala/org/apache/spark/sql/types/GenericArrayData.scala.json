[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "the generic `get` and `array` method is useful in interpreted mode, but it's a lot painful to handle `Any` between scala and java, so I put this interface in scala.\n",
    "commit": "d0408a1d9a10ff82e7976c5145320c254c135bea",
    "createdAt": "2015-07-28T07:16:06Z",
    "diffHunk": "@@ -0,0 +1,127 @@\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.sql.catalyst.expressions.SpecializedGetters\n+import org.apache.spark.unsafe.types.{UTF8String, Interval}\n+\n+abstract class ArrayData extends SpecializedGetters {\n+  def array(): Array[Any]\n+\n+  def get(ordinal: Int): Any"
  }],
  "prId": 7724
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "can you move this into its own file\n",
    "commit": "d0408a1d9a10ff82e7976c5145320c254c135bea",
    "createdAt": "2015-07-28T22:17:46Z",
    "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.sql.catalyst.expressions.SpecializedGetters\n+import org.apache.spark.unsafe.types.{UTF8String, Interval}\n+\n+abstract class ArrayData extends SpecializedGetters with Serializable {"
  }],
  "prId": 7724
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "it seems to me toArray should take a data type? and we should have specialized version for this.\n",
    "commit": "d0408a1d9a10ff82e7976c5145320c254c135bea",
    "createdAt": "2015-07-28T22:27:02Z",
    "diffHunk": "@@ -0,0 +1,161 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.sql.catalyst.expressions.SpecializedGetters\n+import org.apache.spark.unsafe.types.{UTF8String, Interval}\n+\n+abstract class ArrayData extends SpecializedGetters with Serializable {\n+  //todo: remove this after we handle all types.(map type need special getter)\n+  def get(ordinal: Int): Any\n+\n+  def numElements(): Int\n+\n+  // todo: need a more efficient way to iterate array type.\n+  def toArray(): Array[Any] = {"
  }],
  "prId": 7724
}]