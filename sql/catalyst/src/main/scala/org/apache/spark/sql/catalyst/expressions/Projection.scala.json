[{
  "comments": [{
    "author": {
      "login": "liancheng"
    },
    "body": "Maybe this: `row2.mkString(\"[\", \",\", \"]\")`?\n",
    "commit": "e33abd848ee44cde5ae4441248ee9d053c7d4978",
    "createdAt": "2015-01-20T08:56:59Z",
    "diffHunk": "@@ -154,8 +154,16 @@ class JoinedRow extends Row {\n   }\n \n   override def toString() = {\n-    val row = (if (row1 != null) row1 else Seq[Any]()) ++ (if (row2 != null) row2 else Seq[Any]())\n-    s\"[${row.mkString(\",\")}]\"\n+    // Make sure toString never throws NullPointerException.\n+    if ((row1 eq null) && (row2 eq null)) {\n+      \"[ empty row ]\"\n+    } else if (row1 eq null) {\n+      \"[\" + row2.mkString(\",\") + \"]\""
  }],
  "prId": 4115
}, {
  "comments": [{
    "author": {
      "login": "liancheng"
    },
    "body": "This can be much more costly then `iterator`. However, I wonder whether we use it anywhere.\n",
    "commit": "e33abd848ee44cde5ae4441248ee9d053c7d4978",
    "createdAt": "2015-01-20T08:59:53Z",
    "diffHunk": "@@ -197,45 +205,45 @@ class JoinedRow2 extends Row {\n     this\n   }\n \n-  def iterator = row1.iterator ++ row2.iterator\n+  override def toSeq: Seq[Any] = row1.toSeq ++ row2.toSeq",
    "line": 5
  }],
  "prId": 4115
}]