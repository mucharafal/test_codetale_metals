[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "@AngersZhuuuu . We should not change this line because we don't have SPARK-27117 in `branch-2.4.`\r\n\r\nCould you confirm this, @cloud-fan ?",
    "commit": "8dc40474121e1de8c7312ff8166ef56dd067cdf4",
    "createdAt": "2019-10-24T17:20:17Z",
    "diffHunk": "@@ -125,13 +125,13 @@ abstract class AbstractSqlParser extends ParserInterface with Logging {\n /**\n  * Concrete SQL parser for Catalyst-only SQL statements.\n  */\n-class CatalystSqlParser(conf: SQLConf) extends AbstractSqlParser {\n+class CatalystSqlParser(conf: SQLConf) extends AbstractSqlParser(conf) {\n   val astBuilder = new AstBuilder(conf)\n }\n \n /** For test-only. */\n-object CatalystSqlParser extends AbstractSqlParser {\n-  val astBuilder = new AstBuilder(new SQLConf())\n+object CatalystSqlParser extends AbstractSqlParser(SQLConf.get) {\n+  val astBuilder = new AstBuilder(SQLConf.get)",
    "line": 39
  }, {
    "author": {
      "login": "AngersZhuuuu"
    },
    "body": "> @AngersZhuuuu . We should not change this line because we don't have SPARK-27117 in `branch-2.4.`\r\n> \r\n> Could you confirm this, @cloud-fan ?\r\n\r\nSeems he made this change with the same reason as me. I think it's ok. Am I right? @cloud-fan ",
    "commit": "8dc40474121e1de8c7312ff8166ef56dd067cdf4",
    "createdAt": "2019-10-25T01:34:16Z",
    "diffHunk": "@@ -125,13 +125,13 @@ abstract class AbstractSqlParser extends ParserInterface with Logging {\n /**\n  * Concrete SQL parser for Catalyst-only SQL statements.\n  */\n-class CatalystSqlParser(conf: SQLConf) extends AbstractSqlParser {\n+class CatalystSqlParser(conf: SQLConf) extends AbstractSqlParser(conf) {\n   val astBuilder = new AstBuilder(conf)\n }\n \n /** For test-only. */\n-object CatalystSqlParser extends AbstractSqlParser {\n-  val astBuilder = new AstBuilder(new SQLConf())\n+object CatalystSqlParser extends AbstractSqlParser(SQLConf.get) {\n+  val astBuilder = new AstBuilder(SQLConf.get)",
    "line": 39
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "`the same reason`? SPARK-27117 is not aiming `thread safe`.\r\n- https://issues.apache.org/jira/browse/SPARK-27117",
    "commit": "8dc40474121e1de8c7312ff8166ef56dd067cdf4",
    "createdAt": "2019-10-25T02:11:53Z",
    "diffHunk": "@@ -125,13 +125,13 @@ abstract class AbstractSqlParser extends ParserInterface with Logging {\n /**\n  * Concrete SQL parser for Catalyst-only SQL statements.\n  */\n-class CatalystSqlParser(conf: SQLConf) extends AbstractSqlParser {\n+class CatalystSqlParser(conf: SQLConf) extends AbstractSqlParser(conf) {\n   val astBuilder = new AstBuilder(conf)\n }\n \n /** For test-only. */\n-object CatalystSqlParser extends AbstractSqlParser {\n-  val astBuilder = new AstBuilder(new SQLConf())\n+object CatalystSqlParser extends AbstractSqlParser(SQLConf.get) {\n+  val astBuilder = new AstBuilder(SQLConf.get)",
    "line": 39
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Oh, do you mean 'it's to pass the UT`?",
    "commit": "8dc40474121e1de8c7312ff8166ef56dd067cdf4",
    "createdAt": "2019-10-25T02:13:37Z",
    "diffHunk": "@@ -125,13 +125,13 @@ abstract class AbstractSqlParser extends ParserInterface with Logging {\n /**\n  * Concrete SQL parser for Catalyst-only SQL statements.\n  */\n-class CatalystSqlParser(conf: SQLConf) extends AbstractSqlParser {\n+class CatalystSqlParser(conf: SQLConf) extends AbstractSqlParser(conf) {\n   val astBuilder = new AstBuilder(conf)\n }\n \n /** For test-only. */\n-object CatalystSqlParser extends AbstractSqlParser {\n-  val astBuilder = new AstBuilder(new SQLConf())\n+object CatalystSqlParser extends AbstractSqlParser(SQLConf.get) {\n+  val astBuilder = new AstBuilder(SQLConf.get)",
    "line": 39
  }, {
    "author": {
      "login": "AngersZhuuuu"
    },
    "body": "> Oh, do you mean 'it's to pass the UT`?\r\n\r\nYes, since `withSQLConf` change `SQLConf.get`. \r\nWhen he add this pr, we haven't  add ansi in `ParserDriver`,but use it in in `ASTBuilder`.  ",
    "commit": "8dc40474121e1de8c7312ff8166ef56dd067cdf4",
    "createdAt": "2019-10-25T02:24:24Z",
    "diffHunk": "@@ -125,13 +125,13 @@ abstract class AbstractSqlParser extends ParserInterface with Logging {\n /**\n  * Concrete SQL parser for Catalyst-only SQL statements.\n  */\n-class CatalystSqlParser(conf: SQLConf) extends AbstractSqlParser {\n+class CatalystSqlParser(conf: SQLConf) extends AbstractSqlParser(conf) {\n   val astBuilder = new AstBuilder(conf)\n }\n \n /** For test-only. */\n-object CatalystSqlParser extends AbstractSqlParser {\n-  val astBuilder = new AstBuilder(new SQLConf())\n+object CatalystSqlParser extends AbstractSqlParser(SQLConf.get) {\n+  val astBuilder = new AstBuilder(SQLConf.get)",
    "line": 39
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Got it. Thanks. I'm reviewing again.",
    "commit": "8dc40474121e1de8c7312ff8166ef56dd067cdf4",
    "createdAt": "2019-10-25T02:24:57Z",
    "diffHunk": "@@ -125,13 +125,13 @@ abstract class AbstractSqlParser extends ParserInterface with Logging {\n /**\n  * Concrete SQL parser for Catalyst-only SQL statements.\n  */\n-class CatalystSqlParser(conf: SQLConf) extends AbstractSqlParser {\n+class CatalystSqlParser(conf: SQLConf) extends AbstractSqlParser(conf) {\n   val astBuilder = new AstBuilder(conf)\n }\n \n /** For test-only. */\n-object CatalystSqlParser extends AbstractSqlParser {\n-  val astBuilder = new AstBuilder(new SQLConf())\n+object CatalystSqlParser extends AbstractSqlParser(SQLConf.get) {\n+  val astBuilder = new AstBuilder(SQLConf.get)",
    "line": 39
  }, {
    "author": {
      "login": "AngersZhuuuu"
    },
    "body": "> Got it. Thanks. I'm reviewing again.\r\n\r\nSince test method changed, it's really confusing. hhh",
    "commit": "8dc40474121e1de8c7312ff8166ef56dd067cdf4",
    "createdAt": "2019-10-25T02:29:08Z",
    "diffHunk": "@@ -125,13 +125,13 @@ abstract class AbstractSqlParser extends ParserInterface with Logging {\n /**\n  * Concrete SQL parser for Catalyst-only SQL statements.\n  */\n-class CatalystSqlParser(conf: SQLConf) extends AbstractSqlParser {\n+class CatalystSqlParser(conf: SQLConf) extends AbstractSqlParser(conf) {\n   val astBuilder = new AstBuilder(conf)\n }\n \n /** For test-only. */\n-object CatalystSqlParser extends AbstractSqlParser {\n-  val astBuilder = new AstBuilder(new SQLConf())\n+object CatalystSqlParser extends AbstractSqlParser(SQLConf.get) {\n+  val astBuilder = new AstBuilder(SQLConf.get)",
    "line": 39
  }],
  "prId": 26240
}]