[{
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "Should these methods have the `override` modifier?\n",
    "commit": "f7b147f89c02229f1778e8a74bd463dcf72e82ac",
    "createdAt": "2015-07-15T02:38:58Z",
    "diffHunk": "@@ -0,0 +1,103 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions.codegen\n+\n+import org.apache.spark.sql.catalyst.expressions._\n+import org.apache.spark.sql.types.{BinaryType, DataType, StringType}\n+\n+/**\n+ * Generates byte code that convert a InternalRow to an [[UnsafeRow]].\n+ */\n+object GenerateToUnsafeProjection extends CodeGenerator[Seq[DataType], Projection] {\n+\n+  protected def canonicalize(in: Seq[DataType]): Seq[DataType] = in"
  }],
  "prId": 7402
}]