[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "shall we treat `filter` as child as well? e.g.\r\n```\r\ncase class UnresolvedFunction(... inputs: Seq[Expression], ... filter: Option[Expression] = None) {\r\n  def children = inputs ++ filter\r\n}\r\n```",
    "commit": "43b15aed468b19efb32c33d43061d7f562e42339",
    "createdAt": "2019-11-19T14:18:22Z",
    "diffHunk": "@@ -244,7 +244,8 @@ case class UnresolvedGenerator(name: FunctionIdentifier, children: Seq[Expressio\n case class UnresolvedFunction(\n     name: FunctionIdentifier,\n     children: Seq[Expression],\n-    isDistinct: Boolean)\n+    isDistinct: Boolean,\n+    filter: Option[Expression] = None)"
  }, {
    "author": {
      "login": "beliefer"
    },
    "body": "Yes, we can do this.",
    "commit": "43b15aed468b19efb32c33d43061d7f562e42339",
    "createdAt": "2019-11-20T02:16:05Z",
    "diffHunk": "@@ -244,7 +244,8 @@ case class UnresolvedGenerator(name: FunctionIdentifier, children: Seq[Expressio\n case class UnresolvedFunction(\n     name: FunctionIdentifier,\n     children: Seq[Expression],\n-    isDistinct: Boolean)\n+    isDistinct: Boolean,\n+    filter: Option[Expression] = None)"
  }],
  "prId": 26420
}, {
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "nit: `input` -> `arguments`",
    "commit": "43b15aed468b19efb32c33d43061d7f562e42339",
    "createdAt": "2019-11-23T01:11:49Z",
    "diffHunk": "@@ -243,10 +243,16 @@ case class UnresolvedGenerator(name: FunctionIdentifier, children: Seq[Expressio\n \n case class UnresolvedFunction(\n     name: FunctionIdentifier,\n-    children: Seq[Expression],\n-    isDistinct: Boolean)\n+    inputs: Seq[Expression],"
  }, {
    "author": {
      "login": "beliefer"
    },
    "body": "OK",
    "commit": "43b15aed468b19efb32c33d43061d7f562e42339",
    "createdAt": "2019-11-23T09:02:38Z",
    "diffHunk": "@@ -243,10 +243,16 @@ case class UnresolvedGenerator(name: FunctionIdentifier, children: Seq[Expressio\n \n case class UnresolvedFunction(\n     name: FunctionIdentifier,\n-    children: Seq[Expression],\n-    isDistinct: Boolean)\n+    inputs: Seq[Expression],"
  }],
  "prId": 26420
}]