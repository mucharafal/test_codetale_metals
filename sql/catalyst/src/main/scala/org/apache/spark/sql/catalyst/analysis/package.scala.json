[{
  "comments": [{
    "author": {
      "login": "chenghao-intel"
    },
    "body": "`Resolver` probably a general name, can we use a more precise name for this?\n",
    "commit": "c21171ecd67835dab9441ed48e0f6b76bbbf52ad",
    "createdAt": "2014-09-15T08:49:07Z",
    "diffHunk": "@@ -22,4 +22,9 @@ package org.apache.spark.sql.catalyst\n  * Analysis consists of translating [[UnresolvedAttribute]]s and [[UnresolvedRelation]]s\n  * into fully typed objects using information in a schema [[Catalog]].\n  */\n-package object analysis\n+package object analysis {\n+  type Resolver = (String, String) => Boolean"
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "I think this will actually end up providing more general resolution functionality in the long term.  I've added some scala doc for clarity though.\n",
    "commit": "c21171ecd67835dab9441ed48e0f6b76bbbf52ad",
    "createdAt": "2014-09-16T18:25:39Z",
    "diffHunk": "@@ -22,4 +22,9 @@ package org.apache.spark.sql.catalyst\n  * Analysis consists of translating [[UnresolvedAttribute]]s and [[UnresolvedRelation]]s\n  * into fully typed objects using information in a schema [[Catalog]].\n  */\n-package object analysis\n+package object analysis {\n+  type Resolver = (String, String) => Boolean"
  }],
  "prId": 2382
}, {
  "comments": [{
    "author": {
      "login": "liancheng"
    },
    "body": "Maybe `a.equalIgnoreCase(b)`?\n",
    "commit": "c21171ecd67835dab9441ed48e0f6b76bbbf52ad",
    "createdAt": "2014-09-16T00:58:32Z",
    "diffHunk": "@@ -22,4 +22,9 @@ package org.apache.spark.sql.catalyst\n  * Analysis consists of translating [[UnresolvedAttribute]]s and [[UnresolvedRelation]]s\n  * into fully typed objects using information in a schema [[Catalog]].\n  */\n-package object analysis\n+package object analysis {\n+  type Resolver = (String, String) => Boolean\n+\n+  val caseInsensitiveResolution = (a: String, b: String) => a.toLowerCase == b.toLowerCase"
  }],
  "prId": 2382
}]