[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "I just realized UnresolvedException has a pretty weird definition.\n\nhttps://github.com/apache/spark/blob/4754e16f4746ebd882b2ce7f1efc6e4d4408922c/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/analysis/unresolved.scala#L31\n\n...\n",
    "commit": "fb271536a68cf3f7ff267953098ce305512c65d0",
    "createdAt": "2015-04-28T04:09:02Z",
    "diffHunk": "@@ -83,8 +83,8 @@ abstract class BinaryArithmetic extends BinaryExpression {\n \n   def dataType: DataType = {\n     if (!resolved) {\n-      throw new UnresolvedException(this,\n-        s\"datatype. Can not resolve due to differing types ${left.dataType}, ${right.dataType}\")\n+      throw new UnresolvedException(this, \"Unresolved datatype. Can not resolve due to \" +"
  }, {
    "author": {
      "login": "brkyvz"
    },
    "body": "whoa... reverted the messages.\n",
    "commit": "fb271536a68cf3f7ff267953098ce305512c65d0",
    "createdAt": "2015-04-28T04:19:59Z",
    "diffHunk": "@@ -83,8 +83,8 @@ abstract class BinaryArithmetic extends BinaryExpression {\n \n   def dataType: DataType = {\n     if (!resolved) {\n-      throw new UnresolvedException(this,\n-        s\"datatype. Can not resolve due to differing types ${left.dataType}, ${right.dataType}\")\n+      throw new UnresolvedException(this, \"Unresolved datatype. Can not resolve due to \" +"
  }],
  "prId": 5616
}]