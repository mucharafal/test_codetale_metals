[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "If a catalog doesn't implememt `SupportsNamespaces`, I think it's more reasonable to use empty namespace as the default.\r\n\r\nFor the builtin catalog, can we implement the `defaultNamespace` in `V2SessionCatalog`?",
    "commit": "84856190f5bf7f7865ce3428986cca61471c9845",
    "createdAt": "2019-09-12T07:53:32Z",
    "diffHunk": "@@ -77,40 +77,37 @@ class CatalogManager(conf: SQLConf, defaultSessionCatalog: TableCatalog) extends\n \n   private def getDefaultNamespace(c: CatalogPlugin) = c match {\n     case c: SupportsNamespaces => c.defaultNamespace()\n-    case _ => Array.empty[String]\n+    case _ => Array(\"default\") // The builtin catalog use \"default\" as the default database."
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "I see the problem now. When we set up an extension for the v2 session catalog, we drop the namespace support.\r\n\r\nWe should make `CatalogExtension` extends `SupportsNamespace` as well.",
    "commit": "84856190f5bf7f7865ce3428986cca61471c9845",
    "createdAt": "2019-09-12T08:02:26Z",
    "diffHunk": "@@ -77,40 +77,37 @@ class CatalogManager(conf: SQLConf, defaultSessionCatalog: TableCatalog) extends\n \n   private def getDefaultNamespace(c: CatalogPlugin) = c match {\n     case c: SupportsNamespaces => c.defaultNamespace()\n-    case _ => Array.empty[String]\n+    case _ => Array(\"default\") // The builtin catalog use \"default\" as the default database."
  }, {
    "author": {
      "login": "imback82"
    },
    "body": "Thanks @cloud-fan. I will handle this as you suggested.",
    "commit": "84856190f5bf7f7865ce3428986cca61471c9845",
    "createdAt": "2019-09-16T23:54:58Z",
    "diffHunk": "@@ -77,40 +77,37 @@ class CatalogManager(conf: SQLConf, defaultSessionCatalog: TableCatalog) extends\n \n   private def getDefaultNamespace(c: CatalogPlugin) = c match {\n     case c: SupportsNamespaces => c.defaultNamespace()\n-    case _ => Array.empty[String]\n+    case _ => Array(\"default\") // The builtin catalog use \"default\" as the default database."
  }, {
    "author": {
      "login": "imback82"
    },
    "body": "Now this will return `Array.empty[String]` if a catalog doesn't support namespaces.\r\n\r\nAlso, instead of `CatalogExtension` extending `SupportsNamespace`, I introduced `BaseSessionCatalog` which inherits both `TableCatalog` and `SupportsNamespace`, and `CatalogExtension` extends `BaseSessionCatalog`.\r\n\r\nThis is so that a v2 session catalog can extend `BaseSessionCatalog` instead of `CatalogExtension`, which requires overriding `setDelegateCatalog`.\r\n",
    "commit": "84856190f5bf7f7865ce3428986cca61471c9845",
    "createdAt": "2019-09-17T00:58:27Z",
    "diffHunk": "@@ -77,40 +77,37 @@ class CatalogManager(conf: SQLConf, defaultSessionCatalog: TableCatalog) extends\n \n   private def getDefaultNamespace(c: CatalogPlugin) = c match {\n     case c: SupportsNamespaces => c.defaultNamespace()\n-    case _ => Array.empty[String]\n+    case _ => Array(\"default\") // The builtin catalog use \"default\" as the default database."
  }],
  "prId": 25771
}]