[{
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "these can all be private\n",
    "commit": "603226830dc8aee52ca957c60f15cb164f10fb90",
    "createdAt": "2016-03-02T22:29:27Z",
    "diffHunk": "@@ -0,0 +1,134 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.parser\n+\n+import org.apache.spark.sql.catalyst.TableIdentifier\n+import org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\n+import org.apache.spark.sql.catalyst.trees.CurrentOrigin\n+import org.apache.spark.sql.types._\n+\n+object ParserSupport {\n+  protected val escapedIdentifier = \"`(.+)`\".r\n+  protected val doubleQuotedString = \"\\\"([^\\\"]+)\\\"\".r\n+  protected val singleQuotedString = \"'([^']+)'\".r",
    "line": 28
  }],
  "prId": 11048
}, {
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "this is more like `ParserUtils`\n",
    "commit": "603226830dc8aee52ca957c60f15cb164f10fb90",
    "createdAt": "2016-03-02T22:29:57Z",
    "diffHunk": "@@ -0,0 +1,134 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.parser\n+\n+import org.apache.spark.sql.catalyst.TableIdentifier\n+import org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\n+import org.apache.spark.sql.catalyst.trees.CurrentOrigin\n+import org.apache.spark.sql.types._\n+\n+object ParserSupport {",
    "line": 25
  }],
  "prId": 11048
}, {
  "comments": [{
    "author": {
      "login": "andrewor14"
    },
    "body": "can you move this to the top so it's not hidden among other methods?\n",
    "commit": "603226830dc8aee52ca957c60f15cb164f10fb90",
    "createdAt": "2016-03-02T22:34:24Z",
    "diffHunk": "@@ -0,0 +1,134 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.parser\n+\n+import org.apache.spark.sql.catalyst.TableIdentifier\n+import org.apache.spark.sql.catalyst.plans.logical.LogicalPlan\n+import org.apache.spark.sql.catalyst.trees.CurrentOrigin\n+import org.apache.spark.sql.types._\n+\n+object ParserSupport {\n+  protected val escapedIdentifier = \"`(.+)`\".r\n+  protected val doubleQuotedString = \"\\\"([^\\\"]+)\\\"\".r\n+  protected val singleQuotedString = \"'([^']+)'\".r\n+\n+  private[sql] def unquoteString(str: String): String = str match {\n+    case singleQuotedString(s) => s\n+    case doubleQuotedString(s) => s\n+    case other => other\n+  }\n+\n+  /** Strips backticks from ident if present */\n+  private[sql] def cleanIdentifier(ident: String): String = ident match {\n+    case escapedIdentifier(i) => i\n+    case plainIdent => plainIdent\n+  }\n+\n+  private[sql] def cleanAndUnquoteString(str: String): String = {\n+    cleanIdentifier(unquoteString(str))\n+  }\n+\n+  object Token {",
    "line": 46
  }],
  "prId": 11048
}]