[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "maybe just `input object to be serialized`?\n",
    "commit": "e889f85165acbb1d685e70c959abe04955d24a17",
    "createdAt": "2016-06-13T17:21:11Z",
    "diffHunk": "@@ -209,7 +209,12 @@ object Encoders {\n           BoundReference(0, ObjectType(classOf[AnyRef]), nullable = true), kryo = useKryo)),\n       deserializer =\n         DecodeUsingSerializer[T](\n-          GetColumnByOrdinal(0, BinaryType), classTag[T], kryo = useKryo),\n+          UpCast(\n+            GetColumnByOrdinal(0, BinaryType),\n+            BinaryType,\n+            Seq(s\"root object (class: ${classOf[BinaryType]}, name: value}\")),"
  }],
  "prId": 13632
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "I think we can just use `Cast`. `Upcast` is mainly for some numeric check, e.g. long should not be casted to int.\n",
    "commit": "e889f85165acbb1d685e70c959abe04955d24a17",
    "createdAt": "2016-06-13T22:48:37Z",
    "diffHunk": "@@ -209,7 +209,12 @@ object Encoders {\n           BoundReference(0, ObjectType(classOf[AnyRef]), nullable = true), kryo = useKryo)),\n       deserializer =\n         DecodeUsingSerializer[T](\n-          GetColumnByOrdinal(0, BinaryType), classTag[T], kryo = useKryo),\n+          UpCast("
  }],
  "prId": 13632
}]