[{
  "comments": [{
    "author": {
      "login": "davies"
    },
    "body": "Should we remove the NullType here?\n",
    "commit": "16826e6d5cb9636b6a72125fcccfc4273227c45b",
    "createdAt": "2015-11-10T19:18:49Z",
    "diffHunk": "@@ -29,16 +31,13 @@ case class Sum(child: Expression) extends DeclarativeAggregate {\n   // Return data type.\n   override def dataType: DataType = resultType\n \n-  // Expected input data type.\n-  // TODO: Right now, we replace old aggregate functions (based on AggregateExpression1) to the\n-  // new version at planning time (after analysis phase). For now, NullType is added at here\n-  // to make it resolved when we have cases like `select sum(null)`.\n-  // We can use our analyzer to cast NullType to the default data type of the NumericType once\n-  // we remove the old aggregate functions. Then, we will not need NullType at here.\n   override def inputTypes: Seq[AbstractDataType] =\n     Seq(TypeCollection(LongType, DoubleType, DecimalType, NullType))",
    "line": 21
  }, {
    "author": {
      "login": "yhuai"
    },
    "body": "yeah, we should remove it. I somehow missed it.\n",
    "commit": "16826e6d5cb9636b6a72125fcccfc4273227c45b",
    "createdAt": "2015-11-10T19:23:17Z",
    "diffHunk": "@@ -29,16 +31,13 @@ case class Sum(child: Expression) extends DeclarativeAggregate {\n   // Return data type.\n   override def dataType: DataType = resultType\n \n-  // Expected input data type.\n-  // TODO: Right now, we replace old aggregate functions (based on AggregateExpression1) to the\n-  // new version at planning time (after analysis phase). For now, NullType is added at here\n-  // to make it resolved when we have cases like `select sum(null)`.\n-  // We can use our analyzer to cast NullType to the default data type of the NumericType once\n-  // we remove the old aggregate functions. Then, we will not need NullType at here.\n   override def inputTypes: Seq[AbstractDataType] =\n     Seq(TypeCollection(LongType, DoubleType, DecimalType, NullType))",
    "line": 21
  }, {
    "author": {
      "login": "yhuai"
    },
    "body": "Done\n",
    "commit": "16826e6d5cb9636b6a72125fcccfc4273227c45b",
    "createdAt": "2015-11-10T21:06:17Z",
    "diffHunk": "@@ -29,16 +31,13 @@ case class Sum(child: Expression) extends DeclarativeAggregate {\n   // Return data type.\n   override def dataType: DataType = resultType\n \n-  // Expected input data type.\n-  // TODO: Right now, we replace old aggregate functions (based on AggregateExpression1) to the\n-  // new version at planning time (after analysis phase). For now, NullType is added at here\n-  // to make it resolved when we have cases like `select sum(null)`.\n-  // We can use our analyzer to cast NullType to the default data type of the NumericType once\n-  // we remove the old aggregate functions. Then, we will not need NullType at here.\n   override def inputTypes: Seq[AbstractDataType] =\n     Seq(TypeCollection(LongType, DoubleType, DecimalType, NullType))",
    "line": 21
  }],
  "prId": 9556
}]