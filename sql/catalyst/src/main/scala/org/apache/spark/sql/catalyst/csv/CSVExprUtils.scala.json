[{
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "let's name `df` `decimalFormat` ..",
    "commit": "521bd45c95f56d5bff3656d0af018f963c524605",
    "createdAt": "2018-11-22T02:44:04Z",
    "diffHunk": "@@ -79,4 +83,22 @@ object CSVExprUtils {\n         throw new IllegalArgumentException(s\"Delimiter cannot be more than one character: $str\")\n     }\n   }\n+\n+  def getDecimalParser(useLegacyParser: Boolean, locale: Locale): String => java.math.BigDecimal = {\n+    if (useLegacyParser) {\n+      (s: String) => new BigDecimal(s.replaceAll(\",\", \"\"))\n+    } else {\n+      val df = new DecimalFormat(\"\", new DecimalFormatSymbols(locale))"
  }, {
    "author": {
      "login": "MaxGekk"
    },
    "body": "renamed",
    "commit": "521bd45c95f56d5bff3656d0af018f963c524605",
    "createdAt": "2018-11-22T07:06:30Z",
    "diffHunk": "@@ -79,4 +83,22 @@ object CSVExprUtils {\n         throw new IllegalArgumentException(s\"Delimiter cannot be more than one character: $str\")\n     }\n   }\n+\n+  def getDecimalParser(useLegacyParser: Boolean, locale: Locale): String => java.math.BigDecimal = {\n+    if (useLegacyParser) {\n+      (s: String) => new BigDecimal(s.replaceAll(\",\", \"\"))\n+    } else {\n+      val df = new DecimalFormat(\"\", new DecimalFormatSymbols(locale))"
  }],
  "prId": 22979
}]