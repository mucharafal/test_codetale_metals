[{
  "comments": [{
    "author": {
      "login": "jaceklaskowski"
    },
    "body": "\". It just works\"\n",
    "commit": "de3ca686ce54109dc3564de75b6cb6411ead7d5e",
    "createdAt": "2016-07-21T20:01:28Z",
    "diffHunk": "@@ -167,6 +168,21 @@ abstract class ExternalCatalog {\n       table: String,\n       partialSpec: Option[TablePartitionSpec] = None): Seq[CatalogTablePartition]\n \n+  /**\n+   * Returns partitions filtered by predicates for the given table, It just work for Hive."
  }],
  "prId": 14285
}, {
  "comments": [{
    "author": {
      "login": "jaceklaskowski"
    },
    "body": "New line before `@param`?\n",
    "commit": "de3ca686ce54109dc3564de75b6cb6411ead7d5e",
    "createdAt": "2016-07-21T20:02:25Z",
    "diffHunk": "@@ -167,6 +168,21 @@ abstract class ExternalCatalog {\n       table: String,\n       partialSpec: Option[TablePartitionSpec] = None): Seq[CatalogTablePartition]\n \n+  /**\n+   * Returns partitions filtered by predicates for the given table, It just work for Hive.\n+   *\n+   * The filters Expressions may optionally be provided to filter the partitions returned.\n+   * For instance, if there exist partitions (a='1', b='2'), (a='1', b='3') and (a='2', b='4'),\n+   * then the filters (a='1') will return the first two only.\n+   * @param db database name"
  }],
  "prId": 14285
}]