[{
  "comments": [{
    "author": {
      "login": "hvanhovell"
    },
    "body": "Shall we put this in the class header?\n",
    "commit": "902fe5fdf3ef9379252b7e8f7eaeaeaa6dd8759d",
    "createdAt": "2016-06-24T17:18:36Z",
    "diffHunk": "@@ -39,4 +39,7 @@ abstract class MapData extends Serializable {\n       i += 1\n     }\n   }\n+\n+  // `MapData` should not implement `equals` and `hashCode` because the type cannot be used as join"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "okay\n",
    "commit": "902fe5fdf3ef9379252b7e8f7eaeaeaa6dd8759d",
    "createdAt": "2016-06-24T22:46:49Z",
    "diffHunk": "@@ -39,4 +39,7 @@ abstract class MapData extends Serializable {\n       i += 1\n     }\n   }\n+\n+  // `MapData` should not implement `equals` and `hashCode` because the type cannot be used as join"
  }],
  "prId": 13847
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "it's not your fault, but I think we need to add some comment for `MapData` itself, and then follows this comment as a note. We can simply say: `An internal data representation for map type in Spark SQL`.\n",
    "commit": "902fe5fdf3ef9379252b7e8f7eaeaeaa6dd8759d",
    "createdAt": "2016-06-25T11:15:23Z",
    "diffHunk": "@@ -19,6 +19,10 @@ package org.apache.spark.sql.catalyst.util\n \n import org.apache.spark.sql.types.DataType\n \n+/**\n+ * `MapData` should not implement `equals` and `hashCode` because the type cannot be used as join"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "okay, how about this?\n",
    "commit": "902fe5fdf3ef9379252b7e8f7eaeaeaa6dd8759d",
    "createdAt": "2016-06-25T15:47:54Z",
    "diffHunk": "@@ -19,6 +19,10 @@ package org.apache.spark.sql.catalyst.util\n \n import org.apache.spark.sql.types.DataType\n \n+/**\n+ * `MapData` should not implement `equals` and `hashCode` because the type cannot be used as join"
  }],
  "prId": 13847
}]