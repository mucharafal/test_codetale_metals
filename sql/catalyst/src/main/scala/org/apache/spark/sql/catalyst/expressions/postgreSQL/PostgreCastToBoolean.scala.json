[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Are these really the only cases that should trim this way?",
    "commit": "3cd5433a3058305d53ca6557e2d48a93f182d24d",
    "createdAt": "2019-11-21T12:53:14Z",
    "diffHunk": "@@ -42,7 +42,7 @@ case class PostgreCastToBoolean(child: Expression, timeZoneId: Option[String])\n   override def castToBoolean(from: DataType): Any => Any = from match {\n     case StringType =>\n       buildCast[UTF8String](_, str => {\n-        val s = str.trim().toLowerCase()\n+        val s = str.trimAll().toLowerCase()",
    "line": 5
  }, {
    "author": {
      "login": "yaooqinn"
    },
    "body": "the only left one is in string trim function, which I checked pg and hive are spaces trim only.",
    "commit": "3cd5433a3058305d53ca6557e2d48a93f182d24d",
    "createdAt": "2019-11-21T13:15:10Z",
    "diffHunk": "@@ -42,7 +42,7 @@ case class PostgreCastToBoolean(child: Expression, timeZoneId: Option[String])\n   override def castToBoolean(from: DataType): Any => Any = from match {\n     case StringType =>\n       buildCast[UTF8String](_, str => {\n-        val s = str.trim().toLowerCase()\n+        val s = str.trimAll().toLowerCase()",
    "line": 5
  }, {
    "author": {
      "login": "yaooqinn"
    },
    "body": "presto string trim does java like way.",
    "commit": "3cd5433a3058305d53ca6557e2d48a93f182d24d",
    "createdAt": "2019-11-21T13:16:32Z",
    "diffHunk": "@@ -42,7 +42,7 @@ case class PostgreCastToBoolean(child: Expression, timeZoneId: Option[String])\n   override def castToBoolean(from: DataType): Any => Any = from match {\n     case StringType =>\n       buildCast[UTF8String](_, str => {\n-        val s = str.trim().toLowerCase()\n+        val s = str.trimAll().toLowerCase()",
    "line": 5
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Hm, it just seems odd to trim this just for booleans and dates?  is there more context here?",
    "commit": "3cd5433a3058305d53ca6557e2d48a93f182d24d",
    "createdAt": "2019-11-21T13:17:23Z",
    "diffHunk": "@@ -42,7 +42,7 @@ case class PostgreCastToBoolean(child: Expression, timeZoneId: Option[String])\n   override def castToBoolean(from: DataType): Any => Any = from match {\n     case StringType =>\n       buildCast[UTF8String](_, str => {\n-        val s = str.trim().toLowerCase()\n+        val s = str.trimAll().toLowerCase()",
    "line": 5
  }, {
    "author": {
      "login": "yaooqinn"
    },
    "body": "for integral types, we currently handle the relative issue here https://github.com/apache/spark/pull/26622",
    "commit": "3cd5433a3058305d53ca6557e2d48a93f182d24d",
    "createdAt": "2019-11-21T13:26:17Z",
    "diffHunk": "@@ -42,7 +42,7 @@ case class PostgreCastToBoolean(child: Expression, timeZoneId: Option[String])\n   override def castToBoolean(from: DataType): Any => Any = from match {\n     case StringType =>\n       buildCast[UTF8String](_, str => {\n-        val s = str.trim().toLowerCase()\n+        val s = str.trimAll().toLowerCase()",
    "line": 5
  }],
  "prId": 26626
}]