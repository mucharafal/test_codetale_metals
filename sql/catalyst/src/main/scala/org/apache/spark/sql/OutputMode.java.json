[{
  "comments": [{
    "author": {
      "login": "zsxwing"
    },
    "body": "nit: move this file to sql/catalyst/src/main/**java**/org/apache/spark/sql/OutputMode.java\n",
    "commit": "e951798bf4511cabc08d242e7f1a3d7d1e653263",
    "createdAt": "2016-05-24T23:56:05Z",
    "diffHunk": "@@ -15,9 +15,10 @@\n  * limitations under the License.\n  */\n \n-package org.apache.spark.sql.catalyst.analysis\n+package org.apache.spark.sql;"
  }, {
    "author": {
      "login": "tdas"
    },
    "body": "before that.... i realize that making this java enum prevents us from having output modes like `UpdateInPlace(\"key\")` in the future. So we have to think about this. \n",
    "commit": "e951798bf4511cabc08d242e7f1a3d7d1e653263",
    "createdAt": "2016-05-25T01:26:38Z",
    "diffHunk": "@@ -15,9 +15,10 @@\n  * limitations under the License.\n  */\n \n-package org.apache.spark.sql.catalyst.analysis\n+package org.apache.spark.sql;"
  }],
  "prId": 13286
}, {
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "This actually raises a good question.  I'm not sure if we can use enums here as I think that we need to have a notion of a `key` in order to do an `Update` mode.\n",
    "commit": "e951798bf4511cabc08d242e7f1a3d7d1e653263",
    "createdAt": "2016-05-25T00:32:31Z",
    "diffHunk": "@@ -15,9 +15,10 @@\n  * limitations under the License.\n  */\n \n-package org.apache.spark.sql.catalyst.analysis\n+package org.apache.spark.sql;\n \n-sealed trait OutputMode\n-\n-case object Append extends OutputMode\n-case object Update extends OutputMode\n+public enum OutputMode {\n+  Append,\n+  Update,"
  }],
  "prId": 13286
}, {
  "comments": [{
    "author": {
      "login": "zsxwing"
    },
    "body": "nit: `@Experimental`\n",
    "commit": "e951798bf4511cabc08d242e7f1a3d7d1e653263",
    "createdAt": "2016-05-25T00:37:24Z",
    "diffHunk": "@@ -15,9 +15,10 @@\n  * limitations under the License.\n  */\n \n-package org.apache.spark.sql.catalyst.analysis\n+package org.apache.spark.sql;\n \n-sealed trait OutputMode\n-\n-case object Append extends OutputMode\n-case object Update extends OutputMode\n+public enum OutputMode {"
  }],
  "prId": 13286
}]