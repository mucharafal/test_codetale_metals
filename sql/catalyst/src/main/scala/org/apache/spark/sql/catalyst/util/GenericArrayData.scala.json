[{
  "comments": [{
    "author": {
      "login": "MaxGekk"
    },
    "body": "Are there any needs to handle `Array[Byte]` separately above? ",
    "commit": "a30de22183cab3cde90fce6029cd03dfc5b5758a",
    "createdAt": "2018-06-26T11:33:56Z",
    "diffHunk": "@@ -122,7 +122,7 @@ class GenericArrayData(val array: Array[Any]) extends ArrayData {\n             if (!o2.isInstanceOf[Double] || ! java.lang.Double.isNaN(o2.asInstanceOf[Double])) {\n               return false\n             }\n-          case _ => if (o1 != o2) {\n+          case _ => if (!o1.equals(o2)) {",
    "line": 5
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "in java `byte[]` or other primitive arrays doesn't have a proper `equals` implementation.\r\n```\r\nscala> Array(1) == Array(1)\r\nres0: Boolean = false\r\n```",
    "commit": "a30de22183cab3cde90fce6029cd03dfc5b5758a",
    "createdAt": "2018-06-26T15:15:36Z",
    "diffHunk": "@@ -122,7 +122,7 @@ class GenericArrayData(val array: Array[Any]) extends ArrayData {\n             if (!o2.isInstanceOf[Double] || ! java.lang.Double.isNaN(o2.asInstanceOf[Double])) {\n               return false\n             }\n-          case _ => if (o1 != o2) {\n+          case _ => if (!o1.equals(o2)) {",
    "line": 5
  }],
  "prId": 21643
}]