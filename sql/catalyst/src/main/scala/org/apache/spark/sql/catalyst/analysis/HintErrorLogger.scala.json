[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "can we keep the previous behavior? https://github.com/apache/spark/pull/24653/files#diff-746a6d090224c7cfbe15daa27fa27408L135\r\n\r\n`${h.name}${relationNames.mkString(\"(\", \", \", \")\")}`",
    "commit": "2901a7546b13e67d585d8ae52f4d788cdcb6f1b3",
    "createdAt": "2019-05-27T06:32:58Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.analysis\n+\n+import org.apache.spark.internal.Logging\n+import org.apache.spark.sql.catalyst.plans.logical.{HintErrorHandler, HintInfo}\n+\n+/**\n+ * The hint error handler that logs warnings for each hint error.\n+ */\n+object HintErrorLogger extends HintErrorHandler with Logging {\n+\n+  override def hintNotRecognized(name: String, parameters: Seq[Any]): Unit = {\n+    logWarning(s\"Unrecognized hint: $name${parameters.mkString(\"(\", \", \", \")\")}\")\n+  }\n+\n+  override def hintRelationsNotFound(\n+      name: String, parameters: Seq[Any], invalidRelations: Set[String]): Unit = {\n+    invalidRelations.foreach { n =>\n+      logWarning(s\"Count not find relation '$n' for join strategy hint \" +\n+        s\"'$name${parameters.mkString(\"(\", \", \", \")\")}'.\")"
  }, {
    "author": {
      "login": "maryannxue"
    },
    "body": "I wanted to print the original hint with all parameters, but it turns out the relation names aren't printed nicely. Is there a way out of this?",
    "commit": "2901a7546b13e67d585d8ae52f4d788cdcb6f1b3",
    "createdAt": "2019-06-12T20:54:07Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.analysis\n+\n+import org.apache.spark.internal.Logging\n+import org.apache.spark.sql.catalyst.plans.logical.{HintErrorHandler, HintInfo}\n+\n+/**\n+ * The hint error handler that logs warnings for each hint error.\n+ */\n+object HintErrorLogger extends HintErrorHandler with Logging {\n+\n+  override def hintNotRecognized(name: String, parameters: Seq[Any]): Unit = {\n+    logWarning(s\"Unrecognized hint: $name${parameters.mkString(\"(\", \", \", \")\")}\")\n+  }\n+\n+  override def hintRelationsNotFound(\n+      name: String, parameters: Seq[Any], invalidRelations: Set[String]): Unit = {\n+    invalidRelations.foreach { n =>\n+      logWarning(s\"Count not find relation '$n' for join strategy hint \" +\n+        s\"'$name${parameters.mkString(\"(\", \", \", \")\")}'.\")"
  }],
  "prId": 24653
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "shall we make the method name specific to join hint? or make the error log general?",
    "commit": "2901a7546b13e67d585d8ae52f4d788cdcb6f1b3",
    "createdAt": "2019-05-27T06:34:16Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.analysis\n+\n+import org.apache.spark.internal.Logging\n+import org.apache.spark.sql.catalyst.plans.logical.{HintErrorHandler, HintInfo}\n+\n+/**\n+ * The hint error handler that logs warnings for each hint error.\n+ */\n+object HintErrorLogger extends HintErrorHandler with Logging {\n+\n+  override def hintNotRecognized(name: String, parameters: Seq[Any]): Unit = {\n+    logWarning(s\"Unrecognized hint: $name${parameters.mkString(\"(\", \", \", \")\")}\")\n+  }\n+\n+  override def hintRelationsNotFound(\n+      name: String, parameters: Seq[Any], invalidRelations: Set[String]): Unit = {\n+    invalidRelations.foreach { n =>\n+      logWarning(s\"Count not find relation '$n' for join strategy hint \" +\n+        s\"'$name${parameters.mkString(\"(\", \", \", \")\")}'.\")\n+    }\n+  }\n+\n+  override def joinNotFoundForJoinHint(hint: HintInfo): Unit = {\n+    logWarning(s\"A join hint $hint is specified but it is not part of a join relation.\")\n+  }\n+\n+  override def hintOverridden(hint: HintInfo): Unit = {\n+    logWarning(s\"Join hint $hint is overridden by another hint and will not take effect.\")"
  }],
  "prId": 24653
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "is this specific to join?",
    "commit": "2901a7546b13e67d585d8ae52f4d788cdcb6f1b3",
    "createdAt": "2019-05-27T06:34:39Z",
    "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.analysis\n+\n+import org.apache.spark.internal.Logging\n+import org.apache.spark.sql.catalyst.plans.logical.{HintErrorHandler, HintInfo}\n+\n+/**\n+ * The hint error handler that logs warnings for each hint error.\n+ */\n+object HintErrorLogger extends HintErrorHandler with Logging {\n+\n+  override def hintNotRecognized(name: String, parameters: Seq[Any]): Unit = {\n+    logWarning(s\"Unrecognized hint: $name${parameters.mkString(\"(\", \", \", \")\")}\")\n+  }\n+\n+  override def hintRelationsNotFound(\n+      name: String, parameters: Seq[Any], invalidRelations: Set[String]): Unit = {\n+    invalidRelations.foreach { n =>\n+      logWarning(s\"Count not find relation '$n' for join strategy hint \" +"
  }],
  "prId": 24653
}]