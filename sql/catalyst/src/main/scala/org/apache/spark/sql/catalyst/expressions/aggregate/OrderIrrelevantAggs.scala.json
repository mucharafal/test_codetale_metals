[{
  "comments": [{
    "author": {
      "login": "maropu"
    },
    "body": "I think this trait approach doesn't work for `ScalaUDAF`. Is this expected?",
    "commit": "4eccd2ab965919f91abeedefae574b1f9b3fbaf5",
    "createdAt": "2019-10-23T07:21:02Z",
    "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions.aggregate\n+\n+/**\n+ * An [[OrderIrrelevantAggs]] trait denotes those aggregate functions that its result\n+ * has nothing to do with the order of input data.\n+ * For example, [[Sum]] is [[OrderIrrelevantAggs]] while [[First]] is not.\n+ */\n+trait OrderIrrelevantAggs extends AggregateFunction {"
  }, {
    "author": {
      "login": "WangGuangxin"
    },
    "body": "Yes, it's not suitable for `ScalaUDAF`. In fact, I used `OrderIrrelevantAggs` as a mixin trait, and I only apply this trait to `min`, `max` and several other agg funciton, not on `ScalaUDAF`. Hope I understand you correctly.",
    "commit": "4eccd2ab965919f91abeedefae574b1f9b3fbaf5",
    "createdAt": "2019-10-24T06:15:40Z",
    "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions.aggregate\n+\n+/**\n+ * An [[OrderIrrelevantAggs]] trait denotes those aggregate functions that its result\n+ * has nothing to do with the order of input data.\n+ * For example, [[Sum]] is [[OrderIrrelevantAggs]] while [[First]] is not.\n+ */\n+trait OrderIrrelevantAggs extends AggregateFunction {"
  }, {
    "author": {
      "login": "WangGuangxin"
    },
    "body": "Maybe `OrderIrrelevantAggs` don't need to extends `AggregateFunction`. ",
    "commit": "4eccd2ab965919f91abeedefae574b1f9b3fbaf5",
    "createdAt": "2019-10-24T06:16:51Z",
    "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions.aggregate\n+\n+/**\n+ * An [[OrderIrrelevantAggs]] trait denotes those aggregate functions that its result\n+ * has nothing to do with the order of input data.\n+ * For example, [[Sum]] is [[OrderIrrelevantAggs]] while [[First]] is not.\n+ */\n+trait OrderIrrelevantAggs extends AggregateFunction {"
  }, {
    "author": {
      "login": "maropu"
    },
    "body": "If there is not too many agg functions for this optimization, can we list up them inside the rule like the others? e.g., https://github.com/apache/spark/blob/master/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/optimizer/NestedColumnAliasing.scala#L162",
    "commit": "4eccd2ab965919f91abeedefae574b1f9b3fbaf5",
    "createdAt": "2019-10-24T06:38:43Z",
    "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions.aggregate\n+\n+/**\n+ * An [[OrderIrrelevantAggs]] trait denotes those aggregate functions that its result\n+ * has nothing to do with the order of input data.\n+ * For example, [[Sum]] is [[OrderIrrelevantAggs]] while [[First]] is not.\n+ */\n+trait OrderIrrelevantAggs extends AggregateFunction {"
  }, {
    "author": {
      "login": "WangGuangxin"
    },
    "body": "OK, I think your suggestion is better.",
    "commit": "4eccd2ab965919f91abeedefae574b1f9b3fbaf5",
    "createdAt": "2019-10-24T06:59:36Z",
    "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.expressions.aggregate\n+\n+/**\n+ * An [[OrderIrrelevantAggs]] trait denotes those aggregate functions that its result\n+ * has nothing to do with the order of input data.\n+ * For example, [[Sum]] is [[OrderIrrelevantAggs]] while [[First]] is not.\n+ */\n+trait OrderIrrelevantAggs extends AggregateFunction {"
  }],
  "prId": 26011
}]