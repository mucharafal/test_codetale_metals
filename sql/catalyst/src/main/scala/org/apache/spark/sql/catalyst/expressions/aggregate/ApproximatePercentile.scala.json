[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "Is it possible to return `None`? Then, you will get a strange exception. Could you also add a test case for `getPercentiles` in `ApproximatePercentileQuerySuite`?",
    "commit": "b1125fd1a6610d61689f28b6022b4554146ac878",
    "createdAt": "2017-03-02T03:26:09Z",
    "diffHunk": "@@ -245,7 +245,7 @@ object ApproximatePercentile {\n         val result = new Array[Double](percentages.length)\n         var i = 0\n         while (i < percentages.length) {\n-          result(i) = summaries.query(percentages(i))\n+          result(i) = summaries.query(percentages(i)).get"
  }, {
    "author": {
      "login": "zhengruifeng"
    },
    "body": "It looks like that it is impossible not return `None` here: Since `summaries.count != 0`, the `summaries.sampled` should not be empty, then `None` will not be returned. @thunterdb Is this correct?",
    "commit": "b1125fd1a6610d61689f28b6022b4554146ac878",
    "createdAt": "2017-03-02T08:36:21Z",
    "diffHunk": "@@ -245,7 +245,7 @@ object ApproximatePercentile {\n         val result = new Array[Double](percentages.length)\n         var i = 0\n         while (i < percentages.length) {\n-          result(i) = summaries.query(percentages(i))\n+          result(i) = summaries.query(percentages(i)).get"
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "Yes. I think it is impossible to hit it. We need some test cases to ensure it. See my next comment.",
    "commit": "b1125fd1a6610d61689f28b6022b4554146ac878",
    "createdAt": "2017-03-13T04:29:36Z",
    "diffHunk": "@@ -245,7 +245,7 @@ object ApproximatePercentile {\n         val result = new Array[Double](percentages.length)\n         var i = 0\n         while (i < percentages.length) {\n-          result(i) = summaries.query(percentages(i))\n+          result(i) = summaries.query(percentages(i)).get"
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "cc @thunterdb to ensure it.",
    "commit": "b1125fd1a6610d61689f28b6022b4554146ac878",
    "createdAt": "2017-03-13T04:33:25Z",
    "diffHunk": "@@ -245,7 +245,7 @@ object ApproximatePercentile {\n         val result = new Array[Double](percentages.length)\n         var i = 0\n         while (i < percentages.length) {\n-          result(i) = summaries.query(percentages(i))\n+          result(i) = summaries.query(percentages(i)).get"
  }, {
    "author": {
      "login": "thunterdb"
    },
    "body": "Yes, this is correct. But you should leave a comment, since it is not obvious.",
    "commit": "b1125fd1a6610d61689f28b6022b4554146ac878",
    "createdAt": "2017-03-15T23:38:57Z",
    "diffHunk": "@@ -245,7 +245,7 @@ object ApproximatePercentile {\n         val result = new Array[Double](percentages.length)\n         var i = 0\n         while (i < percentages.length) {\n-          result(i) = summaries.query(percentages(i))\n+          result(i) = summaries.query(percentages(i)).get"
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "Thank you!",
    "commit": "b1125fd1a6610d61689f28b6022b4554146ac878",
    "createdAt": "2017-03-16T03:59:53Z",
    "diffHunk": "@@ -245,7 +245,7 @@ object ApproximatePercentile {\n         val result = new Array[Double](percentages.length)\n         var i = 0\n         while (i < percentages.length) {\n-          result(i) = summaries.query(percentages(i))\n+          result(i) = summaries.query(percentages(i)).get"
  }, {
    "author": {
      "login": "zhengruifeng"
    },
    "body": "Thanks all. I will add a comment here.",
    "commit": "b1125fd1a6610d61689f28b6022b4554146ac878",
    "createdAt": "2017-03-17T01:36:34Z",
    "diffHunk": "@@ -245,7 +245,7 @@ object ApproximatePercentile {\n         val result = new Array[Double](percentages.length)\n         var i = 0\n         while (i < percentages.length) {\n-          result(i) = summaries.query(percentages(i))\n+          result(i) = summaries.query(percentages(i)).get"
  }],
  "prId": 16971
}]