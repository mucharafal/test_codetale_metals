[{
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "I'd prefer if we made this a trait and mixed it in so you can call `plan.toJson` directly.  Also, for parsing I'd like\n\n``` scala\nobject TreeNode {\n  def fromJson[BaseType <: TreeNode](json: String): BaseType = ...\n}\n```\n",
    "commit": "6d82ede415f69b3b2d8b608d639bbe38d1194fe4",
    "createdAt": "2015-12-16T19:11:17Z",
    "diffHunk": "@@ -0,0 +1,227 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util\n+\n+import java.util.UUID\n+import scala.collection.mutable.Stack\n+import org.json4s.JsonAST._\n+import org.json4s.JsonDSL._\n+import org.json4s.jackson.JsonMethods._\n+\n+import org.apache.spark.util.Utils\n+import org.apache.spark.unsafe.types.UTF8String\n+import org.apache.spark.sql.types._\n+import org.apache.spark.sql.catalyst.trees.TreeNode\n+import org.apache.spark.sql.catalyst.ScalaReflection._\n+import org.apache.spark.sql.catalyst.ScalaReflectionLock\n+import org.apache.spark.sql.catalyst.expressions._\n+import org.apache.spark.sql.catalyst.expressions.aggregate._\n+import org.apache.spark.sql.catalyst.plans._\n+\n+object TreeNodeJsonFormatter {"
  }],
  "prId": 10311
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "I made this an object instead of inlining the code in `TreeNode` or making it a trait, because we may need to access some classes in core or hive module to special handle them, and then we may have to move it to other module.\n",
    "commit": "6d82ede415f69b3b2d8b608d639bbe38d1194fe4",
    "createdAt": "2015-12-17T16:08:49Z",
    "diffHunk": "@@ -0,0 +1,299 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util\n+\n+import java.util.UUID\n+import scala.collection.Map\n+import scala.collection.mutable.Stack\n+import org.json4s.JsonAST._\n+import org.json4s.JsonDSL._\n+import org.json4s.jackson.JsonMethods._\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.util.Utils\n+import org.apache.spark.storage.StorageLevel\n+import org.apache.spark.rdd.{EmptyRDD, RDD}\n+import org.apache.spark.unsafe.types.{CalendarInterval, UTF8String}\n+import org.apache.spark.sql.types._\n+import org.apache.spark.sql.catalyst.trees.TreeNode\n+import org.apache.spark.sql.catalyst.ScalaReflection._\n+import org.apache.spark.sql.catalyst.{TableIdentifier, ScalaReflectionLock}\n+import org.apache.spark.sql.catalyst.expressions._\n+import org.apache.spark.sql.catalyst.expressions.aggregate._\n+import org.apache.spark.sql.catalyst.plans._\n+import org.apache.spark.sql.catalyst.plans.logical.{OneRowRelation, Statistics}\n+\n+object TreeNodeJsonFormatter {"
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "I'd really like to avoid moving them out.  Better would be to have a trait `JsonSerializable` that we can mix in or something.  We should also figure out if we really need to be able to serialize them or not.  For leaf nodes I think grabbing the schema and some details would be sufficient.\n",
    "commit": "6d82ede415f69b3b2d8b608d639bbe38d1194fe4",
    "createdAt": "2015-12-17T18:36:52Z",
    "diffHunk": "@@ -0,0 +1,299 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util\n+\n+import java.util.UUID\n+import scala.collection.Map\n+import scala.collection.mutable.Stack\n+import org.json4s.JsonAST._\n+import org.json4s.JsonDSL._\n+import org.json4s.jackson.JsonMethods._\n+\n+import org.apache.spark.SparkContext\n+import org.apache.spark.util.Utils\n+import org.apache.spark.storage.StorageLevel\n+import org.apache.spark.rdd.{EmptyRDD, RDD}\n+import org.apache.spark.unsafe.types.{CalendarInterval, UTF8String}\n+import org.apache.spark.sql.types._\n+import org.apache.spark.sql.catalyst.trees.TreeNode\n+import org.apache.spark.sql.catalyst.ScalaReflection._\n+import org.apache.spark.sql.catalyst.{TableIdentifier, ScalaReflectionLock}\n+import org.apache.spark.sql.catalyst.expressions._\n+import org.apache.spark.sql.catalyst.expressions.aggregate._\n+import org.apache.spark.sql.catalyst.plans._\n+import org.apache.spark.sql.catalyst.plans.logical.{OneRowRelation, Statistics}\n+\n+object TreeNodeJsonFormatter {"
  }],
  "prId": 10311
}]