[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "shall we move it to a `PostgreStringUtils`?",
    "commit": "75aeda757b10b8601cb386a53a87d888fc6556e1",
    "createdAt": "2019-09-24T15:29:12Z",
    "diffHunk": "@@ -65,16 +65,27 @@ object StringUtils extends Logging {\n     \"(?s)\" + out.result() // (?s) enables dotall mode, causing \".\" to match new lines\n   }\n \n-  // \"true\", \"yes\", \"1\", \"false\", \"no\", \"0\", and unique prefixes of these strings are accepted.\n   private[this] val trueStrings =\n-    Set(\"true\", \"tru\", \"tr\", \"t\", \"yes\", \"ye\", \"y\", \"on\", \"1\").map(UTF8String.fromString)\n+    Set(\"t\", \"true\", \"y\", \"yes\", \"1\").map(UTF8String.fromString)\n+  // \"true\", \"yes\", \"1\", \"false\", \"no\", \"0\", and unique prefixes of these strings are accepted.\n+  private[this] val trueStringsOfPostgreSQL =\n+    Set(\"true\", \"tru\", \"tr\", \"t\", \"yes\", \"ye\", \"y\", \"on\", \"1\").map (UTF8String.fromString)\n \n   private[this] val falseStrings =\n+    Set(\"f\", \"false\", \"n\", \"no\", \"0\").map(UTF8String.fromString)\n+  private[this] val falseStringsOfPostgreSQL =\n     Set(\"false\", \"fals\", \"fal\", \"fa\", \"f\", \"no\", \"n\", \"off\", \"of\", \"0\").map(UTF8String.fromString)\n \n   // scalastyle:off caselocale\n-  def isTrueString(s: UTF8String): Boolean = trueStrings.contains(s.toLowerCase.trim())\n-  def isFalseString(s: UTF8String): Boolean = falseStrings.contains(s.toLowerCase.trim())\n+  def isTrueString(s: UTF8String): Boolean = trueStrings.contains(s.toLowerCase)\n+\n+  def isFalseString(s: UTF8String): Boolean = falseStrings.contains(s.toLowerCase)\n+\n+  def postgreIsTrueString(s: UTF8String): Boolean ="
  }],
  "prId": 25697
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "nit: not related to your PR, but seems it's better to trim first then to lower case.",
    "commit": "75aeda757b10b8601cb386a53a87d888fc6556e1",
    "createdAt": "2019-09-24T15:29:47Z",
    "diffHunk": "@@ -65,16 +65,27 @@ object StringUtils extends Logging {\n     \"(?s)\" + out.result() // (?s) enables dotall mode, causing \".\" to match new lines\n   }\n \n-  // \"true\", \"yes\", \"1\", \"false\", \"no\", \"0\", and unique prefixes of these strings are accepted.\n   private[this] val trueStrings =\n-    Set(\"true\", \"tru\", \"tr\", \"t\", \"yes\", \"ye\", \"y\", \"on\", \"1\").map(UTF8String.fromString)\n+    Set(\"t\", \"true\", \"y\", \"yes\", \"1\").map(UTF8String.fromString)\n+  // \"true\", \"yes\", \"1\", \"false\", \"no\", \"0\", and unique prefixes of these strings are accepted.\n+  private[this] val trueStringsOfPostgreSQL =\n+    Set(\"true\", \"tru\", \"tr\", \"t\", \"yes\", \"ye\", \"y\", \"on\", \"1\").map (UTF8String.fromString)\n \n   private[this] val falseStrings =\n+    Set(\"f\", \"false\", \"n\", \"no\", \"0\").map(UTF8String.fromString)\n+  private[this] val falseStringsOfPostgreSQL =\n     Set(\"false\", \"fals\", \"fal\", \"fa\", \"f\", \"no\", \"n\", \"off\", \"of\", \"0\").map(UTF8String.fromString)\n \n   // scalastyle:off caselocale\n-  def isTrueString(s: UTF8String): Boolean = trueStrings.contains(s.toLowerCase.trim())\n-  def isFalseString(s: UTF8String): Boolean = falseStrings.contains(s.toLowerCase.trim())\n+  def isTrueString(s: UTF8String): Boolean = trueStrings.contains(s.toLowerCase)\n+\n+  def isFalseString(s: UTF8String): Boolean = falseStrings.contains(s.toLowerCase)\n+\n+  def postgreIsTrueString(s: UTF8String): Boolean =\n+    trueStringsOfPostgreSQL.contains(s.toLowerCase.trim())"
  }],
  "prId": 25697
}]