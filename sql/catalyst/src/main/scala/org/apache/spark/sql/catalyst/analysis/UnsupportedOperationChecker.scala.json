[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "if used only once, why make a function?",
    "commit": "130314714f8d2d1fcd01e59bacccc4825af260c9",
    "createdAt": "2017-03-08T09:14:12Z",
    "diffHunk": "@@ -51,6 +51,47 @@ object UnsupportedOperationChecker {\n       subplan.collect { case a: Aggregate if a.isStreaming => a }\n     }\n \n+    /** Collect all the streaming `mapGroupsWithState`s in a sub plan */\n+    def collectMapGroupsWithState(subplan: LogicalPlan): Seq[FlatMapGroupsWithState] = {\n+      subplan.collect {\n+        case f: FlatMapGroupsWithState if f.isStreaming && f.isMapGroupsWithState => f\n+      }\n+    }\n+\n+    val mapGroupsWithStates = collectMapGroupsWithState(plan)\n+\n+    // Disallow multiple `mapGroupsWithState`s.\n+    if (mapGroupsWithStates.size >= 2) {\n+      throwError(\n+        \"Multiple mapGroupsWithStates are not supported on a streaming DataFrames/Datasets\")(plan)\n+    }\n+\n+    /** Collect all the streaming `FlatMapGroupsWithState`s in a sub plan */\n+    def collectFlatMapGroupsWithState(subplan: LogicalPlan): Seq[FlatMapGroupsWithState] = {"
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "Removed",
    "commit": "130314714f8d2d1fcd01e59bacccc4825af260c9",
    "createdAt": "2017-03-08T18:58:53Z",
    "diffHunk": "@@ -51,6 +51,47 @@ object UnsupportedOperationChecker {\n       subplan.collect { case a: Aggregate if a.isStreaming => a }\n     }\n \n+    /** Collect all the streaming `mapGroupsWithState`s in a sub plan */\n+    def collectMapGroupsWithState(subplan: LogicalPlan): Seq[FlatMapGroupsWithState] = {\n+      subplan.collect {\n+        case f: FlatMapGroupsWithState if f.isStreaming && f.isMapGroupsWithState => f\n+      }\n+    }\n+\n+    val mapGroupsWithStates = collectMapGroupsWithState(plan)\n+\n+    // Disallow multiple `mapGroupsWithState`s.\n+    if (mapGroupsWithStates.size >= 2) {\n+      throwError(\n+        \"Multiple mapGroupsWithStates are not supported on a streaming DataFrames/Datasets\")(plan)\n+    }\n+\n+    /** Collect all the streaming `FlatMapGroupsWithState`s in a sub plan */\n+    def collectFlatMapGroupsWithState(subplan: LogicalPlan): Seq[FlatMapGroupsWithState] = {"
  }],
  "prId": 17197
}, {
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "if used only once, why make a function?",
    "commit": "130314714f8d2d1fcd01e59bacccc4825af260c9",
    "createdAt": "2017-03-08T09:24:14Z",
    "diffHunk": "@@ -51,6 +51,47 @@ object UnsupportedOperationChecker {\n       subplan.collect { case a: Aggregate if a.isStreaming => a }\n     }\n \n+    /** Collect all the streaming `mapGroupsWithState`s in a sub plan */\n+    def collectMapGroupsWithState(subplan: LogicalPlan): Seq[FlatMapGroupsWithState] = {"
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "Removed",
    "commit": "130314714f8d2d1fcd01e59bacccc4825af260c9",
    "createdAt": "2017-03-08T18:58:56Z",
    "diffHunk": "@@ -51,6 +51,47 @@ object UnsupportedOperationChecker {\n       subplan.collect { case a: Aggregate if a.isStreaming => a }\n     }\n \n+    /** Collect all the streaming `mapGroupsWithState`s in a sub plan */\n+    def collectMapGroupsWithState(subplan: LogicalPlan): Seq[FlatMapGroupsWithState] = {"
  }],
  "prId": 17197
}, {
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "Can you add some comments explaining in words whats allowed?\r\nThis is hard to understand.",
    "commit": "130314714f8d2d1fcd01e59bacccc4825af260c9",
    "createdAt": "2017-03-08T09:45:15Z",
    "diffHunk": "@@ -116,9 +157,49 @@ object UnsupportedOperationChecker {\n           throwError(\"Commands like CreateTable*, AlterTable*, Show* are not supported with \" +\n             \"streaming DataFrames/Datasets\")\n \n-        case m: MapGroupsWithState if collectStreamingAggregates(m).nonEmpty =>\n-          throwError(\"(map/flatMap)GroupsWithState is not supported after aggregation on a \" +\n-            \"streaming DataFrame/Dataset\")\n+        // mapGroupsWithState\n+        case m: FlatMapGroupsWithState if m.isStreaming && m.isMapGroupsWithState =>"
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "Added",
    "commit": "130314714f8d2d1fcd01e59bacccc4825af260c9",
    "createdAt": "2017-03-08T18:58:49Z",
    "diffHunk": "@@ -116,9 +157,49 @@ object UnsupportedOperationChecker {\n           throwError(\"Commands like CreateTable*, AlterTable*, Show* are not supported with \" +\n             \"streaming DataFrames/Datasets\")\n \n-        case m: MapGroupsWithState if collectStreamingAggregates(m).nonEmpty =>\n-          throwError(\"(map/flatMap)GroupsWithState is not supported after aggregation on a \" +\n-            \"streaming DataFrame/Dataset\")\n+        // mapGroupsWithState\n+        case m: FlatMapGroupsWithState if m.isStreaming && m.isMapGroupsWithState =>"
  }],
  "prId": 17197
}, {
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "is it possible define pattern which makes this case looks simply like \r\n`case m@MapGroupsWithState(isStreamng=true) => ...`",
    "commit": "130314714f8d2d1fcd01e59bacccc4825af260c9",
    "createdAt": "2017-03-08T09:51:10Z",
    "diffHunk": "@@ -116,9 +157,49 @@ object UnsupportedOperationChecker {\n           throwError(\"Commands like CreateTable*, AlterTable*, Show* are not supported with \" +\n             \"streaming DataFrames/Datasets\")\n \n-        case m: MapGroupsWithState if collectStreamingAggregates(m).nonEmpty =>\n-          throwError(\"(map/flatMap)GroupsWithState is not supported after aggregation on a \" +\n-            \"streaming DataFrame/Dataset\")\n+        // mapGroupsWithState\n+        case m: FlatMapGroupsWithState if m.isStreaming && m.isMapGroupsWithState =>"
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "No such syntax. I can use something like `case m@MapGroupsWithState(_, _, ..., _, outputMode, _) => if outputMode == Update`. But doesn't save the codes.",
    "commit": "130314714f8d2d1fcd01e59bacccc4825af260c9",
    "createdAt": "2017-03-08T18:58:40Z",
    "diffHunk": "@@ -116,9 +157,49 @@ object UnsupportedOperationChecker {\n           throwError(\"Commands like CreateTable*, AlterTable*, Show* are not supported with \" +\n             \"streaming DataFrames/Datasets\")\n \n-        case m: MapGroupsWithState if collectStreamingAggregates(m).nonEmpty =>\n-          throwError(\"(map/flatMap)GroupsWithState is not supported after aggregation on a \" +\n-            \"streaming DataFrame/Dataset\")\n+        // mapGroupsWithState\n+        case m: FlatMapGroupsWithState if m.isStreaming && m.isMapGroupsWithState =>"
  }],
  "prId": 17197
}, {
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "this indentatio seems messy\r\n",
    "commit": "130314714f8d2d1fcd01e59bacccc4825af260c9",
    "createdAt": "2017-03-08T09:52:19Z",
    "diffHunk": "@@ -116,9 +157,49 @@ object UnsupportedOperationChecker {\n           throwError(\"Commands like CreateTable*, AlterTable*, Show* are not supported with \" +\n             \"streaming DataFrames/Datasets\")\n \n-        case m: MapGroupsWithState if collectStreamingAggregates(m).nonEmpty =>\n-          throwError(\"(map/flatMap)GroupsWithState is not supported after aggregation on a \" +\n-            \"streaming DataFrame/Dataset\")\n+        // mapGroupsWithState\n+        case m: FlatMapGroupsWithState if m.isStreaming && m.isMapGroupsWithState =>\n+          if (collectStreamingAggregates(plan).isEmpty) {\n+            if (outputMode != InternalOutputModes.Update) {\n+              throwError(\"mapGroupsWithState is not supported with \" +\n+                s\"$outputMode output mode on a streaming DataFrame/Dataset\")\n+            }\n+          } else {\n+            throwError(\"mapGroupsWithState is not supported with aggregation \" +\n+              \"on a streaming DataFrame/Dataset\")\n+          }\n+\n+        // flatMapGroupsWithState without aggregation\n+        case m: FlatMapGroupsWithState\n+          if m.isStreaming && collectStreamingAggregates(plan).isEmpty =>\n+          m.outputMode match {\n+            case InternalOutputModes.Update =>\n+              if (outputMode != InternalOutputModes.Update) {\n+                throwError(\"flatMapGroupsWithState in update mode is not supported with \" +\n+                  s\"$outputMode output mode on a streaming DataFrame/Dataset\")\n+              }\n+            case InternalOutputModes.Append =>\n+              if (outputMode != InternalOutputModes.Append) {\n+                throwError(\"flatMapGroupsWithState in append mode is not supported with \" +\n+                  s\"$outputMode output mode on a streaming DataFrame/Dataset\")\n+              }\n+          }\n+\n+        // flatMapGroupsWithState(Update) with aggregation\n+        case m: FlatMapGroupsWithState\n+          if m.isStreaming &&\n+            m.outputMode == InternalOutputModes.Update &&"
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "Fixed",
    "commit": "130314714f8d2d1fcd01e59bacccc4825af260c9",
    "createdAt": "2017-03-08T18:57:44Z",
    "diffHunk": "@@ -116,9 +157,49 @@ object UnsupportedOperationChecker {\n           throwError(\"Commands like CreateTable*, AlterTable*, Show* are not supported with \" +\n             \"streaming DataFrames/Datasets\")\n \n-        case m: MapGroupsWithState if collectStreamingAggregates(m).nonEmpty =>\n-          throwError(\"(map/flatMap)GroupsWithState is not supported after aggregation on a \" +\n-            \"streaming DataFrame/Dataset\")\n+        // mapGroupsWithState\n+        case m: FlatMapGroupsWithState if m.isStreaming && m.isMapGroupsWithState =>\n+          if (collectStreamingAggregates(plan).isEmpty) {\n+            if (outputMode != InternalOutputModes.Update) {\n+              throwError(\"mapGroupsWithState is not supported with \" +\n+                s\"$outputMode output mode on a streaming DataFrame/Dataset\")\n+            }\n+          } else {\n+            throwError(\"mapGroupsWithState is not supported with aggregation \" +\n+              \"on a streaming DataFrame/Dataset\")\n+          }\n+\n+        // flatMapGroupsWithState without aggregation\n+        case m: FlatMapGroupsWithState\n+          if m.isStreaming && collectStreamingAggregates(plan).isEmpty =>\n+          m.outputMode match {\n+            case InternalOutputModes.Update =>\n+              if (outputMode != InternalOutputModes.Update) {\n+                throwError(\"flatMapGroupsWithState in update mode is not supported with \" +\n+                  s\"$outputMode output mode on a streaming DataFrame/Dataset\")\n+              }\n+            case InternalOutputModes.Append =>\n+              if (outputMode != InternalOutputModes.Append) {\n+                throwError(\"flatMapGroupsWithState in append mode is not supported with \" +\n+                  s\"$outputMode output mode on a streaming DataFrame/Dataset\")\n+              }\n+          }\n+\n+        // flatMapGroupsWithState(Update) with aggregation\n+        case m: FlatMapGroupsWithState\n+          if m.isStreaming &&\n+            m.outputMode == InternalOutputModes.Update &&"
  }],
  "prId": 17197
}]