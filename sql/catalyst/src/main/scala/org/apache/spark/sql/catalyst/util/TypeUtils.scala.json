[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "Do we need to cache the comparator?\n",
    "commit": "73b9393d92b597554e9dccb8861b47699871a34d",
    "createdAt": "2015-08-20T08:26:25Z",
    "diffHunk": "@@ -62,10 +63,6 @@ object TypeUtils {\n   }\n \n   def compareBinary(x: Array[Byte], y: Array[Byte]): Int = {\n-    for (i <- 0 until x.length; if i < y.length) {\n-      val res = x(i).compareTo(y(i))\n-      if (res != 0) return res\n-    }\n-    x.length - y.length\n+    UnsignedBytes.lexicographicalComparator().compare(x, y)"
  }, {
    "author": {
      "login": "chenghao-intel"
    },
    "body": "No, not necessary, as `lexicographicalComparator()` used a static compactor instance internally.\n",
    "commit": "73b9393d92b597554e9dccb8861b47699871a34d",
    "createdAt": "2015-08-20T08:28:59Z",
    "diffHunk": "@@ -62,10 +63,6 @@ object TypeUtils {\n   }\n \n   def compareBinary(x: Array[Byte], y: Array[Byte]): Int = {\n-    for (i <- 0 until x.length; if i < y.length) {\n-      val res = x(i).compareTo(y(i))\n-      if (res != 0) return res\n-    }\n-    x.length - y.length\n+    UnsignedBytes.lexicographicalComparator().compare(x, y)"
  }, {
    "author": {
      "login": "chenghao-intel"
    },
    "body": "Actually it's a `static final`, the function call here should be very easy to be inlined in JIT I think.\n",
    "commit": "73b9393d92b597554e9dccb8861b47699871a34d",
    "createdAt": "2015-08-20T08:30:23Z",
    "diffHunk": "@@ -62,10 +63,6 @@ object TypeUtils {\n   }\n \n   def compareBinary(x: Array[Byte], y: Array[Byte]): Int = {\n-    for (i <- 0 until x.length; if i < y.length) {\n-      val res = x(i).compareTo(y(i))\n-      if (res != 0) return res\n-    }\n-    x.length - y.length\n+    UnsignedBytes.lexicographicalComparator().compare(x, y)"
  }, {
    "author": {
      "login": "adrian-wang"
    },
    "body": "use `SignedBytes.lexicographicalComparator().compare(x, y)` instead.\n",
    "commit": "73b9393d92b597554e9dccb8861b47699871a34d",
    "createdAt": "2015-08-21T06:10:08Z",
    "diffHunk": "@@ -62,10 +63,6 @@ object TypeUtils {\n   }\n \n   def compareBinary(x: Array[Byte], y: Array[Byte]): Int = {\n-    for (i <- 0 until x.length; if i < y.length) {\n-      val res = x(i).compareTo(y(i))\n-      if (res != 0) return res\n-    }\n-    x.length - y.length\n+    UnsignedBytes.lexicographicalComparator().compare(x, y)"
  }],
  "prId": 8335
}]