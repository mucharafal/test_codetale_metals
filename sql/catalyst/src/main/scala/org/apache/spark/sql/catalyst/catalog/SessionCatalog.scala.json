[{
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "To the other reviewers: this is moved to `SharedState.scala`. The default database is created once and shared by all the sessions. \n",
    "commit": "66874f05c8e7b95beab69d659c8d83f4b543ff17",
    "createdAt": "2016-11-11T22:32:01Z",
    "diffHunk": "@@ -83,14 +83,7 @@ class SessionCatalog(\n   // check whether the temporary table or function exists, then, if not, operate on\n   // the corresponding item in the current database.\n   @GuardedBy(\"this\")\n-  protected var currentDb = {\n-    val defaultName = DEFAULT_DATABASE\n-    val defaultDbDefinition =\n-      CatalogDatabase(defaultName, \"default database\", conf.warehousePath, Map())\n-    // Initialize default database if it doesn't already exist\n-    createDatabase(defaultDbDefinition, ignoreIfExists = true)\n-    formatDatabaseName(defaultName)\n-  }",
    "line": 11
  }],
  "prId": 15825
}, {
  "comments": [{
    "author": {
      "login": "gatorsmile"
    },
    "body": "It might be safer if we call `formatDatabaseName` like what we did before.\n\n``` Scala\nprotected var currentDb = formatDatabaseName (DEFAULT_DATABASE)\n```\n",
    "commit": "66874f05c8e7b95beab69d659c8d83f4b543ff17",
    "createdAt": "2016-11-11T22:34:58Z",
    "diffHunk": "@@ -83,14 +83,7 @@ class SessionCatalog(\n   // check whether the temporary table or function exists, then, if not, operate on\n   // the corresponding item in the current database.\n   @GuardedBy(\"this\")\n-  protected var currentDb = {\n-    val defaultName = DEFAULT_DATABASE\n-    val defaultDbDefinition =\n-      CatalogDatabase(defaultName, \"default database\", conf.warehousePath, Map())\n-    // Initialize default database if it doesn't already exist\n-    createDatabase(defaultDbDefinition, ignoreIfExists = true)\n-    formatDatabaseName(defaultName)\n-  }\n+  protected var currentDb = DEFAULT_DATABASE"
  }],
  "prId": 15825
}]