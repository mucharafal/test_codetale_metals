[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "this will fail on all places that use toArray in UnsafeArrayData right?\n",
    "commit": "3269bd779733706a73e388615eaffe8c39900655",
    "createdAt": "2015-07-29T18:44:40Z",
    "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.sql.catalyst.expressions.SpecializedGetters\n+\n+abstract class ArrayData extends SpecializedGetters with Serializable {\n+  // todo: remove this after we handle all types.(map type need special getter)\n+  def get(ordinal: Int): Any\n+\n+  def numElements(): Int\n+\n+  // todo: need a more efficient way to iterate array type.\n+  def toArray(): Array[Any] = {"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "we'll never call toArray in codegen.\n",
    "commit": "3269bd779733706a73e388615eaffe8c39900655",
    "createdAt": "2015-07-30T04:43:14Z",
    "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.sql.catalyst.expressions.SpecializedGetters\n+\n+abstract class ArrayData extends SpecializedGetters with Serializable {\n+  // todo: remove this after we handle all types.(map type need special getter)\n+  def get(ordinal: Int): Any\n+\n+  def numElements(): Int\n+\n+  // todo: need a more efficient way to iterate array type.\n+  def toArray(): Array[Any] = {"
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "OK the thing I'm worried about is fallback mode, and also I want to make it so unsaferow can be passed onto normal non-codegen/unsafe operators.\n",
    "commit": "3269bd779733706a73e388615eaffe8c39900655",
    "createdAt": "2015-07-30T04:45:03Z",
    "diffHunk": "@@ -0,0 +1,121 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.sql.catalyst.expressions.SpecializedGetters\n+\n+abstract class ArrayData extends SpecializedGetters with Serializable {\n+  // todo: remove this after we handle all types.(map type need special getter)\n+  def get(ordinal: Int): Any\n+\n+  def numElements(): Int\n+\n+  // todo: need a more efficient way to iterate array type.\n+  def toArray(): Array[Any] = {"
  }],
  "prId": 7752
}]