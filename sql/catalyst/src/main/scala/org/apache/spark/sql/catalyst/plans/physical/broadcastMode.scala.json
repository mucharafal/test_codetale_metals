[{
  "comments": [{
    "author": {
      "login": "nongli"
    },
    "body": "Can we consistently use the same terms. sameResult() vs compatibleWith(). Compatible with also means something a bit different to me than equals\n",
    "commit": "7cd6844bb405bfe66285a60b58cd583f86f1a2cb",
    "createdAt": "2016-03-04T23:48:38Z",
    "diffHunk": "@@ -25,6 +25,11 @@ import org.apache.spark.sql.catalyst.InternalRow\n  */\n trait BroadcastMode {\n   def transform(rows: Array[InternalRow]): Any\n+\n+  /**\n+   * Returns true iff this [[BroadcastMode]] generates the same result as `other`.\n+   */\n+  def compatibleWith(other: BroadcastMode): Boolean",
    "line": 8
  }, {
    "author": {
      "login": "davies"
    },
    "body": "`compatibleWith` is an API for partitioning, I borrowed here.\n",
    "commit": "7cd6844bb405bfe66285a60b58cd583f86f1a2cb",
    "createdAt": "2016-03-05T05:21:11Z",
    "diffHunk": "@@ -25,6 +25,11 @@ import org.apache.spark.sql.catalyst.InternalRow\n  */\n trait BroadcastMode {\n   def transform(rows: Array[InternalRow]): Any\n+\n+  /**\n+   * Returns true iff this [[BroadcastMode]] generates the same result as `other`.\n+   */\n+  def compatibleWith(other: BroadcastMode): Boolean",
    "line": 8
  }, {
    "author": {
      "login": "nongli"
    },
    "body": "compatibleWith is not iff and not valid here. partitioning is different since it doesn't have to be both ways.\n",
    "commit": "7cd6844bb405bfe66285a60b58cd583f86f1a2cb",
    "createdAt": "2016-03-07T18:32:29Z",
    "diffHunk": "@@ -25,6 +25,11 @@ import org.apache.spark.sql.catalyst.InternalRow\n  */\n trait BroadcastMode {\n   def transform(rows: Array[InternalRow]): Any\n+\n+  /**\n+   * Returns true iff this [[BroadcastMode]] generates the same result as `other`.\n+   */\n+  def compatibleWith(other: BroadcastMode): Boolean",
    "line": 8
  }, {
    "author": {
      "login": "JoshRosen"
    },
    "body": "Is the confusion here related to what it means for broadcast modes to generate the same result, i.e. whether \"same\" incorporates shape vs. logical contents?\n",
    "commit": "7cd6844bb405bfe66285a60b58cd583f86f1a2cb",
    "createdAt": "2016-03-08T22:10:35Z",
    "diffHunk": "@@ -25,6 +25,11 @@ import org.apache.spark.sql.catalyst.InternalRow\n  */\n trait BroadcastMode {\n   def transform(rows: Array[InternalRow]): Any\n+\n+  /**\n+   * Returns true iff this [[BroadcastMode]] generates the same result as `other`.\n+   */\n+  def compatibleWith(other: BroadcastMode): Boolean",
    "line": 8
  }, {
    "author": {
      "login": "davies"
    },
    "body": "After offline discussion with @nongli , we realize that the current one-way is actually better than two way `equals`, I will update docs.\n",
    "commit": "7cd6844bb405bfe66285a60b58cd583f86f1a2cb",
    "createdAt": "2016-03-08T22:40:40Z",
    "diffHunk": "@@ -25,6 +25,11 @@ import org.apache.spark.sql.catalyst.InternalRow\n  */\n trait BroadcastMode {\n   def transform(rows: Array[InternalRow]): Any\n+\n+  /**\n+   * Returns true iff this [[BroadcastMode]] generates the same result as `other`.\n+   */\n+  def compatibleWith(other: BroadcastMode): Boolean",
    "line": 8
  }, {
    "author": {
      "login": "davies"
    },
    "body": "We can't use sameResult here, because broadcast mode does not have the child plan, sameResult require to compare them recursively.\n",
    "commit": "7cd6844bb405bfe66285a60b58cd583f86f1a2cb",
    "createdAt": "2016-03-08T22:41:37Z",
    "diffHunk": "@@ -25,6 +25,11 @@ import org.apache.spark.sql.catalyst.InternalRow\n  */\n trait BroadcastMode {\n   def transform(rows: Array[InternalRow]): Any\n+\n+  /**\n+   * Returns true iff this [[BroadcastMode]] generates the same result as `other`.\n+   */\n+  def compatibleWith(other: BroadcastMode): Boolean",
    "line": 8
  }],
  "prId": 11403
}]