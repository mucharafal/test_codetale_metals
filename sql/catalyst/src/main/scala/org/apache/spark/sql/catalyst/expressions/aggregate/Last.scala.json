[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "ignoreNullsExpr.toSQL?",
    "commit": "5f8e3d00a5150e079f0aa93c4266a347cda8290e",
    "createdAt": "2016-11-29T21:10:11Z",
    "diffHunk": "@@ -56,6 +52,20 @@ case class Last(child: Expression, ignoreNullsExpr: Expression) extends Declarat\n   // Expected input data type.\n   override def inputTypes: Seq[AbstractDataType] = Seq(AnyDataType, BooleanType)\n \n+  override def checkInputDataTypes(): TypeCheckResult = {\n+    val defaultCheck = super.checkInputDataTypes()\n+    if (defaultCheck.isFailure) {\n+      defaultCheck\n+    } else if (!ignoreNullsExpr.foldable) {\n+      TypeCheckFailure(\n+        s\"The second argument of Last must be a boolean literal, but got: $ignoreNullsExpr\")"
  }],
  "prId": 16066
}]