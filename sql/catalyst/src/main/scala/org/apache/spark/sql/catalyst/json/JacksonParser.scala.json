[{
  "comments": [{
    "author": {
      "login": "yhuai"
    },
    "body": "Why do we need this exception?\n",
    "commit": "cb5ece70bc840820697fa73943bc28bd63c96b41",
    "createdAt": "2016-10-07T16:42:24Z",
    "diffHunk": "@@ -34,6 +34,8 @@ import org.apache.spark.util.Utils\n \n private[sql] class SparkSQLJsonProcessingException(msg: String) extends RuntimeException(msg)\n \n+private[sql] class NotAllowedNullException(msg: String) extends SparkSQLJsonProcessingException(msg)",
    "line": 4
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "I added this one to differentiate this case from other `SparkSQLJsonProcessingException`[1] because when it fails to parse due to not-allowed null, `permissive` parse `mode` is not allowed (because `permissive` mode virtually means allowing `null`s on other fields).\n\n[1]https://github.com/HyukjinKwon/spark/blob/cb5ece70bc840820697fa73943bc28bd63c96b41/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/json/JacksonParser.scala#L471-L474\n",
    "commit": "cb5ece70bc840820697fa73943bc28bd63c96b41",
    "createdAt": "2016-10-08T10:14:06Z",
    "diffHunk": "@@ -34,6 +34,8 @@ import org.apache.spark.util.Utils\n \n private[sql] class SparkSQLJsonProcessingException(msg: String) extends RuntimeException(msg)\n \n+private[sql] class NotAllowedNullException(msg: String) extends SparkSQLJsonProcessingException(msg)",
    "line": 4
  }],
  "prId": 15329
}, {
  "comments": [{
    "author": {
      "login": "yhuai"
    },
    "body": "Please explain why null is not allowed in the error message. Is it possible to know which field is not nullable? I am not sure if just printing the record is really helpful at here (considering users may often have long JSON records).\n",
    "commit": "cb5ece70bc840820697fa73943bc28bd63c96b41",
    "createdAt": "2016-10-07T16:43:46Z",
    "diffHunk": "@@ -114,6 +120,18 @@ class JacksonParser(\n     }\n   }\n \n+  private def failedRecord(record: String): Seq[InternalRow] = {\n+    if (options.dropMalformed) {\n+      if (!isWarningPrintedForMalformedRecord) {\n+        logWarning(dropmalformedModeWarningMessage(record))\n+        isWarningPrintedForMalformedRecord = true\n+      }\n+      Nil\n+    } else {\n+      throw new NotAllowedNullException(s\"Null not allowed: $record\")",
    "line": 97
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Sure, let me try to produce a better message.\n",
    "commit": "cb5ece70bc840820697fa73943bc28bd63c96b41",
    "createdAt": "2016-10-08T10:08:35Z",
    "diffHunk": "@@ -114,6 +120,18 @@ class JacksonParser(\n     }\n   }\n \n+  private def failedRecord(record: String): Seq[InternalRow] = {\n+    if (options.dropMalformed) {\n+      if (!isWarningPrintedForMalformedRecord) {\n+        logWarning(dropmalformedModeWarningMessage(record))\n+        isWarningPrintedForMalformedRecord = true\n+      }\n+      Nil\n+    } else {\n+      throw new NotAllowedNullException(s\"Null not allowed: $record\")",
    "line": 97
  }],
  "prId": 15329
}]