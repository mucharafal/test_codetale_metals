[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Can this be private?",
    "commit": "9e8fccabf1effa76b58527f6f061a2c8e525ab07",
    "createdAt": "2019-07-19T16:24:22Z",
    "diffHunk": "@@ -246,7 +247,16 @@ class CSVOptions(\n     lineSeparatorInRead.foreach { _ =>\n       settings.setNormalizeLineEndingsWithinQuotes(!multiLine)\n     }\n+    settings.setErrorContentLength(CSVOptions.maxErrorContentLength)\n \n     settings\n   }\n }\n+\n+object CSVOptions {"
  }],
  "prId": 25184
}, {
  "comments": [{
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "I think It's fine just to have one variable within `CSVOptions` class and use it, like `inputBufferSize`.",
    "commit": "9e8fccabf1effa76b58527f6f061a2c8e525ab07",
    "createdAt": "2019-07-20T06:24:24Z",
    "diffHunk": "@@ -246,7 +247,16 @@ class CSVOptions(\n     lineSeparatorInRead.foreach { _ =>\n       settings.setNormalizeLineEndingsWithinQuotes(!multiLine)\n     }\n+    settings.setErrorContentLength(CSVOptions.maxErrorContentLength)\n \n     settings\n   }\n }\n+\n+private[spark] object CSVOptions {\n+  /**\n+   * The max error content length in CSV parser/writer exception message.\n+   */\n+  val maxErrorContentLength = 1000"
  }],
  "prId": 25184
}]