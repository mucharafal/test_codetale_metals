[{
  "comments": [{
    "author": {
      "login": "brkyvz"
    },
    "body": "is this in milliseconds or microseconds like `timestamp` type?\n",
    "commit": "87d8618234a86d666a711a97080e2b014214b84a",
    "createdAt": "2016-11-01T15:59:51Z",
    "diffHunk": "@@ -292,11 +294,22 @@ case class AttributeReference(\n     }\n   }\n \n+  override def withMetadata(newMetadata: Metadata): Attribute = {\n+    AttributeReference(name, dataType, nullable, newMetadata)(exprId, qualifier, isGenerated)\n+  }\n+\n   override protected final def otherCopyArgs: Seq[AnyRef] = {\n     exprId :: qualifier :: isGenerated :: Nil\n   }\n \n-  override def toString: String = s\"$name#${exprId.id}$typeSuffix\"\n+  /** Used to signal the column used to calculate an eventTime watermark (e.g. a#1-T{delayMs}) */\n+  private def delaySuffix = if (metadata.contains(EventTimeWatermark.delayKey)) {\n+    s\"-T${metadata.getLong(EventTimeWatermark.delayKey)}\""
  }],
  "prId": 15702
}]