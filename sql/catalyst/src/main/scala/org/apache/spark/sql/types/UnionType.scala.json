[{
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "As we discussed offline, I think it would be better if we could break the addition of union types off into a different PR.\n",
    "commit": "7556d852bc4c525ad87f1c112c063ebdaececce3",
    "createdAt": "2015-07-28T21:34:15Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.annotation.DeveloperApi\n+\n+@DeveloperApi\n+case class UnionType(types: Seq[DataType]) extends DataType {"
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "Speaking as the person who wrote this code - I'm not against removing it from this PR, just note that one test doesn't work without this code (\"select from thrift based table\" in HiveQuerySuite). Which I think means that any thrift-based tables won't work without it.\n",
    "commit": "7556d852bc4c525ad87f1c112c063ebdaececce3",
    "createdAt": "2015-07-28T21:38:23Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.annotation.DeveloperApi\n+\n+@DeveloperApi\n+case class UnionType(types: Seq[DataType]) extends DataType {"
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "I see.  Instead of adding union type, could we just handle Union types with a single element? (is that is what is happening in that case?)\n",
    "commit": "7556d852bc4c525ad87f1c112c063ebdaececce3",
    "createdAt": "2015-07-28T21:40:47Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.annotation.DeveloperApi\n+\n+@DeveloperApi\n+case class UnionType(types: Seq[DataType]) extends DataType {"
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "Not really. From what I remember, the metadata for the table contains a properties map where the value is a union of all other types, so it's not just a single element (if I understand what you mean).\n",
    "commit": "7556d852bc4c525ad87f1c112c063ebdaececce3",
    "createdAt": "2015-07-28T21:46:15Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.annotation.DeveloperApi\n+\n+@DeveloperApi\n+case class UnionType(types: Seq[DataType]) extends DataType {"
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "I see, thanks for clarifying.  I think its okay to simplify that test to use only atomic types in that case.\n",
    "commit": "7556d852bc4c525ad87f1c112c063ebdaececce3",
    "createdAt": "2015-07-28T21:48:11Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.annotation.DeveloperApi\n+\n+@DeveloperApi\n+case class UnionType(types: Seq[DataType]) extends DataType {"
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "Hmm, note that the problem is not with the contents of the table, but with the table metadata.\n\n (In my original patch I forked Hive's `ComplexType.java` from an old version that didn't include any union columns. But I still needed `UnionType` to parse the table metadata in the first place.)\n",
    "commit": "7556d852bc4c525ad87f1c112c063ebdaececce3",
    "createdAt": "2015-07-28T21:50:10Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.annotation.DeveloperApi\n+\n+@DeveloperApi\n+case class UnionType(types: Seq[DataType]) extends DataType {"
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "Hmm... after looking at the hive code again, maybe I got confused in my testing. Forking the old version of `org/apache/hadoop/hive/serde2/thrift/test/Complex.java` might be enough to avoid needing to add support for union types.\n\n(Would be nice to test, though, to make sure. I'll check in my local branch.)\n",
    "commit": "7556d852bc4c525ad87f1c112c063ebdaececce3",
    "createdAt": "2015-07-28T21:55:09Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.annotation.DeveloperApi\n+\n+@DeveloperApi\n+case class UnionType(types: Seq[DataType]) extends DataType {"
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "Sure but we can either create a table/test with a simpler schema than `org.apache.hadoop.hive.serde2.thrift.test.Complex`  right?  Either that or we can just point users at spark-avro.\n",
    "commit": "7556d852bc4c525ad87f1c112c063ebdaececce3",
    "createdAt": "2015-07-28T21:55:30Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.annotation.DeveloperApi\n+\n+@DeveloperApi\n+case class UnionType(types: Seq[DataType]) extends DataType {"
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "> we can either create a table/test with a simpler schema\n\nYes, but isn't the goal here to test support for the thrift serdes? Writing a non-thrift type defeats that. And writing a different thrift type means you'd have to generate new data (`sql/hive/src/test/resources/data/files/complex.seq`). Not an insurmountable problem, but forking `Complex.java` from Hive 0.13 is not horrible either.\n",
    "commit": "7556d852bc4c525ad87f1c112c063ebdaececce3",
    "createdAt": "2015-07-28T21:59:44Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.annotation.DeveloperApi\n+\n+@DeveloperApi\n+case class UnionType(types: Seq[DataType]) extends DataType {"
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "Sorry, I don't know how i got thrift/avro mixed up... duh\n\nIf there is any easy path where we just fork `Complex.java` that sounds good to me too.\n",
    "commit": "7556d852bc4c525ad87f1c112c063ebdaececce3",
    "createdAt": "2015-07-28T22:04:46Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.annotation.DeveloperApi\n+\n+@DeveloperApi\n+case class UnionType(types: Seq[DataType]) extends DataType {"
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "Just ran HiveQueryTest without `UnionType` and it passes. All that is needed is to fork `Complex.java` and change `TestHive.scala` to use it (I changed the package name in my fork).\n",
    "commit": "7556d852bc4c525ad87f1c112c063ebdaececce3",
    "createdAt": "2015-07-28T22:10:24Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.annotation.DeveloperApi\n+\n+@DeveloperApi\n+case class UnionType(types: Seq[DataType]) extends DataType {"
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "Awesome!\n",
    "commit": "7556d852bc4c525ad87f1c112c063ebdaececce3",
    "createdAt": "2015-07-28T22:11:41Z",
    "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.types\n+\n+import org.apache.spark.annotation.DeveloperApi\n+\n+@DeveloperApi\n+case class UnionType(types: Seq[DataType]) extends DataType {"
  }],
  "prId": 7191
}]