[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Why allow epsilon error in this argument? ",
    "commit": "c5119fecc05e71d4983c8f6e1f8ae520076811e2",
    "createdAt": "2017-06-22T08:27:07Z",
    "diffHunk": "@@ -817,6 +818,18 @@ case class Sample(\n     child: LogicalPlan)(\n     val isTableSample: java.lang.Boolean = false) extends UnaryNode {\n \n+  val eps = RandomSampler.roundingEpsilon",
    "line": 12
  }, {
    "author": {
      "login": "gengliangwang"
    },
    "body": "just follow the way RandomSampler.scala handles floating numbers: \"epsilon slop to avoid failure from floating point jitter\"",
    "commit": "c5119fecc05e71d4983c8f6e1f8ae520076811e2",
    "createdAt": "2017-06-22T08:40:12Z",
    "diffHunk": "@@ -817,6 +818,18 @@ case class Sample(\n     child: LogicalPlan)(\n     val isTableSample: java.lang.Boolean = false) extends UnaryNode {\n \n+  val eps = RandomSampler.roundingEpsilon",
    "line": 12
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "OK. I'm not sure the same issue applies here because the bounds aren't being generated programmatically. This would just be an argument from user code directly right?",
    "commit": "c5119fecc05e71d4983c8f6e1f8ae520076811e2",
    "createdAt": "2017-06-22T10:06:37Z",
    "diffHunk": "@@ -817,6 +818,18 @@ case class Sample(\n     child: LogicalPlan)(\n     val isTableSample: java.lang.Boolean = false) extends UnaryNode {\n \n+  val eps = RandomSampler.roundingEpsilon",
    "line": 12
  }, {
    "author": {
      "login": "gengliangwang"
    },
    "body": "I think the bounds can be generated programmatically in users' code. Any number within [0-eps, 1+eps] can be handled by RandomSampler. Also, AstBuilder.scala use eps for fraction validation as well.\r\nHandling machine epsilon is better in such case, and consistent with Ast Builder.",
    "commit": "c5119fecc05e71d4983c8f6e1f8ae520076811e2",
    "createdAt": "2017-06-22T17:19:44Z",
    "diffHunk": "@@ -817,6 +818,18 @@ case class Sample(\n     child: LogicalPlan)(\n     val isTableSample: java.lang.Boolean = false) extends UnaryNode {\n \n+  val eps = RandomSampler.roundingEpsilon",
    "line": 12
  }],
  "prId": 18387
}]