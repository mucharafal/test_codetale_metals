[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "as we are cleaning up the code, shall we also remove `IntegerIndex`? It became unnecessary after we make `-1` a literal instead of `UnaryMinus`.\n",
    "commit": "2eb02c178fefe906e01ab4a98283de2c8a0fcc36",
    "createdAt": "2016-08-18T05:21:00Z",
    "diffHunk": "@@ -27,22 +27,21 @@ import org.apache.spark.sql.catalyst.trees.CurrentOrigin.withOrigin\n /**\n  * Replaces ordinal in 'order by' or 'group by' with UnresolvedOrdinal expression.\n  */\n-class UnresolvedOrdinalSubstitution(conf: CatalystConf) extends Rule[LogicalPlan] {\n-  private def isIntegerLiteral(sorter: Expression) = IntegerIndex.unapply(sorter).nonEmpty\n+class SubstituteUnresolvedOrdinals(conf: CatalystConf) extends Rule[LogicalPlan] {\n+  private def isIntLiteral(sorter: Expression) = IntegerIndex.unapply(sorter).nonEmpty"
  }, {
    "author": {
      "login": "petermaxlee"
    },
    "body": "Good idea. I remove IntegerIndex.\n",
    "commit": "2eb02c178fefe906e01ab4a98283de2c8a0fcc36",
    "createdAt": "2016-08-18T06:02:39Z",
    "diffHunk": "@@ -27,22 +27,21 @@ import org.apache.spark.sql.catalyst.trees.CurrentOrigin.withOrigin\n /**\n  * Replaces ordinal in 'order by' or 'group by' with UnresolvedOrdinal expression.\n  */\n-class UnresolvedOrdinalSubstitution(conf: CatalystConf) extends Rule[LogicalPlan] {\n-  private def isIntegerLiteral(sorter: Expression) = IntegerIndex.unapply(sorter).nonEmpty\n+class SubstituteUnresolvedOrdinals(conf: CatalystConf) extends Rule[LogicalPlan] {\n+  private def isIntLiteral(sorter: Expression) = IntegerIndex.unapply(sorter).nonEmpty"
  }],
  "prId": 14672
}]