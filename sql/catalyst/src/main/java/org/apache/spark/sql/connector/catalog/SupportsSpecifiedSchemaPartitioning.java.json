[{
  "comments": [{
    "author": {
      "login": "rdblue"
    },
    "body": "Why is this a mix-in? This is required for a `TableProvider` to be used by any generic catalog implementation, so I think it should be a requirement of `TableProvider` itself.",
    "commit": "cfbe0a75f80e88d4a5831785d05fb9b708c5ada3",
    "createdAt": "2019-09-25T21:02:42Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.connector.catalog;\n+\n+import java.util.Map;\n+\n+import org.apache.spark.annotation.Evolving;\n+import org.apache.spark.sql.connector.expressions.Transform;\n+import org.apache.spark.sql.types.StructType;\n+import org.apache.spark.sql.util.CaseInsensitiveStringMap;\n+\n+/**\n+ * A mix-in interface for {@link TableProvider}. Data sources can implement this interface to\n+ * return a table instance with specified schema and partitioning, so that they may avoid expensive\n+ * schema/partitioning inference."
  }],
  "prId": 25651
}]