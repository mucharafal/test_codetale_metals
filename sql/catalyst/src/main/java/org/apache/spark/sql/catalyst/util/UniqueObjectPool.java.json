[{
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "Minor style nit: should only be one space after `private`.\n",
    "commit": "5ce39daa699ec8ca5897c577df1cda023af23a2a",
    "createdAt": "2015-06-29T21:45:54Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util;\n+\n+import java.util.HashMap;\n+\n+/**\n+ * An unique object pool stores a collection of unique objects in it.\n+ */\n+public class UniqueObjectPool extends ObjectPool {\n+\n+  /**\n+   * A hash map from objects to their indexes in the array.\n+   */\n+  private  HashMap<Object, Integer> objIndex;"
  }, {
    "author": {
      "login": "JoshRosen"
    },
    "body": "It looks like this is an append-only map where entries are immutable, so we might be able to use core's `AppendOnlyMap` for this instead.  OTOH, AppendOnlyMap doesn't cache hashCode values and this map does.  Probably fine to leave as is.\n",
    "commit": "5ce39daa699ec8ca5897c577df1cda023af23a2a",
    "createdAt": "2015-06-29T21:48:43Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.util;\n+\n+import java.util.HashMap;\n+\n+/**\n+ * An unique object pool stores a collection of unique objects in it.\n+ */\n+public class UniqueObjectPool extends ObjectPool {\n+\n+  /**\n+   * A hash map from objects to their indexes in the array.\n+   */\n+  private  HashMap<Object, Integer> objIndex;"
  }],
  "prId": 6959
}]