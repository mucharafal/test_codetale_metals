[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "an issue with using the sql.catalog namespace is that it is not clear this is a \"source\" or \"connector\". In general, I think we should have separate API packages for library / data source developers vs end users. We already use sql.catalog for end user facing catalog functionalities.\r\n",
    "commit": "a4a87ac7582688e883e42980d95126dd05166c64",
    "createdAt": "2019-04-02T00:29:49Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalog.v2.expressions;",
    "line": 18
  }, {
    "author": {
      "login": "rdblue"
    },
    "body": "How about `org.apache.spark.sql.logical.expressions` then? It doesn't matter to me.",
    "commit": "a4a87ac7582688e883e42980d95126dd05166c64",
    "createdAt": "2019-04-02T15:53:22Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalog.v2.expressions;",
    "line": 18
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "i think it is better to create a namespace for data sources (or connectors). as an example:\r\n\r\norg.apache.spark.sql.sources\r\n\r\nor\r\n\r\norg.apache.spark.sql.connectors\r\n\r\nand within it you have \r\n\r\ncatalog\r\n\r\nand\r\n\r\ntable ?\r\n\r\n",
    "commit": "a4a87ac7582688e883e42980d95126dd05166c64",
    "createdAt": "2019-04-02T21:39:03Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalog.v2.expressions;",
    "line": 18
  }, {
    "author": {
      "login": "rdblue"
    },
    "body": "It sounds like you're suggesting a larger reorganization than just where the expressions go. Let's discuss this at tonight's sync.",
    "commit": "a4a87ac7582688e883e42980d95126dd05166c64",
    "createdAt": "2019-04-03T18:03:07Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalog.v2.expressions;",
    "line": 18
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "I like the `org.apache.spark.sql.connectors` packge, but moving classes will cause code conflict for all the DS v2 PRs. Maybe do it latter?",
    "commit": "a4a87ac7582688e883e42980d95126dd05166c64",
    "createdAt": "2019-04-04T01:02:44Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalog.v2.expressions;",
    "line": 18
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "When are we going to do this?",
    "commit": "a4a87ac7582688e883e42980d95126dd05166c64",
    "createdAt": "2019-04-15T23:18:29Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalog.v2.expressions;",
    "line": 18
  }, {
    "author": {
      "login": "rdblue"
    },
    "body": "First, we have to decide on what all we need to move. I don't think that is clear yet. The next concern is getting #24246 in because it is a blocker for a lot of work that can be done in parallel. After that, it would be nice to coordinate to avoid breaking lots of PRs, but that's less of a concern.\r\n\r\nSo to answer your question, I think we should do this after #24246 and after we've decided what needs to move and what the new organization should be.\r\n\r\nThe actual changes should be simple and quick to review, but would cause too much delay combined into a PR with other changes.",
    "commit": "a4a87ac7582688e883e42980d95126dd05166c64",
    "createdAt": "2019-04-15T23:47:57Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalog.v2.expressions;",
    "line": 18
  }],
  "prId": 24117
}, {
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "why not toSQL?",
    "commit": "a4a87ac7582688e883e42980d95126dd05166c64",
    "createdAt": "2019-04-02T00:30:09Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalog.v2.expressions;\n+\n+import org.apache.spark.annotation.Experimental;\n+\n+/**\n+ * Base class of the public logical expression API.\n+ */\n+@Experimental\n+public interface Expression {\n+  /**\n+   * Format the expression as a human readable SQL-like string.\n+   */\n+  String describe();",
    "line": 30
  }, {
    "author": {
      "login": "rdblue"
    },
    "body": "I didn't want to require that implementations of `Expression` produce SQL that can be parsed. Spark should do that to ensure it is reliable when Spark needs to embed these in SQL strings. But it is good to have readable a string representation.\r\n\r\nI can change this to `toSQL` if you think that implementations will be able to produce reliable SQL strings.",
    "commit": "a4a87ac7582688e883e42980d95126dd05166c64",
    "createdAt": "2019-04-02T15:57:03Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalog.v2.expressions;\n+\n+import org.apache.spark.annotation.Experimental;\n+\n+/**\n+ * Base class of the public logical expression API.\n+ */\n+@Experimental\n+public interface Expression {\n+  /**\n+   * Format the expression as a human readable SQL-like string.\n+   */\n+  String describe();",
    "line": 30
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "Only Spark internally will do this right? If that's the case, we should just make it clear it will be SQL strings.",
    "commit": "a4a87ac7582688e883e42980d95126dd05166c64",
    "createdAt": "2019-04-02T21:39:28Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalog.v2.expressions;\n+\n+import org.apache.spark.annotation.Experimental;\n+\n+/**\n+ * Base class of the public logical expression API.\n+ */\n+@Experimental\n+public interface Expression {\n+  /**\n+   * Format the expression as a human readable SQL-like string.\n+   */\n+  String describe();",
    "line": 30
  }, {
    "author": {
      "login": "rdblue"
    },
    "body": "What do you mean by \"do this\"?\r\n\r\n`Transform` is a public API that can be implemented to pass transforms into Spark. I don't think we can avoid that. As a result, Spark should produce the SQL representation itself using the transform name and arguments.",
    "commit": "a4a87ac7582688e883e42980d95126dd05166c64",
    "createdAt": "2019-04-03T17:48:09Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalog.v2.expressions;\n+\n+import org.apache.spark.annotation.Experimental;\n+\n+/**\n+ * Base class of the public logical expression API.\n+ */\n+@Experimental\n+public interface Expression {\n+  /**\n+   * Format the expression as a human readable SQL-like string.\n+   */\n+  String describe();",
    "line": 30
  }, {
    "author": {
      "login": "rdblue"
    },
    "body": "Alternatively, we could add a helper that does the formatting and remove this from the API entirely.",
    "commit": "a4a87ac7582688e883e42980d95126dd05166c64",
    "createdAt": "2019-04-03T18:01:25Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalog.v2.expressions;\n+\n+import org.apache.spark.annotation.Experimental;\n+\n+/**\n+ * Base class of the public logical expression API.\n+ */\n+@Experimental\n+public interface Expression {\n+  /**\n+   * Format the expression as a human readable SQL-like string.\n+   */\n+  String describe();",
    "line": 30
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "I prefer toSQL, given it will basically be toSQL, and it'd be useful to enforce this across the board.\r\n",
    "commit": "a4a87ac7582688e883e42980d95126dd05166c64",
    "createdAt": "2019-04-15T23:18:56Z",
    "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalog.v2.expressions;\n+\n+import org.apache.spark.annotation.Experimental;\n+\n+/**\n+ * Base class of the public logical expression API.\n+ */\n+@Experimental\n+public interface Expression {\n+  /**\n+   * Format the expression as a human readable SQL-like string.\n+   */\n+  String describe();",
    "line": 30
  }],
  "prId": 24117
}]