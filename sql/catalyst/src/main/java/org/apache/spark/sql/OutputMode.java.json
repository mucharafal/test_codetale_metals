[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "add docs\n",
    "commit": "e951798bf4511cabc08d242e7f1a3d7d1e653263",
    "createdAt": "2016-05-26T23:34:33Z",
    "diffHunk": "@@ -0,0 +1,29 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql;\n+\n+public class OutputMode {"
  }],
  "prId": 13286
}, {
  "comments": [{
    "author": {
      "login": "marmbrus"
    },
    "body": "This doesn't have to be in `java`, see [Encoders.scala](https://github.com/apache/spark/blob/master/sql/catalyst/src/main/scala/org/apache/spark/sql/Encoders.scala)\n",
    "commit": "e951798bf4511cabc08d242e7f1a3d7d1e653263",
    "createdAt": "2016-05-27T20:25:55Z",
    "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql;\n+\n+import org.apache.spark.annotation.Experimental;\n+\n+/**\n+ * :: Experimental ::\n+ *\n+ * OutputMode is used to what data will be written to a streaming sink when there is\n+ * new data available in a streaming DataFrame/Dataset.\n+ *\n+ * @since 2.0.0\n+ */\n+@Experimental\n+public class OutputMode {",
    "line": 31
  }, {
    "author": {
      "login": "tdas"
    },
    "body": "Sure. Just wanted to be extra-cautious for java-safety.\n",
    "commit": "e951798bf4511cabc08d242e7f1a3d7d1e653263",
    "createdAt": "2016-05-27T21:13:28Z",
    "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql;\n+\n+import org.apache.spark.annotation.Experimental;\n+\n+/**\n+ * :: Experimental ::\n+ *\n+ * OutputMode is used to what data will be written to a streaming sink when there is\n+ * new data available in a streaming DataFrame/Dataset.\n+ *\n+ * @since 2.0.0\n+ */\n+@Experimental\n+public class OutputMode {",
    "line": 31
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "But there are no tests written in java :)\n",
    "commit": "e951798bf4511cabc08d242e7f1a3d7d1e653263",
    "createdAt": "2016-05-27T21:18:46Z",
    "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql;\n+\n+import org.apache.spark.annotation.Experimental;\n+\n+/**\n+ * :: Experimental ::\n+ *\n+ * OutputMode is used to what data will be written to a streaming sink when there is\n+ * new data available in a streaming DataFrame/Dataset.\n+ *\n+ * @since 2.0.0\n+ */\n+@Experimental\n+public class OutputMode {",
    "line": 31
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "one downside of writing this in java is that it doesn't show up in scaladocs\n",
    "commit": "e951798bf4511cabc08d242e7f1a3d7d1e653263",
    "createdAt": "2016-05-27T21:23:39Z",
    "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql;\n+\n+import org.apache.spark.annotation.Experimental;\n+\n+/**\n+ * :: Experimental ::\n+ *\n+ * OutputMode is used to what data will be written to a streaming sink when there is\n+ * new data available in a streaming DataFrame/Dataset.\n+ *\n+ * @since 2.0.0\n+ */\n+@Experimental\n+public class OutputMode {",
    "line": 31
  }, {
    "author": {
      "login": "tdas"
    },
    "body": "We also need a trait OutputMode that InternalOutputModes.Append will extend. Should that be a Scala trait or Java interface?\n",
    "commit": "e951798bf4511cabc08d242e7f1a3d7d1e653263",
    "createdAt": "2016-05-27T22:58:30Z",
    "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql;\n+\n+import org.apache.spark.annotation.Experimental;\n+\n+/**\n+ * :: Experimental ::\n+ *\n+ * OutputMode is used to what data will be written to a streaming sink when there is\n+ * new data available in a streaming DataFrame/Dataset.\n+ *\n+ * @since 2.0.0\n+ */\n+@Experimental\n+public class OutputMode {",
    "line": 31
  }, {
    "author": {
      "login": "marmbrus"
    },
    "body": "I believe they are equivalent when there are no implemented methods.\n",
    "commit": "e951798bf4511cabc08d242e7f1a3d7d1e653263",
    "createdAt": "2016-05-27T23:00:37Z",
    "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql;\n+\n+import org.apache.spark.annotation.Experimental;\n+\n+/**\n+ * :: Experimental ::\n+ *\n+ * OutputMode is used to what data will be written to a streaming sink when there is\n+ * new data available in a streaming DataFrame/Dataset.\n+ *\n+ * @since 2.0.0\n+ */\n+@Experimental\n+public class OutputMode {",
    "line": 31
  }, {
    "author": {
      "login": "tdas"
    },
    "body": "Okay, writing it in Scala does not work because we need define  static methods on OutputMode ('Append()', etc.) as well as the OutputMode interface that singleton object Append will extend. To do this in Scala we have to do \n\n```\ntrait OutputMode\nobject OutputMode {\n   def Append(): OutputMode = ???\n}\n```\n\nBut this makes the OutputMode static object unusable from Java, as you will have to call `OutputMode$.MODULE$.Append()`. \n\nSo doing this in Java is the cleanest way for it to be usable in both Java and Scala. I am including a JavaOutputModeSuite as well. \n",
    "commit": "e951798bf4511cabc08d242e7f1a3d7d1e653263",
    "createdAt": "2016-05-28T00:29:00Z",
    "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql;\n+\n+import org.apache.spark.annotation.Experimental;\n+\n+/**\n+ * :: Experimental ::\n+ *\n+ * OutputMode is used to what data will be written to a streaming sink when there is\n+ * new data available in a streaming DataFrame/Dataset.\n+ *\n+ * @since 2.0.0\n+ */\n+@Experimental\n+public class OutputMode {",
    "line": 31
  }],
  "prId": 13286
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "See https://github.com/apache/spark/pull/13464 -- this fails Java lint. Can this be `append()` as would be conventional in Java? I don't see that it's there to implement some interface\n",
    "commit": "e951798bf4511cabc08d242e7f1a3d7d1e653263",
    "createdAt": "2016-06-02T16:04:36Z",
    "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql;\n+\n+import org.apache.spark.annotation.Experimental;\n+\n+/**\n+ * :: Experimental ::\n+ *\n+ * OutputMode is used to what data will be written to a streaming sink when there is\n+ * new data available in a streaming DataFrame/Dataset.\n+ *\n+ * @since 2.0.0\n+ */\n+@Experimental\n+public class OutputMode {\n+\n+  /**\n+   * OutputMode in which only the new rows in the streaming DataFrame/Dataset will be\n+   * written to the sink. This output mode can be only be used in queries that do not\n+   * contain any aggregation.\n+   *\n+   * @since 2.0.0\n+   */\n+  public static OutputMode Append() {",
    "line": 40
  }],
  "prId": 13286
}]