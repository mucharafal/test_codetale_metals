[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "why add `8` here?",
    "commit": "cc467de59a5cb7de0e8bdf3421e4a019b31feaff",
    "createdAt": "2017-07-05T02:34:55Z",
    "diffHunk": "@@ -62,7 +62,7 @@ public UnsafeRow appendRow(Object kbase, long koff, int klen,\n \n     keyRowId = numRows;\n     keyRow.pointTo(base, recordOffset, klen);\n-    valueRow.pointTo(base, recordOffset + klen, vlen + 4);\n+    valueRow.pointTo(base, recordOffset + klen, vlen + 8);"
  }, {
    "author": {
      "login": "kiszk"
    },
    "body": "Line 59 puts long value whose length is 8. In summary, line 57 and 59 consumes `vlen + 8` bytes from `base + recordOffset+ klen`.",
    "commit": "cc467de59a5cb7de0e8bdf3421e4a019b31feaff",
    "createdAt": "2017-07-05T02:48:08Z",
    "diffHunk": "@@ -62,7 +62,7 @@ public UnsafeRow appendRow(Object kbase, long koff, int klen,\n \n     keyRowId = numRows;\n     keyRow.pointTo(base, recordOffset, klen);\n-    valueRow.pointTo(base, recordOffset + klen, vlen + 4);\n+    valueRow.pointTo(base, recordOffset + klen, vlen + 8);"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "strictly speaking, the final long value doesn't belong to value row, why are we doing so?",
    "commit": "cc467de59a5cb7de0e8bdf3421e4a019b31feaff",
    "createdAt": "2017-07-05T02:54:01Z",
    "diffHunk": "@@ -62,7 +62,7 @@ public UnsafeRow appendRow(Object kbase, long koff, int klen,\n \n     keyRowId = numRows;\n     keyRow.pointTo(base, recordOffset, klen);\n-    valueRow.pointTo(base, recordOffset + klen, vlen + 4);\n+    valueRow.pointTo(base, recordOffset + klen, vlen + 8);"
  }, {
    "author": {
      "login": "kiszk"
    },
    "body": "Good catch. While `Long` consumes 8 bytes in a page, this is not a part of `UnsafeRow`.",
    "commit": "cc467de59a5cb7de0e8bdf3421e4a019b31feaff",
    "createdAt": "2017-07-05T08:00:42Z",
    "diffHunk": "@@ -62,7 +62,7 @@ public UnsafeRow appendRow(Object kbase, long koff, int klen,\n \n     keyRowId = numRows;\n     keyRow.pointTo(base, recordOffset, klen);\n-    valueRow.pointTo(base, recordOffset + klen, vlen + 4);\n+    valueRow.pointTo(base, recordOffset + klen, vlen + 8);"
  }],
  "prId": 18503
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "I'm wondering why we did this before. Was it a mistake?",
    "commit": "cc467de59a5cb7de0e8bdf3421e4a019b31feaff",
    "createdAt": "2017-07-05T13:09:25Z",
    "diffHunk": "@@ -62,7 +62,7 @@ public UnsafeRow appendRow(Object kbase, long koff, int klen,\n \n     keyRowId = numRows;\n     keyRow.pointTo(base, recordOffset, klen);\n-    valueRow.pointTo(base, recordOffset + klen, vlen + 4);",
    "line": 4
  }, {
    "author": {
      "login": "kiszk"
    },
    "body": "I have the same question.\r\n@sameeragarwal had [similar question](https://github.com/apache/spark/pull/14174#r71253933) one year ago. However, no response from @ooq ",
    "commit": "cc467de59a5cb7de0e8bdf3421e4a019b31feaff",
    "createdAt": "2017-07-05T14:27:21Z",
    "diffHunk": "@@ -62,7 +62,7 @@ public UnsafeRow appendRow(Object kbase, long koff, int klen,\n \n     keyRowId = numRows;\n     keyRow.pointTo(base, recordOffset, klen);\n-    valueRow.pointTo(base, recordOffset + klen, vlen + 4);",
    "line": 4
  }, {
    "author": {
      "login": "ooq"
    },
    "body": "I recall it being intentional. \r\nSee discussion [here](https://github.com/apache/spark/pull/14174#discussion-diff-71254165).",
    "commit": "cc467de59a5cb7de0e8bdf3421e4a019b31feaff",
    "createdAt": "2017-07-06T19:20:38Z",
    "diffHunk": "@@ -62,7 +62,7 @@ public UnsafeRow appendRow(Object kbase, long koff, int klen,\n \n     keyRowId = numRows;\n     keyRow.pointTo(base, recordOffset, klen);\n-    valueRow.pointTo(base, recordOffset + klen, vlen + 4);",
    "line": 4
  }, {
    "author": {
      "login": "kiszk"
    },
    "body": "@ooq thank you for pointing out interesting discussion.\r\nThis discussion seems to make sense for page management. The question of @cloud-fan and me is whether `valueRow` uses only `vlen`. I think that `+4` is for page management.\r\n",
    "commit": "cc467de59a5cb7de0e8bdf3421e4a019b31feaff",
    "createdAt": "2017-07-07T06:31:32Z",
    "diffHunk": "@@ -62,7 +62,7 @@ public UnsafeRow appendRow(Object kbase, long koff, int klen,\n \n     keyRowId = numRows;\n     keyRow.pointTo(base, recordOffset, klen);\n-    valueRow.pointTo(base, recordOffset + klen, vlen + 4);",
    "line": 4
  }],
  "prId": 18503
}]