[{
  "comments": [{
    "author": {
      "login": "rxin"
    },
    "body": "you can write the test suites in scala -- it tends to simplify the code.\n",
    "commit": "33978cbc533f4948a77f983f1f3fc1ac75dedeac",
    "createdAt": "2016-07-27T01:07:20Z",
    "diffHunk": "@@ -0,0 +1,185 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.catalyst.expressions;\n+\n+import org.apache.spark.memory.TaskMemoryManager;\n+import org.apache.spark.sql.types.*;\n+import org.apache.spark.unsafe.Platform;\n+\n+/**\n+ * An implementation of `RowBasedKeyValueBatch` in which key-value records have variable lengths.\n+ *\n+ *  The format for each record looks like this:\n+ * [4 bytes total size = (klen + vlen + 4)] [4 bytes key size = klen]\n+ * [UnsafeRow for key of length klen] [UnsafeRow for Value of length vlen]\n+ * [8 bytes pointer to next]\n+ * Thus, record length = 4 + 4 + klen + vlen + 8\n+ */\n+public final class VariableLengthRowBasedKeyValueBatch extends RowBasedKeyValueBatch {",
    "line": 32
  }],
  "prId": 14349
}]