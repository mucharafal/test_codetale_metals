[{
  "comments": [{
    "author": {
      "login": "imback82"
    },
    "body": "@cloud-fan is this downcasting in line with what you were thinking?",
    "commit": "84856190f5bf7f7865ce3428986cca61471c9845",
    "createdAt": "2019-09-18T07:05:38Z",
    "diffHunk": "@@ -52,22 +53,22 @@ public final void initialize(String name, CaseInsensitiveStringMap options) {}\n \n   @Override\n   public Identifier[] listTables(String[] namespace) throws NoSuchNamespaceException {\n-    return delegate.listTables(namespace);\n+    return ((TableCatalog)delegate).listTables(namespace);"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "this works. One suggestion to make the code look better:\r\n```\r\nprivate TableCatalog asTableCatalog() {\r\n  return (TableCatalog)delegate;\r\n}\r\n```\r\nand here can be `asTableCatalog().listTables(namespace)`. We can do the same for `asNamespaceCatalog`.",
    "commit": "84856190f5bf7f7865ce3428986cca61471c9845",
    "createdAt": "2019-09-18T07:32:44Z",
    "diffHunk": "@@ -52,22 +53,22 @@ public final void initialize(String name, CaseInsensitiveStringMap options) {}\n \n   @Override\n   public Identifier[] listTables(String[] namespace) throws NoSuchNamespaceException {\n-    return delegate.listTables(namespace);\n+    return ((TableCatalog)delegate).listTables(namespace);"
  }],
  "prId": 25771
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "nit: this one is left behind.",
    "commit": "84856190f5bf7f7865ce3428986cca61471c9845",
    "createdAt": "2019-09-19T02:23:17Z",
    "diffHunk": "@@ -76,25 +77,78 @@ public Table createTable(\n       StructType schema,\n       Transform[] partitions,\n       Map<String, String> properties) throws TableAlreadyExistsException, NoSuchNamespaceException {\n-    return delegate.createTable(ident, schema, partitions, properties);\n+    return asTableCatalog().createTable(ident, schema, partitions, properties);\n   }\n \n   @Override\n   public Table alterTable(\n       Identifier ident,\n       TableChange... changes) throws NoSuchTableException {\n-    return delegate.alterTable(ident, changes);\n+    return asTableCatalog().alterTable(ident, changes);\n   }\n \n   @Override\n   public boolean dropTable(Identifier ident) {\n-    return delegate.dropTable(ident);\n+    return asTableCatalog().dropTable(ident);\n   }\n \n   @Override\n   public void renameTable(\n       Identifier oldIdent,\n       Identifier newIdent) throws NoSuchTableException, TableAlreadyExistsException {\n-    delegate.renameTable(oldIdent, newIdent);\n+    asTableCatalog().renameTable(oldIdent, newIdent);\n+  }\n+\n+  @Override\n+  public String[] defaultNamespace() {\n+    return asNamespaceCatalog().defaultNamespace();\n+  }\n+\n+  @Override\n+  public String[][] listNamespaces() throws NoSuchNamespaceException {\n+    return asNamespaceCatalog().listNamespaces();\n+  }\n+\n+  @Override\n+  public String[][] listNamespaces(String[] namespace) throws NoSuchNamespaceException {\n+    return asNamespaceCatalog().listNamespaces(namespace);\n+  }\n+\n+  @Override\n+  public boolean namespaceExists(String[] namespace) {\n+    return asNamespaceCatalog().namespaceExists(namespace);\n+  }\n+\n+  @Override\n+  public Map<String, String> loadNamespaceMetadata(\n+      String[] namespace) throws NoSuchNamespaceException {\n+    return asNamespaceCatalog().loadNamespaceMetadata(namespace);\n+  }\n+\n+  @Override\n+  public void createNamespace(\n+      String[] namespace,\n+      Map<String, String> metadata) throws NamespaceAlreadyExistsException {\n+    asNamespaceCatalog().createNamespace(namespace, metadata);\n+  }\n+\n+  @Override\n+  public void alterNamespace(\n+      String[] namespace,\n+      NamespaceChange... changes) throws NoSuchNamespaceException {\n+    asNamespaceCatalog().alterNamespace(namespace, changes);\n+  }\n+\n+  @Override\n+  public boolean dropNamespace(String[] namespace) throws NoSuchNamespaceException {\n+    return ((SupportsNamespaces)delegate).dropNamespace(namespace);"
  }],
  "prId": 25771
}]