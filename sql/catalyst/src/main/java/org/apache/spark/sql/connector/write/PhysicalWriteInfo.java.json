[{
  "comments": [{
    "author": {
      "login": "edrevo"
    },
    "body": "Is this the correct annotation for the new interfaces I'm adding?",
    "commit": "118d81f561ffc1837a065cfa5e8f53e5ace7c987",
    "createdAt": "2019-11-15T07:24:47Z",
    "diffHunk": "@@ -0,0 +1,17 @@\n+package org.apache.spark.sql.connector.write;\n+\n+import org.apache.spark.annotation.Experimental;\n+import org.apache.spark.sql.connector.write.streaming.StreamingDataWriterFactory;\n+\n+/**\n+ * :: Experimental ::\n+ * This interface contains physical (i.e. RDD) write information that data sources can use when generating a\n+ * {@link DataWriterFactory} or a {@link StreamingDataWriterFactory}.\n+ */\n+@Experimental"
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "we shall use `@Evolving`",
    "commit": "118d81f561ffc1837a065cfa5e8f53e5ace7c987",
    "createdAt": "2019-11-15T07:33:20Z",
    "diffHunk": "@@ -0,0 +1,17 @@\n+package org.apache.spark.sql.connector.write;\n+\n+import org.apache.spark.annotation.Experimental;\n+import org.apache.spark.sql.connector.write.streaming.StreamingDataWriterFactory;\n+\n+/**\n+ * :: Experimental ::\n+ * This interface contains physical (i.e. RDD) write information that data sources can use when generating a\n+ * {@link DataWriterFactory} or a {@link StreamingDataWriterFactory}.\n+ */\n+@Experimental"
  }],
  "prId": 25990
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "`The number of partitions of the input data that is going to be written.` Let's try to not mention RDD, to make the API general.",
    "commit": "118d81f561ffc1837a065cfa5e8f53e5ace7c987",
    "createdAt": "2019-11-15T10:18:31Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.connector.write;\n+\n+import org.apache.spark.annotation.Evolving;\n+import org.apache.spark.sql.connector.write.streaming.StreamingDataWriterFactory;\n+\n+/**\n+ * This interface contains physical (i.e. RDD) write information that data sources can use when\n+ * generating a {@link DataWriterFactory} or a {@link StreamingDataWriterFactory}.\n+ */\n+@Evolving\n+public interface PhysicalWriteInfo {\n+  /**\n+   * @return  The number of partitions of the RDD that is going to be written."
  }],
  "prId": 25990
}, {
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "ditto",
    "commit": "118d81f561ffc1837a065cfa5e8f53e5ace7c987",
    "createdAt": "2019-11-16T09:42:01Z",
    "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.connector.write;\n+\n+import org.apache.spark.annotation.Evolving;\n+import org.apache.spark.sql.connector.write.streaming.StreamingDataWriterFactory;\n+\n+/**\n+ * This interface contains physical write information that data sources can use when\n+ * generating a {@link DataWriterFactory} or a {@link StreamingDataWriterFactory}.\n+ */\n+@Evolving\n+public interface PhysicalWriteInfo {\n+  /**\n+   * @return  The number of partitions of the input data that is going to be written."
  }],
  "prId": 25990
}]