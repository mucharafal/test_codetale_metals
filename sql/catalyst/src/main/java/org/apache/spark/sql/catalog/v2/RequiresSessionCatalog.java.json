[{
  "comments": [{
    "author": {
      "login": "rdblue"
    },
    "body": "This has a method, so it isn't a marker interface.\r\n\r\nThis should note that this is for implementations that want to use Spark's session catalog for storage, which is needed for writing replacements for V2SessionCatalog. Maybe also mention that this will go away when the SessionCatalog is removed.",
    "commit": "05db8602d0ef8c98f0f4d70ef8a4d67bb3f73692",
    "createdAt": "2019-07-12T16:31:32Z",
    "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalog.v2;\n+\n+import org.apache.spark.annotation.Unstable;\n+import org.apache.spark.sql.catalyst.catalog.SessionCatalog;\n+\n+/**\n+ * A marker interface to take the Spark internal session catalog, so that the catalog implementation"
  }],
  "prId": 25104
}, {
  "comments": [{
    "author": {
      "login": "rdblue"
    },
    "body": "If this doesn't replace the existing catalog initialization method, then it should have a different name. How about `setSessionCatalog`?",
    "commit": "05db8602d0ef8c98f0f4d70ef8a4d67bb3f73692",
    "createdAt": "2019-07-12T16:32:13Z",
    "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.catalog.v2;\n+\n+import org.apache.spark.annotation.Unstable;\n+import org.apache.spark.sql.catalyst.catalog.SessionCatalog;\n+\n+/**\n+ * A marker interface to take the Spark internal session catalog, so that the catalog implementation\n+ * can hook in some custom logic before Spark calling the session catalog.\n+ */\n+@Unstable\n+public interface RequiresSessionCatalog {\n+  void initWithSessionCatalog(SessionCatalog catalog);"
  }],
  "prId": 25104
}]