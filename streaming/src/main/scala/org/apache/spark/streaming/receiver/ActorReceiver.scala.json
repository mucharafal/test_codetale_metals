[{
  "comments": [{
    "author": {
      "login": "zsxwing"
    },
    "body": "I duplicated these `store` methods in `ActorReceiver` and `JavaActorReceiver` because I don't want to expose `ActorHelper` as a public API. Note: if we put `store` methods in `ActorHelper`, then it must be a public API so as to appear in the Scala/Java docs.\n",
    "commit": "81378e47fb1a34ec8997d15bc6e9905c70fb8f89",
    "createdAt": "2015-12-23T20:47:56Z",
    "diffHunk": "@@ -69,13 +68,60 @@ object ActorSupervisorStrategy {\n  *       should be same.\n  */\n @DeveloperApi\n-trait ActorHelper extends Logging{\n+abstract class ActorReceiver extends Actor {\n \n-  self: Actor => // to ensure that this can be added to Actor classes only\n+  /** Store an iterator of received data as a data block into Spark's memory. */\n+  def store[T](iter: Iterator[T]) {",
    "line": 25
  }],
  "prId": 10457
}]