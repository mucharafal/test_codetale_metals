[{
  "comments": [{
    "author": {
      "login": "chenghao-intel"
    },
    "body": "Space before `{`\n",
    "commit": "0725def770316bc1331c7e65cc300cfe0f5edd33",
    "createdAt": "2016-02-25T21:51:19Z",
    "diffHunk": "@@ -0,0 +1,37 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming\n+\n+import org.apache.spark.{Accumulable, AccumulableParam, SparkException}\n+\n+/**\n+  * Store information of Accumulable. We can't checkpoint Accumulable dircectly because the\n+  * \"readObject\" method of Accumulable to add extra logic.\n+  */\n+class AccumulableCheckpoint[R, T] private (\n+  val name: String,\n+  val value: R,\n+  val param: AccumulableParam[R, T]) extends Serializable{"
  }],
  "prId": 11249
}]