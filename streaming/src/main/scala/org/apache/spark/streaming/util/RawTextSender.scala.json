[{
  "comments": [{
    "author": {
      "login": "aarondav"
    },
    "body": "can avoid using trim (/an array copy) here by using RateLimitedOutputStream#write(bytes, offset, length)\n",
    "commit": "1746223744a9eb7d9808d749d0891aa3e37ead59",
    "createdAt": "2014-04-12T18:35:21Z",
    "diffHunk": "@@ -43,15 +45,15 @@ object RawTextSender extends Logging {\n \n     // Repeat the input data multiple times to fill in a buffer\n     val lines = Source.fromFile(file).getLines().toArray\n-    val bufferStream = new ByteArrayOutputStream(blockSize + 1000)\n+    val bufferStream = new FastByteArrayOutputStream(blockSize + 1000)\n     val ser = new KryoSerializer(new SparkConf()).newInstance()\n     val serStream = ser.serializeStream(bufferStream)\n     var i = 0\n-    while (bufferStream.size < blockSize) {\n+    while (bufferStream.length < blockSize) {\n       serStream.writeObject(lines(i))\n       i = (i + 1) % lines.length\n     }\n-    val array = bufferStream.toByteArray\n+    val array = bufferStream.trim().array"
  }],
  "prId": 397
}]