[{
  "comments": [{
    "author": {
      "login": "shimingfei"
    },
    "body": "space â€œ Serializable {\"\n",
    "commit": "163d3627fc1c00c959729a3969906657e5e9eba8",
    "createdAt": "2015-12-11T05:30:27Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.dstream\n+\n+import scala.reflect.ClassTag\n+import org.apache.spark.rdd.RDD\n+import org.apache.spark.util.SerializableConfiguration\n+import org.apache.spark.rdd.ReliableCheckpointRDD\n+import org.apache.spark.SparkContext\n+\n+/**\n+ * User can customize DumpFormat by extends this abstract class.\n+ */\n+abstract class DSteamDumpFormat[K, S] extends Serializable{"
  }],
  "prId": 10252
}, {
  "comments": [{
    "author": {
      "login": "chenghao-intel"
    },
    "body": "typo `DStreamDumpFormat`?\n",
    "commit": "163d3627fc1c00c959729a3969906657e5e9eba8",
    "createdAt": "2015-12-11T15:21:19Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.dstream\n+\n+import scala.reflect.ClassTag\n+import org.apache.spark.rdd.RDD\n+import org.apache.spark.util.SerializableConfiguration\n+import org.apache.spark.rdd.ReliableCheckpointRDD\n+import org.apache.spark.SparkContext\n+\n+/**\n+ * User can customize DumpFormat by extends this abstract class.\n+ */\n+abstract class DSteamDumpFormat[K, S] extends Serializable {",
    "line": 29
  }, {
    "author": {
      "login": "mwws"
    },
    "body": "nice catch!\n",
    "commit": "163d3627fc1c00c959729a3969906657e5e9eba8",
    "createdAt": "2015-12-14T02:51:49Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.dstream\n+\n+import scala.reflect.ClassTag\n+import org.apache.spark.rdd.RDD\n+import org.apache.spark.util.SerializableConfiguration\n+import org.apache.spark.rdd.ReliableCheckpointRDD\n+import org.apache.spark.SparkContext\n+\n+/**\n+ * User can customize DumpFormat by extends this abstract class.\n+ */\n+abstract class DSteamDumpFormat[K, S] extends Serializable {",
    "line": 29
  }],
  "prId": 10252
}, {
  "comments": [{
    "author": {
      "login": "chenghao-intel"
    },
    "body": "no space between `identity` and `:`\n",
    "commit": "163d3627fc1c00c959729a3969906657e5e9eba8",
    "createdAt": "2015-12-11T15:21:52Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.dstream\n+\n+import scala.reflect.ClassTag\n+import org.apache.spark.rdd.RDD\n+import org.apache.spark.util.SerializableConfiguration\n+import org.apache.spark.rdd.ReliableCheckpointRDD\n+import org.apache.spark.SparkContext\n+\n+/**\n+ * User can customize DumpFormat by extends this abstract class.\n+ */\n+abstract class DSteamDumpFormat[K, S] extends Serializable {\n+  // Identity have to be provided here for every DumpableDStream instance. Otherwise it's not able\n+  // to recognize each other during loading.\n+  val identity : String",
    "line": 32
  }],
  "prId": 10252
}, {
  "comments": [{
    "author": {
      "login": "chenghao-intel"
    },
    "body": "no space between `identity` and `:`\n",
    "commit": "163d3627fc1c00c959729a3969906657e5e9eba8",
    "createdAt": "2015-12-11T15:22:15Z",
    "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.dstream\n+\n+import scala.reflect.ClassTag\n+import org.apache.spark.rdd.RDD\n+import org.apache.spark.util.SerializableConfiguration\n+import org.apache.spark.rdd.ReliableCheckpointRDD\n+import org.apache.spark.SparkContext\n+\n+/**\n+ * User can customize DumpFormat by extends this abstract class.\n+ */\n+abstract class DSteamDumpFormat[K, S] extends Serializable {\n+  // Identity have to be provided here for every DumpableDStream instance. Otherwise it's not able\n+  // to recognize each other during loading.\n+  val identity : String\n+\n+  // user can customize how to dump state information\n+  private[streaming] def dump(rdd : RDD[(K, S)], path: String): Unit",
    "line": 35
  }],
  "prId": 10252
}]