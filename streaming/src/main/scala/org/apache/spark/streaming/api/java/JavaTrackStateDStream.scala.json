[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "ll --> all \n",
    "commit": "f6c45cb3610747d48ce8c9cd96c0dee6742f6c45",
    "createdAt": "2015-11-11T22:51:52Z",
    "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.api.java\n+\n+import org.apache.spark.annotation.Experimental\n+import org.apache.spark.api.java.JavaSparkContext\n+import org.apache.spark.streaming.dstream.TrackStateDStream\n+\n+/**\n+ * :: Experimental ::\n+ * [[JavaDStream]] representing the stream of records emitted by the tracking function in the\n+ * `trackStateByKey` operation on a [[JavaPairDStream]]. Additionally, it also gives access to the\n+ * stream of state snapshots, that is, the state data of ll keys after a batch has updated them."
  }],
  "prId": 9636
}, {
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "Does this automatically link to the Scala docs of JavaDStream? May be safer to do `[[org.apache....JavaDStream JavaDStream]]`\n",
    "commit": "f6c45cb3610747d48ce8c9cd96c0dee6742f6c45",
    "createdAt": "2015-11-11T23:33:48Z",
    "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.api.java\n+\n+import org.apache.spark.annotation.Experimental\n+import org.apache.spark.api.java.JavaSparkContext\n+import org.apache.spark.streaming.dstream.TrackStateDStream\n+\n+/**\n+ * :: Experimental ::\n+ * [[JavaDStream]] representing the stream of records emitted by the tracking function in the",
    "line": 26
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "I think it's fine for classes in the same package. Take a look at: http://spark.apache.org/docs/latest/api/scala/index.html#org.apache.spark.sql.DataFrame\n",
    "commit": "f6c45cb3610747d48ce8c9cd96c0dee6742f6c45",
    "createdAt": "2015-11-12T05:55:35Z",
    "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.api.java\n+\n+import org.apache.spark.annotation.Experimental\n+import org.apache.spark.api.java.JavaSparkContext\n+import org.apache.spark.streaming.dstream.TrackStateDStream\n+\n+/**\n+ * :: Experimental ::\n+ * [[JavaDStream]] representing the stream of records emitted by the tracking function in the",
    "line": 26
  }],
  "prId": 9636
}]