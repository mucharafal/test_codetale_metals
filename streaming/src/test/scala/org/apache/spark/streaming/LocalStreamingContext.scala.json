[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "This is already defined in streaming.TestSuiteBase. Rather than creating this new file, please use that. \n",
    "commit": "c329806f30cf82a796a0256c2e08f774b7fdd43b",
    "createdAt": "2015-03-13T08:16:58Z",
    "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming\n+\n+object LocalStreamingContext {\n+  \n+  def stop(ssc: StreamingContext) {\n+    if (ssc != null) {\n+      ssc.stop()\n+    }\n+    // To avoid Akka rebinding to the same port, since it doesn't unbind immediately on shutdown\n+    System.clearProperty(\"spark.driver.port\")\n+  }\n+\n+  /** Runs `f` by passing in `ssc` and ensures that `ssc` is stopped. */\n+  def withSparkStreaming[T](ssc: StreamingContext)(f: StreamingContext => T) = {"
  }],
  "prId": 4828
}]