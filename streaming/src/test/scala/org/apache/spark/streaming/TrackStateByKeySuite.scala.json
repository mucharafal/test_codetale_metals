[{
  "comments": [{
    "author": {
      "login": "zsxwing"
    },
    "body": "This one will create a new `StreamingContext` and set it as the active StreamingContext. But the previous one created in `before` won't be stopped?\n",
    "commit": "d87a5e68afe54f7225ec99c2c85b020366767aaf",
    "createdAt": "2015-11-18T18:10:19Z",
    "diffHunk": "@@ -436,6 +437,41 @@ class TrackStateByKeySuite extends SparkFunSuite with BeforeAndAfterAll with Bef\n     assert(collectedStateSnapshots.last.toSet === Set((\"a\", 1)))\n   }\n \n+  test(\"trackStateByKey - checkpoint durations\") {\n+    val privateMethod = PrivateMethod[InternalTrackStateDStream[_, _, _, _]]('internalStream)\n+\n+    def testCheckpointDuration(\n+        batchDuration: Duration,\n+        expectedCheckpointDuration: Duration,\n+        explicitCheckpointDuration: Option[Duration] = None\n+      ): Unit = {\n+      try {\n+        ssc = new StreamingContext(sc, batchDuration)",
    "line": 38
  }, {
    "author": {
      "login": "tdas"
    },
    "body": "The absolute first one created in the `before {...}` is not started, so there is nothing to stop. And the context start in the function will be stopped by the finally. \n",
    "commit": "d87a5e68afe54f7225ec99c2c85b020366767aaf",
    "createdAt": "2015-11-18T19:41:16Z",
    "diffHunk": "@@ -436,6 +437,41 @@ class TrackStateByKeySuite extends SparkFunSuite with BeforeAndAfterAll with Bef\n     assert(collectedStateSnapshots.last.toSet === Set((\"a\", 1)))\n   }\n \n+  test(\"trackStateByKey - checkpoint durations\") {\n+    val privateMethod = PrivateMethod[InternalTrackStateDStream[_, _, _, _]]('internalStream)\n+\n+    def testCheckpointDuration(\n+        batchDuration: Duration,\n+        expectedCheckpointDuration: Duration,\n+        explicitCheckpointDuration: Option[Duration] = None\n+      ): Unit = {\n+      try {\n+        ssc = new StreamingContext(sc, batchDuration)",
    "line": 38
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "Oh, right. Sorry for the false alarm.\n",
    "commit": "d87a5e68afe54f7225ec99c2c85b020366767aaf",
    "createdAt": "2015-11-18T20:03:27Z",
    "diffHunk": "@@ -436,6 +437,41 @@ class TrackStateByKeySuite extends SparkFunSuite with BeforeAndAfterAll with Bef\n     assert(collectedStateSnapshots.last.toSet === Set((\"a\", 1)))\n   }\n \n+  test(\"trackStateByKey - checkpoint durations\") {\n+    val privateMethod = PrivateMethod[InternalTrackStateDStream[_, _, _, _]]('internalStream)\n+\n+    def testCheckpointDuration(\n+        batchDuration: Duration,\n+        expectedCheckpointDuration: Duration,\n+        explicitCheckpointDuration: Option[Duration] = None\n+      ): Unit = {\n+      try {\n+        ssc = new StreamingContext(sc, batchDuration)",
    "line": 38
  }],
  "prId": 9805
}]