[{
  "comments": [{
    "author": {
      "login": "dragos"
    },
    "body": "This method is general enough that probably deserves a better place. I couldn't find anything similar in spark-core Utils or streaming utilities (the closest one was in BatchCounter, but won't do the same thing, and relies on wait/notify). I'm open to suggestions where to move it.\n",
    "commit": "8941cf91b03aa7835a78bc756bee1f32cb7bb1d8",
    "createdAt": "2015-07-17T14:44:06Z",
    "diffHunk": "@@ -537,4 +537,19 @@ trait TestSuiteBase extends SparkFunSuite with BeforeAndAfter with Logging {\n       verifyOutput[W](output, expectedOutput, useSet)\n     }\n   }\n+\n+  /**\n+   * Wait until `cond` becomes true, or timeout ms have passed. This method checks the condition\n+   * every 100ms, so it won't wait more than 100ms more than necessary.\n+   *\n+   * @param cond     A boolean that should become `true`\n+   * @param timemout How many millis to wait before giving up\n+   */\n+  def waitUntil(cond: => Boolean, timeout: Int): Unit = {"
  }, {
    "author": {
      "login": "tdas"
    },
    "body": "We have used `eventually` for doing this. See \nhttps://github.com/apache/spark/blob/master/streaming/src/test/scala/org/apache/spark/streaming/StreamingContextSuite.scala#L742\n\nNo need to add another method here.\n",
    "commit": "8941cf91b03aa7835a78bc756bee1f32cb7bb1d8",
    "createdAt": "2015-07-20T01:56:23Z",
    "diffHunk": "@@ -537,4 +537,19 @@ trait TestSuiteBase extends SparkFunSuite with BeforeAndAfter with Logging {\n       verifyOutput[W](output, expectedOutput, useSet)\n     }\n   }\n+\n+  /**\n+   * Wait until `cond` becomes true, or timeout ms have passed. This method checks the condition\n+   * every 100ms, so it won't wait more than 100ms more than necessary.\n+   *\n+   * @param cond     A boolean that should become `true`\n+   * @param timemout How many millis to wait before giving up\n+   */\n+  def waitUntil(cond: => Boolean, timeout: Int): Unit = {"
  }, {
    "author": {
      "login": "dragos"
    },
    "body": "cool, thanks!\n",
    "commit": "8941cf91b03aa7835a78bc756bee1f32cb7bb1d8",
    "createdAt": "2015-07-20T08:50:43Z",
    "diffHunk": "@@ -537,4 +537,19 @@ trait TestSuiteBase extends SparkFunSuite with BeforeAndAfter with Logging {\n       verifyOutput[W](output, expectedOutput, useSet)\n     }\n   }\n+\n+  /**\n+   * Wait until `cond` becomes true, or timeout ms have passed. This method checks the condition\n+   * every 100ms, so it won't wait more than 100ms more than necessary.\n+   *\n+   * @param cond     A boolean that should become `true`\n+   * @param timemout How many millis to wait before giving up\n+   */\n+  def waitUntil(cond: => Boolean, timeout: Int): Unit = {"
  }],
  "prId": 7471
}]