[{
  "comments": [{
    "author": {
      "login": "zsxwing"
    },
    "body": "~~return?~~ never mind, just realized this is for testing bad closures.\n",
    "commit": "fe68b6c03300a37799ccaad2ee554bde005c8f6f",
    "createdAt": "2016-02-16T23:47:50Z",
    "diffHunk": "@@ -171,6 +171,10 @@ class DStreamClosureSuite extends SparkFunSuite with BeforeAndAfterAll {\n   private def testUpdateStateByKey(ds: DStream[(Int, Int)]): Unit = {\n     val updateF1 = (_: Seq[Int], _: Option[Int]) => { return; Some(1) }\n     val updateF2 = (_: Iterator[(Int, Seq[Int], Option[Int])]) => { return; Seq((1, 1)).toIterator }\n+    val updateF3 = (_: Time, _: Int, _: Seq[Int], _: Option[Int]) => {\n+      return",
    "line": 5
  }],
  "prId": 11122
}]