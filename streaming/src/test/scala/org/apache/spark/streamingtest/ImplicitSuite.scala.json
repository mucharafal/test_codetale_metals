[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "I think this a copy-paste error ;) should be named `dstream` instead of `rdd`.\n",
    "commit": "aa6d44a2616cc201f22e4c1da4ca45fc15de81de",
    "createdAt": "2014-12-26T00:00:37Z",
    "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streamingtest\n+\n+/**\n+ * A test suite to make sure all `implicit` functions work correctly.\n+ *\n+ * As `implicit` is a compiler feature, we don't need to run this class.\n+ * What we need to do is making the compiler happy.\n+ */\n+class ImplicitSuite {\n+\n+  // We only want to test if `implict` works well with the compiler, so we don't need a real DStream.\n+  def mockDStream[T]: org.apache.spark.streaming.dstream.DStream[T] = null\n+\n+  def testToPairDStreamFunctions(): Unit = {\n+    val rdd: org.apache.spark.streaming.dstream.DStream[(Int, Int)] = mockDStream"
  }, {
    "author": {
      "login": "zsxwing"
    },
    "body": "Good catch. Done.\n",
    "commit": "aa6d44a2616cc201f22e4c1da4ca45fc15de81de",
    "createdAt": "2014-12-26T01:56:00Z",
    "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streamingtest\n+\n+/**\n+ * A test suite to make sure all `implicit` functions work correctly.\n+ *\n+ * As `implicit` is a compiler feature, we don't need to run this class.\n+ * What we need to do is making the compiler happy.\n+ */\n+class ImplicitSuite {\n+\n+  // We only want to test if `implict` works well with the compiler, so we don't need a real DStream.\n+  def mockDStream[T]: org.apache.spark.streaming.dstream.DStream[T] = null\n+\n+  def testToPairDStreamFunctions(): Unit = {\n+    val rdd: org.apache.spark.streaming.dstream.DStream[(Int, Int)] = mockDStream"
  }],
  "prId": 3464
}]