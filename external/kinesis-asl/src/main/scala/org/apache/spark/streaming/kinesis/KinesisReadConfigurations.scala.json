[{
  "comments": [{
    "author": {
      "login": "brkyvz"
    },
    "body": "How about something like this?\r\n```scala\r\nprivate[kinesis] case class KinesisReadConfigurations(\r\n    maxRetries: Int,\r\n    retryWaitTimeMs: Long,\r\n    retryTimeoutMs: Long)\r\n\r\nobject KinesisReadConfigurations {\r\n  def apply(): KinesisReadConfigurations = {\r\n    KinesisReadConfigurations(3, 100, 10000)\r\n  }\r\n\r\n  def apply(ssc: StreamingContext): KinesisReadConfigurations = {\r\n    KinesisReadConfigurations(\r\n      maxRetries = ssc.sc.getConf.getInt(RETRY_MAX_ATTEMPTS_KEY, DEFAULT_MAX_RETRIES),\r\n      retryWaitTimeMs = JavaUtils.timeStringAsMs(\r\n        ssc.sc.getConf.getString(RETRY_WAIT_TIME_KEY, DEFAULT_RETRY_WAIT_TIME)),\r\n      retryTimeoutMs = ssc.graph.batchDuration.milliseconds)\r\n  }\r\n\r\n  val DEFAULT_MAX_RETRIES = 3\r\n  val DEFAULT_RETRY_WAIT_TIME = \"100ms\"\r\n}\r\n```",
    "commit": "91a777c48e3794365b287015775d7554aa0ceff1",
    "createdAt": "2017-05-03T16:10:11Z",
    "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kinesis\n+\n+import org.apache.spark.network.util.JavaUtils\n+\n+/**\n+ * Configurations to pass to the [KinesisBackedBlockRDD].\n+ *\n+ * @param maxRetriesOption : The maximum number of attempts to be made to Kinesis. Defaults to 3.\n+ * @param retryWaitTimeMsOption : The interval between consequent Kinesis retries.\n+ *                              Defaults to 100ms.\n+ * @param retryTimeoutMsOption : The timeout in milliseconds for a Kinesis request.\n+ *                             Defaults to batch duration provided for streaming,\n+ *                             else uses 10000 if invoked directly.\n+ */\n+private[kinesis]\n+case class KinesisReadConfigurations ("
  }],
  "prId": 17467
}, {
  "comments": [{
    "author": {
      "login": "budde"
    },
    "body": "*nit*: You're missing a space here and on the following line",
    "commit": "91a777c48e3794365b287015775d7554aa0ceff1",
    "createdAt": "2017-05-04T18:10:34Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kinesis\n+\n+import org.apache.spark.network.util.JavaUtils\n+import org.apache.spark.streaming.StreamingContext\n+\n+/**\n+ * Configurations to pass to the [KinesisBackedBlockRDD].\n+ *\n+ * @param maxRetries: The maximum number of attempts to be made to Kinesis. Defaults to 3.\n+ * @param retryWaitTimeMs: The interval between consequent Kinesis retries.\n+ *                         Defaults to 100ms.\n+ * @param retryTimeoutMs: The timeout in milliseconds for a Kinesis request.\n+*                         Defaults to batch duration provided for streaming,"
  }],
  "prId": 17467
}, {
  "comments": [{
    "author": {
      "login": "budde"
    },
    "body": "Incorrect indentation here-- should be 2 softabs/4 spaces",
    "commit": "91a777c48e3794365b287015775d7554aa0ceff1",
    "createdAt": "2017-05-04T18:11:02Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kinesis\n+\n+import org.apache.spark.network.util.JavaUtils\n+import org.apache.spark.streaming.StreamingContext\n+\n+/**\n+ * Configurations to pass to the [KinesisBackedBlockRDD].\n+ *\n+ * @param maxRetries: The maximum number of attempts to be made to Kinesis. Defaults to 3.\n+ * @param retryWaitTimeMs: The interval between consequent Kinesis retries.\n+ *                         Defaults to 100ms.\n+ * @param retryTimeoutMs: The timeout in milliseconds for a Kinesis request.\n+*                         Defaults to batch duration provided for streaming,\n+*                         else uses 10000 if invoked directly.\n+ */\n+private[kinesis] case class KinesisReadConfigurations(\n+                                                     maxRetries: Int,"
  }, {
    "author": {
      "login": "brkyvz"
    },
    "body": "+1",
    "commit": "91a777c48e3794365b287015775d7554aa0ceff1",
    "createdAt": "2017-05-04T18:34:55Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kinesis\n+\n+import org.apache.spark.network.util.JavaUtils\n+import org.apache.spark.streaming.StreamingContext\n+\n+/**\n+ * Configurations to pass to the [KinesisBackedBlockRDD].\n+ *\n+ * @param maxRetries: The maximum number of attempts to be made to Kinesis. Defaults to 3.\n+ * @param retryWaitTimeMs: The interval between consequent Kinesis retries.\n+ *                         Defaults to 100ms.\n+ * @param retryTimeoutMs: The timeout in milliseconds for a Kinesis request.\n+*                         Defaults to batch duration provided for streaming,\n+*                         else uses 10000 if invoked directly.\n+ */\n+private[kinesis] case class KinesisReadConfigurations(\n+                                                     maxRetries: Int,"
  }],
  "prId": 17467
}, {
  "comments": [{
    "author": {
      "login": "budde"
    },
    "body": "I would use constants and named parameters here too, e.g.\r\n\r\n```scala\r\ndef apply(): KinesisReadConfigurations = KinesisReadConfigurations(\r\n  maxRetries = DEFAULT_MAX_RETRIES,\r\n  ...\r\n```",
    "commit": "91a777c48e3794365b287015775d7554aa0ceff1",
    "createdAt": "2017-05-04T18:15:34Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kinesis\n+\n+import org.apache.spark.network.util.JavaUtils\n+import org.apache.spark.streaming.StreamingContext\n+\n+/**\n+ * Configurations to pass to the [KinesisBackedBlockRDD].\n+ *\n+ * @param maxRetries: The maximum number of attempts to be made to Kinesis. Defaults to 3.\n+ * @param retryWaitTimeMs: The interval between consequent Kinesis retries.\n+ *                         Defaults to 100ms.\n+ * @param retryTimeoutMs: The timeout in milliseconds for a Kinesis request.\n+*                         Defaults to batch duration provided for streaming,\n+*                         else uses 10000 if invoked directly.\n+ */\n+private[kinesis] case class KinesisReadConfigurations(\n+                                                     maxRetries: Int,\n+                                                     retryWaitTimeMs: Long,\n+                                                     retryTimeoutMs: Long)\n+\n+object KinesisReadConfigurations {\n+  def apply(): KinesisReadConfigurations = {\n+    KinesisReadConfigurations(3, 100, 10000)"
  }, {
    "author": {
      "login": "brkyvz"
    },
    "body": "+1",
    "commit": "91a777c48e3794365b287015775d7554aa0ceff1",
    "createdAt": "2017-05-04T18:35:04Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kinesis\n+\n+import org.apache.spark.network.util.JavaUtils\n+import org.apache.spark.streaming.StreamingContext\n+\n+/**\n+ * Configurations to pass to the [KinesisBackedBlockRDD].\n+ *\n+ * @param maxRetries: The maximum number of attempts to be made to Kinesis. Defaults to 3.\n+ * @param retryWaitTimeMs: The interval between consequent Kinesis retries.\n+ *                         Defaults to 100ms.\n+ * @param retryTimeoutMs: The timeout in milliseconds for a Kinesis request.\n+*                         Defaults to batch duration provided for streaming,\n+*                         else uses 10000 if invoked directly.\n+ */\n+private[kinesis] case class KinesisReadConfigurations(\n+                                                     maxRetries: Int,\n+                                                     retryWaitTimeMs: Long,\n+                                                     retryTimeoutMs: Long)\n+\n+object KinesisReadConfigurations {\n+  def apply(): KinesisReadConfigurations = {\n+    KinesisReadConfigurations(3, 100, 10000)"
  }],
  "prId": 17467
}, {
  "comments": [{
    "author": {
      "login": "budde"
    },
    "body": "*nit*: should be ```[[KinesisBackedBlockRDD]]```",
    "commit": "91a777c48e3794365b287015775d7554aa0ceff1",
    "createdAt": "2017-05-04T18:16:18Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kinesis\n+\n+import org.apache.spark.network.util.JavaUtils\n+import org.apache.spark.streaming.StreamingContext\n+\n+/**\n+ * Configurations to pass to the [KinesisBackedBlockRDD]."
  }, {
    "author": {
      "login": "brkyvz"
    },
    "body": "+1",
    "commit": "91a777c48e3794365b287015775d7554aa0ceff1",
    "createdAt": "2017-05-04T18:34:40Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kinesis\n+\n+import org.apache.spark.network.util.JavaUtils\n+import org.apache.spark.streaming.StreamingContext\n+\n+/**\n+ * Configurations to pass to the [KinesisBackedBlockRDD]."
  }],
  "prId": 17467
}, {
  "comments": [{
    "author": {
      "login": "brkyvz"
    },
    "body": "actually do we even need this?",
    "commit": "91a777c48e3794365b287015775d7554aa0ceff1",
    "createdAt": "2017-05-04T18:35:38Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kinesis\n+\n+import org.apache.spark.network.util.JavaUtils\n+import org.apache.spark.streaming.StreamingContext\n+\n+/**\n+ * Configurations to pass to the [KinesisBackedBlockRDD].\n+ *\n+ * @param maxRetries: The maximum number of attempts to be made to Kinesis. Defaults to 3.\n+ * @param retryWaitTimeMs: The interval between consequent Kinesis retries.\n+ *                         Defaults to 100ms.\n+ * @param retryTimeoutMs: The timeout in milliseconds for a Kinesis request.\n+*                         Defaults to batch duration provided for streaming,\n+*                         else uses 10000 if invoked directly.\n+ */\n+private[kinesis] case class KinesisReadConfigurations(\n+                                                     maxRetries: Int,\n+                                                     retryWaitTimeMs: Long,\n+                                                     retryTimeoutMs: Long)\n+\n+object KinesisReadConfigurations {\n+  def apply(): KinesisReadConfigurations = {"
  }, {
    "author": {
      "login": "yssharma"
    },
    "body": "It can be used in places where we don't have the spark conf. I am using this in `KinesisBackedBlockRDD`'s constructor.",
    "commit": "91a777c48e3794365b287015775d7554aa0ceff1",
    "createdAt": "2017-05-06T01:58:28Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kinesis\n+\n+import org.apache.spark.network.util.JavaUtils\n+import org.apache.spark.streaming.StreamingContext\n+\n+/**\n+ * Configurations to pass to the [KinesisBackedBlockRDD].\n+ *\n+ * @param maxRetries: The maximum number of attempts to be made to Kinesis. Defaults to 3.\n+ * @param retryWaitTimeMs: The interval between consequent Kinesis retries.\n+ *                         Defaults to 100ms.\n+ * @param retryTimeoutMs: The timeout in milliseconds for a Kinesis request.\n+*                         Defaults to batch duration provided for streaming,\n+*                         else uses 10000 if invoked directly.\n+ */\n+private[kinesis] case class KinesisReadConfigurations(\n+                                                     maxRetries: Int,\n+                                                     retryWaitTimeMs: Long,\n+                                                     retryTimeoutMs: Long)\n+\n+object KinesisReadConfigurations {\n+  def apply(): KinesisReadConfigurations = {"
  }],
  "prId": 17467
}, {
  "comments": [{
    "author": {
      "login": "brkyvz"
    },
    "body": "`private object`",
    "commit": "91a777c48e3794365b287015775d7554aa0ceff1",
    "createdAt": "2017-05-04T18:36:13Z",
    "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kinesis\n+\n+import org.apache.spark.network.util.JavaUtils\n+import org.apache.spark.streaming.StreamingContext\n+\n+/**\n+ * Configurations to pass to the [KinesisBackedBlockRDD].\n+ *\n+ * @param maxRetries: The maximum number of attempts to be made to Kinesis. Defaults to 3.\n+ * @param retryWaitTimeMs: The interval between consequent Kinesis retries.\n+ *                         Defaults to 100ms.\n+ * @param retryTimeoutMs: The timeout in milliseconds for a Kinesis request.\n+*                         Defaults to batch duration provided for streaming,\n+*                         else uses 10000 if invoked directly.\n+ */\n+private[kinesis] case class KinesisReadConfigurations(\n+                                                     maxRetries: Int,\n+                                                     retryWaitTimeMs: Long,\n+                                                     retryTimeoutMs: Long)\n+\n+object KinesisReadConfigurations {"
  }],
  "prId": 17467
}]