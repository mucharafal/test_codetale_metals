[{
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "@gengliangwang . Can we use `SqlBasedBenchmark` for consistency?",
    "commit": "e6b73f120b784cc548505e70802b8ec821e4a04b",
    "createdAt": "2018-11-09T06:48:38Z",
    "diffHunk": "@@ -0,0 +1,226 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.benchmark\n+\n+import java.io.File\n+\n+import scala.util.Random\n+\n+import org.apache.spark.SparkConf\n+import org.apache.spark.benchmark.{Benchmark, BenchmarkBase}\n+import org.apache.spark.sql.{DataFrame, SparkSession}\n+import org.apache.spark.sql.catalyst.plans.SQLHelper\n+import org.apache.spark.sql.types._\n+\n+/**\n+ * Benchmark to measure Avro read performance.\n+ * {{{\n+ *   To run this benchmark:\n+ *   1. without sbt: bin/spark-submit --class <this class>\n+ *        --jars <catalyst test jar>,<core test jar><spark-avro jar> <avro test jar>\n+ *   2. build/sbt \"avro/test:runMain <this class>\"\n+ *   3. generate result: SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"avro/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/AvroReadBenchmark-results.txt\".\n+ * }}}\n+ */\n+object AvroReadBenchmark extends BenchmarkBase with SQLHelper {"
  }, {
    "author": {
      "login": "gengliangwang"
    },
    "body": "This is following `DataSourceReadBenchmark` and `OrcReadBenchmark`.\r\nShould I change them as well? Which also makes sense to me.\r\n\r\n",
    "commit": "e6b73f120b784cc548505e70802b8ec821e4a04b",
    "createdAt": "2018-11-09T14:34:37Z",
    "diffHunk": "@@ -0,0 +1,226 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.benchmark\n+\n+import java.io.File\n+\n+import scala.util.Random\n+\n+import org.apache.spark.SparkConf\n+import org.apache.spark.benchmark.{Benchmark, BenchmarkBase}\n+import org.apache.spark.sql.{DataFrame, SparkSession}\n+import org.apache.spark.sql.catalyst.plans.SQLHelper\n+import org.apache.spark.sql.types._\n+\n+/**\n+ * Benchmark to measure Avro read performance.\n+ * {{{\n+ *   To run this benchmark:\n+ *   1. without sbt: bin/spark-submit --class <this class>\n+ *        --jars <catalyst test jar>,<core test jar><spark-avro jar> <avro test jar>\n+ *   2. build/sbt \"avro/test:runMain <this class>\"\n+ *   3. generate result: SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"avro/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/AvroReadBenchmark-results.txt\".\n+ * }}}\n+ */\n+object AvroReadBenchmark extends BenchmarkBase with SQLHelper {"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Nope. Not in this PR. Since it's beyond the scope of this PR. Let's consider that later in another PR.",
    "commit": "e6b73f120b784cc548505e70802b8ec821e4a04b",
    "createdAt": "2018-11-09T19:44:23Z",
    "diffHunk": "@@ -0,0 +1,226 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.benchmark\n+\n+import java.io.File\n+\n+import scala.util.Random\n+\n+import org.apache.spark.SparkConf\n+import org.apache.spark.benchmark.{Benchmark, BenchmarkBase}\n+import org.apache.spark.sql.{DataFrame, SparkSession}\n+import org.apache.spark.sql.catalyst.plans.SQLHelper\n+import org.apache.spark.sql.types._\n+\n+/**\n+ * Benchmark to measure Avro read performance.\n+ * {{{\n+ *   To run this benchmark:\n+ *   1. without sbt: bin/spark-submit --class <this class>\n+ *        --jars <catalyst test jar>,<core test jar><spark-avro jar> <avro test jar>\n+ *   2. build/sbt \"avro/test:runMain <this class>\"\n+ *   3. generate result: SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"avro/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/AvroReadBenchmark-results.txt\".\n+ * }}}\n+ */\n+object AvroReadBenchmark extends BenchmarkBase with SQLHelper {"
  }, {
    "author": {
      "login": "gengliangwang"
    },
    "body": "@dongjoon-hyun OK, then I think this one is ready.",
    "commit": "e6b73f120b784cc548505e70802b8ec821e4a04b",
    "createdAt": "2018-11-12T07:05:24Z",
    "diffHunk": "@@ -0,0 +1,226 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.benchmark\n+\n+import java.io.File\n+\n+import scala.util.Random\n+\n+import org.apache.spark.SparkConf\n+import org.apache.spark.benchmark.{Benchmark, BenchmarkBase}\n+import org.apache.spark.sql.{DataFrame, SparkSession}\n+import org.apache.spark.sql.catalyst.plans.SQLHelper\n+import org.apache.spark.sql.types._\n+\n+/**\n+ * Benchmark to measure Avro read performance.\n+ * {{{\n+ *   To run this benchmark:\n+ *   1. without sbt: bin/spark-submit --class <this class>\n+ *        --jars <catalyst test jar>,<core test jar><spark-avro jar> <avro test jar>\n+ *   2. build/sbt \"avro/test:runMain <this class>\"\n+ *   3. generate result: SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"avro/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/AvroReadBenchmark-results.txt\".\n+ * }}}\n+ */\n+object AvroReadBenchmark extends BenchmarkBase with SQLHelper {"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "? @gengliangwang . What I mean is we should not touch them in this PR `Add avro read benchmark`.\r\n> Should I change them as well? Which also makes sense to me.\r\n\r\nThis PR should be updated.",
    "commit": "e6b73f120b784cc548505e70802b8ec821e4a04b",
    "createdAt": "2018-11-12T20:03:18Z",
    "diffHunk": "@@ -0,0 +1,226 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.benchmark\n+\n+import java.io.File\n+\n+import scala.util.Random\n+\n+import org.apache.spark.SparkConf\n+import org.apache.spark.benchmark.{Benchmark, BenchmarkBase}\n+import org.apache.spark.sql.{DataFrame, SparkSession}\n+import org.apache.spark.sql.catalyst.plans.SQLHelper\n+import org.apache.spark.sql.types._\n+\n+/**\n+ * Benchmark to measure Avro read performance.\n+ * {{{\n+ *   To run this benchmark:\n+ *   1. without sbt: bin/spark-submit --class <this class>\n+ *        --jars <catalyst test jar>,<core test jar><spark-avro jar> <avro test jar>\n+ *   2. build/sbt \"avro/test:runMain <this class>\"\n+ *   3. generate result: SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"avro/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/AvroReadBenchmark-results.txt\".\n+ * }}}\n+ */\n+object AvroReadBenchmark extends BenchmarkBase with SQLHelper {"
  }, {
    "author": {
      "login": "gengliangwang"
    },
    "body": "I see. I have updated this one.",
    "commit": "e6b73f120b784cc548505e70802b8ec821e4a04b",
    "createdAt": "2018-11-13T15:49:23Z",
    "diffHunk": "@@ -0,0 +1,226 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.benchmark\n+\n+import java.io.File\n+\n+import scala.util.Random\n+\n+import org.apache.spark.SparkConf\n+import org.apache.spark.benchmark.{Benchmark, BenchmarkBase}\n+import org.apache.spark.sql.{DataFrame, SparkSession}\n+import org.apache.spark.sql.catalyst.plans.SQLHelper\n+import org.apache.spark.sql.types._\n+\n+/**\n+ * Benchmark to measure Avro read performance.\n+ * {{{\n+ *   To run this benchmark:\n+ *   1. without sbt: bin/spark-submit --class <this class>\n+ *        --jars <catalyst test jar>,<core test jar><spark-avro jar> <avro test jar>\n+ *   2. build/sbt \"avro/test:runMain <this class>\"\n+ *   3. generate result: SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"avro/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/AvroReadBenchmark-results.txt\".\n+ * }}}\n+ */\n+object AvroReadBenchmark extends BenchmarkBase with SQLHelper {"
  }],
  "prId": 22966
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Since this is the default value, I think we can remove line 41 ~ 49.",
    "commit": "e6b73f120b784cc548505e70802b8ec821e4a04b",
    "createdAt": "2018-11-09T06:49:27Z",
    "diffHunk": "@@ -0,0 +1,226 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.benchmark\n+\n+import java.io.File\n+\n+import scala.util.Random\n+\n+import org.apache.spark.SparkConf\n+import org.apache.spark.benchmark.{Benchmark, BenchmarkBase}\n+import org.apache.spark.sql.{DataFrame, SparkSession}\n+import org.apache.spark.sql.catalyst.plans.SQLHelper\n+import org.apache.spark.sql.types._\n+\n+/**\n+ * Benchmark to measure Avro read performance.\n+ * {{{\n+ *   To run this benchmark:\n+ *   1. without sbt: bin/spark-submit --class <this class>\n+ *        --jars <catalyst test jar>,<core test jar><spark-avro jar> <avro test jar>\n+ *   2. build/sbt \"avro/test:runMain <this class>\"\n+ *   3. generate result: SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"avro/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/AvroReadBenchmark-results.txt\".\n+ * }}}\n+ */\n+object AvroReadBenchmark extends BenchmarkBase with SQLHelper {\n+  val conf = new SparkConf()\n+  conf.set(\"spark.sql.avro.compression.codec\", \"snappy\")"
  }, {
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Ditto.",
    "commit": "e6b73f120b784cc548505e70802b8ec821e4a04b",
    "createdAt": "2018-11-12T20:03:52Z",
    "diffHunk": "@@ -0,0 +1,226 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.benchmark\n+\n+import java.io.File\n+\n+import scala.util.Random\n+\n+import org.apache.spark.SparkConf\n+import org.apache.spark.benchmark.{Benchmark, BenchmarkBase}\n+import org.apache.spark.sql.{DataFrame, SparkSession}\n+import org.apache.spark.sql.catalyst.plans.SQLHelper\n+import org.apache.spark.sql.types._\n+\n+/**\n+ * Benchmark to measure Avro read performance.\n+ * {{{\n+ *   To run this benchmark:\n+ *   1. without sbt: bin/spark-submit --class <this class>\n+ *        --jars <catalyst test jar>,<core test jar><spark-avro jar> <avro test jar>\n+ *   2. build/sbt \"avro/test:runMain <this class>\"\n+ *   3. generate result: SPARK_GENERATE_BENCHMARK_FILES=1 build/sbt \"avro/test:runMain <this class>\"\n+ *      Results will be written to \"benchmarks/AvroReadBenchmark-results.txt\".\n+ * }}}\n+ */\n+object AvroReadBenchmark extends BenchmarkBase with SQLHelper {\n+  val conf = new SparkConf()\n+  conf.set(\"spark.sql.avro.compression.codec\", \"snappy\")"
  }],
  "prId": 22966
}, {
  "comments": [{
    "author": {
      "login": "dongjoon-hyun"
    },
    "body": "Ur, there is a missing `comma` here. But, let me try to fix during merging.",
    "commit": "e6b73f120b784cc548505e70802b8ec821e4a04b",
    "createdAt": "2018-11-14T19:23:56Z",
    "diffHunk": "@@ -0,0 +1,216 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.sql.execution.benchmark\n+\n+import java.io.File\n+\n+import scala.util.Random\n+\n+import org.apache.spark.benchmark.Benchmark\n+import org.apache.spark.sql.DataFrame\n+import org.apache.spark.sql.catalyst.plans.SQLHelper\n+import org.apache.spark.sql.types._\n+\n+/**\n+ * Benchmark to measure Avro read performance.\n+ * {{{\n+ *   To run this benchmark:\n+ *   1. without sbt: bin/spark-submit --class <this class>\n+ *        --jars <catalyst test jar>,<core test jar><spark-avro jar> <avro test jar>",
    "line": 33
  }],
  "prId": 22966
}]