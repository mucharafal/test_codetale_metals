[{
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "Is this check redundant? Why remove it now?",
    "commit": "088bc83a7d5f767bcdfa98d72fd5bf6f1293f8f8",
    "createdAt": "2018-08-20T12:29:31Z",
    "diffHunk": "@@ -201,13 +201,11 @@ class AvroSerializer(rootCatalystType: DataType, rootAvroType: Schema, nullable:\n \n   private def newStructConverter(\n       catalystStruct: StructType, avroStruct: Schema): InternalRow => Record = {\n-    if (avroStruct.getType != RECORD) {\n+    if (avroStruct.getType != RECORD || avroStruct.getFields.size() != catalystStruct.length) {\n       throw new IncompatibleSchemaException(s\"Cannot convert Catalyst type $catalystStruct to \" +\n         s\"Avro type $avroStruct.\")\n     }\n-    val avroFields = avroStruct.getFields\n-    assert(avroFields.size() == catalystStruct.length)",
    "line": 10
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "I think he moved this condition above.",
    "commit": "088bc83a7d5f767bcdfa98d72fd5bf6f1293f8f8",
    "createdAt": "2018-08-20T12:39:42Z",
    "diffHunk": "@@ -201,13 +201,11 @@ class AvroSerializer(rootCatalystType: DataType, rootAvroType: Schema, nullable:\n \n   private def newStructConverter(\n       catalystStruct: StructType, avroStruct: Schema): InternalRow => Record = {\n-    if (avroStruct.getType != RECORD) {\n+    if (avroStruct.getType != RECORD || avroStruct.getFields.size() != catalystStruct.length) {\n       throw new IncompatibleSchemaException(s\"Cannot convert Catalyst type $catalystStruct to \" +\n         s\"Avro type $avroStruct.\")\n     }\n-    val avroFields = avroStruct.getFields\n-    assert(avroFields.size() == catalystStruct.length)",
    "line": 10
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Ah, yea, strictly sounds unrelated tho.",
    "commit": "088bc83a7d5f767bcdfa98d72fd5bf6f1293f8f8",
    "createdAt": "2018-08-20T12:40:03Z",
    "diffHunk": "@@ -201,13 +201,11 @@ class AvroSerializer(rootCatalystType: DataType, rootAvroType: Schema, nullable:\n \n   private def newStructConverter(\n       catalystStruct: StructType, avroStruct: Schema): InternalRow => Record = {\n-    if (avroStruct.getType != RECORD) {\n+    if (avroStruct.getType != RECORD || avroStruct.getFields.size() != catalystStruct.length) {\n       throw new IncompatibleSchemaException(s\"Cannot convert Catalyst type $catalystStruct to \" +\n         s\"Avro type $avroStruct.\")\n     }\n-    val avroFields = avroStruct.getFields\n-    assert(avroFields.size() == catalystStruct.length)",
    "line": 10
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "Ah, I miss it. :)",
    "commit": "088bc83a7d5f767bcdfa98d72fd5bf6f1293f8f8",
    "createdAt": "2018-08-20T12:40:38Z",
    "diffHunk": "@@ -201,13 +201,11 @@ class AvroSerializer(rootCatalystType: DataType, rootAvroType: Schema, nullable:\n \n   private def newStructConverter(\n       catalystStruct: StructType, avroStruct: Schema): InternalRow => Record = {\n-    if (avroStruct.getType != RECORD) {\n+    if (avroStruct.getType != RECORD || avroStruct.getFields.size() != catalystStruct.length) {\n       throw new IncompatibleSchemaException(s\"Cannot convert Catalyst type $catalystStruct to \" +\n         s\"Avro type $avroStruct.\")\n     }\n-    val avroFields = avroStruct.getFields\n-    assert(avroFields.size() == catalystStruct.length)",
    "line": 10
  }],
  "prId": 22151
}]