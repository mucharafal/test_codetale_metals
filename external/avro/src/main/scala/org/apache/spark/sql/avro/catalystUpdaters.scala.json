[{
  "comments": [{
    "author": {
      "login": "edrevo"
    },
    "body": "This should probably be marked as `@Experimental`, but someone from the Spark team should confirm.",
    "commit": "cc5352243de47c664631333300579174d5fd75d0",
    "createdAt": "2019-11-18T12:37:06Z",
    "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.sql.avro\n+\n+import org.apache.spark.sql.catalyst.InternalRow\n+import org.apache.spark.sql.catalyst.expressions.SpecializedGetters\n+import org.apache.spark.sql.catalyst.util.ArrayData\n+import org.apache.spark.sql.types.{AbstractDataType, Decimal}\n+\n+\n+/**\n+* A base interface for updating values inside catalyst data structure like `InternalRow` and\n+* `ArrayData`.\n+*/\n+sealed trait CatalystDataUpdater {",
    "line": 30
  }],
  "prId": 26524
}]