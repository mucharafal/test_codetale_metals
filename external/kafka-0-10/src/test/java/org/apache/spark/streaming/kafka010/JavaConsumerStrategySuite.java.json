[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "Shouldnt this be `scala.collection.Map<TopicPartition, scala.Long>` to really test this out?\n",
    "commit": "2f65fc190f648943fd47c2a4754f8e3897b5b8fd",
    "createdAt": "2016-06-30T20:09:58Z",
    "diffHunk": "@@ -44,37 +44,39 @@ public void testConsumerStrategyConstructors() {\n     kafkaParams.put(\"bootstrap.servers\", \"not used\");\n     final scala.collection.Map<String, Object> sKafkaParams =\n       JavaConverters.mapAsScalaMapConverter(kafkaParams).asScala();\n-    final Map<TopicPartition, Object> offsets = new HashMap<>();\n+    final Map<TopicPartition, Long> offsets = new HashMap<>();\n     offsets.put(tp1, 23L);\n     final scala.collection.Map<TopicPartition, Object> sOffsets =",
    "line": 7
  }, {
    "author": {
      "login": "koeninger"
    },
    "body": "Scala is going to compile foo(map[TopicPartition, scala.Long]) to bytecode for foo(map[TopicPartiiton, Object]).  It's boxed and erased either way, just looks a little weird to call it from java.\n",
    "commit": "2f65fc190f648943fd47c2a4754f8e3897b5b8fd",
    "createdAt": "2016-06-30T20:19:15Z",
    "diffHunk": "@@ -44,37 +44,39 @@ public void testConsumerStrategyConstructors() {\n     kafkaParams.put(\"bootstrap.servers\", \"not used\");\n     final scala.collection.Map<String, Object> sKafkaParams =\n       JavaConverters.mapAsScalaMapConverter(kafkaParams).asScala();\n-    final Map<TopicPartition, Object> offsets = new HashMap<>();\n+    final Map<TopicPartition, Long> offsets = new HashMap<>();\n     offsets.put(tp1, 23L);\n     final scala.collection.Map<TopicPartition, Object> sOffsets =",
    "line": 7
  }, {
    "author": {
      "login": "tdas"
    },
    "body": "yeah. I guess it better to test these explicitly nonetheless, rather than writing tests that assume certain JVM behavior. No strong feelings for this though.\n",
    "commit": "2f65fc190f648943fd47c2a4754f8e3897b5b8fd",
    "createdAt": "2016-06-30T21:45:24Z",
    "diffHunk": "@@ -44,37 +44,39 @@ public void testConsumerStrategyConstructors() {\n     kafkaParams.put(\"bootstrap.servers\", \"not used\");\n     final scala.collection.Map<String, Object> sKafkaParams =\n       JavaConverters.mapAsScalaMapConverter(kafkaParams).asScala();\n-    final Map<TopicPartition, Object> offsets = new HashMap<>();\n+    final Map<TopicPartition, Long> offsets = new HashMap<>();\n     offsets.put(tp1, 23L);\n     final scala.collection.Map<TopicPartition, Object> sOffsets =",
    "line": 7
  }],
  "prId": 13998
}]