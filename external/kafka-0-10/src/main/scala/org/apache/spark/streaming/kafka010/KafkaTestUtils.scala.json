[{
  "comments": [{
    "author": {
      "login": "holdenk"
    },
    "body": "super minor: could use foreach instead of map since we don't care about the return value.\n",
    "commit": "a1ef31129faa3c571bfd58c196ce3757eec890b8",
    "createdAt": "2016-07-30T05:21:11Z",
    "diffHunk": "@@ -178,8 +178,9 @@ private[kafka010] class KafkaTestUtils extends Logging {\n \n   /** Send the array of messages to the Kafka broker */\n   def sendMessages(topic: String, messages: Array[String]): Unit = {\n-    producer = new Producer[String, String](new ProducerConfig(producerConfiguration))\n-    producer.send(messages.map { new KeyedMessage[String, String](topic, _ ) }: _*)\n+    producer = new KafkaProducer[String, String](producerConfiguration)\n+    val records = messages.map { new ProducerRecord[String, String](topic, _) }\n+    records.map(producer.send)"
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "Oh, thank you.\n",
    "commit": "a1ef31129faa3c571bfd58c196ce3757eec890b8",
    "createdAt": "2016-07-30T06:29:23Z",
    "diffHunk": "@@ -178,8 +178,9 @@ private[kafka010] class KafkaTestUtils extends Logging {\n \n   /** Send the array of messages to the Kafka broker */\n   def sendMessages(topic: String, messages: Array[String]): Unit = {\n-    producer = new Producer[String, String](new ProducerConfig(producerConfiguration))\n-    producer.send(messages.map { new KeyedMessage[String, String](topic, _ ) }: _*)\n+    producer = new KafkaProducer[String, String](producerConfiguration)\n+    val records = messages.map { new ProducerRecord[String, String](topic, _) }\n+    records.map(producer.send)"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "This type of thing is even essential for correctness in some cases, like https://issues.apache.org/jira/browse/SPARK-16664\n",
    "commit": "a1ef31129faa3c571bfd58c196ce3757eec890b8",
    "createdAt": "2016-07-30T11:35:19Z",
    "diffHunk": "@@ -178,8 +178,9 @@ private[kafka010] class KafkaTestUtils extends Logging {\n \n   /** Send the array of messages to the Kafka broker */\n   def sendMessages(topic: String, messages: Array[String]): Unit = {\n-    producer = new Producer[String, String](new ProducerConfig(producerConfiguration))\n-    producer.send(messages.map { new KeyedMessage[String, String](topic, _ ) }: _*)\n+    producer = new KafkaProducer[String, String](producerConfiguration)\n+    val records = messages.map { new ProducerRecord[String, String](topic, _) }\n+    records.map(producer.send)"
  }],
  "prId": 14416
}, {
  "comments": [{
    "author": {
      "login": "koeninger"
    },
    "body": "I think the point here was that you don't need to map at all; messages.foreach should suffice.\n",
    "commit": "a1ef31129faa3c571bfd58c196ce3757eec890b8",
    "createdAt": "2016-07-30T13:49:09Z",
    "diffHunk": "@@ -178,8 +178,9 @@ private[kafka010] class KafkaTestUtils extends Logging {\n \n   /** Send the array of messages to the Kafka broker */\n   def sendMessages(topic: String, messages: Array[String]): Unit = {\n-    producer = new Producer[String, String](new ProducerConfig(producerConfiguration))\n-    producer.send(messages.map { new KeyedMessage[String, String](topic, _ ) }: _*)\n+    producer = new KafkaProducer[String, String](producerConfiguration)\n+    val records = messages.map { new ProducerRecord[String, String](topic, _) }\n+    records.foreach(producer.send)"
  }],
  "prId": 14416
}]