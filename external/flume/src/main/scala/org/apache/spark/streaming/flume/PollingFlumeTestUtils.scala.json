[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "Is this necessary? Isnt `eventsPerBatch` accessible from Java and Python?\n",
    "commit": "78dfdac7216c3e68a42c6534f497289212a31a8a",
    "createdAt": "2015-06-30T09:29:24Z",
    "diffHunk": "@@ -0,0 +1,211 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.flume\n+\n+import java.util.concurrent._\n+import java.util.{List => JList, Map => JMap}\n+\n+import scala.collection.JavaConversions._\n+import scala.collection.mutable.ArrayBuffer\n+\n+import com.google.common.base.Charsets.UTF_8\n+import org.apache.flume.event.EventBuilder\n+import org.apache.flume.Context\n+import org.apache.flume.channel.MemoryChannel\n+import org.apache.flume.conf.Configurables\n+\n+import org.apache.spark.streaming.flume.sink.{SparkSinkConfig, SparkSink}\n+\n+/**\n+ * Share codes for Scala and Python unit tests\n+ */\n+private[flume] class PollingFlumeTestUtils {\n+\n+  private val batchCount = 5\n+  private val eventsPerBatch = 100\n+  private val totalEventsPerChannel = batchCount * eventsPerBatch\n+  private val channelCapacity = 5000\n+\n+  def getEventsPerBatch: Int = eventsPerBatch"
  }],
  "prId": 6830
}]