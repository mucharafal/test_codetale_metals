[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Curious what this is about?\n",
    "commit": "c36fff554e199b4ae6fb086a1dc3af9b919f5bce",
    "createdAt": "2014-07-27T10:07:14Z",
    "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.hbase\n+\n+import _root_.io.netty.util.internal.logging.{Slf4JLoggerFactory, InternalLoggerFactory}\n+import org.scalatest.BeforeAndAfterAll\n+import org.scalatest.BeforeAndAfterEach\n+import org.scalatest.Suite\n+import org.apache.spark.SparkContext\n+\n+/** Manages a local `sc` {@link SparkContext} variable, correctly stopping it after each test. */\n+trait LocalSparkContext extends BeforeAndAfterEach with BeforeAndAfterAll { self: Suite =>\n+\n+  @transient var sc: SparkContext = _\n+\n+  override def beforeAll() {\n+    InternalLoggerFactory.setDefaultFactory(new Slf4JLoggerFactory())",
    "line": 32
  }],
  "prId": 1608
}]