[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "Possiable -> Possible",
    "commit": "bde6120320bb8a4abc68597b0c021d9284998f93",
    "createdAt": "2017-04-25T18:27:27Z",
    "diffHunk": "@@ -62,11 +63,20 @@ private[kafka010] case class CachedKafkaConsumer private(\n \n   case class AvailableOffsetRange(earliest: Long, latest: Long)\n \n+  private def runUninterruptiblyIfPossiable[T](body: => T): T = Thread.currentThread match {"
  }],
  "prId": 17761
}, {
  "comments": [{
    "author": {
      "login": "kunalkhamar"
    },
    "body": "nit: rename `runUninterruptiblyIfPossible`",
    "commit": "bde6120320bb8a4abc68597b0c021d9284998f93",
    "createdAt": "2017-04-25T18:27:46Z",
    "diffHunk": "@@ -62,11 +63,20 @@ private[kafka010] case class CachedKafkaConsumer private(\n \n   case class AvailableOffsetRange(earliest: Long, latest: Long)\n \n+  private def runUninterruptiblyIfPossiable[T](body: => T): T = Thread.currentThread match {"
  }],
  "prId": 17761
}]