[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "incorrect indent. i believe 4 indents on continuation of param list.",
    "commit": "3bc7c4cb8cb93eef2275a517ce72f0bcb8919cfe",
    "createdAt": "2017-02-02T19:23:42Z",
    "diffHunk": "@@ -22,11 +22,11 @@ import org.apache.kafka.common.TopicPartition\n /*\n  * Values that can be specified for config startingOffsets\n  */\n-private[kafka010] sealed trait StartingOffsets\n+private[kafka010] sealed trait KafkaOffsets\n \n-private[kafka010] case object EarliestOffsets extends StartingOffsets\n+private[kafka010] case object EarliestOffsets extends KafkaOffsets\n \n-private[kafka010] case object LatestOffsets extends StartingOffsets\n+private[kafka010] case object LatestOffsets extends KafkaOffsets\n \n private[kafka010] case class SpecificOffsets(\n-  partitionOffsets: Map[TopicPartition, Long]) extends StartingOffsets\n+  partitionOffsets: Map[TopicPartition, Long]) extends KafkaOffsets"
  }],
  "prId": 16686
}, {
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "docs.",
    "commit": "3bc7c4cb8cb93eef2275a517ce72f0bcb8919cfe",
    "createdAt": "2017-02-02T19:26:28Z",
    "diffHunk": "@@ -22,11 +22,11 @@ import org.apache.kafka.common.TopicPartition\n /*\n  * Values that can be specified for config startingOffsets\n  */\n-private[kafka010] sealed trait StartingOffsets\n+private[kafka010] sealed trait KafkaOffsets\n \n-private[kafka010] case object EarliestOffsets extends StartingOffsets\n+private[kafka010] case object EarliestOffsets extends KafkaOffsets"
  }],
  "prId": 16686
}, {
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "nit: better docs. this is object, not a method. say what the object represents. \"Bind to earliest offsets...\" is like docs for a method",
    "commit": "3bc7c4cb8cb93eef2275a517ce72f0bcb8919cfe",
    "createdAt": "2017-02-03T12:28:54Z",
    "diffHunk": "@@ -19,14 +19,31 @@ package org.apache.spark.sql.kafka010\n \n import org.apache.kafka.common.TopicPartition\n \n-/*\n- * Values that can be specified for config startingOffsets\n+/**\n+ * Values that can be specified to configure starting,\n+ * ending, and specific offsets.\n  */\n-private[kafka010] sealed trait StartingOffsets\n+private[kafka010] sealed trait KafkaOffsets\n \n-private[kafka010] case object EarliestOffsets extends StartingOffsets\n+/**\n+ * Bind to the earliest offsets in Kafka"
  }],
  "prId": 16686
}, {
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "nit: Used to represent unresolved offset limits as longs\r\n\"unbounded\" sounds like its infinite, or something.",
    "commit": "3bc7c4cb8cb93eef2275a517ce72f0bcb8919cfe",
    "createdAt": "2017-02-03T12:30:04Z",
    "diffHunk": "@@ -19,14 +19,31 @@ package org.apache.spark.sql.kafka010\n \n import org.apache.kafka.common.TopicPartition\n \n-/*\n- * Values that can be specified for config startingOffsets\n+/**\n+ * Values that can be specified to configure starting,\n+ * ending, and specific offsets.\n  */\n-private[kafka010] sealed trait StartingOffsets\n+private[kafka010] sealed trait KafkaOffsets\n \n-private[kafka010] case object EarliestOffsets extends StartingOffsets\n+/**\n+ * Bind to the earliest offsets in Kafka\n+ */\n+private[kafka010] case object EarliestOffsets extends KafkaOffsets\n \n-private[kafka010] case object LatestOffsets extends StartingOffsets\n+/**\n+ * Bind to the latest offsets in Kafka\n+ */\n+private[kafka010] case object LatestOffsets extends KafkaOffsets\n \n+/**\n+ * Bind to the specific offsets. A offset == -1 binds to the latest\n+ * offset, and offset == -2 binds to the earliest offset.\n+ */\n private[kafka010] case class SpecificOffsets(\n-  partitionOffsets: Map[TopicPartition, Long]) extends StartingOffsets\n+    partitionOffsets: Map[TopicPartition, Long]) extends KafkaOffsets\n+\n+private[kafka010] object KafkaOffsets {\n+  // Used to denote unbounded offset positions"
  }],
  "prId": 16686
}, {
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "The more I think, I feel that its weird to name this generic \"KafkaOffsets\". Let's brainstorm on this.",
    "commit": "3bc7c4cb8cb93eef2275a517ce72f0bcb8919cfe",
    "createdAt": "2017-02-03T12:37:58Z",
    "diffHunk": "@@ -19,14 +19,31 @@ package org.apache.spark.sql.kafka010\n \n import org.apache.kafka.common.TopicPartition\n \n-/*\n- * Values that can be specified for config startingOffsets\n+/**\n+ * Values that can be specified to configure starting,\n+ * ending, and specific offsets.\n  */\n-private[kafka010] sealed trait StartingOffsets\n+private[kafka010] sealed trait KafkaOffsets"
  }, {
    "author": {
      "login": "tdas"
    },
    "body": "How about `KafkaRangeLimit` or `KafkaOffsetRangeLimit`",
    "commit": "3bc7c4cb8cb93eef2275a517ce72f0bcb8919cfe",
    "createdAt": "2017-02-03T12:43:16Z",
    "diffHunk": "@@ -19,14 +19,31 @@ package org.apache.spark.sql.kafka010\n \n import org.apache.kafka.common.TopicPartition\n \n-/*\n- * Values that can be specified for config startingOffsets\n+/**\n+ * Values that can be specified to configure starting,\n+ * ending, and specific offsets.\n  */\n-private[kafka010] sealed trait StartingOffsets\n+private[kafka010] sealed trait KafkaOffsets"
  }, {
    "author": {
      "login": "tcondie"
    },
    "body": "I went with KafkaOffsetRangeLimit",
    "commit": "3bc7c4cb8cb93eef2275a517ce72f0bcb8919cfe",
    "createdAt": "2017-02-03T17:17:24Z",
    "diffHunk": "@@ -19,14 +19,31 @@ package org.apache.spark.sql.kafka010\n \n import org.apache.kafka.common.TopicPartition\n \n-/*\n- * Values that can be specified for config startingOffsets\n+/**\n+ * Values that can be specified to configure starting,\n+ * ending, and specific offsets.\n  */\n-private[kafka010] sealed trait StartingOffsets\n+private[kafka010] sealed trait KafkaOffsets"
  }],
  "prId": 16686
}]