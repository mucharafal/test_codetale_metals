[{
  "comments": [{
    "author": {
      "login": "HeartSaVioR"
    },
    "body": "nit: explicitly assigning `includeHeaders = true` may look easier to see.",
    "commit": "de02de411aa00cbacc94be5b746dc48be0fe77a3",
    "createdAt": "2018-09-03T10:14:26Z",
    "diffHunk": "@@ -136,6 +142,19 @@ class KafkaRelationSuite extends QueryTest with SharedSQLContext with KafkaTest\n     checkAnswer(df, (0 to 30).map(_.toString).toDF)\n   }\n \n+  test(\"default starting and ending offsets with headers\") {\n+    val topic = newTopic()\n+    testUtils.createTopic(topic, partitions = 3)\n+    testUtils.sendMessage(topic, (null, \"1\", Array((\"once\", \"1\"), (\"twice\", \"2\"))), Some(0))\n+    testUtils.sendMessage(topic, (null, \"2\", Array((\"once\", \"2\"), (\"twice\", \"4\"))), Some(1))\n+    testUtils.sendMessage(topic, (null, \"3\", Array((\"once\", \"3\"), (\"twice\", \"6\"))), Some(2))\n+\n+    // Implicit offset values, should default to earliest and latest\n+    val df = createDF(topic, Map.empty[String, String], None, true)"
  }],
  "prId": 22282
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Very small suggestion: flip the if condition to avoid the negation",
    "commit": "de02de411aa00cbacc94be5b746dc48be0fe77a3",
    "createdAt": "2019-01-13T14:39:28Z",
    "diffHunk": "@@ -71,7 +71,13 @@ class KafkaRelationSuite extends QueryTest with SharedSQLContext with KafkaTest\n     withOptions.foreach {\n       case (key, value) => df.option(key, value)\n     }\n-    df.load().selectExpr(\"CAST(value AS STRING)\")\n+    if (!includeHeaders) {"
  }],
  "prId": 22282
}, {
  "comments": [{
    "author": {
      "login": "HeartSaVioR"
    },
    "body": "I'd use `StandardCharsets.UTF_8`. If we concern about longer line, it won't hurt to import it and just use `UTF_8` in this method.",
    "commit": "de02de411aa00cbacc94be5b746dc48be0fe77a3",
    "createdAt": "2019-07-25T00:03:16Z",
    "diffHunk": "@@ -158,19 +157,21 @@ abstract class KafkaRelationSuiteBase extends QueryTest with SharedSQLContext wi\n     val topic = newTopic()\n     testUtils.createTopic(topic, partitions = 3)\n     testUtils.sendMessage(\n-      topic, (\"1\", Array((\"once\", \"1\".getBytes), (\"twice\", \"2\".getBytes))), Some(0)\n+      topic, (\"1\", Seq()), Some(0)\n     )\n     testUtils.sendMessage(\n-      topic, (\"2\", Array((\"once\", \"2\".getBytes), (\"twice\", \"4\".getBytes))), Some(1)\n+      topic, (\"2\", Seq((\"a\", \"b\".getBytes(\"UTF-8\")), (\"c\", \"d\".getBytes(\"UTF-8\")))), Some(1)"
  }, {
    "author": {
      "login": "dongjinleekr"
    },
    "body": "You are right, `StandardCharsets.UTF_8` is definitely better and I also prefer it. However, as of present `StandardCharsets.UTF_8` and `\"UTF-8\"` are used in the whole codebase mixed up. It seems like they should be cleaned up in the other PR. @HyukjinKwon May I take it?",
    "commit": "de02de411aa00cbacc94be5b746dc48be0fe77a3",
    "createdAt": "2019-07-25T02:12:07Z",
    "diffHunk": "@@ -158,19 +157,21 @@ abstract class KafkaRelationSuiteBase extends QueryTest with SharedSQLContext wi\n     val topic = newTopic()\n     testUtils.createTopic(topic, partitions = 3)\n     testUtils.sendMessage(\n-      topic, (\"1\", Array((\"once\", \"1\".getBytes), (\"twice\", \"2\".getBytes))), Some(0)\n+      topic, (\"1\", Seq()), Some(0)\n     )\n     testUtils.sendMessage(\n-      topic, (\"2\", Array((\"once\", \"2\".getBytes), (\"twice\", \"4\".getBytes))), Some(1)\n+      topic, (\"2\", Seq((\"a\", \"b\".getBytes(\"UTF-8\")), (\"c\", \"d\".getBytes(\"UTF-8\")))), Some(1)"
  }, {
    "author": {
      "login": "HeartSaVioR"
    },
    "body": "I would be happy to deal with cleaning up. Just want to avoid adding more for what Spark seems to use less. (I sought with \".getBytes\" and StandardCharsets.UTF_8 is used majorly.)",
    "commit": "de02de411aa00cbacc94be5b746dc48be0fe77a3",
    "createdAt": "2019-07-25T05:50:23Z",
    "diffHunk": "@@ -158,19 +157,21 @@ abstract class KafkaRelationSuiteBase extends QueryTest with SharedSQLContext wi\n     val topic = newTopic()\n     testUtils.createTopic(topic, partitions = 3)\n     testUtils.sendMessage(\n-      topic, (\"1\", Array((\"once\", \"1\".getBytes), (\"twice\", \"2\".getBytes))), Some(0)\n+      topic, (\"1\", Seq()), Some(0)\n     )\n     testUtils.sendMessage(\n-      topic, (\"2\", Array((\"once\", \"2\".getBytes), (\"twice\", \"4\".getBytes))), Some(1)\n+      topic, (\"2\", Seq((\"a\", \"b\".getBytes(\"UTF-8\")), (\"c\", \"d\".getBytes(\"UTF-8\")))), Some(1)"
  }, {
    "author": {
      "login": "HeartSaVioR"
    },
    "body": "Raised #25335 for cleaning up.",
    "commit": "de02de411aa00cbacc94be5b746dc48be0fe77a3",
    "createdAt": "2019-08-02T06:39:23Z",
    "diffHunk": "@@ -158,19 +157,21 @@ abstract class KafkaRelationSuiteBase extends QueryTest with SharedSQLContext wi\n     val topic = newTopic()\n     testUtils.createTopic(topic, partitions = 3)\n     testUtils.sendMessage(\n-      topic, (\"1\", Array((\"once\", \"1\".getBytes), (\"twice\", \"2\".getBytes))), Some(0)\n+      topic, (\"1\", Seq()), Some(0)\n     )\n     testUtils.sendMessage(\n-      topic, (\"2\", Array((\"once\", \"2\".getBytes), (\"twice\", \"4\".getBytes))), Some(1)\n+      topic, (\"2\", Seq((\"a\", \"b\".getBytes(\"UTF-8\")), (\"c\", \"d\".getBytes(\"UTF-8\")))), Some(1)"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Go ahead and use `UTF-8` rather than the string here",
    "commit": "de02de411aa00cbacc94be5b746dc48be0fe77a3",
    "createdAt": "2019-08-16T18:05:31Z",
    "diffHunk": "@@ -158,19 +157,21 @@ abstract class KafkaRelationSuiteBase extends QueryTest with SharedSQLContext wi\n     val topic = newTopic()\n     testUtils.createTopic(topic, partitions = 3)\n     testUtils.sendMessage(\n-      topic, (\"1\", Array((\"once\", \"1\".getBytes), (\"twice\", \"2\".getBytes))), Some(0)\n+      topic, (\"1\", Seq()), Some(0)\n     )\n     testUtils.sendMessage(\n-      topic, (\"2\", Array((\"once\", \"2\".getBytes), (\"twice\", \"4\".getBytes))), Some(1)\n+      topic, (\"2\", Seq((\"a\", \"b\".getBytes(\"UTF-8\")), (\"c\", \"d\".getBytes(\"UTF-8\")))), Some(1)"
  }],
  "prId": 22282
}, {
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Nit: put the new param on a new line",
    "commit": "de02de411aa00cbacc94be5b746dc48be0fe77a3",
    "createdAt": "2019-08-16T18:05:04Z",
    "diffHunk": "@@ -70,7 +70,7 @@ abstract class KafkaRelationSuiteBase extends QueryTest with SharedSQLContext wi\n   protected def createDF(\n       topic: String,\n       withOptions: Map[String, String] = Map.empty[String, String],\n-      brokerAddress: Option[String] = None) = {\n+      brokerAddress: Option[String] = None, includeHeaders: Boolean = false) = {"
  }],
  "prId": 22282
}]