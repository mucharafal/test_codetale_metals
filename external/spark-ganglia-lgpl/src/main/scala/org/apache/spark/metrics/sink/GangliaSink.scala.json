[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "it should be `Locale.ROOT`\r\n\r\nI don't know how the jenkins passed the test, can someone check the jenkins script and see if this ganglia module is totally skipped by jenkins?",
    "commit": "adb63e4b0a04a8bb2c1f3054646fb2c9bdac49f1",
    "createdAt": "2018-10-06T13:52:29Z",
    "diffHunk": "@@ -64,11 +64,12 @@ class GangliaSink(val property: Properties, val registry: MetricRegistry,\n   val ttl = propertyToOption(GANGLIA_KEY_TTL).map(_.toInt).getOrElse(GANGLIA_DEFAULT_TTL)\n   val dmax = propertyToOption(GANGLIA_KEY_DMAX).map(_.toInt).getOrElse(GANGLIA_DEFAULT_DMAX)\n   val mode: UDPAddressingMode = propertyToOption(GANGLIA_KEY_MODE)\n-    .map(u => GMetric.UDPAddressingMode.valueOf(u.toUpperCase)).getOrElse(GANGLIA_DEFAULT_MODE)\n+    .map(u => GMetric.UDPAddressingMode.valueOf(u.toUpperCase(Locale.Root)))",
    "line": 14
  }, {
    "author": {
      "login": "cloud-fan"
    },
    "body": "cc @shaneknapp ",
    "commit": "adb63e4b0a04a8bb2c1f3054646fb2c9bdac49f1",
    "createdAt": "2018-10-06T13:53:01Z",
    "diffHunk": "@@ -64,11 +64,12 @@ class GangliaSink(val property: Properties, val registry: MetricRegistry,\n   val ttl = propertyToOption(GANGLIA_KEY_TTL).map(_.toInt).getOrElse(GANGLIA_DEFAULT_TTL)\n   val dmax = propertyToOption(GANGLIA_KEY_DMAX).map(_.toInt).getOrElse(GANGLIA_DEFAULT_DMAX)\n   val mode: UDPAddressingMode = propertyToOption(GANGLIA_KEY_MODE)\n-    .map(u => GMetric.UDPAddressingMode.valueOf(u.toUpperCase)).getOrElse(GANGLIA_DEFAULT_MODE)\n+    .map(u => GMetric.UDPAddressingMode.valueOf(u.toUpperCase(Locale.Root)))",
    "line": 14
  }, {
    "author": {
      "login": "HyukjinKwon"
    },
    "body": "That's odd. Let me check soon within few days.",
    "commit": "adb63e4b0a04a8bb2c1f3054646fb2c9bdac49f1",
    "createdAt": "2018-10-06T16:06:28Z",
    "diffHunk": "@@ -64,11 +64,12 @@ class GangliaSink(val property: Properties, val registry: MetricRegistry,\n   val ttl = propertyToOption(GANGLIA_KEY_TTL).map(_.toInt).getOrElse(GANGLIA_DEFAULT_TTL)\n   val dmax = propertyToOption(GANGLIA_KEY_DMAX).map(_.toInt).getOrElse(GANGLIA_DEFAULT_DMAX)\n   val mode: UDPAddressingMode = propertyToOption(GANGLIA_KEY_MODE)\n-    .map(u => GMetric.UDPAddressingMode.valueOf(u.toUpperCase)).getOrElse(GANGLIA_DEFAULT_MODE)\n+    .map(u => GMetric.UDPAddressingMode.valueOf(u.toUpperCase(Locale.Root)))",
    "line": 14
  }, {
    "author": {
      "login": "gatorsmile"
    },
    "body": "Fixed in https://github.com/apache/spark/pull/22658",
    "commit": "adb63e4b0a04a8bb2c1f3054646fb2c9bdac49f1",
    "createdAt": "2018-10-06T17:14:54Z",
    "diffHunk": "@@ -64,11 +64,12 @@ class GangliaSink(val property: Properties, val registry: MetricRegistry,\n   val ttl = propertyToOption(GANGLIA_KEY_TTL).map(_.toInt).getOrElse(GANGLIA_DEFAULT_TTL)\n   val dmax = propertyToOption(GANGLIA_KEY_DMAX).map(_.toInt).getOrElse(GANGLIA_DEFAULT_DMAX)\n   val mode: UDPAddressingMode = propertyToOption(GANGLIA_KEY_MODE)\n-    .map(u => GMetric.UDPAddressingMode.valueOf(u.toUpperCase)).getOrElse(GANGLIA_DEFAULT_MODE)\n+    .map(u => GMetric.UDPAddressingMode.valueOf(u.toUpperCase(Locale.Root)))",
    "line": 14
  }],
  "prId": 22647
}]