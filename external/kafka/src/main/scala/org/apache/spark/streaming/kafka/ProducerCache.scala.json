[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "Isn't this going to share one Producer across the entire JVM, and potentially unrelated applications?\n",
    "commit": "0a45f1ab5ba5f9440a78e47e48b48f0321d440c1",
    "createdAt": "2014-10-29T08:09:38Z",
    "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.streaming.kafka\n+\n+object ProducerCache {\n+\n+  private var producerOpt: Option[Any] = None"
  }, {
    "author": {
      "login": "harishreedharan"
    },
    "body": "AFAIK, each executor runs a single JVM per application. The idea is to just reuse the Producer in the JVM.\n\nI maybe wrong though (at least it seems that way in YARN mode at least - the executors are allocated when the application starts, and I don't think they are shared between applications).\n\nIf that is not the case, I think we'd have to just create a new Producer per partition - which is a higher overhead though.\n",
    "commit": "0a45f1ab5ba5f9440a78e47e48b48f0321d440c1",
    "createdAt": "2014-10-29T16:58:48Z",
    "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.streaming.kafka\n+\n+object ProducerCache {\n+\n+  private var producerOpt: Option[Any] = None"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "An executor can run multiple tasks at once though. Do they always have the same config and is the Producer thread-safe. I am not sure how much it is guaranteed that there is one executor per JVM. To me it feels safer to make a Producer per partition. They aren't that heavy to create and there aren't that many partitions relative to data size.\n",
    "commit": "0a45f1ab5ba5f9440a78e47e48b48f0321d440c1",
    "createdAt": "2014-10-29T22:35:34Z",
    "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.streaming.kafka\n+\n+object ProducerCache {\n+\n+  private var producerOpt: Option[Any] = None"
  }, {
    "author": {
      "login": "harishreedharan"
    },
    "body": "My understanding is that the tasks are all part of the same application - so it should be fine (we are not sharing data between applications).\n\nThe Producer is thread-safe (I tested that while writing a KafkaChannel for Flume), so that should be fine.\n\nBut if it is not that heavy to create per partition (it would be around once per 2 seconds or so), then I will go ahead and do that. That does have the benefit of avoiding some of the complex code meant to handle reusing the producer.\n",
    "commit": "0a45f1ab5ba5f9440a78e47e48b48f0321d440c1",
    "createdAt": "2014-10-29T23:20:53Z",
    "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.spark.streaming.kafka\n+\n+object ProducerCache {\n+\n+  private var producerOpt: Option[Any] = None"
  }],
  "prId": 2994
}]