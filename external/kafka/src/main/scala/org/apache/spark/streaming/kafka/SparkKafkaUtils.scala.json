[{
  "comments": [{
    "author": {
      "login": "koeninger"
    },
    "body": "This is relying on details of Kafka's internal usage of ZK paths, as opposed to going through the kafka consumer offset api.\n",
    "commit": "3d7e0c810878652024acbb9cc1501d461d1e1852",
    "createdAt": "2015-03-07T01:13:36Z",
    "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kafka\n+\n+import scala.collection.Map\n+\n+import kafka.common.TopicAndPartition\n+import kafka.utils.{ZkUtils, ZKGroupTopicDirs}\n+import org.I0Itec.zkclient.ZkClient\n+import org.apache.spark.Logging\n+\n+private[streaming]\n+object SparkKafkaUtils extends Logging {\n+\n+  /**\n+   * Commit the offset of Kafka's topic/partition, the commit mechanism follow Kafka 0.8.x's\n+   * metadata schema in Zookeeper.\n+   */\n+  def commitOffset(zkClient: ZkClient, groupId: String,\n+      offsetMap: Map[TopicAndPartition, Long]): Unit = {\n+    if (zkClient == null) {\n+      throw new IllegalStateException(\"Zookeeper client is unexpectedly null\")\n+    }\n+\n+    for ((topicAndPart, offset) <- offsetMap) {\n+      try {\n+        val topicDirs = new ZKGroupTopicDirs(groupId, topicAndPart.topic)\n+        val zkPath = s\"${topicDirs.consumerOffsetDir}/${topicAndPart.partition}\""
  }, {
    "author": {
      "login": "jerryshao"
    },
    "body": "Thanks a lot, I will change to use Kafka consumer offset api.\n",
    "commit": "3d7e0c810878652024acbb9cc1501d461d1e1852",
    "createdAt": "2015-03-09T01:23:47Z",
    "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kafka\n+\n+import scala.collection.Map\n+\n+import kafka.common.TopicAndPartition\n+import kafka.utils.{ZkUtils, ZKGroupTopicDirs}\n+import org.I0Itec.zkclient.ZkClient\n+import org.apache.spark.Logging\n+\n+private[streaming]\n+object SparkKafkaUtils extends Logging {\n+\n+  /**\n+   * Commit the offset of Kafka's topic/partition, the commit mechanism follow Kafka 0.8.x's\n+   * metadata schema in Zookeeper.\n+   */\n+  def commitOffset(zkClient: ZkClient, groupId: String,\n+      offsetMap: Map[TopicAndPartition, Long]): Unit = {\n+    if (zkClient == null) {\n+      throw new IllegalStateException(\"Zookeeper client is unexpectedly null\")\n+    }\n+\n+    for ((topicAndPart, offset) <- offsetMap) {\n+      try {\n+        val topicDirs = new ZKGroupTopicDirs(groupId, topicAndPart.topic)\n+        val zkPath = s\"${topicDirs.consumerOffsetDir}/${topicAndPart.partition}\""
  }],
  "prId": 4805
}]