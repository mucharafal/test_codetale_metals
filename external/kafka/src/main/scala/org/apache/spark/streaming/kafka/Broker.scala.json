[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "nit: extra space\n",
    "commit": "f7151d4e80c9bfe72d0240902d448df4412dc172",
    "createdAt": "2015-02-10T21:36:34Z",
    "diffHunk": "@@ -17,41 +17,54 @@\n \n package org.apache.spark.streaming.kafka\n \n-import kafka.common.TopicAndPartition\n-\n import org.apache.spark.annotation.Experimental\n \n /**\n  * :: Experimental ::\n- * Represent the host info for the leader of a Kafka partition.\n+ * Represent the host and port info for a Kafka broker.\n+ * Differs from the Kafka project's internal kafka.cluster.Broker, which contains a server ID\n  */\n @Experimental\n-final class Leader private(\n-    /** Kafka topic name */\n-    val topic: String,\n-    /** Kafka partition id */\n-    val partition: Int,\n-    /** Leader's hostname */\n+final class Broker private(\n+    /** Broker's hostname */\n     val host: String,\n-    /** Leader's port */\n-    val port: Int) extends Serializable\n+    /** Broker's port */\n+    val port: Int) extends Serializable {\n+\n+  override def equals(obj: Any): Boolean = obj match {\n+    case that: Broker =>\n+      this.host == that.host &&\n+      this.port == that.port\n+    case _ => false\n+  }\n+\n+  override def hashCode: Int = {\n+    41 * (41 + host.hashCode) + port\n+  }\n+\n+  override def toString(): String = {\n+    s\"Broker($host, $port)\"\n+  }\n+"
  }],
  "prId": 4511
}]