[{
  "comments": [{
    "author": {
      "login": "mariobriggs"
    },
    "body": "This is another place where we can't use 'new' in the class name . See https://github.com/apache/spark/pull/9007 which recently got merged. We have to make this a public class because of valid use-cases like https://issues.apache.org/jira/browse/SPARK-13106\n",
    "commit": "229b773f9c5c894088a29937f241ad0db48991ba",
    "createdAt": "2016-02-08T18:08:13Z",
    "diffHunk": "@@ -0,0 +1,156 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kafka\n+\n+import java.util\n+import java.util.Collections\n+\n+import scala.collection.JavaConverters._\n+import scala.reflect._\n+\n+import org.apache.kafka.clients.consumer.{KafkaConsumer, OffsetAndMetadata, OffsetResetStrategy}\n+import org.apache.kafka.common.{PartitionInfo, TopicPartition}\n+\n+import org.apache.spark.SparkException\n+\n+/**\n+ * @param kafkaParams Kafka <a href=\"http://kafka.apache.org/documentation.html#configuration\">\n+ *                    configuration parameters</a>.\n+ *                    Requires \"bootstrap.servers\" to be set with Kafka broker(s),\n+ *                    NOT zookeeper servers, specified in host1:port1,host2:port2 form\n+ */\n+private[spark]\n+class NewKafkaCluster[K: ClassTag, V: ClassTag](val kafkaParams: Map[String, String])"
  }, {
    "author": {
      "login": "markgrover"
    },
    "body": "Thanks, it did conflict with this PR but I have merged it. I will make the NewKafkaCluster class public as well, similar to this change now.\n",
    "commit": "229b773f9c5c894088a29937f241ad0db48991ba",
    "createdAt": "2016-02-09T19:34:41Z",
    "diffHunk": "@@ -0,0 +1,156 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kafka\n+\n+import java.util\n+import java.util.Collections\n+\n+import scala.collection.JavaConverters._\n+import scala.reflect._\n+\n+import org.apache.kafka.clients.consumer.{KafkaConsumer, OffsetAndMetadata, OffsetResetStrategy}\n+import org.apache.kafka.common.{PartitionInfo, TopicPartition}\n+\n+import org.apache.spark.SparkException\n+\n+/**\n+ * @param kafkaParams Kafka <a href=\"http://kafka.apache.org/documentation.html#configuration\">\n+ *                    configuration parameters</a>.\n+ *                    Requires \"bootstrap.servers\" to be set with Kafka broker(s),\n+ *                    NOT zookeeper servers, specified in host1:port1,host2:port2 form\n+ */\n+private[spark]\n+class NewKafkaCluster[K: ClassTag, V: ClassTag](val kafkaParams: Map[String, String])"
  }],
  "prId": 10953
}]