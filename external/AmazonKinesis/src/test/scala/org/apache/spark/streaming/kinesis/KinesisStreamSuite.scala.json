[{
  "comments": [{
    "author": {
      "login": "tdas"
    },
    "body": "This unit test does not really test anything. Is it possible to add a unit test that actually tests receiving data. Without proper unit tests, we have a lot of trouble understanding and analyzing when things have failed.\n",
    "commit": "faa1743d8e4f6a2d66f4825e5400372e89a3ba7d",
    "createdAt": "2014-03-26T01:39:19Z",
    "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kinesis\n+\n+import org.apache.spark.streaming.{StreamingContext, TestSuiteBase}\n+import org.apache.spark.storage.StorageLevel\n+\n+class KinesisStreamSuite extends TestSuiteBase {\n+\n+  test(\"Kinesis input stream\") {\n+    val ssc = new StreamingContext(master, framework, batchDuration)\n+    val test1 = KinesisUtils.createStream(ssc, accesskey=\"x\",accessSecretKey=\"y\",kinesisStream=\"z\")"
  }, {
    "author": {
      "login": "pdeyhim"
    },
    "body": "unless i include AWS credentials in this test, there's no way to receive data from Kinesis. I'll take another looks and see if i can come up with something more comprehensive but a very little can be done without credentials.\n",
    "commit": "faa1743d8e4f6a2d66f4825e5400372e89a3ba7d",
    "createdAt": "2014-03-26T14:56:53Z",
    "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.streaming.kinesis\n+\n+import org.apache.spark.streaming.{StreamingContext, TestSuiteBase}\n+import org.apache.spark.storage.StorageLevel\n+\n+class KinesisStreamSuite extends TestSuiteBase {\n+\n+  test(\"Kinesis input stream\") {\n+    val ssc = new StreamingContext(master, framework, batchDuration)\n+    val test1 = KinesisUtils.createStream(ssc, accesskey=\"x\",accessSecretKey=\"y\",kinesisStream=\"z\")"
  }],
  "prId": 223
}]