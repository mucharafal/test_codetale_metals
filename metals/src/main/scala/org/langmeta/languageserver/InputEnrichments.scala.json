[
  {
    "id" : "9de5dc54-5c43-465a-ae44-b1f066e72538",
    "prId" : 275,
    "comments" : [
      {
        "id" : "fb05a7c4-42df-48cb-93ad-d5165f877e96",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "these are the cases in which I wish we had a structural type system",
        "createdAt" : "2018-04-10T08:19:14Z",
        "updatedAt" : "2018-05-06T12:40:25Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "42765d7effb4a73998347fa6fb448b3c5e13c5ab",
    "line" : null,
    "diffHunk" : "@@ -24,13 +25,12 @@ object InputEnrichments {\n     }\n   }\n   implicit class XtensionInputOffset(val input: Input) extends AnyVal {\n-    def toIndexRange(start: Int, end: Int): i.Range = {\n-      val pos = Position.Range(input, start, end)\n+    def toIndexRange(r: semanticdb3.Range): i.Range = {\n       i.Range(\n-        startLine = pos.startLine,\n-        startColumn = pos.startColumn,\n-        endLine = pos.endLine,\n-        endColumn = pos.endColumn\n+        startLine = r.startLine,\n+        startColumn = r.startCharacter,\n+        endLine = r.endLine,\n+        endColumn = r.endCharacter"
  }
]