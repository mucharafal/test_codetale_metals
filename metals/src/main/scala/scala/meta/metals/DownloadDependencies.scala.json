[
  {
    "id" : "eeaa4042-e0b2-4b5c-9416-86925ed7840d",
    "prId" : 1501,
    "comments" : [
      {
        "id" : "549a2223-ca3b-4ccc-99fe-4970842b0779",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Maybe we can introduce the same type of download method like for mtags and semanticdb?",
        "createdAt" : "2020-03-14T15:51:42Z",
        "updatedAt" : "2020-03-14T18:27:12Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e47feaa9-7abb-4c24-8de9-2c9944a9752e",
        "parentId" : "549a2223-ca3b-4ccc-99fe-4970842b0779",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Good idea, done",
        "createdAt" : "2020-03-14T18:27:19Z",
        "updatedAt" : "2020-03-14T18:27:19Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "76c8716cb3ecfbc7e83af36561dbe793ee1a8263",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,75 @@\n+package scala.meta.metals\n+\n+import scala.meta.internal.metals.Embedded\n+import scala.meta.internal.metals.BuildInfo\n+import scala.meta.internal.metals.ScalaVersions\n+import scala.meta.internal.metals.FormattingProvider\n+import java.nio.file.Files\n+import bloop.launcher.Launcher\n+import scala.meta.internal.metals.MetalsLogger\n+\n+object DownloadDependencies {\n+\n+  /**\n+   * A main class that populates the Coursier download cache with Metals dependencies.\n+   *\n+   * The `org.scalameta:metals` artifact on Maven Central doesn't directly\n+   * depend on all of its dependencies. Some dependencies like Scalafmt are\n+   * dynamic depending on the Scalafmt version that users have configured in\n+   * their workspace. This main method does a best-effort to try and\n+   * pre-download as much as possible.\n+   *\n+   * @param args ignored.\n+   */\n+  def main(args: Array[String]): Unit = {\n+    MetalsLogger.updateDefaultFormat()\n+    downloadMdoc()\n+    downloadScalafmt()\n+    downloadMtags()\n+    downloadSemanticDB()\n+    // NOTE(olafur): important, Bloop comes last because it does System.exit()\n+    downloadBloop()\n+  }\n+\n+  def downloadMdoc(): Unit = {\n+    scribe.info(\"Downloading mdoc\")\n+    BuildInfo.supportedScalaVersions.foreach { scalaVersion =>\n+      Embedded\n+        .newMdocClassLoader("
  }
]