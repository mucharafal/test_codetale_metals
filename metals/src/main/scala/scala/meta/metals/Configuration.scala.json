[
  {
    "id" : "61ff9e19-cd7f-4d9b-9b20-06c30f586989",
    "prId" : 204,
    "comments" : [
      {
        "id" : "8d29bf67-e4fa-4b6b-9253-5cafce8829f0",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I suspect the problem with spurious highlights might be because we haven't integrated token edit-distance with references yet. It should work robustly even on stale semanticdbs as long as we adjust the ranges.",
        "createdAt" : "2018-03-21T17:42:15Z",
        "updatedAt" : "2018-03-26T21:54:32Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "15398a10a92978b2096e501f8c36977849adc782",
    "line" : null,
    "diffHunk" : "@@ -30,6 +31,7 @@ object Configuration {\n   )\n   @JsonCodec case class Scalac(enabled: Boolean = false)\n   @JsonCodec case class Hover(enabled: Boolean = false)\n+  @JsonCodec case class Highlight(enabled: Boolean = false)"
  },
  {
    "id" : "0ec9301f-3e92-407d-a9e8-25f41a7bfea9",
    "prId" : 204,
    "comments" : [
      {
        "id" : "d184298d-d017-42ae-8903-ebca97316e17",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Unrelated to this PR. I think it might be safe to enable hover by default. It should work as robustly if more robustly than goto definition",
        "createdAt" : "2018-03-21T18:08:07Z",
        "updatedAt" : "2018-03-26T21:54:32Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "15398a10a92978b2096e501f8c36977849adc782",
    "line" : null,
    "diffHunk" : "@@ -30,6 +31,7 @@ object Configuration {\n   )\n   @JsonCodec case class Scalac(enabled: Boolean = false)\n   @JsonCodec case class Hover(enabled: Boolean = false)"
  },
  {
    "id" : "c93495ae-86f6-4ce1-aea2-ddd463d74e61",
    "prId" : 204,
    "comments" : [
      {
        "id" : "35676d6b-7687-497e-b90f-f6f0fa180f80",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Might be nice to add a `def enabled: Boolean = completions.enabled || diagnostics.enabled` ",
        "createdAt" : "2018-03-26T13:44:53Z",
        "updatedAt" : "2018-03-26T21:54:32Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "67b1e651-5c3a-480b-aeae-677f0aa4d678",
        "parentId" : "35676d6b-7687-497e-b90f-f6f0fa180f80",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Added in 15398a1",
        "createdAt" : "2018-03-26T21:54:51Z",
        "updatedAt" : "2018-03-26T21:54:52Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "15398a10a92978b2096e501f8c36977849adc782",
    "line" : 13,
    "diffHunk" : "@@ -28,8 +29,15 @@ object Configuration {\n       enabled: Boolean = false,\n       command: String = \"test:compile\"\n   )\n-  @JsonCodec case class Scalac(enabled: Boolean = false)\n+  @JsonCodec case class Scalac("
  },
  {
    "id" : "7b5a6ed8-d570-4772-af6c-a4b63635aa0c",
    "prId" : 236,
    "comments" : [
      {
        "id" : "96b56e0b-e2cb-463f-be9d-384c82977c97",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "can you make this change also on the vscode extension?",
        "createdAt" : "2018-04-04T08:11:20Z",
        "updatedAt" : "2018-04-04T08:11:20Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bc643569-4394-4b38-8ab1-0c3618a8b63e",
        "parentId" : "96b56e0b-e2cb-463f-be9d-384c82977c97",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "ah, nvm, it's already on!",
        "createdAt" : "2018-04-04T08:11:39Z",
        "updatedAt" : "2018-04-04T08:11:39Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1d665dc7b442fd5fa732042e9aa737bb0a7d2888",
    "line" : 5,
    "diffHunk" : "@@ -38,7 +38,7 @@ object Configuration {\n   @JsonCodec case class ScalacCompletions(enabled: Boolean = false)\n   @JsonCodec case class ScalacDiagnostics(enabled: Boolean = false)\n \n-  @JsonCodec case class Hover(enabled: Boolean = false)\n+  @JsonCodec case class Hover(enabled: Boolean = true)"
  },
  {
    "id" : "597da092-e309-465e-acc0-ab5dd91642e3",
    "prId" : 263,
    "comments" : [
      {
        "id" : "3955660f-0158-4a04-8e2b-a42e1eb95557",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Since these two classes are now shared, I would remove the default value from here.",
        "createdAt" : "2018-04-07T09:46:28Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "19173761-9662-48da-be72-b883bbd50f7f",
        "parentId" : "3955660f-0158-4a04-8e2b-a42e1eb95557",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Unrelated, I've wondered if we should have `case class Enabled(enabled: Boolean)` and use it like `completions: Enabled`",
        "createdAt" : "2018-04-07T11:06:24Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "705141bc-4026-445c-8e7c-dc45b12af24b",
        "parentId" : "3955660f-0158-4a04-8e2b-a42e1eb95557",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Yep, that crossed my mind too. My reason for initially using different classes is that I assumed they would diverge. Since it's a cheap change, we could probably get away with a single `Enabled` class now and diverge later if necessary.",
        "createdAt" : "2018-04-07T12:05:28Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "74062b5a-3807-4915-8317-8a7e0ec59000",
        "parentId" : "3955660f-0158-4a04-8e2b-a42e1eb95557",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Done",
        "createdAt" : "2018-04-07T16:13:03Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "eb9717ef4d08ec6934f78ba760a875a8bf64e77a",
    "line" : null,
    "diffHunk" : "@@ -27,16 +27,17 @@ object Configuration {\n \n   @JsonCodec case class Sbt(\n       enabled: Boolean = false,\n-      command: String = \"test:compile\"\n+      diagnostics: Diagnostics = Diagnostics(enabled = true),\n+      command: String = \"test:compile\",\n   )\n   @JsonCodec case class Scalac(\n-      completions: ScalacCompletions = ScalacCompletions(),\n-      diagnostics: ScalacDiagnostics = ScalacDiagnostics(),\n+      completions: Completions = Completions(enabled = false),\n+      diagnostics: Diagnostics = Diagnostics(enabled = false),\n   ) {\n     def enabled: Boolean = completions.enabled || diagnostics.enabled\n   }\n-  @JsonCodec case class ScalacCompletions(enabled: Boolean = false)\n-  @JsonCodec case class ScalacDiagnostics(enabled: Boolean = false)\n+  @JsonCodec case class Completions(enabled: Boolean = false)\n+  @JsonCodec case class Diagnostics(enabled: Boolean = false)"
  },
  {
    "id" : "00d8ccb6-a906-4a7c-aca1-cc7af12574c9",
    "prId" : 263,
    "comments" : [
      {
        "id" : "0e654dae-2c84-4cdc-b66f-0eff2706941f",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Why this change? Anyhow, if we make this, we can as well make it a `RelativePath` instead of `Option[RelativePath]`. However, I feel Scalafix/Scalafmt should handle the absence of a configuration themselves, instead of being fed a default one.\r\n\r\n /cc @olafurpg ",
        "createdAt" : "2018-04-07T18:23:15Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "956d09c5-abe4-43e2-8376-fc4dee29b7ca",
        "parentId" : "0e654dae-2c84-4cdc-b66f-0eff2706941f",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "These defaults were set in the vscode extension and I thought that this should work fine if the configs are absent. What is the advantage of setting it to `None`?",
        "createdAt" : "2018-04-07T18:32:48Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a07f176d-2692-492a-8d77-5c37a2b15613",
        "parentId" : "0e654dae-2c84-4cdc-b66f-0eff2706941f",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "It's a conceptual argument. Scalafix and Scalafmt don't require a configuration, so I would prefer letting them decide what to do in case the config is absent.\r\n\r\nUnder this spirit, I would rather remove the defaults from the VSCode extension.",
        "createdAt" : "2018-04-08T09:46:28Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6919c9a0-2a6c-4e20-bee9-4626a2fe2b31",
        "parentId" : "0e654dae-2c84-4cdc-b66f-0eff2706941f",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I think it makes sense to distinguish between \"no configured file\" vs. \"user wants to use this particular config file\"",
        "createdAt" : "2018-04-08T17:24:27Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4682430e-3918-4693-9174-b4ffe4595683",
        "parentId" : "0e654dae-2c84-4cdc-b66f-0eff2706941f",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "These two features are enabled now (as considered stable), but if the config location is not set, it will require an extra action from user. I agree with @gabro [from the past](https://github.com/scalameta/metals/issues/16#issuecomment-343094392):\r\n\r\n> I would just like to point out that when using language-server scalafix is already included. The user just needs to provide a .scalafix.conf and it starts working. No additional installation is required, other than the semanticdb-scalac compiler plugin.\r\n\r\nAlso I don't think that removing default locations from vscode is good, because currently it gives user a clue where they are expected to put those files. \r\n\r\n----\r\n\r\n@olafurpg I didn't get, what is your point?",
        "createdAt" : "2018-04-08T22:36:13Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "be00dd9c-1f5b-40ac-9056-32c396bd0bea",
        "parentId" : "0e654dae-2c84-4cdc-b66f-0eff2706941f",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I'm fine either way, probably best to set a default value instead of `None`. I agree with @gabro that conceptually it's good to leave to scalafix/scalafmt to decide what to do on \"empty configuration\" but having a default value make it clearer for users what goes into that setting.",
        "createdAt" : "2018-04-09T10:52:41Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a3fe9296-de66-4c55-9221-37054d36b683",
        "parentId" : "0e654dae-2c84-4cdc-b66f-0eff2706941f",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "OK, so I left the defaults. I just want to note that in case of Atom, users won't be able to set it to `None`, only to `Some(\"\")`, so conceptual differences aside, I wouldn't use `Option` in this config.",
        "createdAt" : "2018-04-09T15:17:26Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "eb9717ef4d08ec6934f78ba760a875a8bf64e77a",
    "line" : null,
    "diffHunk" : "@@ -43,14 +43,14 @@ object Configuration {\n       enabled: Boolean = true,\n       onSave: Boolean = false,\n       version: String = \"1.4.0\",\n-      confPath: Option[RelativePath] = None\n+      confPath: Option[RelativePath] = Some(Scalafmt.defaultConfPath)"
  },
  {
    "id" : "156cedb7-88da-445b-9ba8-4f39fcaee6d5",
    "prId" : 263,
    "comments" : [
      {
        "id" : "bcd775b4-cdc7-451a-ba5e-c1e59169860c",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Should this be empty?",
        "createdAt" : "2018-04-09T10:49:14Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f990959c-a39e-4da7-8e6d-1aa8d6ed462e",
        "parentId" : "bcd775b4-cdc7-451a-ba5e-c1e59169860c",
        "author" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "body" : "Yes, I didn't change it yet. Did you see https://github.com/scalameta/metals/pull/263#discussion_r179964441?",
        "createdAt" : "2018-04-09T11:29:11Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "laughedelic",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/766656?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7f5f9d9e-0dd9-4ef4-ae6f-09c414c0b1ce",
        "parentId" : "bcd775b4-cdc7-451a-ba5e-c1e59169860c",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I had seen that comment in my email but failed to find it in the github ui, thanks for the link!",
        "createdAt" : "2018-04-09T12:01:30Z",
        "updatedAt" : "2018-04-09T15:51:26Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "eb9717ef4d08ec6934f78ba760a875a8bf64e77a",
    "line" : null,
    "diffHunk" : "@@ -16,44 +16,41 @@ import Configuration._\n     scalafmt: Scalafmt = Scalafmt(),\n     scalafix: Scalafix = Scalafix(),\n     search: Search = Search(),\n-    hover: Hover = Hover(),\n-    highlight: Highlight = Highlight(),\n-    rename: Rename = Rename(),\n+    hover: Enabled = Enabled(true),\n+    highlight: Enabled = Enabled(false),\n+    rename: Enabled = Enabled(false),\n )\n \n object Configuration {\n   implicit val circeConfiguration: CirceConfiguration =\n     CirceConfiguration.default.withDefaults\n \n+  @JsonCodec case class Enabled(enabled: Boolean)\n+\n   @JsonCodec case class Sbt(\n       enabled: Boolean = false,\n-      command: String = \"test:compile\"\n+      diagnostics: Enabled = Enabled(true),\n+      command: String = \"test:compile\","
  }
]