[
  {
    "id" : "d81f227c-3700-46b9-8512-7d7140afd01f",
    "prId" : 328,
    "comments" : [
      {
        "id" : "afa07fc4-e18a-4ceb-aa9d-ca3d3ccb07b2",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "rename `notifications` to `client` for consistency?",
        "createdAt" : "2018-09-27T16:42:11Z",
        "updatedAt" : "2018-09-28T10:27:16Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "83ca56dd-c802-4b31-9b79-3572e32b41aa",
        "parentId" : "afa07fc4-e18a-4ceb-aa9d-ca3d3ccb07b2",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Good idea, done.",
        "createdAt" : "2018-09-28T10:25:49Z",
        "updatedAt" : "2018-09-28T10:27:42Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "96502991e960357139cd91699cca01f9b0425a07",
    "line" : null,
    "diffHunk" : "@@ -1,33 +1,21 @@\n package scala.meta.metals\n \n-import java.nio.charset.StandardCharsets.UTF_8\n-import scala.beans.BeanProperty\n-import scala.meta.lsp.Window._\n import scala.meta.jsonrpc.JsonRpcClient\n-import ch.qos.logback.classic.encoder.PatternLayoutEncoder\n-import ch.qos.logback.classic.spi.ILoggingEvent\n-import ch.qos.logback.classic.Level\n-import ch.qos.logback.core.AppenderBase\n-\n-class LSPLogger(@BeanProperty var encoder: PatternLayoutEncoder)\n-    extends AppenderBase[ILoggingEvent] {\n-  import LSPLogger._\n+import scala.meta.lsp.Window._\n+import scribe.Level\n+import scribe.LogRecord\n+import scribe.writer.Writer\n \n-  override def append(event: ILoggingEvent): Unit = {\n-    val message =\n-      if (encoder != null) new String(encoder.encode(event), UTF_8)\n-      else event.getFormattedMessage\n+object LSPLogger extends Writer {\n+  var notifications: Option[JsonRpcClient] = None"
  }
]