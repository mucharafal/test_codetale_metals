[
  {
    "id" : "d0bb7c7b-df7f-4c7c-aa40-fc359b26b686",
    "prId" : 275,
    "comments" : [
      {
        "id" : "9cfb039b-ef68-4e8e-b958-08203711fb65",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "`if` and `else` branches yield the same value",
        "createdAt" : "2018-04-10T08:31:39Z",
        "updatedAt" : "2018-05-06T12:40:25Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "42765d7effb4a73998347fa6fb448b3c5e13c5ab",
    "line" : null,
    "diffHunk" : "@@ -32,40 +30,52 @@ trait MtagsIndexer {\n     currentOwner = old\n     result\n   }\n-  def term(name: String, pos: m.Position, flags: Long): Unit =\n-    addSignature(Signature.Term(name), pos, flags)\n-  def term(name: Term.Name, flags: Long): Unit =\n-    addSignature(Signature.Term(name.value), name.pos, flags)\n-  def param(name: Name, flags: Long): Unit =\n-    addSignature(Signature.TermParameter(name.value), name.pos, flags)\n-  def tpe(name: String, pos: m.Position, flags: Long): Unit =\n-    addSignature(Signature.Type(name), pos, flags)\n-  def tpe(name: Name, flags: Long): Unit =\n-    addSignature(Signature.Type(name.value), name.pos, flags)\n+  def term(name: String, pos: m.Position, kind: Kind, properties: Int): Unit =\n+    addSignature(Signature.Term(name), pos, kind, properties)\n+  def term(name: Term.Name, kind: Kind, properties: Int): Unit =\n+    addSignature(Signature.Term(name.value), name.pos, kind, properties)\n+  def param(name: Name, kind: Kind, properties: Int): Unit =\n+    addSignature(\n+      Signature.TermParameter(name.value),\n+      name.pos,\n+      kind,\n+      properties\n+    )\n+  def tpe(name: String, pos: m.Position, kind: Kind, properties: Int): Unit =\n+    addSignature(Signature.Type(name), pos, kind, properties)\n+  def tpe(name: Name, kind: Kind, properties: Int): Unit =\n+    addSignature(Signature.Type(name.value), name.pos, kind, properties)\n   def pkg(ref: Term): Unit = ref match {\n     case Name(name) =>\n       currentOwner = symbol(Signature.Term(name))\n     case Term.Select(qual, Name(name)) =>\n       pkg(qual)\n       currentOwner = symbol(Signature.Term(name))\n   }\n-  private val names = List.newBuilder[ResolvedName]\n-  private val symbols = List.newBuilder[ResolvedSymbol]\n+  private val names = List.newBuilder[s.SymbolOccurrence]\n+  private val symbols = List.newBuilder[s.SymbolInformation]\n   private def addSignature(\n       signature: Signature,\n       definition: m.Position,\n-      flags: Long\n+      kind: s.SymbolInformation.Kind,\n+      properties: Int\n   ): Unit = {\n     currentOwner = symbol(signature)\n     val syntax = currentOwner.syntax\n-    names += ResolvedName(\n-      Some(Position(definition.start, definition.end)),\n+    val role =\n+      if (kind.isPackage) s.SymbolOccurrence.Role.REFERENCE\n+      else s.SymbolOccurrence.Role.REFERENCE"
  }
]