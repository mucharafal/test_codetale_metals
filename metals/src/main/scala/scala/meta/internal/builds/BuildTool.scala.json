[
  {
    "id" : "cad88950-d9f9-4bca-b868-ace7409c8c83",
    "prId" : 694,
    "comments" : [
      {
        "id" : "be6025eb-5b1e-463c-bfc5-06df1282d645",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "nit: can we move this into static methods on an object?",
        "createdAt" : "2019-04-25T10:05:49Z",
        "updatedAt" : "2019-05-07T08:42:52Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "95e8d18af9437cb5a757194bc83a227e9c0b8d79",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,40 @@\n+package scala.meta.internal.builds\n+\n+import java.nio.file.{Files, Path}\n+import scala.meta.internal.metals._\n+import scala.meta.io.AbsolutePath\n+import scala.util.Try\n+\n+abstract class BuildTool {\n+  def args(\n+      workspace: AbsolutePath,\n+      userConfig: () => UserConfiguration\n+  ): List[String]\n+\n+  def digest(workspace: AbsolutePath): Option[String]\n+\n+  def version: String\n+\n+  def minimumVersion: String\n+\n+  def isCompatibleVersion: Boolean = {"
  },
  {
    "id" : "80688396-dded-4960-b32e-06248091d936",
    "prId" : 935,
    "comments" : [
      {
        "id" : "b5516e26-1616-4608-9a75-2223e476da45",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "Why don't we pass the `userConfig` to the constructor of `BuildTool` and `Digest`s? Or even better, to the factories creating those. It would make the juggling of the argument unnecessary.",
        "createdAt" : "2019-09-20T06:44:53Z",
        "updatedAt" : "2019-12-05T19:30:31Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ffb97ce1-72b9-46cc-951a-5b727b15529a",
        "parentId" : "b5516e26-1616-4608-9a75-2223e476da45",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This is a great idea. I agree it's cleaner, done.",
        "createdAt" : "2019-09-20T11:05:35Z",
        "updatedAt" : "2019-12-05T19:30:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a95ae87fd9621161d156685f32480fcb7bb451a4",
    "line" : null,
    "diffHunk" : "@@ -12,7 +12,10 @@ abstract class BuildTool {\n       config: MetalsServerConfig\n   ): List[String]\n \n-  def digest(workspace: AbsolutePath): Option[String]\n+  def digest(\n+      workspace: AbsolutePath,\n+      userConfig: UserConfiguration"
  },
  {
    "id" : "65ec7bb1-1ddc-4ed4-94b5-f8ba9a529476",
    "prId" : 967,
    "comments" : [
      {
        "id" : "9652ca84-c61a-4ea5-b52b-91af75c53aeb",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "We're re-reading the `.gitignore` file on every path. It would be better to bind the value of `readText` to a variable.",
        "createdAt" : "2019-10-08T06:37:54Z",
        "updatedAt" : "2019-10-08T06:38:47Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2d981137-0685-4491-a22a-359bf9afd3c1",
        "parentId" : "9652ca84-c61a-4ea5-b52b-91af75c53aeb",
        "author" : {
          "login" : "ashwinbhaskar",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/6818365?u=5a691206bbdcdc7257c6d47dfb281565dde9839f&v=4"
        },
        "body" : "@olafurpg makes sense! I will do that",
        "createdAt" : "2019-10-08T07:23:48Z",
        "updatedAt" : "2019-10-08T07:23:49Z",
        "lastEditedBy" : {
          "login" : "ashwinbhaskar",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/6818365?u=5a691206bbdcdc7257c6d47dfb281565dde9839f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "b098388f750fc2eba665a7f68e6e200cbcd4f1b7",
    "line" : 16,
    "diffHunk" : "@@ -30,6 +31,15 @@ abstract class BuildTool {\n \n   def executableName: String\n \n+  def gitignore(workspace: AbsolutePath, paths: List[String]): Unit = {\n+    val gitignore = workspace.resolve(\".gitignore\")\n+    if (gitignore.exists) {\n+      paths\n+        .filterNot(gitignore.readText.contains)"
  }
]