[
  {
    "id" : "831d2106-46b7-4bf9-b9db-6dec50e7156a",
    "prId" : 722,
    "comments" : [
      {
        "id" : "99ec06ac-128f-450a-b910-2aabc88b1a23",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "We need new bloop release to make it work.",
        "createdAt" : "2019-05-16T16:53:33Z",
        "updatedAt" : "2019-06-04T19:19:04Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3535cb22-5a58-4b27-b586-3c4ad2914e9a",
        "parentId" : "99ec06ac-128f-450a-b910-2aabc88b1a23",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "What is the workaround for people to try out this PR?",
        "createdAt" : "2019-05-20T15:30:42Z",
        "updatedAt" : "2019-06-04T19:19:04Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "56ce67af-481e-4ee5-a6f8-f8429fb5e47b",
        "parentId" : "99ec06ac-128f-450a-b910-2aabc88b1a23",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Publish newest bloop locally and then replace this version with that bloop version.",
        "createdAt" : "2019-05-20T16:20:00Z",
        "updatedAt" : "2019-06-04T19:19:04Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "27790ca0-74e3-46ad-96ee-0ec8535c72f6",
        "parentId" : "99ec06ac-128f-450a-b910-2aabc88b1a23",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Alternatively you can use 1.2.5 version, but it will not have sources.",
        "createdAt" : "2019-05-21T09:03:25Z",
        "updatedAt" : "2019-06-04T19:19:04Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "11fe128c6413d1e06c71678633c5f9d8649864ce",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,63 @@\n+package scala.meta.internal.builds\n+import scala.meta.internal.metals.{MetalsServerConfig, UserConfiguration}\n+import scala.meta.io.AbsolutePath\n+import scala.tools.nsc.Properties\n+\n+object MavenBuildTool extends BuildTool {\n+\n+  private lazy val embeddedMavenLauncher: AbsolutePath = {\n+    val mavenWrapper =\n+      if (Properties.isWin) \"mvnw.cmd\"\n+      else \"mvnw\"\n+    val out = BuildTool.copyFromResource(tempDir, mavenWrapper)\n+    out.toFile.setExecutable(true)\n+    Set(\n+      s\"maven-wrapper.jar\",\n+      \"maven-wrapper.properties\",\n+      \"MavenWrapperDownloader.java\"\n+    ).foreach { fileName =>\n+      BuildTool.copyFromResource(\n+        tempDir,\n+        s\"mvn/wrapper/$fileName\",\n+        Some(s\".mvn/wrapper/$fileName\")\n+      )\n+    }\n+    AbsolutePath(out)\n+  }\n+\n+  def args(\n+      workspace: AbsolutePath,\n+      userConfig: () => UserConfiguration,\n+      config: MetalsServerConfig\n+  ): List[String] = {\n+    // TODO this should have stable maven version\n+    // import scala.meta.internal.metals.BuildInfo\n+    // val command = s\"ch.epfl.scala:maven-bloop_2.10:${BuildInfo.bloopVersion}:bloopInstall\"\n+    val command =\n+      List(\n+        s\"ch.epfl.scala:maven-bloop_2.10:1.2.5+418-110de48b:bloopInstall\","
  },
  {
    "id" : "6f7f78b1-453b-46e7-851c-281dfa513b55",
    "prId" : 722,
    "comments" : [
      {
        "id" : "6a9b68f0-d477-48c2-8128-46cba4abeeda",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "path.filename (from Xtension)",
        "createdAt" : "2019-05-17T08:52:20Z",
        "updatedAt" : "2019-06-04T19:19:04Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "11fe128c6413d1e06c71678633c5f9d8649864ce",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,63 @@\n+package scala.meta.internal.builds\n+import scala.meta.internal.metals.{MetalsServerConfig, UserConfiguration}\n+import scala.meta.io.AbsolutePath\n+import scala.tools.nsc.Properties\n+\n+object MavenBuildTool extends BuildTool {\n+\n+  private lazy val embeddedMavenLauncher: AbsolutePath = {\n+    val mavenWrapper =\n+      if (Properties.isWin) \"mvnw.cmd\"\n+      else \"mvnw\"\n+    val out = BuildTool.copyFromResource(tempDir, mavenWrapper)\n+    out.toFile.setExecutable(true)\n+    Set(\n+      s\"maven-wrapper.jar\",\n+      \"maven-wrapper.properties\",\n+      \"MavenWrapperDownloader.java\"\n+    ).foreach { fileName =>\n+      BuildTool.copyFromResource(\n+        tempDir,\n+        s\"mvn/wrapper/$fileName\",\n+        Some(s\".mvn/wrapper/$fileName\")\n+      )\n+    }\n+    AbsolutePath(out)\n+  }\n+\n+  def args(\n+      workspace: AbsolutePath,\n+      userConfig: () => UserConfiguration,\n+      config: MetalsServerConfig\n+  ): List[String] = {\n+    // TODO this should have stable maven version\n+    // import scala.meta.internal.metals.BuildInfo\n+    // val command = s\"ch.epfl.scala:maven-bloop_2.10:${BuildInfo.bloopVersion}:bloopInstall\"\n+    val command =\n+      List(\n+        s\"ch.epfl.scala:maven-bloop_2.10:1.2.5+418-110de48b:bloopInstall\",\n+        \"-DdownloadSources=true\"\n+      )\n+    userConfig().mavenScript match {\n+      case Some(script) =>\n+        script :: command\n+      case None =>\n+        embeddedMavenLauncher.toString() :: command\n+    }\n+  }\n+\n+  def digest(workspace: AbsolutePath): Option[String] =\n+    MavenDigest.current(workspace)\n+\n+  def minimumVersion: String = \"3.5.2\"\n+\n+  def version: String = \"3.6.1\"\n+\n+  def isMavenRelatedPath(workspace: AbsolutePath, path: AbsolutePath) = {\n+    path.toNIO.startsWith(workspace.toNIO) && path.toNIO"
  },
  {
    "id" : "775b2f95-9ae9-4411-964b-0e253e31178b",
    "prId" : 722,
    "comments" : [
      {
        "id" : "6e7c8860-9f4b-40ba-9c2f-7ee1964faa1a",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "What happens if we turn `MavenBuildTool` into a `class` instead of `object`? Same for `GradleBuildTool`. I'm a concerned about doing I/O on lazy vals for global objects.",
        "createdAt" : "2019-05-20T15:34:31Z",
        "updatedAt" : "2019-06-04T19:19:04Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "21315a20-e2b6-4d36-ac47-a9d366954985",
        "parentId" : "6e7c8860-9f4b-40ba-9c2f-7ee1964faa1a",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Right, turned into classes, that wasn't an issue.",
        "createdAt" : "2019-05-21T10:23:26Z",
        "updatedAt" : "2019-06-04T19:19:04Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "11fe128c6413d1e06c71678633c5f9d8649864ce",
    "line" : 10,
    "diffHunk" : "@@ -0,0 +1,63 @@\n+package scala.meta.internal.builds\n+\n+import scala.meta.internal.metals.{MetalsServerConfig, UserConfiguration}\n+import scala.meta.io.AbsolutePath\n+import scala.tools.nsc.Properties\n+import scala.meta.internal.metals.MetalsEnrichments._\n+\n+object MavenBuildTool extends BuildTool {\n+\n+  private lazy val embeddedMavenLauncher: AbsolutePath = {"
  },
  {
    "id" : "ec120a24-ecd0-455f-b6ce-12ad74845c86",
    "prId" : 722,
    "comments" : [
      {
        "id" : "8264ce28-8a32-4a5e-98b0-1d1d998100b0",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "```suggestion\r\n  override def toString(): String = \"Maven\"\r\n```\r\n?",
        "createdAt" : "2019-06-05T13:21:01Z",
        "updatedAt" : "2019-06-05T13:25:46Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "791d65bd-6b21-4b6f-9aa1-93b7b5546d28",
        "parentId" : "8264ce28-8a32-4a5e-98b0-1d1d998100b0",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I think I need to rethink the tool name vs executable name in all of the build tools - I will create a follow up PR after mill is merged",
        "createdAt" : "2019-06-05T13:46:39Z",
        "updatedAt" : "2019-06-05T13:46:39Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "667c4bc8-0f25-4a43-84db-ee4553b08772",
        "parentId" : "8264ce28-8a32-4a5e-98b0-1d1d998100b0",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "The message \"New maven workspace detected\" would read nicer with an uppercase `M`. Same for Mill.",
        "createdAt" : "2019-06-05T13:49:42Z",
        "updatedAt" : "2019-06-05T13:49:42Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "11fe128c6413d1e06c71678633c5f9d8649864ce",
    "line" : 56,
    "diffHunk" : "@@ -0,0 +1,63 @@\n+package scala.meta.internal.builds\n+\n+import scala.meta.internal.metals.{MetalsServerConfig, UserConfiguration}\n+import scala.meta.io.AbsolutePath\n+import scala.tools.nsc.Properties\n+import scala.meta.internal.metals.MetalsEnrichments._\n+\n+case class MavenBuildTool() extends BuildTool {\n+\n+  private lazy val embeddedMavenLauncher: AbsolutePath = {\n+    val mavenWrapper =\n+      if (Properties.isWin) \"mvnw.cmd\"\n+      else \"mvnw\"\n+    val out = BuildTool.copyFromResource(tempDir, mavenWrapper)\n+    out.toFile.setExecutable(true)\n+    Set(\n+      s\"maven-wrapper.jar\",\n+      \"maven-wrapper.properties\",\n+      \"MavenWrapperDownloader.java\"\n+    ).foreach { fileName =>\n+      BuildTool.copyFromResource(\n+        tempDir,\n+        s\"mvn/wrapper/$fileName\",\n+        Some(s\".mvn/wrapper/$fileName\")\n+      )\n+    }\n+    AbsolutePath(out)\n+  }\n+\n+  def args(\n+      workspace: AbsolutePath,\n+      userConfig: () => UserConfiguration,\n+      config: MetalsServerConfig\n+  ): List[String] = {\n+    import scala.meta.internal.metals.BuildInfo\n+    val command =\n+      List(\n+        s\"ch.epfl.scala:maven-bloop_2.10:${BuildInfo.bloopVersion}:bloopInstall\",\n+        \"-DdownloadSources=true\"\n+      )\n+    userConfig().mavenScript match {\n+      case Some(script) =>\n+        script :: command\n+      case None =>\n+        embeddedMavenLauncher.toString() :: command\n+    }\n+  }\n+\n+  def digest(workspace: AbsolutePath): Option[String] =\n+    MavenDigest.current(workspace)\n+\n+  def minimumVersion: String = \"3.5.2\"\n+\n+  def version: String = \"3.6.1\"\n+\n+  override def toString(): String = \"maven\""
  }
]