[
  {
    "id" : "cd0b8595-7899-4fbc-82cd-00448874aae5",
    "prId" : 746,
    "comments" : [
      {
        "id" : "6c02b35e-d95a-4799-87e2-c8a34f060017",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "sbt is always lowercases ",
        "createdAt" : "2019-06-07T16:59:23Z",
        "updatedAt" : "2019-06-07T17:03:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c14fd952-8b74-4ab1-84ad-e82cc8e508ad",
        "parentId" : "6c02b35e-d95a-4799-87e2-c8a34f060017",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Fixed",
        "createdAt" : "2019-06-07T17:03:27Z",
        "updatedAt" : "2019-06-07T17:03:27Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "86ff7844b9e4e779de4ca78f5a755c78e311adc0",
    "line" : null,
    "diffHunk" : "@@ -80,6 +78,10 @@ case class SbtBuildTool(version: String) extends BuildTool {\n       Files.write(destination.toNIO, bytes)\n     }\n   }\n+\n+  override def toString: String = \"Sbt\""
  },
  {
    "id" : "895ff5ae-ee74-4f3a-a719-7c52fc38e564",
    "prId" : 852,
    "comments" : [
      {
        "id" : "0858167b-9386-47e3-b9b5-33a268d009ec",
        "parentId" : null,
        "author" : {
          "login" : "jvican",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2462974?u=247f9a0cfd142440687595dce462fabed087e912&v=4"
        },
        "body" : "Should we not also create this file in `project/project/metals.sbt` if any Scala files are defined under `project`?",
        "createdAt" : "2019-08-05T16:10:20Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "jvican",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2462974?u=247f9a0cfd142440687595dce462fabed087e912&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "69cfea4a-844e-4791-a1ea-b6a2e1eb01dd",
        "parentId" : "0858167b-9386-47e3-b9b5-33a268d009ec",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "The sbt targets are not yet supported, so this will only be needed once we actually add sbt support",
        "createdAt" : "2019-08-09T09:03:12Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a69617e0-3581-4054-8834-9efceba3946b",
        "parentId" : "0858167b-9386-47e3-b9b5-33a268d009ec",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Additionally we can add to metals.sbt `bloopExportJarClassifiers := Some(Set(\\\"source\\\"))` if we add plugin to project/project. Should be easy to do when working on sbt support",
        "createdAt" : "2019-08-12T11:49:43Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : 75,
    "diffHunk" : "@@ -51,31 +51,40 @@ case class SbtBuildTool(version: String) extends BuildTool {\n           sbtArgs\n         ).flatten\n     }\n-    writeSbtMetalsPlugin(config)\n+    writeSbtMetalsPlugin(workspace, config)\n     allArgs\n   }\n+\n   override def digest(\n       workspace: AbsolutePath\n   ): Option[String] = SbtDigest.current(workspace)\n   override val minimumVersion: String = \"0.13.17\"\n \n-  private def writeSbtMetalsPlugin(config: MetalsServerConfig): Unit = {\n-    val plugins =\n-      if (version.startsWith(\"0.13\")) SbtBuildTool.pluginsDirectory(\"0.13\")\n-      else SbtBuildTool.pluginsDirectory(\"1.0\")\n-    plugins.createDirectories()\n+  private def writeSbtMetalsPlugin(\n+      workspace: AbsolutePath,\n+      config: MetalsServerConfig\n+  ): Unit = {\n     val bytes = SbtBuildTool\n-      .globalMetalsSbt(config.bloopSbtVersion)\n+      .sbtPlugin(config.bloopSbtVersion)\n       .getBytes(StandardCharsets.UTF_8)\n-    val destination = plugins.resolve(\"metals.sbt\")\n-    if (destination.isFile && destination.readAllBytes.sameElements(bytes)) {\n+    val projectDir = workspace.resolve(\"project\")\n+    projectDir.toFile.mkdir()\n+    val metalsPluginfile = projectDir.resolve(\"metals.sbt\")"
  },
  {
    "id" : "dc516f31-af84-4592-930b-7da0906c0af2",
    "prId" : 852,
    "comments" : [
      {
        "id" : "671c2858-33f5-469d-b610-fbfa395d6752",
        "parentId" : null,
        "author" : {
          "login" : "jvican",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2462974?u=247f9a0cfd142440687595dce462fabed087e912&v=4"
        },
        "body" : "Migration-wise, we should probably delete the global metals.sbt if it exists so that whenever people already using Metals upgrade to the next version they don't use the previous mechanism to import the build.",
        "createdAt" : "2019-08-05T16:17:29Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "jvican",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2462974?u=247f9a0cfd142440687595dce462fabed087e912&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "845f7b94-7992-4b14-9f1c-b9fb61c0cd32",
        "parentId" : "671c2858-33f5-469d-b610-fbfa395d6752",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Great idea! Thanks!",
        "createdAt" : "2019-08-09T09:03:37Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2860bbb3-ebf2-416f-81cb-fe5b19d3163d",
        "parentId" : "671c2858-33f5-469d-b610-fbfa395d6752",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Added!",
        "createdAt" : "2019-08-12T11:34:47Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : 61,
    "diffHunk" : "@@ -51,31 +51,40 @@ case class SbtBuildTool(version: String) extends BuildTool {\n           sbtArgs\n         ).flatten\n     }\n-    writeSbtMetalsPlugin(config)\n+    writeSbtMetalsPlugin(workspace, config)\n     allArgs\n   }\n+\n   override def digest(\n       workspace: AbsolutePath\n   ): Option[String] = SbtDigest.current(workspace)\n   override val minimumVersion: String = \"0.13.17\"\n \n-  private def writeSbtMetalsPlugin(config: MetalsServerConfig): Unit = {\n-    val plugins =\n-      if (version.startsWith(\"0.13\")) SbtBuildTool.pluginsDirectory(\"0.13\")\n-      else SbtBuildTool.pluginsDirectory(\"1.0\")\n-    plugins.createDirectories()\n+  private def writeSbtMetalsPlugin(\n+      workspace: AbsolutePath,\n+      config: MetalsServerConfig\n+  ): Unit = {\n     val bytes = SbtBuildTool\n-      .globalMetalsSbt(config.bloopSbtVersion)"
  },
  {
    "id" : "822847a6-3587-4a03-808c-732f9a84a09d",
    "prId" : 852,
    "comments" : [
      {
        "id" : "538d44ce-ae4a-4570-9bcd-f4b0267002fc",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "why are we removing the old plugin? Shouldn't we just stop using it and not touch the home directory unless absolutely necessary?\r\nIf there is a reason for doing this, please add it as a comment",
        "createdAt" : "2019-08-12T12:31:46Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a61bd477-b178-4ef5-ac7e-237a9f4f8a0d",
        "parentId" : "538d44ce-ae4a-4570-9bcd-f4b0267002fc",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I think the reason is this https://github.com/scalameta/metals/pull/852#discussion_r310684012",
        "createdAt" : "2019-08-12T12:43:21Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6b394301-56b7-4761-8d97-a14d137ac6cb",
        "parentId" : "538d44ce-ae4a-4570-9bcd-f4b0267002fc",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I will add a comment.",
        "createdAt" : "2019-08-12T14:29:10Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4456953d-6d49-41e4-bf1e-aaf37c1f5ba3",
        "parentId" : "538d44ce-ae4a-4570-9bcd-f4b0267002fc",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Added",
        "createdAt" : "2019-08-12T15:32:32Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : null,
    "diffHunk" : "@@ -51,31 +51,56 @@ case class SbtBuildTool(version: String) extends BuildTool {\n           sbtArgs\n         ).flatten\n     }\n-    writeSbtMetalsPlugin(config)\n+    removeOldPlugin()"
  },
  {
    "id" : "67e232cd-db7f-4da4-bbbd-2bae9fba7afd",
    "prId" : 852,
    "comments" : [
      {
        "id" : "8ae6e97c-e01c-4c0c-9d01-6181b3cdf1ed",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "could you extract the condition to a variable? alternatively you could extract it to an extension method hasContent or something like that.",
        "createdAt" : "2019-08-12T12:36:57Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fc6d6d01-6a6f-436f-bff9-ba604f674324",
        "parentId" : "8ae6e97c-e01c-4c0c-9d01-6181b3cdf1ed",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Extracted to a variable.",
        "createdAt" : "2019-08-12T15:32:21Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : null,
    "diffHunk" : "@@ -51,31 +51,56 @@ case class SbtBuildTool(version: String) extends BuildTool {\n           sbtArgs\n         ).flatten\n     }\n-    writeSbtMetalsPlugin(config)\n+    removeOldPlugin()\n+    writeSbtMetalsPlugin(workspace, config)\n     allArgs\n   }\n+\n   override def digest(\n       workspace: AbsolutePath\n   ): Option[String] = SbtDigest.current(workspace)\n   override val minimumVersion: String = \"0.13.17\"\n \n-  private def writeSbtMetalsPlugin(config: MetalsServerConfig): Unit = {\n+  private def removeOldPlugin(): Unit = {\n+    def pluginsDirectory(version: String): AbsolutePath = {\n+      AbsolutePath(System.getProperty(\"user.home\"))\n+        .resolve(\".sbt\")\n+        .resolve(version)\n+        .resolve(\"plugins\")\n+    }\n     val plugins =\n-      if (version.startsWith(\"0.13\")) SbtBuildTool.pluginsDirectory(\"0.13\")\n-      else SbtBuildTool.pluginsDirectory(\"1.0\")\n-    plugins.createDirectories()\n+      if (version.startsWith(\"0.13\")) pluginsDirectory(\"0.13\")\n+      else pluginsDirectory(\"1.0\")\n+\n+    val metalsFile = plugins.resolve(\"metals.sbt\")\n+    if (metalsFile.exists) metalsFile.delete()\n+  }\n+\n+  private def writeSbtMetalsPlugin(\n+      workspace: AbsolutePath,\n+      config: MetalsServerConfig\n+  ): Unit = {\n     val bytes = SbtBuildTool\n-      .globalMetalsSbt(config.bloopSbtVersion)\n+      .sbtPlugin(config.bloopSbtVersion)\n       .getBytes(StandardCharsets.UTF_8)\n-    val destination = plugins.resolve(\"metals.sbt\")\n-    if (destination.isFile && destination.readAllBytes.sameElements(bytes)) {\n+    val projectDir = workspace.resolve(\"project\")\n+    projectDir.toFile.mkdir()\n+    val metalsPluginfile = projectDir.resolve(\"metals.sbt\")\n+    if (metalsPluginfile.isFile && metalsPluginfile.readAllBytes.sameElements("
  },
  {
    "id" : "45a50019-3f24-4cf3-a93e-d93d05396919",
    "prId" : 852,
    "comments" : [
      {
        "id" : "3a5db1e2-27f7-4667-8034-383c709bb119",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Maybe something more telling like:\r\n\r\n```suggestion\r\n    removeLegacyGlobalPlugin()\r\n```\r\n\r\n(PS: I haven't followed closely, but what's the technical reason for switching to a local plugin?)",
        "createdAt" : "2019-08-12T12:45:53Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ceb7ccb2-9206-460a-86aa-6da47024926e",
        "parentId" : "3a5db1e2-27f7-4667-8034-383c709bb119",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "It doesn't add the plugin for every workspace, which is useful to reduce some amount of overhead and is not encouraged by the sbt docs. Additionally, I don't think we would be able to work with sbt support, because global plugins don't add plugins to meta builds.",
        "createdAt" : "2019-08-12T15:02:51Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "eef11ce6-3314-4962-8619-c8f58066cbb3",
        "parentId" : "3a5db1e2-27f7-4667-8034-383c709bb119",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Fixed the name :)",
        "createdAt" : "2019-08-12T15:31:45Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : null,
    "diffHunk" : "@@ -51,31 +51,56 @@ case class SbtBuildTool(version: String) extends BuildTool {\n           sbtArgs\n         ).flatten\n     }\n-    writeSbtMetalsPlugin(config)\n+    removeOldPlugin()"
  },
  {
    "id" : "c0e901c8-453e-4868-bcd8-3da28ce667b6",
    "prId" : 852,
    "comments" : [
      {
        "id" : "afcf0563-3db6-4c9b-a617-49514c83866f",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "alternatively:\r\n\r\n```suggestion\r\n    Files.deleteIfExists(metalsFile.toNIO)\r\n```",
        "createdAt" : "2019-08-12T12:48:40Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "89b5285a-fa53-436c-a237-880fcc17ea84",
        "parentId" : "afcf0563-3db6-4c9b-a617-49514c83866f",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Good idea, changed.",
        "createdAt" : "2019-08-12T15:31:14Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : null,
    "diffHunk" : "@@ -51,31 +51,56 @@ case class SbtBuildTool(version: String) extends BuildTool {\n           sbtArgs\n         ).flatten\n     }\n-    writeSbtMetalsPlugin(config)\n+    removeOldPlugin()\n+    writeSbtMetalsPlugin(workspace, config)\n     allArgs\n   }\n+\n   override def digest(\n       workspace: AbsolutePath\n   ): Option[String] = SbtDigest.current(workspace)\n   override val minimumVersion: String = \"0.13.17\"\n \n-  private def writeSbtMetalsPlugin(config: MetalsServerConfig): Unit = {\n+  private def removeOldPlugin(): Unit = {\n+    def pluginsDirectory(version: String): AbsolutePath = {\n+      AbsolutePath(System.getProperty(\"user.home\"))\n+        .resolve(\".sbt\")\n+        .resolve(version)\n+        .resolve(\"plugins\")\n+    }\n     val plugins =\n-      if (version.startsWith(\"0.13\")) SbtBuildTool.pluginsDirectory(\"0.13\")\n-      else SbtBuildTool.pluginsDirectory(\"1.0\")\n-    plugins.createDirectories()\n+      if (version.startsWith(\"0.13\")) pluginsDirectory(\"0.13\")\n+      else pluginsDirectory(\"1.0\")\n+\n+    val metalsFile = plugins.resolve(\"metals.sbt\")\n+    if (metalsFile.exists) metalsFile.delete()"
  },
  {
    "id" : "742aafa7-8d48-4ebd-aab2-201d2499ab02",
    "prId" : 852,
    "comments" : [
      {
        "id" : "4f8a2c41-7022-499f-ac3f-d38619d2a190",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "not sure this is true anymore. At the very least, the message should be updated to talk about local plugins",
        "createdAt" : "2019-08-12T12:49:40Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "584edf4c-9ff8-456d-bf21-022e82d7ef72",
        "parentId" : "4f8a2c41-7022-499f-ac3f-d38619d2a190",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "removed the whole comment, it's pretty obvious why we don't write if it already exists. ",
        "createdAt" : "2019-08-12T15:30:56Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : null,
    "diffHunk" : "@@ -51,31 +51,56 @@ case class SbtBuildTool(version: String) extends BuildTool {\n           sbtArgs\n         ).flatten\n     }\n-    writeSbtMetalsPlugin(config)\n+    removeOldPlugin()\n+    writeSbtMetalsPlugin(workspace, config)\n     allArgs\n   }\n+\n   override def digest(\n       workspace: AbsolutePath\n   ): Option[String] = SbtDigest.current(workspace)\n   override val minimumVersion: String = \"0.13.17\"\n \n-  private def writeSbtMetalsPlugin(config: MetalsServerConfig): Unit = {\n+  private def removeOldPlugin(): Unit = {\n+    def pluginsDirectory(version: String): AbsolutePath = {\n+      AbsolutePath(System.getProperty(\"user.home\"))\n+        .resolve(\".sbt\")\n+        .resolve(version)\n+        .resolve(\"plugins\")\n+    }\n     val plugins =\n-      if (version.startsWith(\"0.13\")) SbtBuildTool.pluginsDirectory(\"0.13\")\n-      else SbtBuildTool.pluginsDirectory(\"1.0\")\n-    plugins.createDirectories()\n+      if (version.startsWith(\"0.13\")) pluginsDirectory(\"0.13\")\n+      else pluginsDirectory(\"1.0\")\n+\n+    val metalsFile = plugins.resolve(\"metals.sbt\")\n+    if (metalsFile.exists) metalsFile.delete()\n+  }\n+\n+  private def writeSbtMetalsPlugin(\n+      workspace: AbsolutePath,\n+      config: MetalsServerConfig\n+  ): Unit = {\n     val bytes = SbtBuildTool\n-      .globalMetalsSbt(config.bloopSbtVersion)\n+      .sbtPlugin(config.bloopSbtVersion)\n       .getBytes(StandardCharsets.UTF_8)\n-    val destination = plugins.resolve(\"metals.sbt\")\n-    if (destination.isFile && destination.readAllBytes.sameElements(bytes)) {\n+    val projectDir = workspace.resolve(\"project\")\n+    projectDir.toFile.mkdir()\n+    val metalsPluginfile = projectDir.resolve(\"metals.sbt\")\n+    if (metalsPluginfile.isFile && metalsPluginfile.readAllBytes.sameElements(\n+        bytes\n+      )) {\n       // Do nothing if the file is unchanged. If we write to the file unconditionally\n       // we risk triggering sbt re-compilation of global plugins that slows down"
  },
  {
    "id" : "e918eb1c-4bab-42cb-b861-c00343decfa0",
    "prId" : 852,
    "comments" : [
      {
        "id" : "6d6b897a-45fe-45e3-a944-691eb314ce2c",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "maybe extract the gitignore-related stuff into a method?",
        "createdAt" : "2019-08-12T12:51:25Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7b685e8a-81f9-473e-a618-95e27104239d",
        "parentId" : "6d6b897a-45fe-45e3-a944-691eb314ce2c",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "added it to a method and also added some tests for it",
        "createdAt" : "2019-08-12T15:30:17Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : null,
    "diffHunk" : "@@ -51,31 +51,56 @@ case class SbtBuildTool(version: String) extends BuildTool {\n           sbtArgs\n         ).flatten\n     }\n-    writeSbtMetalsPlugin(config)\n+    removeOldPlugin()\n+    writeSbtMetalsPlugin(workspace, config)\n     allArgs\n   }\n+\n   override def digest(\n       workspace: AbsolutePath\n   ): Option[String] = SbtDigest.current(workspace)\n   override val minimumVersion: String = \"0.13.17\"\n \n-  private def writeSbtMetalsPlugin(config: MetalsServerConfig): Unit = {\n+  private def removeOldPlugin(): Unit = {\n+    def pluginsDirectory(version: String): AbsolutePath = {\n+      AbsolutePath(System.getProperty(\"user.home\"))\n+        .resolve(\".sbt\")\n+        .resolve(version)\n+        .resolve(\"plugins\")\n+    }\n     val plugins =\n-      if (version.startsWith(\"0.13\")) SbtBuildTool.pluginsDirectory(\"0.13\")\n-      else SbtBuildTool.pluginsDirectory(\"1.0\")\n-    plugins.createDirectories()\n+      if (version.startsWith(\"0.13\")) pluginsDirectory(\"0.13\")\n+      else pluginsDirectory(\"1.0\")\n+\n+    val metalsFile = plugins.resolve(\"metals.sbt\")\n+    if (metalsFile.exists) metalsFile.delete()\n+  }\n+\n+  private def writeSbtMetalsPlugin(\n+      workspace: AbsolutePath,\n+      config: MetalsServerConfig\n+  ): Unit = {\n     val bytes = SbtBuildTool\n-      .globalMetalsSbt(config.bloopSbtVersion)\n+      .sbtPlugin(config.bloopSbtVersion)\n       .getBytes(StandardCharsets.UTF_8)\n-    val destination = plugins.resolve(\"metals.sbt\")\n-    if (destination.isFile && destination.readAllBytes.sameElements(bytes)) {\n+    val projectDir = workspace.resolve(\"project\")\n+    projectDir.toFile.mkdir()\n+    val metalsPluginfile = projectDir.resolve(\"metals.sbt\")\n+    if (metalsPluginfile.isFile && metalsPluginfile.readAllBytes.sameElements(\n+        bytes\n+      )) {\n       // Do nothing if the file is unchanged. If we write to the file unconditionally\n       // we risk triggering sbt re-compilation of global plugins that slows down\n       // build import greatly. If somebody validates it doesn't affect load times\n       // then feel free to remove this guard.\n       ()\n     } else {\n-      Files.write(destination.toNIO, bytes)\n+      Files.write(metalsPluginfile.toNIO, bytes)\n+    }\n+    val gitignore = workspace.resolve(\".gitignore\")"
  },
  {
    "id" : "f6ffa0a3-0a67-4975-b776-067099d9262a",
    "prId" : 852,
    "comments" : [
      {
        "id" : "8dda3444-3e5d-428f-8a2f-c717f586b780",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "```suggestion\r\n        |// This file enables sbt-bloop to create bloop config files.\r\n```",
        "createdAt" : "2019-08-12T12:52:37Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "45fbaa05-e6a9-4424-9924-490e7d50b6f3",
        "parentId" : "8dda3444-3e5d-428f-8a2f-c717f586b780",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Fixed",
        "createdAt" : "2019-08-12T15:29:59Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : null,
    "diffHunk" : "@@ -101,53 +126,19 @@ object SbtBuildTool {\n     }\n   }\n \n-  def pluginsDirectory(version: String): AbsolutePath = {\n-    AbsolutePath(System.getProperty(\"user.home\"))\n-      .resolve(\".sbt\")\n-      .resolve(version)\n-      .resolve(\"plugins\")\n-  }\n-\n   /**\n-   * Contents of metals.sbt file that is installed globally.\n+   * Contents of metals.sbt file that is installed in the workspace.\n    */\n-  private def globalMetalsSbt(bloopSbtVersion: String): String = {\n-    val resolvers =\n-      if (BuildInfo.metalsVersion.endsWith(\"-SNAPSHOT\")) {\n-        \"\"\"|resolvers ++= {\n-           |  if (System.getenv(\"METALS_ENABLED\") == \"true\") {\n-           |    List(Resolver.sonatypeRepo(\"snapshots\"))\n-           |  } else {\n-           |    List()\n-           |  }\n-           |}\n-           |\"\"\".stripMargin\n-      } else {\n-        \"\"\n-      }\n+  private def sbtPlugin(bloopSbtVersion: String): String = {\n+    val resolvers = if (bloopSbtVersion.contains(\"+\")) {\n+      \"\"\"resolvers += Resolver.bintrayRepo(\"scalacenter\", \"releases\")\"\"\"\n+    } else {\n+      \"\"\n+    }\n     s\"\"\"|// DO NOT EDIT! This file is auto-generated.\n-        |// By default, this file does not do anything.\n-        |// If the environment variable METALS_ENABLED has the value 'true',\n-        |// then this file enables sbt-metals and sbt-bloop.\n+        |// This file enables sbt-bloop to created bloop config files."
  },
  {
    "id" : "34addd70-39cc-4e92-98ee-09a25eda887b",
    "prId" : 852,
    "comments" : [
      {
        "id" : "983e29e5-d185-49fd-b0fb-52df92de34cc",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "```suggestion\r\n    val isSnapshot = bloopSbtVersion.contains(\"+\")\r\n    val resolvers = if (isSnapshot) {\r\n```",
        "createdAt" : "2019-08-13T09:14:47Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "75d725b7-cd6b-4ccd-997f-65a8e0511c59",
        "parentId" : "983e29e5-d185-49fd-b0fb-52df92de34cc",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Fixed",
        "createdAt" : "2019-08-13T12:01:58Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : null,
    "diffHunk" : "@@ -101,53 +127,19 @@ object SbtBuildTool {\n     }\n   }\n \n-  def pluginsDirectory(version: String): AbsolutePath = {\n-    AbsolutePath(System.getProperty(\"user.home\"))\n-      .resolve(\".sbt\")\n-      .resolve(version)\n-      .resolve(\"plugins\")\n-  }\n-\n   /**\n-   * Contents of metals.sbt file that is installed globally.\n+   * Contents of metals.sbt file that is installed in the workspace.\n    */\n-  private def globalMetalsSbt(bloopSbtVersion: String): String = {\n-    val resolvers =\n-      if (BuildInfo.metalsVersion.endsWith(\"-SNAPSHOT\")) {\n-        \"\"\"|resolvers ++= {\n-           |  if (System.getenv(\"METALS_ENABLED\") == \"true\") {\n-           |    List(Resolver.sonatypeRepo(\"snapshots\"))\n-           |  } else {\n-           |    List()\n-           |  }\n-           |}\n-           |\"\"\".stripMargin\n-      } else {\n-        \"\"\n-      }\n+  private def sbtPlugin(bloopSbtVersion: String): String = {\n+    val resolvers = if (bloopSbtVersion.contains(\"+\")) {"
  },
  {
    "id" : "177c9c72-660b-49a6-a54a-c4e12e6d509f",
    "prId" : 852,
    "comments" : [
      {
        "id" : "b4db4ae9-ea8a-4252-9785-861dff549822",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I'm very excited to get rid of this here :D ",
        "createdAt" : "2019-08-25T17:51:52Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : 102,
    "diffHunk" : "@@ -101,53 +127,20 @@ object SbtBuildTool {\n     }\n   }\n \n-  def pluginsDirectory(version: String): AbsolutePath = {\n-    AbsolutePath(System.getProperty(\"user.home\"))\n-      .resolve(\".sbt\")\n-      .resolve(version)\n-      .resolve(\"plugins\")\n-  }\n-\n   /**\n-   * Contents of metals.sbt file that is installed globally.\n+   * Contents of metals.sbt file that is installed in the workspace.\n    */\n-  private def globalMetalsSbt(bloopSbtVersion: String): String = {\n-    val resolvers =\n-      if (BuildInfo.metalsVersion.endsWith(\"-SNAPSHOT\")) {\n-        \"\"\"|resolvers ++= {\n-           |  if (System.getenv(\"METALS_ENABLED\") == \"true\") {"
  },
  {
    "id" : "cae2f66f-8d3e-477f-acad-3d1880a46221",
    "prId" : 852,
    "comments" : [
      {
        "id" : "27bbd99e-da54-41e1-a1e0-a0a6a448ce39",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "\r\n```suggestion\r\n    val isPreReleaseVersion = bloopSbtVersion.contains(\"+\") || bloopSbtVersion.contains(\"-\")\r\n```\r\nStrictly speaking, a snapshot version should end with `-SNAPSHOT`. Including `-` also guards us if bloop changes it's usage of `+` versions. Some filesystems require weird encodings for filenames with `+`.",
        "createdAt" : "2019-08-25T17:56:28Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bd97ddb5-3a01-46d7-91b5-0b7e5b6cb27f",
        "parentId" : "27bbd99e-da54-41e1-a1e0-a0a6a448ce39",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I don't think bloop ever releases with `version-SNAPSHOT`, but I can add it here, just don't think it will change much.",
        "createdAt" : "2019-08-28T12:58:23Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "01798a1f-d3a1-46ca-8bd3-35258c2be1e8",
        "parentId" : "27bbd99e-da54-41e1-a1e0-a0a6a448ce39",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Fair point.",
        "createdAt" : "2019-08-28T22:25:36Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : 113,
    "diffHunk" : "@@ -101,53 +127,20 @@ object SbtBuildTool {\n     }\n   }\n \n-  def pluginsDirectory(version: String): AbsolutePath = {\n-    AbsolutePath(System.getProperty(\"user.home\"))\n-      .resolve(\".sbt\")\n-      .resolve(version)\n-      .resolve(\"plugins\")\n-  }\n-\n   /**\n-   * Contents of metals.sbt file that is installed globally.\n+   * Contents of metals.sbt file that is installed in the workspace.\n    */\n-  private def globalMetalsSbt(bloopSbtVersion: String): String = {\n-    val resolvers =\n-      if (BuildInfo.metalsVersion.endsWith(\"-SNAPSHOT\")) {\n-        \"\"\"|resolvers ++= {\n-           |  if (System.getenv(\"METALS_ENABLED\") == \"true\") {\n-           |    List(Resolver.sonatypeRepo(\"snapshots\"))\n-           |  } else {\n-           |    List()\n-           |  }\n-           |}\n-           |\"\"\".stripMargin\n-      } else {\n-        \"\"\n-      }\n+  private def sbtPlugin(bloopSbtVersion: String): String = {\n+    val isSnapshotVersion = bloopSbtVersion.contains(\"+\")"
  },
  {
    "id" : "d387055f-b264-469a-b7ec-09166b52b685",
    "prId" : 852,
    "comments" : [
      {
        "id" : "13b47b58-6d8d-4d4b-bd3c-2e3029d50bea",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "What do you think about adding the following entries as well?\r\n```\r\n.metals/\r\n.bloop/\r\n```\r\nThese entries should ideally be in the workspace .gitignore instead of the global .gitignore because VS Code only uses the workspace gitignore in \"Open file\".",
        "createdAt" : "2019-08-25T21:02:59Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "58ad8391-4bc5-4945-af9e-2c6acc39987f",
        "parentId" : "13b47b58-6d8d-4d4b-bd3c-2e3029d50bea",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I was thinking about it, but decided not to do in this PR, but I can for sure do it here.",
        "createdAt" : "2019-08-28T13:00:22Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "64f61d90-7e44-4618-9f8a-d4ea8ded4d4b",
        "parentId" : "13b47b58-6d8d-4d4b-bd3c-2e3029d50bea",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "It can be done as a separate PR.",
        "createdAt" : "2019-08-28T22:25:51Z",
        "updatedAt" : "2019-10-02T17:05:22Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "21f992f2b66ce835b0205c99a71b743ae3ba960f",
    "line" : 50,
    "diffHunk" : "@@ -51,31 +51,57 @@ case class SbtBuildTool(version: String) extends BuildTool {\n           sbtArgs\n         ).flatten\n     }\n-    writeSbtMetalsPlugin(config)\n+    removeLegacyGlobalPlugin()\n+    writeSbtMetalsPlugin(workspace, config)\n+    gitignoreMetals(workspace)\n     allArgs\n   }\n+\n   override def digest(\n       workspace: AbsolutePath\n   ): Option[String] = SbtDigest.current(workspace)\n   override val minimumVersion: String = \"0.13.17\"\n \n-  private def writeSbtMetalsPlugin(config: MetalsServerConfig): Unit = {\n+  // We remove legacy metals.sbt file that was located in\n+  // global sbt plugins and which adds the plugin to each projects\n+  // and creates additional overhead.\n+  private def removeLegacyGlobalPlugin(): Unit = {\n+    def pluginsDirectory(version: String): AbsolutePath = {\n+      AbsolutePath(System.getProperty(\"user.home\"))\n+        .resolve(\".sbt\")\n+        .resolve(version)\n+        .resolve(\"plugins\")\n+    }\n     val plugins =\n-      if (version.startsWith(\"0.13\")) SbtBuildTool.pluginsDirectory(\"0.13\")\n-      else SbtBuildTool.pluginsDirectory(\"1.0\")\n-    plugins.createDirectories()\n+      if (version.startsWith(\"0.13\")) pluginsDirectory(\"0.13\")\n+      else pluginsDirectory(\"1.0\")\n+\n+    val metalsFile = plugins.resolve(\"metals.sbt\")\n+    Files.deleteIfExists(metalsFile.toNIO)\n+  }\n+\n+  private def gitignoreMetals(workspace: AbsolutePath) = {\n+    val gitignore = workspace.resolve(\".gitignore\")\n+    val gitIgnoreContents = \"project/metals.sbt\""
  },
  {
    "id" : "3d05db48-0a22-477c-91a9-d9c5c0f071d7",
    "prId" : 1212,
    "comments" : [
      {
        "id" : "2a8cf6cd-79c5-403d-9137-6dc04dfb0f62",
        "parentId" : null,
        "author" : {
          "login" : "joriscode",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2750485?v=4"
        },
        "body" : "Do we want the extra quote signs `\\\"`?",
        "createdAt" : "2019-12-20T11:18:15Z",
        "updatedAt" : "2020-01-15T14:07:16Z",
        "lastEditedBy" : {
          "login" : "joriscode",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2750485?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "882b5199-9309-49a8-b757-91cfba524df7",
        "parentId" : "2a8cf6cd-79c5-403d-9137-6dc04dfb0f62",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "It seems to not work in the Sbt integration tests currently. Might be because of of the additional quotes? ",
        "createdAt" : "2019-12-23T12:24:50Z",
        "updatedAt" : "2020-01-15T14:07:16Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c599cf30-3c19-4404-86b8-c421e0b7ad5b",
        "parentId" : "2a8cf6cd-79c5-403d-9137-6dc04dfb0f62",
        "author" : {
          "login" : "joriscode",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2750485?v=4"
        },
        "body" : "Happy new year!\r\nI'm back from holidays and going to work on this as soon as possible!",
        "createdAt" : "2020-01-06T09:50:09Z",
        "updatedAt" : "2020-01-15T14:07:16Z",
        "lastEditedBy" : {
          "login" : "joriscode",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2750485?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0709a13f8fb7748510a162d7b572791ed90456b8",
    "line" : null,
    "diffHunk" : "@@ -25,7 +25,7 @@ case class SbtBuildTool(\n \n   override def args(workspace: AbsolutePath): List[String] = {\n     val sbtArgs = List[String](\n-      \"set bloopExportJarClassifiers in Global := Some(Set(\\\"sources\\\"))\",\n+      \"-Dbloop.export-jar-classifiers=\\\"sources\\\"\","
  },
  {
    "id" : "b5f7ed08-0986-4fdd-bfae-5152f384fb91",
    "prId" : 1628,
    "comments" : [
      {
        "id" : "d5a5483b-bf3f-4914-9e14-6705715c7c11",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "We should most likely go n+1 levels here, where n is the current number of meta project and normal one.",
        "createdAt" : "2020-04-17T17:40:20Z",
        "updatedAt" : "2020-04-27T11:40:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "cb5d45903eaf6c8b0de5d16adde47cd00110e504",
    "line" : 4,
    "diffHunk" : "@@ -52,6 +52,7 @@ case class SbtBuildTool(\n     }\n     removeLegacyGlobalPlugin()\n     writeSbtMetalsPlugin(workspace, config)\n+    writeSbtMetalsPlugin(workspace.resolve(\"project\"), config)"
  },
  {
    "id" : "316a75f8-f626-473b-ac4c-b5103ee4c70f",
    "prId" : 1776,
    "comments" : [
      {
        "id" : "3bd1ceee-7351-401c-b7b4-3213cb9092c6",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Should this be changed after adding the align setting?",
        "createdAt" : "2020-05-25T13:21:42Z",
        "updatedAt" : "2020-05-25T13:24:37Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0a4547bf-c601-411f-a91f-319f5ec95c83",
        "parentId" : "3bd1ceee-7351-401c-b7b4-3213cb9092c6",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Yea there still seems to be some formatting on multilines happening after the addition of the align setting. I'll look at this week and ensure everything is working fine and address the points above. Plus, some of the formatting on the multilines are also breaking tests.",
        "createdAt" : "2020-05-25T13:26:18Z",
        "updatedAt" : "2020-05-25T13:26:18Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "81421a575310ee94ebf09d22ed50facc0c72ccca",
    "line" : 8,
    "diffHunk" : "@@ -130,10 +130,10 @@ object SbtBuildTool {\n       \"\"\n     }\n     s\"\"\"|// DO NOT EDIT! This file is auto-generated.\n-        |// This file enables sbt-bloop to create bloop config files.\n-        |$resolvers\n-        |addSbtPlugin(\"ch.epfl.scala\" % \"sbt-bloop\" % \"$bloopSbtVersion\")\n-        |\"\"\".stripMargin\n+       |// This file enables sbt-bloop to create bloop config files."
  },
  {
    "id" : "76fe2cf4-6170-4430-bbf7-7244adc386fd",
    "prId" : 1865,
    "comments" : [
      {
        "id" : "200a83e7-037f-4e16-8757-2a450abc0e3e",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "You can use `projectDir.exists`",
        "createdAt" : "2020-07-06T13:03:33Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5c990768-def1-443e-bdb4-d2e4d605a61b",
        "parentId" : "200a83e7-037f-4e16-8757-2a450abc0e3e",
        "author" : {
          "login" : "dos65",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2020-07-21T11:15:54Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "dos65",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1ecc085ce9f65d042e2055d19fd627c5d49e7918",
    "line" : null,
    "diffHunk" : "@@ -85,12 +85,41 @@ case class SbtBuildTool(\n   private def writeSbtMetalsPlugin(\n       workspace: AbsolutePath\n   ): Unit = {\n+\n+    def sbtMetaDirs(\n+        dir: AbsolutePath,\n+        acc: List[AbsolutePath]\n+    ): List[AbsolutePath] = {\n+      val projectDir = dir.resolve(\"project\")"
  },
  {
    "id" : "5e5e40e0-c10d-4355-a30d-697001322e4e",
    "prId" : 1865,
    "comments" : [
      {
        "id" : "cdf37297-447e-402f-8811-dc77ce0b4d12",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "We should also check if these directories exist.",
        "createdAt" : "2020-07-06T17:50:17Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "b078a63a-677b-4264-a11f-5e63b473b107",
        "parentId" : "cdf37297-447e-402f-8811-dc77ce0b4d12",
        "author" : {
          "login" : "dos65",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4"
        },
        "body" : "If they aren't then they will be created in function below.\r\nhttps://github.com/scalameta/metals/blob/71ebf3d7b546d98483b4426d176d01a84bd70d69/metals/src/main/scala/scala/meta/internal/builds/SbtBuildTool.scala#L117-L125",
        "createdAt" : "2020-07-21T11:12:26Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "dos65",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "7b5c4b1f-fbcf-4de6-acb7-d60b986cdbdd",
        "parentId" : "cdf37297-447e-402f-8811-dc77ce0b4d12",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Cool. One additional thing that I did notice is that when we create `metals.sbt` file then the next `bloopInstall` will create a next level and then the next during consequtive install, which we should not do. We should only create those files if `metals.sbt` is not the only thing in the project directory.",
        "createdAt" : "2020-07-21T13:47:55Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1ecc085ce9f65d042e2055d19fd627c5d49e7918",
    "line" : 38,
    "diffHunk" : "@@ -85,12 +85,41 @@ case class SbtBuildTool(\n   private def writeSbtMetalsPlugin(\n       workspace: AbsolutePath\n   ): Unit = {\n+\n+    def sbtMetaDirs(\n+        dir: AbsolutePath,\n+        acc: List[AbsolutePath]\n+    ): List[AbsolutePath] = {\n+      val projectDir = dir.resolve(\"project\")\n+      if (Files.exists(projectDir.toNIO)) {\n+        val toCreate = projectDir.resolve(\"project\")\n+        sbtMetaDirs(projectDir, toCreate :: acc)\n+      } else\n+        acc\n+    }\n+\n+    // by default create the following directory structure\n+    //  workspace/\n+    //     project/\n+    //       metals.sbt\n+    //       project/\n+    //          metals.sbt\n+    // and check if there are more inner meta projects\n+    val mainMeta = workspace.resolve(\"project\")"
  },
  {
    "id" : "5be9aba2-7121-4143-8083-cc04cdd346dc",
    "prId" : 1865,
    "comments" : [
      {
        "id" : "348d5b99-8692-4e76-a458-d9dfc2b5eea4",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "This will always create `n+1` directories, where n is the number of meta dirs in the previous run.",
        "createdAt" : "2020-07-22T10:04:27Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "47451175-cef1-444a-8b2c-8fe572cdf893",
        "parentId" : "348d5b99-8692-4e76-a458-d9dfc2b5eea4",
        "author" : {
          "login" : "dos65",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2020-07-24T16:09:51Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "dos65",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1ecc085ce9f65d042e2055d19fd627c5d49e7918",
    "line" : null,
    "diffHunk" : "@@ -85,12 +87,41 @@ case class SbtBuildTool(\n   private def writeSbtMetalsPlugin(\n       workspace: AbsolutePath\n   ): Unit = {\n+\n+    def sbtMetaDirs(\n+        dir: AbsolutePath,\n+        acc: List[AbsolutePath]\n+    ): List[AbsolutePath] = {\n+      val projectDir = dir.resolve(\"project\")\n+      if (projectDir.exists) {\n+        val toCreate = projectDir.resolve(\"project\")\n+        sbtMetaDirs(projectDir, toCreate :: acc)"
  },
  {
    "id" : "9abebd96-5406-4d45-ae9f-9d0975ed474d",
    "prId" : 1865,
    "comments" : [
      {
        "id" : "37d8c09e-9520-4019-a3a5-061a815a1eb1",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "`f.isScala` should not be needed. Scala files are for the project in the parent directory, so we never need to go to `project` dir to support them.",
        "createdAt" : "2020-07-27T12:50:22Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "bb90650a-04b6-4bb0-9f37-479e60ac25ef",
        "parentId" : "37d8c09e-9520-4019-a3a5-061a815a1eb1",
        "author" : {
          "login" : "dos65",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4"
        },
        "body" : "No, they have the same requirements as sbt files.\r\nI checked this thing",
        "createdAt" : "2020-07-27T17:17:06Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "dos65",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1ecc085ce9f65d042e2055d19fd627c5d49e7918",
    "line" : null,
    "diffHunk" : "@@ -85,12 +87,47 @@ case class SbtBuildTool(\n   private def writeSbtMetalsPlugin(\n       workspace: AbsolutePath\n   ): Unit = {\n+\n+    def containsScalaOrSbtFiles(dir: AbsolutePath): Boolean =\n+      dir.list.exists { f =>\n+        val name = f.filename\n+        f.isFile && (f.isScala || f.isSbt) && name != \"metals.sbt\""
  },
  {
    "id" : "f31cf1f3-84de-46c7-ad64-bdedb1102286",
    "prId" : 1865,
    "comments" : [
      {
        "id" : "9b1e9952-2a80-4c29-b98d-87e84cc320f5",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Remove?",
        "createdAt" : "2020-07-30T09:06:06Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1ecc085ce9f65d042e2055d19fd627c5d49e7918",
    "line" : null,
    "diffHunk" : "@@ -25,6 +26,7 @@ case class SbtBuildTool(\n \n   override def version: String = workspaceVersion.getOrElse(recommendedVersion)\n   override def args(workspace: AbsolutePath): List[String] = {\n+    println()"
  },
  {
    "id" : "ef7d8773-5390-4450-9da3-7b5fdf1dbab7",
    "prId" : 1865,
    "comments" : [
      {
        "id" : "c3f2c127-93aa-4514-88ed-b456c65b16ae",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Maybe this could be easier to udnerstand:\r\n```scala\r\nval files = dir.list\r\nval hasScalaSrc = files.exists(_.isScala)\r\nval hasSbtSrc = files.exists(f => f.isSbt && f.filename != \"metals.sbt\" )\r\n```\r\nGranted it's not all in one go, but this list is rather small.",
        "createdAt" : "2020-07-30T09:12:12Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1ecc085ce9f65d042e2055d19fd627c5d49e7918",
    "line" : null,
    "diffHunk" : "@@ -85,13 +87,50 @@ case class SbtBuildTool(\n   private def writeSbtMetalsPlugin(\n       workspace: AbsolutePath\n   ): Unit = {\n+\n+    def sbtMetaDirs(\n+        dir: AbsolutePath,\n+        parentHasSbtSrc: Boolean,\n+        acc: List[AbsolutePath]\n+    ): List[AbsolutePath] = {\n+\n+      val next = dir.resolve(\"project\")\n+      if (dir.exists) {\n+        val (hasScalaSrc, hasSbtSrc) = dir.list.foldLeft((false, false)) {"
  },
  {
    "id" : "6e28a15d-ce7d-4f8e-a0bb-ffb972af06e6",
    "prId" : 1978,
    "comments" : [
      {
        "id" : "a646f804-0fdd-4925-9135-df2ab7578142",
        "parentId" : null,
        "author" : {
          "login" : "dos65",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4"
        },
        "body" : "I think it should check the existence for `.scala` files too, not only `.sbt`.\r\n\r\nHowever, it's probably it's hard to find a project that has sbt-scala sources somewhere deeper than in `.project/` directory",
        "createdAt" : "2020-08-07T10:52:07Z",
        "updatedAt" : "2020-08-07T10:52:07Z",
        "lastEditedBy" : {
          "login" : "dos65",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/5816952?u=801a9faa2796a46c371c28cc181e0fa6abbb7132&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "cb5b2f17-7b8b-46eb-b7a4-d154285cdadd",
        "parentId" : "a646f804-0fdd-4925-9135-df2ab7578142",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "We are not really registering those files within the correct build target, I will fix up together later.",
        "createdAt" : "2020-08-07T11:04:58Z",
        "updatedAt" : "2020-08-07T11:04:58Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "6bc3195e72fd6abcbe2ea77ab110577e0477ca73",
    "line" : 39,
    "diffHunk" : "@@ -83,42 +83,36 @@ case class SbtBuildTool(\n     Files.deleteIfExists(metalsFile.toNIO)\n   }\n \n-  private def writeSbtMetalsPlugin(\n+  private def writeSbtMetalsPlugins(\n       workspace: AbsolutePath\n   ): Unit = {\n \n     def sbtMetaDirs(\n-        dir: AbsolutePath,\n-        parentHasSbtSrc: Boolean,\n-        acc: List[AbsolutePath]\n-    ): List[AbsolutePath] = {\n-\n-      val next = dir.resolve(\"project\")\n-      if (dir.exists) {\n-        val files = dir.list.toList\n-        val hasScalaSrc = files.exists(_.isScala)\n+        meta: AbsolutePath,\n+        acc: Set[AbsolutePath]\n+    ): Set[AbsolutePath] = {\n+      if (meta.exists) {\n+        val files = meta.list.toList\n         val hasSbtSrc = files.exists(f => f.isSbt && f.filename != \"metals.sbt\")\n-        val goNext = hasScalaSrc || hasSbtSrc || parentHasSbtSrc\n-\n-        if (goNext)\n-          sbtMetaDirs(next, hasSbtSrc, dir :: acc)\n-        else\n+        if (hasSbtSrc) {"
  }
]