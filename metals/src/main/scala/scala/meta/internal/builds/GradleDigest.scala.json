[
  {
    "id" : "b623992d-616e-43d5-aff7-8b7291599d27",
    "prId" : 889,
    "comments" : [
      {
        "id" : "64a16582-33e1-4850-a987-1872a397be97",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Both `.walk` and `list` mention:\r\n```\r\n     * <p> The returned stream encapsulates one or more {@link DirectoryStream}s.\r\n     * If timely disposal of file system resources is required, the\r\n     * {@code try}-with-resources construct should be used to ensure that the\r\n     * stream's {@link Stream#close close} method is invoked after the stream\r\n     * operations are completed.  Operating on a closed stream will result in an\r\n     * {@link java.lang.IllegalStateException}.\r\n```\r\n\r\nI am wondering if the issue is that we don't call `close()` on those methods. `digestBuildSrc` is not used very often, since that is used to define plugins in-build, so I suspect this is not the issue.",
        "createdAt" : "2019-09-01T14:43:26Z",
        "updatedAt" : "2019-09-01T18:48:30Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e311f243-1298-4f0b-a54d-c276a5a92b68",
        "parentId" : "64a16582-33e1-4850-a987-1872a397be97",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Although, I might be completely wrong here.",
        "createdAt" : "2019-09-01T14:49:53Z",
        "updatedAt" : "2019-09-01T18:48:30Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1d94d47dda18e6abac0dc30392fcff0b3883fd5c",
    "line" : null,
    "diffHunk" : "@@ -24,7 +24,7 @@ object GradleDigest extends Digestable {\n   }\n \n   def digestBuildSrc(path: AbsolutePath, digest: MessageDigest): Boolean = {\n-    Files.walk(path.toNIO).iterator().asScala.forall { file =>\n+    Files.walk(path.toNIO).allMatch { file =>"
  },
  {
    "id" : "f3b52f72-15db-45cc-9f3d-78fb6f07d839",
    "prId" : 889,
    "comments" : [
      {
        "id" : "b09a4dca-734f-4627-bb2b-ccc3f30ab61e",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "It would be nice to have the forall method in ListFiles, returning `true` doesn't look good.",
        "createdAt" : "2019-09-02T09:18:00Z",
        "updatedAt" : "2019-09-02T09:22:18Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1d94d47dda18e6abac0dc30392fcff0b3883fd5c",
    "line" : 20,
    "diffHunk" : "@@ -24,9 +26,10 @@ object GradleDigest extends Digestable {\n   }\n \n   def digestBuildSrc(path: AbsolutePath, digest: MessageDigest): Boolean = {\n-    Files.walk(path.toNIO).iterator().asScala.forall { file =>\n-      Digest.digestFile(AbsolutePath(file), digest)\n+    WalkFiles.foreach(path) { file =>"
  }
]