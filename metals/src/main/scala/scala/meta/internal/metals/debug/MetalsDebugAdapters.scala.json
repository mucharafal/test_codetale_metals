[
  {
    "id" : "bcbba0e2-032c-451a-91e5-34cfff75a9bc",
    "prId" : 1418,
    "comments" : [
      {
        "id" : "819d5fc4-f315-4622-9df8-05afa1e5937c",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Also maybe it should be `adaptPathForClient`? And maybe `adaptPath` -> `AdaptPathForServer`",
        "createdAt" : "2020-02-12T14:44:18Z",
        "updatedAt" : "2020-02-12T16:25:04Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "fc3d8436-ed6f-498b-aa62-e1edc34f1a2f",
        "parentId" : "819d5fc4-f315-4622-9df8-05afa1e5937c",
        "author" : {
          "login" : "danilbykov",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/14955343?v=4"
        },
        "body" : "Done.",
        "createdAt" : "2020-02-12T20:27:50Z",
        "updatedAt" : "2020-02-12T20:27:51Z",
        "lastEditedBy" : {
          "login" : "danilbykov",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/14955343?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "22532017a52d8f85ccde2d6bae7a449f0b085ff7",
    "line" : null,
    "diffHunk" : "@@ -20,15 +23,19 @@ final class MetalsDebugAdapters {\n \n     Option(clientConfig.getPathFormat) match {\n       case Some(PathFormat.PATH) =>\n-        pathAdapter = path => Paths.get(path).toUri().toString()\n+        clientToServerPathAdapter = path => Paths.get(path).toUri().toString()\n+        serverToClientPathAdapter = _.toString\n       case Some(PathFormat.URI) =>\n-        pathAdapter = identity // metals expects an URI\n+        clientToServerPathAdapter = identity // metals expects an URI\n+        serverToClientPathAdapter = _.toURI.toString\n       case _ =>\n       // ignore\n     }\n   }\n \n   def adaptLine(line: Long): Long = lineAdapter(line)\n \n-  def adaptPath(path: String): String = pathAdapter(path)\n+  def adaptPath(path: String): String = clientToServerPathAdapter(path)\n+\n+  def adataPathForClient(path: AbsolutePath) = serverToClientPathAdapter(path)"
  }
]