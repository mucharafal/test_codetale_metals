[
  {
    "id" : "7b45b38f-d303-4001-ae8d-ca5691a3833b",
    "prId" : 337,
    "comments" : [
      {
        "id" : "79a29fcd-a5d0-4c6c-be90-407a8664ce3b",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Note that this causes the installed bloop client not to work anymore on the same project, because the newly written 1.1.0 JSON files are not compatible with the installed 1.0.0 client.\r\n\r\nI don't think this is a Metals concern, but I just wanted to highlight this scenario /cc @jvican ",
        "createdAt" : "2018-11-21T22:17:07Z",
        "updatedAt" : "2018-11-27T10:23:41Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6eb54acc-1bb4-44e0-aa7f-20f960922e30",
        "parentId" : "79a29fcd-a5d0-4c6c-be90-407a8664ce3b",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "That's a good point, maybe bloop v1.1 should be v2 instead?",
        "createdAt" : "2018-11-25T11:14:57Z",
        "updatedAt" : "2018-11-27T10:23:41Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8ab78d5883e2e77a843cca1ea641084e6e4a2875",
    "line" : 33,
    "diffHunk" : "@@ -0,0 +1,334 @@\n+package scala.meta.internal.metals\n+\n+import com.geirsson.coursiersmall\n+import java.io.InputStream\n+import java.io.OutputStream\n+import java.io.PrintStream\n+import java.net.ServerSocket\n+import java.net.Socket\n+import java.net.URLClassLoader\n+import java.nio.file.Files\n+import java.nio.file.Path\n+import java.util.Properties\n+import java.util.concurrent.CompletableFuture\n+import java.util.concurrent.ScheduledExecutorService\n+import java.util.concurrent.TimeUnit\n+import org.eclipse.lsp4j.jsonrpc.Launcher\n+import org.scalasbt.ipcsocket.UnixDomainSocket\n+import scala.concurrent.ExecutionContextExecutorService\n+import scala.concurrent.Future\n+import scala.concurrent.Promise\n+import scala.concurrent.duration.Duration\n+import scala.meta.internal.metals.MetalsEnrichments._\n+import scala.meta.io.AbsolutePath\n+import scala.sys.process.Process\n+import scala.sys.process.ProcessLogger\n+import scala.util.Random\n+import scala.util.Success\n+import scala.util.control.NonFatal\n+\n+/**\n+ * Establishes a connection with a bloop server.\n+ *\n+ * Connects to a running bloop server instance if it is installed on the user\n+ * machine and has compatible version (+v1.1.0). Ignores the installed bloop\n+ * server instance if it is v1.0.0."
  },
  {
    "id" : "73e62b53-ba3d-4507-836e-32a02681d8c6",
    "prId" : 337,
    "comments" : [
      {
        "id" : "5737c798-5459-44ce-ba79-b4f4f393e4d6",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "who catches this? Or are you relying on `.map` from `Future` catching this?",
        "createdAt" : "2018-11-21T22:21:24Z",
        "updatedAt" : "2018-11-27T10:23:41Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a53436e3-7de2-4f4a-bb98-49e8f5d7fea8",
        "parentId" : "5737c798-5459-44ce-ba79-b4f4f393e4d6",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "We do a `.recover` in `MetalsLanguageServer` in case of any errors establishing a BSP connection. I estimated that wrapping things in `Either` here was not worth the additional cermony.",
        "createdAt" : "2018-11-24T08:18:29Z",
        "updatedAt" : "2018-11-27T10:23:41Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8ab78d5883e2e77a843cca1ea641084e6e4a2875",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,334 @@\n+package scala.meta.internal.metals\n+\n+import com.geirsson.coursiersmall\n+import java.io.InputStream\n+import java.io.OutputStream\n+import java.io.PrintStream\n+import java.net.ServerSocket\n+import java.net.Socket\n+import java.net.URLClassLoader\n+import java.nio.file.Files\n+import java.nio.file.Path\n+import java.util.Properties\n+import java.util.concurrent.CompletableFuture\n+import java.util.concurrent.ScheduledExecutorService\n+import java.util.concurrent.TimeUnit\n+import org.eclipse.lsp4j.jsonrpc.Launcher\n+import org.scalasbt.ipcsocket.UnixDomainSocket\n+import scala.concurrent.ExecutionContextExecutorService\n+import scala.concurrent.Future\n+import scala.concurrent.Promise\n+import scala.concurrent.duration.Duration\n+import scala.meta.internal.metals.MetalsEnrichments._\n+import scala.meta.io.AbsolutePath\n+import scala.sys.process.Process\n+import scala.sys.process.ProcessLogger\n+import scala.util.Random\n+import scala.util.Success\n+import scala.util.control.NonFatal\n+\n+/**\n+ * Establishes a connection with a bloop server.\n+ *\n+ * Connects to a running bloop server instance if it is installed on the user\n+ * machine and has compatible version (+v1.1.0). Ignores the installed bloop\n+ * server instance if it is v1.0.0.\n+ *\n+ * Otherwise, if the user doesn't have bloop installed on the machine, uses\n+ * Coursier to fetch the jars for ch.epfl.scala:bloop-frontend and start a new\n+ * bloop server using classloading. A bloop server that starts via classloading\n+ * stops when when the metals server stops. Only metals can access the classloaded server,\n+ * the user cannot call it from a command-line interface.\n+ *\n+ * Eventually, this class may be superseded by \"BSP connection protocol\":\n+ * https://github.com/scalacenter/bsp/blob/master/docs/bsp.md#bsp-connection-protocol\n+ */\n+final class BloopServers(\n+    sh: ScheduledExecutorService,\n+    workspace: AbsolutePath,\n+    client: MetalsBuildClient,\n+    config: MetalsServerConfig,\n+    icons: Icons\n+)(implicit ec: ExecutionContextExecutorService, statusBar: StatusBar) {\n+\n+  def newServer(): Future[BuildServerConnection] = {\n+    for {\n+      (protocol, cancelable) <- callBSP()\n+    } yield {\n+      val tracePrinter = GlobalTrace.setupTracePrinter(\"BSP\")\n+      val launcher = new Launcher.Builder[MetalsBuildServer]()\n+        .traceMessages(tracePrinter)\n+        .setRemoteInterface(classOf[MetalsBuildServer])\n+        .setExecutorService(ec)\n+        .setInput(protocol.input)\n+        .setOutput(protocol.output)\n+        .setLocalService(client)\n+        .create()\n+      val listening = launcher.startListening()\n+      val remoteServer = launcher.getRemoteProxy\n+      client.onConnect(remoteServer)\n+      val cancelables = List(\n+        Cancelable(() => protocol.cancel()),\n+        cancelable,\n+        Cancelable(() => listening.cancel(true))\n+      )\n+      BuildServerConnection(workspace, client, remoteServer, cancelables)\n+    }\n+  }\n+\n+  private def randomPort(): Int = {\n+    val s = new ServerSocket(0)\n+    val port = s.getLocalPort\n+    s.close()\n+    port\n+  }\n+\n+  sealed abstract class Protocol extends Cancelable {\n+    import Protocol._\n+    def input: InputStream = this match {\n+      case Unix(socket) => socket.getInputStream\n+      case Tcp(socket) => socket.getInputStream\n+    }\n+    def output: OutputStream = this match {\n+      case Unix(socket) => socket.getOutputStream\n+      case Tcp(socket) => socket.getOutputStream\n+    }\n+    override def cancel(): Unit = this match {\n+      case Unix(socket) =>\n+        if (!socket.isInputShutdown) socket.shutdownInput()\n+        if (!socket.isOutputShutdown) socket.shutdownOutput()\n+        socket.close()\n+      case Tcp(socket) =>\n+        if (socket.isClosed) {\n+          socket.close()\n+        }\n+    }\n+  }\n+  object Protocol {\n+    case class Unix(socket: UnixDomainSocket) extends Protocol\n+    case class Tcp(socket: Socket) extends Protocol\n+  }\n+\n+  private def callBSP(): Future[(Protocol, Cancelable)] = {\n+    if (config.bloopProtocol.isTcp) callTcpBsp()\n+    else callUnixBsp()\n+  }\n+\n+  private def callTcpBsp(): Future[(Protocol, Cancelable)] = {\n+    val host = \"localhost\"\n+    val port = randomPort()\n+    val args = Array(\n+      \"bsp\",\n+      \"--protocol\",\n+      \"tcp\",\n+      \"--host\",\n+      host,\n+      \"--port\",\n+      port.toString\n+    )\n+    val cancelable = callBloopMain(args)\n+    var connection: Socket = null\n+    for {\n+      confirmation <- waitUntilSuccess(() => {\n+        try {\n+          connection = new Socket(host, port)\n+          true\n+        } catch {\n+          case NonFatal(_) =>\n+            false\n+        }\n+      })\n+    } yield {\n+      if (confirmation.isYes) {\n+        (Protocol.Tcp(connection), cancelable)\n+      } else {\n+        cancelable.cancel()\n+        throw NoResponse"
  },
  {
    "id" : "483ed007-93af-4c5e-a918-3abc271320d8",
    "prId" : 359,
    "comments" : [
      {
        "id" : "a931d317-98c8-4a7a-af17-83093fec810a",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Great change 👍",
        "createdAt" : "2018-11-30T07:14:31Z",
        "updatedAt" : "2018-11-30T07:16:06Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e0b4f84461956add7e6c74d022bcc2c2265b8b31",
    "line" : 23,
    "diffHunk" : "@@ -222,6 +223,7 @@ final class BloopServers(\n       )\n       Cancelable(() => bspProcess.destroy())\n     } else {\n+      scribe.info(s\"running embedded 'bloop ${args.mkString(\" \")}'\")"
  },
  {
    "id" : "e97b5cb9-0c3a-4105-90e8-7d6f0567a982",
    "prId" : 359,
    "comments" : [
      {
        "id" : "c05e1a31-57f7-4078-9e31-b3270bd79551",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This produce quite a lot of noise iirc, are you sure it should be enabled by default?",
        "createdAt" : "2018-11-30T07:15:23Z",
        "updatedAt" : "2018-11-30T07:16:06Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1e98a9a8-bbdc-4157-a87e-6352493641be",
        "parentId" : "c05e1a31-57f7-4078-9e31-b3270bd79551",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "It it turns out to be too noisy we can introduce a `-Dmetals.verbose` property to control this behavior. Now in the early days I think it's a good idea to include this 👍 ",
        "createdAt" : "2018-11-30T09:28:16Z",
        "updatedAt" : "2018-11-30T09:28:16Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ed6b6be7-365b-4c68-b256-873ac85a9a11",
        "parentId" : "c05e1a31-57f7-4078-9e31-b3270bd79551",
        "author" : {
          "login" : "coreyoconnor",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/34317?u=655fed444f9766dbaadf3df43039f67c54d87ddb&v=4"
        },
        "body" : "Agreed WRT to early days. Definitely think this would be better under a non-default flag... Once the user (dev) expectation is not likely \"show me all the logging\" haha",
        "createdAt" : "2018-11-30T14:26:29Z",
        "updatedAt" : "2018-11-30T14:26:30Z",
        "lastEditedBy" : {
          "login" : "coreyoconnor",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/34317?u=655fed444f9766dbaadf3df43039f67c54d87ddb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "e0b4f84461956add7e6c74d022bcc2c2265b8b31",
    "line" : 4,
    "diffHunk" : "@@ -175,6 +175,7 @@ final class BloopServers(\n     val socket = BloopServers.newSocketFile()\n     val args = Array(\n       \"bsp\",\n+      \"--verbose\","
  },
  {
    "id" : "c166bba3-cb59-42df-85ce-72c5837ad77c",
    "prId" : 566,
    "comments" : [
      {
        "id" : "7c3e7657-6c37-4a64-a7b3-437cb199e539",
        "parentId" : null,
        "author" : {
          "login" : "jvican",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2462974?u=247f9a0cfd142440687595dce462fabed087e912&v=4"
        },
        "body" : "Interesting, what is this useful for?",
        "createdAt" : "2019-03-14T09:23:31Z",
        "updatedAt" : "2019-03-15T09:14:14Z",
        "lastEditedBy" : {
          "login" : "jvican",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2462974?u=247f9a0cfd142440687595dce462fabed087e912&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "f98f04b1-8f01-4fe5-b43d-f9b69fc40dfc",
        "parentId" : "7c3e7657-6c37-4a64-a7b3-437cb199e539",
        "author" : {
          "login" : "mudsam",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/10428653?v=4"
        },
        "body" : "The OS will allow you to reopen a closed socket within a specific timeframe if you set that flag. Depending on the OS it's either when you first open it, or when you reopen it. Pretty good explanation here - https://stackoverflow.com/questions/14388706/socket-options-so-reuseaddr-and-so-reuseport-how-do-they-differ-do-they-mean-t ",
        "createdAt" : "2019-03-14T09:39:23Z",
        "updatedAt" : "2019-03-15T09:14:14Z",
        "lastEditedBy" : {
          "login" : "mudsam",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/10428653?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "6f3bcbd1-4d4d-4b4a-a8c0-2d55245962ef",
        "parentId" : "7c3e7657-6c37-4a64-a7b3-437cb199e539",
        "author" : {
          "login" : "mudsam",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/10428653?v=4"
        },
        "body" : "And sure, I can do a PR on the launcher, no problem.",
        "createdAt" : "2019-03-14T09:48:37Z",
        "updatedAt" : "2019-03-15T09:14:14Z",
        "lastEditedBy" : {
          "login" : "mudsam",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/10428653?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "30b1ced1-5c7e-4abe-bd25-921e4b4467f1",
        "parentId" : "7c3e7657-6c37-4a64-a7b3-437cb199e539",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "My previous attempts to move to the Bloop launcher have so far failed to pass CI. I believe if we use the launcher as a library instead of shelling out to it then it will work better, and we could clean up a lot of hairy code in Metals.",
        "createdAt" : "2019-03-15T09:17:27Z",
        "updatedAt" : "2019-03-15T09:17:27Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3239af5c9a8b0e7a11f46e719c810f3ef74cbdad",
    "line" : 35,
    "diffHunk" : "@@ -92,6 +89,7 @@ final class BloopServers(\n   // Returns a random free port.\n   private def randomPort(host: String): Int = {\n     val s = new ServerSocket()\n+    s.setReuseAddress(true)"
  },
  {
    "id" : "3ba94c67-dba2-4e86-9434-aed7d4bdb2dc",
    "prId" : 566,
    "comments" : [
      {
        "id" : "2b2d08e5-7022-44db-a73b-63424dcf865e",
        "parentId" : null,
        "author" : {
          "login" : "jvican",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2462974?u=247f9a0cfd142440687595dce462fabed087e912&v=4"
        },
        "body" : "It makes sense to remove this bit of code, nobody should be using bloop 1.1.x :+1:",
        "createdAt" : "2019-03-14T09:24:44Z",
        "updatedAt" : "2019-03-15T09:14:14Z",
        "lastEditedBy" : {
          "login" : "jvican",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/2462974?u=247f9a0cfd142440687595dce462fabed087e912&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3239af5c9a8b0e7a11f46e719c810f3ef74cbdad",
    "line" : 144,
    "diffHunk" : "@@ -268,40 +254,43 @@ final class BloopServers(\n     scribe.info(s\"bloop exit: $exitCode\")\n   }\n \n-  private def bloopCommandLineIsInstalled(workspace: AbsolutePath): Boolean = {\n+  private def bloopCommandLineIsInstalled(port: Int): Boolean = {\n+    var socket: Socket = null\n     try {\n-      val output = Process(\n-        List(\"python\", embedded.bloopPy.toString(), \"help\"),\n-        cwd = workspace.toFile\n-      ).!!(ProcessLogger(_ => ()))\n-      // NOTE: our BSP integration requires bloop 1.1 or higher so we ensure\n-      // users are on an older version.\n-      val isOldVersion ="
  },
  {
    "id" : "f7710d33-5c57-48f6-9870-58ba721736e8",
    "prId" : 566,
    "comments" : [
      {
        "id" : "50ad284c-d8df-418d-8a23-a2e4b99a339f",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "🙈 nice catch!",
        "createdAt" : "2019-03-14T22:23:24Z",
        "updatedAt" : "2019-03-15T09:15:25Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "3239af5c9a8b0e7a11f46e719c810f3ef74cbdad",
    "line" : 44,
    "diffHunk" : "@@ -105,7 +103,7 @@ final class BloopServers(\n \n   private def callBSP(): Future[(BloopSocket, Cancelable)] = {\n     if (config.bloopProtocol.isNamedPipe) callNamedPipeBsp()\n-    if (config.bloopProtocol.isTcp) callTcpBsp()\n+    else if (config.bloopProtocol.isTcp) callTcpBsp()"
  },
  {
    "id" : "89079917-8d26-42f8-8b12-92d3e5950e61",
    "prId" : 1004,
    "comments" : [
      {
        "id" : "497257b8-7082-4c19-9a2a-ab113b284b96",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "super tiny, but this can probably be a SAM\r\n\r\n```scala\r\nec.submit(_ => launcher.runLauncher(...))\r\n```",
        "createdAt" : "2019-10-20T08:23:14Z",
        "updatedAt" : "2019-10-21T15:12:38Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c5c21ae1-d10d-4088-8a60-de1a0ee583a3",
        "parentId" : "497257b8-7082-4c19-9a2a-ab113b284b96",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "It would need to be something like:\r\n```scala\r\n    val runServer: Runnable = () =>\r\n      launcher.runLauncher(\r\n        BuildInfo.bloopVersion,\r\n        skipBspConnection = false,\r\n        Nil\r\n      )\r\n    val job = ec.submit(runServer)\r\n```\r\n\r\nI can change it, but doesn't seem like much of an improvement, because we need the explicit type there :/",
        "createdAt" : "2019-10-20T11:06:47Z",
        "updatedAt" : "2019-10-21T15:12:38Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "bc8dbfb8-7d39-4570-b213-4b969af070b5",
        "parentId" : "497257b8-7082-4c19-9a2a-ab113b284b96",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Ah, I recall @olafurpg had a similar issue, does it work if you do\r\n\r\n```scala\r\nval job = ec.submit[Unit](_ => launcher.runLauncher(\r\n  BuildInfo.bloopVersion,\r\n  skipBspConnection = false,\r\n  Nil\r\n))\r\n```\r\n?\r\n\r\nThe `Unit` annotation should help disambiguate `Runnable` from `Callable`.\r\n\r\nAnyway, it's a super tiny thing, sorry for digressing ^^ ",
        "createdAt" : "2019-10-20T11:12:59Z",
        "updatedAt" : "2019-10-21T15:12:38Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "93cc7247-d02b-42e7-b64a-de38a6bdaa1c",
        "parentId" : "497257b8-7082-4c19-9a2a-ab113b284b96",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Doesn't work either, but thanks for the suggestion. I would love to have it simpler than what it currently is. It feels a bit too Java currently :smile:  \r\n\r\n",
        "createdAt" : "2019-10-20T11:19:38Z",
        "updatedAt" : "2019-10-21T15:12:38Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "42759832-715b-485a-8be7-5439f61256bc",
        "parentId" : "497257b8-7082-4c19-9a2a-ab113b284b96",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "ahah, ok, I surrender. ",
        "createdAt" : "2019-10-20T11:45:56Z",
        "updatedAt" : "2019-10-21T15:12:38Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1cf9cd839582af566a3a23662339b476303b4c96",
    "line" : 103,
    "diffHunk" : "@@ -1,326 +1,78 @@\n package scala.meta.internal.metals\n \n-import java.io.InputStream\n-import java.io.PrintStream\n-import java.net.{InetAddress, InetSocketAddress}\n-import java.net.ServerSocket\n-import java.net.Socket\n-import java.nio.file.Files\n-import java.nio.file.Path\n-import java.util.Properties\n-import java.util.concurrent.CompletableFuture\n import java.util.concurrent.ScheduledExecutorService\n-import java.util.concurrent.TimeUnit\n-import org.scalasbt.ipcsocket.UnixDomainSocket\n-import org.scalasbt.ipcsocket.Win32NamedPipeSocket\n import scala.concurrent.ExecutionContextExecutorService\n import scala.concurrent.Future\n import scala.concurrent.Promise\n-import scala.meta.internal.metals.MetalsEnrichments._\n import scala.meta.io.AbsolutePath\n-import scala.sys.process.Process\n-import scala.sys.process.ProcessLogger\n-import scala.util.Random\n-import scala.util.{Failure, Success}\n-import scala.util.control.NonFatal\n-import scala.util.Try\n+import bloop.launcher.LauncherMain\n+import java.nio.charset.StandardCharsets\n+import bloop.bloopgun.core.Shell\n+import java.nio.channels.Channels\n+import java.nio.channels.Pipe\n \n /**\n- * Establishes a connection with a bloop server.\n+ * Establishes a connection with a bloop server using Bloop Launcher.\n  *\n  * Connects to a running bloop server instance if it is installed on the user\n- * machine and has compatible version (+v1.1.0). Ignores the installed bloop\n- * server instance if it is v1.0.0.\n+ * machine and starts a new one if it isn't. Alternatively user can use the\n+ * coursier command to launch it:\n  *\n- * Otherwise, if the user doesn't have bloop installed on the machine, uses\n- * Coursier to fetch the jars for ch.epfl.scala:bloop-frontend and start a new\n- * bloop server using classloading. A bloop server that starts via classloading\n- * stops when when the metals server stops. Only metals can access the classloaded server,\n- * the user cannot call it from a command-line interface.\n+ * coursier launch ch.epfl.scala:bloopgun-core_2.12:{bloop-version} -- about\n  *\n  * Eventually, this class may be superseded by \"BSP connection protocol\":\n  * https://github.com/scalacenter/bsp/blob/master/docs/bsp.md#bsp-connection-protocol\n  */\n final class BloopServers(\n     sh: ScheduledExecutorService,\n     workspace: AbsolutePath,\n-    client: MetalsBuildClient,\n-    config: MetalsServerConfig,\n-    icons: Icons,\n-    embedded: Embedded,\n-    statusBar: StatusBar\n+    client: MetalsBuildClient\n )(implicit ec: ExecutionContextExecutorService) {\n \n-  def newServer(\n-      maxRetries: Int = defaultRetries\n-  ): Future[Option[BuildServerConnection]] = {\n-    newServerUnsafe().map(Option(_)).recoverWith {\n-      case NonFatal(e) if maxRetries > 0 =>\n-        val retry = defaultRetries - maxRetries + 1\n-        val cause = e.getMessage\n-        scribe.warn(s\"BSP retry $retry due to: $cause\", e)\n-        newServer(maxRetries - 1)\n-    }\n-  }\n+  def newServer(): Future[Option[BuildServerConnection]] = {\n+    val launcherInOutPipe = Pipe.open()\n+    val launcherIn = Channels.newInputStream(launcherInOutPipe.source())\n+    val clientOut = Channels.newOutputStream(launcherInOutPipe.sink())\n+\n+    val clientInOutPipe = Pipe.open()\n+    val clientIn = Channels.newInputStream(clientInOutPipe.source())\n+    val launcherOut = Channels.newOutputStream(clientInOutPipe.sink())\n+\n+    val serverStarted = Promise[Unit]()\n+    val launcher =\n+      new LauncherMain(\n+        launcherIn,\n+        launcherOut,\n+        System.err,\n+        StandardCharsets.UTF_8,\n+        Shell.default,\n+        userNailgunHost = None,\n+        userNailgunPort = None,\n+        serverStarted\n+      )\n \n-  private def defaultRetries: Int =\n-    if (config.bloopProtocol.isTcp) {\n-      10\n-    } else {\n-      2\n-    }\n+    val job = ec.submit(new Runnable {"
  },
  {
    "id" : "647f1c18-c013-486c-96eb-7f00c16186df",
    "prId" : 1256,
    "comments" : [
      {
        "id" : "acdc8cac-0315-457a-bb67-2e4e2b991c59",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "```suggestion\r\n        \"If it doesn't start back up you can run the `build-restart` command manually.\"\r\n```",
        "createdAt" : "2020-01-06T09:37:34Z",
        "updatedAt" : "2020-01-06T12:44:39Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c1d185d5-31f2-42f1-8c49-0b259d9b35bc",
        "parentId" : "acdc8cac-0315-457a-bb67-2e4e2b991c59",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "fixed",
        "createdAt" : "2020-01-06T12:44:49Z",
        "updatedAt" : "2020-01-06T12:44:50Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5221982e1605895d70c5abd22174e1406e1e0efb",
    "line" : null,
    "diffHunk" : "@@ -29,6 +31,25 @@ final class BloopServers(\n     client: MetalsBuildClient\n )(implicit ec: ExecutionContextExecutorService) {\n \n+  def shutdownServer(): Boolean = {\n+    val dummyIn = new ByteArrayInputStream(new Array(0))\n+    val cli = new BloopgunCli(\n+      BuildInfo.bloopVersion,\n+      dummyIn,\n+      System.out,\n+      System.err,\n+      Shell.default\n+    )\n+    val result = cli.run(Array(\"ng-stop\")) == 0\n+    if (!result) {\n+      scribe.warn(\"There were issues stopping the Bloop server.\")\n+      scribe.warn(\n+        \"If it doesn't start back up you can run `build-restart` command manually.\""
  },
  {
    "id" : "466e00c8-c6eb-42e0-9411-5abbb34e1c2d",
    "prId" : 1256,
    "comments" : [
      {
        "id" : "10899f6a-33b3-4b10-b560-76032b94e2ee",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "What is the difference between ngstop and exit?",
        "createdAt" : "2020-01-06T09:53:43Z",
        "updatedAt" : "2020-01-06T12:44:39Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "df25dcfb-4cb8-4838-a950-50769fb4764d",
        "parentId" : "10899f6a-33b3-4b10-b560-76032b94e2ee",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I think that is the underlying nailgun command, might be better to use exit. I was testing it previously and it didn't seem to work with exit, but that might have been a different thing.",
        "createdAt" : "2020-01-06T11:34:38Z",
        "updatedAt" : "2020-01-06T12:44:39Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3bde41b6-389c-464f-bb37-7e8bc7adc3aa",
        "parentId" : "10899f6a-33b3-4b10-b560-76032b94e2ee",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Switched to `exit` since it works with it and that is a Bloop command.",
        "createdAt" : "2020-01-06T12:45:42Z",
        "updatedAt" : "2020-01-06T12:45:42Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "5221982e1605895d70c5abd22174e1406e1e0efb",
    "line" : null,
    "diffHunk" : "@@ -29,6 +31,25 @@ final class BloopServers(\n     client: MetalsBuildClient\n )(implicit ec: ExecutionContextExecutorService) {\n \n+  def shutdownServer(): Boolean = {\n+    val dummyIn = new ByteArrayInputStream(new Array(0))\n+    val cli = new BloopgunCli(\n+      BuildInfo.bloopVersion,\n+      dummyIn,\n+      System.out,\n+      System.err,\n+      Shell.default\n+    )\n+    val result = cli.run(Array(\"ng-stop\")) == 0"
  },
  {
    "id" : "ca69a042-9e27-4fc0-a0c5-1a61ba50a92d",
    "prId" : 1266,
    "comments" : [
      {
        "id" : "306fad48-7cd5-49bc-9f0c-9b89dd8499cc",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "ha, I don't think this was intentional.",
        "createdAt" : "2020-01-08T11:40:32Z",
        "updatedAt" : "2020-01-09T19:41:06Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4f6420ea-55e5-4242-bdc9-aeb724551fe0",
        "parentId" : "306fad48-7cd5-49bc-9f0c-9b89dd8499cc",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "That's where it went :P I was sure I was writing somewhere else.",
        "createdAt" : "2020-01-08T12:58:03Z",
        "updatedAt" : "2020-01-09T19:41:06Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dfc0415c-2c82-4744-85ee-e0a2f3e01572",
        "parentId" : "306fad48-7cd5-49bc-9f0c-9b89dd8499cc",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Fixed",
        "createdAt" : "2020-01-08T14:42:19Z",
        "updatedAt" : "2020-01-09T19:41:06Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0f92bf439ec2e556ef2dd37eb204d08963b7f24b",
    "line" : null,
    "diffHunk" : "@@ -44,19 +46,30 @@ final class BloopServers(\n     if (!result) {\n       scribe.warn(\"There were issues stopping the Bloop server.\")\n       scribe.warn(\n-        \"If it doesn't start back up you can run the `build-restart` command manually.\"\n+        \"If it doesn't start badefck up you can run the `build-restart` command manually.\""
  },
  {
    "id" : "7487fef4-80e8-4798-b9f1-419289d31693",
    "prId" : 1677,
    "comments" : [
      {
        "id" : "7f8b4b7e-ca03-474f-ba49-72cae0680227",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "This promise is used to determine whether the launcher is finished.",
        "createdAt" : "2020-04-29T17:17:04Z",
        "updatedAt" : "2020-05-04T13:57:13Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "473caef1-aee7-4824-bba9-a796055ea451",
        "parentId" : "7f8b4b7e-ca03-474f-ba49-72cae0680227",
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "then maybe it could be called: `launched` instead of `finished`?",
        "createdAt" : "2020-05-04T09:03:37Z",
        "updatedAt" : "2020-05-04T13:57:13Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8549e7fb-4122-48ac-86f0-cf36c0db1313",
        "parentId" : "7f8b4b7e-ca03-474f-ba49-72cae0680227",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "`finished` is updated when the launcher finishes and not when it launches, so I think this is better. ",
        "createdAt" : "2020-05-04T10:03:41Z",
        "updatedAt" : "2020-05-04T13:57:13Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "38751291a84f683f8d8eb60ed8a73ce8657936c9",
    "line" : 24,
    "diffHunk" : "@@ -96,13 +98,15 @@ final class BloopServers(\n         serverStarted\n       )\n \n+    val finished = Promise[Unit]()"
  }
]