[
  {
    "id" : "301e551b-f9d4-4076-a661-98caaf7d5b98",
    "prId" : 337,
    "comments" : [
      {
        "id" : "3db3165c-4451-4021-8e73-24d0a1571c65",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "a embedded -> an embedded",
        "createdAt" : "2018-11-24T13:17:06Z",
        "updatedAt" : "2018-11-27T10:23:41Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "579c22e6-9bd4-4f55-b89a-1d6d0a47dd6d",
        "parentId" : "3db3165c-4451-4021-8e73-24d0a1571c65",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Fixed ",
        "createdAt" : "2018-11-25T11:39:19Z",
        "updatedAt" : "2018-11-27T10:23:41Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8ab78d5883e2e77a843cca1ea641084e6e4a2875",
    "line" : null,
    "diffHunk" : "@@ -1,54 +1,77 @@\n package scala.meta.internal.metals\n \n-case class MetalsServerConfig(\n-    bloopProtocol: BloopProtocol = BloopProtocol.Auto,\n-    isExtensionsEnabled: Boolean =\n-      System.getProperty(\"metals.extensions\") == \"true\",\n+/**\n+ * Configuration parameters for the Metals language server.\n+ *\n+ * @param bloopProtocol the protocol to communicate with Bloop.\n+ * @param fileWatcher whether to start a embedded file watcher in case the editor"
  },
  {
    "id" : "9c0617dc-cc94-43ff-9d5c-5a962655a23d",
    "prId" : 424,
    "comments" : [
      {
        "id" : "d10fb37f-c249-4c2a-b423-f040b5bc561c",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "maybe add a comment here?\r\n\r\n```scala\r\n// vim-lsc does not yet support DocumentSymbol[] as a response for textDocument/documentSymbol\r\ndocumentSymbol = DocumentSymbolConfig.symbolInformation,\r\n\r\n```",
        "createdAt" : "2018-12-19T11:59:09Z",
        "updatedAt" : "2018-12-19T13:35:23Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5bb07a0c-ae6a-4fef-9b77-711d223927b6",
        "parentId" : "d10fb37f-c249-4c2a-b423-f040b5bc561c",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Done.",
        "createdAt" : "2018-12-19T12:44:28Z",
        "updatedAt" : "2018-12-19T13:35:23Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "eade48fd8ffbc5572cad7092e373fee0027e4f0f",
    "line" : 20,
    "diffHunk" : "@@ -88,6 +90,7 @@ object MetalsServerConfig {\n           fileWatcher = FileWatcherConfig.auto,\n           // window/logMessage output is always visible and non-invasive in vim-lsc\n           statusBar = StatusBarConfig.logMessage,\n+          documentSymbol = DocumentSymbolConfig.symbolInformation,"
  },
  {
    "id" : "e35a9fdf-f67b-47ec-90b2-5f50471fc7e6",
    "prId" : 965,
    "comments" : [
      {
        "id" : "c59ac82a-c29b-4983-a918-1c4f197e1848",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This behavior should not be configurable, I think it’s fine to enable it by default without an option to keep the old behavior. ",
        "createdAt" : "2019-10-06T12:37:23Z",
        "updatedAt" : "2019-10-07T15:52:52Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "16f507ca-101d-4104-8a15-19d0c96189e9",
        "parentId" : "c59ac82a-c29b-4983-a918-1c4f197e1848",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "wouldn't this look weird for vim? The cursor at the end point to the next symbol, no?",
        "createdAt" : "2019-10-06T12:55:20Z",
        "updatedAt" : "2019-10-07T15:52:52Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "44fd4ca621f4b83df172d3e0099e7a093eae82dd",
    "line" : null,
    "diffHunk" : "@@ -31,6 +31,7 @@ final case class MetalsServerConfig(\n     showMessage: ShowMessageConfig = ShowMessageConfig.default,\n     showMessageRequest: ShowMessageRequestConfig =\n       ShowMessageRequestConfig.default,\n+    includeLastCharacter: Boolean = true,"
  },
  {
    "id" : "52c1dcb6-b734-452b-92be-60118211d283",
    "prId" : 965,
    "comments" : [
      {
        "id" : "4a2a4cc6-0f16-442a-9935-845733555bdf",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I think we can remove it from here and from config.",
        "createdAt" : "2019-10-07T12:54:09Z",
        "updatedAt" : "2019-10-07T15:52:52Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "44fd4ca621f4b83df172d3e0099e7a093eae82dd",
    "line" : null,
    "diffHunk" : "@@ -119,7 +120,8 @@ object MetalsServerConfig {\n           statusBar = StatusBarConfig.logMessage,\n           // Not strictly needed, but helpful while this integration matures.\n           isHttpEnabled = true,\n-          icons = Icons.unicode\n+          icons = Icons.unicode,\n+          includeLastCharacter = false"
  },
  {
    "id" : "11a0433a-1a5a-451d-9fd7-51f497417734",
    "prId" : 1218,
    "comments" : [
      {
        "id" : "f1a1a0a3-ef4c-4bf8-a9c5-e0621da91303",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I would remove this line so that it uses the default as the other editors (the default is `\"on\"` unless overridden by a system property) \r\n\r\nActually, we can probably remove `ShowMessageConfig` and `ShowMessageRequestConfig` altogether since as far as I know they were only used by Sublime Text.\r\n\r\nI doubt anyone uses those system properties directly, and if they do, I would be curious to know why and better handle this on the server directly.",
        "createdAt" : "2019-12-26T09:20:16Z",
        "updatedAt" : "2019-12-26T09:22:38Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "2390a39c-5e0f-4e87-9e55-4b0f4ae76d91",
        "parentId" : "f1a1a0a3-ef4c-4bf8-a9c5-e0621da91303",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "(It's fine to just remove the line for this PR, I can follow up with a different PR cleaning up the config options)",
        "createdAt" : "2019-12-26T09:20:36Z",
        "updatedAt" : "2019-12-26T09:22:38Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "4e121a75-3a12-48e6-93e0-13125dc182e8",
        "parentId" : "f1a1a0a3-ef4c-4bf8-a9c5-e0621da91303",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "actually, I'll merge as is and follow up directly. ",
        "createdAt" : "2019-12-26T09:28:08Z",
        "updatedAt" : "2019-12-26T09:28:09Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "aa1e73980b5c2b5406a7a4f9837ce4018713bc4a",
    "line" : 16,
    "diffHunk" : "@@ -144,9 +144,8 @@ object MetalsServerConfig {\n       case \"sublime\" =>\n         base.copy(\n           isHttpEnabled = true,\n-          // Sublime text opens an invasive alert dialogue for window/showMessage\n-          // and window/showMessageRequest.\n-          showMessage = ShowMessageConfig.logMessage,\n+          showMessage = ShowMessageConfig.on,"
  },
  {
    "id" : "198bd538-d316-44b4-a3f7-e17f1a871849",
    "prId" : 1227,
    "comments" : [
      {
        "id" : "30a59f1c-e1bd-441a-842c-f6270294483f",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I've taken this out and there are also some other changes that I'll make to the configuration like `isInputBoxEnabled` being turned on and `executeClientCommand` also being on for `coc-metals`. However, I'm turning those on in the extension itself in order to allow someone to still bootstrap Metals themselves for coc.nvim and not use the extension. If they do that, then client commands and input boxes won't be implemented allowing the default settings in here to still take effect.",
        "createdAt" : "2019-12-27T14:51:55Z",
        "updatedAt" : "2019-12-29T22:35:39Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "39d4c4a3-63dc-4c93-b0fa-991ee7cec6ee",
        "parentId" : "30a59f1c-e1bd-441a-842c-f6270294483f",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Should we introduce a `-Dmetals.client=coc-metals` instead? There might still be coc.nvim users that are not using coc-metals.",
        "createdAt" : "2019-12-27T16:51:10Z",
        "updatedAt" : "2019-12-29T22:35:39Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "315c5a34-6b4b-44ab-a346-d5365b02b283",
        "parentId" : "30a59f1c-e1bd-441a-842c-f6270294483f",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I've thought about that, and I would say that if it moves away any further, that might be a good idea. For now, I think just setting the extra needed values in `coc-metals` should suffice, and then that way we don't have to add another entry for it. Using coc.nvim without coc-metals should still work fine with what is currently in here.\r\n\r\nMaybe once I dig into the tree view stuff, then it'll be a good idea to split it out.",
        "createdAt" : "2019-12-27T16:57:07Z",
        "updatedAt" : "2019-12-29T22:35:39Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ca8ad941-3764-4d62-8f56-4c457cb356cf",
        "parentId" : "30a59f1c-e1bd-441a-842c-f6270294483f",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Thinking about it more, I'll just do it right away. I'll end up doing it anyways, so why not now.",
        "createdAt" : "2019-12-27T17:16:47Z",
        "updatedAt" : "2019-12-29T22:35:39Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0b8d38ea4e656b6d7a9effa3ab9622d50e9913ca",
    "line" : null,
    "diffHunk" : "@@ -133,7 +133,6 @@ object MetalsServerConfig {\n       case \"coc.nvim\" =>\n         base.copy(\n           statusBar = StatusBarConfig.showMessage,\n-          isHttpEnabled = true,"
  },
  {
    "id" : "27c8da5b-298f-4b68-91b5-430dbaf797ad",
    "prId" : 1235,
    "comments" : [
      {
        "id" : "f46b7cb2-0dbf-4db5-a826-ad3caa3f8969",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Is this change intentional?",
        "createdAt" : "2019-12-31T09:30:22Z",
        "updatedAt" : "2019-12-31T14:09:08Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0027049c-7724-451a-8cf3-913823402d37",
        "parentId" : "f46b7cb2-0dbf-4db5-a826-ad3caa3f8969",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Ah, no. Sorry, was playing around with this for testing. I'll revert it.",
        "createdAt" : "2019-12-31T09:34:04Z",
        "updatedAt" : "2019-12-31T14:09:08Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2c8c78247edf1c5829edf6eb83fcd0d93f2ea1f2",
    "line" : null,
    "diffHunk" : "@@ -119,7 +122,6 @@ object MetalsServerConfig {\n       case \"coc.nvim\" =>\n         base.copy(\n           statusBar = StatusBarConfig.showMessage,\n-          isHttpEnabled = true,"
  },
  {
    "id" : "d2ab5a10-fad6-4bd6-af0c-f1acf3f9cac1",
    "prId" : 1289,
    "comments" : [
      {
        "id" : "0eeebbac-9978-4541-b487-5273737ee15d",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I was testing this today and realized that with `logMessage` things are correctly getting logged, but the user is getting zero feedback about what it happening. I think it's much more preferable to have this set to `showMessage`.",
        "createdAt" : "2020-01-13T08:59:36Z",
        "updatedAt" : "2020-01-20T12:24:32Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "884f28f6-1f16-4ace-987b-1c649c2b972f",
        "parentId" : "0eeebbac-9978-4541-b487-5273737ee15d",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "I use this some more today, and I'm going to revert this. While it's hard without getting feedback, with this being set this way, the user receives way too much. .",
        "createdAt" : "2020-01-15T10:15:37Z",
        "updatedAt" : "2020-01-20T12:24:32Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ad476d73e6bcc01a78c333f64c12dc967204df36",
    "line" : null,
    "diffHunk" : "@@ -110,9 +110,7 @@ object MetalsServerConfig {\n         )\n       case \"vim-lsc\" =>\n         base.copy(\n-          // window/logMessage output is always visible and non-invasive in vim-lsc\n-          statusBar = StatusBarConfig.logMessage,\n-          // Not strictly needed, but helpful while this integration matures.\n+          statusBar = StatusBarConfig.showMessage,"
  },
  {
    "id" : "e76cb31d-f36b-452f-8aa9-d3f4b2913249",
    "prId" : 1405,
    "comments" : [
      {
        "id" : "780a1d25-5973-41fb-a1bf-2df6eeddb18d",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Nit: All the other names seem to be singular. Could we do `open-files-on-rename`?",
        "createdAt" : "2020-02-07T19:20:02Z",
        "updatedAt" : "2020-02-13T12:26:23Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3445d9d1-fc82-4513-ae65-338cb4429ab3",
        "parentId" : "780a1d25-5973-41fb-a1bf-2df6eeddb18d",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Sure, I agree it makes sense - changed",
        "createdAt" : "2020-02-10T10:43:36Z",
        "updatedAt" : "2020-02-13T12:26:23Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ce1728b34b6dbe9b49a918e16248f4c5b062465e",
    "line" : null,
    "diffHunk" : "@@ -55,6 +57,14 @@ final case class MetalsServerConfig(\n       \"metals.warnings\",\n       default = true\n     ),\n+    openFilesOnRenames: Boolean = MetalsServerConfig.binaryOption(\n+      \"metals.open-files-on-renames\","
  },
  {
    "id" : "5f06db82-0322-41cb-ae65-b0cd2e0a4a60",
    "prId" : 1405,
    "comments" : [
      {
        "id" : "e8d91b4b-c2eb-4d13-896c-c05ad313a047",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "I can see it is similar to `binaryOption` but it is not a good idea to silently ignore user properties if they are not parsed correctly. \r\nI would at least log an error/warning that parameter could not be parsed and default value is used.",
        "createdAt" : "2020-02-10T17:34:18Z",
        "updatedAt" : "2020-02-13T12:26:23Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d9a6dc5d-495d-45ba-bdf8-bd30cf629ba7",
        "parentId" : "e8d91b4b-c2eb-4d13-896c-c05ad313a047",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Fixed, added log messages for binary and int options.",
        "createdAt" : "2020-02-11T15:10:40Z",
        "updatedAt" : "2020-02-13T12:26:23Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ce1728b34b6dbe9b49a918e16248f4c5b062465e",
    "line" : null,
    "diffHunk" : "@@ -85,6 +97,11 @@ object MetalsServerConfig {\n       case \"false\" | \"off\" => false\n       case _ => default\n     }\n+  def intOption(key: String, default: Int): Int ="
  },
  {
    "id" : "0a5bae34-3054-48d9-8414-6b167f1fb4b9",
    "prId" : 1405,
    "comments" : [
      {
        "id" : "7e16e4ac-213c-4fb9-a104-1a31317b9cfa",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "300 is around the moment that VS Code is not yet totally killed and the previews still make sense. Around 1000 everything went bonkers.",
        "createdAt" : "2020-02-11T15:11:55Z",
        "updatedAt" : "2020-02-13T12:26:23Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ce1728b34b6dbe9b49a918e16248f4c5b062465e",
    "line" : null,
    "diffHunk" : "@@ -55,6 +57,14 @@ final case class MetalsServerConfig(\n       \"metals.warnings\",\n       default = true\n     ),\n+    openFilesOnRenames: Boolean = MetalsServerConfig.binaryOption(\n+      \"metals.open-files-on-rename\",\n+      default = false\n+    ),\n+    renameFileThreshold: Int = MetalsServerConfig.intOption(\n+      \"metals.rename-file-threshold\",\n+      default = 300"
  },
  {
    "id" : "29742a0b-7df6-47f3-bff8-b2d3120e941f",
    "prId" : 1405,
    "comments" : [
      {
        "id" : "1f1298e6-07ef-4c36-93fe-cb828e39f813",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "if we're adding this warning, I would recommend also including the `key` name\r\n\r\n```suggestion\r\n          s\"Invalid value for property '$key', required 'true|on' or 'false|off', but got '$other'. Using the default value '$default'\"\r\n```",
        "createdAt" : "2020-02-13T09:07:47Z",
        "updatedAt" : "2020-02-13T12:26:23Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "986fef20-a173-4f03-893a-af8a05f116ae",
        "parentId" : "1f1298e6-07ef-4c36-93fe-cb828e39f813",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Fixed!",
        "createdAt" : "2020-02-13T11:03:51Z",
        "updatedAt" : "2020-02-13T12:26:23Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ce1728b34b6dbe9b49a918e16248f4c5b062465e",
    "line" : null,
    "diffHunk" : "@@ -80,11 +92,30 @@ final case class MetalsServerConfig(\n object MetalsServerConfig {\n   def isTesting: Boolean = \"true\" == System.getProperty(\"metals.testing\")\n   def binaryOption(key: String, default: Boolean): Boolean =\n-    System.getProperty(key) match {\n-      case \"true\" | \"on\" => true\n-      case \"false\" | \"off\" => false\n-      case _ => default\n+    sys.props.get(key) match {\n+      case Some(\"true\" | \"on\") => true\n+      case Some(\"false\" | \"off\") => false\n+      case Some(other) =>\n+        scribe.warn(\n+          s\"Invalid property, required 'true|on' or 'false|off', but got '$other'. Using the default value '$default'\""
  },
  {
    "id" : "02b7505a-9eec-4763-8ce5-8d501d6be009",
    "prId" : 1405,
    "comments" : [
      {
        "id" : "b1610bc8-3afc-4d7f-ab1f-9fd6a2fcd54a",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "same as above\r\n\r\n```suggestion\r\n              s\"Invalid value for property '$key', required Int, but got '$property'. Using the default value '$default'\"\r\n```",
        "createdAt" : "2020-02-13T09:08:12Z",
        "updatedAt" : "2020-02-13T12:26:23Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "35df8668-9b13-437b-a54f-b847327076ba",
        "parentId" : "b1610bc8-3afc-4d7f-ab1f-9fd6a2fcd54a",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Removed it since, the method is no longer used.",
        "createdAt" : "2020-02-13T11:04:11Z",
        "updatedAt" : "2020-02-13T12:26:23Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ce1728b34b6dbe9b49a918e16248f4c5b062465e",
    "line" : null,
    "diffHunk" : "@@ -80,11 +92,30 @@ final case class MetalsServerConfig(\n object MetalsServerConfig {\n   def isTesting: Boolean = \"true\" == System.getProperty(\"metals.testing\")\n   def binaryOption(key: String, default: Boolean): Boolean =\n-    System.getProperty(key) match {\n-      case \"true\" | \"on\" => true\n-      case \"false\" | \"off\" => false\n-      case _ => default\n+    sys.props.get(key) match {\n+      case Some(\"true\" | \"on\") => true\n+      case Some(\"false\" | \"off\") => false\n+      case Some(other) =>\n+        scribe.warn(\n+          s\"Invalid property, required 'true|on' or 'false|off', but got '$other'. Using the default value '$default'\"\n+        )\n+        default\n+      case None => default\n+    }\n+  def intOption(key: String, default: Int): Int = {\n+    sys.props.get(key) match {\n+      case Some(property) =>\n+        Try(property.toInt) match {\n+          case Success(value) => value\n+          case _ =>\n+            scribe.warn(\n+              s\"Invalid property, required Int, but got '$property'. Using the default value '$default'\""
  },
  {
    "id" : "bf25866b-2cae-4b16-84c7-1c846f3d15f6",
    "prId" : 1447,
    "comments" : [
      {
        "id" : "463b68bc-651c-42fc-9999-8934959cf324",
        "parentId" : null,
        "author" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "body" : "I had to change it as well, because entering name for the new file cannot be expressed via `showMessageRequest`. This resulted into a bit changed UI when formatting and no scalafmt version is set.\r\nAlso, I would expect for such configs to be set by client, but okay, I mimicked it with `isPickInputEnabled`.",
        "createdAt" : "2020-02-17T19:11:54Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dc23c4b6-abad-4ee4-93cf-2f7ef8a27560",
        "parentId" : "463b68bc-651c-42fc-9999-8934959cf324",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "That should be in future enabled with the client capabilities, so after @ckipp01 's PR you can move it there.",
        "createdAt" : "2020-02-19T16:16:23Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c034d2b2-3c96-4cb0-831b-d9b6c4b9e57e",
        "parentId" : "463b68bc-651c-42fc-9999-8934959cf324",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I would even remove it from here, since we want to drop the properties.",
        "createdAt" : "2020-02-21T13:08:26Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "948961c16a2b407e9b6be832f69458537ee4bc93",
    "line" : null,
    "diffHunk" : "@@ -106,6 +111,8 @@ object MetalsServerConfig {\n           openFilesOnRenames = true,\n           executeClientCommand = ExecuteClientCommandConfig.on,\n           globSyntax = GlobSyntaxConfig.vscode,\n+          isInputBoxEnabled = true,"
  },
  {
    "id" : "271b15d4-9e8c-4314-9c1c-19c905e2f92a",
    "prId" : 1447,
    "comments" : [
      {
        "id" : "fc1589f9-61d3-4ca0-93b5-46b9ccb07a8b",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "As a follow-up to my previous comment, and similiar to what @tgodzik mentioned, if you rebase on master now, you'll see the pattern I followed in #1414. Moving forward for _most cases_, we shouldn't need to add new server properties, but rather list them under `ClientExperimentalCapabilities`.",
        "createdAt" : "2020-02-20T12:15:10Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a18e3daa-4e3b-4348-8ff1-1668f2158c34",
        "parentId" : "fc1589f9-61d3-4ca0-93b5-46b9ccb07a8b",
        "author" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "body" : "I've added client properties, but server ones are still there, cause https://github.com/scalameta/metals-vscode/pull/207 is not being pushed.",
        "createdAt" : "2020-02-20T15:42:25Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "82ae6055-f53b-40c8-826b-175587a40022",
        "parentId" : "fc1589f9-61d3-4ca0-93b5-46b9ccb07a8b",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "But that's because those properties already exist and are relied upon via clients that are already using them. This is a brand new one that we are introducing, so I'm not sure I understand why we also need to support this with client properties since nothing is relying on it? We can just only support it via `ClientExperimentalCapabilities`, and introduce it in vscode via experimentl.",
        "createdAt" : "2020-02-20T16:13:07Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4528f0c1-11b3-4647-b0f2-d69a5b79f56a",
        "parentId" : "fc1589f9-61d3-4ca0-93b5-46b9ccb07a8b",
        "author" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "body" : "`isPickInputEnabled` removed now, and capability added to the client in https://github.com/scalameta/metals-vscode/pull/183. Though `isInputBoxEnabled = true` still in this place, I am not sure, if it should not be here now.",
        "createdAt" : "2020-02-20T22:08:07Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "alekseiAlefirov",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/10850363?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c808e6c7-13b1-4ceb-9324-7587052e6509",
        "parentId" : "fc1589f9-61d3-4ca0-93b5-46b9ccb07a8b",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Yea,  for now that's fine since that property already existed anyways. Once we release, and the the vs code pr gets merged, we can then remove the `isInputBoxEnabled` since then it will be set via experimental from vs code.",
        "createdAt" : "2020-02-21T06:33:04Z",
        "updatedAt" : "2020-02-21T16:40:07Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "948961c16a2b407e9b6be832f69458537ee4bc93",
    "line" : null,
    "diffHunk" : "@@ -106,6 +111,8 @@ object MetalsServerConfig {\n           openFilesOnRenames = true,\n           executeClientCommand = ExecuteClientCommandConfig.on,\n           globSyntax = GlobSyntaxConfig.vscode,\n+          isInputBoxEnabled = true,\n+          isPickInputEnabled = true,"
  },
  {
    "id" : "b0bfd131-9658-424d-95dc-b5de5f91a948",
    "prId" : 1677,
    "comments" : [
      {
        "id" : "d69c9302-83fa-4dbf-8e31-9b8ba54d5b44",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Instead of introducing this as a server property, can we just introduce it in `InitializationOptions`?",
        "createdAt" : "2020-04-29T18:15:56Z",
        "updatedAt" : "2020-05-04T13:57:13Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "452b09f7-ee92-4624-93b8-c7b5ebda5bb2",
        "parentId" : "d69c9302-83fa-4dbf-8e31-9b8ba54d5b44",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Client editor should never set this. It's only to be set by a user that knows what they are doing. Usually via `.jvmopts` file in the workspace. The default is fine for all clients.",
        "createdAt" : "2020-04-29T18:31:55Z",
        "updatedAt" : "2020-05-04T13:57:13Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ca2250ed-89e9-46d2-98a5-f14b244fc288",
        "parentId" : "d69c9302-83fa-4dbf-8e31-9b8ba54d5b44",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "ahhh ok, that makes sense. 👍 ",
        "createdAt" : "2020-04-29T18:33:41Z",
        "updatedAt" : "2020-05-04T13:57:13Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "38751291a84f683f8d8eb60ed8a73ce8657936c9",
    "line" : 4,
    "diffHunk" : "@@ -66,6 +66,10 @@ final case class MetalsServerConfig(\n       \"bloop.embedded.version\",\n       BuildInfo.bloopVersion\n     ),\n+    askToReconnect: Boolean = MetalsServerConfig.binaryOption("
  }
]