[
  {
    "id" : "c84d1b38-2370-4465-a584-2362242a6b4f",
    "prId" : 709,
    "comments" : [
      {
        "id" : "9698a4d7-7cee-4291-bf8e-179098f2f21c",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I think we need to reverse the conditions to avoid locking the queue forever\r\n\r\n```scala\r\n     if (!paused.get() && lock.compareAndSet(false, true)) {\r\n```",
        "createdAt" : "2019-05-06T10:29:49Z",
        "updatedAt" : "2019-05-31T13:37:41Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "7d5ac5e1-f3d5-4e27-862d-6a4855fb6b37",
        "parentId" : "9698a4d7-7cee-4291-bf8e-179098f2f21c",
        "author" : {
          "login" : "agajek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/12413667?u=65dfb6ffae1005eb93db585e8ebfa5d70cf07b21&v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-05-16T06:33:38Z",
        "updatedAt" : "2019-05-31T13:37:41Z",
        "lastEditedBy" : {
          "login" : "agajek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/12413667?u=65dfb6ffae1005eb93db585e8ebfa5d70cf07b21&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e996d0d719a59efbb86d5727fb306a454ea1623b",
    "line" : null,
    "diffHunk" : "@@ -69,7 +85,7 @@ final class BatchedFunction[A, B](\n     }\n   }\n   private def runAcquire(): Unit = {\n-    if (lock.compareAndSet(false, true)) {\n+    if (lock.compareAndSet(false, true) && !paused.get()) {"
  },
  {
    "id" : "c67b67b0-45c0-4211-bd20-d0ae036b1584",
    "prId" : 709,
    "comments" : [
      {
        "id" : "1bfe5512-2f5d-4c01-9620-ca7aa9a13789",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I liked the previous `pause` and `unpause`, any thoughts?",
        "createdAt" : "2019-05-16T11:45:25Z",
        "updatedAt" : "2019-05-31T13:37:41Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "73d115ca-58b6-420f-a970-21d3a9007c99",
        "parentId" : "1bfe5512-2f5d-4c01-9620-ca7aa9a13789",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "These methods should use `()` to indicate side-effects, `def pause(): Unit`",
        "createdAt" : "2019-05-16T11:49:14Z",
        "updatedAt" : "2019-05-31T13:37:41Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a422e7de-1f6c-412f-b7f9-25c4eec64ffa",
        "parentId" : "1bfe5512-2f5d-4c01-9620-ca7aa9a13789",
        "author" : {
          "login" : "agajek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/12413667?u=65dfb6ffae1005eb93db585e8ebfa5d70cf07b21&v=4"
        },
        "body" : "> I liked the previous `pause` and `unpause`, any thoughts?\r\n\r\nOh. :D I was not entirely happy with these and thought that `accumulate` is more accurate to describe a way it really works. But I can revert to the previous names if you liked it. ",
        "createdAt" : "2019-05-16T14:24:47Z",
        "updatedAt" : "2019-05-31T13:37:41Z",
        "lastEditedBy" : {
          "login" : "agajek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/12413667?u=65dfb6ffae1005eb93db585e8ebfa5d70cf07b21&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d24959a1-29b6-43d0-8011-7d636251b837",
        "parentId" : "1bfe5512-2f5d-4c01-9620-ca7aa9a13789",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "I prefer pause and unpause ",
        "createdAt" : "2019-05-16T16:25:23Z",
        "updatedAt" : "2019-05-31T13:37:41Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e996d0d719a59efbb86d5727fb306a454ea1623b",
    "line" : null,
    "diffHunk" : "@@ -38,6 +38,22 @@ final class BatchedFunction[A, B](\n     promise.future\n   }\n \n+  def apply(argument: A): Future[B] = apply(List(argument))\n+\n+  /**\n+   * Pauses applications of the arguments to the fn but allows to accumulate requests\n+   */\n+  def accumulate: Unit ="
  }
]