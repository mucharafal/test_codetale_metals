[
  {
    "id" : "0c689ce1-9cd0-44de-be44-c57ba016d2c0",
    "prId" : 1487,
    "comments" : [
      {
        "id" : "bfee1180-b88b-4a79-960b-944ebc114099",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I wonder if it would be faster to go over symbols, check if they are field or method and only as the last step find occurence?",
        "createdAt" : "2020-03-23T13:08:56Z",
        "updatedAt" : "2020-03-24T16:45:28Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "55838e6c9f4127bc8d06a8d31a6df496a0b729a8",
    "line" : 43,
    "diffHunk" : "@@ -0,0 +1,100 @@\n+package scala.meta.internal.metals.codelenses\n+\n+import java.util.Collections.singletonList\n+import org.eclipse.{lsp4j => l}\n+import scala.collection.{mutable => m}\n+import scala.meta.internal.implementation.ImplementationProvider\n+import scala.meta.internal.implementation.SuperMethodProvider\n+import scala.meta.internal.implementation.ClassHierarchyItem\n+import scala.meta.internal.implementation.TextDocumentWithPath\n+import scala.meta.internal.metals.Buffers\n+import scala.meta.internal.metals.MetalsServerConfig\n+import scala.meta.internal.metals.ServerCommands\n+import scala.meta.internal.metals.TokenEditDistance\n+import scala.meta.internal.metals.UserConfiguration\n+import scala.meta.internal.semanticdb.SymbolInformation\n+import scala.meta.internal.semanticdb.SymbolOccurrence\n+import scala.meta.internal.metals.MetalsEnrichments._\n+import scala.meta.internal.metals.codelenses.SuperMethodCodeLens.LensGoSuperCache\n+import scala.meta.internal.metals.codelenses.SuperMethodCodeLens.emptyLensGoSuperCache\n+\n+final class SuperMethodCodeLens(\n+    implementationProvider: ImplementationProvider,\n+    buffers: Buffers,\n+    userConfig: () => UserConfiguration,\n+    config: MetalsServerConfig\n+) extends CodeLens {\n+\n+  override def isEnabled: Boolean = userConfig().superMethodLensesEnabled\n+\n+  override def codeLenses(\n+      textDocumentWithPath: TextDocumentWithPath\n+  ): Seq[l.CodeLens] = {\n+    val textDocument = textDocumentWithPath.textDocument\n+    val path = textDocumentWithPath.filePath\n+\n+    val search = implementationProvider.defaultSymbolSearch(\n+      textDocumentWithPath\n+    )\n+    val distance =\n+      TokenEditDistance.fromBuffer(path, textDocument.text, buffers)\n+\n+    for {\n+      occurrence <- textDocument.occurrences"
  }
]