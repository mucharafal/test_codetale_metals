[
  {
    "id" : "1e06966e-32e1-4b66-a68a-625b44f006ce",
    "prId" : 429,
    "comments" : [
      {
        "id" : "af98575b-6ddf-43b6-8cd8-f21dd4f67dac",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "We can remove this guard since we have no more `AtomicBoolean`",
        "createdAt" : "2018-12-20T15:27:24Z",
        "updatedAt" : "2018-12-22T11:11:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ec1161fecfaec6824cba1eb2a21806f972c8f67f",
    "line" : null,
    "diffHunk" : "@@ -26,6 +27,9 @@ final class Embedded(\n     if (isBloopJars.get()) {\n       bloopJars.foreach(_.close())\n     }\n+    if (isScalafmtJars.get()) {"
  },
  {
    "id" : "bf34ff5f-1078-470f-8dd7-092a10aff3a1",
    "prId" : 429,
    "comments" : [
      {
        "id" : "d29a5eb6-6676-4e6f-a8d8-7123a036fc2c",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Might be worth to link to https://github.com/scalameta/scalafmt/issues/1252",
        "createdAt" : "2018-12-20T15:28:28Z",
        "updatedAt" : "2018-12-22T11:11:14Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "ec1161fecfaec6824cba1eb2a21806f972c8f67f",
    "line" : 58,
    "diffHunk" : "@@ -106,4 +136,29 @@ object Embedded {\n       new URLClassLoader(jars.iterator.map(_.toUri.toURL).toArray, parent)\n     classloader\n   }\n+\n+  private def newScalafmtClassloader(version: String): URLClassLoader = {\n+    val settings = new coursiersmall.Settings()\n+      .withTtl(Some(Duration.Inf))\n+      .withDependencies(\n+        List(\n+          new coursiersmall.Dependency(\n+            \"com.geirsson\",\n+            \"scalafmt-cli_2.12\",\n+            version\n+          ),\n+          new coursiersmall.Dependency("
  },
  {
    "id" : "b8478a4a-aea1-418c-9627-325a7642162e",
    "prId" : 527,
    "comments" : [
      {
        "id" : "41fa76f4-a365-41a1-9d38-5a07fa872023",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "out of curiosity: why not move the classloading inside the pc-interfaces, similarly to what happens in Scalafix/Scalafmt?",
        "createdAt" : "2019-02-17T10:55:00Z",
        "updatedAt" : "2019-03-10T09:44:08Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "24f7ec42-856f-4089-aa24-205088ad969e",
        "parentId" : "41fa76f4-a365-41a1-9d38-5a07fa872023",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "The main reason is because I like making JDK `ServiceLoader` the \"public abstraction\", users of this API should know there is reflection going on.\r\n\r\n- scalafmt handles downloading via coursier, so it's a bit different\r\n- I didn't know about `ServiceLoader` when I wrote scalafix-interfaces",
        "createdAt" : "2019-02-18T09:27:40Z",
        "updatedAt" : "2019-03-10T09:44:08Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "c7621ebcf6232d37856b167824069496131bae13",
    "line" : 75,
    "diffHunk" : "@@ -77,29 +87,80 @@ final class Embedded(\n     AbsolutePath(out)\n   }\n \n+  private val presentationCompilers: TrieMap[String, URLClassLoader] ="
  },
  {
    "id" : "969147df-fd9f-4402-8d8f-65980dec43f8",
    "prId" : 735,
    "comments" : [
      {
        "id" : "c228ea01-bc06-4d02-bda5-a770c37464e7",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "nit: is this parameter necessary? We can use `withForceVersions` at the call-site instead",
        "createdAt" : "2019-05-29T08:03:35Z",
        "updatedAt" : "2019-05-29T08:11:48Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "870ebd19-7be8-48c5-a5df-1b35eb78708d",
        "parentId" : "c228ea01-bc06-4d02-bda5-a770c37464e7",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Ok, added it there. Sorry for the many force pushes - somehow I wasn't formatting although I was sure I was.",
        "createdAt" : "2019-05-29T08:13:12Z",
        "updatedAt" : "2019-05-29T08:13:12Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ffb95ebf563336a70d1a69b3962214887cbde892",
    "line" : null,
    "diffHunk" : "@@ -98,7 +98,10 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(dependency: Dependency): Settings =\n+  def downloadSettings(\n+      dependency: Dependency,\n+      forceDependencies: List[Dependency] = Nil"
  },
  {
    "id" : "63037ce0-623f-4b40-9476-5a2f2ef0d3f1",
    "prId" : 901,
    "comments" : [
      {
        "id" : "f10ca26e-94a5-43a8-9375-bccedb3f242e",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "```suggestion\r\n            opt.contains(BuildInfo.semanticdbVersion) =>\r\n```\r\n\r\nalthough they are the same right now, I feel it's more appropriate to use the more specific one",
        "createdAt" : "2019-09-05T15:31:28Z",
        "updatedAt" : "2019-09-05T20:30:13Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ae2a10e6-108e-4068-ae1f-4e8693ad0f2c",
        "parentId" : "f10ca26e-94a5-43a8-9375-bccedb3f242e",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Good catch! Thanks!",
        "createdAt" : "2019-09-05T20:30:05Z",
        "updatedAt" : "2019-09-05T20:30:13Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "49c558374a6b6073ef96c13f65cbe9bd09f5ef1b",
    "line" : null,
    "diffHunk" : "@@ -120,23 +140,19 @@ object Embedded {\n       s\"mtags_${ScalaVersions.dropVendorSuffix(info.getScalaVersion)}\",\n       BuildInfo.metalsVersion\n     )\n-    val needsFullClasspath = !scalac.isSemanticdbEnabled\n+    val semanticdbJars = scalac.getOptions.asScala.collect {\n+      case opt\n+          if opt.startsWith(\"-Xplugin:\") &&\n+            opt.contains(\"semanticdb-scalac\") &&\n+            opt.contains(BuildInfo.scalametaVersion) =>"
  },
  {
    "id" : "0d20a864-5df1-400c-96c8-1a364065fa66",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "264fae20-0c4a-46d4-99b6-9b40db00b2e4",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Is this necessary? I believe it's automatically respected by coursier",
        "createdAt" : "2019-10-30T17:54:21Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,44 +60,59 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n+  def fetchSettings(\n       dependency: Dependency,\n       scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n+  ): Fetch = {\n+    val fetch = Fetch\n+      .create()\n+      .withDependencies(List(dependency): _*)\n+      .addRepositories(\n+        Repository.defaults().asScala.toList: _*\n+      )\n       .addRepositories(\n         List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n-        )\n+          Repository.central(),\n+          Repository.ivy2Local()\n+        ): _*\n       )\n-      .withForceVersions(\n+      .withDependencies(\n         List(\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-library\",\n             scalaVersion\n           ),\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-compiler\",\n             scalaVersion\n           ),\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-reflect\",\n             scalaVersion\n           )\n-        )\n+        ): _*\n       )\n \n+    val envRepos = System"
  },
  {
    "id" : "aab7576f-3337-4c1e-8c81-4bb4f68e3bd6",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "8f76353d-29fc-4fd3-a150-970ae86912cb",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "just passing the `withDependency(dependency)` doesn't work?",
        "createdAt" : "2019-10-31T19:06:10Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1d213367-a3cb-48c8-8c23-a89c133de60f",
        "parentId" : "8f76353d-29fc-4fd3-a150-970ae86912cb",
        "author" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "body" : "no, it expects varargs\r\nedit: ok, my bad, for some reason I've thought that you've meant to use list",
        "createdAt" : "2019-11-04T11:23:18Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,44 +60,59 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n+  def fetchSettings(\n       dependency: Dependency,\n       scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n+  ): Fetch = {\n+    val fetch = Fetch\n+      .create()\n+      .withDependencies(List(dependency): _*)"
  },
  {
    "id" : "e5f8feee-fe07-4a5d-8603-074a49796357",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "b9a62394-3998-4ae5-b0dd-64b07600c52f",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "it can be extracted to a constant `defaultRepositories`",
        "createdAt" : "2019-10-31T19:06:51Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,44 +60,59 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n+  def fetchSettings(\n       dependency: Dependency,\n       scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n+  ): Fetch = {\n+    val fetch = Fetch\n+      .create()\n+      .withDependencies(List(dependency): _*)\n+      .addRepositories(\n+        Repository.defaults().asScala.toList: _*"
  },
  {
    "id" : "3de22ea8-fabb-4dce-8686-42fe7777d64c",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "aa52a57a-9bef-4f3e-ac35-ef64d5c76597",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "are the parenthesis necesarry?",
        "createdAt" : "2019-10-31T19:07:17Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "8dcbe560-f143-4262-a477-6066f6545a9e",
        "parentId" : "aa52a57a-9bef-4f3e-ac35-ef64d5c76597",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "No, but the codebase should consistently try to use `()` when calling java methods.",
        "createdAt" : "2019-11-02T11:01:50Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,44 +60,59 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n+  def fetchSettings(\n       dependency: Dependency,\n       scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n+  ): Fetch = {\n+    val fetch = Fetch\n+      .create()\n+      .withDependencies(List(dependency): _*)\n+      .addRepositories(\n+        Repository.defaults().asScala.toList: _*\n+      )\n       .addRepositories(\n         List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n-        )\n+          Repository.central(),"
  },
  {
    "id" : "893afaf8-a50d-46ba-a6e1-610ee2a2ce0a",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "33b46ceb-79a6-4a65-b91e-91c2c5d69333",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "can we specify the parameters directly, without wrapping them in a list first?\r\nlike: `addRepositories(Repository.central, Repository.ivy2Local)` ",
        "createdAt" : "2019-10-31T19:10:12Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,44 +60,59 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n+  def fetchSettings(\n       dependency: Dependency,\n       scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n+  ): Fetch = {\n+    val fetch = Fetch\n+      .create()\n+      .withDependencies(List(dependency): _*)\n+      .addRepositories(\n+        Repository.defaults().asScala.toList: _*\n+      )\n       .addRepositories(\n         List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n-        )\n+          Repository.central(),\n+          Repository.ivy2Local()\n+        ): _*"
  },
  {
    "id" : "4d8cebb9-1b26-47d4-96f0-8a7e52214369",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "2061eab3-8136-4222-bff3-42e0b8abaeab",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "could you extract it to a variable and give it a meaningful name?",
        "createdAt" : "2019-10-31T19:11:47Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,44 +60,59 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n+  def fetchSettings(\n       dependency: Dependency,\n       scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n+  ): Fetch = {\n+    val fetch = Fetch\n+      .create()\n+      .withDependencies(List(dependency): _*)\n+      .addRepositories(\n+        Repository.defaults().asScala.toList: _*\n+      )\n       .addRepositories(\n         List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n-        )\n+          Repository.central(),\n+          Repository.ivy2Local()\n+        ): _*\n       )\n-      .withForceVersions(\n+      .withDependencies(\n         List(\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-library\",\n             scalaVersion\n           ),\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-compiler\",\n             scalaVersion\n           ),\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-reflect\",\n             scalaVersion\n           )\n-        )\n+        ): _*\n       )\n \n+    val envRepos = System\n+      .getenv(\"COURSIER_REPOSITORIES\")\n+    if (envRepos.nonEmpty)\n+      fetch.addRepositories(\n+        envRepos"
  },
  {
    "id" : "c9f27cd5-ce86-41b1-b50c-d757904ecb7d",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "69bb6da9-eee3-4ff7-95f3-ab880148ffc7",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "does it fit in a single line?",
        "createdAt" : "2019-10-31T19:14:16Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "cd883fe2-0c25-4cd9-b00a-a6fc6494d573",
        "parentId" : "69bb6da9-eee3-4ff7-95f3-ab880148ffc7",
        "author" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "body" : "It's reworked now, so there's no envRepos.",
        "createdAt" : "2019-11-12T12:32:09Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,44 +60,59 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n+  def fetchSettings(\n       dependency: Dependency,\n       scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n+  ): Fetch = {\n+    val fetch = Fetch\n+      .create()\n+      .withDependencies(List(dependency): _*)\n+      .addRepositories(\n+        Repository.defaults().asScala.toList: _*\n+      )\n       .addRepositories(\n         List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n-        )\n+          Repository.central(),\n+          Repository.ivy2Local()\n+        ): _*\n       )\n-      .withForceVersions(\n+      .withDependencies(\n         List(\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-library\",\n             scalaVersion\n           ),\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-compiler\",\n             scalaVersion\n           ),\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-reflect\",\n             scalaVersion\n           )\n-        )\n+        ): _*\n       )\n \n+    val envRepos = System"
  },
  {
    "id" : "ab4188bd-238e-44a1-b2ff-549900d03d49",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "b19f94ba-b2a5-4500-8012-861985323a29",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "can `toIndexedSeq` be used instead of `toList: _*` ? \"Passing an explicit array value to a Scala varargs method is deprecated (since 2.13.0)\"",
        "createdAt" : "2019-10-31T19:14:49Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "be2c006b-e2c7-4632-b23f-9ad5c4adfff1",
        "parentId" : "b19f94ba-b2a5-4500-8012-861985323a29",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This is a Java vararg method. `toList:_*` is fine, we can deal with 2.13 deprecations another time",
        "createdAt" : "2019-11-02T11:03:12Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,44 +60,59 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n+  def fetchSettings(\n       dependency: Dependency,\n       scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n+  ): Fetch = {\n+    val fetch = Fetch\n+      .create()\n+      .withDependencies(List(dependency): _*)\n+      .addRepositories(\n+        Repository.defaults().asScala.toList: _*\n+      )\n       .addRepositories(\n         List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n-        )\n+          Repository.central(),\n+          Repository.ivy2Local()\n+        ): _*\n       )\n-      .withForceVersions(\n+      .withDependencies(\n         List(\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-library\",\n             scalaVersion\n           ),\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-compiler\",\n             scalaVersion\n           ),\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-reflect\",\n             scalaVersion\n           )\n-        )\n+        ): _*\n       )\n \n+    val envRepos = System\n+      .getenv(\"COURSIER_REPOSITORIES\")\n+    if (envRepos.nonEmpty)\n+      fetch.addRepositories(\n+        envRepos\n+          .split(\"\"\"|\"\"\")\n+          .map(MavenRepository.of)\n+          .toList: _*"
  },
  {
    "id" : "c4b9f129-d665-4dfb-a022-3ee0f210664d",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "33a0c329-16c5-4333-9e05-983b353fd1c9",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "it would be nicer to edit the repositories at the top and then pass them to the `Fetch` directly, like:\r\n\r\n```scala\r\ndef foo = {\r\n  val repositories = \r\n    if(envRepos.isEmpty) DefaultRepositories\r\n    else DefaultRepositories ++ envRepos.map(MavenRepository.of)\r\n  \r\n  // this is a last statement\r\n  Fetch\r\n    (...)\r\n    .withRepositories(repositories)\r\n}\r\n```\r\n",
        "createdAt" : "2019-10-31T19:18:50Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,44 +60,59 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n+  def fetchSettings(\n       dependency: Dependency,\n       scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n+  ): Fetch = {\n+    val fetch = Fetch\n+      .create()\n+      .withDependencies(List(dependency): _*)\n+      .addRepositories(\n+        Repository.defaults().asScala.toList: _*\n+      )\n       .addRepositories(\n         List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n-        )\n+          Repository.central(),\n+          Repository.ivy2Local()\n+        ): _*\n       )\n-      .withForceVersions(\n+      .withDependencies(\n         List(\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-library\",\n             scalaVersion\n           ),\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-compiler\",\n             scalaVersion\n           ),\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-reflect\",\n             scalaVersion\n           )\n-        )\n+        ): _*\n       )\n \n+    val envRepos = System\n+      .getenv(\"COURSIER_REPOSITORIES\")\n+    if (envRepos.nonEmpty)"
  },
  {
    "id" : "2b77bc43-603c-4ff3-9922-ce5db98d0e5b",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "370a1ccc-c0e2-4809-b2df-e57a8e2e4538",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "maybe `fetch` -> `remoteSettings`? Then `fetch.fetch` -> `remoteSettings.fetch` sounds nicer",
        "createdAt" : "2019-10-31T19:20:03Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -113,8 +127,8 @@ object Embedded {\n     val dependency =\n       if (semanticdbJars.isEmpty) pc\n       else pc.withTransitive(false)\n-    val settings = downloadSettings(dependency, info.getScalaVersion())\n-    val jars = CoursierSmall.fetch(settings)\n+    val fetch = fetchSettings(dependency, info.getScalaVersion())"
  },
  {
    "id" : "9fa3795e-987e-4450-8aa4-38351ac9d04f",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "7b9345a3-82c5-4a52-88aa-054454b5f404",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I don't see `SonatypeReleases` and `SonatypeSnapshots` being added now, which was done previously.",
        "createdAt" : "2019-11-12T11:47:10Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c3e0f6a6-8095-478e-a0c5-f1f1142e8fb6",
        "parentId" : "7b9345a3-82c5-4a52-88aa-054454b5f404",
        "author" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "body" : "Should be fine now, but could you double check the urls?",
        "createdAt" : "2019-11-12T12:28:02Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "a9e722e3-a93f-4f6a-a0e7-95aaaaa8deaf",
        "parentId" : "7b9345a3-82c5-4a52-88aa-054454b5f404",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "The look right.",
        "createdAt" : "2019-11-12T12:44:48Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,44 +60,53 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n+  def fetchSettings(\n       dependency: Dependency,\n       scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n-      .addRepositories(\n-        List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n-        )\n-      )\n-      .withForceVersions(\n+  ): Fetch = {\n+    val repositories =\n+      Repository.defaults().asScala ++\n+        List(Repository.central(), Repository.ivy2Local())"
  },
  {
    "id" : "1722c2c8-335a-4d04-9a7b-621d964950d0",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "3071f90f-b096-4e9b-8de6-263f8ecc4677",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Remove",
        "createdAt" : "2019-11-12T11:48:12Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b5e6ebe6-8e5c-4704-bdde-e03f4890a3e4",
        "parentId" : "3071f90f-b096-4e9b-8de6-263f8ecc4677",
        "author" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-11-12T12:27:33Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -113,8 +121,13 @@ object Embedded {\n     val dependency =\n       if (semanticdbJars.isEmpty) pc\n       else pc.withTransitive(false)\n-    val settings = downloadSettings(dependency, info.getScalaVersion())\n-    val jars = CoursierSmall.fetch(settings)\n+    val jars = fetchSettings(dependency, info.getScalaVersion())\n+      .fetch()\n+      .asScala\n+      .map(_.toPath)\n+\n+    pprint.log(jars)"
  },
  {
    "id" : "32fc47f0-6e28-46ce-bb21-16e8ba6fa257",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "9adc58ea-630a-4138-9a25-31a9020c39c4",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "this can be a single line",
        "createdAt" : "2019-11-13T07:38:59Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "98459264-f6e5-485c-8427-b08f212e22ad",
        "parentId" : "9adc58ea-630a-4138-9a25-31a9020c39c4",
        "author" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "body" : "Fixed.",
        "createdAt" : "2019-11-14T13:39:24Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,44 +61,63 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n-      dependency: Dependency,\n-      scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n-      .addRepositories(\n-        List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n+  lazy val repositories =\n+    Repository.defaults().asScala ++\n+      List(\n+        Repository.central(),\n+        Repository.ivy2Local(),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/releases/\"\n+        ),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/snapshots/\"\n         )\n       )\n-      .withForceVersions(\n+\n+  def fetchSettings(\n+      dependency: Dependency,\n+      scalaVersion: String\n+  ): Fetch = {\n+\n+    val resolutionParams = ResolutionParams\n+      .create()\n+      .forceVersions(\n         List(\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-library\",\n             scalaVersion\n           ),\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-compiler\",\n             scalaVersion\n           ),\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-reflect\",\n             scalaVersion\n           )\n-        )\n+        ).map(d => (d.getModule, d.getVersion)).toMap.asJava\n       )\n \n+    Fetch\n+      .create()\n+      .addRepositories(\n+        repositories: _*\n+      )"
  },
  {
    "id" : "30bed64c-0cc9-4bf1-bedc-c46223344938",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "ff90777a-4e99-43cb-a542-6f5692f97c12",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "this can be a single line",
        "createdAt" : "2019-11-13T07:39:07Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "da6e4adf-9d61-47bf-8992-88cacc1ee313",
        "parentId" : "ff90777a-4e99-43cb-a542-6f5692f97c12",
        "author" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "body" : "Fixed.",
        "createdAt" : "2019-11-14T13:39:30Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,44 +61,63 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n-      dependency: Dependency,\n-      scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n-      .addRepositories(\n-        List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n+  lazy val repositories =\n+    Repository.defaults().asScala ++\n+      List(\n+        Repository.central(),\n+        Repository.ivy2Local(),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/releases/\"\n+        ),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/snapshots/\"\n         )\n       )\n-      .withForceVersions(\n+\n+  def fetchSettings(\n+      dependency: Dependency,\n+      scalaVersion: String\n+  ): Fetch = {\n+\n+    val resolutionParams = ResolutionParams\n+      .create()\n+      .forceVersions(\n         List(\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-library\",\n             scalaVersion\n           ),\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-compiler\",\n             scalaVersion\n           ),\n-          new Dependency(\n+          Dependency.of(\n             \"org.scala-lang\",\n             \"scala-reflect\",\n             scalaVersion\n           )\n-        )\n+        ).map(d => (d.getModule, d.getVersion)).toMap.asJava\n       )\n \n+    Fetch\n+      .create()\n+      .addRepositories(\n+        repositories: _*\n+      )\n+      .withDependencies(\n+        dependency\n+      )"
  },
  {
    "id" : "ac8977ba-14d4-46d5-a902-793c54a34593",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "bc947ead-4a53-440a-b751-1f4425e17e67",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "rename to `dependencies`",
        "createdAt" : "2019-11-14T16:56:03Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6e7081b3-c7cc-4dc3-a881-1d3280cf1348",
        "parentId" : "bc947ead-4a53-440a-b751-1f4425e17e67",
        "author" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "body" : "Changed.",
        "createdAt" : "2019-11-15T08:45:21Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,47 +62,60 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n-      dependency: Dependency,\n-      scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n-      .addRepositories(\n-        List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n+  lazy val repositories: mutable.Buffer[Repository] =\n+    Repository.defaults().asScala ++\n+      List(\n+        Repository.central(),\n+        Repository.ivy2Local(),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/releases/\"\n+        ),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/snapshots/\"\n         )\n       )\n-      .withForceVersions(\n-        List(\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-library\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-compiler\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-reflect\",\n-            scalaVersion\n-          )\n-        )\n+\n+  def dependency(dep: String): Dependency = {\n+    val regex = \"\"\"([^:]+):([^:]+):([^:]+)\"\"\".r\n+\n+    dep match {\n+      case regex(org, name, version) =>\n+        Dependency.of(org, name, version)\n+    }\n+  }\n+\n+  def dependency(dep: String*): Seq[Dependency] = dep.map(dependency)"
  },
  {
    "id" : "c9822f44-d8af-4efe-83f0-ec4a82b255fe",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "a91e0021-370a-4b08-9630-b8b2099dedd7",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "what if the regex doesn't match?",
        "createdAt" : "2019-11-14T16:56:20Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "675b1f74-c8af-46ff-91ac-c97f0ee74bee",
        "parentId" : "a91e0021-370a-4b08-9630-b8b2099dedd7",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "It's just a test, so I wouldn't bother validating this. You can optionally log the unexpected case when the regex doesn't match",
        "createdAt" : "2019-11-14T19:45:40Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "47d0d259-bc5d-4365-8d03-bd6639ac3955",
        "parentId" : "a91e0021-370a-4b08-9630-b8b2099dedd7",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Ok, this is not a test. Doing regex without the actual need for them is bad. Let's revert.",
        "createdAt" : "2019-11-15T10:05:42Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "07fc233c-9ee0-4ef7-b439-7e9cd01d2f33",
        "parentId" : "a91e0021-370a-4b08-9630-b8b2099dedd7",
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "Let's keep the dependencies in one like `Dependency.of(\"foo\", \"bar\", \"baz\")` and either keep the regex only in the test scope or drop them altogether",
        "createdAt" : "2019-11-15T13:17:59Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,47 +62,60 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n-      dependency: Dependency,\n-      scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n-      .addRepositories(\n-        List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n+  lazy val repositories: mutable.Buffer[Repository] =\n+    Repository.defaults().asScala ++\n+      List(\n+        Repository.central(),\n+        Repository.ivy2Local(),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/releases/\"\n+        ),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/snapshots/\"\n         )\n       )\n-      .withForceVersions(\n-        List(\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-library\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-compiler\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-reflect\",\n-            scalaVersion\n-          )\n-        )\n+\n+  def dependency(dep: String): Dependency = {\n+    val regex = \"\"\"([^:]+):([^:]+):([^:]+)\"\"\".r\n+\n+    dep match {\n+      case regex(org, name, version) =>"
  },
  {
    "id" : "79180d44-ebef-4d31-9107-e460d97c7212",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "750424a5-a779-4edd-aad8-272b3d8cbeaf",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "extract the long expressions inside the string interpolation to a variable",
        "createdAt" : "2019-11-14T16:57:25Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "882adb4a-96a3-4b42-895d-ee49607e17fc",
        "parentId" : "750424a5-a779-4edd-aad8-272b3d8cbeaf",
        "author" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "body" : "Changed.",
        "createdAt" : "2019-11-15T08:48:28Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,47 +62,60 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n-      dependency: Dependency,\n-      scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n-      .addRepositories(\n-        List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n+  lazy val repositories: mutable.Buffer[Repository] =\n+    Repository.defaults().asScala ++\n+      List(\n+        Repository.central(),\n+        Repository.ivy2Local(),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/releases/\"\n+        ),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/snapshots/\"\n         )\n       )\n-      .withForceVersions(\n-        List(\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-library\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-compiler\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-reflect\",\n-            scalaVersion\n-          )\n-        )\n+\n+  def dependency(dep: String): Dependency = {\n+    val regex = \"\"\"([^:]+):([^:]+):([^:]+)\"\"\".r\n+\n+    dep match {\n+      case regex(org, name, version) =>\n+        Dependency.of(org, name, version)\n+    }\n+  }\n+\n+  def dependency(dep: String*): Seq[Dependency] = dep.map(dependency)\n+\n+  def fetchSettings(\n+      dep: Dependency,\n+      scalaVersion: String\n+  ): Fetch = {\n+\n+    val resolutionParams = ResolutionParams\n+      .create()\n+      .forceVersions(\n+        dependency(\n+          s\"org.scala-lang:scala-library:$scalaVersion\",\n+          s\"org.scala-lang:scala-compiler:$scalaVersion\",\n+          s\"org.scala-lang:scala-reflect:$scalaVersion\"\n+        ).map(d => (d.getModule, d.getVersion)).toMap.asJava\n       )\n \n+    Fetch\n+      .create()\n+      .addRepositories(repositories: _*)\n+      .withDependencies(dep)\n+      .withResolutionParams(resolutionParams)\n+      .withMainArtifacts()\n+  }\n+\n   def newPresentationCompilerClassLoader(\n       info: ScalaBuildTarget,\n       scalac: ScalacOptionsItem\n   ): URLClassLoader = {\n-    val pc = new Dependency(\n-      \"org.scalameta\",\n-      s\"mtags_${ScalaVersions.dropVendorSuffix(info.getScalaVersion)}\",\n-      BuildInfo.metalsVersion\n+    val pc = dependency(\n+      s\"org.scalameta:mtags_${ScalaVersions"
  },
  {
    "id" : "8a969d5e-fa0c-4fcd-84bc-c7f21afe8d78",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "79d65e35-0bec-4867-81f4-38a97ee14cdc",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "That shouldn't really be a mutable buffer though (looks really bad). Do a `toList` on it.",
        "createdAt" : "2019-11-14T19:44:20Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "99c3e8b8-c912-41a1-9d87-8f5ecb67dfa8",
        "parentId" : "79d65e35-0bec-4867-81f4-38a97ee14cdc",
        "author" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "body" : "Fixed.",
        "createdAt" : "2019-11-15T08:55:33Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,47 +62,60 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n-      dependency: Dependency,\n-      scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n-      .addRepositories(\n-        List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n+  lazy val repositories: mutable.Buffer[Repository] ="
  },
  {
    "id" : "69ac08a3-2bd6-44d0-afac-9a0032157e0c",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "0fc4882c-b10d-42fc-a105-133e0c87fde4",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "```suggestion\r\n          Dependency.of(\"org.scala-lang\", \"scala-library\", scalaVersion),\r\n```",
        "createdAt" : "2019-11-15T13:20:12Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1470343a-c30a-4f0e-b99f-939342b4cbfe",
        "parentId" : "0fc4882c-b10d-42fc-a105-133e0c87fde4",
        "author" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "body" : "Fixed.",
        "createdAt" : "2019-11-18T10:42:29Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,46 +61,51 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n-      dependency: Dependency,\n-      scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n-      .addRepositories(\n-        List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n+  lazy val repositories: List[Repository] =\n+    Repository.defaults().asScala.toList ++\n+      List(\n+        Repository.central(),\n+        Repository.ivy2Local(),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/releases/\"\n+        ),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/snapshots/\"\n         )\n       )\n-      .withForceVersions(\n+\n+  def fetchSettings(\n+      dep: Dependency,\n+      scalaVersion: String\n+  ): Fetch = {\n+\n+    val resolutionParams = ResolutionParams\n+      .create()\n+      .forceVersions(\n         List(\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-library\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-compiler\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-reflect\",\n-            scalaVersion\n-          )\n-        )\n+          Dependency.of(s\"org.scala-lang:'\", \"scala-library\", scalaVersion),"
  },
  {
    "id" : "a886534f-27cb-47e5-9aa3-f1b85fcd3ee7",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "631a8f09-fb5a-4c90-bb22-7df49a563b11",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "```suggestion\r\n      \"org.scalameta\",\r\n```",
        "createdAt" : "2019-11-15T13:21:24Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4d862179-c111-4f8d-93e9-2923c79bc38c",
        "parentId" : "631a8f09-fb5a-4c90-bb22-7df49a563b11",
        "author" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "body" : "Fixed.",
        "createdAt" : "2019-11-18T10:42:36Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,46 +61,51 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n-      dependency: Dependency,\n-      scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n-      .addRepositories(\n-        List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n+  lazy val repositories: List[Repository] =\n+    Repository.defaults().asScala.toList ++\n+      List(\n+        Repository.central(),\n+        Repository.ivy2Local(),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/releases/\"\n+        ),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/snapshots/\"\n         )\n       )\n-      .withForceVersions(\n+\n+  def fetchSettings(\n+      dep: Dependency,\n+      scalaVersion: String\n+  ): Fetch = {\n+\n+    val resolutionParams = ResolutionParams\n+      .create()\n+      .forceVersions(\n         List(\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-library\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-compiler\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-reflect\",\n-            scalaVersion\n-          )\n-        )\n+          Dependency.of(s\"org.scala-lang:'\", \"scala-library\", scalaVersion),\n+          Dependency.of(\"org.scala-lang\", \"scala-compiler\", scalaVersion),\n+          Dependency.of(\"org.scala-lang\", \"scala-reflect\", scalaVersion)\n+        ).map(d => (d.getModule, d.getVersion)).toMap.asJava\n       )\n \n+    Fetch\n+      .create()\n+      .addRepositories(repositories: _*)\n+      .withDependencies(dep)\n+      .withResolutionParams(resolutionParams)\n+      .withMainArtifacts()\n+  }\n+\n   def newPresentationCompilerClassLoader(\n       info: ScalaBuildTarget,\n       scalac: ScalacOptionsItem\n   ): URLClassLoader = {\n-    val pc = new Dependency(\n-      \"org.scalameta\",\n-      s\"mtags_${ScalaVersions.dropVendorSuffix(info.getScalaVersion)}\",\n+    val scala_version = ScalaVersions\n+      .dropVendorSuffix(info.getScalaVersion)\n+    val pc = Dependency.of(\n+      s\"org.scalameta\","
  },
  {
    "id" : "6e6559b5-5680-4c14-b957-c78b59dc2249",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "4869bca7-3531-458b-b67c-0ce5e9fbfe97",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "extract to `mtagsVersion`",
        "createdAt" : "2019-11-15T13:21:48Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e87ef3a5-1900-4b18-a8d0-c0d9791d8173",
        "parentId" : "4869bca7-3531-458b-b67c-0ce5e9fbfe97",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "I think this is fine, we don't use it  more than once and mtagsVersion would really be less clear here. It's not really mtags version, just mtags + scala version.",
        "createdAt" : "2019-11-18T10:37:52Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "3db975e9-366f-4ff1-bc8b-6fa1ad787393",
        "parentId" : "4869bca7-3531-458b-b67c-0ce5e9fbfe97",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "It's fine to keep this as is. This is BTW the \"mtags artifact name\", not \"mtags version\"",
        "createdAt" : "2019-11-18T11:06:32Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,46 +61,51 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n-      dependency: Dependency,\n-      scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n-      .addRepositories(\n-        List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n+  lazy val repositories: List[Repository] =\n+    Repository.defaults().asScala.toList ++\n+      List(\n+        Repository.central(),\n+        Repository.ivy2Local(),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/releases/\"\n+        ),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/snapshots/\"\n         )\n       )\n-      .withForceVersions(\n+\n+  def fetchSettings(\n+      dep: Dependency,\n+      scalaVersion: String\n+  ): Fetch = {\n+\n+    val resolutionParams = ResolutionParams\n+      .create()\n+      .forceVersions(\n         List(\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-library\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-compiler\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-reflect\",\n-            scalaVersion\n-          )\n-        )\n+          Dependency.of(s\"org.scala-lang:'\", \"scala-library\", scalaVersion),\n+          Dependency.of(\"org.scala-lang\", \"scala-compiler\", scalaVersion),\n+          Dependency.of(\"org.scala-lang\", \"scala-reflect\", scalaVersion)\n+        ).map(d => (d.getModule, d.getVersion)).toMap.asJava\n       )\n \n+    Fetch\n+      .create()\n+      .addRepositories(repositories: _*)\n+      .withDependencies(dep)\n+      .withResolutionParams(resolutionParams)\n+      .withMainArtifacts()\n+  }\n+\n   def newPresentationCompilerClassLoader(\n       info: ScalaBuildTarget,\n       scalac: ScalacOptionsItem\n   ): URLClassLoader = {\n-    val pc = new Dependency(\n-      \"org.scalameta\",\n-      s\"mtags_${ScalaVersions.dropVendorSuffix(info.getScalaVersion)}\",\n+    val scala_version = ScalaVersions\n+      .dropVendorSuffix(info.getScalaVersion)\n+    val pc = Dependency.of(\n+      s\"org.scalameta\",\n+      s\"mtags_$scala_version\","
  },
  {
    "id" : "892eb115-4dad-41a1-b40a-a814a61ae85d",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "259923bb-563b-47e4-aec9-2e054cce2243",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "can we keep the call in one line like `Dependency.of(a, b, c)` ?",
        "createdAt" : "2019-11-15T13:22:15Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "1ec1b4ad-9e56-4085-8497-5218a3ebfcad",
        "parentId" : "259923bb-563b-47e4-aec9-2e054cce2243",
        "author" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "body" : "Scalafmt keeps breaking this line.",
        "createdAt" : "2019-11-18T10:43:33Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "8465d3b6-0282-4a22-b79a-3d8ce9815b36",
        "parentId" : "259923bb-563b-47e4-aec9-2e054cce2243",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "It's because it's too long, you would need to extract it to `val compilerVersion = mtags.BuildInfo.scalaCompilerVersion`. But honestly, I wouldn't bother.",
        "createdAt" : "2019-11-18T10:50:11Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0042d5e8-73ef-41db-a2c3-618d46928163",
        "parentId" : "259923bb-563b-47e4-aec9-2e054cce2243",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Or this is a different line - got a bit confused",
        "createdAt" : "2019-11-18T11:00:38Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : 99,
    "diffHunk" : "@@ -61,46 +61,51 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n-      dependency: Dependency,\n-      scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n-      .addRepositories(\n-        List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n+  lazy val repositories: List[Repository] =\n+    Repository.defaults().asScala.toList ++\n+      List(\n+        Repository.central(),\n+        Repository.ivy2Local(),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/releases/\"\n+        ),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/snapshots/\"\n         )\n       )\n-      .withForceVersions(\n+\n+  def fetchSettings(\n+      dep: Dependency,\n+      scalaVersion: String\n+  ): Fetch = {\n+\n+    val resolutionParams = ResolutionParams\n+      .create()\n+      .forceVersions(\n         List(\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-library\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-compiler\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-reflect\",\n-            scalaVersion\n-          )\n-        )\n+          Dependency.of(s\"org.scala-lang:'\", \"scala-library\", scalaVersion),\n+          Dependency.of(\"org.scala-lang\", \"scala-compiler\", scalaVersion),\n+          Dependency.of(\"org.scala-lang\", \"scala-reflect\", scalaVersion)\n+        ).map(d => (d.getModule, d.getVersion)).toMap.asJava\n       )\n \n+    Fetch\n+      .create()\n+      .addRepositories(repositories: _*)\n+      .withDependencies(dep)\n+      .withResolutionParams(resolutionParams)\n+      .withMainArtifacts()\n+  }\n+\n   def newPresentationCompilerClassLoader(\n       info: ScalaBuildTarget,\n       scalac: ScalacOptionsItem\n   ): URLClassLoader = {\n-    val pc = new Dependency(\n-      \"org.scalameta\",\n-      s\"mtags_${ScalaVersions.dropVendorSuffix(info.getScalaVersion)}\",\n+    val scala_version = ScalaVersions\n+      .dropVendorSuffix(info.getScalaVersion)\n+    val pc = Dependency.of("
  },
  {
    "id" : "e46f91d7-ea49-46d2-841a-4899491fbf3c",
    "prId" : 1030,
    "comments" : [
      {
        "id" : "b77e8791-62ee-460b-a158-2f5dd440328d",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "nit: in Scala we use camel case instead of snake case\r\n```suggestion\r\n    val scalaVersion = ScalaVersions\r\n```",
        "createdAt" : "2019-11-18T11:06:06Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "e6d3ce64-7b21-4048-95c9-53d86644fcf8",
        "parentId" : "b77e8791-62ee-460b-a158-2f5dd440328d",
        "author" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "body" : "Fixed.",
        "createdAt" : "2019-11-19T11:50:46Z",
        "updatedAt" : "2019-11-19T14:42:54Z",
        "lastEditedBy" : {
          "login" : "sswistun-vl",
          "name" : null,
          "avatarUrl" : "https://avatars3.githubusercontent.com/u/56023683?u=f003afed233efe6b3491f405b0affea9c99d3163&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "7e0b4f32a417f5182340641e0922176285193c62",
    "line" : null,
    "diffHunk" : "@@ -61,46 +61,51 @@ final class Embedded(\n }\n \n object Embedded {\n-  def downloadSettings(\n-      dependency: Dependency,\n-      scalaVersion: String\n-  ): Settings =\n-    new coursiersmall.Settings()\n-      .withTtl(Some(Duration.Inf))\n-      .withDependencies(List(dependency))\n-      .addRepositories(\n-        List(\n-          coursiersmall.Repository.SonatypeReleases,\n-          coursiersmall.Repository.SonatypeSnapshots\n+  lazy val repositories: List[Repository] =\n+    Repository.defaults().asScala.toList ++\n+      List(\n+        Repository.central(),\n+        Repository.ivy2Local(),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/releases/\"\n+        ),\n+        MavenRepository.of(\n+          \"https://oss.sonatype.org/content/repositories/snapshots/\"\n         )\n       )\n-      .withForceVersions(\n+\n+  def fetchSettings(\n+      dep: Dependency,\n+      scalaVersion: String\n+  ): Fetch = {\n+\n+    val resolutionParams = ResolutionParams\n+      .create()\n+      .forceVersions(\n         List(\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-library\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-compiler\",\n-            scalaVersion\n-          ),\n-          new Dependency(\n-            \"org.scala-lang\",\n-            \"scala-reflect\",\n-            scalaVersion\n-          )\n-        )\n+          Dependency.of(\"org.scala-lang\", \"scala-library\", scalaVersion),\n+          Dependency.of(\"org.scala-lang\", \"scala-compiler\", scalaVersion),\n+          Dependency.of(\"org.scala-lang\", \"scala-reflect\", scalaVersion)\n+        ).map(d => (d.getModule, d.getVersion)).toMap.asJava\n       )\n \n+    Fetch\n+      .create()\n+      .addRepositories(repositories: _*)\n+      .withDependencies(dep)\n+      .withResolutionParams(resolutionParams)\n+      .withMainArtifacts()\n+  }\n+\n   def newPresentationCompilerClassLoader(\n       info: ScalaBuildTarget,\n       scalac: ScalacOptionsItem\n   ): URLClassLoader = {\n-    val pc = new Dependency(\n+    val scala_version = ScalaVersions"
  },
  {
    "id" : "f30a7bb5-8b60-48ce-925a-a20eba9b0411",
    "prId" : 1070,
    "comments" : [
      {
        "id" : "0ada4b9f-92a8-43b1-a760-759b4dc9fb41",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Can we move this value up to the top of the file?",
        "createdAt" : "2019-11-18T10:08:49Z",
        "updatedAt" : "2019-11-20T13:47:26Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ed3d2320-0fc7-47c0-8c2c-867b3ccb21bb",
        "parentId" : "0ada4b9f-92a8-43b1-a760-759b4dc9fb41",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Done",
        "createdAt" : "2019-11-18T10:47:11Z",
        "updatedAt" : "2019-11-20T13:47:26Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "8e9ddf5e5c6478ce25ea66ea4938fa0c64f27aba",
    "line" : null,
    "diffHunk" : "@@ -30,6 +33,23 @@ final class Embedded(\n \n   override def cancel(): Unit = {\n     presentationCompilers.clear()\n+    mdocs.clear()\n+  }\n+\n+  private val mdocs: TrieMap[String, URLClassLoader] ="
  },
  {
    "id" : "dd0fea1b-43c8-4aea-b8c6-4856ef070e60",
    "prId" : 1070,
    "comments" : [
      {
        "id" : "ade2f87b-ba05-41d4-ab5d-5578cace11bf",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "We no longer use AppVeyor, do we need to load ScalaPresentationCompiler explicitely?",
        "createdAt" : "2019-11-18T10:11:45Z",
        "updatedAt" : "2019-11-20T13:47:26Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5e444ff3-d934-43c1-a34e-91c8ccd14511",
        "parentId" : "ade2f87b-ba05-41d4-ab5d-5578cace11bf",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "This is a reasonable fallback mechanism if the service loader doesn't work for some reason. This code was here before so I don't stir up things in this PR",
        "createdAt" : "2019-11-18T10:48:01Z",
        "updatedAt" : "2019-11-20T13:47:26Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "8e9ddf5e5c6478ce25ea66ea4938fa0c64f27aba",
    "line" : 80,
    "diffHunk" : "@@ -40,23 +60,34 @@ final class Embedded(\n   ): PresentationCompiler = {\n     val classloader = presentationCompilers.getOrElseUpdate(\n       ScalaVersions.dropVendorSuffix(info.getScalaVersion),\n-      statusBar.trackSlowTask(\"Downloading presentation compiler\") {\n+      statusBar.trackSlowTask(\"Preparing presentation compiler\") {\n         Embedded.newPresentationCompilerClassLoader(info, scalac)\n       }\n     )\n-    val services =\n-      ServiceLoader.load(classOf[PresentationCompiler], classloader).iterator()\n+    serviceLoader(\n+      classOf[PresentationCompiler],\n+      classOf[ScalaPresentationCompiler].getName(),\n+      classloader\n+    )\n+  }\n+\n+  private def serviceLoader[T](\n+      cls: Class[T],\n+      className: String,\n+      classloader: URLClassLoader\n+  ): T = {\n+    val services = ServiceLoader.load(cls, classloader).iterator()\n     if (services.hasNext) services.next()\n     else {\n-      // NOTE(olafur): ServiceLoader doesn't find the presentation compiler service\n-      // on Appveyor for some reason, I'm unable to reproduce on my computer. Here below\n-      // we fallback to manual classloading.\n-      val cls =\n-        classloader.loadClass(classOf[ScalaPresentationCompiler].getName)\n+      // NOTE(olafur): ServiceLoader doesn't find the service on Appveyor for"
  },
  {
    "id" : "4f71c5f2-9e44-4f7c-94a7-c90b3a3ff8b8",
    "prId" : 1523,
    "comments" : [
      {
        "id" : "3e423dbc-716e-493a-8f08-d2b4bbc09f9e",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Is this still correct? I thought we would be able to classload the mtags module the same way for scala 3  and scala 2",
        "createdAt" : "2020-04-08T17:40:20Z",
        "updatedAt" : "2020-04-15T13:50:25Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "6ccca16b-dfcc-413c-a454-37a5ba48a630",
        "parentId" : "3e423dbc-716e-493a-8f08-d2b4bbc09f9e",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Thanks for noticing! It was working because I had everything published before.",
        "createdAt" : "2020-04-10T15:55:34Z",
        "updatedAt" : "2020-04-15T13:50:25Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1142490703f832961ac0df1debd14b4f3b12ce7d",
    "line" : null,
    "diffHunk" : "@@ -223,4 +208,49 @@ object Embedded {\n       new PresentationCompilerClassLoader(this.getClass.getClassLoader)\n     new URLClassLoader(allURLs, parent)\n   }\n+\n+  def newScala3PresentationCompilerClassLoader(\n+      info: ScalaBuildTarget,\n+      scalac: ScalacOptionsItem\n+  ): URLClassLoader = {\n+    val pc = Dependency.of(\n+      \"org.scalameta\",\n+      s\"mtags3_${ScalaVersions.dropVendorSuffix(info.getScalaVersion)}\","
  },
  {
    "id" : "d53b37ea-55df-4abb-965b-1e94926f979a",
    "prId" : 1523,
    "comments" : [
      {
        "id" : "01a45e47-4094-4f95-8384-8f7a88a5c622",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Removed the redundant method for create Scala 3 presentation compiler and just added this single condtion. Everything else is the same.",
        "createdAt" : "2020-04-15T13:43:30Z",
        "updatedAt" : "2020-04-15T13:50:25Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1142490703f832961ac0df1debd14b4f3b12ce7d",
    "line" : 19,
    "diffHunk" : "@@ -119,9 +119,12 @@ object Embedded {\n       dep: Dependency,\n       scalaVersion: String\n   ): Fetch = {\n+\n     val resolutionParams = ResolutionParams\n       .create()\n-      .forceVersions(\n+\n+    if (!ScalaVersions.isScala3Version(scalaVersion))"
  },
  {
    "id" : "920436af-3815-4609-bbe7-2cb3ffa41210",
    "prId" : 1851,
    "comments" : [
      {
        "id" : "16732df5-9a56-45ec-9051-2e5f22d7f3c8",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "No interesting logs are show here and this can cause the log to be shown and distract user anyway.",
        "createdAt" : "2020-06-24T15:55:47Z",
        "updatedAt" : "2020-06-24T16:01:21Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5a519594c3cabaa8b154b73270439bbfecfe6f5b",
    "line" : 5,
    "diffHunk" : "@@ -45,7 +45,7 @@ final class Embedded(\n   def mdoc(scalaVersion: String, scalaBinaryVersion: String): Mdoc = {\n     val classloader = mdocs.getOrElseUpdate(\n       scalaBinaryVersion,\n-      statusBar.trackSlowTask(\"Preparing worksheets\") {\n+      statusBar.trackSlowTask(\"Preparing worksheets\", quietLogs = true) {"
  },
  {
    "id" : "4d05224c-a6af-42ab-9f6f-89174ae102af",
    "prId" : 1851,
    "comments" : [
      {
        "id" : "18e5016e-2737-40f6-93c7-57a4e4a2b7ae",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Same here.",
        "createdAt" : "2020-06-24T15:55:55Z",
        "updatedAt" : "2020-06-24T16:01:21Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "5a519594c3cabaa8b154b73270439bbfecfe6f5b",
    "line" : 17,
    "diffHunk" : "@@ -62,9 +62,10 @@ final class Embedded(\n   ): PresentationCompiler = {\n     val classloader = presentationCompilers.getOrElseUpdate(\n       ScalaVersions.dropVendorSuffix(info.getScalaVersion),\n-      statusBar.trackSlowTask(\"Preparing presentation compiler\") {\n-        Embedded.newPresentationCompilerClassLoader(info, scalac)\n-      }\n+      statusBar\n+        .trackSlowTask(\"Preparing presentation compiler\", quietLogs = true) {"
  },
  {
    "id" : "35d5e2bd-3eb2-42b6-baac-b605e9200c0c",
    "prId" : 1856,
    "comments" : [
      {
        "id" : "ba422787-a026-4b5e-8de7-900924d5c367",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "FWIW, it's possible to provide a custom coursier logger for the download progress https://github.com/scalameta/mdoc/blob/54f40f32ed946d3676adab35cd05bb27a6055401/mdoc-interfaces/src/main/scala/mdoc/interfaces/Mdoc.java#L17",
        "createdAt" : "2020-06-25T17:06:54Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "ee277ae0-8852-4281-a828-578ea0887702",
        "parentId" : "ba422787-a026-4b5e-8de7-900924d5c367",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "The default one used by Mdoc should just report things to System.err, which should be fine, no?",
        "createdAt" : "2020-06-25T18:23:32Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "9a1649f1-9c6b-4100-9fbc-51c2f88174a5",
        "parentId" : "ba422787-a026-4b5e-8de7-900924d5c367",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "It might be nice to somehow display the progress via LSP but looking at the coursier logger api it might not be so easy. This is fine ",
        "createdAt" : "2020-06-26T09:03:43Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1f17edfb786b6f5af2def3bdb1d0b49714512fb2",
    "line" : 27,
    "diffHunk" : "@@ -177,10 +182,12 @@ object Embedded {\n   private def downloadDependency(\n       dep: Dependency,\n       scalaVersion: String,\n-      classfiers: Seq[String] = Seq.empty\n+      classfiers: Seq[String] = Seq.empty,\n+      resolution: ResolutionParams = ResolutionParams.create()\n   ): List[Path] =\n     fetchSettings(dep, scalaVersion)\n       .addClassifiers(classfiers: _*)\n+      .withResolutionParams(resolution)"
  },
  {
    "id" : "a360f5e0-5655-4d5e-aaae-230947fae4fb",
    "prId" : 1856,
    "comments" : [
      {
        "id" : "03dda611-dd55-42b9-be88-8448551994bc",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Add comment why?",
        "createdAt" : "2020-06-25T17:15:29Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "3bf47f6f-d573-4a2a-a120-652985b678b1",
        "parentId" : "03dda611-dd55-42b9-be88-8448551994bc",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Added",
        "createdAt" : "2020-06-25T18:47:42Z",
        "updatedAt" : "2020-06-26T14:08:31Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "1f17edfb786b6f5af2def3bdb1d0b49714512fb2",
    "line" : 11,
    "diffHunk" : "@@ -111,7 +111,12 @@ object Embedded {\n       scalaVersion: String,\n       scalaBinaryVersion: String\n   ): URLClassLoader = {\n-    val jars = downloadMdoc(scalaVersion, scalaBinaryVersion)\n+    val resolutionParams = ResolutionParams\n+      .create()\n+\n+    resolutionParams.addExclusion(\"io.get-coursier\", \"interface\")"
  },
  {
    "id" : "0d845107-5d01-4e9b-abd1-ad9901575ca1",
    "prId" : 1971,
    "comments" : [
      {
        "id" : "92a52a8f-751e-48fe-8790-4ab98fefc7b6",
        "parentId" : null,
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "What do you think about changing this up a bit to not display this every time. I think it gives the user the impression that they are downloading this every time. It does briefly flash for me every time I call this, which is a bit distracting. We actually hit on something similar to this before in the VS Code extension if I'm not mistaken, and I believe we delayed showing the \"downloading\" message unless it was taking longer than `x` amount of time.",
        "createdAt" : "2020-09-04T13:42:48Z",
        "updatedAt" : "2020-09-11T13:32:54Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "d99fbec8-30f6-4022-8bd1-43acfba98983",
        "parentId" : "92a52a8f-751e-48fe-8790-4ab98fefc7b6",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "I wonder if this \"throttling\" logic could be centralized in `trackBlockingTask`. It seems a fairly general case",
        "createdAt" : "2020-09-06T16:39:58Z",
        "updatedAt" : "2020-09-11T13:32:54Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2b53e469-78c7-4039-9b3f-968b45aae4ab",
        "parentId" : "92a52a8f-751e-48fe-8790-4ab98fefc7b6",
        "author" : {
          "login" : "mlachkar",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/7843237?u=d2941da73011b9a49767ac863ce5bc20b7b10ed7&v=4"
        },
        "body" : "I will just remove the tracking for this task. It's a small artifact. ",
        "createdAt" : "2020-09-07T09:10:55Z",
        "updatedAt" : "2020-09-11T13:32:54Z",
        "lastEditedBy" : {
          "login" : "mlachkar",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/7843237?u=d2941da73011b9a49767ac863ce5bc20b7b10ed7&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "ebd2632e5db66829b27658c5dd9e9289d1b5ba6d",
    "line" : null,
    "diffHunk" : "@@ -73,6 +75,21 @@ final class Embedded(\n     )\n   }\n \n+  def organizeImports(\n+      scalaBinaryVersion: String,\n+      scalafixClassLoader: ClassLoader\n+  ): URLClassLoader = {\n+    val toolClasspathJars =\n+      statusBar.trackBlockingTask(\"Downloading organize import rule\") {"
  }
]