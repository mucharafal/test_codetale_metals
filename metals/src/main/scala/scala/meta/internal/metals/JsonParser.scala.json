[
  {
    "id" : "cf95d441-508f-40aa-bc7a-89032ba5cbad",
    "prId" : 923,
    "comments" : [
      {
        "id" : "31fd66fa-ae5d-4bca-bd5c-39425574cb12",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Let's keep separate line imports, otherwise it's a bit of a mess in the project. Let's keep it consistent",
        "createdAt" : "2019-09-18T10:12:42Z",
        "updatedAt" : "2019-09-24T10:49:11Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "34b736c65504efc71e34421317b1346d8671e0ea",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,35 @@\n+package scala.meta.internal.metals\n+import com.google.gson.{Gson, JsonElement, JsonObject}"
  },
  {
    "id" : "ea80f907-242f-4aaf-8301-30884ef023f1",
    "prId" : 923,
    "comments" : [
      {
        "id" : "40e72f5f-4d6e-41b5-81e0-10f242245791",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Does this need to be a trait? It seems to be only extended here.",
        "createdAt" : "2019-09-18T10:13:35Z",
        "updatedAt" : "2019-09-24T10:49:11Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "34b736c65504efc71e34421317b1346d8671e0ea",
    "line" : 11,
    "diffHunk" : "@@ -0,0 +1,35 @@\n+package scala.meta.internal.metals\n+import com.google.gson.{Gson, JsonElement, JsonObject}\n+\n+import scala.reflect.{ClassTag, classTag}\n+import scala.util.{Failure, Success, Try}\n+\n+sealed trait JsonParser {"
  },
  {
    "id" : "876768a2-dc40-4cba-bc3c-00bdda9bb24e",
    "prId" : 923,
    "comments" : [
      {
        "id" : "a40735ed-1dd7-4857-8f13-82838a2d2600",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Adding a method on `Any` seems ify (it will be available on everything and throw exceptions on most things :fearful: ). Can we make it on a `JsonElement`? We can then add it to `MetalsEnrichments`. It will involve an additional step of matching, but I think it's cleaner.",
        "createdAt" : "2019-09-18T10:26:45Z",
        "updatedAt" : "2019-09-24T10:49:11Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "34b736c65504efc71e34421317b1346d8671e0ea",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,35 @@\n+package scala.meta.internal.metals\n+import com.google.gson.{Gson, JsonElement, JsonObject}\n+\n+import scala.reflect.{ClassTag, classTag}\n+import scala.util.{Failure, Success, Try}\n+\n+sealed trait JsonParser {\n+  implicit class Parsable(data: Any) {"
  },
  {
    "id" : "e453f2f2-b4e8-4319-afe8-9dd416675f89",
    "prId" : 923,
    "comments" : [
      {
        "id" : "235e6e90-cbde-49cb-8dd4-65424020ea82",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Let's maybe do it for AnyRef.",
        "createdAt" : "2019-09-18T10:29:13Z",
        "updatedAt" : "2019-09-24T10:49:11Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "48b1921c-b4fb-4f09-b6c0-a26cbe9046d7",
        "parentId" : "235e6e90-cbde-49cb-8dd4-65424020ea82",
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "That would break on {de}serializing ints but it is not an important case right now, so we can do it.",
        "createdAt" : "2019-09-24T08:28:17Z",
        "updatedAt" : "2019-09-24T10:49:11Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "34b736c65504efc71e34421317b1346d8671e0ea",
    "line" : 19,
    "diffHunk" : "@@ -0,0 +1,35 @@\n+package scala.meta.internal.metals\n+import com.google.gson.{Gson, JsonElement, JsonObject}\n+\n+import scala.reflect.{ClassTag, classTag}\n+import scala.util.{Failure, Success, Try}\n+\n+sealed trait JsonParser {\n+  implicit class Parsable(data: Any) {\n+    def as[A: ClassTag]: Try[A] = {\n+      data match {\n+        case json: JsonElement =>\n+          val targetType = classTag[A].runtimeClass.asInstanceOf[Class[A]]\n+          Try(JsonParser.gson.fromJson(json, targetType))\n+        case value: A =>\n+          Success(value)\n+        case _ =>\n+          Failure(new IllegalArgumentException(s\"Cannot convert [$data]\"))\n+      }\n+    }\n+  }\n+\n+  implicit class Serializable(data: Any) {"
  },
  {
    "id" : "a6025ece-f244-44f1-b9c3-832e2c03eec4",
    "prId" : 942,
    "comments" : [
      {
        "id" : "f1b394df-09e1-46e4-b1e6-b0c4ae4acc37",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "By convention, implicit classes start with the `Xtension` prefix. Even if `Parsable` didn't follow the convention here the new `Serialized` should. I would call it `XtensionParseJson`, the more specific the name the less likely it is to conflict with other implicit classes in scope.",
        "createdAt" : "2019-09-25T07:57:32Z",
        "updatedAt" : "2019-10-04T07:32:50Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "47ea581fbaa603a2dc171e3e913392f05fc4ba11",
    "line" : null,
    "diffHunk" : "@@ -3,18 +3,17 @@ package scala.meta.internal.metals\n import com.google.gson.Gson\n import com.google.gson.JsonElement\n import com.google.gson.JsonObject\n-\n+import com.google.gson.JsonParser\n import scala.reflect.ClassTag\n import scala.reflect.classTag\n import scala.util.Try\n \n object JsonParser {\n   private val gson = new Gson()\n \n-  implicit class Parsable(json: JsonElement) {"
  },
  {
    "id" : "66d83972-93fe-46eb-92c5-02238e18945a",
    "prId" : 1674,
    "comments" : [
      {
        "id" : "417460d4-e54c-4fcb-abf5-0ece20010718",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "We can revert changes in this file.",
        "createdAt" : "2020-05-01T15:50:48Z",
        "updatedAt" : "2020-05-01T16:10:33Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2d61baa4f3f23f311fc6754cf97d955a84d0ac9b",
    "line" : null,
    "diffHunk" : "@@ -1,11 +1,11 @@\n package scala.meta.internal.metals\n \n-import com.google.gson.Gson"
  }
]