[
  {
    "id" : "44e67464-3d86-4a5a-90ed-e2ce0d63a89b",
    "prId" : 862,
    "comments" : [
      {
        "id" : "6b251325-e9fd-4558-9d63-88032098e7bf",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "`addPackageWorkspaceEdit` -> just `workspaceEdit` should be enough",
        "createdAt" : "2019-08-12T15:50:05Z",
        "updatedAt" : "2019-08-13T18:51:32Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "46ea4c91-f84b-405b-b839-ccc6eb35c799",
        "parentId" : "6b251325-e9fd-4558-9d63-88032098e7bf",
        "author" : {
          "login" : "tdudzik",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/6402694?v=4"
        },
        "body" : "I've chosen that name considering future uses of `PackageProvider`. For example `WorkspaceEdit` for renaming package after file move is going to be a little bit different (I think 2x `\\n` shouldn't be added in that case). Anyway, for the current usage it's not needed so I'll change the name.",
        "createdAt" : "2019-08-12T18:30:07Z",
        "updatedAt" : "2019-08-13T18:51:32Z",
        "lastEditedBy" : {
          "login" : "tdudzik",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/6402694?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "909e79755bb7dc96fad63232599fe13092152914",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,41 @@\n+package scala.meta.internal.metals\n+\n+import org.eclipse.lsp4j.Position\n+import org.eclipse.lsp4j.Range\n+import org.eclipse.lsp4j.TextEdit\n+import org.eclipse.lsp4j.WorkspaceEdit\n+\n+import scala.meta.internal.metals.MetalsEnrichments._\n+import scala.meta.io.AbsolutePath\n+\n+class PackageProvider(private val buildTargets: BuildTargets) {\n+\n+  def addPackageWorkspaceEdit(path: AbsolutePath): Option[WorkspaceEdit] = {"
  },
  {
    "id" : "084c2e04-cf18-429b-a0f8-7652fe286e45",
    "prId" : 862,
    "comments" : [
      {
        "id" : "1b93b4f5-30c5-4b42-931f-0202f887f5b8",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "This can be a private def too, it's weird to have one private and the other local.",
        "createdAt" : "2019-08-12T15:55:57Z",
        "updatedAt" : "2019-08-13T18:51:32Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "909e79755bb7dc96fad63232599fe13092152914",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,41 @@\n+package scala.meta.internal.metals\n+\n+import org.eclipse.lsp4j.Position\n+import org.eclipse.lsp4j.Range\n+import org.eclipse.lsp4j.TextEdit\n+import org.eclipse.lsp4j.WorkspaceEdit\n+\n+import scala.meta.internal.metals.MetalsEnrichments._\n+import scala.meta.io.AbsolutePath\n+\n+class PackageProvider(private val buildTargets: BuildTargets) {\n+\n+  def addPackageWorkspaceEdit(path: AbsolutePath): Option[WorkspaceEdit] = {\n+    def createWorkspaceEdit(packageName: String): WorkspaceEdit = {"
  },
  {
    "id" : "ab9fdf73-8255-4ce6-9bd2-8715c12f7962",
    "prId" : 862,
    "comments" : [
      {
        "id" : "fa86fd70-b5bf-4677-ab89-6c36273b29b8",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "`createPackageName` -> `packageName` - let's loose `create` which doesn't really add value",
        "createdAt" : "2019-08-12T15:57:07Z",
        "updatedAt" : "2019-08-13T18:51:32Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "909e79755bb7dc96fad63232599fe13092152914",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,41 @@\n+package scala.meta.internal.metals\n+\n+import org.eclipse.lsp4j.Position\n+import org.eclipse.lsp4j.Range\n+import org.eclipse.lsp4j.TextEdit\n+import org.eclipse.lsp4j.WorkspaceEdit\n+\n+import scala.meta.internal.metals.MetalsEnrichments._\n+import scala.meta.io.AbsolutePath\n+\n+class PackageProvider(private val buildTargets: BuildTargets) {\n+\n+  def addPackageWorkspaceEdit(path: AbsolutePath): Option[WorkspaceEdit] = {\n+    def createWorkspaceEdit(packageName: String): WorkspaceEdit = {\n+      val textEdit = new TextEdit(\n+        new Range(new Position(0, 0), new Position(0, 0)),\n+        s\"package $packageName\\n\\n\"\n+      )\n+\n+      val textEdits = List(textEdit).asJava\n+      val changes = Map(path.toString -> textEdits).asJava\n+      new WorkspaceEdit(changes)\n+    }\n+\n+    createPackageName(path).map(createWorkspaceEdit)\n+  }\n+\n+  private def createPackageName(path: AbsolutePath): Option[String] = {"
  },
  {
    "id" : "4c5fb3b2-af10-4290-bea5-7b95e97c0c82",
    "prId" : 862,
    "comments" : [
      {
        "id" : "8cec9161-ce4a-4e78-b510-78e8df68fe55",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "why not move it to `path.isEmpty` or `path.isEmptyFile` in extensions?\r\n\r\nAlso, we can extract a part of the condition and get a oneliner:\r\n`if(isEmptyScalaFile(path) && path.filename != \"pacakge.scala\")`",
        "createdAt" : "2019-08-13T19:06:09Z",
        "updatedAt" : "2019-08-13T19:12:20Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a3e085aa-2330-4987-899e-70ff4ac55174",
        "parentId" : "8cec9161-ce4a-4e78-b510-78e8df68fe55",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Might change this in a follow up, but merging now, since everything is green.",
        "createdAt" : "2019-08-13T19:25:31Z",
        "updatedAt" : "2019-08-13T19:25:31Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "909e79755bb7dc96fad63232599fe13092152914",
    "line" : 21,
    "diffHunk" : "@@ -0,0 +1,48 @@\n+package scala.meta.internal.metals\n+\n+import org.eclipse.lsp4j.Position\n+import org.eclipse.lsp4j.Range\n+import org.eclipse.lsp4j.TextEdit\n+import org.eclipse.lsp4j.WorkspaceEdit\n+\n+import scala.meta.internal.metals.MetalsEnrichments._\n+import scala.meta.io.AbsolutePath\n+\n+class PackageProvider(private val buildTargets: BuildTargets) {\n+\n+  def workspaceEdit(path: AbsolutePath): Option[WorkspaceEdit] = {\n+    packageName(path).map(workspaceEdit(path, _))\n+  }\n+\n+  private def packageName(path: AbsolutePath): Option[String] = {\n+    // package.scala file needs to be handled separately\n+    // as its package name is different than package name of normal scala file\n+    if (path.isScala &&\n+      path.toFile.length() == 0 &&"
  },
  {
    "id" : "db661221-a057-49fa-b402-f00baf86ab33",
    "prId" : 862,
    "comments" : [
      {
        "id" : "1b022b32-34f8-4526-9d8f-affe46856712",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "maybe \r\n`map.(_.toString.replace(\"/\", \".\"))`\r\n\r\nthen we don't need the next statement",
        "createdAt" : "2019-08-13T19:08:56Z",
        "updatedAt" : "2019-08-13T19:12:20Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "f9291f86-cf3f-4757-a11e-cb70acc03f10",
        "parentId" : "1b022b32-34f8-4526-9d8f-affe46856712",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "That didn't work on windows - changed.",
        "createdAt" : "2019-08-13T19:22:46Z",
        "updatedAt" : "2019-08-13T19:22:46Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "909e79755bb7dc96fad63232599fe13092152914",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,48 @@\n+package scala.meta.internal.metals\n+\n+import org.eclipse.lsp4j.Position\n+import org.eclipse.lsp4j.Range\n+import org.eclipse.lsp4j.TextEdit\n+import org.eclipse.lsp4j.WorkspaceEdit\n+\n+import scala.meta.internal.metals.MetalsEnrichments._\n+import scala.meta.io.AbsolutePath\n+\n+class PackageProvider(private val buildTargets: BuildTargets) {\n+\n+  def workspaceEdit(path: AbsolutePath): Option[WorkspaceEdit] = {\n+    packageName(path).map(workspaceEdit(path, _))\n+  }\n+\n+  private def packageName(path: AbsolutePath): Option[String] = {\n+    // package.scala file needs to be handled separately\n+    // as its package name is different than package name of normal scala file\n+    if (path.isScala &&\n+      path.toFile.length() == 0 &&\n+      path.filename != \"package.scala\") {\n+      val sourceItem = buildTargets.inverseSourceItem(path)\n+      val relativeDirectory = sourceItem\n+        .map(path.toRelative)\n+        .flatMap(relativePath => Option(relativePath.toNIO.getParent))\n+        .map(_.toString)"
  },
  {
    "id" : "89ec26d7-0ad2-453f-bb52-1544bd5a7e87",
    "prId" : 866,
    "comments" : [
      {
        "id" : "96ca9442-91a2-496e-b94f-f13721370ce6",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "where is the cursor going to be after this? Can we make it land here using template syntax?",
        "createdAt" : "2019-08-13T19:59:19Z",
        "updatedAt" : "2019-08-14T11:10:19Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "58aad9c1-03bc-4520-91d3-d3fdd4b97739",
        "parentId" : "96ca9442-91a2-496e-b94f-f13721370ce6",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "That's only for completion items, doesn't seem to work for WorkspaceApply",
        "createdAt" : "2019-08-14T10:38:45Z",
        "updatedAt" : "2019-08-14T11:10:19Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "0b27389b-87d0-4740-9085-3812a17a558b",
        "parentId" : "96ca9442-91a2-496e-b94f-f13721370ce6",
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Ah, you're right. It's being tracked here https://github.com/Microsoft/language-server-protocol/issues/724\r\n\r\nI'll subscribe to that issue so that we can potentially improve this.",
        "createdAt" : "2019-08-14T12:49:48Z",
        "updatedAt" : "2019-08-14T12:49:48Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "22ddb419e7fd16200d1ce91af23425d793571fb1",
    "line" : null,
    "diffHunk" : "@@ -7,25 +7,43 @@ import org.eclipse.lsp4j.WorkspaceEdit\n \n import scala.meta.internal.metals.MetalsEnrichments._\n import scala.meta.io.AbsolutePath\n+import java.nio.file.Path\n \n class PackageProvider(private val buildTargets: BuildTargets) {\n \n   def workspaceEdit(path: AbsolutePath): Option[WorkspaceEdit] = {\n-    packageName(path).map(workspaceEdit(path, _))\n+    packageStatement(path).map(workspaceEdit(path, _))\n   }\n \n-  private def packageName(path: AbsolutePath): Option[String] = {\n-    // package.scala file needs to be handled separately\n-    // as its package name is different than package name of normal scala file\n-    if (path.isScala &&\n-      path.toFile.length() == 0 &&\n-      path.filename != \"package.scala\") {\n-      val sourceItem = buildTargets.inverseSourceItem(path)\n-      sourceItem\n+  private def packageStatement(path: AbsolutePath): Option[String] = {\n+\n+    def packageObjectStatement(path: Iterator[Path]): Option[String] = {\n+      val pathList = path.toList\n+      val packageDeclaration =\n+        if (pathList.size > 1)\n+          s\"package ${pathList.dropRight(1).mkString(\".\")}\\n\"\n+        else \"\"\n+      pathList.lastOption.map { packageObjectName =>\n+        s\"\"\"|${packageDeclaration}package object $packageObjectName{\n+            |"
  },
  {
    "id" : "43a31e9c-3561-4a52-ae74-e12113ae4dd4",
    "prId" : 866,
    "comments" : [
      {
        "id" : "bd69a450-d82a-4344-8cef-4833f7cb534a",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "```suggestion\r\n        s\"\"\"|${packageDeclaration}package object $packageObjectName {\r\n```",
        "createdAt" : "2019-08-13T19:59:35Z",
        "updatedAt" : "2019-08-14T11:10:19Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "dbf8b768-acf7-413c-90fd-ae6e68e8d676",
        "parentId" : "bd69a450-d82a-4344-8cef-4833f7cb534a",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Fixed",
        "createdAt" : "2019-08-14T11:32:30Z",
        "updatedAt" : "2019-08-14T11:32:30Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "22ddb419e7fd16200d1ce91af23425d793571fb1",
    "line" : null,
    "diffHunk" : "@@ -7,25 +7,43 @@ import org.eclipse.lsp4j.WorkspaceEdit\n \n import scala.meta.internal.metals.MetalsEnrichments._\n import scala.meta.io.AbsolutePath\n+import java.nio.file.Path\n \n class PackageProvider(private val buildTargets: BuildTargets) {\n \n   def workspaceEdit(path: AbsolutePath): Option[WorkspaceEdit] = {\n-    packageName(path).map(workspaceEdit(path, _))\n+    packageStatement(path).map(workspaceEdit(path, _))\n   }\n \n-  private def packageName(path: AbsolutePath): Option[String] = {\n-    // package.scala file needs to be handled separately\n-    // as its package name is different than package name of normal scala file\n-    if (path.isScala &&\n-      path.toFile.length() == 0 &&\n-      path.filename != \"package.scala\") {\n-      val sourceItem = buildTargets.inverseSourceItem(path)\n-      sourceItem\n+  private def packageStatement(path: AbsolutePath): Option[String] = {\n+\n+    def packageObjectStatement(path: Iterator[Path]): Option[String] = {\n+      val pathList = path.toList\n+      val packageDeclaration =\n+        if (pathList.size > 1)\n+          s\"package ${pathList.dropRight(1).mkString(\".\")}\\n\"\n+        else \"\"\n+      pathList.lastOption.map { packageObjectName =>\n+        s\"\"\"|${packageDeclaration}package object $packageObjectName{"
  },
  {
    "id" : "8b504a78-9301-47d5-9709-5d587c256514",
    "prId" : 866,
    "comments" : [
      {
        "id" : "344e2abf-cca9-4490-bbdf-55708b3810c5",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "Isn't there usually a newline in between the `package` and the `package object`. I mean something like\r\n\r\n```scala\r\npackage a.b\r\n\r\npackage object c {\r\n\r\n}\r\n```",
        "createdAt" : "2019-08-13T20:01:20Z",
        "updatedAt" : "2019-08-14T11:10:19Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "980dae47-0d68-4b38-b2ea-4d9a4cdf6d6a",
        "parentId" : "344e2abf-cca9-4490-bbdf-55708b3810c5",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Fixed",
        "createdAt" : "2019-08-14T11:32:22Z",
        "updatedAt" : "2019-08-14T11:32:22Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "22ddb419e7fd16200d1ce91af23425d793571fb1",
    "line" : null,
    "diffHunk" : "@@ -7,25 +7,43 @@ import org.eclipse.lsp4j.WorkspaceEdit\n \n import scala.meta.internal.metals.MetalsEnrichments._\n import scala.meta.io.AbsolutePath\n+import java.nio.file.Path\n \n class PackageProvider(private val buildTargets: BuildTargets) {\n \n   def workspaceEdit(path: AbsolutePath): Option[WorkspaceEdit] = {\n-    packageName(path).map(workspaceEdit(path, _))\n+    packageStatement(path).map(workspaceEdit(path, _))\n   }\n \n-  private def packageName(path: AbsolutePath): Option[String] = {\n-    // package.scala file needs to be handled separately\n-    // as its package name is different than package name of normal scala file\n-    if (path.isScala &&\n-      path.toFile.length() == 0 &&\n-      path.filename != \"package.scala\") {\n-      val sourceItem = buildTargets.inverseSourceItem(path)\n-      sourceItem\n+  private def packageStatement(path: AbsolutePath): Option[String] = {\n+\n+    def packageObjectStatement(path: Iterator[Path]): Option[String] = {\n+      val pathList = path.toList\n+      val packageDeclaration =\n+        if (pathList.size > 1)\n+          s\"package ${pathList.dropRight(1).mkString(\".\")}\\n\"\n+        else \"\"\n+      pathList.lastOption.map { packageObjectName =>\n+        s\"\"\"|${packageDeclaration}package object $packageObjectName{"
  }
]