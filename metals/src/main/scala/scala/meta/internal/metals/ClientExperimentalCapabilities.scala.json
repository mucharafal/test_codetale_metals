[
  {
    "id" : "81af1c1a-9e5a-4e86-941a-088eb24525e0",
    "prId" : 1674,
    "comments" : [
      {
        "id" : "088447b0-65ab-49b5-a240-fd737cc0ebf7",
        "parentId" : null,
        "author" : {
          "login" : "ayoub-benali",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1632384?u=ac40fd778feded69bd8ab05c77d83d3e469ff7ab&v=4"
        },
        "body" : "I believe defaults `None` is better semantically to match the `null` from Gson, this way in `ClientConfiguration` we can better merge values, especially the none Boolean ones",
        "createdAt" : "2020-04-29T11:15:31Z",
        "updatedAt" : "2020-05-01T16:10:33Z",
        "lastEditedBy" : {
          "login" : "ayoub-benali",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1632384?u=ac40fd778feded69bd8ab05c77d83d3e469ff7ab&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "ae95f89a-364d-4b52-a218-0d9a594d89f0",
        "parentId" : "088447b0-65ab-49b5-a240-fd737cc0ebf7",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Ahh good point. I'll change this... if I can actually get the `null`s to be turned into `None`s...",
        "createdAt" : "2020-04-29T11:41:20Z",
        "updatedAt" : "2020-05-01T16:10:33Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2d61baa4f3f23f311fc6754cf97d955a84d0ac9b",
    "line" : null,
    "diffHunk" : "@@ -4,37 +4,45 @@ import org.eclipse.{lsp4j => l}\n import com.google.gson.JsonNull\n \n final case class ClientExperimentalCapabilities(\n-    debuggingProvider: java.lang.Boolean = false,\n-    treeViewProvider: java.lang.Boolean = false,\n-    decorationProvider: java.lang.Boolean = false,\n-    inputBoxProvider: java.lang.Boolean = false,\n-    quickPickProvider: java.lang.Boolean = false,\n-    didFocusProvider: java.lang.Boolean = false,\n-    slowTaskProvider: java.lang.Boolean = false,\n-    executeClientCommandProvider: java.lang.Boolean = false,\n-    openFilesOnRenameProvider: java.lang.Boolean = false,\n-    doctorProvider: String = \"html\",\n-    statusBarProvider: String = \"off\"\n+    debuggingProvider: Option[Boolean] = Some(false),"
  },
  {
    "id" : "4edc2fc5-d6a9-46f6-8f77-ee320af9cf37",
    "prId" : 1674,
    "comments" : [
      {
        "id" : "17c7fc61-f06f-4f66-9d14-b31d4367e6b5",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "they are all false so not hard to recognize what is what, but could we name them? decorationProvider = false , etc",
        "createdAt" : "2020-05-01T12:23:36Z",
        "updatedAt" : "2020-05-01T16:10:33Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "b24947db-c812-4506-85f6-0bee9976b884",
        "parentId" : "17c7fc61-f06f-4f66-9d14-b31d4367e6b5",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Ah totally. I meant to do this and forgot 👍 ",
        "createdAt" : "2020-05-01T12:29:35Z",
        "updatedAt" : "2020-05-01T16:10:33Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "2d61baa4f3f23f311fc6754cf97d955a84d0ac9b",
    "line" : null,
    "diffHunk" : "@@ -3,18 +3,23 @@ import com.google.gson.JsonElement\n import org.eclipse.{lsp4j => l}\n \n final case class ClientExperimentalCapabilities(\n-    debuggingProvider: java.lang.Boolean = false,\n-    treeViewProvider: java.lang.Boolean = false,\n-    decorationProvider: java.lang.Boolean = false,\n-    inputBoxProvider: java.lang.Boolean = false,\n-    quickPickProvider: java.lang.Boolean = false,\n-    didFocusProvider: java.lang.Boolean = false,\n-    slowTaskProvider: java.lang.Boolean = false,\n-    executeClientCommandProvider: java.lang.Boolean = false,\n-    openFilesOnRenameProvider: java.lang.Boolean = false,\n-    doctorProvider: String = \"html\",\n-    statusBarProvider: String = \"off\"\n+    debuggingProvider: Boolean,\n+    decorationProvider: Boolean,\n+    didFocusProvider: Boolean,\n+    doctorProvider: String,\n+    executeClientCommandProvider: Boolean,\n+    inputBoxProvider: Boolean,\n+    openFilesOnRenameProvider: Boolean,\n+    quickPickProvider: Boolean,\n+    slowTaskProvider: Boolean,\n+    statusBarProvider: String,\n+    treeViewProvider: Boolean\n ) {\n+  def this() =\n+    this(\n+      false, false, false, \"html\", false, false, false, false, false, \"off\","
  },
  {
    "id" : "c558da33-99a4-49f2-9ca0-db7cd0baafd1",
    "prId" : 1898,
    "comments" : [
      {
        "id" : "45fd25cf-723f-4d31-883a-55575f364bba",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "if we had 'Option[Boolean]' here we could use `extract` in `ClientConfiguration.statusBarIsOn`\r\n\r\nbecause right now `statusBarIsShowMessage == true` AND `statusBarIsLogMessage == true` is possible if you set one in experimental capabilities and second in initialization options\r\n:thinking: \r\n\r\n",
        "createdAt" : "2020-07-10T11:17:20Z",
        "updatedAt" : "2020-07-10T20:39:59Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "69c424ff-ffcd-4883-a79c-06f826076bfa",
        "parentId" : "45fd25cf-723f-4d31-883a-55575f364bba",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "> if we had `Option[Boolean]` here we could use extract in ClientConfiguration.statusBarIsOn\r\n\r\nWell the tricky thing is that it's not a binary decision right? It can be on, off, show message, or log message. So that can't really be represented this way right? So I'm unsure how to do that.\r\n\r\n> because right now statusBarIsShowMessage == true AND statusBarIsLogMessage == true is possible if you set one in experimental capabilities and second in initialization options\r\n\r\nSort of? I guess a client could set `statusBarProvider = \"on\"` in `InitializationOptions` and then `statusBarProvider = \"log-message\"` in `ClientExperimentalCapabilities`, but I _believe_ all of the checks would check of `statusBarIsOn` all of the time, which would always cause that one to win. Ideally, we are allowing illegal states to be represented by allowing for them to be set in both places. I sort of wish that we could remove the `ClientExperimentalCapabilities` since they can all be set via `InitializationOptions`. Is that allowed? If you think it's fine to potentially break a client that is being set that way, then I'm totally ok with removing them. I think if we are explicit and up front about this happening, then maybe we can? In reality, these are marked \"experimental\", which implies that they won't always be here.",
        "createdAt" : "2020-07-10T11:56:04Z",
        "updatedAt" : "2020-07-10T20:39:59Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "1eb73227-e4e9-471c-bdc2-09527c709b45",
        "parentId" : "45fd25cf-723f-4d31-883a-55575f364bba",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Alright, thanks for explaining this. After you showed me I got what you meant 😆 These changes are now in this branch.",
        "createdAt" : "2020-07-10T14:44:06Z",
        "updatedAt" : "2020-07-10T20:39:59Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a09c54df4983c2390e8b249633004d3433d16915",
    "line" : null,
    "diffHunk" : "@@ -1,58 +1,87 @@\n package scala.meta.internal.metals\n-import com.google.gson.JsonElement\n-import com.google.gson.JsonNull\n+import com.google.gson.JsonObject\n import org.eclipse.{lsp4j => l}\n \n+/**\n+ * While all these values can be set here, they are here only for\n+ * compatablity with clients that were setting them this way. From\n+ * a client perspective it's preferable and recommended to use\n+ * InitializationOptions instead. From a development perspective\n+ * don't add something here unless it's truly a more \"experimental\"\n+ * type feature.\n+ */\n final case class ClientExperimentalCapabilities(\n-    debuggingProvider: Boolean,\n-    decorationProvider: Boolean,\n-    didFocusProvider: Boolean,\n-    doctorProvider: String,\n-    executeClientCommandProvider: Boolean,\n-    inputBoxProvider: Boolean,\n-    openFilesOnRenameProvider: Boolean,\n-    quickPickProvider: Boolean,\n-    slowTaskProvider: Boolean,\n-    statusBarProvider: String,\n-    treeViewProvider: Boolean\n+    debuggingProvider: Option[Boolean],\n+    decorationProvider: Option[Boolean],\n+    didFocusProvider: Option[Boolean],\n+    doctorProvider: Option[String],\n+    executeClientCommandProvider: Option[Boolean],\n+    inputBoxProvider: Option[Boolean],\n+    openFilesOnRenameProvider: Option[Boolean],\n+    quickPickProvider: Option[Boolean],\n+    slowTaskProvider: Option[Boolean],\n+    statusBarProvider: Option[String],\n+    treeViewProvider: Option[Boolean]\n ) {\n-  def this() =\n-    this(\n-      debuggingProvider = false,\n-      decorationProvider = false,\n-      didFocusProvider = false,\n-      doctorProvider = \"html\",\n-      executeClientCommandProvider = false,\n-      inputBoxProvider = false,\n-      openFilesOnRenameProvider = false,\n-      quickPickProvider = false,\n-      slowTaskProvider = false,\n-      statusBarProvider = \"off\",\n-      treeViewProvider = false\n-    )\n-  def doctorFormatIsJson: Boolean = doctorProvider == \"json\"\n-  def statusBarIsOn: Boolean = statusBarProvider == \"on\"\n-  def statusBarIsOff: Boolean = statusBarProvider == \"off\"\n-  def statusBarIsShowMessage: Boolean = statusBarProvider == \"show-message\"\n-  def statusBarIsLogMessage: Boolean = statusBarProvider == \"log-message\"\n+  def doctorFormatIsJson: Boolean = doctorProvider.exists(_ == \"json\")\n+  def statusBarIsOn: Boolean = statusBarProvider.exists(_ == \"on\")"
  },
  {
    "id" : "296357cb-d191-42a3-a266-f941922c2cb6",
    "prId" : 1898,
    "comments" : [
      {
        "id" : "0f2b8481-3e63-45aa-b6c4-90091528a875",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "we are doing && in ClientConfiguration for this configuration but || for all others. does that mean it must be set in all 3 places to be off?",
        "createdAt" : "2020-07-10T11:18:24Z",
        "updatedAt" : "2020-07-10T20:39:59Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "96a1f47a-dd35-41a9-916b-f53726573747",
        "parentId" : "0f2b8481-3e63-45aa-b6c4-90091528a875",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Ah, good catch. This is left over from how the logic used to be. Basically \"off\" was the default, so the reason this was `&&` for this was to ensure that none of them were changed before. Now this can actually be set to `||` since `ClientExperimentalCapabilities` and `InitializationOptions` are no longer defaulting to \"off\", but rather `None`. I'll change this.",
        "createdAt" : "2020-07-10T11:59:01Z",
        "updatedAt" : "2020-07-10T20:39:59Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a09c54df4983c2390e8b249633004d3433d16915",
    "line" : null,
    "diffHunk" : "@@ -1,58 +1,87 @@\n package scala.meta.internal.metals\n-import com.google.gson.JsonElement\n-import com.google.gson.JsonNull\n+import com.google.gson.JsonObject\n import org.eclipse.{lsp4j => l}\n \n+/**\n+ * While all these values can be set here, they are here only for\n+ * compatablity with clients that were setting them this way. From\n+ * a client perspective it's preferable and recommended to use\n+ * InitializationOptions instead. From a development perspective\n+ * don't add something here unless it's truly a more \"experimental\"\n+ * type feature.\n+ */\n final case class ClientExperimentalCapabilities(\n-    debuggingProvider: Boolean,\n-    decorationProvider: Boolean,\n-    didFocusProvider: Boolean,\n-    doctorProvider: String,\n-    executeClientCommandProvider: Boolean,\n-    inputBoxProvider: Boolean,\n-    openFilesOnRenameProvider: Boolean,\n-    quickPickProvider: Boolean,\n-    slowTaskProvider: Boolean,\n-    statusBarProvider: String,\n-    treeViewProvider: Boolean\n+    debuggingProvider: Option[Boolean],\n+    decorationProvider: Option[Boolean],\n+    didFocusProvider: Option[Boolean],\n+    doctorProvider: Option[String],\n+    executeClientCommandProvider: Option[Boolean],\n+    inputBoxProvider: Option[Boolean],\n+    openFilesOnRenameProvider: Option[Boolean],\n+    quickPickProvider: Option[Boolean],\n+    slowTaskProvider: Option[Boolean],\n+    statusBarProvider: Option[String],\n+    treeViewProvider: Option[Boolean]\n ) {\n-  def this() =\n-    this(\n-      debuggingProvider = false,\n-      decorationProvider = false,\n-      didFocusProvider = false,\n-      doctorProvider = \"html\",\n-      executeClientCommandProvider = false,\n-      inputBoxProvider = false,\n-      openFilesOnRenameProvider = false,\n-      quickPickProvider = false,\n-      slowTaskProvider = false,\n-      statusBarProvider = \"off\",\n-      treeViewProvider = false\n-    )\n-  def doctorFormatIsJson: Boolean = doctorProvider == \"json\"\n-  def statusBarIsOn: Boolean = statusBarProvider == \"on\"\n-  def statusBarIsOff: Boolean = statusBarProvider == \"off\"\n-  def statusBarIsShowMessage: Boolean = statusBarProvider == \"show-message\"\n-  def statusBarIsLogMessage: Boolean = statusBarProvider == \"log-message\"\n+  def doctorFormatIsJson: Boolean = doctorProvider.exists(_ == \"json\")\n+  def statusBarIsOn: Boolean = statusBarProvider.exists(_ == \"on\")\n+  def statusBarIsOff: Boolean = statusBarProvider.exists(_ == \"off\")"
  },
  {
    "id" : "579e5f07-fa84-4479-a5aa-ded807c66143",
    "prId" : 1898,
    "comments" : [
      {
        "id" : "611c5347-1ea8-4bb7-8d20-eddff3890ff5",
        "parentId" : null,
        "author" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "body" : "https://github.com/scalameta/metals/blob/48b20201f3357738ce472c40dcae47b0cccc56fb/docs/editors/new-editor.md\r\n\r\nHere we say `statusBarProvider` is Boolean :thinking: ",
        "createdAt" : "2020-07-10T11:22:28Z",
        "updatedAt" : "2020-07-10T20:39:59Z",
        "lastEditedBy" : {
          "login" : "kpbochenek",
          "name" : null,
          "avatarUrl" : "https://avatars2.githubusercontent.com/u/10478402?u=7a7840d3f5ce4047a19639e6b7977d43e3557158&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "5bd2a992-47cf-47f9-ae3d-7600a421e3d0",
        "parentId" : "611c5347-1ea8-4bb7-8d20-eddff3890ff5",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "🤔 that's a mistake in the docs then. Good catch. I'll change this there.",
        "createdAt" : "2020-07-10T12:01:52Z",
        "updatedAt" : "2020-07-10T20:39:59Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "c2340496-be7f-4fa0-b5a7-59a1a6245c55",
        "parentId" : "611c5347-1ea8-4bb7-8d20-eddff3890ff5",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Updated this.",
        "createdAt" : "2020-07-10T14:42:48Z",
        "updatedAt" : "2020-07-10T20:39:59Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "e98c4e93-d68e-4dd8-a8b8-2c70eb25d36c",
        "parentId" : "611c5347-1ea8-4bb7-8d20-eddff3890ff5",
        "author" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "body" : "Changed.",
        "createdAt" : "2020-07-10T14:44:21Z",
        "updatedAt" : "2020-07-10T20:39:59Z",
        "lastEditedBy" : {
          "login" : "ckipp01",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/13974112?u=7b6a2ddab8eec6f99e4e40ae9b81f71cb5ba92e5&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "a09c54df4983c2390e8b249633004d3433d16915",
    "line" : 36,
    "diffHunk" : "@@ -1,58 +1,87 @@\n package scala.meta.internal.metals\n-import com.google.gson.JsonElement\n-import com.google.gson.JsonNull\n+import com.google.gson.JsonObject\n import org.eclipse.{lsp4j => l}\n \n+/**\n+ * While all these values can be set here, they are here only for\n+ * compatablity with clients that were setting them this way. From\n+ * a client perspective it's preferable and recommended to use\n+ * InitializationOptions instead. From a development perspective\n+ * don't add something here unless it's truly a more \"experimental\"\n+ * type feature.\n+ */\n final case class ClientExperimentalCapabilities(\n-    debuggingProvider: Boolean,\n-    decorationProvider: Boolean,\n-    didFocusProvider: Boolean,\n-    doctorProvider: String,\n-    executeClientCommandProvider: Boolean,\n-    inputBoxProvider: Boolean,\n-    openFilesOnRenameProvider: Boolean,\n-    quickPickProvider: Boolean,\n-    slowTaskProvider: Boolean,\n-    statusBarProvider: String,\n-    treeViewProvider: Boolean\n+    debuggingProvider: Option[Boolean],\n+    decorationProvider: Option[Boolean],\n+    didFocusProvider: Option[Boolean],\n+    doctorProvider: Option[String],\n+    executeClientCommandProvider: Option[Boolean],\n+    inputBoxProvider: Option[Boolean],\n+    openFilesOnRenameProvider: Option[Boolean],\n+    quickPickProvider: Option[Boolean],\n+    slowTaskProvider: Option[Boolean],\n+    statusBarProvider: Option[String],"
  }
]