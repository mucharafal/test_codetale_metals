[
  {
    "id" : "e8a65cc5-568b-4d84-ac6e-af50da980e15",
    "prId" : 1163,
    "comments" : [
      {
        "id" : "9e6ef440-7294-4251-b814-355b26c1f6ac",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Does it work inside annonymous classes?",
        "createdAt" : "2019-12-16T11:32:33Z",
        "updatedAt" : "2019-12-18T11:36:11Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "a1197c0d-6d48-4219-9725-a734e188acc0",
        "parentId" : "9e6ef440-7294-4251-b814-355b26c1f6ac",
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "Added a test case for that",
        "createdAt" : "2019-12-17T09:15:03Z",
        "updatedAt" : "2019-12-18T11:36:11Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "04ef30f47759c2620cd886265e4c50169245a539",
    "line" : 29,
    "diffHunk" : "@@ -0,0 +1,36 @@\n+package scala.meta.internal.metals\n+import scala.annotation.tailrec\n+import scala.meta.internal.semanticdb.Scala.Symbols\n+import scala.meta.internal.semanticdb.Scala._\n+import scala.meta.internal.semanticdb.SymbolOccurrence\n+\n+object JvmSignatures {\n+  private val shouldIgnore = Set(Symbols.RootPackage, Symbols.EmptyPackage)\n+\n+  def toTypeSignature(definition: SymbolOccurrence): TypeSignature = {\n+    @tailrec\n+    def loop(owners: List[String], fqcn: StringBuilder): String = {\n+      owners match {\n+        case Nil => fqcn.toString()\n+        case symbol :: tail if shouldIgnore(symbol) =>\n+          loop(tail, fqcn)\n+        case symbol :: tail =>\n+          val desc = symbol.desc\n+          fqcn.append(desc.name)\n+\n+          val delimiter =\n+            if (desc.isPackage) \".\"\n+            else if (desc.isTerm) \"$\"\n+            else if (tail.nonEmpty) \"$\" // nested class\n+            else \"\"\n+          loop(tail, fqcn.append(delimiter))\n+      }\n+    }\n+    val fqcn = loop(definition.symbol.ownerChain, new StringBuilder)"
  },
  {
    "id" : "c60ce1f7-5ec9-4768-a369-028e70cdb243",
    "prId" : 1783,
    "comments" : [
      {
        "id" : "8bb33a54-1ad2-40bd-9122-50cc640ebabe",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "We also take methods into account now, which in case of java files will mean that the breakpoints will work properly even with an inner class.",
        "createdAt" : "2020-05-28T15:26:18Z",
        "updatedAt" : "2020-06-02T20:02:03Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "354a7590e2040752863a8b6566562324bc6d9483",
    "line" : 10,
    "diffHunk" : "@@ -27,10 +27,20 @@ object JvmSignatures {\n           loop(tail, fqcn.append(delimiter))\n       }\n     }\n-    val fqcn = loop(definition.symbol.ownerChain, new StringBuilder)\n+    val cls = findClass(definition.symbol)\n+    val fqcn = loop(cls.ownerChain, new StringBuilder)\n     TypeSignature(fqcn)\n   }\n \n+  private def findClass(symbol: String): String = {"
  }
]