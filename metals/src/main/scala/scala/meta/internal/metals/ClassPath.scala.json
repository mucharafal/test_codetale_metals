[
  {
    "id" : "197a32a2-21cc-4a3a-baac-8fe047dd229f",
    "prId" : 1163,
    "comments" : [
      {
        "id" : "a1e7ec73-a226-4d77-ba3b-6210fad7b46b",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Can we give this a more specific name? For example: `TypeSignature.scala` with `TypeSignature.fromSymbolOccurrence`. There is already a `scala.meta.io.Classpath`, which is a wrapper around a JVM classpath such as `a.jar:/user/b/classes`",
        "createdAt" : "2019-12-15T11:27:10Z",
        "updatedAt" : "2019-12-18T11:36:11Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "2ba39972-e1a3-4afd-b8cc-6104dc024dd8",
        "parentId" : "a1e7ec73-a226-4d77-ba3b-6210fad7b46b",
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "You are right, let's avoid the confusion. Also, Classpath doesn't reflect the intention behind this object very well. In the end, I went with `JvmSignatures` to distinguish it from other signature kinds (for example semanticdb signatures)",
        "createdAt" : "2019-12-16T07:53:01Z",
        "updatedAt" : "2019-12-18T11:36:11Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "04ef30f47759c2620cd886265e4c50169245a539",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,35 @@\n+package scala.meta.internal.metals\n+import scala.meta.internal.semanticdb.SymbolOccurrence\n+\n+object ClassPath {"
  },
  {
    "id" : "9b5ee3c1-75c4-4f5d-b7cf-6a3606e3cab7",
    "prId" : 1163,
    "comments" : [
      {
        "id" : "4bd52592-bd20-45a7-ae07-513cb33b2d56",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Did you measure that allocations from this class were causing problems? If not, let's remove `AnyVal`\r\n```suggestion\r\n  final case class TypeSignature(value: String)\r\n```",
        "createdAt" : "2019-12-15T11:27:48Z",
        "updatedAt" : "2019-12-18T11:36:11Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "04ef30f47759c2620cd886265e4c50169245a539",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,35 @@\n+package scala.meta.internal.metals\n+import scala.meta.internal.semanticdb.SymbolOccurrence\n+\n+object ClassPath {\n+  final case class TypeSignature(value: String) extends AnyVal"
  },
  {
    "id" : "a25c7a3c-0923-4380-911d-2b907860fc28",
    "prId" : 1163,
    "comments" : [
      {
        "id" : "6b645602-e407-435c-81f3-a3de89868093",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "What about the case when `owner == Symbols.None`? ",
        "createdAt" : "2019-12-15T11:30:10Z",
        "updatedAt" : "2019-12-18T11:36:11Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "43776d97-3421-484a-b626-9c7fee7b6ccd",
        "parentId" : "6b645602-e407-435c-81f3-a3de89868093",
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "With your next suggestion (`ownerChain`) it should be covered ",
        "createdAt" : "2019-12-16T08:19:31Z",
        "updatedAt" : "2019-12-18T11:36:11Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "04ef30f47759c2620cd886265e4c50169245a539",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,35 @@\n+package scala.meta.internal.metals\n+import scala.meta.internal.semanticdb.SymbolOccurrence\n+\n+object ClassPath {\n+  final case class TypeSignature(value: String) extends AnyVal\n+\n+  def toTypeSignature(definition: SymbolOccurrence): TypeSignature = {\n+    import scala.meta.internal.semanticdb.Scala._\n+    @scala.annotation.tailrec\n+    def qualifier(symbol: String, acc: List[String]): String = {\n+      val owner = symbol.owner\n+      if (owner == Symbols.RootPackage || owner == Symbols.EmptyPackage) {"
  },
  {
    "id" : "7f3d10c4-dd20-46b0-b067-4d1fb3dfb5f1",
    "prId" : 1163,
    "comments" : [
      {
        "id" : "a33324dc-6f31-4a11-be12-a1b5b0026485",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Did you try using `ownerChain`? It's easy to end in infinite recursion when walking up owner chains\r\n\r\n```\r\n      import scala.meta.internal.semanticdb.Scala._\r\n      \"a/b/c#\".ownerChain.map(_.desc.value)\r\nres0: List[String] = List(\"_root_\", \"a\", \"b\", \"c\")\r\n\r\n```",
        "createdAt" : "2019-12-15T11:31:21Z",
        "updatedAt" : "2019-12-18T11:36:11Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "126da500-6244-4119-a991-5d82055f5350",
        "parentId" : "a33324dc-6f31-4a11-be12-a1b5b0026485",
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "Thanks, I didn't know the method!",
        "createdAt" : "2019-12-16T08:19:06Z",
        "updatedAt" : "2019-12-18T11:36:11Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "04ef30f47759c2620cd886265e4c50169245a539",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,35 @@\n+package scala.meta.internal.metals\n+import scala.meta.internal.semanticdb.SymbolOccurrence\n+\n+object ClassPath {\n+  final case class TypeSignature(value: String) extends AnyVal\n+\n+  def toTypeSignature(definition: SymbolOccurrence): TypeSignature = {\n+    import scala.meta.internal.semanticdb.Scala._\n+    @scala.annotation.tailrec\n+    def qualifier(symbol: String, acc: List[String]): String = {"
  }
]