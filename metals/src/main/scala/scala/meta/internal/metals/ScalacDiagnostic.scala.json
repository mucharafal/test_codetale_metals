[
  {
    "id" : "8b980589-44a8-4708-9f5d-f6e4ad3555cd",
    "prId" : 1379,
    "comments" : [
      {
        "id" : "32219228-e306-4876-847f-95595f158524",
        "parentId" : null,
        "author" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "body" : "nit: this could be (for consistency)\r\n\r\n```scala\r\nprivate val regex = \"\"\".*needs to be abstract.*\"\"\".r\r\ndef unapply(d: l.Diagnostic): Option[String] = d.getMessage() match {\r\n  case regex() => Some(d.getMessage())\r\n  case _ => None\r\n}\r\n```",
        "createdAt" : "2020-02-10T15:46:48Z",
        "updatedAt" : "2020-02-11T11:11:05Z",
        "lastEditedBy" : {
          "login" : "gabro",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/691940?u=5aaf176f5da60764f857b8f8c6842217f737627f&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "c3101e13-5973-47e9-b06d-3327d7e0e0ab",
        "parentId" : "32219228-e306-4876-847f-95595f158524",
        "author" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "body" : "done https://github.com/scalameta/metals/pull/1379/commits/15d8e1feba9aed6cce18d9f6b74382f464b8be1e 👍 \r\n\r\nAdded `(?s)` to enable `.` to capture newline characters (because the diagnostic usually have multiple lines).\r\nhttps://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html#DOTALL",
        "createdAt" : "2020-02-11T07:16:25Z",
        "updatedAt" : "2020-02-11T11:11:05Z",
        "lastEditedBy" : {
          "login" : "tanishiking",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/9353584?u=c3e5aba60a43901e7d2b7c0ea4caac06cde77049&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e100253dce0a50a1201510f9bec11fbe8f298bbb",
    "line" : null,
    "diffHunk" : "@@ -3,11 +3,30 @@ package scala.meta.internal.metals\n import org.eclipse.{lsp4j => l}\n \n object ScalacDiagnostic {\n+\n   object SymbolNotFound {\n     private val regex = \"\"\"not found: (value|type) (\\w+)\"\"\".r\n     def unapply(d: l.Diagnostic): Option[String] = d.getMessage() match {\n       case regex(_, name) => Some(name)\n       case _ => None\n     }\n   }\n+  object MissingImplementation {\n+    // https://github.com/scala/scala/blob/4c0f49c7de6ba48f2b0ae59e64ea94fabd82b4a7/src/compiler/scala/tools/nsc/typechecker/RefChecks.scala#L566\n+    private val regex = \"\"\"needs to be abstract\"\"\".r\n+    def unapply(d: l.Diagnostic): Option[String] =\n+      regex.findFirstMatchIn(d.getMessage()) match {\n+        case Some(_) => Some(d.getMessage())\n+        case _ => None\n+      }"
  }
]