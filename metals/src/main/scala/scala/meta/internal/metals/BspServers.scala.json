[
  {
    "id" : "3ef467da-9622-413b-a439-2615e08dc68b",
    "prId" : 1266,
    "comments" : [
      {
        "id" : "6a4c30df-81b0-4b5e-8db8-a8638a1dc252",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "creating connection cannot fail?",
        "createdAt" : "2020-01-09T10:14:39Z",
        "updatedAt" : "2020-01-09T19:41:06Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "116edb0b-f275-48a7-b612-b84abd1761fb",
        "parentId" : "6a4c30df-81b0-4b5e-8db8-a8638a1dc252",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "It's just creating a case class.",
        "createdAt" : "2020-01-09T12:17:15Z",
        "updatedAt" : "2020-01-09T19:41:06Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "0f92bf439ec2e556ef2dd37eb204d08963b7f24b",
    "line" : 46,
    "diffHunk" : "@@ -50,29 +54,40 @@ final class BspServers(\n \n   private def newServer(\n       details: BspConnectionDetails\n-  ): BuildServerConnection = {\n-    val process = new ProcessBuilder(details.getArgv)\n-      .directory(workspace.toFile)\n-      .start()\n-\n-    val output = new QuietOutputStream(\n-      process.getOutputStream,\n-      s\"${details.getName} output stream\"\n-    )\n-    val input = new QuietInputStream(\n-      process.getInputStream,\n-      s\"${details.getName} input stream\"\n-    )\n+  ): Future[BuildServerConnection] = {\n+\n+    def newProcess(): Future[SocketConnection] = {\n+      val process = new ProcessBuilder(details.getArgv)\n+        .directory(workspace.toFile)\n+        .start()\n+\n+      val output = new ClosableOutputStream(\n+        process.getOutputStream,\n+        s\"${details.getName} output stream\"\n+      )\n+      val input = new QuietInputStream(\n+        process.getInputStream,\n+        s\"${details.getName} input stream\"\n+      )\n+\n+      Future.successful {"
  },
  {
    "id" : "702423cd-6ed3-4fa0-91d0-0f8531c88c13",
    "prId" : 1266,
    "comments" : [
      {
        "id" : "7fc5d0ff-37d1-4433-916a-d9d8ef5a86df",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "maybe `newConnection` or `connect` ? from the outside, we don't see a process at all but only a socket connection",
        "createdAt" : "2020-01-09T10:16:02Z",
        "updatedAt" : "2020-01-09T19:41:06Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "4e076329-2478-48ef-aed0-f88ff2207900",
        "parentId" : "7fc5d0ff-37d1-4433-916a-d9d8ef5a86df",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Renamed",
        "createdAt" : "2020-01-09T19:32:46Z",
        "updatedAt" : "2020-01-09T19:41:06Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0f92bf439ec2e556ef2dd37eb204d08963b7f24b",
    "line" : null,
    "diffHunk" : "@@ -50,29 +54,40 @@ final class BspServers(\n \n   private def newServer(\n       details: BspConnectionDetails\n-  ): BuildServerConnection = {\n-    val process = new ProcessBuilder(details.getArgv)\n-      .directory(workspace.toFile)\n-      .start()\n-\n-    val output = new QuietOutputStream(\n-      process.getOutputStream,\n-      s\"${details.getName} output stream\"\n-    )\n-    val input = new QuietInputStream(\n-      process.getInputStream,\n-      s\"${details.getName} input stream\"\n-    )\n+  ): Future[BuildServerConnection] = {\n+\n+    def newProcess(): Future[SocketConnection] = {"
  },
  {
    "id" : "610f11dc-b865-46e0-865a-95d66517f332",
    "prId" : 1266,
    "comments" : [
      {
        "id" : "fa97b4bd-a5ee-4d64-a2ac-0956366723f2",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "doesn't seem like from **streams** anymore, maybe rename to `fromSocket` ?",
        "createdAt" : "2020-01-09T10:16:51Z",
        "updatedAt" : "2020-01-09T19:41:06Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "57b203e2-d23b-482b-bb8b-79f23d2e248b",
        "parentId" : "fa97b4bd-a5ee-4d64-a2ac-0956366723f2",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Renamed",
        "createdAt" : "2020-01-09T19:32:39Z",
        "updatedAt" : "2020-01-09T19:41:06Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "0f92bf439ec2e556ef2dd37eb204d08963b7f24b",
    "line" : null,
    "diffHunk" : "@@ -50,29 +54,40 @@ final class BspServers(\n \n   private def newServer(\n       details: BspConnectionDetails\n-  ): BuildServerConnection = {\n-    val process = new ProcessBuilder(details.getArgv)\n-      .directory(workspace.toFile)\n-      .start()\n-\n-    val output = new QuietOutputStream(\n-      process.getOutputStream,\n-      s\"${details.getName} output stream\"\n-    )\n-    val input = new QuietInputStream(\n-      process.getInputStream,\n-      s\"${details.getName} input stream\"\n-    )\n+  ): Future[BuildServerConnection] = {\n+\n+    def newProcess(): Future[SocketConnection] = {\n+      val process = new ProcessBuilder(details.getArgv)\n+        .directory(workspace.toFile)\n+        .start()\n+\n+      val output = new ClosableOutputStream(\n+        process.getOutputStream,\n+        s\"${details.getName} output stream\"\n+      )\n+      val input = new QuietInputStream(\n+        process.getInputStream,\n+        s\"${details.getName} input stream\"\n+      )\n+\n+      Future.successful {\n+        SocketConnection(\n+          details.getName(),\n+          output,\n+          input,\n+          List(\n+            Cancelable(() => process.destroy())\n+          )\n+        )\n+      }\n+\n+    }\n \n     BuildServerConnection.fromStreams("
  },
  {
    "id" : "c85acc8e-a2f0-4288-8642-9872085ed2ab",
    "prId" : 1677,
    "comments" : [
      {
        "id" : "5f237187-6f67-4435-9bc5-7cd6bd0e62dc",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Not 100% sure about this solution, need to test it with another BSP server.",
        "createdAt" : "2020-04-29T17:17:54Z",
        "updatedAt" : "2020-05-04T13:57:13Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      },
      {
        "id" : "0d2734b5-48e8-4148-9267-7d5e7f4dea47",
        "parentId" : "5f237187-6f67-4435-9bc5-7cd6bd0e62dc",
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Added a test for it in Bill Suite, seems to work pretty well.",
        "createdAt" : "2020-04-30T08:42:57Z",
        "updatedAt" : "2020-05-04T13:57:13Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "38751291a84f683f8d8eb60ed8a73ce8657936c9",
    "line" : 24,
    "diffHunk" : "@@ -70,14 +72,21 @@ final class BspServers(\n         s\"${details.getName} input stream\"\n       )\n \n+      val finished = Promise[Unit]()\n+      Future {\n+        process.waitFor()"
  },
  {
    "id" : "05fefbeb-c92c-4e55-bbf2-515d5c6579ac",
    "prId" : 1865,
    "comments" : [
      {
        "id" : "1f10203e-790e-4d15-9e29-95de8f7063fa",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "```suggestion\r\n      projectDirectory: AbsolutePath\r\n```\r\n? ",
        "createdAt" : "2020-07-06T17:57:31Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1ecc085ce9f65d042e2055d19fd627c5d49e7918",
    "line" : null,
    "diffHunk" : "@@ -34,10 +34,12 @@ final class BspServers(\n     config: MetalsServerConfig\n )(implicit ec: ExecutionContextExecutorService) {\n \n-  def newServer(): Future[Option[BuildServerConnection]] = {\n-    findServer().flatMap { details =>\n+  def newServer(\n+      workspace: AbsolutePath"
  },
  {
    "id" : "49f6c031-ed3f-4204-84b3-efc88b303173",
    "prId" : 1865,
    "comments" : [
      {
        "id" : "9e6a2df0-977c-4e5a-8cf9-c86eabc06781",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "This is probably not needed.",
        "createdAt" : "2020-07-06T17:58:08Z",
        "updatedAt" : "2020-07-31T11:55:17Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "1ecc085ce9f65d042e2055d19fd627c5d49e7918",
    "line" : null,
    "diffHunk" : "@@ -60,6 +62,7 @@ final class BspServers(\n   }\n \n   private def newServer(\n+      workspace: AbsolutePath,"
  }
]