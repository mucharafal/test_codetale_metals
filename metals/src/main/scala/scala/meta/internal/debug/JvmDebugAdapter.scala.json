[
  {
    "id" : "dade7a9f-f8ba-4368-beb2-ba57d6869a64",
    "prId" : 721,
    "comments" : [
      {
        "id" : "28758193-bb29-4d3e-9c4f-0fe60bef86b4",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "Unit?",
        "createdAt" : "2019-05-16T14:34:03Z",
        "updatedAt" : "2019-05-22T07:33:25Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3c999e9b79f7d0d6a4c95756d12ec54f6abbc90",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,53 @@\n+package scala.meta.internal.debug\n+\n+import java.util.concurrent.CompletableFuture\n+import org.eclipse.lsp4j.debug\n+import org.eclipse.lsp4j.debug.services.IDebugProtocolClient\n+import org.eclipse.lsp4j.jsonrpc.services.JsonRequest\n+import scala.concurrent.ExecutionContext\n+import scala.meta.internal.debug.protocol.ExitedEventArguments\n+import scala.meta.internal.debug.protocol.LaunchParameters\n+\n+final class JvmDebugAdapter(implicit val ex: ExecutionContext)\n+    extends DebugAdapter {\n+  private val client = new ClientDelegate\n+  private val sessionFactory = new DebugSessionFactory(client)\n+\n+  @JsonRequest\n+  def initialize(\n+      args: debug.InitializeRequestArguments\n+  ): CompletableFuture[\n+    debug.Capabilities\n+  ] = {\n+    val capabilities = new debug.Capabilities()\n+    CompletableFuture.completedFuture(capabilities)\n+  }\n+\n+  @JsonRequest\n+  def launch(\n+      params: LaunchParameters\n+  ): CompletableFuture[Void] = {"
  },
  {
    "id" : "b0f2d59f-a01d-4103-9046-18c662725bcd",
    "prId" : 721,
    "comments" : [
      {
        "id" : "ef1dd886-c60a-4840-9474-79f9a6206fe7",
        "parentId" : null,
        "author" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "body" : "`()` instead maybe?",
        "createdAt" : "2019-05-16T14:34:25Z",
        "updatedAt" : "2019-05-22T07:33:25Z",
        "lastEditedBy" : {
          "login" : "tgodzik",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/3807253?u=094831e6a696f583ddfd86d3e5923fd8545c543a&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3c999e9b79f7d0d6a4c95756d12ec54f6abbc90",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,53 @@\n+package scala.meta.internal.debug\n+\n+import java.util.concurrent.CompletableFuture\n+import org.eclipse.lsp4j.debug\n+import org.eclipse.lsp4j.debug.services.IDebugProtocolClient\n+import org.eclipse.lsp4j.jsonrpc.services.JsonRequest\n+import scala.concurrent.ExecutionContext\n+import scala.meta.internal.debug.protocol.ExitedEventArguments\n+import scala.meta.internal.debug.protocol.LaunchParameters\n+\n+final class JvmDebugAdapter(implicit val ex: ExecutionContext)\n+    extends DebugAdapter {\n+  private val client = new ClientDelegate\n+  private val sessionFactory = new DebugSessionFactory(client)\n+\n+  @JsonRequest\n+  def initialize(\n+      args: debug.InitializeRequestArguments\n+  ): CompletableFuture[\n+    debug.Capabilities\n+  ] = {\n+    val capabilities = new debug.Capabilities()\n+    CompletableFuture.completedFuture(capabilities)\n+  }\n+\n+  @JsonRequest\n+  def launch(\n+      params: LaunchParameters\n+  ): CompletableFuture[Void] = {\n+    val session = sessionFactory.create(params)\n+\n+    session.whenTerminated { exitCode =>\n+      client.terminated(new debug.TerminatedEventArguments)\n+      client.exited(ExitedEventArguments(exitCode))\n+    }\n+\n+    CompletableFuture.completedFuture(null)"
  },
  {
    "id" : "af78b083-f200-4caf-9958-e931cf5a7a77",
    "prId" : 721,
    "comments" : [
      {
        "id" : "416ae380-3ae0-4c98-a43a-80ef820cf7d8",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Are these annotations necessary on `JvmDebugAdapter`? I think it's only needed for `MetalsDebugServer`.",
        "createdAt" : "2019-05-20T15:14:42Z",
        "updatedAt" : "2019-05-22T07:33:25Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "e3c999e9b79f7d0d6a4c95756d12ec54f6abbc90",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,53 @@\n+package scala.meta.internal.debug\n+\n+import java.util.concurrent.CompletableFuture\n+import org.eclipse.lsp4j.debug\n+import org.eclipse.lsp4j.debug.services.IDebugProtocolClient\n+import org.eclipse.lsp4j.jsonrpc.services.JsonRequest\n+import scala.concurrent.ExecutionContext\n+import scala.meta.internal.debug.protocol.ExitedEventArguments\n+import scala.meta.internal.debug.protocol.LaunchParameters\n+\n+final class JvmDebugAdapter(implicit val ex: ExecutionContext)\n+    extends DebugAdapter {\n+  private val client = new ClientDelegate\n+  private val sessionFactory = new DebugSessionFactory(client)\n+\n+  @JsonRequest"
  }
]