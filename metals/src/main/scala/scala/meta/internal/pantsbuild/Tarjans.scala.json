[
  {
    "id" : "6ca4d4be-5d16-4bc4-af05-c223edae3f68",
    "prId" : 935,
    "comments" : [
      {
        "id" : "33078c10-fb76-4b14-a11d-fca852cbce32",
        "parentId" : null,
        "author" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "body" : "by reversing the variable (e.g. `notDone`, `shouldContinue`) we get a simpler condition `while something` instead of `while not something`",
        "createdAt" : "2019-09-25T09:02:23Z",
        "updatedAt" : "2019-12-05T19:30:31Z",
        "lastEditedBy" : {
          "login" : "marek1840",
          "name" : null,
          "avatarUrl" : "https://avatars1.githubusercontent.com/u/3709537?u=2bdae30d4b911a57f5cb033e41831a6373de88bb&v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      },
      {
        "id" : "5d7f5113-33e7-4187-92e8-328dce8d0d0a",
        "parentId" : "33078c10-fb76-4b14-a11d-fca852cbce32",
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Flipped the boolean and renamed to `continue`",
        "createdAt" : "2019-09-27T14:24:40Z",
        "updatedAt" : "2019-12-05T19:30:31Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "a95ae87fd9621161d156685f32480fcb7bb451a4",
    "line" : null,
    "diffHunk" : "@@ -0,0 +1,57 @@\n+package scala.meta.internal.pantsbuild\n+\n+import scala.collection.mutable\n+\n+// Adapted from:\n+// https://github.com/indy256/codelibrary/blob/c52247216258e84aac442a23273b7d8306ef757b/java/src/SCCTarjan.java\n+// https://github.com/lihaoyi/mill/blob/bc71cdb7d3f806ca5eeee2a9782ec6e2e5cf6bff/main/core/src/eval/Tarjans.scala\n+object Tarjans {\n+  def fromGraph(edges: Array[Array[Int]]): Seq[Seq[Int]] = {\n+    val n = edges.length\n+    val visited = new Array[Boolean](n)\n+    val onStack = new Array[Boolean](n)\n+    var stack = List.empty[Int]\n+    var time = 0\n+    val index = new Array[Int](n)\n+    val lowlink = new Array[Int](n)\n+    val components = mutable.ArrayBuffer.empty[Seq[Int]]\n+\n+    for (v <- 0 until n) {\n+      if (!visited(v)) {\n+        strongconnect(v)\n+      }\n+    }\n+\n+    def strongconnect(v: Int): Unit = {\n+      index(v) = time\n+      lowlink(v) = time\n+      time += 1\n+      visited(v) = true\n+      stack ::= v\n+      onStack(v) = true\n+      for (w <- edges(v)) {\n+        if (!visited(w)) {\n+          strongconnect(w)\n+          lowlink(v) = math.min(lowlink(v), lowlink(w))\n+        } else if (onStack(w)) {\n+          lowlink(v) = math.min(lowlink(v), index(w))\n+        }\n+      }\n+      if (lowlink(v) == index(v)) {\n+        val component = mutable.Buffer.empty[Int]\n+        var done = false"
  }
]