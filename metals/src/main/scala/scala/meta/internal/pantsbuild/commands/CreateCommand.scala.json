[
  {
    "id" : "b1c51dac-bcce-4af4-8c83-c9d63314a777",
    "prId" : 1486,
    "comments" : [
      {
        "id" : "c39c3be8-78e6-4007-a522-68a77e0abc35",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "We can skip this validation. It's OK if the path does not exist. We only need this flag to allow testing fastpass in a CI environment that doesn't have access to internet and the bsp JSON files are only used by IntelliJ (not CI).",
        "createdAt" : "2020-03-10T10:04:55Z",
        "updatedAt" : "2020-03-10T18:40:50Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
          {
            "value" : "outdated"
          }
        ]
      }
    ],
    "commit" : "3b17834690eca5d6f9189c72ed950d104012426b",
    "line" : null,
    "diffHunk" : "@@ -39,19 +39,35 @@ object CreateCommand extends Command[CreateOptions](\"create\") {\n     }\n   }\n   def run(create: CreateOptions, app: CliApp): Int = {\n-    val name = create.actualName\n-    Project.fromName(name, create.common) match {\n-      case Some(value) =>\n-        app.error(\n-          s\"can't create project named '${name}' because it already exists.\" +\n-            s\"\\n\\tTo refresh the project run: fastpass refresh ${name}\"\n-        )\n-        1\n-      case None =>\n-        val project = Project.create(name, create.common, create.targets)\n-        SharedCommand.interpretExport(\n-          Export(project, create.open, app).copy(export = create.export)\n-        )\n+    val coursierBinary = create.coursierBinary.map(AbsolutePath(_))\n+    val pathError = coursierBinary\n+      .map { path =>\n+        if (!path.isFile) {"
  }
]