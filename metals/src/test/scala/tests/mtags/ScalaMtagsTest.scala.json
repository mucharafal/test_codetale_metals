[
  {
    "id" : "b6c974a8-3793-4e8e-bb48-ef636256cc90",
    "prId" : 286,
    "comments" : [
      {
        "id" : "ab8d5810-97d4-4a28-9ec0-0be9399e1186",
        "parentId" : null,
        "author" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "body" : "Can we add a test for when `+1` is needed?\r\n\r\n```scala\r\ndef m8(a: b.A) // m8(A)\r\ndef m8(a: c.A) // m8(A+1)\r\n```",
        "createdAt" : "2018-04-15T14:19:45Z",
        "updatedAt" : "2018-04-15T15:12:27Z",
        "lastEditedBy" : {
          "login" : "olafurpg",
          "name" : null,
          "avatarUrl" : "https://avatars0.githubusercontent.com/u/1408093?v=4"
        },
        "tags" : [
        ]
      }
    ],
    "commit" : "191b3887a75f637235c80257526e6d20e3807359",
    "line" : 69,
    "diffHunk" : "@@ -155,4 +155,55 @@ object ScalaMtagsTest extends BaseMtagsTest {\n       |_root_.A#(b) => val param b\n       |\"\"\".stripMargin\n   )\n+\n+  check(\n+    \"methods.scala\",\n+    \"\"\"\n+      |abstract class Methods {\n+      |  def m1(a: Int, b: String): Int\n+      |  def m2(a: A[Int]): Unit\n+      |  def m3(a: A.type)\n+      |  def m4(a: b.A)\n+      |  def m5(a: => A)\n+      |  def m6(a: A*)\n+      |  def m7(a: A with B)\n+      |  def m8(a: {def b:B})"
  }
]