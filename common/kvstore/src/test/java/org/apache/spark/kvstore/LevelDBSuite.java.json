[{
  "comments": [{
    "author": {
      "login": "jsoltren"
    },
    "body": "Why the + 1 here?",
    "commit": "53d7d57196317ef406875f73d6e806f3b7956ee7",
    "createdAt": "2017-05-26T18:00:14Z",
    "diffHunk": "@@ -0,0 +1,291 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.kvstore;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.iq80.leveldb.DBIterator;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import static org.junit.Assert.*;\n+\n+public class LevelDBSuite {\n+\n+  private LevelDB db;\n+  private File dbpath;\n+\n+  @After\n+  public void cleanup() throws Exception {\n+    if (db != null) {\n+      db.close();\n+    }\n+    if (dbpath != null) {\n+      FileUtils.deleteQuietly(dbpath);\n+    }\n+  }\n+\n+  @Before\n+  public void setup() throws Exception {\n+    dbpath = File.createTempFile(\"test.\", \".ldb\");\n+    dbpath.delete();\n+    db = new LevelDB(dbpath);\n+  }\n+\n+  @Test\n+  public void testReopenAndVersionCheckDb() throws Exception {\n+    db.close();\n+    db = null;\n+    assertTrue(dbpath.exists());\n+\n+    db = new LevelDB(dbpath);\n+    assertEquals(LevelDB.STORE_VERSION,\n+      db.serializer.deserializeLong(db.db().get(LevelDB.STORE_VERSION_KEY)));\n+    db.db().put(LevelDB.STORE_VERSION_KEY, db.serializer.serialize(LevelDB.STORE_VERSION + 1));",
    "line": 65
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "Because the test is explicitly testing a mismatch in the version.",
    "commit": "53d7d57196317ef406875f73d6e806f3b7956ee7",
    "createdAt": "2017-05-26T18:23:03Z",
    "diffHunk": "@@ -0,0 +1,291 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.kvstore;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import static java.nio.charset.StandardCharsets.UTF_8;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.iq80.leveldb.DBIterator;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import static org.junit.Assert.*;\n+\n+public class LevelDBSuite {\n+\n+  private LevelDB db;\n+  private File dbpath;\n+\n+  @After\n+  public void cleanup() throws Exception {\n+    if (db != null) {\n+      db.close();\n+    }\n+    if (dbpath != null) {\n+      FileUtils.deleteQuietly(dbpath);\n+    }\n+  }\n+\n+  @Before\n+  public void setup() throws Exception {\n+    dbpath = File.createTempFile(\"test.\", \".ldb\");\n+    dbpath.delete();\n+    db = new LevelDB(dbpath);\n+  }\n+\n+  @Test\n+  public void testReopenAndVersionCheckDb() throws Exception {\n+    db.close();\n+    db = null;\n+    assertTrue(dbpath.exists());\n+\n+    db = new LevelDB(dbpath);\n+    assertEquals(LevelDB.STORE_VERSION,\n+      db.serializer.deserializeLong(db.db().get(LevelDB.STORE_VERSION_KEY)));\n+    db.db().put(LevelDB.STORE_VERSION_KEY, db.serializer.serialize(LevelDB.STORE_VERSION + 1));",
    "line": 65
  }],
  "prId": 17902
}]