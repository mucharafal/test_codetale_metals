[{
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "why the chang from `RND.nextInt(MAX_ENTRIES)`?  this seems fine, just seemed like you were more likely to stress collision on this index before.",
    "commit": "8f9d94f04f9b86072d2af22e3a332525e53f7d8b",
    "createdAt": "2018-01-17T20:13:02Z",
    "diffHunk": "@@ -112,7 +114,8 @@ public void setup() throws Exception {\n       t.key = \"key\" + i;\n       t.id = \"id\" + i;\n       t.name = \"name\" + RND.nextInt(MAX_ENTRIES);\n-      t.num = RND.nextInt(MAX_ENTRIES);\n+      // Force one item to have an integer value of zero to test the fix for SPARK-23103.\n+      t.num = (i != 0) ? (int) RND.nextLong() : 0;",
    "line": 17
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "`nextInt` doesn't return negative values. I can add a mod operator here, but the code already explicitly generates some clashes a few lines below.",
    "commit": "8f9d94f04f9b86072d2af22e3a332525e53f7d8b",
    "createdAt": "2018-01-17T20:23:25Z",
    "diffHunk": "@@ -112,7 +114,8 @@ public void setup() throws Exception {\n       t.key = \"key\" + i;\n       t.id = \"id\" + i;\n       t.name = \"name\" + RND.nextInt(MAX_ENTRIES);\n-      t.num = RND.nextInt(MAX_ENTRIES);\n+      // Force one item to have an integer value of zero to test the fix for SPARK-23103.\n+      t.num = (i != 0) ? (int) RND.nextLong() : 0;",
    "line": 17
  }],
  "prId": 20284
}]