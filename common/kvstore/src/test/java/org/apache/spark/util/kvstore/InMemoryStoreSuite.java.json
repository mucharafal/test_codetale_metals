[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "Add generic type.\r\n\r\nOr you could use `ImmutableSet` and not need this local variable (and avoid re-using it for different types and avoid the warnings from javac at the same time).",
    "commit": "e062cf939298684d2dd64ba73dc8a8a6b3b10f68",
    "createdAt": "2019-05-20T20:22:02Z",
    "diffHunk": "@@ -132,6 +133,48 @@ public void testArrayIndices() throws Exception {\n     assertEquals(o, store.view(ArrayKeyIndexType.class).index(\"id\").first(o.id).iterator().next());\n   }\n \n+  @Test\n+  public void testRemoveAll() throws Exception {\n+    KVStore store = new InMemoryStore();\n+\n+    for (int i = 0; i < 2; i++) {\n+      for (int j = 0; j < 2; j++) {\n+        ArrayKeyIndexType o = new ArrayKeyIndexType();\n+        o.key = new int[] { i, j, 0 };\n+        o.id = new String[] { \"things\" };\n+        store.write(o);\n+\n+        o = new ArrayKeyIndexType();\n+        o.key = new int[] { i, j, 1 };\n+        o.id = new String[] { \"more things\" };\n+        store.write(o);\n+      }\n+    }\n+\n+    ArrayKeyIndexType o = new ArrayKeyIndexType();\n+    o.key = new int[] { 2, 2, 2 };\n+    o.id = new String[] { \"things\" };\n+    store.write(o);\n+\n+    assertEquals(9, store.count(ArrayKeyIndexType.class));\n+\n+    HashSet set = new HashSet();"
  }],
  "prId": 24616
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "indentation",
    "commit": "e062cf939298684d2dd64ba73dc8a8a6b3b10f68",
    "createdAt": "2019-05-21T17:13:26Z",
    "diffHunk": "@@ -132,6 +133,51 @@ public void testArrayIndices() throws Exception {\n     assertEquals(o, store.view(ArrayKeyIndexType.class).index(\"id\").first(o.id).iterator().next());\n   }\n \n+  @Test\n+  public void testRemoveAll() throws Exception {\n+    KVStore store = new InMemoryStore();\n+\n+    for (int i = 0; i < 2; i++) {\n+      for (int j = 0; j < 2; j++) {\n+        ArrayKeyIndexType o = new ArrayKeyIndexType();\n+        o.key = new int[] { i, j, 0 };\n+        o.id = new String[] { \"things\" };\n+        store.write(o);\n+\n+        o = new ArrayKeyIndexType();\n+        o.key = new int[] { i, j, 1 };\n+        o.id = new String[] { \"more things\" };\n+        store.write(o);\n+      }\n+    }\n+\n+    ArrayKeyIndexType o = new ArrayKeyIndexType();\n+    o.key = new int[] { 2, 2, 2 };\n+    o.id = new String[] { \"things\" };\n+    store.write(o);\n+\n+    assertEquals(9, store.count(ArrayKeyIndexType.class));\n+\n+\n+    store.removeAllByIndexValues(\n+      ArrayKeyIndexType.class,\n+      KVIndex.NATURAL_INDEX_NAME,\n+      ImmutableSet.of(new int[] {0, 0, 0}, new int[] { 2, 2, 2 }));\n+    assertEquals(7, store.count(ArrayKeyIndexType.class));\n+\n+    store.removeAllByIndexValues(\n+      ArrayKeyIndexType.class,\n+      \"id\",\n+      ImmutableSet.of(new String [] { \"things\" }));\n+    assertEquals(4, store.count(ArrayKeyIndexType.class));\n+\n+    store.removeAllByIndexValues(\n+      ArrayKeyIndexType.class,\n+      \"id\",\n+        ImmutableSet.of(new String [] { \"more things\" }));",
    "line": 53
  }],
  "prId": 24616
}]