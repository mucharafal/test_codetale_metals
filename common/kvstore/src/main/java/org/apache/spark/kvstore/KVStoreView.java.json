[{
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "typo: returned",
    "commit": "53d7d57196317ef406875f73d6e806f3b7956ee7",
    "createdAt": "2017-05-31T16:33:53Z",
    "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.kvstore;\n+\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import com.google.common.base.Preconditions;\n+\n+/**\n+ * A configurable view that allows iterating over values in a {@link KVStore}.\n+ *\n+ * <p>\n+ * The different methods can be used to configure the behavior of the iterator. Calling the same\n+ * method multiple times is allowed; the most recent value will be used.\n+ * </p>\n+ *\n+ * <p>\n+ * The iterators returns by this view are of type {@link KVStoreIterator}; they auto-close"
  }],
  "prId": 17902
}, {
  "comments": [{
    "author": {
      "login": "squito"
    },
    "body": "would be nice to clarify whether the matching element is included or not.",
    "commit": "53d7d57196317ef406875f73d6e806f3b7956ee7",
    "createdAt": "2017-05-31T16:36:25Z",
    "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.kvstore;\n+\n+import java.util.Iterator;\n+import java.util.Map;\n+\n+import com.google.common.base.Preconditions;\n+\n+/**\n+ * A configurable view that allows iterating over values in a {@link KVStore}.\n+ *\n+ * <p>\n+ * The different methods can be used to configure the behavior of the iterator. Calling the same\n+ * method multiple times is allowed; the most recent value will be used.\n+ * </p>\n+ *\n+ * <p>\n+ * The iterators returns by this view are of type {@link KVStoreIterator}; they auto-close\n+ * when used in a for loop that exhausts their contents, but when used manually, they need\n+ * to be closed explicitly unless all elements are read.\n+ * </p>\n+ */\n+public abstract class KVStoreView<T> implements Iterable<T> {\n+\n+  final Class<T> type;\n+\n+  boolean ascending = true;\n+  String index = KVIndex.NATURAL_INDEX_NAME;\n+  Object first = null;\n+  Object last = null;\n+  Object parent = null;\n+  long skip = 0L;\n+  long max = Long.MAX_VALUE;\n+\n+  public KVStoreView(Class<T> type) {\n+    this.type = type;\n+  }\n+\n+  /**\n+   * Reverses the order of iteration. By default, iterates in ascending order.\n+   */\n+  public KVStoreView<T> reverse() {\n+    ascending = !ascending;\n+    return this;\n+  }\n+\n+  /**\n+   * Iterates according to the given index.\n+   */\n+  public KVStoreView<T> index(String name) {\n+    this.index = Preconditions.checkNotNull(name);\n+    return this;\n+  }\n+\n+  /**\n+   * Defines the value of the parent index when iterating over a child index. Only elements that\n+   * match the parent index's value will be included in the iteration.\n+   *\n+   * <p>\n+   * Required for iterating over child indices, will generate an error if iterating over a\n+   * parent-less index.\n+   * </p>\n+   */\n+  public KVStoreView<T> parent(Object value) {\n+    this.parent = value;\n+    return this;\n+  }\n+\n+  /**\n+   * Iterates starting at the given value of the chosen index.\n+   */\n+  public KVStoreView<T> first(Object value) {\n+    this.first = value;\n+    return this;\n+  }\n+\n+  /**\n+   * Stops iteration at the given value of the chosen index."
  }],
  "prId": 17902
}]