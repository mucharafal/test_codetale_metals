[{
  "comments": [{
    "author": {
      "login": "srowen"
    },
    "body": "`.contains`? that isn't a regex. You can put it into the clause above and modify the comment",
    "commit": "9aa423f7e1e82cfc9b3046637ae35140ece6c960",
    "createdAt": "2019-06-04T13:43:19Z",
    "diffHunk": "@@ -51,6 +51,8 @@\n       // Since java.nio.Bits.unaligned() doesn't return true on ppc (See JDK-8165231), but\n       // ppc64 and ppc64le support it\n       _unaligned = true;\n+    } else if (arch.matches(\"s390x\")) {"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "This can still be changed",
    "commit": "9aa423f7e1e82cfc9b3046637ae35140ece6c960",
    "createdAt": "2019-06-07T12:55:47Z",
    "diffHunk": "@@ -51,6 +51,8 @@\n       // Since java.nio.Bits.unaligned() doesn't return true on ppc (See JDK-8165231), but\n       // ppc64 and ppc64le support it\n       _unaligned = true;\n+    } else if (arch.matches(\"s390x\")) {"
  }, {
    "author": {
      "login": "ketank-new"
    },
    "body": "@srowen  : did not get your <.contains> comment what exactly you are trying to say\r\nI have intentionally written a else if blk to keep processor specific changes in seperate block.\r\n\r\nare you asking me to add \"s390x\" in the same \"ppc64le\" blk ... let me know",
    "commit": "9aa423f7e1e82cfc9b3046637ae35140ece6c960",
    "createdAt": "2019-06-10T10:21:36Z",
    "diffHunk": "@@ -51,6 +51,8 @@\n       // Since java.nio.Bits.unaligned() doesn't return true on ppc (See JDK-8165231), but\n       // ppc64 and ppc64le support it\n       _unaligned = true;\n+    } else if (arch.matches(\"s390x\")) {"
  }, {
    "author": {
      "login": "srowen"
    },
    "body": "Yes, keep them together. And it does not need to be a regex with `matches`; just use `contains`.",
    "commit": "9aa423f7e1e82cfc9b3046637ae35140ece6c960",
    "createdAt": "2019-06-10T12:50:05Z",
    "diffHunk": "@@ -51,6 +51,8 @@\n       // Since java.nio.Bits.unaligned() doesn't return true on ppc (See JDK-8165231), but\n       // ppc64 and ppc64le support it\n       _unaligned = true;\n+    } else if (arch.matches(\"s390x\")) {"
  }, {
    "author": {
      "login": "ketank-new"
    },
    "body": "> @ketank-new Could you address the comments and resolve the conflicts?\r\n\r\nsure",
    "commit": "9aa423f7e1e82cfc9b3046637ae35140ece6c960",
    "createdAt": "2019-06-11T04:31:36Z",
    "diffHunk": "@@ -51,6 +51,8 @@\n       // Since java.nio.Bits.unaligned() doesn't return true on ppc (See JDK-8165231), but\n       // ppc64 and ppc64le support it\n       _unaligned = true;\n+    } else if (arch.matches(\"s390x\")) {"
  }],
  "prId": 24788
}, {
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "Ur, #24825 touched `unaligned` initialization and just got merged. Please rebase with the master.",
    "commit": "9aa423f7e1e82cfc9b3046637ae35140ece6c960",
    "createdAt": "2019-06-11T07:55:59Z",
    "diffHunk": "@@ -44,6 +44,28 @@\n   public static final int DOUBLE_ARRAY_OFFSET;\n \n   private static final boolean unaligned;\n+  static {",
    "line": 4
  }, {
    "author": {
      "login": "ketank-new"
    },
    "body": "@viirya  : are u asked me to rebase with master for Platform.java changes??",
    "commit": "9aa423f7e1e82cfc9b3046637ae35140ece6c960",
    "createdAt": "2019-06-11T08:35:44Z",
    "diffHunk": "@@ -44,6 +44,28 @@\n   public static final int DOUBLE_ARRAY_OFFSET;\n \n   private static final boolean unaligned;\n+  static {",
    "line": 4
  }, {
    "author": {
      "login": "viirya"
    },
    "body": "Yes, otherwise it can't be built.",
    "commit": "9aa423f7e1e82cfc9b3046637ae35140ece6c960",
    "createdAt": "2019-06-11T09:10:54Z",
    "diffHunk": "@@ -44,6 +44,28 @@\n   public static final int DOUBLE_ARRAY_OFFSET;\n \n   private static final boolean unaligned;\n+  static {",
    "line": 4
  }],
  "prId": 24788
}]