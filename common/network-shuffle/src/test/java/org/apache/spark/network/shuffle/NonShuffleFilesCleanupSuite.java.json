[{
  "comments": [{
    "author": {
      "login": "JoshRosen"
    },
    "body": "Do we need a test to check that we preserve the old behavior in case the new configuration is set to `false`? An end-to-end test will likely be prone to flakiness, so instead maybe we could somehow test that `shuffleService. executorRemoved()` is _not_ called if the configuration is `false`. One way to do that would be to move the construction of `new ExternalShuffleService` from the default constructor of `Worker` into its public constructor and then inject it in the `new Worker` call. This, in turn, would let you inject either a mock or spy in order to verify call counts. Do you know if we have this style of test for other `Worker` functionality? Is this a ton of work or is it relatively simple to do?",
    "commit": "2011eede002664ef75e00f1f0228c5d765753f4c",
    "createdAt": "2018-05-22T08:30:17Z",
    "diffHunk": "@@ -0,0 +1,222 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.shuffle;\n+\n+import java.io.File;\n+import java.io.FilenameFilter;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Random;\n+import java.util.concurrent.Executor;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import com.google.common.util.concurrent.MoreExecutors;\n+import org.junit.Test;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.apache.spark.network.util.MapConfigProvider;\n+import org.apache.spark.network.util.TransportConf;\n+\n+public class NonShuffleFilesCleanupSuite {",
    "line": 35
  }, {
    "author": {
      "login": "jiangxb1987"
    },
    "body": "Thanks for the suggestion, Let me try it later. :)",
    "commit": "2011eede002664ef75e00f1f0228c5d765753f4c",
    "createdAt": "2018-05-23T01:14:13Z",
    "diffHunk": "@@ -0,0 +1,222 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.shuffle;\n+\n+import java.io.File;\n+import java.io.FilenameFilter;\n+import java.io.IOException;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Random;\n+import java.util.concurrent.Executor;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import com.google.common.util.concurrent.MoreExecutors;\n+import org.junit.Test;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.apache.spark.network.util.MapConfigProvider;\n+import org.apache.spark.network.util.TransportConf;\n+\n+public class NonShuffleFilesCleanupSuite {",
    "line": 35
  }],
  "prId": 21390
}]