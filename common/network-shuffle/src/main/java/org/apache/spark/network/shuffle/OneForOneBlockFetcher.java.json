[{
  "comments": [{
    "author": {
      "login": "zsxwing"
    },
    "body": "Seems `Channels.newChannel` has an optimization for `FileOutputStream`: http://www.grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8-b132/java/nio/channels/Channels.java#424",
    "commit": "401d65047cc2b9b920243e0df7b2802929a6bc56",
    "createdAt": "2018-01-03T07:29:45Z",
    "diffHunk": "@@ -165,7 +165,7 @@ private void failRemainingBlocks(String[] failedBlockIds, Throwable e) {\n \n     DownloadCallback(int chunkIndex) throws IOException {\n       this.targetFile = tempFileManager.createTempFile();\n-      this.channel = Channels.newChannel(Files.newOutputStream(targetFile.toPath()));\n+      this.channel = Channels.newChannel(new FileOutputStream(targetFile));",
    "line": 18
  }, {
    "author": {
      "login": "jerryshao"
    },
    "body": "Here I think we can use `FileChannel.open` instead.",
    "commit": "401d65047cc2b9b920243e0df7b2802929a6bc56",
    "createdAt": "2018-01-03T07:33:18Z",
    "diffHunk": "@@ -165,7 +165,7 @@ private void failRemainingBlocks(String[] failedBlockIds, Throwable e) {\n \n     DownloadCallback(int chunkIndex) throws IOException {\n       this.targetFile = tempFileManager.createTempFile();\n-      this.channel = Channels.newChannel(Files.newOutputStream(targetFile.toPath()));\n+      this.channel = Channels.newChannel(new FileOutputStream(targetFile));",
    "line": 18
  }],
  "prId": 20119
}]