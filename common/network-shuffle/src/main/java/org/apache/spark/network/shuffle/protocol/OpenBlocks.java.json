[{
  "comments": [{
    "author": {
      "login": "cloud-fan"
    },
    "body": "we should do the check `assert(buf.getBoolean)`",
    "commit": "92c0ab616c202dd0847f703e3c5afb4a2e196a92",
    "createdAt": "2019-01-21T14:53:53Z",
    "diffHunk": "@@ -71,20 +89,31 @@ public boolean equals(Object other) {\n   public int encodedLength() {\n     return Encoders.Strings.encodedLength(appId)\n       + Encoders.Strings.encodedLength(execId)\n-      + Encoders.StringArrays.encodedLength(blockIds);\n+      + Encoders.StringArrays.encodedLength(blockIds)\n+      + (fetchContinuousShuffleBlocksInBatch ? 1 : 0);\n   }\n \n   @Override\n   public void encode(ByteBuf buf) {\n     Encoders.Strings.encode(buf, appId);\n     Encoders.Strings.encode(buf, execId);\n     Encoders.StringArrays.encode(buf, blockIds);\n+    if (fetchContinuousShuffleBlocksInBatch) {\n+      buf.writeBoolean(fetchContinuousShuffleBlocksInBatch);\n+    }\n   }\n \n   public static OpenBlocks decode(ByteBuf buf) {\n     String appId = Encoders.Strings.decode(buf);\n     String execId = Encoders.Strings.decode(buf);\n     String[] blockIds = Encoders.StringArrays.decode(buf);\n-    return new OpenBlocks(appId, execId, blockIds);\n+    boolean fetchContinuousShuffleBlocksInBatch = false;\n+    if (buf.readableBytes() >= 1) {\n+      // A sanity check. In `encode` we write true, so here we should read true.",
    "line": 81
  }],
  "prId": 19788
}]