[{
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "nit: import order (java comes first, spark imports separate)",
    "commit": "261fc767a23061844e32b1a7ec0e8fd58c42e12c",
    "createdAt": "2019-05-10T18:18:27Z",
    "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.shuffle;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import org.apache.spark.network.util.JavaUtils;\n+\n+import java.io.File;"
  }],
  "prId": 24554
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "I kinda dislike this name because this class is not reading anything. Maybe `ExecutorDiskUtils` or `ExecutorStorageUtils`?",
    "commit": "261fc767a23061844e32b1a7ec0e8fd58c42e12c",
    "createdAt": "2019-05-28T23:57:47Z",
    "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.shuffle;\n+\n+import java.io.File;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+\n+import org.apache.spark.network.util.JavaUtils;\n+\n+public class ExecutorDiskReader {"
  }],
  "prId": 24554
}, {
  "comments": [{
    "author": {
      "login": "vanzin"
    },
    "body": "You need to change the comment in `DiskBlockManager.scala`, but even better would be to share the common logic somehow...",
    "commit": "261fc767a23061844e32b1a7ec0e8fd58c42e12c",
    "createdAt": "2019-05-28T23:59:35Z",
    "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.shuffle;\n+\n+import java.io.File;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+\n+import org.apache.spark.network.util.JavaUtils;\n+\n+public class ExecutorDiskReader {\n+\n+  private static final Pattern MULTIPLE_SEPARATORS = Pattern.compile(File.separator + \"{2,}\");\n+\n+  /**\n+   * Hashes a filename into the corresponding local directory, in a manner consistent with\n+   * Spark's DiskBlockManager.getFile()."
  }],
  "prId": 24554
}]