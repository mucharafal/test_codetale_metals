[{
  "comments": [{
    "author": {
      "login": "ericl"
    },
    "body": "nit: extra newline\n",
    "commit": "d099367949c8bf76fe6c3e5a86b90aefeb06451f",
    "createdAt": "2016-07-18T23:45:26Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.shuffle;\n+\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.CacheLoader;\n+import com.google.common.cache.LoadingCache;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.DataInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.LongBuffer;\n+import java.util.concurrent.ExecutionException;\n+\n+/**\n+ * Maintains an LRU cache of {@link ShuffleIndexInformation} so that\n+ * we can avoid open/close of the index files for each block fetch.\n+ */\n+public class ShuffleIndexCache {\n+\n+  LoadingCache<String, ShuffleIndexInformation> indexCache;\n+\n+  public ShuffleIndexCache(long cacheSize) {\n+    CacheLoader<String, ShuffleIndexInformation> loader =\n+      new CacheLoader<String, ShuffleIndexInformation>() {\n+        public ShuffleIndexInformation load(String file) throws IOException {\n+          return new ShuffleIndexInformation(new File(file));\n+        }\n+      };\n+    indexCache = CacheBuilder.newBuilder()\n+        .maximumSize(cacheSize).build(loader);\n+"
  }, {
    "author": {
      "login": "sitalkedia"
    },
    "body": "fixed.\n",
    "commit": "d099367949c8bf76fe6c3e5a86b90aefeb06451f",
    "createdAt": "2016-07-19T20:37:47Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.shuffle;\n+\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.CacheLoader;\n+import com.google.common.cache.LoadingCache;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.DataInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.LongBuffer;\n+import java.util.concurrent.ExecutionException;\n+\n+/**\n+ * Maintains an LRU cache of {@link ShuffleIndexInformation} so that\n+ * we can avoid open/close of the index files for each block fetch.\n+ */\n+public class ShuffleIndexCache {\n+\n+  LoadingCache<String, ShuffleIndexInformation> indexCache;\n+\n+  public ShuffleIndexCache(long cacheSize) {\n+    CacheLoader<String, ShuffleIndexInformation> loader =\n+      new CacheLoader<String, ShuffleIndexInformation>() {\n+        public ShuffleIndexInformation load(String file) throws IOException {\n+          return new ShuffleIndexInformation(new File(file));\n+        }\n+      };\n+    indexCache = CacheBuilder.newBuilder()\n+        .maximumSize(cacheSize).build(loader);\n+"
  }],
  "prId": 12944
}, {
  "comments": [{
    "author": {
      "login": "ericl"
    },
    "body": "Can we just inline this cache into ExternalShuffleBlockResolver? It doesn't seem necessary to add a new class file that just wraps the guava cache.\n",
    "commit": "d099367949c8bf76fe6c3e5a86b90aefeb06451f",
    "createdAt": "2016-07-18T23:47:05Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.shuffle;\n+\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.CacheLoader;\n+import com.google.common.cache.LoadingCache;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.DataInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.LongBuffer;\n+import java.util.concurrent.ExecutionException;\n+\n+/**\n+ * Maintains an LRU cache of {@link ShuffleIndexInformation} so that\n+ * we can avoid open/close of the index files for each block fetch.\n+ */\n+public class ShuffleIndexCache {"
  }, {
    "author": {
      "login": "sitalkedia"
    },
    "body": "Okay, done.\n",
    "commit": "d099367949c8bf76fe6c3e5a86b90aefeb06451f",
    "createdAt": "2016-07-19T20:37:27Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.shuffle;\n+\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.CacheLoader;\n+import com.google.common.cache.LoadingCache;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.DataInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.LongBuffer;\n+import java.util.concurrent.ExecutionException;\n+\n+/**\n+ * Maintains an LRU cache of {@link ShuffleIndexInformation} so that\n+ * we can avoid open/close of the index files for each block fetch.\n+ */\n+public class ShuffleIndexCache {"
  }, {
    "author": {
      "login": "ericl"
    },
    "body": "I mean, it doesn't need to be a class.\n",
    "commit": "d099367949c8bf76fe6c3e5a86b90aefeb06451f",
    "createdAt": "2016-07-19T20:52:48Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.shuffle;\n+\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.CacheLoader;\n+import com.google.common.cache.LoadingCache;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.DataInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.LongBuffer;\n+import java.util.concurrent.ExecutionException;\n+\n+/**\n+ * Maintains an LRU cache of {@link ShuffleIndexInformation} so that\n+ * we can avoid open/close of the index files for each block fetch.\n+ */\n+public class ShuffleIndexCache {"
  }, {
    "author": {
      "login": "sitalkedia"
    },
    "body": "changed accordingly. \n",
    "commit": "d099367949c8bf76fe6c3e5a86b90aefeb06451f",
    "createdAt": "2016-07-20T17:34:26Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.shuffle;\n+\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.CacheLoader;\n+import com.google.common.cache.LoadingCache;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.DataInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.LongBuffer;\n+import java.util.concurrent.ExecutionException;\n+\n+/**\n+ * Maintains an LRU cache of {@link ShuffleIndexInformation} so that\n+ * we can avoid open/close of the index files for each block fetch.\n+ */\n+public class ShuffleIndexCache {"
  }],
  "prId": 12944
}, {
  "comments": [{
    "author": {
      "login": "ericl"
    },
    "body": "nit: does it work to have `File` as a key? That seems cleaner than a raw string.\n",
    "commit": "d099367949c8bf76fe6c3e5a86b90aefeb06451f",
    "createdAt": "2016-07-19T00:03:34Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.shuffle;\n+\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.CacheLoader;\n+import com.google.common.cache.LoadingCache;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.DataInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.LongBuffer;\n+import java.util.concurrent.ExecutionException;\n+\n+/**\n+ * Maintains an LRU cache of {@link ShuffleIndexInformation} so that\n+ * we can avoid open/close of the index files for each block fetch.\n+ */\n+public class ShuffleIndexCache {\n+\n+  LoadingCache<String, ShuffleIndexInformation> indexCache;\n+\n+  public ShuffleIndexCache(long cacheSize) {\n+    CacheLoader<String, ShuffleIndexInformation> loader ="
  }, {
    "author": {
      "login": "sitalkedia"
    },
    "body": "good point, changed accordingly.\n",
    "commit": "d099367949c8bf76fe6c3e5a86b90aefeb06451f",
    "createdAt": "2016-07-19T20:37:42Z",
    "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.shuffle;\n+\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.CacheLoader;\n+import com.google.common.cache.LoadingCache;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.DataInputStream;\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.LongBuffer;\n+import java.util.concurrent.ExecutionException;\n+\n+/**\n+ * Maintains an LRU cache of {@link ShuffleIndexInformation} so that\n+ * we can avoid open/close of the index files for each block fetch.\n+ */\n+public class ShuffleIndexCache {\n+\n+  LoadingCache<String, ShuffleIndexInformation> indexCache;\n+\n+  public ShuffleIndexCache(long cacheSize) {\n+    CacheLoader<String, ShuffleIndexInformation> loader ="
  }],
  "prId": 12944
}]