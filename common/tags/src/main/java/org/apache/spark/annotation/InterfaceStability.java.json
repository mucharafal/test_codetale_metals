[{
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "Are we only going to be applying these to Public apis?  I guess that question might go with the InterfaceAudience change.  Just wondering if we wanted to state the default is Unstable for private classes but we can make that change later  \n",
    "commit": "f07605035bf8cfc071164c336366d4b256a4447f",
    "createdAt": "2016-10-06T12:57:02Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.annotation;\n+\n+import java.lang.annotation.Documented;\n+\n+/**\n+ * Annotation to inform users of how much to rely on a particular package,\n+ * class or method not changing over time.",
    "line": 24
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "I am not including the InterfaceAudience change for now since it is less clear what the \"audience\" should be. In addition, the biggest bang for the buck does come from this stability annotation, and less from audience.\n\nFor private APIs -- what are the reasons you think we should annotate private APIs with stability levels?\n",
    "commit": "f07605035bf8cfc071164c336366d4b256a4447f",
    "createdAt": "2016-10-06T17:44:32Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.annotation;\n+\n+import java.lang.annotation.Documented;\n+\n+/**\n+ * Annotation to inform users of how much to rely on a particular package,\n+ * class or method not changing over time.",
    "line": 24
  }, {
    "author": {
      "login": "tgravescs"
    },
    "body": "I probably should have said do we want to say something like classes not annotated are considered Unstable.  This would just cover if we missed something or clarify to the user if they found a class that wasn't annotated.  \n\nIt really only applies once we have the Audience tag and what those audience tags are.  You could have a tag that is for internal Spark developers/components (not applications using spark) which would apply to other components or components really closely tied to Spark (perhaps Bahir). In the Hadoop world some things are considered limited private (which I don't think we should use that tag) but are allowed to use some interfaces end user is not.\n\nNot a big deal at this point.\n",
    "commit": "f07605035bf8cfc071164c336366d4b256a4447f",
    "createdAt": "2016-10-06T18:09:00Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.annotation;\n+\n+import java.lang.annotation.Documented;\n+\n+/**\n+ * Annotation to inform users of how much to rely on a particular package,\n+ * class or method not changing over time.",
    "line": 24
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "That's a good point. I did say in the doc for unstable anything unlabeled are considered unstable. I can promote it up here to make that message more visible; perhaps when we finish annotating most classes (otherwise all classes are considered unstable immediately).\n",
    "commit": "f07605035bf8cfc071164c336366d4b256a4447f",
    "createdAt": "2016-10-06T18:44:40Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.annotation;\n+\n+import java.lang.annotation.Documented;\n+\n+/**\n+ * Annotation to inform users of how much to rely on a particular package,\n+ * class or method not changing over time.",
    "line": 24
  }, {
    "author": {
      "login": "tgravescs"
    },
    "body": "Sounds good.   +1\n",
    "commit": "f07605035bf8cfc071164c336366d4b256a4447f",
    "createdAt": "2016-10-06T19:10:19Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.annotation;\n+\n+import java.lang.annotation.Documented;\n+\n+/**\n+ * Annotation to inform users of how much to rely on a particular package,\n+ * class or method not changing over time.",
    "line": 24
  }, {
    "author": {
      "login": "mridulm"
    },
    "body": "I was assuming that classes/interfaces not annotated with InterfaceStability or other org.apache.spark.annotation should be considered private and not exposed (which is default irrespective of private[spark] exists or not).\n\nOnly those which are explicitly tagged are public.\nA public api can still be Unstable, but the assumption is that there might be an intention to open it up based on feedback/design evolution.\n\nIs this a correct understanding ?\n",
    "commit": "f07605035bf8cfc071164c336366d4b256a4447f",
    "createdAt": "2016-10-06T19:43:52Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.annotation;\n+\n+import java.lang.annotation.Documented;\n+\n+/**\n+ * Annotation to inform users of how much to rely on a particular package,\n+ * class or method not changing over time.",
    "line": 24
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "Yes -- but private apis are by definition \"unstable\" ...\n",
    "commit": "f07605035bf8cfc071164c336366d4b256a4447f",
    "createdAt": "2016-10-07T07:32:17Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.annotation;\n+\n+import java.lang.annotation.Documented;\n+\n+/**\n+ * Annotation to inform users of how much to rely on a particular package,\n+ * class or method not changing over time.",
    "line": 24
  }],
  "prId": 15374
}, {
  "comments": [{
    "author": {
      "login": "viirya"
    },
    "body": "I can't see significant difference between `Evolving` and `Unstable` in the view of changing possibility. Does it guarantee that an `Evolving` API becomes `Stable` one in next major release?\n",
    "commit": "f07605035bf8cfc071164c336366d4b256a4447f",
    "createdAt": "2016-10-07T08:10:47Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.annotation;\n+\n+import java.lang.annotation.Documented;\n+\n+/**\n+ * Annotation to inform users of how much to rely on a particular package,\n+ * class or method not changing over time.\n+ */\n+public class InterfaceStability {\n+\n+  /**\n+   * Stable APIs that retain source and binary compatibility within a major release.\n+   * These interfaces can change from one major release to another major release\n+   * (e.g. from 1.0 to 2.0).\n+   */\n+  @Documented\n+  public @interface Stable {};\n+\n+  /**\n+   * APIs that are meant to evolve towards becoming stable APIs, but are not stable APIs yet.\n+   * Evolving interfaces can change from one feature release to another release (i.e. 2.1 to 2.2).\n+   */\n+  @Documented\n+  public @interface Evolving {};",
    "line": 41
  }, {
    "author": {
      "login": "rxin"
    },
    "body": "No but for evolving API we at least say it won't change within a feature release, whereas unstable API has no guarantee at all.\n",
    "commit": "f07605035bf8cfc071164c336366d4b256a4447f",
    "createdAt": "2016-10-07T17:23:20Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.annotation;\n+\n+import java.lang.annotation.Documented;\n+\n+/**\n+ * Annotation to inform users of how much to rely on a particular package,\n+ * class or method not changing over time.\n+ */\n+public class InterfaceStability {\n+\n+  /**\n+   * Stable APIs that retain source and binary compatibility within a major release.\n+   * These interfaces can change from one major release to another major release\n+   * (e.g. from 1.0 to 2.0).\n+   */\n+  @Documented\n+  public @interface Stable {};\n+\n+  /**\n+   * APIs that are meant to evolve towards becoming stable APIs, but are not stable APIs yet.\n+   * Evolving interfaces can change from one feature release to another release (i.e. 2.1 to 2.2).\n+   */\n+  @Documented\n+  public @interface Evolving {};",
    "line": 41
  }, {
    "author": {
      "login": "vanzin"
    },
    "body": "In my view \"Evolving\" would mean \"this is sort of what the API will look like, there might be some adjustments in the next release, so you have to be willing to rev your code when the next release comes out\".\n\n\"Unstable\" means \"user at your own risk, API may even not really work, and can be deleted without notice\".\n",
    "commit": "f07605035bf8cfc071164c336366d4b256a4447f",
    "createdAt": "2016-10-07T17:28:16Z",
    "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.annotation;\n+\n+import java.lang.annotation.Documented;\n+\n+/**\n+ * Annotation to inform users of how much to rely on a particular package,\n+ * class or method not changing over time.\n+ */\n+public class InterfaceStability {\n+\n+  /**\n+   * Stable APIs that retain source and binary compatibility within a major release.\n+   * These interfaces can change from one major release to another major release\n+   * (e.g. from 1.0 to 2.0).\n+   */\n+  @Documented\n+  public @interface Stable {};\n+\n+  /**\n+   * APIs that are meant to evolve towards becoming stable APIs, but are not stable APIs yet.\n+   * Evolving interfaces can change from one feature release to another release (i.e. 2.1 to 2.2).\n+   */\n+  @Documented\n+  public @interface Evolving {};",
    "line": 41
  }],
  "prId": 15374
}]