[{
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "this isn't a public class, its package level visibility so I don't think we need to add another constructor here. ",
    "commit": "7e6b0762f37d389864a2ebe62a461bb86247c7ec",
    "createdAt": "2017-08-18T17:09:52Z",
    "diffHunk": "@@ -69,14 +77,26 @@\n   private CryptoCipher decryptor;\n \n   AuthEngine(String appId, String secret, TransportConf conf) throws GeneralSecurityException {\n+    this(appId, \"\",secret, conf);\n+  }\n+\n+  AuthEngine(String appId, String user, String secret, TransportConf conf) throws GeneralSecurityException {",
    "line": 40
  }],
  "prId": 18978
}, {
  "comments": [{
    "author": {
      "login": "tgravescs"
    },
    "body": "see comment in SparkSaslServer about making this common",
    "commit": "7e6b0762f37d389864a2ebe62a461bb86247c7ec",
    "createdAt": "2017-08-18T17:57:16Z",
    "diffHunk": "@@ -106,9 +127,22 @@ ClientChallenge challenge() throws GeneralSecurityException, IOException {\n    */\n   ServerResponse respond(ClientChallenge clientChallenge)\n     throws GeneralSecurityException, IOException {\n+    SecretKeySpec authKey;\n+    if (conf.isConnectionUsingTokens()) {\n+      // Create a secret from client's token identifier and AM's master key.\n+      ClientToAMTokenSecretManager secretManager = new ClientToAMTokenSecretManager(null,",
    "line": 75
  }],
  "prId": 18978
}]