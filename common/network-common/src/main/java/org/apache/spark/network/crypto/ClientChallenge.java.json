[{
  "comments": [{
    "author": {
      "login": "zsxwing"
    },
    "body": "nit: miss `final`",
    "commit": "39df4b312997e4c2f9bacfb9da2d5adaad8af509",
    "createdAt": "2017-01-20T23:58:50Z",
    "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.spark.network.crypto;\n+\n+import java.nio.ByteBuffer;\n+\n+import io.netty.buffer.ByteBuf;\n+import io.netty.buffer.Unpooled;\n+\n+import org.apache.spark.network.protocol.Encodable;\n+import org.apache.spark.network.protocol.Encoders;\n+\n+/**\n+ * The client challenge message, used to initiate authentication.\n+ *\n+ * @see README.md\n+ */\n+public class ClientChallenge implements Encodable {\n+  /** Serialization tag used to catch incorrect payloads. */\n+  private static final byte TAG_BYTE = (byte) 0xFA;\n+\n+  public final String appId;\n+  public final String kdf;\n+  public int iterations;"
  }],
  "prId": 16521
}]